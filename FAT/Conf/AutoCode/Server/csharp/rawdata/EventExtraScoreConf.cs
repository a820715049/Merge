// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventExtraScoreConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventExtraScoreConf.proto</summary>
  public static partial class EventExtraScoreConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventExtraScoreConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventExtraScoreConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiFyYXdkYXRhL0V2ZW50RXh0cmFTY29yZUNvbmYucHJvdG8SB3Jhd2RhdGEi",
            "sQEKD0V2ZW50RXh0cmFTY29yZRIKCgJpZBgBIAEoBRIXCg9idXlCdWJibGVG",
            "YWN0b3IYAiABKAUSFwoPYnV5TWFya2V0RmFjdG9yGAMgASgFEhMKC21lcmdl",
            "RmFjdG9yGAcgASgIEhMKC21pbkRpZmZSYXRlGAQgASgFEhwKFG9yZGVyTG93",
            "ZXJSaWdodFNjb3JlGAYgASgFEhgKEG9yZGVyU2NvcmVGYWN0b3IYBSABKAUi",
            "yAEKGUV2ZW50RXh0cmFTY29yZU1hcEFCVmFsdWUSVgoSRXZlbnRFeHRyYVNj",
            "b3JlTWFwGAEgAygLMjoucmF3ZGF0YS5FdmVudEV4dHJhU2NvcmVNYXBBQlZh",
            "bHVlLkV2ZW50RXh0cmFTY29yZU1hcEVudHJ5GlMKF0V2ZW50RXh0cmFTY29y",
            "ZU1hcEVudHJ5EgsKA2tleRgBIAEoBRInCgV2YWx1ZRgCIAEoCzIYLnJhd2Rh",
            "dGEuRXZlbnRFeHRyYVNjb3JlOgI4ASK5BAoTRXZlbnRFeHRyYVNjb3JlQ29u",
            "ZhJQChJFdmVudEV4dHJhU2NvcmVNYXAYASADKAsyNC5yYXdkYXRhLkV2ZW50",
            "RXh0cmFTY29yZUNvbmYuRXZlbnRFeHRyYVNjb3JlTWFwRW50cnkSVAoURXZl",
            "bnRFeHRyYVNjb3JlTWFwQUIYAiADKAsyNi5yYXdkYXRhLkV2ZW50RXh0cmFT",
            "Y29yZUNvbmYuRXZlbnRFeHRyYVNjb3JlTWFwQUJFbnRyeRJeChlFdmVudEV4",
            "dHJhU2NvcmVNYXBBQlBhdGNoGAMgAygLMjsucmF3ZGF0YS5FdmVudEV4dHJh",
            "U2NvcmVDb25mLkV2ZW50RXh0cmFTY29yZU1hcEFCUGF0Y2hFbnRyeRpTChdF",
            "dmVudEV4dHJhU2NvcmVNYXBFbnRyeRILCgNrZXkYASABKAUSJwoFdmFsdWUY",
            "AiABKAsyGC5yYXdkYXRhLkV2ZW50RXh0cmFTY29yZToCOAEaXwoZRXZlbnRF",
            "eHRyYVNjb3JlTWFwQUJFbnRyeRILCgNrZXkYASABKAkSMQoFdmFsdWUYAiAB",
            "KAsyIi5yYXdkYXRhLkV2ZW50RXh0cmFTY29yZU1hcEFCVmFsdWU6AjgBGmQK",
            "HkV2ZW50RXh0cmFTY29yZU1hcEFCUGF0Y2hFbnRyeRILCgNrZXkYASABKAkS",
            "MQoFdmFsdWUYAiABKAsyIi5yYXdkYXRhLkV2ZW50RXh0cmFTY29yZU1hcEFC",
            "VmFsdWU6AjgBQj1aLWdpdGxhYi5mdW5wbHVzLmlvL2ZhdC9jb25mL2dlbi9n",
            "b2xhbmcvcmF3ZGF0YaoCC2ZhdC5yYXdkYXRhYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventExtraScore), global::fat.rawdata.EventExtraScore.Parser, new[]{ "Id", "BuyBubbleFactor", "BuyMarketFactor", "MergeFactor", "MinDiffRate", "OrderLowerRightScore", "OrderScoreFactor" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventExtraScoreMapABValue), global::fat.rawdata.EventExtraScoreMapABValue.Parser, new[]{ "EventExtraScoreMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventExtraScoreConf), global::fat.rawdata.EventExtraScoreConf.Parser, new[]{ "EventExtraScoreMap", "EventExtraScoreMapAB", "EventExtraScoreMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventExtraScore",table="EventExtraScoreMap",table_wrapper="EventExtraScoreConf",map="true",map_key_type="int32",data="EventExtraScoreConf")
  /// annotation@ab(table_ab="EventExtraScoreMapAB",table_ab_patch="EventExtraScoreMapABPatch",table_ab_value="EventExtraScoreMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventExtraScore(id="id")
  /// </summary>
  public sealed partial class EventExtraScore : pb::IMessage<EventExtraScore>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventExtraScore> _parser = new pb::MessageParser<EventExtraScore>(() => new EventExtraScore());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventExtraScore> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventExtraScoreConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventExtraScore() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventExtraScore(EventExtraScore other) : this() {
      id_ = other.id_;
      buyBubbleFactor_ = other.buyBubbleFactor_;
      buyMarketFactor_ = other.buyMarketFactor_;
      mergeFactor_ = other.mergeFactor_;
      minDiffRate_ = other.minDiffRate_;
      orderLowerRightScore_ = other.orderLowerRightScore_;
      orderScoreFactor_ = other.orderScoreFactor_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventExtraScore Clone() {
      return new EventExtraScore(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 活动ID
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "buyBubbleFactor" field.</summary>
    public const int BuyBubbleFactorFieldNumber = 2;
    private int buyBubbleFactor_;
    /// <summary>
    /// 泡泡系数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BuyBubbleFactor {
      get { return buyBubbleFactor_; }
      set {
        buyBubbleFactor_ = value;
      }
    }

    /// <summary>Field number for the "buyMarketFactor" field.</summary>
    public const int BuyMarketFactorFieldNumber = 3;
    private int buyMarketFactor_;
    /// <summary>
    /// 商店系数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BuyMarketFactor {
      get { return buyMarketFactor_; }
      set {
        buyMarketFactor_ = value;
      }
    }

    /// <summary>Field number for the "mergeFactor" field.</summary>
    public const int MergeFactorFieldNumber = 7;
    private bool mergeFactor_;
    /// <summary>
    /// 是否不支持合成积分
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool MergeFactor {
      get { return mergeFactor_; }
      set {
        mergeFactor_ = value;
      }
    }

    /// <summary>Field number for the "minDiffRate" field.</summary>
    public const int MinDiffRateFieldNumber = 4;
    private int minDiffRate_;
    /// <summary>
    /// 最低付出与实际难度比
    /// （百分数）
    /// 付出难度/实际难度最小为67%
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MinDiffRate {
      get { return minDiffRate_; }
      set {
        minDiffRate_ = value;
      }
    }

    /// <summary>Field number for the "orderLowerRightScore" field.</summary>
    public const int OrderLowerRightScoreFieldNumber = 6;
    private int orderLowerRightScore_;
    /// <summary>
    /// 积分计算= 订单积分系数/100*(实际难度/100)*付出与实际难度比%
    /// 向下取整（小于1时，显示1）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int OrderLowerRightScore {
      get { return orderLowerRightScore_; }
      set {
        orderLowerRightScore_ = value;
      }
    }

    /// <summary>Field number for the "orderScoreFactor" field.</summary>
    public const int OrderScoreFactorFieldNumber = 5;
    private int orderScoreFactor_;
    /// <summary>
    /// (ObjBasic.id:订单积分系数:计算方式)
    /// = 订单积分系数/100*(实际难度/100)*付出与实际难度比%（RoundScore取整）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int OrderScoreFactor {
      get { return orderScoreFactor_; }
      set {
        orderScoreFactor_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventExtraScore);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventExtraScore other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (BuyBubbleFactor != other.BuyBubbleFactor) return false;
      if (BuyMarketFactor != other.BuyMarketFactor) return false;
      if (MergeFactor != other.MergeFactor) return false;
      if (MinDiffRate != other.MinDiffRate) return false;
      if (OrderLowerRightScore != other.OrderLowerRightScore) return false;
      if (OrderScoreFactor != other.OrderScoreFactor) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (BuyBubbleFactor != 0) hash ^= BuyBubbleFactor.GetHashCode();
      if (BuyMarketFactor != 0) hash ^= BuyMarketFactor.GetHashCode();
      if (MergeFactor != false) hash ^= MergeFactor.GetHashCode();
      if (MinDiffRate != 0) hash ^= MinDiffRate.GetHashCode();
      if (OrderLowerRightScore != 0) hash ^= OrderLowerRightScore.GetHashCode();
      if (OrderScoreFactor != 0) hash ^= OrderScoreFactor.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (BuyBubbleFactor != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BuyBubbleFactor);
      }
      if (BuyMarketFactor != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(BuyMarketFactor);
      }
      if (MinDiffRate != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(MinDiffRate);
      }
      if (OrderScoreFactor != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(OrderScoreFactor);
      }
      if (OrderLowerRightScore != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(OrderLowerRightScore);
      }
      if (MergeFactor != false) {
        output.WriteRawTag(56);
        output.WriteBool(MergeFactor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (BuyBubbleFactor != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BuyBubbleFactor);
      }
      if (BuyMarketFactor != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(BuyMarketFactor);
      }
      if (MinDiffRate != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(MinDiffRate);
      }
      if (OrderScoreFactor != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(OrderScoreFactor);
      }
      if (OrderLowerRightScore != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(OrderLowerRightScore);
      }
      if (MergeFactor != false) {
        output.WriteRawTag(56);
        output.WriteBool(MergeFactor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (BuyBubbleFactor != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BuyBubbleFactor);
      }
      if (BuyMarketFactor != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BuyMarketFactor);
      }
      if (MergeFactor != false) {
        size += 1 + 1;
      }
      if (MinDiffRate != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MinDiffRate);
      }
      if (OrderLowerRightScore != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OrderLowerRightScore);
      }
      if (OrderScoreFactor != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OrderScoreFactor);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventExtraScore other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.BuyBubbleFactor != 0) {
        BuyBubbleFactor = other.BuyBubbleFactor;
      }
      if (other.BuyMarketFactor != 0) {
        BuyMarketFactor = other.BuyMarketFactor;
      }
      if (other.MergeFactor != false) {
        MergeFactor = other.MergeFactor;
      }
      if (other.MinDiffRate != 0) {
        MinDiffRate = other.MinDiffRate;
      }
      if (other.OrderLowerRightScore != 0) {
        OrderLowerRightScore = other.OrderLowerRightScore;
      }
      if (other.OrderScoreFactor != 0) {
        OrderScoreFactor = other.OrderScoreFactor;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            BuyBubbleFactor = input.ReadInt32();
            break;
          }
          case 24: {
            BuyMarketFactor = input.ReadInt32();
            break;
          }
          case 32: {
            MinDiffRate = input.ReadInt32();
            break;
          }
          case 40: {
            OrderScoreFactor = input.ReadInt32();
            break;
          }
          case 48: {
            OrderLowerRightScore = input.ReadInt32();
            break;
          }
          case 56: {
            MergeFactor = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            BuyBubbleFactor = input.ReadInt32();
            break;
          }
          case 24: {
            BuyMarketFactor = input.ReadInt32();
            break;
          }
          case 32: {
            MinDiffRate = input.ReadInt32();
            break;
          }
          case 40: {
            OrderScoreFactor = input.ReadInt32();
            break;
          }
          case 48: {
            OrderLowerRightScore = input.ReadInt32();
            break;
          }
          case 56: {
            MergeFactor = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventExtraScoreMapABValue : pb::IMessage<EventExtraScoreMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventExtraScoreMapABValue> _parser = new pb::MessageParser<EventExtraScoreMapABValue>(() => new EventExtraScoreMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventExtraScoreMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventExtraScoreConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventExtraScoreMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventExtraScoreMapABValue(EventExtraScoreMapABValue other) : this() {
      eventExtraScoreMap_ = other.eventExtraScoreMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventExtraScoreMapABValue Clone() {
      return new EventExtraScoreMapABValue(this);
    }

    /// <summary>Field number for the "EventExtraScoreMap" field.</summary>
    public const int EventExtraScoreMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventExtraScore>.Codec _map_eventExtraScoreMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventExtraScore>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventExtraScore.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventExtraScore> eventExtraScoreMap_ = new pbc::MapField<int, global::fat.rawdata.EventExtraScore>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventExtraScore> EventExtraScoreMap {
      get { return eventExtraScoreMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventExtraScoreMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventExtraScoreMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventExtraScoreMap.Equals(other.EventExtraScoreMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventExtraScoreMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventExtraScoreMap_.WriteTo(output, _map_eventExtraScoreMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventExtraScoreMap_.WriteTo(ref output, _map_eventExtraScoreMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventExtraScoreMap_.CalculateSize(_map_eventExtraScoreMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventExtraScoreMapABValue other) {
      if (other == null) {
        return;
      }
      eventExtraScoreMap_.Add(other.eventExtraScoreMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventExtraScoreMap_.AddEntriesFrom(input, _map_eventExtraScoreMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventExtraScoreMap_.AddEntriesFrom(ref input, _map_eventExtraScoreMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventExtraScoreConf : pb::IMessage<EventExtraScoreConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventExtraScoreConf> _parser = new pb::MessageParser<EventExtraScoreConf>(() => new EventExtraScoreConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventExtraScoreConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventExtraScoreConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventExtraScoreConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventExtraScoreConf(EventExtraScoreConf other) : this() {
      eventExtraScoreMap_ = other.eventExtraScoreMap_.Clone();
      eventExtraScoreMapAB_ = other.eventExtraScoreMapAB_.Clone();
      eventExtraScoreMapABPatch_ = other.eventExtraScoreMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventExtraScoreConf Clone() {
      return new EventExtraScoreConf(this);
    }

    /// <summary>Field number for the "EventExtraScoreMap" field.</summary>
    public const int EventExtraScoreMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventExtraScore>.Codec _map_eventExtraScoreMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventExtraScore>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventExtraScore.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventExtraScore> eventExtraScoreMap_ = new pbc::MapField<int, global::fat.rawdata.EventExtraScore>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventExtraScore> EventExtraScoreMap {
      get { return eventExtraScoreMap_; }
    }

    /// <summary>Field number for the "EventExtraScoreMapAB" field.</summary>
    public const int EventExtraScoreMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventExtraScoreMapABValue>.Codec _map_eventExtraScoreMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventExtraScoreMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventExtraScoreMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventExtraScoreMapABValue> eventExtraScoreMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventExtraScoreMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventExtraScoreMapABValue> EventExtraScoreMapAB {
      get { return eventExtraScoreMapAB_; }
    }

    /// <summary>Field number for the "EventExtraScoreMapABPatch" field.</summary>
    public const int EventExtraScoreMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventExtraScoreMapABValue>.Codec _map_eventExtraScoreMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventExtraScoreMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventExtraScoreMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventExtraScoreMapABValue> eventExtraScoreMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventExtraScoreMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventExtraScoreMapABValue> EventExtraScoreMapABPatch {
      get { return eventExtraScoreMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventExtraScoreConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventExtraScoreConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventExtraScoreMap.Equals(other.EventExtraScoreMap)) return false;
      if (!EventExtraScoreMapAB.Equals(other.EventExtraScoreMapAB)) return false;
      if (!EventExtraScoreMapABPatch.Equals(other.EventExtraScoreMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventExtraScoreMap.GetHashCode();
      hash ^= EventExtraScoreMapAB.GetHashCode();
      hash ^= EventExtraScoreMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventExtraScoreMap_.WriteTo(output, _map_eventExtraScoreMap_codec);
      eventExtraScoreMapAB_.WriteTo(output, _map_eventExtraScoreMapAB_codec);
      eventExtraScoreMapABPatch_.WriteTo(output, _map_eventExtraScoreMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventExtraScoreMap_.WriteTo(ref output, _map_eventExtraScoreMap_codec);
      eventExtraScoreMapAB_.WriteTo(ref output, _map_eventExtraScoreMapAB_codec);
      eventExtraScoreMapABPatch_.WriteTo(ref output, _map_eventExtraScoreMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventExtraScoreMap_.CalculateSize(_map_eventExtraScoreMap_codec);
      size += eventExtraScoreMapAB_.CalculateSize(_map_eventExtraScoreMapAB_codec);
      size += eventExtraScoreMapABPatch_.CalculateSize(_map_eventExtraScoreMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventExtraScoreConf other) {
      if (other == null) {
        return;
      }
      eventExtraScoreMap_.Add(other.eventExtraScoreMap_);
      eventExtraScoreMapAB_.Add(other.eventExtraScoreMapAB_);
      eventExtraScoreMapABPatch_.Add(other.eventExtraScoreMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventExtraScoreMap_.AddEntriesFrom(input, _map_eventExtraScoreMap_codec);
            break;
          }
          case 18: {
            eventExtraScoreMapAB_.AddEntriesFrom(input, _map_eventExtraScoreMapAB_codec);
            break;
          }
          case 26: {
            eventExtraScoreMapABPatch_.AddEntriesFrom(input, _map_eventExtraScoreMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventExtraScoreMap_.AddEntriesFrom(ref input, _map_eventExtraScoreMap_codec);
            break;
          }
          case 18: {
            eventExtraScoreMapAB_.AddEntriesFrom(ref input, _map_eventExtraScoreMapAB_codec);
            break;
          }
          case 26: {
            eventExtraScoreMapABPatch_.AddEntriesFrom(ref input, _map_eventExtraScoreMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
