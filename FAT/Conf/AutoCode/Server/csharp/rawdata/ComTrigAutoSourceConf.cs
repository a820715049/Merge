// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/ComTrigAutoSourceConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/ComTrigAutoSourceConf.proto</summary>
  public static partial class ComTrigAutoSourceConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/ComTrigAutoSourceConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ComTrigAutoSourceConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiNyYXdkYXRhL0NvbVRyaWdBdXRvU291cmNlQ29uZi5wcm90bxIHcmF3ZGF0",
            "YRoacmF3ZGF0YS9GZWF0dXJlRW50cnkucHJvdG8irwEKEUNvbVRyaWdBdXRv",
            "U291cmNlEgoKAmlkGAEgASgFEhMKC2Nvc3RUb2tlbklkGAYgASgFEhQKDGNv",
            "c3RUb2tlbk51bRgHIAEoBRIQCghjb3ZlclBuZxgCIAMoCRIPCgdkaWVJbnRv",
            "GAMgASgFEisKDGZlYXR1cmVFbnRyeRgIIAEoDjIVLnJhd2RhdGEuRmVhdHVy",
            "ZUVudHJ5EhMKC3RyaWdnZXJJbmZvGAUgAygFItQBChtDb21UcmlnQXV0b1Nv",
            "dXJjZU1hcEFCVmFsdWUSXAoUQ29tVHJpZ0F1dG9Tb3VyY2VNYXAYASADKAsy",
            "Pi5yYXdkYXRhLkNvbVRyaWdBdXRvU291cmNlTWFwQUJWYWx1ZS5Db21Ucmln",
            "QXV0b1NvdXJjZU1hcEVudHJ5GlcKGUNvbVRyaWdBdXRvU291cmNlTWFwRW50",
            "cnkSCwoDa2V5GAEgASgFEikKBXZhbHVlGAIgASgLMhoucmF3ZGF0YS5Db21U",
            "cmlnQXV0b1NvdXJjZToCOAEi2QQKFUNvbVRyaWdBdXRvU291cmNlQ29uZhJW",
            "ChRDb21UcmlnQXV0b1NvdXJjZU1hcBgBIAMoCzI4LnJhd2RhdGEuQ29tVHJp",
            "Z0F1dG9Tb3VyY2VDb25mLkNvbVRyaWdBdXRvU291cmNlTWFwRW50cnkSWgoW",
            "Q29tVHJpZ0F1dG9Tb3VyY2VNYXBBQhgCIAMoCzI6LnJhd2RhdGEuQ29tVHJp",
            "Z0F1dG9Tb3VyY2VDb25mLkNvbVRyaWdBdXRvU291cmNlTWFwQUJFbnRyeRJk",
            "ChtDb21UcmlnQXV0b1NvdXJjZU1hcEFCUGF0Y2gYAyADKAsyPy5yYXdkYXRh",
            "LkNvbVRyaWdBdXRvU291cmNlQ29uZi5Db21UcmlnQXV0b1NvdXJjZU1hcEFC",
            "UGF0Y2hFbnRyeRpXChlDb21UcmlnQXV0b1NvdXJjZU1hcEVudHJ5EgsKA2tl",
            "eRgBIAEoBRIpCgV2YWx1ZRgCIAEoCzIaLnJhd2RhdGEuQ29tVHJpZ0F1dG9T",
            "b3VyY2U6AjgBGmMKG0NvbVRyaWdBdXRvU291cmNlTWFwQUJFbnRyeRILCgNr",
            "ZXkYASABKAkSMwoFdmFsdWUYAiABKAsyJC5yYXdkYXRhLkNvbVRyaWdBdXRv",
            "U291cmNlTWFwQUJWYWx1ZToCOAEaaAogQ29tVHJpZ0F1dG9Tb3VyY2VNYXBB",
            "QlBhdGNoRW50cnkSCwoDa2V5GAEgASgJEjMKBXZhbHVlGAIgASgLMiQucmF3",
            "ZGF0YS5Db21UcmlnQXV0b1NvdXJjZU1hcEFCVmFsdWU6AjgBQj1aLWdpdGxh",
            "Yi5mdW5wbHVzLmlvL2ZhdC9jb25mL2dlbi9nb2xhbmcvcmF3ZGF0YaoCC2Zh",
            "dC5yYXdkYXRhYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::fat.rawdata.FeatureEntryReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.ComTrigAutoSource), global::fat.rawdata.ComTrigAutoSource.Parser, new[]{ "Id", "CostTokenId", "CostTokenNum", "CoverPng", "DieInto", "FeatureEntry", "TriggerInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.ComTrigAutoSourceMapABValue), global::fat.rawdata.ComTrigAutoSourceMapABValue.Parser, new[]{ "ComTrigAutoSourceMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.ComTrigAutoSourceConf), global::fat.rawdata.ComTrigAutoSourceConf.Parser, new[]{ "ComTrigAutoSourceMap", "ComTrigAutoSourceMapAB", "ComTrigAutoSourceMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="ComTrigAutoSource",table="ComTrigAutoSourceMap",table_wrapper="ComTrigAutoSourceConf",map="true",map_key_type="int32",data="ComTrigAutoSourceConf")
  /// annotation@ab(table_ab="ComTrigAutoSourceMapAB",table_ab_patch="ComTrigAutoSourceMapABPatch",table_ab_value="ComTrigAutoSourceMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@ComTrigAutoSource(id="id")
  /// </summary>
  public sealed partial class ComTrigAutoSource : pb::IMessage<ComTrigAutoSource>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ComTrigAutoSource> _parser = new pb::MessageParser<ComTrigAutoSource>(() => new ComTrigAutoSource());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ComTrigAutoSource> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.ComTrigAutoSourceConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComTrigAutoSource() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComTrigAutoSource(ComTrigAutoSource other) : this() {
      id_ = other.id_;
      costTokenId_ = other.costTokenId_;
      costTokenNum_ = other.costTokenNum_;
      coverPng_ = other.coverPng_.Clone();
      dieInto_ = other.dieInto_;
      featureEntry_ = other.featureEntry_;
      triggerInfo_ = other.triggerInfo_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComTrigAutoSource Clone() {
      return new ComTrigAutoSource(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 合成物品id
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "costTokenId" field.</summary>
    public const int CostTokenIdFieldNumber = 6;
    private int costTokenId_;
    /// <summary>
    /// 消耗 tokenid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CostTokenId {
      get { return costTokenId_; }
      set {
        costTokenId_ = value;
      }
    }

    /// <summary>Field number for the "costTokenNum" field.</summary>
    public const int CostTokenNumFieldNumber = 7;
    private int costTokenNum_;
    /// <summary>
    /// token 消耗数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CostTokenNum {
      get { return costTokenNum_; }
      set {
        costTokenNum_ = value;
      }
    }

    /// <summary>Field number for the "coverPng" field.</summary>
    public const int CoverPngFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_coverPng_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> coverPng_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 覆盖png
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> CoverPng {
      get { return coverPng_; }
    }

    /// <summary>Field number for the "dieInto" field.</summary>
    public const int DieIntoFieldNumber = 3;
    private int dieInto_;
    /// <summary>
    /// 死后变成
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DieInto {
      get { return dieInto_; }
      set {
        dieInto_ = value;
      }
    }

    /// <summary>Field number for the "featureEntry" field.</summary>
    public const int FeatureEntryFieldNumber = 8;
    private global::fat.rawdata.FeatureEntry featureEntry_ = global::fat.rawdata.FeatureEntry.FeatureNone;
    /// <summary>
    /// feature
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::fat.rawdata.FeatureEntry FeatureEntry {
      get { return featureEntry_; }
      set {
        featureEntry_ = value;
      }
    }

    /// <summary>Field number for the "triggerInfo" field.</summary>
    public const int TriggerInfoFieldNumber = 5;
    private static readonly pb::FieldCodec<int> _repeated_triggerInfo_codec
        = pb::FieldCodec.ForInt32(42);
    private readonly pbc::RepeatedField<int> triggerInfo_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 触发详情
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> TriggerInfo {
      get { return triggerInfo_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ComTrigAutoSource);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ComTrigAutoSource other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (CostTokenId != other.CostTokenId) return false;
      if (CostTokenNum != other.CostTokenNum) return false;
      if(!coverPng_.Equals(other.coverPng_)) return false;
      if (DieInto != other.DieInto) return false;
      if (FeatureEntry != other.FeatureEntry) return false;
      if(!triggerInfo_.Equals(other.triggerInfo_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (CostTokenId != 0) hash ^= CostTokenId.GetHashCode();
      if (CostTokenNum != 0) hash ^= CostTokenNum.GetHashCode();
      hash ^= coverPng_.GetHashCode();
      if (DieInto != 0) hash ^= DieInto.GetHashCode();
      if (FeatureEntry != global::fat.rawdata.FeatureEntry.FeatureNone) hash ^= FeatureEntry.GetHashCode();
      hash ^= triggerInfo_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      coverPng_.WriteTo(output, _repeated_coverPng_codec);
      if (DieInto != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(DieInto);
      }
      triggerInfo_.WriteTo(output, _repeated_triggerInfo_codec);
      if (CostTokenId != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(CostTokenId);
      }
      if (CostTokenNum != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(CostTokenNum);
      }
      if (FeatureEntry != global::fat.rawdata.FeatureEntry.FeatureNone) {
        output.WriteRawTag(64);
        output.WriteEnum((int) FeatureEntry);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      coverPng_.WriteTo(ref output, _repeated_coverPng_codec);
      if (DieInto != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(DieInto);
      }
      triggerInfo_.WriteTo(ref output, _repeated_triggerInfo_codec);
      if (CostTokenId != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(CostTokenId);
      }
      if (CostTokenNum != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(CostTokenNum);
      }
      if (FeatureEntry != global::fat.rawdata.FeatureEntry.FeatureNone) {
        output.WriteRawTag(64);
        output.WriteEnum((int) FeatureEntry);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (CostTokenId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CostTokenId);
      }
      if (CostTokenNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CostTokenNum);
      }
      size += coverPng_.CalculateSize(_repeated_coverPng_codec);
      if (DieInto != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DieInto);
      }
      if (FeatureEntry != global::fat.rawdata.FeatureEntry.FeatureNone) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) FeatureEntry);
      }
      size += triggerInfo_.CalculateSize(_repeated_triggerInfo_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ComTrigAutoSource other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.CostTokenId != 0) {
        CostTokenId = other.CostTokenId;
      }
      if (other.CostTokenNum != 0) {
        CostTokenNum = other.CostTokenNum;
      }
      coverPng_.Add(other.coverPng_);
      if (other.DieInto != 0) {
        DieInto = other.DieInto;
      }
      if (other.FeatureEntry != global::fat.rawdata.FeatureEntry.FeatureNone) {
        FeatureEntry = other.FeatureEntry;
      }
      triggerInfo_.Add(other.triggerInfo_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            coverPng_.AddEntriesFrom(input, _repeated_coverPng_codec);
            break;
          }
          case 24: {
            DieInto = input.ReadInt32();
            break;
          }
          case 42:
          case 40: {
            triggerInfo_.AddEntriesFrom(input, _repeated_triggerInfo_codec);
            break;
          }
          case 48: {
            CostTokenId = input.ReadInt32();
            break;
          }
          case 56: {
            CostTokenNum = input.ReadInt32();
            break;
          }
          case 64: {
            FeatureEntry = (global::fat.rawdata.FeatureEntry) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            coverPng_.AddEntriesFrom(ref input, _repeated_coverPng_codec);
            break;
          }
          case 24: {
            DieInto = input.ReadInt32();
            break;
          }
          case 42:
          case 40: {
            triggerInfo_.AddEntriesFrom(ref input, _repeated_triggerInfo_codec);
            break;
          }
          case 48: {
            CostTokenId = input.ReadInt32();
            break;
          }
          case 56: {
            CostTokenNum = input.ReadInt32();
            break;
          }
          case 64: {
            FeatureEntry = (global::fat.rawdata.FeatureEntry) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ComTrigAutoSourceMapABValue : pb::IMessage<ComTrigAutoSourceMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ComTrigAutoSourceMapABValue> _parser = new pb::MessageParser<ComTrigAutoSourceMapABValue>(() => new ComTrigAutoSourceMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ComTrigAutoSourceMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.ComTrigAutoSourceConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComTrigAutoSourceMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComTrigAutoSourceMapABValue(ComTrigAutoSourceMapABValue other) : this() {
      comTrigAutoSourceMap_ = other.comTrigAutoSourceMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComTrigAutoSourceMapABValue Clone() {
      return new ComTrigAutoSourceMapABValue(this);
    }

    /// <summary>Field number for the "ComTrigAutoSourceMap" field.</summary>
    public const int ComTrigAutoSourceMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.ComTrigAutoSource>.Codec _map_comTrigAutoSourceMap_codec
        = new pbc::MapField<int, global::fat.rawdata.ComTrigAutoSource>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ComTrigAutoSource.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.ComTrigAutoSource> comTrigAutoSourceMap_ = new pbc::MapField<int, global::fat.rawdata.ComTrigAutoSource>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.ComTrigAutoSource> ComTrigAutoSourceMap {
      get { return comTrigAutoSourceMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ComTrigAutoSourceMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ComTrigAutoSourceMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!ComTrigAutoSourceMap.Equals(other.ComTrigAutoSourceMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ComTrigAutoSourceMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      comTrigAutoSourceMap_.WriteTo(output, _map_comTrigAutoSourceMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      comTrigAutoSourceMap_.WriteTo(ref output, _map_comTrigAutoSourceMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += comTrigAutoSourceMap_.CalculateSize(_map_comTrigAutoSourceMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ComTrigAutoSourceMapABValue other) {
      if (other == null) {
        return;
      }
      comTrigAutoSourceMap_.Add(other.comTrigAutoSourceMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            comTrigAutoSourceMap_.AddEntriesFrom(input, _map_comTrigAutoSourceMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            comTrigAutoSourceMap_.AddEntriesFrom(ref input, _map_comTrigAutoSourceMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ComTrigAutoSourceConf : pb::IMessage<ComTrigAutoSourceConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ComTrigAutoSourceConf> _parser = new pb::MessageParser<ComTrigAutoSourceConf>(() => new ComTrigAutoSourceConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ComTrigAutoSourceConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.ComTrigAutoSourceConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComTrigAutoSourceConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComTrigAutoSourceConf(ComTrigAutoSourceConf other) : this() {
      comTrigAutoSourceMap_ = other.comTrigAutoSourceMap_.Clone();
      comTrigAutoSourceMapAB_ = other.comTrigAutoSourceMapAB_.Clone();
      comTrigAutoSourceMapABPatch_ = other.comTrigAutoSourceMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComTrigAutoSourceConf Clone() {
      return new ComTrigAutoSourceConf(this);
    }

    /// <summary>Field number for the "ComTrigAutoSourceMap" field.</summary>
    public const int ComTrigAutoSourceMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.ComTrigAutoSource>.Codec _map_comTrigAutoSourceMap_codec
        = new pbc::MapField<int, global::fat.rawdata.ComTrigAutoSource>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ComTrigAutoSource.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.ComTrigAutoSource> comTrigAutoSourceMap_ = new pbc::MapField<int, global::fat.rawdata.ComTrigAutoSource>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.ComTrigAutoSource> ComTrigAutoSourceMap {
      get { return comTrigAutoSourceMap_; }
    }

    /// <summary>Field number for the "ComTrigAutoSourceMapAB" field.</summary>
    public const int ComTrigAutoSourceMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.ComTrigAutoSourceMapABValue>.Codec _map_comTrigAutoSourceMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.ComTrigAutoSourceMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ComTrigAutoSourceMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.ComTrigAutoSourceMapABValue> comTrigAutoSourceMapAB_ = new pbc::MapField<string, global::fat.rawdata.ComTrigAutoSourceMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.ComTrigAutoSourceMapABValue> ComTrigAutoSourceMapAB {
      get { return comTrigAutoSourceMapAB_; }
    }

    /// <summary>Field number for the "ComTrigAutoSourceMapABPatch" field.</summary>
    public const int ComTrigAutoSourceMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.ComTrigAutoSourceMapABValue>.Codec _map_comTrigAutoSourceMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.ComTrigAutoSourceMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ComTrigAutoSourceMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.ComTrigAutoSourceMapABValue> comTrigAutoSourceMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.ComTrigAutoSourceMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.ComTrigAutoSourceMapABValue> ComTrigAutoSourceMapABPatch {
      get { return comTrigAutoSourceMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ComTrigAutoSourceConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ComTrigAutoSourceConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!ComTrigAutoSourceMap.Equals(other.ComTrigAutoSourceMap)) return false;
      if (!ComTrigAutoSourceMapAB.Equals(other.ComTrigAutoSourceMapAB)) return false;
      if (!ComTrigAutoSourceMapABPatch.Equals(other.ComTrigAutoSourceMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ComTrigAutoSourceMap.GetHashCode();
      hash ^= ComTrigAutoSourceMapAB.GetHashCode();
      hash ^= ComTrigAutoSourceMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      comTrigAutoSourceMap_.WriteTo(output, _map_comTrigAutoSourceMap_codec);
      comTrigAutoSourceMapAB_.WriteTo(output, _map_comTrigAutoSourceMapAB_codec);
      comTrigAutoSourceMapABPatch_.WriteTo(output, _map_comTrigAutoSourceMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      comTrigAutoSourceMap_.WriteTo(ref output, _map_comTrigAutoSourceMap_codec);
      comTrigAutoSourceMapAB_.WriteTo(ref output, _map_comTrigAutoSourceMapAB_codec);
      comTrigAutoSourceMapABPatch_.WriteTo(ref output, _map_comTrigAutoSourceMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += comTrigAutoSourceMap_.CalculateSize(_map_comTrigAutoSourceMap_codec);
      size += comTrigAutoSourceMapAB_.CalculateSize(_map_comTrigAutoSourceMapAB_codec);
      size += comTrigAutoSourceMapABPatch_.CalculateSize(_map_comTrigAutoSourceMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ComTrigAutoSourceConf other) {
      if (other == null) {
        return;
      }
      comTrigAutoSourceMap_.Add(other.comTrigAutoSourceMap_);
      comTrigAutoSourceMapAB_.Add(other.comTrigAutoSourceMapAB_);
      comTrigAutoSourceMapABPatch_.Add(other.comTrigAutoSourceMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            comTrigAutoSourceMap_.AddEntriesFrom(input, _map_comTrigAutoSourceMap_codec);
            break;
          }
          case 18: {
            comTrigAutoSourceMapAB_.AddEntriesFrom(input, _map_comTrigAutoSourceMapAB_codec);
            break;
          }
          case 26: {
            comTrigAutoSourceMapABPatch_.AddEntriesFrom(input, _map_comTrigAutoSourceMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            comTrigAutoSourceMap_.AddEntriesFrom(ref input, _map_comTrigAutoSourceMap_codec);
            break;
          }
          case 18: {
            comTrigAutoSourceMapAB_.AddEntriesFrom(ref input, _map_comTrigAutoSourceMapAB_codec);
            break;
          }
          case 26: {
            comTrigAutoSourceMapABPatch_.AddEntriesFrom(ref input, _map_comTrigAutoSourceMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
