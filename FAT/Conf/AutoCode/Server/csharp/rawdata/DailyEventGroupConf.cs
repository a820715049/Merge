// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/DailyEventGroupConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/DailyEventGroupConf.proto</summary>
  public static partial class DailyEventGroupConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/DailyEventGroupConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DailyEventGroupConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiFyYXdkYXRhL0RhaWx5RXZlbnRHcm91cENvbmYucHJvdG8SB3Jhd2RhdGEi",
            "WwoPRGFpbHlFdmVudEdyb3VwEgoKAmlkGAEgASgFEhMKC2dyb3VwUmV3YXJk",
            "GAIgASgJEhAKCGljb25TaG93GAUgAygJEhUKDWluY2x1ZGVUYXNrSWQYAyAD",
            "KAUiyAEKGURhaWx5RXZlbnRHcm91cE1hcEFCVmFsdWUSVgoSRGFpbHlFdmVu",
            "dEdyb3VwTWFwGAEgAygLMjoucmF3ZGF0YS5EYWlseUV2ZW50R3JvdXBNYXBB",
            "QlZhbHVlLkRhaWx5RXZlbnRHcm91cE1hcEVudHJ5GlMKF0RhaWx5RXZlbnRH",
            "cm91cE1hcEVudHJ5EgsKA2tleRgBIAEoBRInCgV2YWx1ZRgCIAEoCzIYLnJh",
            "d2RhdGEuRGFpbHlFdmVudEdyb3VwOgI4ASK5BAoTRGFpbHlFdmVudEdyb3Vw",
            "Q29uZhJQChJEYWlseUV2ZW50R3JvdXBNYXAYASADKAsyNC5yYXdkYXRhLkRh",
            "aWx5RXZlbnRHcm91cENvbmYuRGFpbHlFdmVudEdyb3VwTWFwRW50cnkSVAoU",
            "RGFpbHlFdmVudEdyb3VwTWFwQUIYAiADKAsyNi5yYXdkYXRhLkRhaWx5RXZl",
            "bnRHcm91cENvbmYuRGFpbHlFdmVudEdyb3VwTWFwQUJFbnRyeRJeChlEYWls",
            "eUV2ZW50R3JvdXBNYXBBQlBhdGNoGAMgAygLMjsucmF3ZGF0YS5EYWlseUV2",
            "ZW50R3JvdXBDb25mLkRhaWx5RXZlbnRHcm91cE1hcEFCUGF0Y2hFbnRyeRpT",
            "ChdEYWlseUV2ZW50R3JvdXBNYXBFbnRyeRILCgNrZXkYASABKAUSJwoFdmFs",
            "dWUYAiABKAsyGC5yYXdkYXRhLkRhaWx5RXZlbnRHcm91cDoCOAEaXwoZRGFp",
            "bHlFdmVudEdyb3VwTWFwQUJFbnRyeRILCgNrZXkYASABKAkSMQoFdmFsdWUY",
            "AiABKAsyIi5yYXdkYXRhLkRhaWx5RXZlbnRHcm91cE1hcEFCVmFsdWU6AjgB",
            "GmQKHkRhaWx5RXZlbnRHcm91cE1hcEFCUGF0Y2hFbnRyeRILCgNrZXkYASAB",
            "KAkSMQoFdmFsdWUYAiABKAsyIi5yYXdkYXRhLkRhaWx5RXZlbnRHcm91cE1h",
            "cEFCVmFsdWU6AjgBQj1aLWdpdGxhYi5mdW5wbHVzLmlvL2ZhdC9jb25mL2dl",
            "bi9nb2xhbmcvcmF3ZGF0YaoCC2ZhdC5yYXdkYXRhYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.DailyEventGroup), global::fat.rawdata.DailyEventGroup.Parser, new[]{ "Id", "GroupReward", "IconShow", "IncludeTaskId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.DailyEventGroupMapABValue), global::fat.rawdata.DailyEventGroupMapABValue.Parser, new[]{ "DailyEventGroupMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.DailyEventGroupConf), global::fat.rawdata.DailyEventGroupConf.Parser, new[]{ "DailyEventGroupMap", "DailyEventGroupMapAB", "DailyEventGroupMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="DailyEventGroup",table="DailyEventGroupMap",table_wrapper="DailyEventGroupConf",map="true",map_key_type="int32",data="DailyEventGroupConf")
  /// annotation@ab(table_ab="DailyEventGroupMapAB",table_ab_patch="DailyEventGroupMapABPatch",table_ab_value="DailyEventGroupMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@DailyEventGroup(id="id")
  /// </summary>
  public sealed partial class DailyEventGroup : pb::IMessage<DailyEventGroup>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DailyEventGroup> _parser = new pb::MessageParser<DailyEventGroup>(() => new DailyEventGroup());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DailyEventGroup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.DailyEventGroupConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DailyEventGroup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DailyEventGroup(DailyEventGroup other) : this() {
      id_ = other.id_;
      groupReward_ = other.groupReward_;
      iconShow_ = other.iconShow_.Clone();
      includeTaskId_ = other.includeTaskId_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DailyEventGroup Clone() {
      return new DailyEventGroup(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 每日任务组ID
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "groupReward" field.</summary>
    public const int GroupRewardFieldNumber = 2;
    private string groupReward_ = "";
    /// <summary>
    /// 任务组奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupReward {
      get { return groupReward_; }
      set {
        groupReward_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "iconShow" field.</summary>
    public const int IconShowFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_iconShow_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> iconShow_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 入口展示的奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> IconShow {
      get { return iconShow_; }
    }

    /// <summary>Field number for the "includeTaskId" field.</summary>
    public const int IncludeTaskIdFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_includeTaskId_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> includeTaskId_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 包含任务
    /// （DailyEventTask.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> IncludeTaskId {
      get { return includeTaskId_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DailyEventGroup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DailyEventGroup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (GroupReward != other.GroupReward) return false;
      if(!iconShow_.Equals(other.iconShow_)) return false;
      if(!includeTaskId_.Equals(other.includeTaskId_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (GroupReward.Length != 0) hash ^= GroupReward.GetHashCode();
      hash ^= iconShow_.GetHashCode();
      hash ^= includeTaskId_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (GroupReward.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GroupReward);
      }
      includeTaskId_.WriteTo(output, _repeated_includeTaskId_codec);
      iconShow_.WriteTo(output, _repeated_iconShow_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (GroupReward.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GroupReward);
      }
      includeTaskId_.WriteTo(ref output, _repeated_includeTaskId_codec);
      iconShow_.WriteTo(ref output, _repeated_iconShow_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (GroupReward.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupReward);
      }
      size += iconShow_.CalculateSize(_repeated_iconShow_codec);
      size += includeTaskId_.CalculateSize(_repeated_includeTaskId_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DailyEventGroup other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.GroupReward.Length != 0) {
        GroupReward = other.GroupReward;
      }
      iconShow_.Add(other.iconShow_);
      includeTaskId_.Add(other.includeTaskId_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            GroupReward = input.ReadString();
            break;
          }
          case 26:
          case 24: {
            includeTaskId_.AddEntriesFrom(input, _repeated_includeTaskId_codec);
            break;
          }
          case 42: {
            iconShow_.AddEntriesFrom(input, _repeated_iconShow_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            GroupReward = input.ReadString();
            break;
          }
          case 26:
          case 24: {
            includeTaskId_.AddEntriesFrom(ref input, _repeated_includeTaskId_codec);
            break;
          }
          case 42: {
            iconShow_.AddEntriesFrom(ref input, _repeated_iconShow_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DailyEventGroupMapABValue : pb::IMessage<DailyEventGroupMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DailyEventGroupMapABValue> _parser = new pb::MessageParser<DailyEventGroupMapABValue>(() => new DailyEventGroupMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DailyEventGroupMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.DailyEventGroupConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DailyEventGroupMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DailyEventGroupMapABValue(DailyEventGroupMapABValue other) : this() {
      dailyEventGroupMap_ = other.dailyEventGroupMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DailyEventGroupMapABValue Clone() {
      return new DailyEventGroupMapABValue(this);
    }

    /// <summary>Field number for the "DailyEventGroupMap" field.</summary>
    public const int DailyEventGroupMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.DailyEventGroup>.Codec _map_dailyEventGroupMap_codec
        = new pbc::MapField<int, global::fat.rawdata.DailyEventGroup>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.DailyEventGroup.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.DailyEventGroup> dailyEventGroupMap_ = new pbc::MapField<int, global::fat.rawdata.DailyEventGroup>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.DailyEventGroup> DailyEventGroupMap {
      get { return dailyEventGroupMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DailyEventGroupMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DailyEventGroupMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!DailyEventGroupMap.Equals(other.DailyEventGroupMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= DailyEventGroupMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      dailyEventGroupMap_.WriteTo(output, _map_dailyEventGroupMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      dailyEventGroupMap_.WriteTo(ref output, _map_dailyEventGroupMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += dailyEventGroupMap_.CalculateSize(_map_dailyEventGroupMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DailyEventGroupMapABValue other) {
      if (other == null) {
        return;
      }
      dailyEventGroupMap_.Add(other.dailyEventGroupMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            dailyEventGroupMap_.AddEntriesFrom(input, _map_dailyEventGroupMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            dailyEventGroupMap_.AddEntriesFrom(ref input, _map_dailyEventGroupMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DailyEventGroupConf : pb::IMessage<DailyEventGroupConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DailyEventGroupConf> _parser = new pb::MessageParser<DailyEventGroupConf>(() => new DailyEventGroupConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DailyEventGroupConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.DailyEventGroupConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DailyEventGroupConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DailyEventGroupConf(DailyEventGroupConf other) : this() {
      dailyEventGroupMap_ = other.dailyEventGroupMap_.Clone();
      dailyEventGroupMapAB_ = other.dailyEventGroupMapAB_.Clone();
      dailyEventGroupMapABPatch_ = other.dailyEventGroupMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DailyEventGroupConf Clone() {
      return new DailyEventGroupConf(this);
    }

    /// <summary>Field number for the "DailyEventGroupMap" field.</summary>
    public const int DailyEventGroupMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.DailyEventGroup>.Codec _map_dailyEventGroupMap_codec
        = new pbc::MapField<int, global::fat.rawdata.DailyEventGroup>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.DailyEventGroup.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.DailyEventGroup> dailyEventGroupMap_ = new pbc::MapField<int, global::fat.rawdata.DailyEventGroup>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.DailyEventGroup> DailyEventGroupMap {
      get { return dailyEventGroupMap_; }
    }

    /// <summary>Field number for the "DailyEventGroupMapAB" field.</summary>
    public const int DailyEventGroupMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.DailyEventGroupMapABValue>.Codec _map_dailyEventGroupMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.DailyEventGroupMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.DailyEventGroupMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.DailyEventGroupMapABValue> dailyEventGroupMapAB_ = new pbc::MapField<string, global::fat.rawdata.DailyEventGroupMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.DailyEventGroupMapABValue> DailyEventGroupMapAB {
      get { return dailyEventGroupMapAB_; }
    }

    /// <summary>Field number for the "DailyEventGroupMapABPatch" field.</summary>
    public const int DailyEventGroupMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.DailyEventGroupMapABValue>.Codec _map_dailyEventGroupMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.DailyEventGroupMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.DailyEventGroupMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.DailyEventGroupMapABValue> dailyEventGroupMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.DailyEventGroupMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.DailyEventGroupMapABValue> DailyEventGroupMapABPatch {
      get { return dailyEventGroupMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DailyEventGroupConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DailyEventGroupConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!DailyEventGroupMap.Equals(other.DailyEventGroupMap)) return false;
      if (!DailyEventGroupMapAB.Equals(other.DailyEventGroupMapAB)) return false;
      if (!DailyEventGroupMapABPatch.Equals(other.DailyEventGroupMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= DailyEventGroupMap.GetHashCode();
      hash ^= DailyEventGroupMapAB.GetHashCode();
      hash ^= DailyEventGroupMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      dailyEventGroupMap_.WriteTo(output, _map_dailyEventGroupMap_codec);
      dailyEventGroupMapAB_.WriteTo(output, _map_dailyEventGroupMapAB_codec);
      dailyEventGroupMapABPatch_.WriteTo(output, _map_dailyEventGroupMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      dailyEventGroupMap_.WriteTo(ref output, _map_dailyEventGroupMap_codec);
      dailyEventGroupMapAB_.WriteTo(ref output, _map_dailyEventGroupMapAB_codec);
      dailyEventGroupMapABPatch_.WriteTo(ref output, _map_dailyEventGroupMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += dailyEventGroupMap_.CalculateSize(_map_dailyEventGroupMap_codec);
      size += dailyEventGroupMapAB_.CalculateSize(_map_dailyEventGroupMapAB_codec);
      size += dailyEventGroupMapABPatch_.CalculateSize(_map_dailyEventGroupMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DailyEventGroupConf other) {
      if (other == null) {
        return;
      }
      dailyEventGroupMap_.Add(other.dailyEventGroupMap_);
      dailyEventGroupMapAB_.Add(other.dailyEventGroupMapAB_);
      dailyEventGroupMapABPatch_.Add(other.dailyEventGroupMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            dailyEventGroupMap_.AddEntriesFrom(input, _map_dailyEventGroupMap_codec);
            break;
          }
          case 18: {
            dailyEventGroupMapAB_.AddEntriesFrom(input, _map_dailyEventGroupMapAB_codec);
            break;
          }
          case 26: {
            dailyEventGroupMapABPatch_.AddEntriesFrom(input, _map_dailyEventGroupMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            dailyEventGroupMap_.AddEntriesFrom(ref input, _map_dailyEventGroupMap_codec);
            break;
          }
          case 18: {
            dailyEventGroupMapAB_.AddEntriesFrom(ref input, _map_dailyEventGroupMapAB_codec);
            break;
          }
          case 26: {
            dailyEventGroupMapABPatch_.AddEntriesFrom(ref input, _map_dailyEventGroupMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
