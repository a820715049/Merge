// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/SoundConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/SoundConf.proto</summary>
  public static partial class SoundConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/SoundConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SoundConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChdyYXdkYXRhL1NvdW5kQ29uZi5wcm90bxIHcmF3ZGF0YSIwCgVTb3VuZBIK",
            "CgJpZBgBIAEoCRINCgVhc3NldBgCIAEoCRIMCgRsb29wGAMgASgIIowBCg9T",
            "b3VuZE1hcEFCVmFsdWUSOAoIU291bmRNYXAYASADKAsyJi5yYXdkYXRhLlNv",
            "dW5kTWFwQUJWYWx1ZS5Tb3VuZE1hcEVudHJ5Gj8KDVNvdW5kTWFwRW50cnkS",
            "CwoDa2V5GAEgASgJEh0KBXZhbHVlGAIgASgLMg4ucmF3ZGF0YS5Tb3VuZDoC",
            "OAEimQMKCVNvdW5kQ29uZhIyCghTb3VuZE1hcBgBIAMoCzIgLnJhd2RhdGEu",
            "U291bmRDb25mLlNvdW5kTWFwRW50cnkSNgoKU291bmRNYXBBQhgCIAMoCzIi",
            "LnJhd2RhdGEuU291bmRDb25mLlNvdW5kTWFwQUJFbnRyeRJACg9Tb3VuZE1h",
            "cEFCUGF0Y2gYAyADKAsyJy5yYXdkYXRhLlNvdW5kQ29uZi5Tb3VuZE1hcEFC",
            "UGF0Y2hFbnRyeRo/Cg1Tb3VuZE1hcEVudHJ5EgsKA2tleRgBIAEoCRIdCgV2",
            "YWx1ZRgCIAEoCzIOLnJhd2RhdGEuU291bmQ6AjgBGksKD1NvdW5kTWFwQUJF",
            "bnRyeRILCgNrZXkYASABKAkSJwoFdmFsdWUYAiABKAsyGC5yYXdkYXRhLlNv",
            "dW5kTWFwQUJWYWx1ZToCOAEaUAoUU291bmRNYXBBQlBhdGNoRW50cnkSCwoD",
            "a2V5GAEgASgJEicKBXZhbHVlGAIgASgLMhgucmF3ZGF0YS5Tb3VuZE1hcEFC",
            "VmFsdWU6AjgBQj1aLWdpdGxhYi5mdW5wbHVzLmlvL2ZhdC9jb25mL2dlbi9n",
            "b2xhbmcvcmF3ZGF0YaoCC2ZhdC5yYXdkYXRhYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.Sound), global::fat.rawdata.Sound.Parser, new[]{ "Id", "Asset", "Loop" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.SoundMapABValue), global::fat.rawdata.SoundMapABValue.Parser, new[]{ "SoundMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.SoundConf), global::fat.rawdata.SoundConf.Parser, new[]{ "SoundMap", "SoundMapAB", "SoundMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="Sound",table="SoundMap",table_wrapper="SoundConf",map="true",map_key_type="string",data="SoundConf")
  /// annotation@ab(table_ab="SoundMapAB",table_ab_patch="SoundMapABPatch",table_ab_value="SoundMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@Sound(id="id")
  /// </summary>
  public sealed partial class Sound : pb::IMessage<Sound>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Sound> _parser = new pb::MessageParser<Sound>(() => new Sound());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Sound> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.SoundConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Sound() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Sound(Sound other) : this() {
      id_ = other.id_;
      asset_ = other.asset_;
      loop_ = other.loop_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Sound Clone() {
      return new Sound(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// key
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "asset" field.</summary>
    public const int AssetFieldNumber = 2;
    private string asset_ = "";
    /// <summary>
    /// 音效资源路径
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Asset {
      get { return asset_; }
      set {
        asset_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "loop" field.</summary>
    public const int LoopFieldNumber = 3;
    private bool loop_;
    /// <summary>
    /// 是否循环播放
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Loop {
      get { return loop_; }
      set {
        loop_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Sound);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Sound other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Asset != other.Asset) return false;
      if (Loop != other.Loop) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Asset.Length != 0) hash ^= Asset.GetHashCode();
      if (Loop != false) hash ^= Loop.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Asset.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Asset);
      }
      if (Loop != false) {
        output.WriteRawTag(24);
        output.WriteBool(Loop);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Asset.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Asset);
      }
      if (Loop != false) {
        output.WriteRawTag(24);
        output.WriteBool(Loop);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Asset.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Asset);
      }
      if (Loop != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Sound other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Asset.Length != 0) {
        Asset = other.Asset;
      }
      if (other.Loop != false) {
        Loop = other.Loop;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Asset = input.ReadString();
            break;
          }
          case 24: {
            Loop = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Asset = input.ReadString();
            break;
          }
          case 24: {
            Loop = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SoundMapABValue : pb::IMessage<SoundMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SoundMapABValue> _parser = new pb::MessageParser<SoundMapABValue>(() => new SoundMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SoundMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.SoundConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SoundMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SoundMapABValue(SoundMapABValue other) : this() {
      soundMap_ = other.soundMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SoundMapABValue Clone() {
      return new SoundMapABValue(this);
    }

    /// <summary>Field number for the "SoundMap" field.</summary>
    public const int SoundMapFieldNumber = 1;
    private static readonly pbc::MapField<string, global::fat.rawdata.Sound>.Codec _map_soundMap_codec
        = new pbc::MapField<string, global::fat.rawdata.Sound>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.Sound.Parser), 10);
    private readonly pbc::MapField<string, global::fat.rawdata.Sound> soundMap_ = new pbc::MapField<string, global::fat.rawdata.Sound>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.Sound> SoundMap {
      get { return soundMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SoundMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SoundMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!SoundMap.Equals(other.SoundMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= SoundMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      soundMap_.WriteTo(output, _map_soundMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      soundMap_.WriteTo(ref output, _map_soundMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += soundMap_.CalculateSize(_map_soundMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SoundMapABValue other) {
      if (other == null) {
        return;
      }
      soundMap_.Add(other.soundMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            soundMap_.AddEntriesFrom(input, _map_soundMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            soundMap_.AddEntriesFrom(ref input, _map_soundMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SoundConf : pb::IMessage<SoundConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SoundConf> _parser = new pb::MessageParser<SoundConf>(() => new SoundConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SoundConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.SoundConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SoundConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SoundConf(SoundConf other) : this() {
      soundMap_ = other.soundMap_.Clone();
      soundMapAB_ = other.soundMapAB_.Clone();
      soundMapABPatch_ = other.soundMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SoundConf Clone() {
      return new SoundConf(this);
    }

    /// <summary>Field number for the "SoundMap" field.</summary>
    public const int SoundMapFieldNumber = 1;
    private static readonly pbc::MapField<string, global::fat.rawdata.Sound>.Codec _map_soundMap_codec
        = new pbc::MapField<string, global::fat.rawdata.Sound>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.Sound.Parser), 10);
    private readonly pbc::MapField<string, global::fat.rawdata.Sound> soundMap_ = new pbc::MapField<string, global::fat.rawdata.Sound>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.Sound> SoundMap {
      get { return soundMap_; }
    }

    /// <summary>Field number for the "SoundMapAB" field.</summary>
    public const int SoundMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.SoundMapABValue>.Codec _map_soundMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.SoundMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.SoundMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.SoundMapABValue> soundMapAB_ = new pbc::MapField<string, global::fat.rawdata.SoundMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.SoundMapABValue> SoundMapAB {
      get { return soundMapAB_; }
    }

    /// <summary>Field number for the "SoundMapABPatch" field.</summary>
    public const int SoundMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.SoundMapABValue>.Codec _map_soundMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.SoundMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.SoundMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.SoundMapABValue> soundMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.SoundMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.SoundMapABValue> SoundMapABPatch {
      get { return soundMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SoundConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SoundConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!SoundMap.Equals(other.SoundMap)) return false;
      if (!SoundMapAB.Equals(other.SoundMapAB)) return false;
      if (!SoundMapABPatch.Equals(other.SoundMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= SoundMap.GetHashCode();
      hash ^= SoundMapAB.GetHashCode();
      hash ^= SoundMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      soundMap_.WriteTo(output, _map_soundMap_codec);
      soundMapAB_.WriteTo(output, _map_soundMapAB_codec);
      soundMapABPatch_.WriteTo(output, _map_soundMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      soundMap_.WriteTo(ref output, _map_soundMap_codec);
      soundMapAB_.WriteTo(ref output, _map_soundMapAB_codec);
      soundMapABPatch_.WriteTo(ref output, _map_soundMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += soundMap_.CalculateSize(_map_soundMap_codec);
      size += soundMapAB_.CalculateSize(_map_soundMapAB_codec);
      size += soundMapABPatch_.CalculateSize(_map_soundMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SoundConf other) {
      if (other == null) {
        return;
      }
      soundMap_.Add(other.soundMap_);
      soundMapAB_.Add(other.soundMapAB_);
      soundMapABPatch_.Add(other.soundMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            soundMap_.AddEntriesFrom(input, _map_soundMap_codec);
            break;
          }
          case 18: {
            soundMapAB_.AddEntriesFrom(input, _map_soundMapAB_codec);
            break;
          }
          case 26: {
            soundMapABPatch_.AddEntriesFrom(input, _map_soundMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            soundMap_.AddEntriesFrom(ref input, _map_soundMap_codec);
            break;
          }
          case 18: {
            soundMapAB_.AddEntriesFrom(ref input, _map_soundMapAB_codec);
            break;
          }
          case 26: {
            soundMapABPatch_.AddEntriesFrom(ref input, _map_soundMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
