// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/ShinnyGuarPackConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/ShinnyGuarPackConf.proto</summary>
  public static partial class ShinnyGuarPackConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/ShinnyGuarPackConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ShinnyGuarPackConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiByYXdkYXRhL1NoaW5ueUd1YXJQYWNrQ29uZi5wcm90bxIHcmF3ZGF0YSK/",
            "AQoOU2hpbm55R3VhclBhY2sSCgoCaWQYASABKAUSEwoLYWN0aXZlTGV2ZWwY",
            "AiABKAUSFgoOY2FyZERpc3BsYXlOdW0YAyABKAUSEgoKZXZlbnRUaGVtZRgE",
            "IAEoBRINCgVsYWJlbBgFIAEoBRIRCglwYWNrR3JwSWQYBiABKAUSEAoIcGF5",
            "dGltZXMYByABKAUSFQoNc2h1dGRvd25MZXZlbBgIIAEoBRIVCg1zcGVjaWFs",
            "UGFja0lkGAkgASgFIsIBChhTaGlubnlHdWFyUGFja01hcEFCVmFsdWUSUwoR",
            "U2hpbm55R3VhclBhY2tNYXAYASADKAsyOC5yYXdkYXRhLlNoaW5ueUd1YXJQ",
            "YWNrTWFwQUJWYWx1ZS5TaGlubnlHdWFyUGFja01hcEVudHJ5GlEKFlNoaW5u",
            "eUd1YXJQYWNrTWFwRW50cnkSCwoDa2V5GAEgASgFEiYKBXZhbHVlGAIgASgL",
            "MhcucmF3ZGF0YS5TaGlubnlHdWFyUGFjazoCOAEiqQQKElNoaW5ueUd1YXJQ",
            "YWNrQ29uZhJNChFTaGlubnlHdWFyUGFja01hcBgBIAMoCzIyLnJhd2RhdGEu",
            "U2hpbm55R3VhclBhY2tDb25mLlNoaW5ueUd1YXJQYWNrTWFwRW50cnkSUQoT",
            "U2hpbm55R3VhclBhY2tNYXBBQhgCIAMoCzI0LnJhd2RhdGEuU2hpbm55R3Vh",
            "clBhY2tDb25mLlNoaW5ueUd1YXJQYWNrTWFwQUJFbnRyeRJbChhTaGlubnlH",
            "dWFyUGFja01hcEFCUGF0Y2gYAyADKAsyOS5yYXdkYXRhLlNoaW5ueUd1YXJQ",
            "YWNrQ29uZi5TaGlubnlHdWFyUGFja01hcEFCUGF0Y2hFbnRyeRpRChZTaGlu",
            "bnlHdWFyUGFja01hcEVudHJ5EgsKA2tleRgBIAEoBRImCgV2YWx1ZRgCIAEo",
            "CzIXLnJhd2RhdGEuU2hpbm55R3VhclBhY2s6AjgBGl0KGFNoaW5ueUd1YXJQ",
            "YWNrTWFwQUJFbnRyeRILCgNrZXkYASABKAkSMAoFdmFsdWUYAiABKAsyIS5y",
            "YXdkYXRhLlNoaW5ueUd1YXJQYWNrTWFwQUJWYWx1ZToCOAEaYgodU2hpbm55",
            "R3VhclBhY2tNYXBBQlBhdGNoRW50cnkSCwoDa2V5GAEgASgJEjAKBXZhbHVl",
            "GAIgASgLMiEucmF3ZGF0YS5TaGlubnlHdWFyUGFja01hcEFCVmFsdWU6AjgB",
            "Qj1aLWdpdGxhYi5mdW5wbHVzLmlvL2ZhdC9jb25mL2dlbi9nb2xhbmcvcmF3",
            "ZGF0YaoCC2ZhdC5yYXdkYXRhYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.ShinnyGuarPack), global::fat.rawdata.ShinnyGuarPack.Parser, new[]{ "Id", "ActiveLevel", "CardDisplayNum", "EventTheme", "Label", "PackGrpId", "Paytimes", "ShutdownLevel", "SpecialPackId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.ShinnyGuarPackMapABValue), global::fat.rawdata.ShinnyGuarPackMapABValue.Parser, new[]{ "ShinnyGuarPackMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.ShinnyGuarPackConf), global::fat.rawdata.ShinnyGuarPackConf.Parser, new[]{ "ShinnyGuarPackMap", "ShinnyGuarPackMapAB", "ShinnyGuarPackMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="ShinnyGuarPack",table="ShinnyGuarPackMap",table_wrapper="ShinnyGuarPackConf",map="true",map_key_type="int32",data="ShinnyGuarPackConf")
  /// annotation@ab(table_ab="ShinnyGuarPackMapAB",table_ab_patch="ShinnyGuarPackMapABPatch",table_ab_value="ShinnyGuarPackMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@ShinnyGuarPack(id="id")
  /// </summary>
  public sealed partial class ShinnyGuarPack : pb::IMessage<ShinnyGuarPack>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ShinnyGuarPack> _parser = new pb::MessageParser<ShinnyGuarPack>(() => new ShinnyGuarPack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ShinnyGuarPack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.ShinnyGuarPackConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShinnyGuarPack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShinnyGuarPack(ShinnyGuarPack other) : this() {
      id_ = other.id_;
      activeLevel_ = other.activeLevel_;
      cardDisplayNum_ = other.cardDisplayNum_;
      eventTheme_ = other.eventTheme_;
      label_ = other.label_;
      packGrpId_ = other.packGrpId_;
      paytimes_ = other.paytimes_;
      shutdownLevel_ = other.shutdownLevel_;
      specialPackId_ = other.specialPackId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShinnyGuarPack Clone() {
      return new ShinnyGuarPack(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 每日推送礼包
    /// 模板ID
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "activeLevel" field.</summary>
    public const int ActiveLevelFieldNumber = 2;
    private int activeLevel_;
    /// <summary>
    /// 激活等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ActiveLevel {
      get { return activeLevel_; }
      set {
        activeLevel_ = value;
      }
    }

    /// <summary>Field number for the "cardDisplayNum" field.</summary>
    public const int CardDisplayNumFieldNumber = 3;
    private int cardDisplayNum_;
    /// <summary>
    /// 卡片展示数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CardDisplayNum {
      get { return cardDisplayNum_; }
      set {
        cardDisplayNum_ = value;
      }
    }

    /// <summary>Field number for the "eventTheme" field.</summary>
    public const int EventThemeFieldNumber = 4;
    private int eventTheme_;
    /// <summary>
    /// 活动弹板ID
    /// （EventTheme.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EventTheme {
      get { return eventTheme_; }
      set {
        eventTheme_ = value;
      }
    }

    /// <summary>Field number for the "label" field.</summary>
    public const int LabelFieldNumber = 5;
    private int label_;
    /// <summary>
    /// 标签信息
    /// （Label.id）
    /// （为空代表不显示标签）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Label {
      get { return label_; }
      set {
        label_ = value;
      }
    }

    /// <summary>Field number for the "packGrpId" field.</summary>
    public const int PackGrpIdFieldNumber = 6;
    private int packGrpId_;
    /// <summary>
    /// 内购商品ID
    /// （受档位组控制）
    /// （GradeIndexMapping.id）
    /// （IAPPack.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PackGrpId {
      get { return packGrpId_; }
      set {
        packGrpId_ = value;
      }
    }

    /// <summary>Field number for the "paytimes" field.</summary>
    public const int PaytimesFieldNumber = 7;
    private int paytimes_;
    /// <summary>
    /// 限购次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Paytimes {
      get { return paytimes_; }
      set {
        paytimes_ = value;
      }
    }

    /// <summary>Field number for the "shutdownLevel" field.</summary>
    public const int ShutdownLevelFieldNumber = 8;
    private int shutdownLevel_;
    /// <summary>
    /// 关闭等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ShutdownLevel {
      get { return shutdownLevel_; }
      set {
        shutdownLevel_ = value;
      }
    }

    /// <summary>Field number for the "specialPackId" field.</summary>
    public const int SpecialPackIdFieldNumber = 9;
    private int specialPackId_;
    /// <summary>
    /// 特殊卡包id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SpecialPackId {
      get { return specialPackId_; }
      set {
        specialPackId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ShinnyGuarPack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ShinnyGuarPack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ActiveLevel != other.ActiveLevel) return false;
      if (CardDisplayNum != other.CardDisplayNum) return false;
      if (EventTheme != other.EventTheme) return false;
      if (Label != other.Label) return false;
      if (PackGrpId != other.PackGrpId) return false;
      if (Paytimes != other.Paytimes) return false;
      if (ShutdownLevel != other.ShutdownLevel) return false;
      if (SpecialPackId != other.SpecialPackId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (ActiveLevel != 0) hash ^= ActiveLevel.GetHashCode();
      if (CardDisplayNum != 0) hash ^= CardDisplayNum.GetHashCode();
      if (EventTheme != 0) hash ^= EventTheme.GetHashCode();
      if (Label != 0) hash ^= Label.GetHashCode();
      if (PackGrpId != 0) hash ^= PackGrpId.GetHashCode();
      if (Paytimes != 0) hash ^= Paytimes.GetHashCode();
      if (ShutdownLevel != 0) hash ^= ShutdownLevel.GetHashCode();
      if (SpecialPackId != 0) hash ^= SpecialPackId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (ActiveLevel != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ActiveLevel);
      }
      if (CardDisplayNum != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CardDisplayNum);
      }
      if (EventTheme != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(EventTheme);
      }
      if (Label != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Label);
      }
      if (PackGrpId != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(PackGrpId);
      }
      if (Paytimes != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Paytimes);
      }
      if (ShutdownLevel != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(ShutdownLevel);
      }
      if (SpecialPackId != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(SpecialPackId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (ActiveLevel != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ActiveLevel);
      }
      if (CardDisplayNum != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CardDisplayNum);
      }
      if (EventTheme != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(EventTheme);
      }
      if (Label != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Label);
      }
      if (PackGrpId != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(PackGrpId);
      }
      if (Paytimes != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Paytimes);
      }
      if (ShutdownLevel != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(ShutdownLevel);
      }
      if (SpecialPackId != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(SpecialPackId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (ActiveLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ActiveLevel);
      }
      if (CardDisplayNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CardDisplayNum);
      }
      if (EventTheme != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EventTheme);
      }
      if (Label != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Label);
      }
      if (PackGrpId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PackGrpId);
      }
      if (Paytimes != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Paytimes);
      }
      if (ShutdownLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ShutdownLevel);
      }
      if (SpecialPackId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SpecialPackId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ShinnyGuarPack other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.ActiveLevel != 0) {
        ActiveLevel = other.ActiveLevel;
      }
      if (other.CardDisplayNum != 0) {
        CardDisplayNum = other.CardDisplayNum;
      }
      if (other.EventTheme != 0) {
        EventTheme = other.EventTheme;
      }
      if (other.Label != 0) {
        Label = other.Label;
      }
      if (other.PackGrpId != 0) {
        PackGrpId = other.PackGrpId;
      }
      if (other.Paytimes != 0) {
        Paytimes = other.Paytimes;
      }
      if (other.ShutdownLevel != 0) {
        ShutdownLevel = other.ShutdownLevel;
      }
      if (other.SpecialPackId != 0) {
        SpecialPackId = other.SpecialPackId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            ActiveLevel = input.ReadInt32();
            break;
          }
          case 24: {
            CardDisplayNum = input.ReadInt32();
            break;
          }
          case 32: {
            EventTheme = input.ReadInt32();
            break;
          }
          case 40: {
            Label = input.ReadInt32();
            break;
          }
          case 48: {
            PackGrpId = input.ReadInt32();
            break;
          }
          case 56: {
            Paytimes = input.ReadInt32();
            break;
          }
          case 64: {
            ShutdownLevel = input.ReadInt32();
            break;
          }
          case 72: {
            SpecialPackId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            ActiveLevel = input.ReadInt32();
            break;
          }
          case 24: {
            CardDisplayNum = input.ReadInt32();
            break;
          }
          case 32: {
            EventTheme = input.ReadInt32();
            break;
          }
          case 40: {
            Label = input.ReadInt32();
            break;
          }
          case 48: {
            PackGrpId = input.ReadInt32();
            break;
          }
          case 56: {
            Paytimes = input.ReadInt32();
            break;
          }
          case 64: {
            ShutdownLevel = input.ReadInt32();
            break;
          }
          case 72: {
            SpecialPackId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ShinnyGuarPackMapABValue : pb::IMessage<ShinnyGuarPackMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ShinnyGuarPackMapABValue> _parser = new pb::MessageParser<ShinnyGuarPackMapABValue>(() => new ShinnyGuarPackMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ShinnyGuarPackMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.ShinnyGuarPackConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShinnyGuarPackMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShinnyGuarPackMapABValue(ShinnyGuarPackMapABValue other) : this() {
      shinnyGuarPackMap_ = other.shinnyGuarPackMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShinnyGuarPackMapABValue Clone() {
      return new ShinnyGuarPackMapABValue(this);
    }

    /// <summary>Field number for the "ShinnyGuarPackMap" field.</summary>
    public const int ShinnyGuarPackMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.ShinnyGuarPack>.Codec _map_shinnyGuarPackMap_codec
        = new pbc::MapField<int, global::fat.rawdata.ShinnyGuarPack>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ShinnyGuarPack.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.ShinnyGuarPack> shinnyGuarPackMap_ = new pbc::MapField<int, global::fat.rawdata.ShinnyGuarPack>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.ShinnyGuarPack> ShinnyGuarPackMap {
      get { return shinnyGuarPackMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ShinnyGuarPackMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ShinnyGuarPackMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!ShinnyGuarPackMap.Equals(other.ShinnyGuarPackMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ShinnyGuarPackMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      shinnyGuarPackMap_.WriteTo(output, _map_shinnyGuarPackMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      shinnyGuarPackMap_.WriteTo(ref output, _map_shinnyGuarPackMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += shinnyGuarPackMap_.CalculateSize(_map_shinnyGuarPackMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ShinnyGuarPackMapABValue other) {
      if (other == null) {
        return;
      }
      shinnyGuarPackMap_.Add(other.shinnyGuarPackMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            shinnyGuarPackMap_.AddEntriesFrom(input, _map_shinnyGuarPackMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            shinnyGuarPackMap_.AddEntriesFrom(ref input, _map_shinnyGuarPackMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ShinnyGuarPackConf : pb::IMessage<ShinnyGuarPackConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ShinnyGuarPackConf> _parser = new pb::MessageParser<ShinnyGuarPackConf>(() => new ShinnyGuarPackConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ShinnyGuarPackConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.ShinnyGuarPackConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShinnyGuarPackConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShinnyGuarPackConf(ShinnyGuarPackConf other) : this() {
      shinnyGuarPackMap_ = other.shinnyGuarPackMap_.Clone();
      shinnyGuarPackMapAB_ = other.shinnyGuarPackMapAB_.Clone();
      shinnyGuarPackMapABPatch_ = other.shinnyGuarPackMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShinnyGuarPackConf Clone() {
      return new ShinnyGuarPackConf(this);
    }

    /// <summary>Field number for the "ShinnyGuarPackMap" field.</summary>
    public const int ShinnyGuarPackMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.ShinnyGuarPack>.Codec _map_shinnyGuarPackMap_codec
        = new pbc::MapField<int, global::fat.rawdata.ShinnyGuarPack>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ShinnyGuarPack.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.ShinnyGuarPack> shinnyGuarPackMap_ = new pbc::MapField<int, global::fat.rawdata.ShinnyGuarPack>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.ShinnyGuarPack> ShinnyGuarPackMap {
      get { return shinnyGuarPackMap_; }
    }

    /// <summary>Field number for the "ShinnyGuarPackMapAB" field.</summary>
    public const int ShinnyGuarPackMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.ShinnyGuarPackMapABValue>.Codec _map_shinnyGuarPackMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.ShinnyGuarPackMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ShinnyGuarPackMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.ShinnyGuarPackMapABValue> shinnyGuarPackMapAB_ = new pbc::MapField<string, global::fat.rawdata.ShinnyGuarPackMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.ShinnyGuarPackMapABValue> ShinnyGuarPackMapAB {
      get { return shinnyGuarPackMapAB_; }
    }

    /// <summary>Field number for the "ShinnyGuarPackMapABPatch" field.</summary>
    public const int ShinnyGuarPackMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.ShinnyGuarPackMapABValue>.Codec _map_shinnyGuarPackMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.ShinnyGuarPackMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ShinnyGuarPackMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.ShinnyGuarPackMapABValue> shinnyGuarPackMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.ShinnyGuarPackMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.ShinnyGuarPackMapABValue> ShinnyGuarPackMapABPatch {
      get { return shinnyGuarPackMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ShinnyGuarPackConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ShinnyGuarPackConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!ShinnyGuarPackMap.Equals(other.ShinnyGuarPackMap)) return false;
      if (!ShinnyGuarPackMapAB.Equals(other.ShinnyGuarPackMapAB)) return false;
      if (!ShinnyGuarPackMapABPatch.Equals(other.ShinnyGuarPackMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ShinnyGuarPackMap.GetHashCode();
      hash ^= ShinnyGuarPackMapAB.GetHashCode();
      hash ^= ShinnyGuarPackMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      shinnyGuarPackMap_.WriteTo(output, _map_shinnyGuarPackMap_codec);
      shinnyGuarPackMapAB_.WriteTo(output, _map_shinnyGuarPackMapAB_codec);
      shinnyGuarPackMapABPatch_.WriteTo(output, _map_shinnyGuarPackMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      shinnyGuarPackMap_.WriteTo(ref output, _map_shinnyGuarPackMap_codec);
      shinnyGuarPackMapAB_.WriteTo(ref output, _map_shinnyGuarPackMapAB_codec);
      shinnyGuarPackMapABPatch_.WriteTo(ref output, _map_shinnyGuarPackMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += shinnyGuarPackMap_.CalculateSize(_map_shinnyGuarPackMap_codec);
      size += shinnyGuarPackMapAB_.CalculateSize(_map_shinnyGuarPackMapAB_codec);
      size += shinnyGuarPackMapABPatch_.CalculateSize(_map_shinnyGuarPackMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ShinnyGuarPackConf other) {
      if (other == null) {
        return;
      }
      shinnyGuarPackMap_.Add(other.shinnyGuarPackMap_);
      shinnyGuarPackMapAB_.Add(other.shinnyGuarPackMapAB_);
      shinnyGuarPackMapABPatch_.Add(other.shinnyGuarPackMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            shinnyGuarPackMap_.AddEntriesFrom(input, _map_shinnyGuarPackMap_codec);
            break;
          }
          case 18: {
            shinnyGuarPackMapAB_.AddEntriesFrom(input, _map_shinnyGuarPackMapAB_codec);
            break;
          }
          case 26: {
            shinnyGuarPackMapABPatch_.AddEntriesFrom(input, _map_shinnyGuarPackMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            shinnyGuarPackMap_.AddEntriesFrom(ref input, _map_shinnyGuarPackMap_codec);
            break;
          }
          case 18: {
            shinnyGuarPackMapAB_.AddEntriesFrom(ref input, _map_shinnyGuarPackMapAB_codec);
            break;
          }
          case 26: {
            shinnyGuarPackMapABPatch_.AddEntriesFrom(ref input, _map_shinnyGuarPackMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
