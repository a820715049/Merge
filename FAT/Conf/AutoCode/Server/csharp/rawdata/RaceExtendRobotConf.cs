// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/RaceExtendRobotConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/RaceExtendRobotConf.proto</summary>
  public static partial class RaceExtendRobotConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/RaceExtendRobotConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RaceExtendRobotConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiFyYXdkYXRhL1JhY2VFeHRlbmRSb2JvdENvbmYucHJvdG8SB3Jhd2RhdGEi",
            "aQoPUmFjZUV4dGVuZFJvYm90EgoKAmlkGAEgASgFEhAKCGFkZFNjb3JlGAIg",
            "AygFEg8KB29mZmxpbmUYAyADKAUSFwoPb2ZmbGluZUFkZFNjb3JlGAQgAygF",
            "Eg4KBm9ubGluZRgFIAMoBSLIAQoZUmFjZUV4dGVuZFJvYm90TWFwQUJWYWx1",
            "ZRJWChJSYWNlRXh0ZW5kUm9ib3RNYXAYASADKAsyOi5yYXdkYXRhLlJhY2VF",
            "eHRlbmRSb2JvdE1hcEFCVmFsdWUuUmFjZUV4dGVuZFJvYm90TWFwRW50cnka",
            "UwoXUmFjZUV4dGVuZFJvYm90TWFwRW50cnkSCwoDa2V5GAEgASgFEicKBXZh",
            "bHVlGAIgASgLMhgucmF3ZGF0YS5SYWNlRXh0ZW5kUm9ib3Q6AjgBIrkEChNS",
            "YWNlRXh0ZW5kUm9ib3RDb25mElAKElJhY2VFeHRlbmRSb2JvdE1hcBgBIAMo",
            "CzI0LnJhd2RhdGEuUmFjZUV4dGVuZFJvYm90Q29uZi5SYWNlRXh0ZW5kUm9i",
            "b3RNYXBFbnRyeRJUChRSYWNlRXh0ZW5kUm9ib3RNYXBBQhgCIAMoCzI2LnJh",
            "d2RhdGEuUmFjZUV4dGVuZFJvYm90Q29uZi5SYWNlRXh0ZW5kUm9ib3RNYXBB",
            "QkVudHJ5El4KGVJhY2VFeHRlbmRSb2JvdE1hcEFCUGF0Y2gYAyADKAsyOy5y",
            "YXdkYXRhLlJhY2VFeHRlbmRSb2JvdENvbmYuUmFjZUV4dGVuZFJvYm90TWFw",
            "QUJQYXRjaEVudHJ5GlMKF1JhY2VFeHRlbmRSb2JvdE1hcEVudHJ5EgsKA2tl",
            "eRgBIAEoBRInCgV2YWx1ZRgCIAEoCzIYLnJhd2RhdGEuUmFjZUV4dGVuZFJv",
            "Ym90OgI4ARpfChlSYWNlRXh0ZW5kUm9ib3RNYXBBQkVudHJ5EgsKA2tleRgB",
            "IAEoCRIxCgV2YWx1ZRgCIAEoCzIiLnJhd2RhdGEuUmFjZUV4dGVuZFJvYm90",
            "TWFwQUJWYWx1ZToCOAEaZAoeUmFjZUV4dGVuZFJvYm90TWFwQUJQYXRjaEVu",
            "dHJ5EgsKA2tleRgBIAEoCRIxCgV2YWx1ZRgCIAEoCzIiLnJhd2RhdGEuUmFj",
            "ZUV4dGVuZFJvYm90TWFwQUJWYWx1ZToCOAFCPVotZ2l0bGFiLmZ1bnBsdXMu",
            "aW8vZmF0L2NvbmYvZ2VuL2dvbGFuZy9yYXdkYXRhqgILZmF0LnJhd2RhdGFi",
            "BnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.RaceExtendRobot), global::fat.rawdata.RaceExtendRobot.Parser, new[]{ "Id", "AddScore", "Offline", "OfflineAddScore", "Online" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.RaceExtendRobotMapABValue), global::fat.rawdata.RaceExtendRobotMapABValue.Parser, new[]{ "RaceExtendRobotMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.RaceExtendRobotConf), global::fat.rawdata.RaceExtendRobotConf.Parser, new[]{ "RaceExtendRobotMap", "RaceExtendRobotMapAB", "RaceExtendRobotMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="RaceExtendRobot",table="RaceExtendRobotMap",table_wrapper="RaceExtendRobotConf",map="true",map_key_type="int32",data="RaceExtendRobotConf")
  /// annotation@ab(table_ab="RaceExtendRobotMapAB",table_ab_patch="RaceExtendRobotMapABPatch",table_ab_value="RaceExtendRobotMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@RaceExtendRobot(id="id")
  /// </summary>
  public sealed partial class RaceExtendRobot : pb::IMessage<RaceExtendRobot>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RaceExtendRobot> _parser = new pb::MessageParser<RaceExtendRobot>(() => new RaceExtendRobot());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RaceExtendRobot> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.RaceExtendRobotConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RaceExtendRobot() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RaceExtendRobot(RaceExtendRobot other) : this() {
      id_ = other.id_;
      addScore_ = other.addScore_.Clone();
      offline_ = other.offline_.Clone();
      offlineAddScore_ = other.offlineAddScore_.Clone();
      online_ = other.online_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RaceExtendRobot Clone() {
      return new RaceExtendRobot(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 机器人id
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "addScore" field.</summary>
    public const int AddScoreFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_addScore_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> addScore_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 在线积分增长数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> AddScore {
      get { return addScore_; }
    }

    /// <summary>Field number for the "offline" field.</summary>
    public const int OfflineFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_offline_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> offline_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 离线刷新时间间隔s
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Offline {
      get { return offline_; }
    }

    /// <summary>Field number for the "offlineAddScore" field.</summary>
    public const int OfflineAddScoreFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_offlineAddScore_codec
        = pb::FieldCodec.ForInt32(34);
    private readonly pbc::RepeatedField<int> offlineAddScore_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 离线积分增长数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> OfflineAddScore {
      get { return offlineAddScore_; }
    }

    /// <summary>Field number for the "online" field.</summary>
    public const int OnlineFieldNumber = 5;
    private static readonly pb::FieldCodec<int> _repeated_online_codec
        = pb::FieldCodec.ForInt32(42);
    private readonly pbc::RepeatedField<int> online_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 在线刷新时间间隔（s/100)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Online {
      get { return online_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RaceExtendRobot);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RaceExtendRobot other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!addScore_.Equals(other.addScore_)) return false;
      if(!offline_.Equals(other.offline_)) return false;
      if(!offlineAddScore_.Equals(other.offlineAddScore_)) return false;
      if(!online_.Equals(other.online_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      hash ^= addScore_.GetHashCode();
      hash ^= offline_.GetHashCode();
      hash ^= offlineAddScore_.GetHashCode();
      hash ^= online_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      addScore_.WriteTo(output, _repeated_addScore_codec);
      offline_.WriteTo(output, _repeated_offline_codec);
      offlineAddScore_.WriteTo(output, _repeated_offlineAddScore_codec);
      online_.WriteTo(output, _repeated_online_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      addScore_.WriteTo(ref output, _repeated_addScore_codec);
      offline_.WriteTo(ref output, _repeated_offline_codec);
      offlineAddScore_.WriteTo(ref output, _repeated_offlineAddScore_codec);
      online_.WriteTo(ref output, _repeated_online_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      size += addScore_.CalculateSize(_repeated_addScore_codec);
      size += offline_.CalculateSize(_repeated_offline_codec);
      size += offlineAddScore_.CalculateSize(_repeated_offlineAddScore_codec);
      size += online_.CalculateSize(_repeated_online_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RaceExtendRobot other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      addScore_.Add(other.addScore_);
      offline_.Add(other.offline_);
      offlineAddScore_.Add(other.offlineAddScore_);
      online_.Add(other.online_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            addScore_.AddEntriesFrom(input, _repeated_addScore_codec);
            break;
          }
          case 26:
          case 24: {
            offline_.AddEntriesFrom(input, _repeated_offline_codec);
            break;
          }
          case 34:
          case 32: {
            offlineAddScore_.AddEntriesFrom(input, _repeated_offlineAddScore_codec);
            break;
          }
          case 42:
          case 40: {
            online_.AddEntriesFrom(input, _repeated_online_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            addScore_.AddEntriesFrom(ref input, _repeated_addScore_codec);
            break;
          }
          case 26:
          case 24: {
            offline_.AddEntriesFrom(ref input, _repeated_offline_codec);
            break;
          }
          case 34:
          case 32: {
            offlineAddScore_.AddEntriesFrom(ref input, _repeated_offlineAddScore_codec);
            break;
          }
          case 42:
          case 40: {
            online_.AddEntriesFrom(ref input, _repeated_online_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RaceExtendRobotMapABValue : pb::IMessage<RaceExtendRobotMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RaceExtendRobotMapABValue> _parser = new pb::MessageParser<RaceExtendRobotMapABValue>(() => new RaceExtendRobotMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RaceExtendRobotMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.RaceExtendRobotConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RaceExtendRobotMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RaceExtendRobotMapABValue(RaceExtendRobotMapABValue other) : this() {
      raceExtendRobotMap_ = other.raceExtendRobotMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RaceExtendRobotMapABValue Clone() {
      return new RaceExtendRobotMapABValue(this);
    }

    /// <summary>Field number for the "RaceExtendRobotMap" field.</summary>
    public const int RaceExtendRobotMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.RaceExtendRobot>.Codec _map_raceExtendRobotMap_codec
        = new pbc::MapField<int, global::fat.rawdata.RaceExtendRobot>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.RaceExtendRobot.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.RaceExtendRobot> raceExtendRobotMap_ = new pbc::MapField<int, global::fat.rawdata.RaceExtendRobot>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.RaceExtendRobot> RaceExtendRobotMap {
      get { return raceExtendRobotMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RaceExtendRobotMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RaceExtendRobotMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!RaceExtendRobotMap.Equals(other.RaceExtendRobotMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= RaceExtendRobotMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      raceExtendRobotMap_.WriteTo(output, _map_raceExtendRobotMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      raceExtendRobotMap_.WriteTo(ref output, _map_raceExtendRobotMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += raceExtendRobotMap_.CalculateSize(_map_raceExtendRobotMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RaceExtendRobotMapABValue other) {
      if (other == null) {
        return;
      }
      raceExtendRobotMap_.Add(other.raceExtendRobotMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            raceExtendRobotMap_.AddEntriesFrom(input, _map_raceExtendRobotMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            raceExtendRobotMap_.AddEntriesFrom(ref input, _map_raceExtendRobotMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RaceExtendRobotConf : pb::IMessage<RaceExtendRobotConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RaceExtendRobotConf> _parser = new pb::MessageParser<RaceExtendRobotConf>(() => new RaceExtendRobotConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RaceExtendRobotConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.RaceExtendRobotConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RaceExtendRobotConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RaceExtendRobotConf(RaceExtendRobotConf other) : this() {
      raceExtendRobotMap_ = other.raceExtendRobotMap_.Clone();
      raceExtendRobotMapAB_ = other.raceExtendRobotMapAB_.Clone();
      raceExtendRobotMapABPatch_ = other.raceExtendRobotMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RaceExtendRobotConf Clone() {
      return new RaceExtendRobotConf(this);
    }

    /// <summary>Field number for the "RaceExtendRobotMap" field.</summary>
    public const int RaceExtendRobotMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.RaceExtendRobot>.Codec _map_raceExtendRobotMap_codec
        = new pbc::MapField<int, global::fat.rawdata.RaceExtendRobot>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.RaceExtendRobot.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.RaceExtendRobot> raceExtendRobotMap_ = new pbc::MapField<int, global::fat.rawdata.RaceExtendRobot>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.RaceExtendRobot> RaceExtendRobotMap {
      get { return raceExtendRobotMap_; }
    }

    /// <summary>Field number for the "RaceExtendRobotMapAB" field.</summary>
    public const int RaceExtendRobotMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.RaceExtendRobotMapABValue>.Codec _map_raceExtendRobotMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.RaceExtendRobotMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.RaceExtendRobotMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.RaceExtendRobotMapABValue> raceExtendRobotMapAB_ = new pbc::MapField<string, global::fat.rawdata.RaceExtendRobotMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.RaceExtendRobotMapABValue> RaceExtendRobotMapAB {
      get { return raceExtendRobotMapAB_; }
    }

    /// <summary>Field number for the "RaceExtendRobotMapABPatch" field.</summary>
    public const int RaceExtendRobotMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.RaceExtendRobotMapABValue>.Codec _map_raceExtendRobotMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.RaceExtendRobotMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.RaceExtendRobotMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.RaceExtendRobotMapABValue> raceExtendRobotMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.RaceExtendRobotMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.RaceExtendRobotMapABValue> RaceExtendRobotMapABPatch {
      get { return raceExtendRobotMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RaceExtendRobotConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RaceExtendRobotConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!RaceExtendRobotMap.Equals(other.RaceExtendRobotMap)) return false;
      if (!RaceExtendRobotMapAB.Equals(other.RaceExtendRobotMapAB)) return false;
      if (!RaceExtendRobotMapABPatch.Equals(other.RaceExtendRobotMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= RaceExtendRobotMap.GetHashCode();
      hash ^= RaceExtendRobotMapAB.GetHashCode();
      hash ^= RaceExtendRobotMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      raceExtendRobotMap_.WriteTo(output, _map_raceExtendRobotMap_codec);
      raceExtendRobotMapAB_.WriteTo(output, _map_raceExtendRobotMapAB_codec);
      raceExtendRobotMapABPatch_.WriteTo(output, _map_raceExtendRobotMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      raceExtendRobotMap_.WriteTo(ref output, _map_raceExtendRobotMap_codec);
      raceExtendRobotMapAB_.WriteTo(ref output, _map_raceExtendRobotMapAB_codec);
      raceExtendRobotMapABPatch_.WriteTo(ref output, _map_raceExtendRobotMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += raceExtendRobotMap_.CalculateSize(_map_raceExtendRobotMap_codec);
      size += raceExtendRobotMapAB_.CalculateSize(_map_raceExtendRobotMapAB_codec);
      size += raceExtendRobotMapABPatch_.CalculateSize(_map_raceExtendRobotMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RaceExtendRobotConf other) {
      if (other == null) {
        return;
      }
      raceExtendRobotMap_.Add(other.raceExtendRobotMap_);
      raceExtendRobotMapAB_.Add(other.raceExtendRobotMapAB_);
      raceExtendRobotMapABPatch_.Add(other.raceExtendRobotMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            raceExtendRobotMap_.AddEntriesFrom(input, _map_raceExtendRobotMap_codec);
            break;
          }
          case 18: {
            raceExtendRobotMapAB_.AddEntriesFrom(input, _map_raceExtendRobotMapAB_codec);
            break;
          }
          case 26: {
            raceExtendRobotMapABPatch_.AddEntriesFrom(input, _map_raceExtendRobotMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            raceExtendRobotMap_.AddEntriesFrom(ref input, _map_raceExtendRobotMap_codec);
            break;
          }
          case 18: {
            raceExtendRobotMapAB_.AddEntriesFrom(ref input, _map_raceExtendRobotMapAB_codec);
            break;
          }
          case 26: {
            raceExtendRobotMapABPatch_.AddEntriesFrom(ref input, _map_raceExtendRobotMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
