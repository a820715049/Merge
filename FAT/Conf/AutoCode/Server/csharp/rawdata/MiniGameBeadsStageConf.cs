// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/MiniGameBeadsStageConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/MiniGameBeadsStageConf.proto</summary>
  public static partial class MiniGameBeadsStageConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/MiniGameBeadsStageConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MiniGameBeadsStageConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiRyYXdkYXRhL01pbmlHYW1lQmVhZHNTdGFnZUNvbmYucHJvdG8SB3Jhd2Rh",
            "dGEiRAoSTWluaUdhbWVCZWFkc1N0YWdlEgoKAmlkGAEgASgFEhAKCGJhc2VJ",
            "bmZvGAIgASgFEhAKCGNlbGxJbmZvGAMgAygFItoBChxNaW5pR2FtZUJlYWRz",
            "U3RhZ2VNYXBBQlZhbHVlEl8KFU1pbmlHYW1lQmVhZHNTdGFnZU1hcBgBIAMo",
            "CzJALnJhd2RhdGEuTWluaUdhbWVCZWFkc1N0YWdlTWFwQUJWYWx1ZS5NaW5p",
            "R2FtZUJlYWRzU3RhZ2VNYXBFbnRyeRpZChpNaW5pR2FtZUJlYWRzU3RhZ2VN",
            "YXBFbnRyeRILCgNrZXkYASABKAUSKgoFdmFsdWUYAiABKAsyGy5yYXdkYXRh",
            "Lk1pbmlHYW1lQmVhZHNTdGFnZToCOAEi6QQKFk1pbmlHYW1lQmVhZHNTdGFn",
            "ZUNvbmYSWQoVTWluaUdhbWVCZWFkc1N0YWdlTWFwGAEgAygLMjoucmF3ZGF0",
            "YS5NaW5pR2FtZUJlYWRzU3RhZ2VDb25mLk1pbmlHYW1lQmVhZHNTdGFnZU1h",
            "cEVudHJ5El0KF01pbmlHYW1lQmVhZHNTdGFnZU1hcEFCGAIgAygLMjwucmF3",
            "ZGF0YS5NaW5pR2FtZUJlYWRzU3RhZ2VDb25mLk1pbmlHYW1lQmVhZHNTdGFn",
            "ZU1hcEFCRW50cnkSZwocTWluaUdhbWVCZWFkc1N0YWdlTWFwQUJQYXRjaBgD",
            "IAMoCzJBLnJhd2RhdGEuTWluaUdhbWVCZWFkc1N0YWdlQ29uZi5NaW5pR2Ft",
            "ZUJlYWRzU3RhZ2VNYXBBQlBhdGNoRW50cnkaWQoaTWluaUdhbWVCZWFkc1N0",
            "YWdlTWFwRW50cnkSCwoDa2V5GAEgASgFEioKBXZhbHVlGAIgASgLMhsucmF3",
            "ZGF0YS5NaW5pR2FtZUJlYWRzU3RhZ2U6AjgBGmUKHE1pbmlHYW1lQmVhZHNT",
            "dGFnZU1hcEFCRW50cnkSCwoDa2V5GAEgASgJEjQKBXZhbHVlGAIgASgLMiUu",
            "cmF3ZGF0YS5NaW5pR2FtZUJlYWRzU3RhZ2VNYXBBQlZhbHVlOgI4ARpqCiFN",
            "aW5pR2FtZUJlYWRzU3RhZ2VNYXBBQlBhdGNoRW50cnkSCwoDa2V5GAEgASgJ",
            "EjQKBXZhbHVlGAIgASgLMiUucmF3ZGF0YS5NaW5pR2FtZUJlYWRzU3RhZ2VN",
            "YXBBQlZhbHVlOgI4AUI9Wi1naXRsYWIuZnVucGx1cy5pby9mYXQvY29uZi9n",
            "ZW4vZ29sYW5nL3Jhd2RhdGGqAgtmYXQucmF3ZGF0YWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.MiniGameBeadsStage), global::fat.rawdata.MiniGameBeadsStage.Parser, new[]{ "Id", "BaseInfo", "CellInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.MiniGameBeadsStageMapABValue), global::fat.rawdata.MiniGameBeadsStageMapABValue.Parser, new[]{ "MiniGameBeadsStageMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.MiniGameBeadsStageConf), global::fat.rawdata.MiniGameBeadsStageConf.Parser, new[]{ "MiniGameBeadsStageMap", "MiniGameBeadsStageMapAB", "MiniGameBeadsStageMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="MiniGameBeadsStage",table="MiniGameBeadsStageMap",table_wrapper="MiniGameBeadsStageConf",map="true",map_key_type="int32",data="MiniGameBeadsStageConf")
  /// annotation@ab(table_ab="MiniGameBeadsStageMapAB",table_ab_patch="MiniGameBeadsStageMapABPatch",table_ab_value="MiniGameBeadsStageMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@MiniGameBeadsStage(id="id")
  /// </summary>
  public sealed partial class MiniGameBeadsStage : pb::IMessage<MiniGameBeadsStage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MiniGameBeadsStage> _parser = new pb::MessageParser<MiniGameBeadsStage>(() => new MiniGameBeadsStage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MiniGameBeadsStage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.MiniGameBeadsStageConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MiniGameBeadsStage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MiniGameBeadsStage(MiniGameBeadsStage other) : this() {
      id_ = other.id_;
      baseInfo_ = other.baseInfo_;
      cellInfo_ = other.cellInfo_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MiniGameBeadsStage Clone() {
      return new MiniGameBeadsStage(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// stage.ID
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "baseInfo" field.</summary>
    public const int BaseInfoFieldNumber = 2;
    private int baseInfo_;
    /// <summary>
    /// 基座
    /// MiniGameBeadsBase.id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BaseInfo {
      get { return baseInfo_; }
      set {
        baseInfo_ = value;
      }
    }

    /// <summary>Field number for the "cellInfo" field.</summary>
    public const int CellInfoFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_cellInfo_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> cellInfo_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 串珠分布
    /// MiniGameBeadsCell.id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> CellInfo {
      get { return cellInfo_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MiniGameBeadsStage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MiniGameBeadsStage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (BaseInfo != other.BaseInfo) return false;
      if(!cellInfo_.Equals(other.cellInfo_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (BaseInfo != 0) hash ^= BaseInfo.GetHashCode();
      hash ^= cellInfo_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (BaseInfo != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BaseInfo);
      }
      cellInfo_.WriteTo(output, _repeated_cellInfo_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (BaseInfo != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BaseInfo);
      }
      cellInfo_.WriteTo(ref output, _repeated_cellInfo_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (BaseInfo != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BaseInfo);
      }
      size += cellInfo_.CalculateSize(_repeated_cellInfo_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MiniGameBeadsStage other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.BaseInfo != 0) {
        BaseInfo = other.BaseInfo;
      }
      cellInfo_.Add(other.cellInfo_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            BaseInfo = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            cellInfo_.AddEntriesFrom(input, _repeated_cellInfo_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            BaseInfo = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            cellInfo_.AddEntriesFrom(ref input, _repeated_cellInfo_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MiniGameBeadsStageMapABValue : pb::IMessage<MiniGameBeadsStageMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MiniGameBeadsStageMapABValue> _parser = new pb::MessageParser<MiniGameBeadsStageMapABValue>(() => new MiniGameBeadsStageMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MiniGameBeadsStageMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.MiniGameBeadsStageConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MiniGameBeadsStageMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MiniGameBeadsStageMapABValue(MiniGameBeadsStageMapABValue other) : this() {
      miniGameBeadsStageMap_ = other.miniGameBeadsStageMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MiniGameBeadsStageMapABValue Clone() {
      return new MiniGameBeadsStageMapABValue(this);
    }

    /// <summary>Field number for the "MiniGameBeadsStageMap" field.</summary>
    public const int MiniGameBeadsStageMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.MiniGameBeadsStage>.Codec _map_miniGameBeadsStageMap_codec
        = new pbc::MapField<int, global::fat.rawdata.MiniGameBeadsStage>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.MiniGameBeadsStage.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.MiniGameBeadsStage> miniGameBeadsStageMap_ = new pbc::MapField<int, global::fat.rawdata.MiniGameBeadsStage>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.MiniGameBeadsStage> MiniGameBeadsStageMap {
      get { return miniGameBeadsStageMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MiniGameBeadsStageMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MiniGameBeadsStageMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!MiniGameBeadsStageMap.Equals(other.MiniGameBeadsStageMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= MiniGameBeadsStageMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      miniGameBeadsStageMap_.WriteTo(output, _map_miniGameBeadsStageMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      miniGameBeadsStageMap_.WriteTo(ref output, _map_miniGameBeadsStageMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += miniGameBeadsStageMap_.CalculateSize(_map_miniGameBeadsStageMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MiniGameBeadsStageMapABValue other) {
      if (other == null) {
        return;
      }
      miniGameBeadsStageMap_.Add(other.miniGameBeadsStageMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            miniGameBeadsStageMap_.AddEntriesFrom(input, _map_miniGameBeadsStageMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            miniGameBeadsStageMap_.AddEntriesFrom(ref input, _map_miniGameBeadsStageMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MiniGameBeadsStageConf : pb::IMessage<MiniGameBeadsStageConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MiniGameBeadsStageConf> _parser = new pb::MessageParser<MiniGameBeadsStageConf>(() => new MiniGameBeadsStageConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MiniGameBeadsStageConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.MiniGameBeadsStageConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MiniGameBeadsStageConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MiniGameBeadsStageConf(MiniGameBeadsStageConf other) : this() {
      miniGameBeadsStageMap_ = other.miniGameBeadsStageMap_.Clone();
      miniGameBeadsStageMapAB_ = other.miniGameBeadsStageMapAB_.Clone();
      miniGameBeadsStageMapABPatch_ = other.miniGameBeadsStageMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MiniGameBeadsStageConf Clone() {
      return new MiniGameBeadsStageConf(this);
    }

    /// <summary>Field number for the "MiniGameBeadsStageMap" field.</summary>
    public const int MiniGameBeadsStageMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.MiniGameBeadsStage>.Codec _map_miniGameBeadsStageMap_codec
        = new pbc::MapField<int, global::fat.rawdata.MiniGameBeadsStage>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.MiniGameBeadsStage.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.MiniGameBeadsStage> miniGameBeadsStageMap_ = new pbc::MapField<int, global::fat.rawdata.MiniGameBeadsStage>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.MiniGameBeadsStage> MiniGameBeadsStageMap {
      get { return miniGameBeadsStageMap_; }
    }

    /// <summary>Field number for the "MiniGameBeadsStageMapAB" field.</summary>
    public const int MiniGameBeadsStageMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.MiniGameBeadsStageMapABValue>.Codec _map_miniGameBeadsStageMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.MiniGameBeadsStageMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.MiniGameBeadsStageMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.MiniGameBeadsStageMapABValue> miniGameBeadsStageMapAB_ = new pbc::MapField<string, global::fat.rawdata.MiniGameBeadsStageMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.MiniGameBeadsStageMapABValue> MiniGameBeadsStageMapAB {
      get { return miniGameBeadsStageMapAB_; }
    }

    /// <summary>Field number for the "MiniGameBeadsStageMapABPatch" field.</summary>
    public const int MiniGameBeadsStageMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.MiniGameBeadsStageMapABValue>.Codec _map_miniGameBeadsStageMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.MiniGameBeadsStageMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.MiniGameBeadsStageMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.MiniGameBeadsStageMapABValue> miniGameBeadsStageMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.MiniGameBeadsStageMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.MiniGameBeadsStageMapABValue> MiniGameBeadsStageMapABPatch {
      get { return miniGameBeadsStageMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MiniGameBeadsStageConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MiniGameBeadsStageConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!MiniGameBeadsStageMap.Equals(other.MiniGameBeadsStageMap)) return false;
      if (!MiniGameBeadsStageMapAB.Equals(other.MiniGameBeadsStageMapAB)) return false;
      if (!MiniGameBeadsStageMapABPatch.Equals(other.MiniGameBeadsStageMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= MiniGameBeadsStageMap.GetHashCode();
      hash ^= MiniGameBeadsStageMapAB.GetHashCode();
      hash ^= MiniGameBeadsStageMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      miniGameBeadsStageMap_.WriteTo(output, _map_miniGameBeadsStageMap_codec);
      miniGameBeadsStageMapAB_.WriteTo(output, _map_miniGameBeadsStageMapAB_codec);
      miniGameBeadsStageMapABPatch_.WriteTo(output, _map_miniGameBeadsStageMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      miniGameBeadsStageMap_.WriteTo(ref output, _map_miniGameBeadsStageMap_codec);
      miniGameBeadsStageMapAB_.WriteTo(ref output, _map_miniGameBeadsStageMapAB_codec);
      miniGameBeadsStageMapABPatch_.WriteTo(ref output, _map_miniGameBeadsStageMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += miniGameBeadsStageMap_.CalculateSize(_map_miniGameBeadsStageMap_codec);
      size += miniGameBeadsStageMapAB_.CalculateSize(_map_miniGameBeadsStageMapAB_codec);
      size += miniGameBeadsStageMapABPatch_.CalculateSize(_map_miniGameBeadsStageMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MiniGameBeadsStageConf other) {
      if (other == null) {
        return;
      }
      miniGameBeadsStageMap_.Add(other.miniGameBeadsStageMap_);
      miniGameBeadsStageMapAB_.Add(other.miniGameBeadsStageMapAB_);
      miniGameBeadsStageMapABPatch_.Add(other.miniGameBeadsStageMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            miniGameBeadsStageMap_.AddEntriesFrom(input, _map_miniGameBeadsStageMap_codec);
            break;
          }
          case 18: {
            miniGameBeadsStageMapAB_.AddEntriesFrom(input, _map_miniGameBeadsStageMapAB_codec);
            break;
          }
          case 26: {
            miniGameBeadsStageMapABPatch_.AddEntriesFrom(input, _map_miniGameBeadsStageMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            miniGameBeadsStageMap_.AddEntriesFrom(ref input, _map_miniGameBeadsStageMap_codec);
            break;
          }
          case 18: {
            miniGameBeadsStageMapAB_.AddEntriesFrom(ref input, _map_miniGameBeadsStageMapAB_codec);
            break;
          }
          case 26: {
            miniGameBeadsStageMapABPatch_.AddEntriesFrom(ref input, _map_miniGameBeadsStageMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
