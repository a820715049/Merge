// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/NoticeInfoConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/NoticeInfoConf.proto</summary>
  public static partial class NoticeInfoConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/NoticeInfoConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static NoticeInfoConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChxyYXdkYXRhL05vdGljZUluZm9Db25mLnByb3RvEgdyYXdkYXRhGhhyYXdk",
            "YXRhL05vdGljZVR5cGUucHJvdG8igAEKCk5vdGljZUluZm8SDQoFYXNzZXQY",
            "BiADKAUSDQoFaW1hZ2UYASABKAkSJQoIbm90aWNlSWQYAiABKA4yEy5yYXdk",
            "YXRhLk5vdGljZVR5cGUSEAoIc3ViVGl0bGUYAyABKAkSDAoEdGV4dBgEIAEo",
            "CRINCgV0aXRsZRgFIAEoCSJGChZOb3RpY2VJbmZvU2xpY2VBQlZhbHVlEiwK",
            "D05vdGljZUluZm9TbGljZRgBIAMoCzITLnJhd2RhdGEuTm90aWNlSW5mbyKZ",
            "AwoOTm90aWNlSW5mb0NvbmYSLAoPTm90aWNlSW5mb1NsaWNlGAEgAygLMhMu",
            "cmF3ZGF0YS5Ob3RpY2VJbmZvEkkKEU5vdGljZUluZm9TbGljZUFCGAIgAygL",
            "Mi4ucmF3ZGF0YS5Ob3RpY2VJbmZvQ29uZi5Ob3RpY2VJbmZvU2xpY2VBQkVu",
            "dHJ5ElMKFk5vdGljZUluZm9TbGljZUFCUGF0Y2gYAyADKAsyMy5yYXdkYXRh",
            "Lk5vdGljZUluZm9Db25mLk5vdGljZUluZm9TbGljZUFCUGF0Y2hFbnRyeRpZ",
            "ChZOb3RpY2VJbmZvU2xpY2VBQkVudHJ5EgsKA2tleRgBIAEoCRIuCgV2YWx1",
            "ZRgCIAEoCzIfLnJhd2RhdGEuTm90aWNlSW5mb1NsaWNlQUJWYWx1ZToCOAEa",
            "XgobTm90aWNlSW5mb1NsaWNlQUJQYXRjaEVudHJ5EgsKA2tleRgBIAEoCRIu",
            "CgV2YWx1ZRgCIAEoCzIfLnJhd2RhdGEuTm90aWNlSW5mb1NsaWNlQUJWYWx1",
            "ZToCOAFCPVotZ2l0bGFiLmZ1bnBsdXMuaW8vZmF0L2NvbmYvZ2VuL2dvbGFu",
            "Zy9yYXdkYXRhqgILZmF0LnJhd2RhdGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::fat.rawdata.NoticeTypeReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.NoticeInfo), global::fat.rawdata.NoticeInfo.Parser, new[]{ "Asset", "Image", "NoticeId", "SubTitle", "Text", "Title" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.NoticeInfoSliceABValue), global::fat.rawdata.NoticeInfoSliceABValue.Parser, new[]{ "NoticeInfoSlice" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.NoticeInfoConf), global::fat.rawdata.NoticeInfoConf.Parser, new[]{ "NoticeInfoSlice", "NoticeInfoSliceAB", "NoticeInfoSliceABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="NoticeInfo",table="NoticeInfoSlice",table_wrapper="NoticeInfoConf",map="false",map_key_type="",data="NoticeInfoConf")
  /// annotation@ab(table_ab="NoticeInfoSliceAB",table_ab_patch="NoticeInfoSliceABPatch",table_ab_value="NoticeInfoSliceABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// </summary>
  public sealed partial class NoticeInfo : pb::IMessage<NoticeInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NoticeInfo> _parser = new pb::MessageParser<NoticeInfo>(() => new NoticeInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NoticeInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.NoticeInfoConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NoticeInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NoticeInfo(NoticeInfo other) : this() {
      asset_ = other.asset_.Clone();
      image_ = other.image_;
      noticeId_ = other.noticeId_;
      subTitle_ = other.subTitle_;
      text_ = other.text_;
      title_ = other.title_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NoticeInfo Clone() {
      return new NoticeInfo(this);
    }

    /// <summary>Field number for the "asset" field.</summary>
    public const int AssetFieldNumber = 6;
    private static readonly pb::FieldCodec<int> _repeated_asset_codec
        = pb::FieldCodec.ForInt32(50);
    private readonly pbc::RepeatedField<int> asset_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 推送图文资源
    /// （NoticeDetail.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Asset {
      get { return asset_; }
    }

    /// <summary>Field number for the "image" field.</summary>
    public const int ImageFieldNumber = 1;
    private string image_ = "";
    /// <summary>
    /// 推送配图
    /// （Asset）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Image {
      get { return image_; }
      set {
        image_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "noticeId" field.</summary>
    public const int NoticeIdFieldNumber = 2;
    private global::fat.rawdata.NoticeType noticeId_ = global::fat.rawdata.NoticeType.EnergyFull;
    /// <summary>
    /// 定时推送ID
    /// （NoticeType@enum）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::fat.rawdata.NoticeType NoticeId {
      get { return noticeId_; }
      set {
        noticeId_ = value;
      }
    }

    /// <summary>Field number for the "subTitle" field.</summary>
    public const int SubTitleFieldNumber = 3;
    private string subTitle_ = "";
    /// <summary>
    /// 推送副标题
    /// （多语言）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SubTitle {
      get { return subTitle_; }
      set {
        subTitle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 4;
    private string text_ = "";
    /// <summary>
    /// 推送内容
    /// （多语言）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return text_; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 5;
    private string title_ = "";
    /// <summary>
    /// 推送标题
    /// （多语言）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NoticeInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NoticeInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!asset_.Equals(other.asset_)) return false;
      if (Image != other.Image) return false;
      if (NoticeId != other.NoticeId) return false;
      if (SubTitle != other.SubTitle) return false;
      if (Text != other.Text) return false;
      if (Title != other.Title) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= asset_.GetHashCode();
      if (Image.Length != 0) hash ^= Image.GetHashCode();
      if (NoticeId != global::fat.rawdata.NoticeType.EnergyFull) hash ^= NoticeId.GetHashCode();
      if (SubTitle.Length != 0) hash ^= SubTitle.GetHashCode();
      if (Text.Length != 0) hash ^= Text.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Image.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Image);
      }
      if (NoticeId != global::fat.rawdata.NoticeType.EnergyFull) {
        output.WriteRawTag(16);
        output.WriteEnum((int) NoticeId);
      }
      if (SubTitle.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SubTitle);
      }
      if (Text.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Text);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Title);
      }
      asset_.WriteTo(output, _repeated_asset_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Image.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Image);
      }
      if (NoticeId != global::fat.rawdata.NoticeType.EnergyFull) {
        output.WriteRawTag(16);
        output.WriteEnum((int) NoticeId);
      }
      if (SubTitle.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SubTitle);
      }
      if (Text.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Text);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Title);
      }
      asset_.WriteTo(ref output, _repeated_asset_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += asset_.CalculateSize(_repeated_asset_codec);
      if (Image.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Image);
      }
      if (NoticeId != global::fat.rawdata.NoticeType.EnergyFull) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) NoticeId);
      }
      if (SubTitle.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SubTitle);
      }
      if (Text.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NoticeInfo other) {
      if (other == null) {
        return;
      }
      asset_.Add(other.asset_);
      if (other.Image.Length != 0) {
        Image = other.Image;
      }
      if (other.NoticeId != global::fat.rawdata.NoticeType.EnergyFull) {
        NoticeId = other.NoticeId;
      }
      if (other.SubTitle.Length != 0) {
        SubTitle = other.SubTitle;
      }
      if (other.Text.Length != 0) {
        Text = other.Text;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Image = input.ReadString();
            break;
          }
          case 16: {
            NoticeId = (global::fat.rawdata.NoticeType) input.ReadEnum();
            break;
          }
          case 26: {
            SubTitle = input.ReadString();
            break;
          }
          case 34: {
            Text = input.ReadString();
            break;
          }
          case 42: {
            Title = input.ReadString();
            break;
          }
          case 50:
          case 48: {
            asset_.AddEntriesFrom(input, _repeated_asset_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Image = input.ReadString();
            break;
          }
          case 16: {
            NoticeId = (global::fat.rawdata.NoticeType) input.ReadEnum();
            break;
          }
          case 26: {
            SubTitle = input.ReadString();
            break;
          }
          case 34: {
            Text = input.ReadString();
            break;
          }
          case 42: {
            Title = input.ReadString();
            break;
          }
          case 50:
          case 48: {
            asset_.AddEntriesFrom(ref input, _repeated_asset_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class NoticeInfoSliceABValue : pb::IMessage<NoticeInfoSliceABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NoticeInfoSliceABValue> _parser = new pb::MessageParser<NoticeInfoSliceABValue>(() => new NoticeInfoSliceABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NoticeInfoSliceABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.NoticeInfoConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NoticeInfoSliceABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NoticeInfoSliceABValue(NoticeInfoSliceABValue other) : this() {
      noticeInfoSlice_ = other.noticeInfoSlice_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NoticeInfoSliceABValue Clone() {
      return new NoticeInfoSliceABValue(this);
    }

    /// <summary>Field number for the "NoticeInfoSlice" field.</summary>
    public const int NoticeInfoSliceFieldNumber = 1;
    private static readonly pb::FieldCodec<global::fat.rawdata.NoticeInfo> _repeated_noticeInfoSlice_codec
        = pb::FieldCodec.ForMessage(10, global::fat.rawdata.NoticeInfo.Parser);
    private readonly pbc::RepeatedField<global::fat.rawdata.NoticeInfo> noticeInfoSlice_ = new pbc::RepeatedField<global::fat.rawdata.NoticeInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::fat.rawdata.NoticeInfo> NoticeInfoSlice {
      get { return noticeInfoSlice_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NoticeInfoSliceABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NoticeInfoSliceABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!noticeInfoSlice_.Equals(other.noticeInfoSlice_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= noticeInfoSlice_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      noticeInfoSlice_.WriteTo(output, _repeated_noticeInfoSlice_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      noticeInfoSlice_.WriteTo(ref output, _repeated_noticeInfoSlice_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += noticeInfoSlice_.CalculateSize(_repeated_noticeInfoSlice_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NoticeInfoSliceABValue other) {
      if (other == null) {
        return;
      }
      noticeInfoSlice_.Add(other.noticeInfoSlice_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            noticeInfoSlice_.AddEntriesFrom(input, _repeated_noticeInfoSlice_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            noticeInfoSlice_.AddEntriesFrom(ref input, _repeated_noticeInfoSlice_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class NoticeInfoConf : pb::IMessage<NoticeInfoConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NoticeInfoConf> _parser = new pb::MessageParser<NoticeInfoConf>(() => new NoticeInfoConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NoticeInfoConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.NoticeInfoConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NoticeInfoConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NoticeInfoConf(NoticeInfoConf other) : this() {
      noticeInfoSlice_ = other.noticeInfoSlice_.Clone();
      noticeInfoSliceAB_ = other.noticeInfoSliceAB_.Clone();
      noticeInfoSliceABPatch_ = other.noticeInfoSliceABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NoticeInfoConf Clone() {
      return new NoticeInfoConf(this);
    }

    /// <summary>Field number for the "NoticeInfoSlice" field.</summary>
    public const int NoticeInfoSliceFieldNumber = 1;
    private static readonly pb::FieldCodec<global::fat.rawdata.NoticeInfo> _repeated_noticeInfoSlice_codec
        = pb::FieldCodec.ForMessage(10, global::fat.rawdata.NoticeInfo.Parser);
    private readonly pbc::RepeatedField<global::fat.rawdata.NoticeInfo> noticeInfoSlice_ = new pbc::RepeatedField<global::fat.rawdata.NoticeInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::fat.rawdata.NoticeInfo> NoticeInfoSlice {
      get { return noticeInfoSlice_; }
    }

    /// <summary>Field number for the "NoticeInfoSliceAB" field.</summary>
    public const int NoticeInfoSliceABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.NoticeInfoSliceABValue>.Codec _map_noticeInfoSliceAB_codec
        = new pbc::MapField<string, global::fat.rawdata.NoticeInfoSliceABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.NoticeInfoSliceABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.NoticeInfoSliceABValue> noticeInfoSliceAB_ = new pbc::MapField<string, global::fat.rawdata.NoticeInfoSliceABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.NoticeInfoSliceABValue> NoticeInfoSliceAB {
      get { return noticeInfoSliceAB_; }
    }

    /// <summary>Field number for the "NoticeInfoSliceABPatch" field.</summary>
    public const int NoticeInfoSliceABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.NoticeInfoSliceABValue>.Codec _map_noticeInfoSliceABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.NoticeInfoSliceABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.NoticeInfoSliceABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.NoticeInfoSliceABValue> noticeInfoSliceABPatch_ = new pbc::MapField<string, global::fat.rawdata.NoticeInfoSliceABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.NoticeInfoSliceABValue> NoticeInfoSliceABPatch {
      get { return noticeInfoSliceABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NoticeInfoConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NoticeInfoConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!noticeInfoSlice_.Equals(other.noticeInfoSlice_)) return false;
      if (!NoticeInfoSliceAB.Equals(other.NoticeInfoSliceAB)) return false;
      if (!NoticeInfoSliceABPatch.Equals(other.NoticeInfoSliceABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= noticeInfoSlice_.GetHashCode();
      hash ^= NoticeInfoSliceAB.GetHashCode();
      hash ^= NoticeInfoSliceABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      noticeInfoSlice_.WriteTo(output, _repeated_noticeInfoSlice_codec);
      noticeInfoSliceAB_.WriteTo(output, _map_noticeInfoSliceAB_codec);
      noticeInfoSliceABPatch_.WriteTo(output, _map_noticeInfoSliceABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      noticeInfoSlice_.WriteTo(ref output, _repeated_noticeInfoSlice_codec);
      noticeInfoSliceAB_.WriteTo(ref output, _map_noticeInfoSliceAB_codec);
      noticeInfoSliceABPatch_.WriteTo(ref output, _map_noticeInfoSliceABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += noticeInfoSlice_.CalculateSize(_repeated_noticeInfoSlice_codec);
      size += noticeInfoSliceAB_.CalculateSize(_map_noticeInfoSliceAB_codec);
      size += noticeInfoSliceABPatch_.CalculateSize(_map_noticeInfoSliceABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NoticeInfoConf other) {
      if (other == null) {
        return;
      }
      noticeInfoSlice_.Add(other.noticeInfoSlice_);
      noticeInfoSliceAB_.Add(other.noticeInfoSliceAB_);
      noticeInfoSliceABPatch_.Add(other.noticeInfoSliceABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            noticeInfoSlice_.AddEntriesFrom(input, _repeated_noticeInfoSlice_codec);
            break;
          }
          case 18: {
            noticeInfoSliceAB_.AddEntriesFrom(input, _map_noticeInfoSliceAB_codec);
            break;
          }
          case 26: {
            noticeInfoSliceABPatch_.AddEntriesFrom(input, _map_noticeInfoSliceABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            noticeInfoSlice_.AddEntriesFrom(ref input, _repeated_noticeInfoSlice_codec);
            break;
          }
          case 18: {
            noticeInfoSliceAB_.AddEntriesFrom(ref input, _map_noticeInfoSliceAB_codec);
            break;
          }
          case 26: {
            noticeInfoSliceABPatch_.AddEntriesFrom(ref input, _map_noticeInfoSliceABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
