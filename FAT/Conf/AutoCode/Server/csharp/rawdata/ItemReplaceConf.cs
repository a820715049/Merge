// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/ItemReplaceConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/ItemReplaceConf.proto</summary>
  public static partial class ItemReplaceConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/ItemReplaceConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ItemReplaceConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch1yYXdkYXRhL0l0ZW1SZXBsYWNlQ29uZi5wcm90bxIHcmF3ZGF0YSIuCgtJ",
            "dGVtUmVwbGFjZRIKCgJpZBgBIAEoBRITCgtyZXBsYWNlSW50bxgCIAEoBSKw",
            "AQoVSXRlbVJlcGxhY2VNYXBBQlZhbHVlEkoKDkl0ZW1SZXBsYWNlTWFwGAEg",
            "AygLMjIucmF3ZGF0YS5JdGVtUmVwbGFjZU1hcEFCVmFsdWUuSXRlbVJlcGxh",
            "Y2VNYXBFbnRyeRpLChNJdGVtUmVwbGFjZU1hcEVudHJ5EgsKA2tleRgBIAEo",
            "BRIjCgV2YWx1ZRgCIAEoCzIULnJhd2RhdGEuSXRlbVJlcGxhY2U6AjgBIvkD",
            "Cg9JdGVtUmVwbGFjZUNvbmYSRAoOSXRlbVJlcGxhY2VNYXAYASADKAsyLC5y",
            "YXdkYXRhLkl0ZW1SZXBsYWNlQ29uZi5JdGVtUmVwbGFjZU1hcEVudHJ5EkgK",
            "EEl0ZW1SZXBsYWNlTWFwQUIYAiADKAsyLi5yYXdkYXRhLkl0ZW1SZXBsYWNl",
            "Q29uZi5JdGVtUmVwbGFjZU1hcEFCRW50cnkSUgoVSXRlbVJlcGxhY2VNYXBB",
            "QlBhdGNoGAMgAygLMjMucmF3ZGF0YS5JdGVtUmVwbGFjZUNvbmYuSXRlbVJl",
            "cGxhY2VNYXBBQlBhdGNoRW50cnkaSwoTSXRlbVJlcGxhY2VNYXBFbnRyeRIL",
            "CgNrZXkYASABKAUSIwoFdmFsdWUYAiABKAsyFC5yYXdkYXRhLkl0ZW1SZXBs",
            "YWNlOgI4ARpXChVJdGVtUmVwbGFjZU1hcEFCRW50cnkSCwoDa2V5GAEgASgJ",
            "Ei0KBXZhbHVlGAIgASgLMh4ucmF3ZGF0YS5JdGVtUmVwbGFjZU1hcEFCVmFs",
            "dWU6AjgBGlwKGkl0ZW1SZXBsYWNlTWFwQUJQYXRjaEVudHJ5EgsKA2tleRgB",
            "IAEoCRItCgV2YWx1ZRgCIAEoCzIeLnJhd2RhdGEuSXRlbVJlcGxhY2VNYXBB",
            "QlZhbHVlOgI4AUI9Wi1naXRsYWIuZnVucGx1cy5pby9mYXQvY29uZi9nZW4v",
            "Z29sYW5nL3Jhd2RhdGGqAgtmYXQucmF3ZGF0YWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.ItemReplace), global::fat.rawdata.ItemReplace.Parser, new[]{ "Id", "ReplaceInto" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.ItemReplaceMapABValue), global::fat.rawdata.ItemReplaceMapABValue.Parser, new[]{ "ItemReplaceMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.ItemReplaceConf), global::fat.rawdata.ItemReplaceConf.Parser, new[]{ "ItemReplaceMap", "ItemReplaceMapAB", "ItemReplaceMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="ItemReplace",table="ItemReplaceMap",table_wrapper="ItemReplaceConf",map="true",map_key_type="int32",data="ItemReplaceConf")
  /// annotation@ab(table_ab="ItemReplaceMapAB",table_ab_patch="ItemReplaceMapABPatch",table_ab_value="ItemReplaceMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@ItemReplace(id="id")
  /// </summary>
  public sealed partial class ItemReplace : pb::IMessage<ItemReplace>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ItemReplace> _parser = new pb::MessageParser<ItemReplace>(() => new ItemReplace());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ItemReplace> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.ItemReplaceConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemReplace() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemReplace(ItemReplace other) : this() {
      id_ = other.id_;
      replaceInto_ = other.replaceInto_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemReplace Clone() {
      return new ItemReplace(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 棋子ID
    /// （ObjBasic.id）
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "replaceInto" field.</summary>
    public const int ReplaceIntoFieldNumber = 2;
    private int replaceInto_;
    /// <summary>
    /// 替换后的棋子ID
    /// （ObjBasic.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ReplaceInto {
      get { return replaceInto_; }
      set {
        replaceInto_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ItemReplace);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ItemReplace other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ReplaceInto != other.ReplaceInto) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (ReplaceInto != 0) hash ^= ReplaceInto.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (ReplaceInto != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ReplaceInto);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (ReplaceInto != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ReplaceInto);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (ReplaceInto != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ReplaceInto);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ItemReplace other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.ReplaceInto != 0) {
        ReplaceInto = other.ReplaceInto;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            ReplaceInto = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            ReplaceInto = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ItemReplaceMapABValue : pb::IMessage<ItemReplaceMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ItemReplaceMapABValue> _parser = new pb::MessageParser<ItemReplaceMapABValue>(() => new ItemReplaceMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ItemReplaceMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.ItemReplaceConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemReplaceMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemReplaceMapABValue(ItemReplaceMapABValue other) : this() {
      itemReplaceMap_ = other.itemReplaceMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemReplaceMapABValue Clone() {
      return new ItemReplaceMapABValue(this);
    }

    /// <summary>Field number for the "ItemReplaceMap" field.</summary>
    public const int ItemReplaceMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.ItemReplace>.Codec _map_itemReplaceMap_codec
        = new pbc::MapField<int, global::fat.rawdata.ItemReplace>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ItemReplace.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.ItemReplace> itemReplaceMap_ = new pbc::MapField<int, global::fat.rawdata.ItemReplace>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.ItemReplace> ItemReplaceMap {
      get { return itemReplaceMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ItemReplaceMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ItemReplaceMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!ItemReplaceMap.Equals(other.ItemReplaceMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ItemReplaceMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      itemReplaceMap_.WriteTo(output, _map_itemReplaceMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      itemReplaceMap_.WriteTo(ref output, _map_itemReplaceMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += itemReplaceMap_.CalculateSize(_map_itemReplaceMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ItemReplaceMapABValue other) {
      if (other == null) {
        return;
      }
      itemReplaceMap_.Add(other.itemReplaceMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            itemReplaceMap_.AddEntriesFrom(input, _map_itemReplaceMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            itemReplaceMap_.AddEntriesFrom(ref input, _map_itemReplaceMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ItemReplaceConf : pb::IMessage<ItemReplaceConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ItemReplaceConf> _parser = new pb::MessageParser<ItemReplaceConf>(() => new ItemReplaceConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ItemReplaceConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.ItemReplaceConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemReplaceConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemReplaceConf(ItemReplaceConf other) : this() {
      itemReplaceMap_ = other.itemReplaceMap_.Clone();
      itemReplaceMapAB_ = other.itemReplaceMapAB_.Clone();
      itemReplaceMapABPatch_ = other.itemReplaceMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemReplaceConf Clone() {
      return new ItemReplaceConf(this);
    }

    /// <summary>Field number for the "ItemReplaceMap" field.</summary>
    public const int ItemReplaceMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.ItemReplace>.Codec _map_itemReplaceMap_codec
        = new pbc::MapField<int, global::fat.rawdata.ItemReplace>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ItemReplace.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.ItemReplace> itemReplaceMap_ = new pbc::MapField<int, global::fat.rawdata.ItemReplace>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.ItemReplace> ItemReplaceMap {
      get { return itemReplaceMap_; }
    }

    /// <summary>Field number for the "ItemReplaceMapAB" field.</summary>
    public const int ItemReplaceMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.ItemReplaceMapABValue>.Codec _map_itemReplaceMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.ItemReplaceMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ItemReplaceMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.ItemReplaceMapABValue> itemReplaceMapAB_ = new pbc::MapField<string, global::fat.rawdata.ItemReplaceMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.ItemReplaceMapABValue> ItemReplaceMapAB {
      get { return itemReplaceMapAB_; }
    }

    /// <summary>Field number for the "ItemReplaceMapABPatch" field.</summary>
    public const int ItemReplaceMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.ItemReplaceMapABValue>.Codec _map_itemReplaceMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.ItemReplaceMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ItemReplaceMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.ItemReplaceMapABValue> itemReplaceMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.ItemReplaceMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.ItemReplaceMapABValue> ItemReplaceMapABPatch {
      get { return itemReplaceMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ItemReplaceConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ItemReplaceConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!ItemReplaceMap.Equals(other.ItemReplaceMap)) return false;
      if (!ItemReplaceMapAB.Equals(other.ItemReplaceMapAB)) return false;
      if (!ItemReplaceMapABPatch.Equals(other.ItemReplaceMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ItemReplaceMap.GetHashCode();
      hash ^= ItemReplaceMapAB.GetHashCode();
      hash ^= ItemReplaceMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      itemReplaceMap_.WriteTo(output, _map_itemReplaceMap_codec);
      itemReplaceMapAB_.WriteTo(output, _map_itemReplaceMapAB_codec);
      itemReplaceMapABPatch_.WriteTo(output, _map_itemReplaceMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      itemReplaceMap_.WriteTo(ref output, _map_itemReplaceMap_codec);
      itemReplaceMapAB_.WriteTo(ref output, _map_itemReplaceMapAB_codec);
      itemReplaceMapABPatch_.WriteTo(ref output, _map_itemReplaceMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += itemReplaceMap_.CalculateSize(_map_itemReplaceMap_codec);
      size += itemReplaceMapAB_.CalculateSize(_map_itemReplaceMapAB_codec);
      size += itemReplaceMapABPatch_.CalculateSize(_map_itemReplaceMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ItemReplaceConf other) {
      if (other == null) {
        return;
      }
      itemReplaceMap_.Add(other.itemReplaceMap_);
      itemReplaceMapAB_.Add(other.itemReplaceMapAB_);
      itemReplaceMapABPatch_.Add(other.itemReplaceMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            itemReplaceMap_.AddEntriesFrom(input, _map_itemReplaceMap_codec);
            break;
          }
          case 18: {
            itemReplaceMapAB_.AddEntriesFrom(input, _map_itemReplaceMapAB_codec);
            break;
          }
          case 26: {
            itemReplaceMapABPatch_.AddEntriesFrom(input, _map_itemReplaceMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            itemReplaceMap_.AddEntriesFrom(ref input, _map_itemReplaceMap_codec);
            break;
          }
          case 18: {
            itemReplaceMapAB_.AddEntriesFrom(ref input, _map_itemReplaceMapAB_codec);
            break;
          }
          case 26: {
            itemReplaceMapABPatch_.AddEntriesFrom(ref input, _map_itemReplaceMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
