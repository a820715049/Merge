// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/ComMergeActiveSourceConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/ComMergeActiveSourceConf.proto</summary>
  public static partial class ComMergeActiveSourceConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/ComMergeActiveSourceConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ComMergeActiveSourceConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiZyYXdkYXRhL0NvbU1lcmdlQWN0aXZlU291cmNlQ29uZi5wcm90bxIHcmF3",
            "ZGF0YSJUChRDb21NZXJnZUFjdGl2ZVNvdXJjZRIKCgJpZBgBIAEoBRIMCgRk",
            "cm9wGAMgASgFEhMKC2lzU2NhbGVBbmltGAQgASgIEg0KBWxpbWl0GAIgASgF",
            "IuYBCh5Db21NZXJnZUFjdGl2ZVNvdXJjZU1hcEFCVmFsdWUSZQoXQ29tTWVy",
            "Z2VBY3RpdmVTb3VyY2VNYXAYASADKAsyRC5yYXdkYXRhLkNvbU1lcmdlQWN0",
            "aXZlU291cmNlTWFwQUJWYWx1ZS5Db21NZXJnZUFjdGl2ZVNvdXJjZU1hcEVu",
            "dHJ5Gl0KHENvbU1lcmdlQWN0aXZlU291cmNlTWFwRW50cnkSCwoDa2V5GAEg",
            "ASgFEiwKBXZhbHVlGAIgASgLMh0ucmF3ZGF0YS5Db21NZXJnZUFjdGl2ZVNv",
            "dXJjZToCOAEiiQUKGENvbU1lcmdlQWN0aXZlU291cmNlQ29uZhJfChdDb21N",
            "ZXJnZUFjdGl2ZVNvdXJjZU1hcBgBIAMoCzI+LnJhd2RhdGEuQ29tTWVyZ2VB",
            "Y3RpdmVTb3VyY2VDb25mLkNvbU1lcmdlQWN0aXZlU291cmNlTWFwRW50cnkS",
            "YwoZQ29tTWVyZ2VBY3RpdmVTb3VyY2VNYXBBQhgCIAMoCzJALnJhd2RhdGEu",
            "Q29tTWVyZ2VBY3RpdmVTb3VyY2VDb25mLkNvbU1lcmdlQWN0aXZlU291cmNl",
            "TWFwQUJFbnRyeRJtCh5Db21NZXJnZUFjdGl2ZVNvdXJjZU1hcEFCUGF0Y2gY",
            "AyADKAsyRS5yYXdkYXRhLkNvbU1lcmdlQWN0aXZlU291cmNlQ29uZi5Db21N",
            "ZXJnZUFjdGl2ZVNvdXJjZU1hcEFCUGF0Y2hFbnRyeRpdChxDb21NZXJnZUFj",
            "dGl2ZVNvdXJjZU1hcEVudHJ5EgsKA2tleRgBIAEoBRIsCgV2YWx1ZRgCIAEo",
            "CzIdLnJhd2RhdGEuQ29tTWVyZ2VBY3RpdmVTb3VyY2U6AjgBGmkKHkNvbU1l",
            "cmdlQWN0aXZlU291cmNlTWFwQUJFbnRyeRILCgNrZXkYASABKAkSNgoFdmFs",
            "dWUYAiABKAsyJy5yYXdkYXRhLkNvbU1lcmdlQWN0aXZlU291cmNlTWFwQUJW",
            "YWx1ZToCOAEabgojQ29tTWVyZ2VBY3RpdmVTb3VyY2VNYXBBQlBhdGNoRW50",
            "cnkSCwoDa2V5GAEgASgJEjYKBXZhbHVlGAIgASgLMicucmF3ZGF0YS5Db21N",
            "ZXJnZUFjdGl2ZVNvdXJjZU1hcEFCVmFsdWU6AjgBQj1aLWdpdGxhYi5mdW5w",
            "bHVzLmlvL2ZhdC9jb25mL2dlbi9nb2xhbmcvcmF3ZGF0YaoCC2ZhdC5yYXdk",
            "YXRhYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.ComMergeActiveSource), global::fat.rawdata.ComMergeActiveSource.Parser, new[]{ "Id", "Drop", "IsScaleAnim", "Limit" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.ComMergeActiveSourceMapABValue), global::fat.rawdata.ComMergeActiveSourceMapABValue.Parser, new[]{ "ComMergeActiveSourceMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.ComMergeActiveSourceConf), global::fat.rawdata.ComMergeActiveSourceConf.Parser, new[]{ "ComMergeActiveSourceMap", "ComMergeActiveSourceMapAB", "ComMergeActiveSourceMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="ComMergeActiveSource",table="ComMergeActiveSourceMap",table_wrapper="ComMergeActiveSourceConf",map="true",map_key_type="int32",data="ComMergeActiveSourceConf")
  /// annotation@ab(table_ab="ComMergeActiveSourceMapAB",table_ab_patch="ComMergeActiveSourceMapABPatch",table_ab_value="ComMergeActiveSourceMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@ComMergeActiveSource(id="id")
  /// </summary>
  public sealed partial class ComMergeActiveSource : pb::IMessage<ComMergeActiveSource>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ComMergeActiveSource> _parser = new pb::MessageParser<ComMergeActiveSource>(() => new ComMergeActiveSource());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ComMergeActiveSource> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.ComMergeActiveSourceConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComMergeActiveSource() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComMergeActiveSource(ComMergeActiveSource other) : this() {
      id_ = other.id_;
      drop_ = other.drop_;
      isScaleAnim_ = other.isScaleAnim_;
      limit_ = other.limit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComMergeActiveSource Clone() {
      return new ComMergeActiveSource(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 合成物品id
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "drop" field.</summary>
    public const int DropFieldNumber = 3;
    private int drop_;
    /// <summary>
    /// 掉落次数(使用1次后)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Drop {
      get { return drop_; }
      set {
        drop_ = value;
      }
    }

    /// <summary>Field number for the "isScaleAnim" field.</summary>
    public const int IsScaleAnimFieldNumber = 4;
    private bool isScaleAnim_;
    /// <summary>
    /// 是否常态播放缩放动画
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsScaleAnim {
      get { return isScaleAnim_; }
      set {
        isScaleAnim_ = value;
      }
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 2;
    private int limit_;
    /// <summary>
    /// 使用次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ComMergeActiveSource);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ComMergeActiveSource other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Drop != other.Drop) return false;
      if (IsScaleAnim != other.IsScaleAnim) return false;
      if (Limit != other.Limit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Drop != 0) hash ^= Drop.GetHashCode();
      if (IsScaleAnim != false) hash ^= IsScaleAnim.GetHashCode();
      if (Limit != 0) hash ^= Limit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Limit != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Limit);
      }
      if (Drop != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Drop);
      }
      if (IsScaleAnim != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsScaleAnim);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Limit != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Limit);
      }
      if (Drop != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Drop);
      }
      if (IsScaleAnim != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsScaleAnim);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Drop != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Drop);
      }
      if (IsScaleAnim != false) {
        size += 1 + 1;
      }
      if (Limit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Limit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ComMergeActiveSource other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Drop != 0) {
        Drop = other.Drop;
      }
      if (other.IsScaleAnim != false) {
        IsScaleAnim = other.IsScaleAnim;
      }
      if (other.Limit != 0) {
        Limit = other.Limit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Limit = input.ReadInt32();
            break;
          }
          case 24: {
            Drop = input.ReadInt32();
            break;
          }
          case 32: {
            IsScaleAnim = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Limit = input.ReadInt32();
            break;
          }
          case 24: {
            Drop = input.ReadInt32();
            break;
          }
          case 32: {
            IsScaleAnim = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ComMergeActiveSourceMapABValue : pb::IMessage<ComMergeActiveSourceMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ComMergeActiveSourceMapABValue> _parser = new pb::MessageParser<ComMergeActiveSourceMapABValue>(() => new ComMergeActiveSourceMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ComMergeActiveSourceMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.ComMergeActiveSourceConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComMergeActiveSourceMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComMergeActiveSourceMapABValue(ComMergeActiveSourceMapABValue other) : this() {
      comMergeActiveSourceMap_ = other.comMergeActiveSourceMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComMergeActiveSourceMapABValue Clone() {
      return new ComMergeActiveSourceMapABValue(this);
    }

    /// <summary>Field number for the "ComMergeActiveSourceMap" field.</summary>
    public const int ComMergeActiveSourceMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.ComMergeActiveSource>.Codec _map_comMergeActiveSourceMap_codec
        = new pbc::MapField<int, global::fat.rawdata.ComMergeActiveSource>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ComMergeActiveSource.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.ComMergeActiveSource> comMergeActiveSourceMap_ = new pbc::MapField<int, global::fat.rawdata.ComMergeActiveSource>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.ComMergeActiveSource> ComMergeActiveSourceMap {
      get { return comMergeActiveSourceMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ComMergeActiveSourceMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ComMergeActiveSourceMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!ComMergeActiveSourceMap.Equals(other.ComMergeActiveSourceMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ComMergeActiveSourceMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      comMergeActiveSourceMap_.WriteTo(output, _map_comMergeActiveSourceMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      comMergeActiveSourceMap_.WriteTo(ref output, _map_comMergeActiveSourceMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += comMergeActiveSourceMap_.CalculateSize(_map_comMergeActiveSourceMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ComMergeActiveSourceMapABValue other) {
      if (other == null) {
        return;
      }
      comMergeActiveSourceMap_.Add(other.comMergeActiveSourceMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            comMergeActiveSourceMap_.AddEntriesFrom(input, _map_comMergeActiveSourceMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            comMergeActiveSourceMap_.AddEntriesFrom(ref input, _map_comMergeActiveSourceMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ComMergeActiveSourceConf : pb::IMessage<ComMergeActiveSourceConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ComMergeActiveSourceConf> _parser = new pb::MessageParser<ComMergeActiveSourceConf>(() => new ComMergeActiveSourceConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ComMergeActiveSourceConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.ComMergeActiveSourceConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComMergeActiveSourceConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComMergeActiveSourceConf(ComMergeActiveSourceConf other) : this() {
      comMergeActiveSourceMap_ = other.comMergeActiveSourceMap_.Clone();
      comMergeActiveSourceMapAB_ = other.comMergeActiveSourceMapAB_.Clone();
      comMergeActiveSourceMapABPatch_ = other.comMergeActiveSourceMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComMergeActiveSourceConf Clone() {
      return new ComMergeActiveSourceConf(this);
    }

    /// <summary>Field number for the "ComMergeActiveSourceMap" field.</summary>
    public const int ComMergeActiveSourceMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.ComMergeActiveSource>.Codec _map_comMergeActiveSourceMap_codec
        = new pbc::MapField<int, global::fat.rawdata.ComMergeActiveSource>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ComMergeActiveSource.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.ComMergeActiveSource> comMergeActiveSourceMap_ = new pbc::MapField<int, global::fat.rawdata.ComMergeActiveSource>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.ComMergeActiveSource> ComMergeActiveSourceMap {
      get { return comMergeActiveSourceMap_; }
    }

    /// <summary>Field number for the "ComMergeActiveSourceMapAB" field.</summary>
    public const int ComMergeActiveSourceMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.ComMergeActiveSourceMapABValue>.Codec _map_comMergeActiveSourceMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.ComMergeActiveSourceMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ComMergeActiveSourceMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.ComMergeActiveSourceMapABValue> comMergeActiveSourceMapAB_ = new pbc::MapField<string, global::fat.rawdata.ComMergeActiveSourceMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.ComMergeActiveSourceMapABValue> ComMergeActiveSourceMapAB {
      get { return comMergeActiveSourceMapAB_; }
    }

    /// <summary>Field number for the "ComMergeActiveSourceMapABPatch" field.</summary>
    public const int ComMergeActiveSourceMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.ComMergeActiveSourceMapABValue>.Codec _map_comMergeActiveSourceMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.ComMergeActiveSourceMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ComMergeActiveSourceMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.ComMergeActiveSourceMapABValue> comMergeActiveSourceMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.ComMergeActiveSourceMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.ComMergeActiveSourceMapABValue> ComMergeActiveSourceMapABPatch {
      get { return comMergeActiveSourceMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ComMergeActiveSourceConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ComMergeActiveSourceConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!ComMergeActiveSourceMap.Equals(other.ComMergeActiveSourceMap)) return false;
      if (!ComMergeActiveSourceMapAB.Equals(other.ComMergeActiveSourceMapAB)) return false;
      if (!ComMergeActiveSourceMapABPatch.Equals(other.ComMergeActiveSourceMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ComMergeActiveSourceMap.GetHashCode();
      hash ^= ComMergeActiveSourceMapAB.GetHashCode();
      hash ^= ComMergeActiveSourceMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      comMergeActiveSourceMap_.WriteTo(output, _map_comMergeActiveSourceMap_codec);
      comMergeActiveSourceMapAB_.WriteTo(output, _map_comMergeActiveSourceMapAB_codec);
      comMergeActiveSourceMapABPatch_.WriteTo(output, _map_comMergeActiveSourceMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      comMergeActiveSourceMap_.WriteTo(ref output, _map_comMergeActiveSourceMap_codec);
      comMergeActiveSourceMapAB_.WriteTo(ref output, _map_comMergeActiveSourceMapAB_codec);
      comMergeActiveSourceMapABPatch_.WriteTo(ref output, _map_comMergeActiveSourceMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += comMergeActiveSourceMap_.CalculateSize(_map_comMergeActiveSourceMap_codec);
      size += comMergeActiveSourceMapAB_.CalculateSize(_map_comMergeActiveSourceMapAB_codec);
      size += comMergeActiveSourceMapABPatch_.CalculateSize(_map_comMergeActiveSourceMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ComMergeActiveSourceConf other) {
      if (other == null) {
        return;
      }
      comMergeActiveSourceMap_.Add(other.comMergeActiveSourceMap_);
      comMergeActiveSourceMapAB_.Add(other.comMergeActiveSourceMapAB_);
      comMergeActiveSourceMapABPatch_.Add(other.comMergeActiveSourceMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            comMergeActiveSourceMap_.AddEntriesFrom(input, _map_comMergeActiveSourceMap_codec);
            break;
          }
          case 18: {
            comMergeActiveSourceMapAB_.AddEntriesFrom(input, _map_comMergeActiveSourceMapAB_codec);
            break;
          }
          case 26: {
            comMergeActiveSourceMapABPatch_.AddEntriesFrom(input, _map_comMergeActiveSourceMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            comMergeActiveSourceMap_.AddEntriesFrom(ref input, _map_comMergeActiveSourceMap_codec);
            break;
          }
          case 18: {
            comMergeActiveSourceMapAB_.AddEntriesFrom(ref input, _map_comMergeActiveSourceMapAB_codec);
            break;
          }
          case 26: {
            comMergeActiveSourceMapABPatch_.AddEntriesFrom(ref input, _map_comMergeActiveSourceMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
