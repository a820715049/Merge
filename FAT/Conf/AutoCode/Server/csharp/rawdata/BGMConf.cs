// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/BGMConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/BGMConf.proto</summary>
  public static partial class BGMConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/BGMConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BGMConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVyYXdkYXRhL0JHTUNvbmYucHJvdG8SB3Jhd2RhdGEiIgoDQkdNEg0KBWFz",
            "c2V0GAEgAygJEgwKBG1vZGUYAiABKAgiMQoPQkdNU2xpY2VBQlZhbHVlEh4K",
            "CEJHTVNsaWNlGAEgAygLMgwucmF3ZGF0YS5CR00ivgIKB0JHTUNvbmYSHgoI",
            "QkdNU2xpY2UYASADKAsyDC5yYXdkYXRhLkJHTRI0CgpCR01TbGljZUFCGAIg",
            "AygLMiAucmF3ZGF0YS5CR01Db25mLkJHTVNsaWNlQUJFbnRyeRI+Cg9CR01T",
            "bGljZUFCUGF0Y2gYAyADKAsyJS5yYXdkYXRhLkJHTUNvbmYuQkdNU2xpY2VB",
            "QlBhdGNoRW50cnkaSwoPQkdNU2xpY2VBQkVudHJ5EgsKA2tleRgBIAEoCRIn",
            "CgV2YWx1ZRgCIAEoCzIYLnJhd2RhdGEuQkdNU2xpY2VBQlZhbHVlOgI4ARpQ",
            "ChRCR01TbGljZUFCUGF0Y2hFbnRyeRILCgNrZXkYASABKAkSJwoFdmFsdWUY",
            "AiABKAsyGC5yYXdkYXRhLkJHTVNsaWNlQUJWYWx1ZToCOAFCPVotZ2l0bGFi",
            "LmZ1bnBsdXMuaW8vZmF0L2NvbmYvZ2VuL2dvbGFuZy9yYXdkYXRhqgILZmF0",
            "LnJhd2RhdGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.BGM), global::fat.rawdata.BGM.Parser, new[]{ "Asset", "Mode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.BGMSliceABValue), global::fat.rawdata.BGMSliceABValue.Parser, new[]{ "BGMSlice" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.BGMConf), global::fat.rawdata.BGMConf.Parser, new[]{ "BGMSlice", "BGMSliceAB", "BGMSliceABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="BGM",table="BGMSlice",table_wrapper="BGMConf",map="false",map_key_type="",data="BGMConf")
  /// annotation@ab(table_ab="BGMSliceAB",table_ab_patch="BGMSliceABPatch",table_ab_value="BGMSliceABValue",ab_patch="true")
  /// annotation@filter(just_server="false",just_client="false")
  /// </summary>
  public sealed partial class BGM : pb::IMessage<BGM>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BGM> _parser = new pb::MessageParser<BGM>(() => new BGM());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BGM> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.BGMConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BGM() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BGM(BGM other) : this() {
      asset_ = other.asset_.Clone();
      mode_ = other.mode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BGM Clone() {
      return new BGM(this);
    }

    /// <summary>Field number for the "asset" field.</summary>
    public const int AssetFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_asset_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> asset_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 音效资源路径
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Asset {
      get { return asset_; }
    }

    /// <summary>Field number for the "mode" field.</summary>
    public const int ModeFieldNumber = 2;
    private bool mode_;
    /// <summary>
    /// 播放类型
    /// （0:随机,1:列表）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Mode {
      get { return mode_; }
      set {
        mode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BGM);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BGM other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!asset_.Equals(other.asset_)) return false;
      if (Mode != other.Mode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= asset_.GetHashCode();
      if (Mode != false) hash ^= Mode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      asset_.WriteTo(output, _repeated_asset_codec);
      if (Mode != false) {
        output.WriteRawTag(16);
        output.WriteBool(Mode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      asset_.WriteTo(ref output, _repeated_asset_codec);
      if (Mode != false) {
        output.WriteRawTag(16);
        output.WriteBool(Mode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += asset_.CalculateSize(_repeated_asset_codec);
      if (Mode != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BGM other) {
      if (other == null) {
        return;
      }
      asset_.Add(other.asset_);
      if (other.Mode != false) {
        Mode = other.Mode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            asset_.AddEntriesFrom(input, _repeated_asset_codec);
            break;
          }
          case 16: {
            Mode = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            asset_.AddEntriesFrom(ref input, _repeated_asset_codec);
            break;
          }
          case 16: {
            Mode = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BGMSliceABValue : pb::IMessage<BGMSliceABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BGMSliceABValue> _parser = new pb::MessageParser<BGMSliceABValue>(() => new BGMSliceABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BGMSliceABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.BGMConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BGMSliceABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BGMSliceABValue(BGMSliceABValue other) : this() {
      bGMSlice_ = other.bGMSlice_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BGMSliceABValue Clone() {
      return new BGMSliceABValue(this);
    }

    /// <summary>Field number for the "BGMSlice" field.</summary>
    public const int BGMSliceFieldNumber = 1;
    private static readonly pb::FieldCodec<global::fat.rawdata.BGM> _repeated_bGMSlice_codec
        = pb::FieldCodec.ForMessage(10, global::fat.rawdata.BGM.Parser);
    private readonly pbc::RepeatedField<global::fat.rawdata.BGM> bGMSlice_ = new pbc::RepeatedField<global::fat.rawdata.BGM>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::fat.rawdata.BGM> BGMSlice {
      get { return bGMSlice_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BGMSliceABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BGMSliceABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!bGMSlice_.Equals(other.bGMSlice_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= bGMSlice_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      bGMSlice_.WriteTo(output, _repeated_bGMSlice_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      bGMSlice_.WriteTo(ref output, _repeated_bGMSlice_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += bGMSlice_.CalculateSize(_repeated_bGMSlice_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BGMSliceABValue other) {
      if (other == null) {
        return;
      }
      bGMSlice_.Add(other.bGMSlice_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            bGMSlice_.AddEntriesFrom(input, _repeated_bGMSlice_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            bGMSlice_.AddEntriesFrom(ref input, _repeated_bGMSlice_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BGMConf : pb::IMessage<BGMConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BGMConf> _parser = new pb::MessageParser<BGMConf>(() => new BGMConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BGMConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.BGMConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BGMConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BGMConf(BGMConf other) : this() {
      bGMSlice_ = other.bGMSlice_.Clone();
      bGMSliceAB_ = other.bGMSliceAB_.Clone();
      bGMSliceABPatch_ = other.bGMSliceABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BGMConf Clone() {
      return new BGMConf(this);
    }

    /// <summary>Field number for the "BGMSlice" field.</summary>
    public const int BGMSliceFieldNumber = 1;
    private static readonly pb::FieldCodec<global::fat.rawdata.BGM> _repeated_bGMSlice_codec
        = pb::FieldCodec.ForMessage(10, global::fat.rawdata.BGM.Parser);
    private readonly pbc::RepeatedField<global::fat.rawdata.BGM> bGMSlice_ = new pbc::RepeatedField<global::fat.rawdata.BGM>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::fat.rawdata.BGM> BGMSlice {
      get { return bGMSlice_; }
    }

    /// <summary>Field number for the "BGMSliceAB" field.</summary>
    public const int BGMSliceABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.BGMSliceABValue>.Codec _map_bGMSliceAB_codec
        = new pbc::MapField<string, global::fat.rawdata.BGMSliceABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.BGMSliceABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.BGMSliceABValue> bGMSliceAB_ = new pbc::MapField<string, global::fat.rawdata.BGMSliceABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.BGMSliceABValue> BGMSliceAB {
      get { return bGMSliceAB_; }
    }

    /// <summary>Field number for the "BGMSliceABPatch" field.</summary>
    public const int BGMSliceABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.BGMSliceABValue>.Codec _map_bGMSliceABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.BGMSliceABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.BGMSliceABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.BGMSliceABValue> bGMSliceABPatch_ = new pbc::MapField<string, global::fat.rawdata.BGMSliceABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.BGMSliceABValue> BGMSliceABPatch {
      get { return bGMSliceABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BGMConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BGMConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!bGMSlice_.Equals(other.bGMSlice_)) return false;
      if (!BGMSliceAB.Equals(other.BGMSliceAB)) return false;
      if (!BGMSliceABPatch.Equals(other.BGMSliceABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= bGMSlice_.GetHashCode();
      hash ^= BGMSliceAB.GetHashCode();
      hash ^= BGMSliceABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      bGMSlice_.WriteTo(output, _repeated_bGMSlice_codec);
      bGMSliceAB_.WriteTo(output, _map_bGMSliceAB_codec);
      bGMSliceABPatch_.WriteTo(output, _map_bGMSliceABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      bGMSlice_.WriteTo(ref output, _repeated_bGMSlice_codec);
      bGMSliceAB_.WriteTo(ref output, _map_bGMSliceAB_codec);
      bGMSliceABPatch_.WriteTo(ref output, _map_bGMSliceABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += bGMSlice_.CalculateSize(_repeated_bGMSlice_codec);
      size += bGMSliceAB_.CalculateSize(_map_bGMSliceAB_codec);
      size += bGMSliceABPatch_.CalculateSize(_map_bGMSliceABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BGMConf other) {
      if (other == null) {
        return;
      }
      bGMSlice_.Add(other.bGMSlice_);
      bGMSliceAB_.Add(other.bGMSliceAB_);
      bGMSliceABPatch_.Add(other.bGMSliceABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            bGMSlice_.AddEntriesFrom(input, _repeated_bGMSlice_codec);
            break;
          }
          case 18: {
            bGMSliceAB_.AddEntriesFrom(input, _map_bGMSliceAB_codec);
            break;
          }
          case 26: {
            bGMSliceABPatch_.AddEntriesFrom(input, _map_bGMSliceABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            bGMSlice_.AddEntriesFrom(ref input, _repeated_bGMSlice_codec);
            break;
          }
          case 18: {
            bGMSliceAB_.AddEntriesFrom(ref input, _map_bGMSliceAB_codec);
            break;
          }
          case 26: {
            bGMSliceABPatch_.AddEntriesFrom(ref input, _map_bGMSliceABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
