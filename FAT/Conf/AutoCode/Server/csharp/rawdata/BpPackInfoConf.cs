// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/BpPackInfoConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/BpPackInfoConf.proto</summary>
  public static partial class BpPackInfoConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/BpPackInfoConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BpPackInfoConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChxyYXdkYXRhL0JwUGFja0luZm9Db25mLnByb3RvEgdyYXdkYXRhIk8KCkJw",
            "UGFja0luZm8SCgoCaWQYASABKAUSDgoGcGFja0lkGAIgASgFEhUKDXByaXZp",
            "bGVnZUluZm8YAyABKAUSDgoGcmV3YXJkGAQgASgJIqoBChRCcFBhY2tJbmZv",
            "TWFwQUJWYWx1ZRJHCg1CcFBhY2tJbmZvTWFwGAEgAygLMjAucmF3ZGF0YS5C",
            "cFBhY2tJbmZvTWFwQUJWYWx1ZS5CcFBhY2tJbmZvTWFwRW50cnkaSQoSQnBQ",
            "YWNrSW5mb01hcEVudHJ5EgsKA2tleRgBIAEoBRIiCgV2YWx1ZRgCIAEoCzIT",
            "LnJhd2RhdGEuQnBQYWNrSW5mbzoCOAEi6QMKDkJwUGFja0luZm9Db25mEkEK",
            "DUJwUGFja0luZm9NYXAYASADKAsyKi5yYXdkYXRhLkJwUGFja0luZm9Db25m",
            "LkJwUGFja0luZm9NYXBFbnRyeRJFCg9CcFBhY2tJbmZvTWFwQUIYAiADKAsy",
            "LC5yYXdkYXRhLkJwUGFja0luZm9Db25mLkJwUGFja0luZm9NYXBBQkVudHJ5",
            "Ek8KFEJwUGFja0luZm9NYXBBQlBhdGNoGAMgAygLMjEucmF3ZGF0YS5CcFBh",
            "Y2tJbmZvQ29uZi5CcFBhY2tJbmZvTWFwQUJQYXRjaEVudHJ5GkkKEkJwUGFj",
            "a0luZm9NYXBFbnRyeRILCgNrZXkYASABKAUSIgoFdmFsdWUYAiABKAsyEy5y",
            "YXdkYXRhLkJwUGFja0luZm86AjgBGlUKFEJwUGFja0luZm9NYXBBQkVudHJ5",
            "EgsKA2tleRgBIAEoCRIsCgV2YWx1ZRgCIAEoCzIdLnJhd2RhdGEuQnBQYWNr",
            "SW5mb01hcEFCVmFsdWU6AjgBGloKGUJwUGFja0luZm9NYXBBQlBhdGNoRW50",
            "cnkSCwoDa2V5GAEgASgJEiwKBXZhbHVlGAIgASgLMh0ucmF3ZGF0YS5CcFBh",
            "Y2tJbmZvTWFwQUJWYWx1ZToCOAFCPVotZ2l0bGFiLmZ1bnBsdXMuaW8vZmF0",
            "L2NvbmYvZ2VuL2dvbGFuZy9yYXdkYXRhqgILZmF0LnJhd2RhdGFiBnByb3Rv",
            "Mw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.BpPackInfo), global::fat.rawdata.BpPackInfo.Parser, new[]{ "Id", "PackId", "PrivilegeInfo", "Reward" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.BpPackInfoMapABValue), global::fat.rawdata.BpPackInfoMapABValue.Parser, new[]{ "BpPackInfoMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.BpPackInfoConf), global::fat.rawdata.BpPackInfoConf.Parser, new[]{ "BpPackInfoMap", "BpPackInfoMapAB", "BpPackInfoMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="BpPackInfo",table="BpPackInfoMap",table_wrapper="BpPackInfoConf",map="true",map_key_type="int32",data="BpPackInfoConf")
  /// annotation@ab(table_ab="BpPackInfoMapAB",table_ab_patch="BpPackInfoMapABPatch",table_ab_value="BpPackInfoMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@BpPackInfo(id="id")
  /// </summary>
  public sealed partial class BpPackInfo : pb::IMessage<BpPackInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BpPackInfo> _parser = new pb::MessageParser<BpPackInfo>(() => new BpPackInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BpPackInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.BpPackInfoConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BpPackInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BpPackInfo(BpPackInfo other) : this() {
      id_ = other.id_;
      packId_ = other.packId_;
      privilegeInfo_ = other.privilegeInfo_;
      reward_ = other.reward_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BpPackInfo Clone() {
      return new BpPackInfo(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 礼包
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "packId" field.</summary>
    public const int PackIdFieldNumber = 2;
    private int packId_;
    /// <summary>
    /// 礼包id
    /// (IAP.id)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PackId {
      get { return packId_; }
      set {
        packId_ = value;
      }
    }

    /// <summary>Field number for the "privilegeInfo" field.</summary>
    public const int PrivilegeInfoFieldNumber = 3;
    private int privilegeInfo_;
    /// <summary>
    /// 二档特权-
    /// 积分倍数/10
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PrivilegeInfo {
      get { return privilegeInfo_; }
      set {
        privilegeInfo_ = value;
      }
    }

    /// <summary>Field number for the "reward" field.</summary>
    public const int RewardFieldNumber = 4;
    private string reward_ = "";
    /// <summary>
    /// 二档付费立给奖励-
    /// 里程碑积分
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Reward {
      get { return reward_; }
      set {
        reward_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BpPackInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BpPackInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (PackId != other.PackId) return false;
      if (PrivilegeInfo != other.PrivilegeInfo) return false;
      if (Reward != other.Reward) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (PackId != 0) hash ^= PackId.GetHashCode();
      if (PrivilegeInfo != 0) hash ^= PrivilegeInfo.GetHashCode();
      if (Reward.Length != 0) hash ^= Reward.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (PackId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PackId);
      }
      if (PrivilegeInfo != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PrivilegeInfo);
      }
      if (Reward.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Reward);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (PackId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PackId);
      }
      if (PrivilegeInfo != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PrivilegeInfo);
      }
      if (Reward.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Reward);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (PackId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PackId);
      }
      if (PrivilegeInfo != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PrivilegeInfo);
      }
      if (Reward.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Reward);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BpPackInfo other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.PackId != 0) {
        PackId = other.PackId;
      }
      if (other.PrivilegeInfo != 0) {
        PrivilegeInfo = other.PrivilegeInfo;
      }
      if (other.Reward.Length != 0) {
        Reward = other.Reward;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            PackId = input.ReadInt32();
            break;
          }
          case 24: {
            PrivilegeInfo = input.ReadInt32();
            break;
          }
          case 34: {
            Reward = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            PackId = input.ReadInt32();
            break;
          }
          case 24: {
            PrivilegeInfo = input.ReadInt32();
            break;
          }
          case 34: {
            Reward = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BpPackInfoMapABValue : pb::IMessage<BpPackInfoMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BpPackInfoMapABValue> _parser = new pb::MessageParser<BpPackInfoMapABValue>(() => new BpPackInfoMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BpPackInfoMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.BpPackInfoConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BpPackInfoMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BpPackInfoMapABValue(BpPackInfoMapABValue other) : this() {
      bpPackInfoMap_ = other.bpPackInfoMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BpPackInfoMapABValue Clone() {
      return new BpPackInfoMapABValue(this);
    }

    /// <summary>Field number for the "BpPackInfoMap" field.</summary>
    public const int BpPackInfoMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.BpPackInfo>.Codec _map_bpPackInfoMap_codec
        = new pbc::MapField<int, global::fat.rawdata.BpPackInfo>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.BpPackInfo.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.BpPackInfo> bpPackInfoMap_ = new pbc::MapField<int, global::fat.rawdata.BpPackInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.BpPackInfo> BpPackInfoMap {
      get { return bpPackInfoMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BpPackInfoMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BpPackInfoMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!BpPackInfoMap.Equals(other.BpPackInfoMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= BpPackInfoMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      bpPackInfoMap_.WriteTo(output, _map_bpPackInfoMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      bpPackInfoMap_.WriteTo(ref output, _map_bpPackInfoMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += bpPackInfoMap_.CalculateSize(_map_bpPackInfoMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BpPackInfoMapABValue other) {
      if (other == null) {
        return;
      }
      bpPackInfoMap_.Add(other.bpPackInfoMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            bpPackInfoMap_.AddEntriesFrom(input, _map_bpPackInfoMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            bpPackInfoMap_.AddEntriesFrom(ref input, _map_bpPackInfoMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BpPackInfoConf : pb::IMessage<BpPackInfoConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BpPackInfoConf> _parser = new pb::MessageParser<BpPackInfoConf>(() => new BpPackInfoConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BpPackInfoConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.BpPackInfoConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BpPackInfoConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BpPackInfoConf(BpPackInfoConf other) : this() {
      bpPackInfoMap_ = other.bpPackInfoMap_.Clone();
      bpPackInfoMapAB_ = other.bpPackInfoMapAB_.Clone();
      bpPackInfoMapABPatch_ = other.bpPackInfoMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BpPackInfoConf Clone() {
      return new BpPackInfoConf(this);
    }

    /// <summary>Field number for the "BpPackInfoMap" field.</summary>
    public const int BpPackInfoMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.BpPackInfo>.Codec _map_bpPackInfoMap_codec
        = new pbc::MapField<int, global::fat.rawdata.BpPackInfo>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.BpPackInfo.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.BpPackInfo> bpPackInfoMap_ = new pbc::MapField<int, global::fat.rawdata.BpPackInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.BpPackInfo> BpPackInfoMap {
      get { return bpPackInfoMap_; }
    }

    /// <summary>Field number for the "BpPackInfoMapAB" field.</summary>
    public const int BpPackInfoMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.BpPackInfoMapABValue>.Codec _map_bpPackInfoMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.BpPackInfoMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.BpPackInfoMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.BpPackInfoMapABValue> bpPackInfoMapAB_ = new pbc::MapField<string, global::fat.rawdata.BpPackInfoMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.BpPackInfoMapABValue> BpPackInfoMapAB {
      get { return bpPackInfoMapAB_; }
    }

    /// <summary>Field number for the "BpPackInfoMapABPatch" field.</summary>
    public const int BpPackInfoMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.BpPackInfoMapABValue>.Codec _map_bpPackInfoMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.BpPackInfoMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.BpPackInfoMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.BpPackInfoMapABValue> bpPackInfoMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.BpPackInfoMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.BpPackInfoMapABValue> BpPackInfoMapABPatch {
      get { return bpPackInfoMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BpPackInfoConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BpPackInfoConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!BpPackInfoMap.Equals(other.BpPackInfoMap)) return false;
      if (!BpPackInfoMapAB.Equals(other.BpPackInfoMapAB)) return false;
      if (!BpPackInfoMapABPatch.Equals(other.BpPackInfoMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= BpPackInfoMap.GetHashCode();
      hash ^= BpPackInfoMapAB.GetHashCode();
      hash ^= BpPackInfoMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      bpPackInfoMap_.WriteTo(output, _map_bpPackInfoMap_codec);
      bpPackInfoMapAB_.WriteTo(output, _map_bpPackInfoMapAB_codec);
      bpPackInfoMapABPatch_.WriteTo(output, _map_bpPackInfoMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      bpPackInfoMap_.WriteTo(ref output, _map_bpPackInfoMap_codec);
      bpPackInfoMapAB_.WriteTo(ref output, _map_bpPackInfoMapAB_codec);
      bpPackInfoMapABPatch_.WriteTo(ref output, _map_bpPackInfoMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += bpPackInfoMap_.CalculateSize(_map_bpPackInfoMap_codec);
      size += bpPackInfoMapAB_.CalculateSize(_map_bpPackInfoMapAB_codec);
      size += bpPackInfoMapABPatch_.CalculateSize(_map_bpPackInfoMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BpPackInfoConf other) {
      if (other == null) {
        return;
      }
      bpPackInfoMap_.Add(other.bpPackInfoMap_);
      bpPackInfoMapAB_.Add(other.bpPackInfoMapAB_);
      bpPackInfoMapABPatch_.Add(other.bpPackInfoMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            bpPackInfoMap_.AddEntriesFrom(input, _map_bpPackInfoMap_codec);
            break;
          }
          case 18: {
            bpPackInfoMapAB_.AddEntriesFrom(input, _map_bpPackInfoMapAB_codec);
            break;
          }
          case 26: {
            bpPackInfoMapABPatch_.AddEntriesFrom(input, _map_bpPackInfoMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            bpPackInfoMap_.AddEntriesFrom(ref input, _map_bpPackInfoMap_codec);
            break;
          }
          case 18: {
            bpPackInfoMapAB_.AddEntriesFrom(ref input, _map_bpPackInfoMapAB_codec);
            break;
          }
          case 26: {
            bpPackInfoMapABPatch_.AddEntriesFrom(ref input, _map_bpPackInfoMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
