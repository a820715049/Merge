// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/LoginSignTotalConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/LoginSignTotalConf.proto</summary>
  public static partial class LoginSignTotalConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/LoginSignTotalConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LoginSignTotalConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiByYXdkYXRhL0xvZ2luU2lnblRvdGFsQ29uZi5wcm90bxIHcmF3ZGF0YSIv",
            "Cg5Mb2dpblNpZ25Ub3RhbBIKCgJpZBgBIAEoBRIRCgl0b3RhbFBvb2wYAiAD",
            "KAkiwgEKGExvZ2luU2lnblRvdGFsTWFwQUJWYWx1ZRJTChFMb2dpblNpZ25U",
            "b3RhbE1hcBgBIAMoCzI4LnJhd2RhdGEuTG9naW5TaWduVG90YWxNYXBBQlZh",
            "bHVlLkxvZ2luU2lnblRvdGFsTWFwRW50cnkaUQoWTG9naW5TaWduVG90YWxN",
            "YXBFbnRyeRILCgNrZXkYASABKAUSJgoFdmFsdWUYAiABKAsyFy5yYXdkYXRh",
            "LkxvZ2luU2lnblRvdGFsOgI4ASKpBAoSTG9naW5TaWduVG90YWxDb25mEk0K",
            "EUxvZ2luU2lnblRvdGFsTWFwGAEgAygLMjIucmF3ZGF0YS5Mb2dpblNpZ25U",
            "b3RhbENvbmYuTG9naW5TaWduVG90YWxNYXBFbnRyeRJRChNMb2dpblNpZ25U",
            "b3RhbE1hcEFCGAIgAygLMjQucmF3ZGF0YS5Mb2dpblNpZ25Ub3RhbENvbmYu",
            "TG9naW5TaWduVG90YWxNYXBBQkVudHJ5ElsKGExvZ2luU2lnblRvdGFsTWFw",
            "QUJQYXRjaBgDIAMoCzI5LnJhd2RhdGEuTG9naW5TaWduVG90YWxDb25mLkxv",
            "Z2luU2lnblRvdGFsTWFwQUJQYXRjaEVudHJ5GlEKFkxvZ2luU2lnblRvdGFs",
            "TWFwRW50cnkSCwoDa2V5GAEgASgFEiYKBXZhbHVlGAIgASgLMhcucmF3ZGF0",
            "YS5Mb2dpblNpZ25Ub3RhbDoCOAEaXQoYTG9naW5TaWduVG90YWxNYXBBQkVu",
            "dHJ5EgsKA2tleRgBIAEoCRIwCgV2YWx1ZRgCIAEoCzIhLnJhd2RhdGEuTG9n",
            "aW5TaWduVG90YWxNYXBBQlZhbHVlOgI4ARpiCh1Mb2dpblNpZ25Ub3RhbE1h",
            "cEFCUGF0Y2hFbnRyeRILCgNrZXkYASABKAkSMAoFdmFsdWUYAiABKAsyIS5y",
            "YXdkYXRhLkxvZ2luU2lnblRvdGFsTWFwQUJWYWx1ZToCOAFCPVotZ2l0bGFi",
            "LmZ1bnBsdXMuaW8vZmF0L2NvbmYvZ2VuL2dvbGFuZy9yYXdkYXRhqgILZmF0",
            "LnJhd2RhdGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.LoginSignTotal), global::fat.rawdata.LoginSignTotal.Parser, new[]{ "Id", "TotalPool" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.LoginSignTotalMapABValue), global::fat.rawdata.LoginSignTotalMapABValue.Parser, new[]{ "LoginSignTotalMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.LoginSignTotalConf), global::fat.rawdata.LoginSignTotalConf.Parser, new[]{ "LoginSignTotalMap", "LoginSignTotalMapAB", "LoginSignTotalMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="LoginSignTotal",table="LoginSignTotalMap",table_wrapper="LoginSignTotalConf",map="true",map_key_type="int32",data="LoginSignTotalConf")
  /// annotation@ab(table_ab="LoginSignTotalMapAB",table_ab_patch="LoginSignTotalMapABPatch",table_ab_value="LoginSignTotalMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@LoginSignTotal(id="id")
  /// </summary>
  public sealed partial class LoginSignTotal : pb::IMessage<LoginSignTotal>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LoginSignTotal> _parser = new pb::MessageParser<LoginSignTotal>(() => new LoginSignTotal());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginSignTotal> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.LoginSignTotalConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginSignTotal() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginSignTotal(LoginSignTotal other) : this() {
      id_ = other.id_;
      totalPool_ = other.totalPool_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginSignTotal Clone() {
      return new LoginSignTotal(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// day
    /// (天数)
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "totalPool" field.</summary>
    public const int TotalPoolFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_totalPool_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> totalPool_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 累计签到奖励
    /// （Objbasic.id:数量）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> TotalPool {
      get { return totalPool_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginSignTotal);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginSignTotal other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!totalPool_.Equals(other.totalPool_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      hash ^= totalPool_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      totalPool_.WriteTo(output, _repeated_totalPool_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      totalPool_.WriteTo(ref output, _repeated_totalPool_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      size += totalPool_.CalculateSize(_repeated_totalPool_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginSignTotal other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      totalPool_.Add(other.totalPool_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            totalPool_.AddEntriesFrom(input, _repeated_totalPool_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            totalPool_.AddEntriesFrom(ref input, _repeated_totalPool_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LoginSignTotalMapABValue : pb::IMessage<LoginSignTotalMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LoginSignTotalMapABValue> _parser = new pb::MessageParser<LoginSignTotalMapABValue>(() => new LoginSignTotalMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginSignTotalMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.LoginSignTotalConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginSignTotalMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginSignTotalMapABValue(LoginSignTotalMapABValue other) : this() {
      loginSignTotalMap_ = other.loginSignTotalMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginSignTotalMapABValue Clone() {
      return new LoginSignTotalMapABValue(this);
    }

    /// <summary>Field number for the "LoginSignTotalMap" field.</summary>
    public const int LoginSignTotalMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.LoginSignTotal>.Codec _map_loginSignTotalMap_codec
        = new pbc::MapField<int, global::fat.rawdata.LoginSignTotal>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.LoginSignTotal.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.LoginSignTotal> loginSignTotalMap_ = new pbc::MapField<int, global::fat.rawdata.LoginSignTotal>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.LoginSignTotal> LoginSignTotalMap {
      get { return loginSignTotalMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginSignTotalMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginSignTotalMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!LoginSignTotalMap.Equals(other.LoginSignTotalMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= LoginSignTotalMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      loginSignTotalMap_.WriteTo(output, _map_loginSignTotalMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      loginSignTotalMap_.WriteTo(ref output, _map_loginSignTotalMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += loginSignTotalMap_.CalculateSize(_map_loginSignTotalMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginSignTotalMapABValue other) {
      if (other == null) {
        return;
      }
      loginSignTotalMap_.Add(other.loginSignTotalMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            loginSignTotalMap_.AddEntriesFrom(input, _map_loginSignTotalMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            loginSignTotalMap_.AddEntriesFrom(ref input, _map_loginSignTotalMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LoginSignTotalConf : pb::IMessage<LoginSignTotalConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LoginSignTotalConf> _parser = new pb::MessageParser<LoginSignTotalConf>(() => new LoginSignTotalConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginSignTotalConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.LoginSignTotalConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginSignTotalConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginSignTotalConf(LoginSignTotalConf other) : this() {
      loginSignTotalMap_ = other.loginSignTotalMap_.Clone();
      loginSignTotalMapAB_ = other.loginSignTotalMapAB_.Clone();
      loginSignTotalMapABPatch_ = other.loginSignTotalMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginSignTotalConf Clone() {
      return new LoginSignTotalConf(this);
    }

    /// <summary>Field number for the "LoginSignTotalMap" field.</summary>
    public const int LoginSignTotalMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.LoginSignTotal>.Codec _map_loginSignTotalMap_codec
        = new pbc::MapField<int, global::fat.rawdata.LoginSignTotal>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.LoginSignTotal.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.LoginSignTotal> loginSignTotalMap_ = new pbc::MapField<int, global::fat.rawdata.LoginSignTotal>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.LoginSignTotal> LoginSignTotalMap {
      get { return loginSignTotalMap_; }
    }

    /// <summary>Field number for the "LoginSignTotalMapAB" field.</summary>
    public const int LoginSignTotalMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.LoginSignTotalMapABValue>.Codec _map_loginSignTotalMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.LoginSignTotalMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.LoginSignTotalMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.LoginSignTotalMapABValue> loginSignTotalMapAB_ = new pbc::MapField<string, global::fat.rawdata.LoginSignTotalMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.LoginSignTotalMapABValue> LoginSignTotalMapAB {
      get { return loginSignTotalMapAB_; }
    }

    /// <summary>Field number for the "LoginSignTotalMapABPatch" field.</summary>
    public const int LoginSignTotalMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.LoginSignTotalMapABValue>.Codec _map_loginSignTotalMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.LoginSignTotalMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.LoginSignTotalMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.LoginSignTotalMapABValue> loginSignTotalMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.LoginSignTotalMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.LoginSignTotalMapABValue> LoginSignTotalMapABPatch {
      get { return loginSignTotalMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginSignTotalConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginSignTotalConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!LoginSignTotalMap.Equals(other.LoginSignTotalMap)) return false;
      if (!LoginSignTotalMapAB.Equals(other.LoginSignTotalMapAB)) return false;
      if (!LoginSignTotalMapABPatch.Equals(other.LoginSignTotalMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= LoginSignTotalMap.GetHashCode();
      hash ^= LoginSignTotalMapAB.GetHashCode();
      hash ^= LoginSignTotalMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      loginSignTotalMap_.WriteTo(output, _map_loginSignTotalMap_codec);
      loginSignTotalMapAB_.WriteTo(output, _map_loginSignTotalMapAB_codec);
      loginSignTotalMapABPatch_.WriteTo(output, _map_loginSignTotalMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      loginSignTotalMap_.WriteTo(ref output, _map_loginSignTotalMap_codec);
      loginSignTotalMapAB_.WriteTo(ref output, _map_loginSignTotalMapAB_codec);
      loginSignTotalMapABPatch_.WriteTo(ref output, _map_loginSignTotalMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += loginSignTotalMap_.CalculateSize(_map_loginSignTotalMap_codec);
      size += loginSignTotalMapAB_.CalculateSize(_map_loginSignTotalMapAB_codec);
      size += loginSignTotalMapABPatch_.CalculateSize(_map_loginSignTotalMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginSignTotalConf other) {
      if (other == null) {
        return;
      }
      loginSignTotalMap_.Add(other.loginSignTotalMap_);
      loginSignTotalMapAB_.Add(other.loginSignTotalMapAB_);
      loginSignTotalMapABPatch_.Add(other.loginSignTotalMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            loginSignTotalMap_.AddEntriesFrom(input, _map_loginSignTotalMap_codec);
            break;
          }
          case 18: {
            loginSignTotalMapAB_.AddEntriesFrom(input, _map_loginSignTotalMapAB_codec);
            break;
          }
          case 26: {
            loginSignTotalMapABPatch_.AddEntriesFrom(input, _map_loginSignTotalMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            loginSignTotalMap_.AddEntriesFrom(ref input, _map_loginSignTotalMap_codec);
            break;
          }
          case 18: {
            loginSignTotalMapAB_.AddEntriesFrom(ref input, _map_loginSignTotalMapAB_codec);
            break;
          }
          case 26: {
            loginSignTotalMapABPatch_.AddEntriesFrom(ref input, _map_loginSignTotalMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
