// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EnergyMultiPackConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EnergyMultiPackConf.proto</summary>
  public static partial class EnergyMultiPackConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EnergyMultiPackConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EnergyMultiPackConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiFyYXdkYXRhL0VuZXJneU11bHRpUGFja0NvbmYucHJvdG8SB3Jhd2RhdGEi",
            "hAEKD0VuZXJneU11bHRpUGFjaxIKCgJpZBgBIAEoBRISCgpldmVudFRoZW1l",
            "GAIgASgFEg0KBWxhYmVsGAcgASgFEhQKDHBhY2tPbmVHcnBJZBgDIAEoBRIW",
            "Cg5wYWNrVGhyZWVHcnBJZBgEIAEoBRIUCgxwYWNrVHdvR3JwSWQYBSABKAUi",
            "yAEKGUVuZXJneU11bHRpUGFja01hcEFCVmFsdWUSVgoSRW5lcmd5TXVsdGlQ",
            "YWNrTWFwGAEgAygLMjoucmF3ZGF0YS5FbmVyZ3lNdWx0aVBhY2tNYXBBQlZh",
            "bHVlLkVuZXJneU11bHRpUGFja01hcEVudHJ5GlMKF0VuZXJneU11bHRpUGFj",
            "a01hcEVudHJ5EgsKA2tleRgBIAEoBRInCgV2YWx1ZRgCIAEoCzIYLnJhd2Rh",
            "dGEuRW5lcmd5TXVsdGlQYWNrOgI4ASK5BAoTRW5lcmd5TXVsdGlQYWNrQ29u",
            "ZhJQChJFbmVyZ3lNdWx0aVBhY2tNYXAYASADKAsyNC5yYXdkYXRhLkVuZXJn",
            "eU11bHRpUGFja0NvbmYuRW5lcmd5TXVsdGlQYWNrTWFwRW50cnkSVAoURW5l",
            "cmd5TXVsdGlQYWNrTWFwQUIYAiADKAsyNi5yYXdkYXRhLkVuZXJneU11bHRp",
            "UGFja0NvbmYuRW5lcmd5TXVsdGlQYWNrTWFwQUJFbnRyeRJeChlFbmVyZ3lN",
            "dWx0aVBhY2tNYXBBQlBhdGNoGAMgAygLMjsucmF3ZGF0YS5FbmVyZ3lNdWx0",
            "aVBhY2tDb25mLkVuZXJneU11bHRpUGFja01hcEFCUGF0Y2hFbnRyeRpTChdF",
            "bmVyZ3lNdWx0aVBhY2tNYXBFbnRyeRILCgNrZXkYASABKAUSJwoFdmFsdWUY",
            "AiABKAsyGC5yYXdkYXRhLkVuZXJneU11bHRpUGFjazoCOAEaXwoZRW5lcmd5",
            "TXVsdGlQYWNrTWFwQUJFbnRyeRILCgNrZXkYASABKAkSMQoFdmFsdWUYAiAB",
            "KAsyIi5yYXdkYXRhLkVuZXJneU11bHRpUGFja01hcEFCVmFsdWU6AjgBGmQK",
            "HkVuZXJneU11bHRpUGFja01hcEFCUGF0Y2hFbnRyeRILCgNrZXkYASABKAkS",
            "MQoFdmFsdWUYAiABKAsyIi5yYXdkYXRhLkVuZXJneU11bHRpUGFja01hcEFC",
            "VmFsdWU6AjgBQj1aLWdpdGxhYi5mdW5wbHVzLmlvL2ZhdC9jb25mL2dlbi9n",
            "b2xhbmcvcmF3ZGF0YaoCC2ZhdC5yYXdkYXRhYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EnergyMultiPack), global::fat.rawdata.EnergyMultiPack.Parser, new[]{ "Id", "EventTheme", "Label", "PackOneGrpId", "PackThreeGrpId", "PackTwoGrpId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EnergyMultiPackMapABValue), global::fat.rawdata.EnergyMultiPackMapABValue.Parser, new[]{ "EnergyMultiPackMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EnergyMultiPackConf), global::fat.rawdata.EnergyMultiPackConf.Parser, new[]{ "EnergyMultiPackMap", "EnergyMultiPackMapAB", "EnergyMultiPackMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EnergyMultiPack",table="EnergyMultiPackMap",table_wrapper="EnergyMultiPackConf",map="true",map_key_type="int32",data="EnergyMultiPackConf")
  /// annotation@ab(table_ab="EnergyMultiPackMapAB",table_ab_patch="EnergyMultiPackMapABPatch",table_ab_value="EnergyMultiPackMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EnergyMultiPack(id="id")
  /// </summary>
  public sealed partial class EnergyMultiPack : pb::IMessage<EnergyMultiPack>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EnergyMultiPack> _parser = new pb::MessageParser<EnergyMultiPack>(() => new EnergyMultiPack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EnergyMultiPack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EnergyMultiPackConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnergyMultiPack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnergyMultiPack(EnergyMultiPack other) : this() {
      id_ = other.id_;
      eventTheme_ = other.eventTheme_;
      label_ = other.label_;
      packOneGrpId_ = other.packOneGrpId_;
      packThreeGrpId_ = other.packThreeGrpId_;
      packTwoGrpId_ = other.packTwoGrpId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnergyMultiPack Clone() {
      return new EnergyMultiPack(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 礼包
    /// 模板ID
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "eventTheme" field.</summary>
    public const int EventThemeFieldNumber = 2;
    private int eventTheme_;
    /// <summary>
    /// 活动弹板ID
    /// （EventTheme.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EventTheme {
      get { return eventTheme_; }
      set {
        eventTheme_ = value;
      }
    }

    /// <summary>Field number for the "label" field.</summary>
    public const int LabelFieldNumber = 7;
    private int label_;
    /// <summary>
    /// 标签信息
    /// （Label.id）
    /// （为空代表不显示标签）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Label {
      get { return label_; }
      set {
        label_ = value;
      }
    }

    /// <summary>Field number for the "packOneGrpId" field.</summary>
    public const int PackOneGrpIdFieldNumber = 3;
    private int packOneGrpId_;
    /// <summary>
    /// 内购商品ID
    /// （受档位组控制）
    /// （GradeIndexMapping.id）
    /// （IAPPack.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PackOneGrpId {
      get { return packOneGrpId_; }
      set {
        packOneGrpId_ = value;
      }
    }

    /// <summary>Field number for the "packThreeGrpId" field.</summary>
    public const int PackThreeGrpIdFieldNumber = 4;
    private int packThreeGrpId_;
    /// <summary>
    /// 内购商品ID
    /// （受档位组控制）
    /// （GradeIndexMapping.id）
    /// （IAPPack.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PackThreeGrpId {
      get { return packThreeGrpId_; }
      set {
        packThreeGrpId_ = value;
      }
    }

    /// <summary>Field number for the "packTwoGrpId" field.</summary>
    public const int PackTwoGrpIdFieldNumber = 5;
    private int packTwoGrpId_;
    /// <summary>
    /// 内购商品ID
    /// （受档位组控制）
    /// （GradeIndexMapping.id）
    /// （IAPPack.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PackTwoGrpId {
      get { return packTwoGrpId_; }
      set {
        packTwoGrpId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EnergyMultiPack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EnergyMultiPack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (EventTheme != other.EventTheme) return false;
      if (Label != other.Label) return false;
      if (PackOneGrpId != other.PackOneGrpId) return false;
      if (PackThreeGrpId != other.PackThreeGrpId) return false;
      if (PackTwoGrpId != other.PackTwoGrpId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (EventTheme != 0) hash ^= EventTheme.GetHashCode();
      if (Label != 0) hash ^= Label.GetHashCode();
      if (PackOneGrpId != 0) hash ^= PackOneGrpId.GetHashCode();
      if (PackThreeGrpId != 0) hash ^= PackThreeGrpId.GetHashCode();
      if (PackTwoGrpId != 0) hash ^= PackTwoGrpId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (EventTheme != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(EventTheme);
      }
      if (PackOneGrpId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PackOneGrpId);
      }
      if (PackThreeGrpId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(PackThreeGrpId);
      }
      if (PackTwoGrpId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(PackTwoGrpId);
      }
      if (Label != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Label);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (EventTheme != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(EventTheme);
      }
      if (PackOneGrpId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PackOneGrpId);
      }
      if (PackThreeGrpId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(PackThreeGrpId);
      }
      if (PackTwoGrpId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(PackTwoGrpId);
      }
      if (Label != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Label);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (EventTheme != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EventTheme);
      }
      if (Label != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Label);
      }
      if (PackOneGrpId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PackOneGrpId);
      }
      if (PackThreeGrpId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PackThreeGrpId);
      }
      if (PackTwoGrpId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PackTwoGrpId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EnergyMultiPack other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.EventTheme != 0) {
        EventTheme = other.EventTheme;
      }
      if (other.Label != 0) {
        Label = other.Label;
      }
      if (other.PackOneGrpId != 0) {
        PackOneGrpId = other.PackOneGrpId;
      }
      if (other.PackThreeGrpId != 0) {
        PackThreeGrpId = other.PackThreeGrpId;
      }
      if (other.PackTwoGrpId != 0) {
        PackTwoGrpId = other.PackTwoGrpId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            EventTheme = input.ReadInt32();
            break;
          }
          case 24: {
            PackOneGrpId = input.ReadInt32();
            break;
          }
          case 32: {
            PackThreeGrpId = input.ReadInt32();
            break;
          }
          case 40: {
            PackTwoGrpId = input.ReadInt32();
            break;
          }
          case 56: {
            Label = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            EventTheme = input.ReadInt32();
            break;
          }
          case 24: {
            PackOneGrpId = input.ReadInt32();
            break;
          }
          case 32: {
            PackThreeGrpId = input.ReadInt32();
            break;
          }
          case 40: {
            PackTwoGrpId = input.ReadInt32();
            break;
          }
          case 56: {
            Label = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EnergyMultiPackMapABValue : pb::IMessage<EnergyMultiPackMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EnergyMultiPackMapABValue> _parser = new pb::MessageParser<EnergyMultiPackMapABValue>(() => new EnergyMultiPackMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EnergyMultiPackMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EnergyMultiPackConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnergyMultiPackMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnergyMultiPackMapABValue(EnergyMultiPackMapABValue other) : this() {
      energyMultiPackMap_ = other.energyMultiPackMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnergyMultiPackMapABValue Clone() {
      return new EnergyMultiPackMapABValue(this);
    }

    /// <summary>Field number for the "EnergyMultiPackMap" field.</summary>
    public const int EnergyMultiPackMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EnergyMultiPack>.Codec _map_energyMultiPackMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EnergyMultiPack>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EnergyMultiPack.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EnergyMultiPack> energyMultiPackMap_ = new pbc::MapField<int, global::fat.rawdata.EnergyMultiPack>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EnergyMultiPack> EnergyMultiPackMap {
      get { return energyMultiPackMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EnergyMultiPackMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EnergyMultiPackMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EnergyMultiPackMap.Equals(other.EnergyMultiPackMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EnergyMultiPackMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      energyMultiPackMap_.WriteTo(output, _map_energyMultiPackMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      energyMultiPackMap_.WriteTo(ref output, _map_energyMultiPackMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += energyMultiPackMap_.CalculateSize(_map_energyMultiPackMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EnergyMultiPackMapABValue other) {
      if (other == null) {
        return;
      }
      energyMultiPackMap_.Add(other.energyMultiPackMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            energyMultiPackMap_.AddEntriesFrom(input, _map_energyMultiPackMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            energyMultiPackMap_.AddEntriesFrom(ref input, _map_energyMultiPackMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EnergyMultiPackConf : pb::IMessage<EnergyMultiPackConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EnergyMultiPackConf> _parser = new pb::MessageParser<EnergyMultiPackConf>(() => new EnergyMultiPackConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EnergyMultiPackConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EnergyMultiPackConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnergyMultiPackConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnergyMultiPackConf(EnergyMultiPackConf other) : this() {
      energyMultiPackMap_ = other.energyMultiPackMap_.Clone();
      energyMultiPackMapAB_ = other.energyMultiPackMapAB_.Clone();
      energyMultiPackMapABPatch_ = other.energyMultiPackMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnergyMultiPackConf Clone() {
      return new EnergyMultiPackConf(this);
    }

    /// <summary>Field number for the "EnergyMultiPackMap" field.</summary>
    public const int EnergyMultiPackMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EnergyMultiPack>.Codec _map_energyMultiPackMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EnergyMultiPack>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EnergyMultiPack.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EnergyMultiPack> energyMultiPackMap_ = new pbc::MapField<int, global::fat.rawdata.EnergyMultiPack>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EnergyMultiPack> EnergyMultiPackMap {
      get { return energyMultiPackMap_; }
    }

    /// <summary>Field number for the "EnergyMultiPackMapAB" field.</summary>
    public const int EnergyMultiPackMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EnergyMultiPackMapABValue>.Codec _map_energyMultiPackMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EnergyMultiPackMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EnergyMultiPackMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EnergyMultiPackMapABValue> energyMultiPackMapAB_ = new pbc::MapField<string, global::fat.rawdata.EnergyMultiPackMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EnergyMultiPackMapABValue> EnergyMultiPackMapAB {
      get { return energyMultiPackMapAB_; }
    }

    /// <summary>Field number for the "EnergyMultiPackMapABPatch" field.</summary>
    public const int EnergyMultiPackMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EnergyMultiPackMapABValue>.Codec _map_energyMultiPackMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EnergyMultiPackMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EnergyMultiPackMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EnergyMultiPackMapABValue> energyMultiPackMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EnergyMultiPackMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EnergyMultiPackMapABValue> EnergyMultiPackMapABPatch {
      get { return energyMultiPackMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EnergyMultiPackConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EnergyMultiPackConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EnergyMultiPackMap.Equals(other.EnergyMultiPackMap)) return false;
      if (!EnergyMultiPackMapAB.Equals(other.EnergyMultiPackMapAB)) return false;
      if (!EnergyMultiPackMapABPatch.Equals(other.EnergyMultiPackMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EnergyMultiPackMap.GetHashCode();
      hash ^= EnergyMultiPackMapAB.GetHashCode();
      hash ^= EnergyMultiPackMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      energyMultiPackMap_.WriteTo(output, _map_energyMultiPackMap_codec);
      energyMultiPackMapAB_.WriteTo(output, _map_energyMultiPackMapAB_codec);
      energyMultiPackMapABPatch_.WriteTo(output, _map_energyMultiPackMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      energyMultiPackMap_.WriteTo(ref output, _map_energyMultiPackMap_codec);
      energyMultiPackMapAB_.WriteTo(ref output, _map_energyMultiPackMapAB_codec);
      energyMultiPackMapABPatch_.WriteTo(ref output, _map_energyMultiPackMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += energyMultiPackMap_.CalculateSize(_map_energyMultiPackMap_codec);
      size += energyMultiPackMapAB_.CalculateSize(_map_energyMultiPackMapAB_codec);
      size += energyMultiPackMapABPatch_.CalculateSize(_map_energyMultiPackMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EnergyMultiPackConf other) {
      if (other == null) {
        return;
      }
      energyMultiPackMap_.Add(other.energyMultiPackMap_);
      energyMultiPackMapAB_.Add(other.energyMultiPackMapAB_);
      energyMultiPackMapABPatch_.Add(other.energyMultiPackMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            energyMultiPackMap_.AddEntriesFrom(input, _map_energyMultiPackMap_codec);
            break;
          }
          case 18: {
            energyMultiPackMapAB_.AddEntriesFrom(input, _map_energyMultiPackMapAB_codec);
            break;
          }
          case 26: {
            energyMultiPackMapABPatch_.AddEntriesFrom(input, _map_energyMultiPackMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            energyMultiPackMap_.AddEntriesFrom(ref input, _map_energyMultiPackMap_codec);
            break;
          }
          case 18: {
            energyMultiPackMapAB_.AddEntriesFrom(ref input, _map_energyMultiPackMapAB_codec);
            break;
          }
          case 26: {
            energyMultiPackMapABPatch_.AddEntriesFrom(ref input, _map_energyMultiPackMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
