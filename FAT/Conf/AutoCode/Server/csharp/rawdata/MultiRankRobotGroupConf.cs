// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/MultiRankRobotGroupConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/MultiRankRobotGroupConf.proto</summary>
  public static partial class MultiRankRobotGroupConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/MultiRankRobotGroupConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MultiRankRobotGroupConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiVyYXdkYXRhL011bHRpUmFua1JvYm90R3JvdXBDb25mLnByb3RvEgdyYXdk",
            "YXRhIkoKE011bHRpUmFua1JvYm90R3JvdXASCgoCaWQYASABKAUSFgoOcm9i",
            "b3RDaGFzaW5nUHQYAiABKAUSDwoHcm9ib3RJZBgDIAMoBSLgAQodTXVsdGlS",
            "YW5rUm9ib3RHcm91cE1hcEFCVmFsdWUSYgoWTXVsdGlSYW5rUm9ib3RHcm91",
            "cE1hcBgBIAMoCzJCLnJhd2RhdGEuTXVsdGlSYW5rUm9ib3RHcm91cE1hcEFC",
            "VmFsdWUuTXVsdGlSYW5rUm9ib3RHcm91cE1hcEVudHJ5GlsKG011bHRpUmFu",
            "a1JvYm90R3JvdXBNYXBFbnRyeRILCgNrZXkYASABKAUSKwoFdmFsdWUYAiAB",
            "KAsyHC5yYXdkYXRhLk11bHRpUmFua1JvYm90R3JvdXA6AjgBIvkEChdNdWx0",
            "aVJhbmtSb2JvdEdyb3VwQ29uZhJcChZNdWx0aVJhbmtSb2JvdEdyb3VwTWFw",
            "GAEgAygLMjwucmF3ZGF0YS5NdWx0aVJhbmtSb2JvdEdyb3VwQ29uZi5NdWx0",
            "aVJhbmtSb2JvdEdyb3VwTWFwRW50cnkSYAoYTXVsdGlSYW5rUm9ib3RHcm91",
            "cE1hcEFCGAIgAygLMj4ucmF3ZGF0YS5NdWx0aVJhbmtSb2JvdEdyb3VwQ29u",
            "Zi5NdWx0aVJhbmtSb2JvdEdyb3VwTWFwQUJFbnRyeRJqCh1NdWx0aVJhbmtS",
            "b2JvdEdyb3VwTWFwQUJQYXRjaBgDIAMoCzJDLnJhd2RhdGEuTXVsdGlSYW5r",
            "Um9ib3RHcm91cENvbmYuTXVsdGlSYW5rUm9ib3RHcm91cE1hcEFCUGF0Y2hF",
            "bnRyeRpbChtNdWx0aVJhbmtSb2JvdEdyb3VwTWFwRW50cnkSCwoDa2V5GAEg",
            "ASgFEisKBXZhbHVlGAIgASgLMhwucmF3ZGF0YS5NdWx0aVJhbmtSb2JvdEdy",
            "b3VwOgI4ARpnCh1NdWx0aVJhbmtSb2JvdEdyb3VwTWFwQUJFbnRyeRILCgNr",
            "ZXkYASABKAkSNQoFdmFsdWUYAiABKAsyJi5yYXdkYXRhLk11bHRpUmFua1Jv",
            "Ym90R3JvdXBNYXBBQlZhbHVlOgI4ARpsCiJNdWx0aVJhbmtSb2JvdEdyb3Vw",
            "TWFwQUJQYXRjaEVudHJ5EgsKA2tleRgBIAEoCRI1CgV2YWx1ZRgCIAEoCzIm",
            "LnJhd2RhdGEuTXVsdGlSYW5rUm9ib3RHcm91cE1hcEFCVmFsdWU6AjgBQj1a",
            "LWdpdGxhYi5mdW5wbHVzLmlvL2ZhdC9jb25mL2dlbi9nb2xhbmcvcmF3ZGF0",
            "YaoCC2ZhdC5yYXdkYXRhYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.MultiRankRobotGroup), global::fat.rawdata.MultiRankRobotGroup.Parser, new[]{ "Id", "RobotChasingPt", "RobotId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.MultiRankRobotGroupMapABValue), global::fat.rawdata.MultiRankRobotGroupMapABValue.Parser, new[]{ "MultiRankRobotGroupMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.MultiRankRobotGroupConf), global::fat.rawdata.MultiRankRobotGroupConf.Parser, new[]{ "MultiRankRobotGroupMap", "MultiRankRobotGroupMapAB", "MultiRankRobotGroupMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="MultiRankRobotGroup",table="MultiRankRobotGroupMap",table_wrapper="MultiRankRobotGroupConf",map="true",map_key_type="int32",data="MultiRankRobotGroupConf")
  /// annotation@ab(table_ab="MultiRankRobotGroupMapAB",table_ab_patch="MultiRankRobotGroupMapABPatch",table_ab_value="MultiRankRobotGroupMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@MultiRankRobotGroup(id="id")
  /// </summary>
  public sealed partial class MultiRankRobotGroup : pb::IMessage<MultiRankRobotGroup>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MultiRankRobotGroup> _parser = new pb::MessageParser<MultiRankRobotGroup>(() => new MultiRankRobotGroup());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MultiRankRobotGroup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.MultiRankRobotGroupConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiRankRobotGroup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiRankRobotGroup(MultiRankRobotGroup other) : this() {
      id_ = other.id_;
      robotChasingPt_ = other.robotChasingPt_;
      robotId_ = other.robotId_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiRankRobotGroup Clone() {
      return new MultiRankRobotGroup(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 机器人组id
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "robotChasingPt" field.</summary>
    public const int RobotChasingPtFieldNumber = 2;
    private int robotChasingPt_;
    /// <summary>
    /// 触发追分/等分逻辑的最低分数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RobotChasingPt {
      get { return robotChasingPt_; }
      set {
        robotChasingPt_ = value;
      }
    }

    /// <summary>Field number for the "robotId" field.</summary>
    public const int RobotIdFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_robotId_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> robotId_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 包含机器人
    /// （MultiRankRobotDetail.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> RobotId {
      get { return robotId_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MultiRankRobotGroup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MultiRankRobotGroup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (RobotChasingPt != other.RobotChasingPt) return false;
      if(!robotId_.Equals(other.robotId_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (RobotChasingPt != 0) hash ^= RobotChasingPt.GetHashCode();
      hash ^= robotId_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (RobotChasingPt != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RobotChasingPt);
      }
      robotId_.WriteTo(output, _repeated_robotId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (RobotChasingPt != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RobotChasingPt);
      }
      robotId_.WriteTo(ref output, _repeated_robotId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (RobotChasingPt != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RobotChasingPt);
      }
      size += robotId_.CalculateSize(_repeated_robotId_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MultiRankRobotGroup other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.RobotChasingPt != 0) {
        RobotChasingPt = other.RobotChasingPt;
      }
      robotId_.Add(other.robotId_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            RobotChasingPt = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            robotId_.AddEntriesFrom(input, _repeated_robotId_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            RobotChasingPt = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            robotId_.AddEntriesFrom(ref input, _repeated_robotId_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MultiRankRobotGroupMapABValue : pb::IMessage<MultiRankRobotGroupMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MultiRankRobotGroupMapABValue> _parser = new pb::MessageParser<MultiRankRobotGroupMapABValue>(() => new MultiRankRobotGroupMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MultiRankRobotGroupMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.MultiRankRobotGroupConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiRankRobotGroupMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiRankRobotGroupMapABValue(MultiRankRobotGroupMapABValue other) : this() {
      multiRankRobotGroupMap_ = other.multiRankRobotGroupMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiRankRobotGroupMapABValue Clone() {
      return new MultiRankRobotGroupMapABValue(this);
    }

    /// <summary>Field number for the "MultiRankRobotGroupMap" field.</summary>
    public const int MultiRankRobotGroupMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.MultiRankRobotGroup>.Codec _map_multiRankRobotGroupMap_codec
        = new pbc::MapField<int, global::fat.rawdata.MultiRankRobotGroup>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.MultiRankRobotGroup.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.MultiRankRobotGroup> multiRankRobotGroupMap_ = new pbc::MapField<int, global::fat.rawdata.MultiRankRobotGroup>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.MultiRankRobotGroup> MultiRankRobotGroupMap {
      get { return multiRankRobotGroupMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MultiRankRobotGroupMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MultiRankRobotGroupMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!MultiRankRobotGroupMap.Equals(other.MultiRankRobotGroupMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= MultiRankRobotGroupMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      multiRankRobotGroupMap_.WriteTo(output, _map_multiRankRobotGroupMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      multiRankRobotGroupMap_.WriteTo(ref output, _map_multiRankRobotGroupMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += multiRankRobotGroupMap_.CalculateSize(_map_multiRankRobotGroupMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MultiRankRobotGroupMapABValue other) {
      if (other == null) {
        return;
      }
      multiRankRobotGroupMap_.Add(other.multiRankRobotGroupMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            multiRankRobotGroupMap_.AddEntriesFrom(input, _map_multiRankRobotGroupMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            multiRankRobotGroupMap_.AddEntriesFrom(ref input, _map_multiRankRobotGroupMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MultiRankRobotGroupConf : pb::IMessage<MultiRankRobotGroupConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MultiRankRobotGroupConf> _parser = new pb::MessageParser<MultiRankRobotGroupConf>(() => new MultiRankRobotGroupConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MultiRankRobotGroupConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.MultiRankRobotGroupConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiRankRobotGroupConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiRankRobotGroupConf(MultiRankRobotGroupConf other) : this() {
      multiRankRobotGroupMap_ = other.multiRankRobotGroupMap_.Clone();
      multiRankRobotGroupMapAB_ = other.multiRankRobotGroupMapAB_.Clone();
      multiRankRobotGroupMapABPatch_ = other.multiRankRobotGroupMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiRankRobotGroupConf Clone() {
      return new MultiRankRobotGroupConf(this);
    }

    /// <summary>Field number for the "MultiRankRobotGroupMap" field.</summary>
    public const int MultiRankRobotGroupMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.MultiRankRobotGroup>.Codec _map_multiRankRobotGroupMap_codec
        = new pbc::MapField<int, global::fat.rawdata.MultiRankRobotGroup>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.MultiRankRobotGroup.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.MultiRankRobotGroup> multiRankRobotGroupMap_ = new pbc::MapField<int, global::fat.rawdata.MultiRankRobotGroup>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.MultiRankRobotGroup> MultiRankRobotGroupMap {
      get { return multiRankRobotGroupMap_; }
    }

    /// <summary>Field number for the "MultiRankRobotGroupMapAB" field.</summary>
    public const int MultiRankRobotGroupMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.MultiRankRobotGroupMapABValue>.Codec _map_multiRankRobotGroupMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.MultiRankRobotGroupMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.MultiRankRobotGroupMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.MultiRankRobotGroupMapABValue> multiRankRobotGroupMapAB_ = new pbc::MapField<string, global::fat.rawdata.MultiRankRobotGroupMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.MultiRankRobotGroupMapABValue> MultiRankRobotGroupMapAB {
      get { return multiRankRobotGroupMapAB_; }
    }

    /// <summary>Field number for the "MultiRankRobotGroupMapABPatch" field.</summary>
    public const int MultiRankRobotGroupMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.MultiRankRobotGroupMapABValue>.Codec _map_multiRankRobotGroupMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.MultiRankRobotGroupMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.MultiRankRobotGroupMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.MultiRankRobotGroupMapABValue> multiRankRobotGroupMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.MultiRankRobotGroupMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.MultiRankRobotGroupMapABValue> MultiRankRobotGroupMapABPatch {
      get { return multiRankRobotGroupMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MultiRankRobotGroupConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MultiRankRobotGroupConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!MultiRankRobotGroupMap.Equals(other.MultiRankRobotGroupMap)) return false;
      if (!MultiRankRobotGroupMapAB.Equals(other.MultiRankRobotGroupMapAB)) return false;
      if (!MultiRankRobotGroupMapABPatch.Equals(other.MultiRankRobotGroupMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= MultiRankRobotGroupMap.GetHashCode();
      hash ^= MultiRankRobotGroupMapAB.GetHashCode();
      hash ^= MultiRankRobotGroupMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      multiRankRobotGroupMap_.WriteTo(output, _map_multiRankRobotGroupMap_codec);
      multiRankRobotGroupMapAB_.WriteTo(output, _map_multiRankRobotGroupMapAB_codec);
      multiRankRobotGroupMapABPatch_.WriteTo(output, _map_multiRankRobotGroupMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      multiRankRobotGroupMap_.WriteTo(ref output, _map_multiRankRobotGroupMap_codec);
      multiRankRobotGroupMapAB_.WriteTo(ref output, _map_multiRankRobotGroupMapAB_codec);
      multiRankRobotGroupMapABPatch_.WriteTo(ref output, _map_multiRankRobotGroupMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += multiRankRobotGroupMap_.CalculateSize(_map_multiRankRobotGroupMap_codec);
      size += multiRankRobotGroupMapAB_.CalculateSize(_map_multiRankRobotGroupMapAB_codec);
      size += multiRankRobotGroupMapABPatch_.CalculateSize(_map_multiRankRobotGroupMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MultiRankRobotGroupConf other) {
      if (other == null) {
        return;
      }
      multiRankRobotGroupMap_.Add(other.multiRankRobotGroupMap_);
      multiRankRobotGroupMapAB_.Add(other.multiRankRobotGroupMapAB_);
      multiRankRobotGroupMapABPatch_.Add(other.multiRankRobotGroupMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            multiRankRobotGroupMap_.AddEntriesFrom(input, _map_multiRankRobotGroupMap_codec);
            break;
          }
          case 18: {
            multiRankRobotGroupMapAB_.AddEntriesFrom(input, _map_multiRankRobotGroupMapAB_codec);
            break;
          }
          case 26: {
            multiRankRobotGroupMapABPatch_.AddEntriesFrom(input, _map_multiRankRobotGroupMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            multiRankRobotGroupMap_.AddEntriesFrom(ref input, _map_multiRankRobotGroupMap_codec);
            break;
          }
          case 18: {
            multiRankRobotGroupMapAB_.AddEntriesFrom(ref input, _map_multiRankRobotGroupMapAB_codec);
            break;
          }
          case 26: {
            multiRankRobotGroupMapABPatch_.AddEntriesFrom(ref input, _map_multiRankRobotGroupMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
