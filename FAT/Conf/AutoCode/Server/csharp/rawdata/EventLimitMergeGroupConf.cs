// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventLimitMergeGroupConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventLimitMergeGroupConf.proto</summary>
  public static partial class EventLimitMergeGroupConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventLimitMergeGroupConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventLimitMergeGroupConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiZyYXdkYXRhL0V2ZW50TGltaXRNZXJnZUdyb3VwQ29uZi5wcm90bxIHcmF3",
            "ZGF0YSJZChRFdmVudExpbWl0TWVyZ2VHcm91cBIKCgJpZBgBIAEoBRIMCgRk",
            "aWZmGAIgASgFEhQKDG9yZGVyRXh0cmFJZBgFIAEoBRIRCglvcmRlckluZm8Y",
            "BCADKAUi5gEKHkV2ZW50TGltaXRNZXJnZUdyb3VwTWFwQUJWYWx1ZRJlChdF",
            "dmVudExpbWl0TWVyZ2VHcm91cE1hcBgBIAMoCzJELnJhd2RhdGEuRXZlbnRM",
            "aW1pdE1lcmdlR3JvdXBNYXBBQlZhbHVlLkV2ZW50TGltaXRNZXJnZUdyb3Vw",
            "TWFwRW50cnkaXQocRXZlbnRMaW1pdE1lcmdlR3JvdXBNYXBFbnRyeRILCgNr",
            "ZXkYASABKAUSLAoFdmFsdWUYAiABKAsyHS5yYXdkYXRhLkV2ZW50TGltaXRN",
            "ZXJnZUdyb3VwOgI4ASKJBQoYRXZlbnRMaW1pdE1lcmdlR3JvdXBDb25mEl8K",
            "F0V2ZW50TGltaXRNZXJnZUdyb3VwTWFwGAEgAygLMj4ucmF3ZGF0YS5FdmVu",
            "dExpbWl0TWVyZ2VHcm91cENvbmYuRXZlbnRMaW1pdE1lcmdlR3JvdXBNYXBF",
            "bnRyeRJjChlFdmVudExpbWl0TWVyZ2VHcm91cE1hcEFCGAIgAygLMkAucmF3",
            "ZGF0YS5FdmVudExpbWl0TWVyZ2VHcm91cENvbmYuRXZlbnRMaW1pdE1lcmdl",
            "R3JvdXBNYXBBQkVudHJ5Em0KHkV2ZW50TGltaXRNZXJnZUdyb3VwTWFwQUJQ",
            "YXRjaBgDIAMoCzJFLnJhd2RhdGEuRXZlbnRMaW1pdE1lcmdlR3JvdXBDb25m",
            "LkV2ZW50TGltaXRNZXJnZUdyb3VwTWFwQUJQYXRjaEVudHJ5Gl0KHEV2ZW50",
            "TGltaXRNZXJnZUdyb3VwTWFwRW50cnkSCwoDa2V5GAEgASgFEiwKBXZhbHVl",
            "GAIgASgLMh0ucmF3ZGF0YS5FdmVudExpbWl0TWVyZ2VHcm91cDoCOAEaaQoe",
            "RXZlbnRMaW1pdE1lcmdlR3JvdXBNYXBBQkVudHJ5EgsKA2tleRgBIAEoCRI2",
            "CgV2YWx1ZRgCIAEoCzInLnJhd2RhdGEuRXZlbnRMaW1pdE1lcmdlR3JvdXBN",
            "YXBBQlZhbHVlOgI4ARpuCiNFdmVudExpbWl0TWVyZ2VHcm91cE1hcEFCUGF0",
            "Y2hFbnRyeRILCgNrZXkYASABKAkSNgoFdmFsdWUYAiABKAsyJy5yYXdkYXRh",
            "LkV2ZW50TGltaXRNZXJnZUdyb3VwTWFwQUJWYWx1ZToCOAFCPVotZ2l0bGFi",
            "LmZ1bnBsdXMuaW8vZmF0L2NvbmYvZ2VuL2dvbGFuZy9yYXdkYXRhqgILZmF0",
            "LnJhd2RhdGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventLimitMergeGroup), global::fat.rawdata.EventLimitMergeGroup.Parser, new[]{ "Id", "Diff", "OrderExtraId", "OrderInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventLimitMergeGroupMapABValue), global::fat.rawdata.EventLimitMergeGroupMapABValue.Parser, new[]{ "EventLimitMergeGroupMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventLimitMergeGroupConf), global::fat.rawdata.EventLimitMergeGroupConf.Parser, new[]{ "EventLimitMergeGroupMap", "EventLimitMergeGroupMapAB", "EventLimitMergeGroupMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventLimitMergeGroup",table="EventLimitMergeGroupMap",table_wrapper="EventLimitMergeGroupConf",map="true",map_key_type="int32",data="EventLimitMergeGroupConf")
  /// annotation@ab(table_ab="EventLimitMergeGroupMapAB",table_ab_patch="EventLimitMergeGroupMapABPatch",table_ab_value="EventLimitMergeGroupMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventLimitMergeGroup(id="id")
  /// </summary>
  public sealed partial class EventLimitMergeGroup : pb::IMessage<EventLimitMergeGroup>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventLimitMergeGroup> _parser = new pb::MessageParser<EventLimitMergeGroup>(() => new EventLimitMergeGroup());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventLimitMergeGroup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventLimitMergeGroupConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventLimitMergeGroup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventLimitMergeGroup(EventLimitMergeGroup other) : this() {
      id_ = other.id_;
      diff_ = other.diff_;
      orderExtraId_ = other.orderExtraId_;
      orderInfo_ = other.orderInfo_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventLimitMergeGroup Clone() {
      return new EventLimitMergeGroup(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 分层id
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "diff" field.</summary>
    public const int DiffFieldNumber = 2;
    private int diff_;
    /// <summary>
    /// 难度
    /// （仅作用于TGA）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Diff {
      get { return diff_; }
      set {
        diff_ = value;
      }
    }

    /// <summary>Field number for the "orderExtraId" field.</summary>
    public const int OrderExtraIdFieldNumber = 5;
    private int orderExtraId_;
    /// <summary>
    /// 其他订单挂载棋子
    /// （EventOrderExtra.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int OrderExtraId {
      get { return orderExtraId_; }
      set {
        orderExtraId_ = value;
      }
    }

    /// <summary>Field number for the "orderInfo" field.</summary>
    public const int OrderInfoFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_orderInfo_codec
        = pb::FieldCodec.ForInt32(34);
    private readonly pbc::RepeatedField<int> orderInfo_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 限时订单配置组
    /// （LimitMergeOrder.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> OrderInfo {
      get { return orderInfo_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventLimitMergeGroup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventLimitMergeGroup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Diff != other.Diff) return false;
      if (OrderExtraId != other.OrderExtraId) return false;
      if(!orderInfo_.Equals(other.orderInfo_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Diff != 0) hash ^= Diff.GetHashCode();
      if (OrderExtraId != 0) hash ^= OrderExtraId.GetHashCode();
      hash ^= orderInfo_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Diff != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Diff);
      }
      orderInfo_.WriteTo(output, _repeated_orderInfo_codec);
      if (OrderExtraId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(OrderExtraId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Diff != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Diff);
      }
      orderInfo_.WriteTo(ref output, _repeated_orderInfo_codec);
      if (OrderExtraId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(OrderExtraId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Diff != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Diff);
      }
      if (OrderExtraId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OrderExtraId);
      }
      size += orderInfo_.CalculateSize(_repeated_orderInfo_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventLimitMergeGroup other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Diff != 0) {
        Diff = other.Diff;
      }
      if (other.OrderExtraId != 0) {
        OrderExtraId = other.OrderExtraId;
      }
      orderInfo_.Add(other.orderInfo_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Diff = input.ReadInt32();
            break;
          }
          case 34:
          case 32: {
            orderInfo_.AddEntriesFrom(input, _repeated_orderInfo_codec);
            break;
          }
          case 40: {
            OrderExtraId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Diff = input.ReadInt32();
            break;
          }
          case 34:
          case 32: {
            orderInfo_.AddEntriesFrom(ref input, _repeated_orderInfo_codec);
            break;
          }
          case 40: {
            OrderExtraId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventLimitMergeGroupMapABValue : pb::IMessage<EventLimitMergeGroupMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventLimitMergeGroupMapABValue> _parser = new pb::MessageParser<EventLimitMergeGroupMapABValue>(() => new EventLimitMergeGroupMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventLimitMergeGroupMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventLimitMergeGroupConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventLimitMergeGroupMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventLimitMergeGroupMapABValue(EventLimitMergeGroupMapABValue other) : this() {
      eventLimitMergeGroupMap_ = other.eventLimitMergeGroupMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventLimitMergeGroupMapABValue Clone() {
      return new EventLimitMergeGroupMapABValue(this);
    }

    /// <summary>Field number for the "EventLimitMergeGroupMap" field.</summary>
    public const int EventLimitMergeGroupMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventLimitMergeGroup>.Codec _map_eventLimitMergeGroupMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventLimitMergeGroup>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventLimitMergeGroup.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventLimitMergeGroup> eventLimitMergeGroupMap_ = new pbc::MapField<int, global::fat.rawdata.EventLimitMergeGroup>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventLimitMergeGroup> EventLimitMergeGroupMap {
      get { return eventLimitMergeGroupMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventLimitMergeGroupMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventLimitMergeGroupMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventLimitMergeGroupMap.Equals(other.EventLimitMergeGroupMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventLimitMergeGroupMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventLimitMergeGroupMap_.WriteTo(output, _map_eventLimitMergeGroupMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventLimitMergeGroupMap_.WriteTo(ref output, _map_eventLimitMergeGroupMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventLimitMergeGroupMap_.CalculateSize(_map_eventLimitMergeGroupMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventLimitMergeGroupMapABValue other) {
      if (other == null) {
        return;
      }
      eventLimitMergeGroupMap_.Add(other.eventLimitMergeGroupMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventLimitMergeGroupMap_.AddEntriesFrom(input, _map_eventLimitMergeGroupMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventLimitMergeGroupMap_.AddEntriesFrom(ref input, _map_eventLimitMergeGroupMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventLimitMergeGroupConf : pb::IMessage<EventLimitMergeGroupConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventLimitMergeGroupConf> _parser = new pb::MessageParser<EventLimitMergeGroupConf>(() => new EventLimitMergeGroupConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventLimitMergeGroupConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventLimitMergeGroupConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventLimitMergeGroupConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventLimitMergeGroupConf(EventLimitMergeGroupConf other) : this() {
      eventLimitMergeGroupMap_ = other.eventLimitMergeGroupMap_.Clone();
      eventLimitMergeGroupMapAB_ = other.eventLimitMergeGroupMapAB_.Clone();
      eventLimitMergeGroupMapABPatch_ = other.eventLimitMergeGroupMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventLimitMergeGroupConf Clone() {
      return new EventLimitMergeGroupConf(this);
    }

    /// <summary>Field number for the "EventLimitMergeGroupMap" field.</summary>
    public const int EventLimitMergeGroupMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventLimitMergeGroup>.Codec _map_eventLimitMergeGroupMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventLimitMergeGroup>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventLimitMergeGroup.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventLimitMergeGroup> eventLimitMergeGroupMap_ = new pbc::MapField<int, global::fat.rawdata.EventLimitMergeGroup>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventLimitMergeGroup> EventLimitMergeGroupMap {
      get { return eventLimitMergeGroupMap_; }
    }

    /// <summary>Field number for the "EventLimitMergeGroupMapAB" field.</summary>
    public const int EventLimitMergeGroupMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventLimitMergeGroupMapABValue>.Codec _map_eventLimitMergeGroupMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventLimitMergeGroupMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventLimitMergeGroupMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventLimitMergeGroupMapABValue> eventLimitMergeGroupMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventLimitMergeGroupMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventLimitMergeGroupMapABValue> EventLimitMergeGroupMapAB {
      get { return eventLimitMergeGroupMapAB_; }
    }

    /// <summary>Field number for the "EventLimitMergeGroupMapABPatch" field.</summary>
    public const int EventLimitMergeGroupMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventLimitMergeGroupMapABValue>.Codec _map_eventLimitMergeGroupMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventLimitMergeGroupMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventLimitMergeGroupMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventLimitMergeGroupMapABValue> eventLimitMergeGroupMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventLimitMergeGroupMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventLimitMergeGroupMapABValue> EventLimitMergeGroupMapABPatch {
      get { return eventLimitMergeGroupMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventLimitMergeGroupConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventLimitMergeGroupConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventLimitMergeGroupMap.Equals(other.EventLimitMergeGroupMap)) return false;
      if (!EventLimitMergeGroupMapAB.Equals(other.EventLimitMergeGroupMapAB)) return false;
      if (!EventLimitMergeGroupMapABPatch.Equals(other.EventLimitMergeGroupMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventLimitMergeGroupMap.GetHashCode();
      hash ^= EventLimitMergeGroupMapAB.GetHashCode();
      hash ^= EventLimitMergeGroupMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventLimitMergeGroupMap_.WriteTo(output, _map_eventLimitMergeGroupMap_codec);
      eventLimitMergeGroupMapAB_.WriteTo(output, _map_eventLimitMergeGroupMapAB_codec);
      eventLimitMergeGroupMapABPatch_.WriteTo(output, _map_eventLimitMergeGroupMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventLimitMergeGroupMap_.WriteTo(ref output, _map_eventLimitMergeGroupMap_codec);
      eventLimitMergeGroupMapAB_.WriteTo(ref output, _map_eventLimitMergeGroupMapAB_codec);
      eventLimitMergeGroupMapABPatch_.WriteTo(ref output, _map_eventLimitMergeGroupMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventLimitMergeGroupMap_.CalculateSize(_map_eventLimitMergeGroupMap_codec);
      size += eventLimitMergeGroupMapAB_.CalculateSize(_map_eventLimitMergeGroupMapAB_codec);
      size += eventLimitMergeGroupMapABPatch_.CalculateSize(_map_eventLimitMergeGroupMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventLimitMergeGroupConf other) {
      if (other == null) {
        return;
      }
      eventLimitMergeGroupMap_.Add(other.eventLimitMergeGroupMap_);
      eventLimitMergeGroupMapAB_.Add(other.eventLimitMergeGroupMapAB_);
      eventLimitMergeGroupMapABPatch_.Add(other.eventLimitMergeGroupMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventLimitMergeGroupMap_.AddEntriesFrom(input, _map_eventLimitMergeGroupMap_codec);
            break;
          }
          case 18: {
            eventLimitMergeGroupMapAB_.AddEntriesFrom(input, _map_eventLimitMergeGroupMapAB_codec);
            break;
          }
          case 26: {
            eventLimitMergeGroupMapABPatch_.AddEntriesFrom(input, _map_eventLimitMergeGroupMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventLimitMergeGroupMap_.AddEntriesFrom(ref input, _map_eventLimitMergeGroupMap_codec);
            break;
          }
          case 18: {
            eventLimitMergeGroupMapAB_.AddEntriesFrom(ref input, _map_eventLimitMergeGroupMapAB_codec);
            break;
          }
          case 26: {
            eventLimitMergeGroupMapABPatch_.AddEntriesFrom(ref input, _map_eventLimitMergeGroupMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
