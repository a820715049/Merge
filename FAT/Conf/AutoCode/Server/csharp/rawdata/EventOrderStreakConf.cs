// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventOrderStreakConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventOrderStreakConf.proto</summary>
  public static partial class EventOrderStreakConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventOrderStreakConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventOrderStreakConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiJyYXdkYXRhL0V2ZW50T3JkZXJTdHJlYWtDb25mLnByb3RvEgdyYXdkYXRh",
            "Io0BChBFdmVudE9yZGVyU3RyZWFrEgoKAmlkGAEgASgFEg8KB2JvYXJkSWQY",
            "AyABKAUSEgoKY2hlc3RUaGVtZRgJIAEoCRIOCgZkZXRhaWwYByABKAUSEAoI",
            "ZW5kVGhlbWUYCiABKAUSEgoKZXZlbnRUaGVtZRgEIAEoBRISCgpvcmRlclRo",
            "ZW1lGAggASgJIs4BChpFdmVudE9yZGVyU3RyZWFrTWFwQUJWYWx1ZRJZChNF",
            "dmVudE9yZGVyU3RyZWFrTWFwGAEgAygLMjwucmF3ZGF0YS5FdmVudE9yZGVy",
            "U3RyZWFrTWFwQUJWYWx1ZS5FdmVudE9yZGVyU3RyZWFrTWFwRW50cnkaVQoY",
            "RXZlbnRPcmRlclN0cmVha01hcEVudHJ5EgsKA2tleRgBIAEoBRIoCgV2YWx1",
            "ZRgCIAEoCzIZLnJhd2RhdGEuRXZlbnRPcmRlclN0cmVhazoCOAEiyQQKFEV2",
            "ZW50T3JkZXJTdHJlYWtDb25mElMKE0V2ZW50T3JkZXJTdHJlYWtNYXAYASAD",
            "KAsyNi5yYXdkYXRhLkV2ZW50T3JkZXJTdHJlYWtDb25mLkV2ZW50T3JkZXJT",
            "dHJlYWtNYXBFbnRyeRJXChVFdmVudE9yZGVyU3RyZWFrTWFwQUIYAiADKAsy",
            "OC5yYXdkYXRhLkV2ZW50T3JkZXJTdHJlYWtDb25mLkV2ZW50T3JkZXJTdHJl",
            "YWtNYXBBQkVudHJ5EmEKGkV2ZW50T3JkZXJTdHJlYWtNYXBBQlBhdGNoGAMg",
            "AygLMj0ucmF3ZGF0YS5FdmVudE9yZGVyU3RyZWFrQ29uZi5FdmVudE9yZGVy",
            "U3RyZWFrTWFwQUJQYXRjaEVudHJ5GlUKGEV2ZW50T3JkZXJTdHJlYWtNYXBF",
            "bnRyeRILCgNrZXkYASABKAUSKAoFdmFsdWUYAiABKAsyGS5yYXdkYXRhLkV2",
            "ZW50T3JkZXJTdHJlYWs6AjgBGmEKGkV2ZW50T3JkZXJTdHJlYWtNYXBBQkVu",
            "dHJ5EgsKA2tleRgBIAEoCRIyCgV2YWx1ZRgCIAEoCzIjLnJhd2RhdGEuRXZl",
            "bnRPcmRlclN0cmVha01hcEFCVmFsdWU6AjgBGmYKH0V2ZW50T3JkZXJTdHJl",
            "YWtNYXBBQlBhdGNoRW50cnkSCwoDa2V5GAEgASgJEjIKBXZhbHVlGAIgASgL",
            "MiMucmF3ZGF0YS5FdmVudE9yZGVyU3RyZWFrTWFwQUJWYWx1ZToCOAFCPVot",
            "Z2l0bGFiLmZ1bnBsdXMuaW8vZmF0L2NvbmYvZ2VuL2dvbGFuZy9yYXdkYXRh",
            "qgILZmF0LnJhd2RhdGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventOrderStreak), global::fat.rawdata.EventOrderStreak.Parser, new[]{ "Id", "BoardId", "ChestTheme", "Detail", "EndTheme", "EventTheme", "OrderTheme" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventOrderStreakMapABValue), global::fat.rawdata.EventOrderStreakMapABValue.Parser, new[]{ "EventOrderStreakMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventOrderStreakConf), global::fat.rawdata.EventOrderStreakConf.Parser, new[]{ "EventOrderStreakMap", "EventOrderStreakMapAB", "EventOrderStreakMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventOrderStreak",table="EventOrderStreakMap",table_wrapper="EventOrderStreakConf",map="true",map_key_type="int32",data="EventOrderStreakConf")
  /// annotation@ab(table_ab="EventOrderStreakMapAB",table_ab_patch="EventOrderStreakMapABPatch",table_ab_value="EventOrderStreakMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventOrderStreak(id="id")
  /// </summary>
  public sealed partial class EventOrderStreak : pb::IMessage<EventOrderStreak>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventOrderStreak> _parser = new pb::MessageParser<EventOrderStreak>(() => new EventOrderStreak());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventOrderStreak> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventOrderStreakConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventOrderStreak() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventOrderStreak(EventOrderStreak other) : this() {
      id_ = other.id_;
      boardId_ = other.boardId_;
      chestTheme_ = other.chestTheme_;
      detail_ = other.detail_;
      endTheme_ = other.endTheme_;
      eventTheme_ = other.eventTheme_;
      orderTheme_ = other.orderTheme_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventOrderStreak Clone() {
      return new EventOrderStreak(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 活动模版
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "boardId" field.</summary>
    public const int BoardIdFieldNumber = 3;
    private int boardId_;
    /// <summary>
    /// 生效棋盘id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BoardId {
      get { return boardId_; }
      set {
        boardId_ = value;
      }
    }

    /// <summary>Field number for the "chestTheme" field.</summary>
    public const int ChestThemeFieldNumber = 9;
    private string chestTheme_ = "";
    /// <summary>
    /// 宝箱图
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ChestTheme {
      get { return chestTheme_; }
      set {
        chestTheme_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "detail" field.</summary>
    public const int DetailFieldNumber = 7;
    private int detail_;
    /// <summary>
    /// 活动详情
    /// （配置GradeIndexMapping.id
    /// 返回EventOrderStreakDetail.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Detail {
      get { return detail_; }
      set {
        detail_ = value;
      }
    }

    /// <summary>Field number for the "endTheme" field.</summary>
    public const int EndThemeFieldNumber = 10;
    private int endTheme_;
    /// <summary>
    /// 活动结束界面
    /// （EventTheme.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EndTheme {
      get { return endTheme_; }
      set {
        endTheme_ = value;
      }
    }

    /// <summary>Field number for the "eventTheme" field.</summary>
    public const int EventThemeFieldNumber = 4;
    private int eventTheme_;
    /// <summary>
    /// 活动主界面
    /// （EventTheme.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EventTheme {
      get { return eventTheme_; }
      set {
        eventTheme_ = value;
      }
    }

    /// <summary>Field number for the "orderTheme" field.</summary>
    public const int OrderThemeFieldNumber = 8;
    private string orderTheme_ = "";
    /// <summary>
    /// 订单界面
    /// （Asset）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrderTheme {
      get { return orderTheme_; }
      set {
        orderTheme_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventOrderStreak);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventOrderStreak other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (BoardId != other.BoardId) return false;
      if (ChestTheme != other.ChestTheme) return false;
      if (Detail != other.Detail) return false;
      if (EndTheme != other.EndTheme) return false;
      if (EventTheme != other.EventTheme) return false;
      if (OrderTheme != other.OrderTheme) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (BoardId != 0) hash ^= BoardId.GetHashCode();
      if (ChestTheme.Length != 0) hash ^= ChestTheme.GetHashCode();
      if (Detail != 0) hash ^= Detail.GetHashCode();
      if (EndTheme != 0) hash ^= EndTheme.GetHashCode();
      if (EventTheme != 0) hash ^= EventTheme.GetHashCode();
      if (OrderTheme.Length != 0) hash ^= OrderTheme.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (BoardId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(BoardId);
      }
      if (EventTheme != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(EventTheme);
      }
      if (Detail != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Detail);
      }
      if (OrderTheme.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(OrderTheme);
      }
      if (ChestTheme.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ChestTheme);
      }
      if (EndTheme != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(EndTheme);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (BoardId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(BoardId);
      }
      if (EventTheme != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(EventTheme);
      }
      if (Detail != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Detail);
      }
      if (OrderTheme.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(OrderTheme);
      }
      if (ChestTheme.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ChestTheme);
      }
      if (EndTheme != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(EndTheme);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (BoardId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BoardId);
      }
      if (ChestTheme.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ChestTheme);
      }
      if (Detail != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Detail);
      }
      if (EndTheme != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EndTheme);
      }
      if (EventTheme != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EventTheme);
      }
      if (OrderTheme.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderTheme);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventOrderStreak other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.BoardId != 0) {
        BoardId = other.BoardId;
      }
      if (other.ChestTheme.Length != 0) {
        ChestTheme = other.ChestTheme;
      }
      if (other.Detail != 0) {
        Detail = other.Detail;
      }
      if (other.EndTheme != 0) {
        EndTheme = other.EndTheme;
      }
      if (other.EventTheme != 0) {
        EventTheme = other.EventTheme;
      }
      if (other.OrderTheme.Length != 0) {
        OrderTheme = other.OrderTheme;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 24: {
            BoardId = input.ReadInt32();
            break;
          }
          case 32: {
            EventTheme = input.ReadInt32();
            break;
          }
          case 56: {
            Detail = input.ReadInt32();
            break;
          }
          case 66: {
            OrderTheme = input.ReadString();
            break;
          }
          case 74: {
            ChestTheme = input.ReadString();
            break;
          }
          case 80: {
            EndTheme = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 24: {
            BoardId = input.ReadInt32();
            break;
          }
          case 32: {
            EventTheme = input.ReadInt32();
            break;
          }
          case 56: {
            Detail = input.ReadInt32();
            break;
          }
          case 66: {
            OrderTheme = input.ReadString();
            break;
          }
          case 74: {
            ChestTheme = input.ReadString();
            break;
          }
          case 80: {
            EndTheme = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventOrderStreakMapABValue : pb::IMessage<EventOrderStreakMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventOrderStreakMapABValue> _parser = new pb::MessageParser<EventOrderStreakMapABValue>(() => new EventOrderStreakMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventOrderStreakMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventOrderStreakConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventOrderStreakMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventOrderStreakMapABValue(EventOrderStreakMapABValue other) : this() {
      eventOrderStreakMap_ = other.eventOrderStreakMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventOrderStreakMapABValue Clone() {
      return new EventOrderStreakMapABValue(this);
    }

    /// <summary>Field number for the "EventOrderStreakMap" field.</summary>
    public const int EventOrderStreakMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventOrderStreak>.Codec _map_eventOrderStreakMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventOrderStreak>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventOrderStreak.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventOrderStreak> eventOrderStreakMap_ = new pbc::MapField<int, global::fat.rawdata.EventOrderStreak>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventOrderStreak> EventOrderStreakMap {
      get { return eventOrderStreakMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventOrderStreakMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventOrderStreakMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventOrderStreakMap.Equals(other.EventOrderStreakMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventOrderStreakMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventOrderStreakMap_.WriteTo(output, _map_eventOrderStreakMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventOrderStreakMap_.WriteTo(ref output, _map_eventOrderStreakMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventOrderStreakMap_.CalculateSize(_map_eventOrderStreakMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventOrderStreakMapABValue other) {
      if (other == null) {
        return;
      }
      eventOrderStreakMap_.Add(other.eventOrderStreakMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventOrderStreakMap_.AddEntriesFrom(input, _map_eventOrderStreakMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventOrderStreakMap_.AddEntriesFrom(ref input, _map_eventOrderStreakMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventOrderStreakConf : pb::IMessage<EventOrderStreakConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventOrderStreakConf> _parser = new pb::MessageParser<EventOrderStreakConf>(() => new EventOrderStreakConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventOrderStreakConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventOrderStreakConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventOrderStreakConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventOrderStreakConf(EventOrderStreakConf other) : this() {
      eventOrderStreakMap_ = other.eventOrderStreakMap_.Clone();
      eventOrderStreakMapAB_ = other.eventOrderStreakMapAB_.Clone();
      eventOrderStreakMapABPatch_ = other.eventOrderStreakMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventOrderStreakConf Clone() {
      return new EventOrderStreakConf(this);
    }

    /// <summary>Field number for the "EventOrderStreakMap" field.</summary>
    public const int EventOrderStreakMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventOrderStreak>.Codec _map_eventOrderStreakMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventOrderStreak>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventOrderStreak.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventOrderStreak> eventOrderStreakMap_ = new pbc::MapField<int, global::fat.rawdata.EventOrderStreak>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventOrderStreak> EventOrderStreakMap {
      get { return eventOrderStreakMap_; }
    }

    /// <summary>Field number for the "EventOrderStreakMapAB" field.</summary>
    public const int EventOrderStreakMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventOrderStreakMapABValue>.Codec _map_eventOrderStreakMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventOrderStreakMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventOrderStreakMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventOrderStreakMapABValue> eventOrderStreakMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventOrderStreakMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventOrderStreakMapABValue> EventOrderStreakMapAB {
      get { return eventOrderStreakMapAB_; }
    }

    /// <summary>Field number for the "EventOrderStreakMapABPatch" field.</summary>
    public const int EventOrderStreakMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventOrderStreakMapABValue>.Codec _map_eventOrderStreakMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventOrderStreakMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventOrderStreakMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventOrderStreakMapABValue> eventOrderStreakMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventOrderStreakMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventOrderStreakMapABValue> EventOrderStreakMapABPatch {
      get { return eventOrderStreakMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventOrderStreakConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventOrderStreakConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventOrderStreakMap.Equals(other.EventOrderStreakMap)) return false;
      if (!EventOrderStreakMapAB.Equals(other.EventOrderStreakMapAB)) return false;
      if (!EventOrderStreakMapABPatch.Equals(other.EventOrderStreakMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventOrderStreakMap.GetHashCode();
      hash ^= EventOrderStreakMapAB.GetHashCode();
      hash ^= EventOrderStreakMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventOrderStreakMap_.WriteTo(output, _map_eventOrderStreakMap_codec);
      eventOrderStreakMapAB_.WriteTo(output, _map_eventOrderStreakMapAB_codec);
      eventOrderStreakMapABPatch_.WriteTo(output, _map_eventOrderStreakMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventOrderStreakMap_.WriteTo(ref output, _map_eventOrderStreakMap_codec);
      eventOrderStreakMapAB_.WriteTo(ref output, _map_eventOrderStreakMapAB_codec);
      eventOrderStreakMapABPatch_.WriteTo(ref output, _map_eventOrderStreakMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventOrderStreakMap_.CalculateSize(_map_eventOrderStreakMap_codec);
      size += eventOrderStreakMapAB_.CalculateSize(_map_eventOrderStreakMapAB_codec);
      size += eventOrderStreakMapABPatch_.CalculateSize(_map_eventOrderStreakMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventOrderStreakConf other) {
      if (other == null) {
        return;
      }
      eventOrderStreakMap_.Add(other.eventOrderStreakMap_);
      eventOrderStreakMapAB_.Add(other.eventOrderStreakMapAB_);
      eventOrderStreakMapABPatch_.Add(other.eventOrderStreakMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventOrderStreakMap_.AddEntriesFrom(input, _map_eventOrderStreakMap_codec);
            break;
          }
          case 18: {
            eventOrderStreakMapAB_.AddEntriesFrom(input, _map_eventOrderStreakMapAB_codec);
            break;
          }
          case 26: {
            eventOrderStreakMapABPatch_.AddEntriesFrom(input, _map_eventOrderStreakMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventOrderStreakMap_.AddEntriesFrom(ref input, _map_eventOrderStreakMap_codec);
            break;
          }
          case 18: {
            eventOrderStreakMapAB_.AddEntriesFrom(ref input, _map_eventOrderStreakMapAB_codec);
            break;
          }
          case 26: {
            eventOrderStreakMapABPatch_.AddEntriesFrom(ref input, _map_eventOrderStreakMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
