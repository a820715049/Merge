// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/MergeCategorySpecialConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/MergeCategorySpecialConf.proto</summary>
  public static partial class MergeCategorySpecialConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/MergeCategorySpecialConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MergeCategorySpecialConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiZyYXdkYXRhL01lcmdlQ2F0ZWdvcnlTcGVjaWFsQ29uZi5wcm90bxIHcmF3",
            "ZGF0YSI5ChRNZXJnZUNhdGVnb3J5U3BlY2lhbBIKCgJpZBgBIAEoBRIVCg1n",
            "YWxsZXJ5UmV3YXJkGAIgAygJIuYBCh5NZXJnZUNhdGVnb3J5U3BlY2lhbE1h",
            "cEFCVmFsdWUSZQoXTWVyZ2VDYXRlZ29yeVNwZWNpYWxNYXAYASADKAsyRC5y",
            "YXdkYXRhLk1lcmdlQ2F0ZWdvcnlTcGVjaWFsTWFwQUJWYWx1ZS5NZXJnZUNh",
            "dGVnb3J5U3BlY2lhbE1hcEVudHJ5Gl0KHE1lcmdlQ2F0ZWdvcnlTcGVjaWFs",
            "TWFwRW50cnkSCwoDa2V5GAEgASgFEiwKBXZhbHVlGAIgASgLMh0ucmF3ZGF0",
            "YS5NZXJnZUNhdGVnb3J5U3BlY2lhbDoCOAEiiQUKGE1lcmdlQ2F0ZWdvcnlT",
            "cGVjaWFsQ29uZhJfChdNZXJnZUNhdGVnb3J5U3BlY2lhbE1hcBgBIAMoCzI+",
            "LnJhd2RhdGEuTWVyZ2VDYXRlZ29yeVNwZWNpYWxDb25mLk1lcmdlQ2F0ZWdv",
            "cnlTcGVjaWFsTWFwRW50cnkSYwoZTWVyZ2VDYXRlZ29yeVNwZWNpYWxNYXBB",
            "QhgCIAMoCzJALnJhd2RhdGEuTWVyZ2VDYXRlZ29yeVNwZWNpYWxDb25mLk1l",
            "cmdlQ2F0ZWdvcnlTcGVjaWFsTWFwQUJFbnRyeRJtCh5NZXJnZUNhdGVnb3J5",
            "U3BlY2lhbE1hcEFCUGF0Y2gYAyADKAsyRS5yYXdkYXRhLk1lcmdlQ2F0ZWdv",
            "cnlTcGVjaWFsQ29uZi5NZXJnZUNhdGVnb3J5U3BlY2lhbE1hcEFCUGF0Y2hF",
            "bnRyeRpdChxNZXJnZUNhdGVnb3J5U3BlY2lhbE1hcEVudHJ5EgsKA2tleRgB",
            "IAEoBRIsCgV2YWx1ZRgCIAEoCzIdLnJhd2RhdGEuTWVyZ2VDYXRlZ29yeVNw",
            "ZWNpYWw6AjgBGmkKHk1lcmdlQ2F0ZWdvcnlTcGVjaWFsTWFwQUJFbnRyeRIL",
            "CgNrZXkYASABKAkSNgoFdmFsdWUYAiABKAsyJy5yYXdkYXRhLk1lcmdlQ2F0",
            "ZWdvcnlTcGVjaWFsTWFwQUJWYWx1ZToCOAEabgojTWVyZ2VDYXRlZ29yeVNw",
            "ZWNpYWxNYXBBQlBhdGNoRW50cnkSCwoDa2V5GAEgASgJEjYKBXZhbHVlGAIg",
            "ASgLMicucmF3ZGF0YS5NZXJnZUNhdGVnb3J5U3BlY2lhbE1hcEFCVmFsdWU6",
            "AjgBQj1aLWdpdGxhYi5mdW5wbHVzLmlvL2ZhdC9jb25mL2dlbi9nb2xhbmcv",
            "cmF3ZGF0YaoCC2ZhdC5yYXdkYXRhYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.MergeCategorySpecial), global::fat.rawdata.MergeCategorySpecial.Parser, new[]{ "Id", "GalleryReward" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.MergeCategorySpecialMapABValue), global::fat.rawdata.MergeCategorySpecialMapABValue.Parser, new[]{ "MergeCategorySpecialMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.MergeCategorySpecialConf), global::fat.rawdata.MergeCategorySpecialConf.Parser, new[]{ "MergeCategorySpecialMap", "MergeCategorySpecialMapAB", "MergeCategorySpecialMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="MergeCategorySpecial",table="MergeCategorySpecialMap",table_wrapper="MergeCategorySpecialConf",map="true",map_key_type="int32",data="MergeCategorySpecialConf")
  /// annotation@ab(table_ab="MergeCategorySpecialMapAB",table_ab_patch="MergeCategorySpecialMapABPatch",table_ab_value="MergeCategorySpecialMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@MergeCategorySpecial(id="id")
  /// </summary>
  public sealed partial class MergeCategorySpecial : pb::IMessage<MergeCategorySpecial>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MergeCategorySpecial> _parser = new pb::MessageParser<MergeCategorySpecial>(() => new MergeCategorySpecial());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MergeCategorySpecial> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.MergeCategorySpecialConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeCategorySpecial() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeCategorySpecial(MergeCategorySpecial other) : this() {
      id_ = other.id_;
      galleryReward_ = other.galleryReward_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeCategorySpecial Clone() {
      return new MergeCategorySpecial(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 合成链ID
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "galleryReward" field.</summary>
    public const int GalleryRewardFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_galleryReward_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> galleryReward_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 链条完成奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> GalleryReward {
      get { return galleryReward_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MergeCategorySpecial);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MergeCategorySpecial other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!galleryReward_.Equals(other.galleryReward_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      hash ^= galleryReward_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      galleryReward_.WriteTo(output, _repeated_galleryReward_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      galleryReward_.WriteTo(ref output, _repeated_galleryReward_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      size += galleryReward_.CalculateSize(_repeated_galleryReward_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MergeCategorySpecial other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      galleryReward_.Add(other.galleryReward_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            galleryReward_.AddEntriesFrom(input, _repeated_galleryReward_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            galleryReward_.AddEntriesFrom(ref input, _repeated_galleryReward_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MergeCategorySpecialMapABValue : pb::IMessage<MergeCategorySpecialMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MergeCategorySpecialMapABValue> _parser = new pb::MessageParser<MergeCategorySpecialMapABValue>(() => new MergeCategorySpecialMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MergeCategorySpecialMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.MergeCategorySpecialConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeCategorySpecialMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeCategorySpecialMapABValue(MergeCategorySpecialMapABValue other) : this() {
      mergeCategorySpecialMap_ = other.mergeCategorySpecialMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeCategorySpecialMapABValue Clone() {
      return new MergeCategorySpecialMapABValue(this);
    }

    /// <summary>Field number for the "MergeCategorySpecialMap" field.</summary>
    public const int MergeCategorySpecialMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.MergeCategorySpecial>.Codec _map_mergeCategorySpecialMap_codec
        = new pbc::MapField<int, global::fat.rawdata.MergeCategorySpecial>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.MergeCategorySpecial.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.MergeCategorySpecial> mergeCategorySpecialMap_ = new pbc::MapField<int, global::fat.rawdata.MergeCategorySpecial>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.MergeCategorySpecial> MergeCategorySpecialMap {
      get { return mergeCategorySpecialMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MergeCategorySpecialMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MergeCategorySpecialMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!MergeCategorySpecialMap.Equals(other.MergeCategorySpecialMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= MergeCategorySpecialMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      mergeCategorySpecialMap_.WriteTo(output, _map_mergeCategorySpecialMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      mergeCategorySpecialMap_.WriteTo(ref output, _map_mergeCategorySpecialMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += mergeCategorySpecialMap_.CalculateSize(_map_mergeCategorySpecialMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MergeCategorySpecialMapABValue other) {
      if (other == null) {
        return;
      }
      mergeCategorySpecialMap_.Add(other.mergeCategorySpecialMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            mergeCategorySpecialMap_.AddEntriesFrom(input, _map_mergeCategorySpecialMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            mergeCategorySpecialMap_.AddEntriesFrom(ref input, _map_mergeCategorySpecialMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MergeCategorySpecialConf : pb::IMessage<MergeCategorySpecialConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MergeCategorySpecialConf> _parser = new pb::MessageParser<MergeCategorySpecialConf>(() => new MergeCategorySpecialConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MergeCategorySpecialConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.MergeCategorySpecialConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeCategorySpecialConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeCategorySpecialConf(MergeCategorySpecialConf other) : this() {
      mergeCategorySpecialMap_ = other.mergeCategorySpecialMap_.Clone();
      mergeCategorySpecialMapAB_ = other.mergeCategorySpecialMapAB_.Clone();
      mergeCategorySpecialMapABPatch_ = other.mergeCategorySpecialMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeCategorySpecialConf Clone() {
      return new MergeCategorySpecialConf(this);
    }

    /// <summary>Field number for the "MergeCategorySpecialMap" field.</summary>
    public const int MergeCategorySpecialMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.MergeCategorySpecial>.Codec _map_mergeCategorySpecialMap_codec
        = new pbc::MapField<int, global::fat.rawdata.MergeCategorySpecial>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.MergeCategorySpecial.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.MergeCategorySpecial> mergeCategorySpecialMap_ = new pbc::MapField<int, global::fat.rawdata.MergeCategorySpecial>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.MergeCategorySpecial> MergeCategorySpecialMap {
      get { return mergeCategorySpecialMap_; }
    }

    /// <summary>Field number for the "MergeCategorySpecialMapAB" field.</summary>
    public const int MergeCategorySpecialMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.MergeCategorySpecialMapABValue>.Codec _map_mergeCategorySpecialMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.MergeCategorySpecialMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.MergeCategorySpecialMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.MergeCategorySpecialMapABValue> mergeCategorySpecialMapAB_ = new pbc::MapField<string, global::fat.rawdata.MergeCategorySpecialMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.MergeCategorySpecialMapABValue> MergeCategorySpecialMapAB {
      get { return mergeCategorySpecialMapAB_; }
    }

    /// <summary>Field number for the "MergeCategorySpecialMapABPatch" field.</summary>
    public const int MergeCategorySpecialMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.MergeCategorySpecialMapABValue>.Codec _map_mergeCategorySpecialMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.MergeCategorySpecialMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.MergeCategorySpecialMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.MergeCategorySpecialMapABValue> mergeCategorySpecialMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.MergeCategorySpecialMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.MergeCategorySpecialMapABValue> MergeCategorySpecialMapABPatch {
      get { return mergeCategorySpecialMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MergeCategorySpecialConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MergeCategorySpecialConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!MergeCategorySpecialMap.Equals(other.MergeCategorySpecialMap)) return false;
      if (!MergeCategorySpecialMapAB.Equals(other.MergeCategorySpecialMapAB)) return false;
      if (!MergeCategorySpecialMapABPatch.Equals(other.MergeCategorySpecialMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= MergeCategorySpecialMap.GetHashCode();
      hash ^= MergeCategorySpecialMapAB.GetHashCode();
      hash ^= MergeCategorySpecialMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      mergeCategorySpecialMap_.WriteTo(output, _map_mergeCategorySpecialMap_codec);
      mergeCategorySpecialMapAB_.WriteTo(output, _map_mergeCategorySpecialMapAB_codec);
      mergeCategorySpecialMapABPatch_.WriteTo(output, _map_mergeCategorySpecialMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      mergeCategorySpecialMap_.WriteTo(ref output, _map_mergeCategorySpecialMap_codec);
      mergeCategorySpecialMapAB_.WriteTo(ref output, _map_mergeCategorySpecialMapAB_codec);
      mergeCategorySpecialMapABPatch_.WriteTo(ref output, _map_mergeCategorySpecialMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += mergeCategorySpecialMap_.CalculateSize(_map_mergeCategorySpecialMap_codec);
      size += mergeCategorySpecialMapAB_.CalculateSize(_map_mergeCategorySpecialMapAB_codec);
      size += mergeCategorySpecialMapABPatch_.CalculateSize(_map_mergeCategorySpecialMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MergeCategorySpecialConf other) {
      if (other == null) {
        return;
      }
      mergeCategorySpecialMap_.Add(other.mergeCategorySpecialMap_);
      mergeCategorySpecialMapAB_.Add(other.mergeCategorySpecialMapAB_);
      mergeCategorySpecialMapABPatch_.Add(other.mergeCategorySpecialMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            mergeCategorySpecialMap_.AddEntriesFrom(input, _map_mergeCategorySpecialMap_codec);
            break;
          }
          case 18: {
            mergeCategorySpecialMapAB_.AddEntriesFrom(input, _map_mergeCategorySpecialMapAB_codec);
            break;
          }
          case 26: {
            mergeCategorySpecialMapABPatch_.AddEntriesFrom(input, _map_mergeCategorySpecialMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            mergeCategorySpecialMap_.AddEntriesFrom(ref input, _map_mergeCategorySpecialMap_codec);
            break;
          }
          case 18: {
            mergeCategorySpecialMapAB_.AddEntriesFrom(ref input, _map_mergeCategorySpecialMapAB_codec);
            break;
          }
          case 26: {
            mergeCategorySpecialMapABPatch_.AddEntriesFrom(ref input, _map_mergeCategorySpecialMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
