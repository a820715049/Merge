// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/GuessItemConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/GuessItemConf.proto</summary>
  public static partial class GuessItemConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/GuessItemConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GuessItemConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChtyYXdkYXRhL0d1ZXNzSXRlbUNvbmYucHJvdG8SB3Jhd2RhdGEiJgoJR3Vl",
            "c3NJdGVtEgoKAmlkGAEgASgFEg0KBWltYWdlGAIgASgJIqQBChNHdWVzc0l0",
            "ZW1NYXBBQlZhbHVlEkQKDEd1ZXNzSXRlbU1hcBgBIAMoCzIuLnJhd2RhdGEu",
            "R3Vlc3NJdGVtTWFwQUJWYWx1ZS5HdWVzc0l0ZW1NYXBFbnRyeRpHChFHdWVz",
            "c0l0ZW1NYXBFbnRyeRILCgNrZXkYASABKAUSIQoFdmFsdWUYAiABKAsyEi5y",
            "YXdkYXRhLkd1ZXNzSXRlbToCOAEi2QMKDUd1ZXNzSXRlbUNvbmYSPgoMR3Vl",
            "c3NJdGVtTWFwGAEgAygLMigucmF3ZGF0YS5HdWVzc0l0ZW1Db25mLkd1ZXNz",
            "SXRlbU1hcEVudHJ5EkIKDkd1ZXNzSXRlbU1hcEFCGAIgAygLMioucmF3ZGF0",
            "YS5HdWVzc0l0ZW1Db25mLkd1ZXNzSXRlbU1hcEFCRW50cnkSTAoTR3Vlc3NJ",
            "dGVtTWFwQUJQYXRjaBgDIAMoCzIvLnJhd2RhdGEuR3Vlc3NJdGVtQ29uZi5H",
            "dWVzc0l0ZW1NYXBBQlBhdGNoRW50cnkaRwoRR3Vlc3NJdGVtTWFwRW50cnkS",
            "CwoDa2V5GAEgASgFEiEKBXZhbHVlGAIgASgLMhIucmF3ZGF0YS5HdWVzc0l0",
            "ZW06AjgBGlMKE0d1ZXNzSXRlbU1hcEFCRW50cnkSCwoDa2V5GAEgASgJEisK",
            "BXZhbHVlGAIgASgLMhwucmF3ZGF0YS5HdWVzc0l0ZW1NYXBBQlZhbHVlOgI4",
            "ARpYChhHdWVzc0l0ZW1NYXBBQlBhdGNoRW50cnkSCwoDa2V5GAEgASgJEisK",
            "BXZhbHVlGAIgASgLMhwucmF3ZGF0YS5HdWVzc0l0ZW1NYXBBQlZhbHVlOgI4",
            "AUI9Wi1naXRsYWIuZnVucGx1cy5pby9mYXQvY29uZi9nZW4vZ29sYW5nL3Jh",
            "d2RhdGGqAgtmYXQucmF3ZGF0YWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.GuessItem), global::fat.rawdata.GuessItem.Parser, new[]{ "Id", "Image" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.GuessItemMapABValue), global::fat.rawdata.GuessItemMapABValue.Parser, new[]{ "GuessItemMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.GuessItemConf), global::fat.rawdata.GuessItemConf.Parser, new[]{ "GuessItemMap", "GuessItemMapAB", "GuessItemMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="GuessItem",table="GuessItemMap",table_wrapper="GuessItemConf",map="true",map_key_type="int32",data="GuessItemConf")
  /// annotation@ab(table_ab="GuessItemMapAB",table_ab_patch="GuessItemMapABPatch",table_ab_value="GuessItemMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@GuessItem(id="id")
  /// </summary>
  public sealed partial class GuessItem : pb::IMessage<GuessItem>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GuessItem> _parser = new pb::MessageParser<GuessItem>(() => new GuessItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GuessItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.GuessItemConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GuessItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GuessItem(GuessItem other) : this() {
      id_ = other.id_;
      image_ = other.image_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GuessItem Clone() {
      return new GuessItem(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 物品ID
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "image" field.</summary>
    public const int ImageFieldNumber = 2;
    private string image_ = "";
    /// <summary>
    /// 物品icon
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Image {
      get { return image_; }
      set {
        image_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GuessItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GuessItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Image != other.Image) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Image.Length != 0) hash ^= Image.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Image.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Image);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Image.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Image);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Image.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Image);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GuessItem other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Image.Length != 0) {
        Image = other.Image;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Image = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Image = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GuessItemMapABValue : pb::IMessage<GuessItemMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GuessItemMapABValue> _parser = new pb::MessageParser<GuessItemMapABValue>(() => new GuessItemMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GuessItemMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.GuessItemConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GuessItemMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GuessItemMapABValue(GuessItemMapABValue other) : this() {
      guessItemMap_ = other.guessItemMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GuessItemMapABValue Clone() {
      return new GuessItemMapABValue(this);
    }

    /// <summary>Field number for the "GuessItemMap" field.</summary>
    public const int GuessItemMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.GuessItem>.Codec _map_guessItemMap_codec
        = new pbc::MapField<int, global::fat.rawdata.GuessItem>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.GuessItem.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.GuessItem> guessItemMap_ = new pbc::MapField<int, global::fat.rawdata.GuessItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.GuessItem> GuessItemMap {
      get { return guessItemMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GuessItemMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GuessItemMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!GuessItemMap.Equals(other.GuessItemMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= GuessItemMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      guessItemMap_.WriteTo(output, _map_guessItemMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      guessItemMap_.WriteTo(ref output, _map_guessItemMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += guessItemMap_.CalculateSize(_map_guessItemMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GuessItemMapABValue other) {
      if (other == null) {
        return;
      }
      guessItemMap_.Add(other.guessItemMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            guessItemMap_.AddEntriesFrom(input, _map_guessItemMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            guessItemMap_.AddEntriesFrom(ref input, _map_guessItemMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GuessItemConf : pb::IMessage<GuessItemConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GuessItemConf> _parser = new pb::MessageParser<GuessItemConf>(() => new GuessItemConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GuessItemConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.GuessItemConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GuessItemConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GuessItemConf(GuessItemConf other) : this() {
      guessItemMap_ = other.guessItemMap_.Clone();
      guessItemMapAB_ = other.guessItemMapAB_.Clone();
      guessItemMapABPatch_ = other.guessItemMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GuessItemConf Clone() {
      return new GuessItemConf(this);
    }

    /// <summary>Field number for the "GuessItemMap" field.</summary>
    public const int GuessItemMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.GuessItem>.Codec _map_guessItemMap_codec
        = new pbc::MapField<int, global::fat.rawdata.GuessItem>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.GuessItem.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.GuessItem> guessItemMap_ = new pbc::MapField<int, global::fat.rawdata.GuessItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.GuessItem> GuessItemMap {
      get { return guessItemMap_; }
    }

    /// <summary>Field number for the "GuessItemMapAB" field.</summary>
    public const int GuessItemMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.GuessItemMapABValue>.Codec _map_guessItemMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.GuessItemMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.GuessItemMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.GuessItemMapABValue> guessItemMapAB_ = new pbc::MapField<string, global::fat.rawdata.GuessItemMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.GuessItemMapABValue> GuessItemMapAB {
      get { return guessItemMapAB_; }
    }

    /// <summary>Field number for the "GuessItemMapABPatch" field.</summary>
    public const int GuessItemMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.GuessItemMapABValue>.Codec _map_guessItemMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.GuessItemMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.GuessItemMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.GuessItemMapABValue> guessItemMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.GuessItemMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.GuessItemMapABValue> GuessItemMapABPatch {
      get { return guessItemMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GuessItemConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GuessItemConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!GuessItemMap.Equals(other.GuessItemMap)) return false;
      if (!GuessItemMapAB.Equals(other.GuessItemMapAB)) return false;
      if (!GuessItemMapABPatch.Equals(other.GuessItemMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= GuessItemMap.GetHashCode();
      hash ^= GuessItemMapAB.GetHashCode();
      hash ^= GuessItemMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      guessItemMap_.WriteTo(output, _map_guessItemMap_codec);
      guessItemMapAB_.WriteTo(output, _map_guessItemMapAB_codec);
      guessItemMapABPatch_.WriteTo(output, _map_guessItemMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      guessItemMap_.WriteTo(ref output, _map_guessItemMap_codec);
      guessItemMapAB_.WriteTo(ref output, _map_guessItemMapAB_codec);
      guessItemMapABPatch_.WriteTo(ref output, _map_guessItemMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += guessItemMap_.CalculateSize(_map_guessItemMap_codec);
      size += guessItemMapAB_.CalculateSize(_map_guessItemMapAB_codec);
      size += guessItemMapABPatch_.CalculateSize(_map_guessItemMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GuessItemConf other) {
      if (other == null) {
        return;
      }
      guessItemMap_.Add(other.guessItemMap_);
      guessItemMapAB_.Add(other.guessItemMapAB_);
      guessItemMapABPatch_.Add(other.guessItemMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            guessItemMap_.AddEntriesFrom(input, _map_guessItemMap_codec);
            break;
          }
          case 18: {
            guessItemMapAB_.AddEntriesFrom(input, _map_guessItemMapAB_codec);
            break;
          }
          case 26: {
            guessItemMapABPatch_.AddEntriesFrom(input, _map_guessItemMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            guessItemMap_.AddEntriesFrom(ref input, _map_guessItemMap_codec);
            break;
          }
          case 18: {
            guessItemMapAB_.AddEntriesFrom(ref input, _map_guessItemMapAB_codec);
            break;
          }
          case 26: {
            guessItemMapABPatch_.AddEntriesFrom(ref input, _map_guessItemMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
