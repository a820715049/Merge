// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventRaceRobotConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventRaceRobotConf.proto</summary>
  public static partial class EventRaceRobotConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventRaceRobotConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventRaceRobotConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiByYXdkYXRhL0V2ZW50UmFjZVJvYm90Q29uZi5wcm90bxIHcmF3ZGF0YSJo",
            "Cg5FdmVudFJhY2VSb2JvdBIKCgJpZBgBIAEoBRIQCghhZGRTY29yZRgCIAMo",
            "BRIPCgdvZmZsaW5lGAMgAygFEhcKD29mZmxpbmVBZGRTY29yZRgFIAMoBRIO",
            "CgZvbmxpbmUYBCADKAUiwgEKGEV2ZW50UmFjZVJvYm90TWFwQUJWYWx1ZRJT",
            "ChFFdmVudFJhY2VSb2JvdE1hcBgBIAMoCzI4LnJhd2RhdGEuRXZlbnRSYWNl",
            "Um9ib3RNYXBBQlZhbHVlLkV2ZW50UmFjZVJvYm90TWFwRW50cnkaUQoWRXZl",
            "bnRSYWNlUm9ib3RNYXBFbnRyeRILCgNrZXkYASABKAUSJgoFdmFsdWUYAiAB",
            "KAsyFy5yYXdkYXRhLkV2ZW50UmFjZVJvYm90OgI4ASKpBAoSRXZlbnRSYWNl",
            "Um9ib3RDb25mEk0KEUV2ZW50UmFjZVJvYm90TWFwGAEgAygLMjIucmF3ZGF0",
            "YS5FdmVudFJhY2VSb2JvdENvbmYuRXZlbnRSYWNlUm9ib3RNYXBFbnRyeRJR",
            "ChNFdmVudFJhY2VSb2JvdE1hcEFCGAIgAygLMjQucmF3ZGF0YS5FdmVudFJh",
            "Y2VSb2JvdENvbmYuRXZlbnRSYWNlUm9ib3RNYXBBQkVudHJ5ElsKGEV2ZW50",
            "UmFjZVJvYm90TWFwQUJQYXRjaBgDIAMoCzI5LnJhd2RhdGEuRXZlbnRSYWNl",
            "Um9ib3RDb25mLkV2ZW50UmFjZVJvYm90TWFwQUJQYXRjaEVudHJ5GlEKFkV2",
            "ZW50UmFjZVJvYm90TWFwRW50cnkSCwoDa2V5GAEgASgFEiYKBXZhbHVlGAIg",
            "ASgLMhcucmF3ZGF0YS5FdmVudFJhY2VSb2JvdDoCOAEaXQoYRXZlbnRSYWNl",
            "Um9ib3RNYXBBQkVudHJ5EgsKA2tleRgBIAEoCRIwCgV2YWx1ZRgCIAEoCzIh",
            "LnJhd2RhdGEuRXZlbnRSYWNlUm9ib3RNYXBBQlZhbHVlOgI4ARpiCh1FdmVu",
            "dFJhY2VSb2JvdE1hcEFCUGF0Y2hFbnRyeRILCgNrZXkYASABKAkSMAoFdmFs",
            "dWUYAiABKAsyIS5yYXdkYXRhLkV2ZW50UmFjZVJvYm90TWFwQUJWYWx1ZToC",
            "OAFCPVotZ2l0bGFiLmZ1bnBsdXMuaW8vZmF0L2NvbmYvZ2VuL2dvbGFuZy9y",
            "YXdkYXRhqgILZmF0LnJhd2RhdGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventRaceRobot), global::fat.rawdata.EventRaceRobot.Parser, new[]{ "Id", "AddScore", "Offline", "OfflineAddScore", "Online" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventRaceRobotMapABValue), global::fat.rawdata.EventRaceRobotMapABValue.Parser, new[]{ "EventRaceRobotMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventRaceRobotConf), global::fat.rawdata.EventRaceRobotConf.Parser, new[]{ "EventRaceRobotMap", "EventRaceRobotMapAB", "EventRaceRobotMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventRaceRobot",table="EventRaceRobotMap",table_wrapper="EventRaceRobotConf",map="true",map_key_type="int32",data="EventRaceRobotConf")
  /// annotation@ab(table_ab="EventRaceRobotMapAB",table_ab_patch="EventRaceRobotMapABPatch",table_ab_value="EventRaceRobotMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventRaceRobot(id="id")
  /// </summary>
  public sealed partial class EventRaceRobot : pb::IMessage<EventRaceRobot>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventRaceRobot> _parser = new pb::MessageParser<EventRaceRobot>(() => new EventRaceRobot());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventRaceRobot> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventRaceRobotConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventRaceRobot() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventRaceRobot(EventRaceRobot other) : this() {
      id_ = other.id_;
      addScore_ = other.addScore_.Clone();
      offline_ = other.offline_.Clone();
      offlineAddScore_ = other.offlineAddScore_.Clone();
      online_ = other.online_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventRaceRobot Clone() {
      return new EventRaceRobot(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 机器人id
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "addScore" field.</summary>
    public const int AddScoreFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_addScore_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> addScore_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 在线积分增长数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> AddScore {
      get { return addScore_; }
    }

    /// <summary>Field number for the "offline" field.</summary>
    public const int OfflineFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_offline_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> offline_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 离线刷新时间间隔s
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Offline {
      get { return offline_; }
    }

    /// <summary>Field number for the "offlineAddScore" field.</summary>
    public const int OfflineAddScoreFieldNumber = 5;
    private static readonly pb::FieldCodec<int> _repeated_offlineAddScore_codec
        = pb::FieldCodec.ForInt32(42);
    private readonly pbc::RepeatedField<int> offlineAddScore_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 离线积分增长数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> OfflineAddScore {
      get { return offlineAddScore_; }
    }

    /// <summary>Field number for the "online" field.</summary>
    public const int OnlineFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_online_codec
        = pb::FieldCodec.ForInt32(34);
    private readonly pbc::RepeatedField<int> online_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 在线刷新时间间隔ms
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Online {
      get { return online_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventRaceRobot);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventRaceRobot other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!addScore_.Equals(other.addScore_)) return false;
      if(!offline_.Equals(other.offline_)) return false;
      if(!offlineAddScore_.Equals(other.offlineAddScore_)) return false;
      if(!online_.Equals(other.online_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      hash ^= addScore_.GetHashCode();
      hash ^= offline_.GetHashCode();
      hash ^= offlineAddScore_.GetHashCode();
      hash ^= online_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      addScore_.WriteTo(output, _repeated_addScore_codec);
      offline_.WriteTo(output, _repeated_offline_codec);
      online_.WriteTo(output, _repeated_online_codec);
      offlineAddScore_.WriteTo(output, _repeated_offlineAddScore_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      addScore_.WriteTo(ref output, _repeated_addScore_codec);
      offline_.WriteTo(ref output, _repeated_offline_codec);
      online_.WriteTo(ref output, _repeated_online_codec);
      offlineAddScore_.WriteTo(ref output, _repeated_offlineAddScore_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      size += addScore_.CalculateSize(_repeated_addScore_codec);
      size += offline_.CalculateSize(_repeated_offline_codec);
      size += offlineAddScore_.CalculateSize(_repeated_offlineAddScore_codec);
      size += online_.CalculateSize(_repeated_online_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventRaceRobot other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      addScore_.Add(other.addScore_);
      offline_.Add(other.offline_);
      offlineAddScore_.Add(other.offlineAddScore_);
      online_.Add(other.online_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            addScore_.AddEntriesFrom(input, _repeated_addScore_codec);
            break;
          }
          case 26:
          case 24: {
            offline_.AddEntriesFrom(input, _repeated_offline_codec);
            break;
          }
          case 34:
          case 32: {
            online_.AddEntriesFrom(input, _repeated_online_codec);
            break;
          }
          case 42:
          case 40: {
            offlineAddScore_.AddEntriesFrom(input, _repeated_offlineAddScore_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            addScore_.AddEntriesFrom(ref input, _repeated_addScore_codec);
            break;
          }
          case 26:
          case 24: {
            offline_.AddEntriesFrom(ref input, _repeated_offline_codec);
            break;
          }
          case 34:
          case 32: {
            online_.AddEntriesFrom(ref input, _repeated_online_codec);
            break;
          }
          case 42:
          case 40: {
            offlineAddScore_.AddEntriesFrom(ref input, _repeated_offlineAddScore_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventRaceRobotMapABValue : pb::IMessage<EventRaceRobotMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventRaceRobotMapABValue> _parser = new pb::MessageParser<EventRaceRobotMapABValue>(() => new EventRaceRobotMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventRaceRobotMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventRaceRobotConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventRaceRobotMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventRaceRobotMapABValue(EventRaceRobotMapABValue other) : this() {
      eventRaceRobotMap_ = other.eventRaceRobotMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventRaceRobotMapABValue Clone() {
      return new EventRaceRobotMapABValue(this);
    }

    /// <summary>Field number for the "EventRaceRobotMap" field.</summary>
    public const int EventRaceRobotMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventRaceRobot>.Codec _map_eventRaceRobotMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventRaceRobot>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventRaceRobot.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventRaceRobot> eventRaceRobotMap_ = new pbc::MapField<int, global::fat.rawdata.EventRaceRobot>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventRaceRobot> EventRaceRobotMap {
      get { return eventRaceRobotMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventRaceRobotMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventRaceRobotMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventRaceRobotMap.Equals(other.EventRaceRobotMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventRaceRobotMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventRaceRobotMap_.WriteTo(output, _map_eventRaceRobotMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventRaceRobotMap_.WriteTo(ref output, _map_eventRaceRobotMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventRaceRobotMap_.CalculateSize(_map_eventRaceRobotMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventRaceRobotMapABValue other) {
      if (other == null) {
        return;
      }
      eventRaceRobotMap_.Add(other.eventRaceRobotMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventRaceRobotMap_.AddEntriesFrom(input, _map_eventRaceRobotMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventRaceRobotMap_.AddEntriesFrom(ref input, _map_eventRaceRobotMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventRaceRobotConf : pb::IMessage<EventRaceRobotConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventRaceRobotConf> _parser = new pb::MessageParser<EventRaceRobotConf>(() => new EventRaceRobotConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventRaceRobotConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventRaceRobotConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventRaceRobotConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventRaceRobotConf(EventRaceRobotConf other) : this() {
      eventRaceRobotMap_ = other.eventRaceRobotMap_.Clone();
      eventRaceRobotMapAB_ = other.eventRaceRobotMapAB_.Clone();
      eventRaceRobotMapABPatch_ = other.eventRaceRobotMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventRaceRobotConf Clone() {
      return new EventRaceRobotConf(this);
    }

    /// <summary>Field number for the "EventRaceRobotMap" field.</summary>
    public const int EventRaceRobotMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventRaceRobot>.Codec _map_eventRaceRobotMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventRaceRobot>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventRaceRobot.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventRaceRobot> eventRaceRobotMap_ = new pbc::MapField<int, global::fat.rawdata.EventRaceRobot>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventRaceRobot> EventRaceRobotMap {
      get { return eventRaceRobotMap_; }
    }

    /// <summary>Field number for the "EventRaceRobotMapAB" field.</summary>
    public const int EventRaceRobotMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventRaceRobotMapABValue>.Codec _map_eventRaceRobotMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventRaceRobotMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventRaceRobotMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventRaceRobotMapABValue> eventRaceRobotMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventRaceRobotMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventRaceRobotMapABValue> EventRaceRobotMapAB {
      get { return eventRaceRobotMapAB_; }
    }

    /// <summary>Field number for the "EventRaceRobotMapABPatch" field.</summary>
    public const int EventRaceRobotMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventRaceRobotMapABValue>.Codec _map_eventRaceRobotMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventRaceRobotMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventRaceRobotMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventRaceRobotMapABValue> eventRaceRobotMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventRaceRobotMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventRaceRobotMapABValue> EventRaceRobotMapABPatch {
      get { return eventRaceRobotMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventRaceRobotConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventRaceRobotConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventRaceRobotMap.Equals(other.EventRaceRobotMap)) return false;
      if (!EventRaceRobotMapAB.Equals(other.EventRaceRobotMapAB)) return false;
      if (!EventRaceRobotMapABPatch.Equals(other.EventRaceRobotMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventRaceRobotMap.GetHashCode();
      hash ^= EventRaceRobotMapAB.GetHashCode();
      hash ^= EventRaceRobotMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventRaceRobotMap_.WriteTo(output, _map_eventRaceRobotMap_codec);
      eventRaceRobotMapAB_.WriteTo(output, _map_eventRaceRobotMapAB_codec);
      eventRaceRobotMapABPatch_.WriteTo(output, _map_eventRaceRobotMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventRaceRobotMap_.WriteTo(ref output, _map_eventRaceRobotMap_codec);
      eventRaceRobotMapAB_.WriteTo(ref output, _map_eventRaceRobotMapAB_codec);
      eventRaceRobotMapABPatch_.WriteTo(ref output, _map_eventRaceRobotMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventRaceRobotMap_.CalculateSize(_map_eventRaceRobotMap_codec);
      size += eventRaceRobotMapAB_.CalculateSize(_map_eventRaceRobotMapAB_codec);
      size += eventRaceRobotMapABPatch_.CalculateSize(_map_eventRaceRobotMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventRaceRobotConf other) {
      if (other == null) {
        return;
      }
      eventRaceRobotMap_.Add(other.eventRaceRobotMap_);
      eventRaceRobotMapAB_.Add(other.eventRaceRobotMapAB_);
      eventRaceRobotMapABPatch_.Add(other.eventRaceRobotMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventRaceRobotMap_.AddEntriesFrom(input, _map_eventRaceRobotMap_codec);
            break;
          }
          case 18: {
            eventRaceRobotMapAB_.AddEntriesFrom(input, _map_eventRaceRobotMapAB_codec);
            break;
          }
          case 26: {
            eventRaceRobotMapABPatch_.AddEntriesFrom(input, _map_eventRaceRobotMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventRaceRobotMap_.AddEntriesFrom(ref input, _map_eventRaceRobotMap_codec);
            break;
          }
          case 18: {
            eventRaceRobotMapAB_.AddEntriesFrom(ref input, _map_eventRaceRobotMapAB_codec);
            break;
          }
          case 26: {
            eventRaceRobotMapABPatch_.AddEntriesFrom(ref input, _map_eventRaceRobotMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
