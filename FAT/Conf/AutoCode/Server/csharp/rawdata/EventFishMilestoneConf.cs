// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventFishMilestoneConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventFishMilestoneConf.proto</summary>
  public static partial class EventFishMilestoneConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventFishMilestoneConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventFishMilestoneConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiRyYXdkYXRhL0V2ZW50RmlzaE1pbGVzdG9uZUNvbmYucHJvdG8SB3Jhd2Rh",
            "dGEiygEKEkV2ZW50RmlzaE1pbGVzdG9uZRIKCgJpZBgBIAEoBRIUCgxjaGVz",
            "dE91dHB1dHMYAiADKAkSEwoLb3V0cHV0c0ZvdXIYAyADKAkSEgoKb3V0cHV0",
            "c09uZRgEIAMoCRISCgpvdXRwdXRzVHdvGAUgAygJEhIKCnJhbmRvbUZpc2gY",
            "BiADKAUSDgoGcmV3YXJkGAcgAygJEhIKCnJld2FyZEljb24YCCABKAkSDwoH",
            "c2hvd051bRgJIAEoBRIMCgRzdGFyGAogASgFItoBChxFdmVudEZpc2hNaWxl",
            "c3RvbmVNYXBBQlZhbHVlEl8KFUV2ZW50RmlzaE1pbGVzdG9uZU1hcBgBIAMo",
            "CzJALnJhd2RhdGEuRXZlbnRGaXNoTWlsZXN0b25lTWFwQUJWYWx1ZS5FdmVu",
            "dEZpc2hNaWxlc3RvbmVNYXBFbnRyeRpZChpFdmVudEZpc2hNaWxlc3RvbmVN",
            "YXBFbnRyeRILCgNrZXkYASABKAUSKgoFdmFsdWUYAiABKAsyGy5yYXdkYXRh",
            "LkV2ZW50RmlzaE1pbGVzdG9uZToCOAEi6QQKFkV2ZW50RmlzaE1pbGVzdG9u",
            "ZUNvbmYSWQoVRXZlbnRGaXNoTWlsZXN0b25lTWFwGAEgAygLMjoucmF3ZGF0",
            "YS5FdmVudEZpc2hNaWxlc3RvbmVDb25mLkV2ZW50RmlzaE1pbGVzdG9uZU1h",
            "cEVudHJ5El0KF0V2ZW50RmlzaE1pbGVzdG9uZU1hcEFCGAIgAygLMjwucmF3",
            "ZGF0YS5FdmVudEZpc2hNaWxlc3RvbmVDb25mLkV2ZW50RmlzaE1pbGVzdG9u",
            "ZU1hcEFCRW50cnkSZwocRXZlbnRGaXNoTWlsZXN0b25lTWFwQUJQYXRjaBgD",
            "IAMoCzJBLnJhd2RhdGEuRXZlbnRGaXNoTWlsZXN0b25lQ29uZi5FdmVudEZp",
            "c2hNaWxlc3RvbmVNYXBBQlBhdGNoRW50cnkaWQoaRXZlbnRGaXNoTWlsZXN0",
            "b25lTWFwRW50cnkSCwoDa2V5GAEgASgFEioKBXZhbHVlGAIgASgLMhsucmF3",
            "ZGF0YS5FdmVudEZpc2hNaWxlc3RvbmU6AjgBGmUKHEV2ZW50RmlzaE1pbGVz",
            "dG9uZU1hcEFCRW50cnkSCwoDa2V5GAEgASgJEjQKBXZhbHVlGAIgASgLMiUu",
            "cmF3ZGF0YS5FdmVudEZpc2hNaWxlc3RvbmVNYXBBQlZhbHVlOgI4ARpqCiFF",
            "dmVudEZpc2hNaWxlc3RvbmVNYXBBQlBhdGNoRW50cnkSCwoDa2V5GAEgASgJ",
            "EjQKBXZhbHVlGAIgASgLMiUucmF3ZGF0YS5FdmVudEZpc2hNaWxlc3RvbmVN",
            "YXBBQlZhbHVlOgI4AUI9Wi1naXRsYWIuZnVucGx1cy5pby9mYXQvY29uZi9n",
            "ZW4vZ29sYW5nL3Jhd2RhdGGqAgtmYXQucmF3ZGF0YWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventFishMilestone), global::fat.rawdata.EventFishMilestone.Parser, new[]{ "Id", "ChestOutputs", "OutputsFour", "OutputsOne", "OutputsTwo", "RandomFish", "Reward", "RewardIcon", "ShowNum", "Star" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventFishMilestoneMapABValue), global::fat.rawdata.EventFishMilestoneMapABValue.Parser, new[]{ "EventFishMilestoneMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventFishMilestoneConf), global::fat.rawdata.EventFishMilestoneConf.Parser, new[]{ "EventFishMilestoneMap", "EventFishMilestoneMapAB", "EventFishMilestoneMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventFishMilestone",table="EventFishMilestoneMap",table_wrapper="EventFishMilestoneConf",map="true",map_key_type="int32",data="EventFishMilestoneConf")
  /// annotation@ab(table_ab="EventFishMilestoneMapAB",table_ab_patch="EventFishMilestoneMapABPatch",table_ab_value="EventFishMilestoneMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventFishMilestone(id="id")
  /// </summary>
  public sealed partial class EventFishMilestone : pb::IMessage<EventFishMilestone>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventFishMilestone> _parser = new pb::MessageParser<EventFishMilestone>(() => new EventFishMilestone());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventFishMilestone> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventFishMilestoneConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventFishMilestone() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventFishMilestone(EventFishMilestone other) : this() {
      id_ = other.id_;
      chestOutputs_ = other.chestOutputs_.Clone();
      outputsFour_ = other.outputsFour_.Clone();
      outputsOne_ = other.outputsOne_.Clone();
      outputsTwo_ = other.outputsTwo_.Clone();
      randomFish_ = other.randomFish_.Clone();
      reward_ = other.reward_.Clone();
      rewardIcon_ = other.rewardIcon_;
      showNum_ = other.showNum_;
      star_ = other.star_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventFishMilestone Clone() {
      return new EventFishMilestone(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 里程碑id
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "chestOutputs" field.</summary>
    public const int ChestOutputsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_chestOutputs_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> chestOutputs_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 鱼竿点击1次产出
    /// (不包含鱼）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ChestOutputs {
      get { return chestOutputs_; }
    }

    /// <summary>Field number for the "outputsFour" field.</summary>
    public const int OutputsFourFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_outputsFour_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> outputsFour_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 耗体4点产出棋子
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> OutputsFour {
      get { return outputsFour_; }
    }

    /// <summary>Field number for the "outputsOne" field.</summary>
    public const int OutputsOneFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_outputsOne_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> outputsOne_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 耗体1点产出棋子
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> OutputsOne {
      get { return outputsOne_; }
    }

    /// <summary>Field number for the "outputsTwo" field.</summary>
    public const int OutputsTwoFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_outputsTwo_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> outputsTwo_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 耗体2点产出棋子
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> OutputsTwo {
      get { return outputsTwo_; }
    }

    /// <summary>Field number for the "randomFish" field.</summary>
    public const int RandomFishFieldNumber = 6;
    private static readonly pb::FieldCodec<int> _repeated_randomFish_codec
        = pb::FieldCodec.ForInt32(50);
    private readonly pbc::RepeatedField<int> randomFish_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// (FishInfo.id)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> RandomFish {
      get { return randomFish_; }
    }

    /// <summary>Field number for the "reward" field.</summary>
    public const int RewardFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _repeated_reward_codec
        = pb::FieldCodec.ForString(58);
    private readonly pbc::RepeatedField<string> reward_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 里程碑奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Reward {
      get { return reward_; }
    }

    /// <summary>Field number for the "rewardIcon" field.</summary>
    public const int RewardIconFieldNumber = 8;
    private string rewardIcon_ = "";
    /// <summary>
    /// 宝箱icon
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RewardIcon {
      get { return rewardIcon_; }
      set {
        rewardIcon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "showNum" field.</summary>
    public const int ShowNumFieldNumber = 9;
    private int showNum_;
    /// <summary>
    /// 档位Num
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ShowNum {
      get { return showNum_; }
      set {
        showNum_ = value;
      }
    }

    /// <summary>Field number for the "star" field.</summary>
    public const int StarFieldNumber = 10;
    private int star_;
    /// <summary>
    /// 需求星星数量
    /// 累计
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Star {
      get { return star_; }
      set {
        star_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventFishMilestone);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventFishMilestone other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!chestOutputs_.Equals(other.chestOutputs_)) return false;
      if(!outputsFour_.Equals(other.outputsFour_)) return false;
      if(!outputsOne_.Equals(other.outputsOne_)) return false;
      if(!outputsTwo_.Equals(other.outputsTwo_)) return false;
      if(!randomFish_.Equals(other.randomFish_)) return false;
      if(!reward_.Equals(other.reward_)) return false;
      if (RewardIcon != other.RewardIcon) return false;
      if (ShowNum != other.ShowNum) return false;
      if (Star != other.Star) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      hash ^= chestOutputs_.GetHashCode();
      hash ^= outputsFour_.GetHashCode();
      hash ^= outputsOne_.GetHashCode();
      hash ^= outputsTwo_.GetHashCode();
      hash ^= randomFish_.GetHashCode();
      hash ^= reward_.GetHashCode();
      if (RewardIcon.Length != 0) hash ^= RewardIcon.GetHashCode();
      if (ShowNum != 0) hash ^= ShowNum.GetHashCode();
      if (Star != 0) hash ^= Star.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      chestOutputs_.WriteTo(output, _repeated_chestOutputs_codec);
      outputsFour_.WriteTo(output, _repeated_outputsFour_codec);
      outputsOne_.WriteTo(output, _repeated_outputsOne_codec);
      outputsTwo_.WriteTo(output, _repeated_outputsTwo_codec);
      randomFish_.WriteTo(output, _repeated_randomFish_codec);
      reward_.WriteTo(output, _repeated_reward_codec);
      if (RewardIcon.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(RewardIcon);
      }
      if (ShowNum != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(ShowNum);
      }
      if (Star != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Star);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      chestOutputs_.WriteTo(ref output, _repeated_chestOutputs_codec);
      outputsFour_.WriteTo(ref output, _repeated_outputsFour_codec);
      outputsOne_.WriteTo(ref output, _repeated_outputsOne_codec);
      outputsTwo_.WriteTo(ref output, _repeated_outputsTwo_codec);
      randomFish_.WriteTo(ref output, _repeated_randomFish_codec);
      reward_.WriteTo(ref output, _repeated_reward_codec);
      if (RewardIcon.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(RewardIcon);
      }
      if (ShowNum != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(ShowNum);
      }
      if (Star != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Star);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      size += chestOutputs_.CalculateSize(_repeated_chestOutputs_codec);
      size += outputsFour_.CalculateSize(_repeated_outputsFour_codec);
      size += outputsOne_.CalculateSize(_repeated_outputsOne_codec);
      size += outputsTwo_.CalculateSize(_repeated_outputsTwo_codec);
      size += randomFish_.CalculateSize(_repeated_randomFish_codec);
      size += reward_.CalculateSize(_repeated_reward_codec);
      if (RewardIcon.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RewardIcon);
      }
      if (ShowNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ShowNum);
      }
      if (Star != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Star);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventFishMilestone other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      chestOutputs_.Add(other.chestOutputs_);
      outputsFour_.Add(other.outputsFour_);
      outputsOne_.Add(other.outputsOne_);
      outputsTwo_.Add(other.outputsTwo_);
      randomFish_.Add(other.randomFish_);
      reward_.Add(other.reward_);
      if (other.RewardIcon.Length != 0) {
        RewardIcon = other.RewardIcon;
      }
      if (other.ShowNum != 0) {
        ShowNum = other.ShowNum;
      }
      if (other.Star != 0) {
        Star = other.Star;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            chestOutputs_.AddEntriesFrom(input, _repeated_chestOutputs_codec);
            break;
          }
          case 26: {
            outputsFour_.AddEntriesFrom(input, _repeated_outputsFour_codec);
            break;
          }
          case 34: {
            outputsOne_.AddEntriesFrom(input, _repeated_outputsOne_codec);
            break;
          }
          case 42: {
            outputsTwo_.AddEntriesFrom(input, _repeated_outputsTwo_codec);
            break;
          }
          case 50:
          case 48: {
            randomFish_.AddEntriesFrom(input, _repeated_randomFish_codec);
            break;
          }
          case 58: {
            reward_.AddEntriesFrom(input, _repeated_reward_codec);
            break;
          }
          case 66: {
            RewardIcon = input.ReadString();
            break;
          }
          case 72: {
            ShowNum = input.ReadInt32();
            break;
          }
          case 80: {
            Star = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            chestOutputs_.AddEntriesFrom(ref input, _repeated_chestOutputs_codec);
            break;
          }
          case 26: {
            outputsFour_.AddEntriesFrom(ref input, _repeated_outputsFour_codec);
            break;
          }
          case 34: {
            outputsOne_.AddEntriesFrom(ref input, _repeated_outputsOne_codec);
            break;
          }
          case 42: {
            outputsTwo_.AddEntriesFrom(ref input, _repeated_outputsTwo_codec);
            break;
          }
          case 50:
          case 48: {
            randomFish_.AddEntriesFrom(ref input, _repeated_randomFish_codec);
            break;
          }
          case 58: {
            reward_.AddEntriesFrom(ref input, _repeated_reward_codec);
            break;
          }
          case 66: {
            RewardIcon = input.ReadString();
            break;
          }
          case 72: {
            ShowNum = input.ReadInt32();
            break;
          }
          case 80: {
            Star = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventFishMilestoneMapABValue : pb::IMessage<EventFishMilestoneMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventFishMilestoneMapABValue> _parser = new pb::MessageParser<EventFishMilestoneMapABValue>(() => new EventFishMilestoneMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventFishMilestoneMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventFishMilestoneConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventFishMilestoneMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventFishMilestoneMapABValue(EventFishMilestoneMapABValue other) : this() {
      eventFishMilestoneMap_ = other.eventFishMilestoneMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventFishMilestoneMapABValue Clone() {
      return new EventFishMilestoneMapABValue(this);
    }

    /// <summary>Field number for the "EventFishMilestoneMap" field.</summary>
    public const int EventFishMilestoneMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventFishMilestone>.Codec _map_eventFishMilestoneMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventFishMilestone>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventFishMilestone.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventFishMilestone> eventFishMilestoneMap_ = new pbc::MapField<int, global::fat.rawdata.EventFishMilestone>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventFishMilestone> EventFishMilestoneMap {
      get { return eventFishMilestoneMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventFishMilestoneMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventFishMilestoneMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventFishMilestoneMap.Equals(other.EventFishMilestoneMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventFishMilestoneMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventFishMilestoneMap_.WriteTo(output, _map_eventFishMilestoneMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventFishMilestoneMap_.WriteTo(ref output, _map_eventFishMilestoneMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventFishMilestoneMap_.CalculateSize(_map_eventFishMilestoneMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventFishMilestoneMapABValue other) {
      if (other == null) {
        return;
      }
      eventFishMilestoneMap_.Add(other.eventFishMilestoneMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventFishMilestoneMap_.AddEntriesFrom(input, _map_eventFishMilestoneMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventFishMilestoneMap_.AddEntriesFrom(ref input, _map_eventFishMilestoneMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventFishMilestoneConf : pb::IMessage<EventFishMilestoneConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventFishMilestoneConf> _parser = new pb::MessageParser<EventFishMilestoneConf>(() => new EventFishMilestoneConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventFishMilestoneConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventFishMilestoneConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventFishMilestoneConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventFishMilestoneConf(EventFishMilestoneConf other) : this() {
      eventFishMilestoneMap_ = other.eventFishMilestoneMap_.Clone();
      eventFishMilestoneMapAB_ = other.eventFishMilestoneMapAB_.Clone();
      eventFishMilestoneMapABPatch_ = other.eventFishMilestoneMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventFishMilestoneConf Clone() {
      return new EventFishMilestoneConf(this);
    }

    /// <summary>Field number for the "EventFishMilestoneMap" field.</summary>
    public const int EventFishMilestoneMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventFishMilestone>.Codec _map_eventFishMilestoneMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventFishMilestone>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventFishMilestone.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventFishMilestone> eventFishMilestoneMap_ = new pbc::MapField<int, global::fat.rawdata.EventFishMilestone>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventFishMilestone> EventFishMilestoneMap {
      get { return eventFishMilestoneMap_; }
    }

    /// <summary>Field number for the "EventFishMilestoneMapAB" field.</summary>
    public const int EventFishMilestoneMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventFishMilestoneMapABValue>.Codec _map_eventFishMilestoneMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventFishMilestoneMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventFishMilestoneMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventFishMilestoneMapABValue> eventFishMilestoneMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventFishMilestoneMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventFishMilestoneMapABValue> EventFishMilestoneMapAB {
      get { return eventFishMilestoneMapAB_; }
    }

    /// <summary>Field number for the "EventFishMilestoneMapABPatch" field.</summary>
    public const int EventFishMilestoneMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventFishMilestoneMapABValue>.Codec _map_eventFishMilestoneMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventFishMilestoneMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventFishMilestoneMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventFishMilestoneMapABValue> eventFishMilestoneMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventFishMilestoneMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventFishMilestoneMapABValue> EventFishMilestoneMapABPatch {
      get { return eventFishMilestoneMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventFishMilestoneConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventFishMilestoneConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventFishMilestoneMap.Equals(other.EventFishMilestoneMap)) return false;
      if (!EventFishMilestoneMapAB.Equals(other.EventFishMilestoneMapAB)) return false;
      if (!EventFishMilestoneMapABPatch.Equals(other.EventFishMilestoneMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventFishMilestoneMap.GetHashCode();
      hash ^= EventFishMilestoneMapAB.GetHashCode();
      hash ^= EventFishMilestoneMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventFishMilestoneMap_.WriteTo(output, _map_eventFishMilestoneMap_codec);
      eventFishMilestoneMapAB_.WriteTo(output, _map_eventFishMilestoneMapAB_codec);
      eventFishMilestoneMapABPatch_.WriteTo(output, _map_eventFishMilestoneMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventFishMilestoneMap_.WriteTo(ref output, _map_eventFishMilestoneMap_codec);
      eventFishMilestoneMapAB_.WriteTo(ref output, _map_eventFishMilestoneMapAB_codec);
      eventFishMilestoneMapABPatch_.WriteTo(ref output, _map_eventFishMilestoneMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventFishMilestoneMap_.CalculateSize(_map_eventFishMilestoneMap_codec);
      size += eventFishMilestoneMapAB_.CalculateSize(_map_eventFishMilestoneMapAB_codec);
      size += eventFishMilestoneMapABPatch_.CalculateSize(_map_eventFishMilestoneMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventFishMilestoneConf other) {
      if (other == null) {
        return;
      }
      eventFishMilestoneMap_.Add(other.eventFishMilestoneMap_);
      eventFishMilestoneMapAB_.Add(other.eventFishMilestoneMapAB_);
      eventFishMilestoneMapABPatch_.Add(other.eventFishMilestoneMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventFishMilestoneMap_.AddEntriesFrom(input, _map_eventFishMilestoneMap_codec);
            break;
          }
          case 18: {
            eventFishMilestoneMapAB_.AddEntriesFrom(input, _map_eventFishMilestoneMapAB_codec);
            break;
          }
          case 26: {
            eventFishMilestoneMapABPatch_.AddEntriesFrom(input, _map_eventFishMilestoneMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventFishMilestoneMap_.AddEntriesFrom(ref input, _map_eventFishMilestoneMap_codec);
            break;
          }
          case 18: {
            eventFishMilestoneMapAB_.AddEntriesFrom(ref input, _map_eventFishMilestoneMapAB_codec);
            break;
          }
          case 26: {
            eventFishMilestoneMapABPatch_.AddEntriesFrom(ref input, _map_eventFishMilestoneMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
