// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventFarmBoardGroupConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventFarmBoardGroupConf.proto</summary>
  public static partial class EventFarmBoardGroupConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventFarmBoardGroupConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventFarmBoardGroupConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiVyYXdkYXRhL0V2ZW50RmFybUJvYXJkR3JvdXBDb25mLnByb3RvEgdyYXdk",
            "YXRhIqACChNFdmVudEZhcm1Cb2FyZEdyb3VwEgoKAmlkGAEgASgFEg4KBmFy",
            "ZWFJZBgCIAMoBRIPCgdib2FyZElkGAMgASgFEgwKBGRpZmYYBCABKAUSDQoF",
            "ZWF0SWQYCiABKAUSQAoKZXhwaXJlSXRlbRgFIAMoCzIsLnJhd2RhdGEuRXZl",
            "bnRGYXJtQm9hcmRHcm91cC5FeHBpcmVJdGVtRW50cnkSEgoKZXh0cmFTY29y",
            "ZRgGIAEoBRIPCgdsZXZlbElkGAcgAygFEhMKC21pbGVzdG9uZUlkGAggAygF",
            "EhAKCHRva2VuTnVtGAkgASgFGjEKD0V4cGlyZUl0ZW1FbnRyeRILCgNrZXkY",
            "ASABKAUSDQoFdmFsdWUYAiABKAk6AjgBIuABCh1FdmVudEZhcm1Cb2FyZEdy",
            "b3VwTWFwQUJWYWx1ZRJiChZFdmVudEZhcm1Cb2FyZEdyb3VwTWFwGAEgAygL",
            "MkIucmF3ZGF0YS5FdmVudEZhcm1Cb2FyZEdyb3VwTWFwQUJWYWx1ZS5FdmVu",
            "dEZhcm1Cb2FyZEdyb3VwTWFwRW50cnkaWwobRXZlbnRGYXJtQm9hcmRHcm91",
            "cE1hcEVudHJ5EgsKA2tleRgBIAEoBRIrCgV2YWx1ZRgCIAEoCzIcLnJhd2Rh",
            "dGEuRXZlbnRGYXJtQm9hcmRHcm91cDoCOAEi+QQKF0V2ZW50RmFybUJvYXJk",
            "R3JvdXBDb25mElwKFkV2ZW50RmFybUJvYXJkR3JvdXBNYXAYASADKAsyPC5y",
            "YXdkYXRhLkV2ZW50RmFybUJvYXJkR3JvdXBDb25mLkV2ZW50RmFybUJvYXJk",
            "R3JvdXBNYXBFbnRyeRJgChhFdmVudEZhcm1Cb2FyZEdyb3VwTWFwQUIYAiAD",
            "KAsyPi5yYXdkYXRhLkV2ZW50RmFybUJvYXJkR3JvdXBDb25mLkV2ZW50RmFy",
            "bUJvYXJkR3JvdXBNYXBBQkVudHJ5EmoKHUV2ZW50RmFybUJvYXJkR3JvdXBN",
            "YXBBQlBhdGNoGAMgAygLMkMucmF3ZGF0YS5FdmVudEZhcm1Cb2FyZEdyb3Vw",
            "Q29uZi5FdmVudEZhcm1Cb2FyZEdyb3VwTWFwQUJQYXRjaEVudHJ5GlsKG0V2",
            "ZW50RmFybUJvYXJkR3JvdXBNYXBFbnRyeRILCgNrZXkYASABKAUSKwoFdmFs",
            "dWUYAiABKAsyHC5yYXdkYXRhLkV2ZW50RmFybUJvYXJkR3JvdXA6AjgBGmcK",
            "HUV2ZW50RmFybUJvYXJkR3JvdXBNYXBBQkVudHJ5EgsKA2tleRgBIAEoCRI1",
            "CgV2YWx1ZRgCIAEoCzImLnJhd2RhdGEuRXZlbnRGYXJtQm9hcmRHcm91cE1h",
            "cEFCVmFsdWU6AjgBGmwKIkV2ZW50RmFybUJvYXJkR3JvdXBNYXBBQlBhdGNo",
            "RW50cnkSCwoDa2V5GAEgASgJEjUKBXZhbHVlGAIgASgLMiYucmF3ZGF0YS5F",
            "dmVudEZhcm1Cb2FyZEdyb3VwTWFwQUJWYWx1ZToCOAFCPVotZ2l0bGFiLmZ1",
            "bnBsdXMuaW8vZmF0L2NvbmYvZ2VuL2dvbGFuZy9yYXdkYXRhqgILZmF0LnJh",
            "d2RhdGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventFarmBoardGroup), global::fat.rawdata.EventFarmBoardGroup.Parser, new[]{ "Id", "AreaId", "BoardId", "Diff", "EatId", "ExpireItem", "ExtraScore", "LevelId", "MilestoneId", "TokenNum" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventFarmBoardGroupMapABValue), global::fat.rawdata.EventFarmBoardGroupMapABValue.Parser, new[]{ "EventFarmBoardGroupMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventFarmBoardGroupConf), global::fat.rawdata.EventFarmBoardGroupConf.Parser, new[]{ "EventFarmBoardGroupMap", "EventFarmBoardGroupMapAB", "EventFarmBoardGroupMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventFarmBoardGroup",table="EventFarmBoardGroupMap",table_wrapper="EventFarmBoardGroupConf",map="true",map_key_type="int32",data="EventFarmBoardGroupConf")
  /// annotation@ab(table_ab="EventFarmBoardGroupMapAB",table_ab_patch="EventFarmBoardGroupMapABPatch",table_ab_value="EventFarmBoardGroupMapABValue",ab_patch="true")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventFarmBoardGroup(id="id")
  /// </summary>
  public sealed partial class EventFarmBoardGroup : pb::IMessage<EventFarmBoardGroup>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventFarmBoardGroup> _parser = new pb::MessageParser<EventFarmBoardGroup>(() => new EventFarmBoardGroup());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventFarmBoardGroup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventFarmBoardGroupConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventFarmBoardGroup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventFarmBoardGroup(EventFarmBoardGroup other) : this() {
      id_ = other.id_;
      areaId_ = other.areaId_.Clone();
      boardId_ = other.boardId_;
      diff_ = other.diff_;
      eatId_ = other.eatId_;
      expireItem_ = other.expireItem_.Clone();
      extraScore_ = other.extraScore_;
      levelId_ = other.levelId_.Clone();
      milestoneId_ = other.milestoneId_.Clone();
      tokenNum_ = other.tokenNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventFarmBoardGroup Clone() {
      return new EventFarmBoardGroup(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 分层前 id
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "areaId" field.</summary>
    public const int AreaIdFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_areaId_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> areaId_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 棋子获取区域信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> AreaId {
      get { return areaId_; }
    }

    /// <summary>Field number for the "boardId" field.</summary>
    public const int BoardIdFieldNumber = 3;
    private int boardId_;
    /// <summary>
    /// boardId
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BoardId {
      get { return boardId_; }
      set {
        boardId_ = value;
      }
    }

    /// <summary>Field number for the "diff" field.</summary>
    public const int DiffFieldNumber = 4;
    private int diff_;
    /// <summary>
    /// 难度
    /// （仅TGA使用）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Diff {
      get { return diff_; }
      set {
        diff_ = value;
      }
    }

    /// <summary>Field number for the "eatId" field.</summary>
    public const int EatIdFieldNumber = 10;
    private int eatId_;
    /// <summary>
    /// 被吃棋子信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EatId {
      get { return eatId_; }
      set {
        eatId_ = value;
      }
    }

    /// <summary>Field number for the "expireItem" field.</summary>
    public const int ExpireItemFieldNumber = 5;
    private static readonly pbc::MapField<int, string>.Codec _map_expireItem_codec
        = new pbc::MapField<int, string>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForString(18, ""), 42);
    private readonly pbc::MapField<int, string> expireItem_ = new pbc::MapField<int, string>();
    /// <summary>
    /// 活动结束时
    /// 通过弹板的方式一次性删除棋子
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, string> ExpireItem {
      get { return expireItem_; }
    }

    /// <summary>Field number for the "extraScore" field.</summary>
    public const int ExtraScoreFieldNumber = 6;
    private int extraScore_;
    /// <summary>
    /// 积分模版
    /// （EventExtraScore.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ExtraScore {
      get { return extraScore_; }
      set {
        extraScore_ = value;
      }
    }

    /// <summary>Field number for the "levelId" field.</summary>
    public const int LevelIdFieldNumber = 7;
    private static readonly pb::FieldCodec<int> _repeated_levelId_codec
        = pb::FieldCodec.ForInt32(58);
    private readonly pbc::RepeatedField<int> levelId_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 对应阶段掉落信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> LevelId {
      get { return levelId_; }
    }

    /// <summary>Field number for the "milestoneId" field.</summary>
    public const int MilestoneIdFieldNumber = 8;
    private static readonly pb::FieldCodec<int> _repeated_milestoneId_codec
        = pb::FieldCodec.ForInt32(66);
    private readonly pbc::RepeatedField<int> milestoneId_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 里程碑
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> MilestoneId {
      get { return milestoneId_; }
    }

    /// <summary>Field number for the "tokenNum" field.</summary>
    public const int TokenNumFieldNumber = 9;
    private int tokenNum_;
    /// <summary>
    /// 初始代币数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TokenNum {
      get { return tokenNum_; }
      set {
        tokenNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventFarmBoardGroup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventFarmBoardGroup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!areaId_.Equals(other.areaId_)) return false;
      if (BoardId != other.BoardId) return false;
      if (Diff != other.Diff) return false;
      if (EatId != other.EatId) return false;
      if (!ExpireItem.Equals(other.ExpireItem)) return false;
      if (ExtraScore != other.ExtraScore) return false;
      if(!levelId_.Equals(other.levelId_)) return false;
      if(!milestoneId_.Equals(other.milestoneId_)) return false;
      if (TokenNum != other.TokenNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      hash ^= areaId_.GetHashCode();
      if (BoardId != 0) hash ^= BoardId.GetHashCode();
      if (Diff != 0) hash ^= Diff.GetHashCode();
      if (EatId != 0) hash ^= EatId.GetHashCode();
      hash ^= ExpireItem.GetHashCode();
      if (ExtraScore != 0) hash ^= ExtraScore.GetHashCode();
      hash ^= levelId_.GetHashCode();
      hash ^= milestoneId_.GetHashCode();
      if (TokenNum != 0) hash ^= TokenNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      areaId_.WriteTo(output, _repeated_areaId_codec);
      if (BoardId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(BoardId);
      }
      if (Diff != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Diff);
      }
      expireItem_.WriteTo(output, _map_expireItem_codec);
      if (ExtraScore != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(ExtraScore);
      }
      levelId_.WriteTo(output, _repeated_levelId_codec);
      milestoneId_.WriteTo(output, _repeated_milestoneId_codec);
      if (TokenNum != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(TokenNum);
      }
      if (EatId != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(EatId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      areaId_.WriteTo(ref output, _repeated_areaId_codec);
      if (BoardId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(BoardId);
      }
      if (Diff != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Diff);
      }
      expireItem_.WriteTo(ref output, _map_expireItem_codec);
      if (ExtraScore != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(ExtraScore);
      }
      levelId_.WriteTo(ref output, _repeated_levelId_codec);
      milestoneId_.WriteTo(ref output, _repeated_milestoneId_codec);
      if (TokenNum != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(TokenNum);
      }
      if (EatId != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(EatId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      size += areaId_.CalculateSize(_repeated_areaId_codec);
      if (BoardId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BoardId);
      }
      if (Diff != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Diff);
      }
      if (EatId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EatId);
      }
      size += expireItem_.CalculateSize(_map_expireItem_codec);
      if (ExtraScore != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ExtraScore);
      }
      size += levelId_.CalculateSize(_repeated_levelId_codec);
      size += milestoneId_.CalculateSize(_repeated_milestoneId_codec);
      if (TokenNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TokenNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventFarmBoardGroup other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      areaId_.Add(other.areaId_);
      if (other.BoardId != 0) {
        BoardId = other.BoardId;
      }
      if (other.Diff != 0) {
        Diff = other.Diff;
      }
      if (other.EatId != 0) {
        EatId = other.EatId;
      }
      expireItem_.Add(other.expireItem_);
      if (other.ExtraScore != 0) {
        ExtraScore = other.ExtraScore;
      }
      levelId_.Add(other.levelId_);
      milestoneId_.Add(other.milestoneId_);
      if (other.TokenNum != 0) {
        TokenNum = other.TokenNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            areaId_.AddEntriesFrom(input, _repeated_areaId_codec);
            break;
          }
          case 24: {
            BoardId = input.ReadInt32();
            break;
          }
          case 32: {
            Diff = input.ReadInt32();
            break;
          }
          case 42: {
            expireItem_.AddEntriesFrom(input, _map_expireItem_codec);
            break;
          }
          case 48: {
            ExtraScore = input.ReadInt32();
            break;
          }
          case 58:
          case 56: {
            levelId_.AddEntriesFrom(input, _repeated_levelId_codec);
            break;
          }
          case 66:
          case 64: {
            milestoneId_.AddEntriesFrom(input, _repeated_milestoneId_codec);
            break;
          }
          case 72: {
            TokenNum = input.ReadInt32();
            break;
          }
          case 80: {
            EatId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            areaId_.AddEntriesFrom(ref input, _repeated_areaId_codec);
            break;
          }
          case 24: {
            BoardId = input.ReadInt32();
            break;
          }
          case 32: {
            Diff = input.ReadInt32();
            break;
          }
          case 42: {
            expireItem_.AddEntriesFrom(ref input, _map_expireItem_codec);
            break;
          }
          case 48: {
            ExtraScore = input.ReadInt32();
            break;
          }
          case 58:
          case 56: {
            levelId_.AddEntriesFrom(ref input, _repeated_levelId_codec);
            break;
          }
          case 66:
          case 64: {
            milestoneId_.AddEntriesFrom(ref input, _repeated_milestoneId_codec);
            break;
          }
          case 72: {
            TokenNum = input.ReadInt32();
            break;
          }
          case 80: {
            EatId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventFarmBoardGroupMapABValue : pb::IMessage<EventFarmBoardGroupMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventFarmBoardGroupMapABValue> _parser = new pb::MessageParser<EventFarmBoardGroupMapABValue>(() => new EventFarmBoardGroupMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventFarmBoardGroupMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventFarmBoardGroupConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventFarmBoardGroupMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventFarmBoardGroupMapABValue(EventFarmBoardGroupMapABValue other) : this() {
      eventFarmBoardGroupMap_ = other.eventFarmBoardGroupMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventFarmBoardGroupMapABValue Clone() {
      return new EventFarmBoardGroupMapABValue(this);
    }

    /// <summary>Field number for the "EventFarmBoardGroupMap" field.</summary>
    public const int EventFarmBoardGroupMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventFarmBoardGroup>.Codec _map_eventFarmBoardGroupMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventFarmBoardGroup>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventFarmBoardGroup.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventFarmBoardGroup> eventFarmBoardGroupMap_ = new pbc::MapField<int, global::fat.rawdata.EventFarmBoardGroup>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventFarmBoardGroup> EventFarmBoardGroupMap {
      get { return eventFarmBoardGroupMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventFarmBoardGroupMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventFarmBoardGroupMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventFarmBoardGroupMap.Equals(other.EventFarmBoardGroupMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventFarmBoardGroupMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventFarmBoardGroupMap_.WriteTo(output, _map_eventFarmBoardGroupMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventFarmBoardGroupMap_.WriteTo(ref output, _map_eventFarmBoardGroupMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventFarmBoardGroupMap_.CalculateSize(_map_eventFarmBoardGroupMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventFarmBoardGroupMapABValue other) {
      if (other == null) {
        return;
      }
      eventFarmBoardGroupMap_.Add(other.eventFarmBoardGroupMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventFarmBoardGroupMap_.AddEntriesFrom(input, _map_eventFarmBoardGroupMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventFarmBoardGroupMap_.AddEntriesFrom(ref input, _map_eventFarmBoardGroupMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventFarmBoardGroupConf : pb::IMessage<EventFarmBoardGroupConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventFarmBoardGroupConf> _parser = new pb::MessageParser<EventFarmBoardGroupConf>(() => new EventFarmBoardGroupConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventFarmBoardGroupConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventFarmBoardGroupConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventFarmBoardGroupConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventFarmBoardGroupConf(EventFarmBoardGroupConf other) : this() {
      eventFarmBoardGroupMap_ = other.eventFarmBoardGroupMap_.Clone();
      eventFarmBoardGroupMapAB_ = other.eventFarmBoardGroupMapAB_.Clone();
      eventFarmBoardGroupMapABPatch_ = other.eventFarmBoardGroupMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventFarmBoardGroupConf Clone() {
      return new EventFarmBoardGroupConf(this);
    }

    /// <summary>Field number for the "EventFarmBoardGroupMap" field.</summary>
    public const int EventFarmBoardGroupMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventFarmBoardGroup>.Codec _map_eventFarmBoardGroupMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventFarmBoardGroup>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventFarmBoardGroup.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventFarmBoardGroup> eventFarmBoardGroupMap_ = new pbc::MapField<int, global::fat.rawdata.EventFarmBoardGroup>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventFarmBoardGroup> EventFarmBoardGroupMap {
      get { return eventFarmBoardGroupMap_; }
    }

    /// <summary>Field number for the "EventFarmBoardGroupMapAB" field.</summary>
    public const int EventFarmBoardGroupMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventFarmBoardGroupMapABValue>.Codec _map_eventFarmBoardGroupMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventFarmBoardGroupMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventFarmBoardGroupMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventFarmBoardGroupMapABValue> eventFarmBoardGroupMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventFarmBoardGroupMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventFarmBoardGroupMapABValue> EventFarmBoardGroupMapAB {
      get { return eventFarmBoardGroupMapAB_; }
    }

    /// <summary>Field number for the "EventFarmBoardGroupMapABPatch" field.</summary>
    public const int EventFarmBoardGroupMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventFarmBoardGroupMapABValue>.Codec _map_eventFarmBoardGroupMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventFarmBoardGroupMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventFarmBoardGroupMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventFarmBoardGroupMapABValue> eventFarmBoardGroupMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventFarmBoardGroupMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventFarmBoardGroupMapABValue> EventFarmBoardGroupMapABPatch {
      get { return eventFarmBoardGroupMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventFarmBoardGroupConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventFarmBoardGroupConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventFarmBoardGroupMap.Equals(other.EventFarmBoardGroupMap)) return false;
      if (!EventFarmBoardGroupMapAB.Equals(other.EventFarmBoardGroupMapAB)) return false;
      if (!EventFarmBoardGroupMapABPatch.Equals(other.EventFarmBoardGroupMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventFarmBoardGroupMap.GetHashCode();
      hash ^= EventFarmBoardGroupMapAB.GetHashCode();
      hash ^= EventFarmBoardGroupMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventFarmBoardGroupMap_.WriteTo(output, _map_eventFarmBoardGroupMap_codec);
      eventFarmBoardGroupMapAB_.WriteTo(output, _map_eventFarmBoardGroupMapAB_codec);
      eventFarmBoardGroupMapABPatch_.WriteTo(output, _map_eventFarmBoardGroupMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventFarmBoardGroupMap_.WriteTo(ref output, _map_eventFarmBoardGroupMap_codec);
      eventFarmBoardGroupMapAB_.WriteTo(ref output, _map_eventFarmBoardGroupMapAB_codec);
      eventFarmBoardGroupMapABPatch_.WriteTo(ref output, _map_eventFarmBoardGroupMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventFarmBoardGroupMap_.CalculateSize(_map_eventFarmBoardGroupMap_codec);
      size += eventFarmBoardGroupMapAB_.CalculateSize(_map_eventFarmBoardGroupMapAB_codec);
      size += eventFarmBoardGroupMapABPatch_.CalculateSize(_map_eventFarmBoardGroupMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventFarmBoardGroupConf other) {
      if (other == null) {
        return;
      }
      eventFarmBoardGroupMap_.Add(other.eventFarmBoardGroupMap_);
      eventFarmBoardGroupMapAB_.Add(other.eventFarmBoardGroupMapAB_);
      eventFarmBoardGroupMapABPatch_.Add(other.eventFarmBoardGroupMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventFarmBoardGroupMap_.AddEntriesFrom(input, _map_eventFarmBoardGroupMap_codec);
            break;
          }
          case 18: {
            eventFarmBoardGroupMapAB_.AddEntriesFrom(input, _map_eventFarmBoardGroupMapAB_codec);
            break;
          }
          case 26: {
            eventFarmBoardGroupMapABPatch_.AddEntriesFrom(input, _map_eventFarmBoardGroupMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventFarmBoardGroupMap_.AddEntriesFrom(ref input, _map_eventFarmBoardGroupMap_codec);
            break;
          }
          case 18: {
            eventFarmBoardGroupMapAB_.AddEntriesFrom(ref input, _map_eventFarmBoardGroupMapAB_codec);
            break;
          }
          case 26: {
            eventFarmBoardGroupMapABPatch_.AddEntriesFrom(ref input, _map_eventFarmBoardGroupMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
