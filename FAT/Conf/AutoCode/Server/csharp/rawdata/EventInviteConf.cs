// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventInviteConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventInviteConf.proto</summary>
  public static partial class EventInviteConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventInviteConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventInviteConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch1yYXdkYXRhL0V2ZW50SW52aXRlQ29uZi5wcm90bxIHcmF3ZGF0YSJpCgtF",
            "dmVudEludml0ZRIKCgJpZBgBIAEoBRISCgpldmVudFRoZW1lGAIgASgFEg0K",
            "BWxldmVsGAMgASgFEg4KBmxpZU51bRgEIAEoBRILCgNudW0YBSADKAUSDgoG",
            "cmV3YXJkGAYgAygJIrABChVFdmVudEludml0ZU1hcEFCVmFsdWUSSgoORXZl",
            "bnRJbnZpdGVNYXAYASADKAsyMi5yYXdkYXRhLkV2ZW50SW52aXRlTWFwQUJW",
            "YWx1ZS5FdmVudEludml0ZU1hcEVudHJ5GksKE0V2ZW50SW52aXRlTWFwRW50",
            "cnkSCwoDa2V5GAEgASgFEiMKBXZhbHVlGAIgASgLMhQucmF3ZGF0YS5FdmVu",
            "dEludml0ZToCOAEi+QMKD0V2ZW50SW52aXRlQ29uZhJECg5FdmVudEludml0",
            "ZU1hcBgBIAMoCzIsLnJhd2RhdGEuRXZlbnRJbnZpdGVDb25mLkV2ZW50SW52",
            "aXRlTWFwRW50cnkSSAoQRXZlbnRJbnZpdGVNYXBBQhgCIAMoCzIuLnJhd2Rh",
            "dGEuRXZlbnRJbnZpdGVDb25mLkV2ZW50SW52aXRlTWFwQUJFbnRyeRJSChVF",
            "dmVudEludml0ZU1hcEFCUGF0Y2gYAyADKAsyMy5yYXdkYXRhLkV2ZW50SW52",
            "aXRlQ29uZi5FdmVudEludml0ZU1hcEFCUGF0Y2hFbnRyeRpLChNFdmVudElu",
            "dml0ZU1hcEVudHJ5EgsKA2tleRgBIAEoBRIjCgV2YWx1ZRgCIAEoCzIULnJh",
            "d2RhdGEuRXZlbnRJbnZpdGU6AjgBGlcKFUV2ZW50SW52aXRlTWFwQUJFbnRy",
            "eRILCgNrZXkYASABKAkSLQoFdmFsdWUYAiABKAsyHi5yYXdkYXRhLkV2ZW50",
            "SW52aXRlTWFwQUJWYWx1ZToCOAEaXAoaRXZlbnRJbnZpdGVNYXBBQlBhdGNo",
            "RW50cnkSCwoDa2V5GAEgASgJEi0KBXZhbHVlGAIgASgLMh4ucmF3ZGF0YS5F",
            "dmVudEludml0ZU1hcEFCVmFsdWU6AjgBQj1aLWdpdGxhYi5mdW5wbHVzLmlv",
            "L2ZhdC9jb25mL2dlbi9nb2xhbmcvcmF3ZGF0YaoCC2ZhdC5yYXdkYXRhYgZw",
            "cm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventInvite), global::fat.rawdata.EventInvite.Parser, new[]{ "Id", "EventTheme", "Level", "LieNum", "Num", "Reward" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventInviteMapABValue), global::fat.rawdata.EventInviteMapABValue.Parser, new[]{ "EventInviteMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventInviteConf), global::fat.rawdata.EventInviteConf.Parser, new[]{ "EventInviteMap", "EventInviteMapAB", "EventInviteMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventInvite",table="EventInviteMap",table_wrapper="EventInviteConf",map="true",map_key_type="int32",data="EventInviteConf")
  /// annotation@ab(table_ab="EventInviteMapAB",table_ab_patch="EventInviteMapABPatch",table_ab_value="EventInviteMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventInvite(id="id")
  /// </summary>
  public sealed partial class EventInvite : pb::IMessage<EventInvite>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventInvite> _parser = new pb::MessageParser<EventInvite>(() => new EventInvite());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventInvite> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventInviteConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventInvite() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventInvite(EventInvite other) : this() {
      id_ = other.id_;
      eventTheme_ = other.eventTheme_;
      level_ = other.level_;
      lieNum_ = other.lieNum_;
      num_ = other.num_.Clone();
      reward_ = other.reward_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventInvite Clone() {
      return new EventInvite(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 活动id
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "eventTheme" field.</summary>
    public const int EventThemeFieldNumber = 2;
    private int eventTheme_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EventTheme {
      get { return eventTheme_; }
      set {
        eventTheme_ = value;
      }
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 3;
    private int level_;
    /// <summary>
    /// 邀请到达等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "lieNum" field.</summary>
    public const int LieNumFieldNumber = 4;
    private int lieNum_;
    /// <summary>
    /// 初始人数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LieNum {
      get { return lieNum_; }
      set {
        lieNum_ = value;
      }
    }

    /// <summary>Field number for the "num" field.</summary>
    public const int NumFieldNumber = 5;
    private static readonly pb::FieldCodec<int> _repeated_num_codec
        = pb::FieldCodec.ForInt32(42);
    private readonly pbc::RepeatedField<int> num_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 邀请人数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Num {
      get { return num_; }
    }

    /// <summary>Field number for the "reward" field.</summary>
    public const int RewardFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _repeated_reward_codec
        = pb::FieldCodec.ForString(50);
    private readonly pbc::RepeatedField<string> reward_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Reward {
      get { return reward_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventInvite);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventInvite other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (EventTheme != other.EventTheme) return false;
      if (Level != other.Level) return false;
      if (LieNum != other.LieNum) return false;
      if(!num_.Equals(other.num_)) return false;
      if(!reward_.Equals(other.reward_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (EventTheme != 0) hash ^= EventTheme.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      if (LieNum != 0) hash ^= LieNum.GetHashCode();
      hash ^= num_.GetHashCode();
      hash ^= reward_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (EventTheme != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(EventTheme);
      }
      if (Level != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Level);
      }
      if (LieNum != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(LieNum);
      }
      num_.WriteTo(output, _repeated_num_codec);
      reward_.WriteTo(output, _repeated_reward_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (EventTheme != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(EventTheme);
      }
      if (Level != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Level);
      }
      if (LieNum != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(LieNum);
      }
      num_.WriteTo(ref output, _repeated_num_codec);
      reward_.WriteTo(ref output, _repeated_reward_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (EventTheme != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EventTheme);
      }
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      if (LieNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LieNum);
      }
      size += num_.CalculateSize(_repeated_num_codec);
      size += reward_.CalculateSize(_repeated_reward_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventInvite other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.EventTheme != 0) {
        EventTheme = other.EventTheme;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      if (other.LieNum != 0) {
        LieNum = other.LieNum;
      }
      num_.Add(other.num_);
      reward_.Add(other.reward_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            EventTheme = input.ReadInt32();
            break;
          }
          case 24: {
            Level = input.ReadInt32();
            break;
          }
          case 32: {
            LieNum = input.ReadInt32();
            break;
          }
          case 42:
          case 40: {
            num_.AddEntriesFrom(input, _repeated_num_codec);
            break;
          }
          case 50: {
            reward_.AddEntriesFrom(input, _repeated_reward_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            EventTheme = input.ReadInt32();
            break;
          }
          case 24: {
            Level = input.ReadInt32();
            break;
          }
          case 32: {
            LieNum = input.ReadInt32();
            break;
          }
          case 42:
          case 40: {
            num_.AddEntriesFrom(ref input, _repeated_num_codec);
            break;
          }
          case 50: {
            reward_.AddEntriesFrom(ref input, _repeated_reward_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventInviteMapABValue : pb::IMessage<EventInviteMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventInviteMapABValue> _parser = new pb::MessageParser<EventInviteMapABValue>(() => new EventInviteMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventInviteMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventInviteConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventInviteMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventInviteMapABValue(EventInviteMapABValue other) : this() {
      eventInviteMap_ = other.eventInviteMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventInviteMapABValue Clone() {
      return new EventInviteMapABValue(this);
    }

    /// <summary>Field number for the "EventInviteMap" field.</summary>
    public const int EventInviteMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventInvite>.Codec _map_eventInviteMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventInvite>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventInvite.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventInvite> eventInviteMap_ = new pbc::MapField<int, global::fat.rawdata.EventInvite>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventInvite> EventInviteMap {
      get { return eventInviteMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventInviteMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventInviteMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventInviteMap.Equals(other.EventInviteMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventInviteMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventInviteMap_.WriteTo(output, _map_eventInviteMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventInviteMap_.WriteTo(ref output, _map_eventInviteMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventInviteMap_.CalculateSize(_map_eventInviteMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventInviteMapABValue other) {
      if (other == null) {
        return;
      }
      eventInviteMap_.Add(other.eventInviteMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventInviteMap_.AddEntriesFrom(input, _map_eventInviteMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventInviteMap_.AddEntriesFrom(ref input, _map_eventInviteMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventInviteConf : pb::IMessage<EventInviteConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventInviteConf> _parser = new pb::MessageParser<EventInviteConf>(() => new EventInviteConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventInviteConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventInviteConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventInviteConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventInviteConf(EventInviteConf other) : this() {
      eventInviteMap_ = other.eventInviteMap_.Clone();
      eventInviteMapAB_ = other.eventInviteMapAB_.Clone();
      eventInviteMapABPatch_ = other.eventInviteMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventInviteConf Clone() {
      return new EventInviteConf(this);
    }

    /// <summary>Field number for the "EventInviteMap" field.</summary>
    public const int EventInviteMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventInvite>.Codec _map_eventInviteMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventInvite>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventInvite.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventInvite> eventInviteMap_ = new pbc::MapField<int, global::fat.rawdata.EventInvite>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventInvite> EventInviteMap {
      get { return eventInviteMap_; }
    }

    /// <summary>Field number for the "EventInviteMapAB" field.</summary>
    public const int EventInviteMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventInviteMapABValue>.Codec _map_eventInviteMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventInviteMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventInviteMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventInviteMapABValue> eventInviteMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventInviteMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventInviteMapABValue> EventInviteMapAB {
      get { return eventInviteMapAB_; }
    }

    /// <summary>Field number for the "EventInviteMapABPatch" field.</summary>
    public const int EventInviteMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventInviteMapABValue>.Codec _map_eventInviteMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventInviteMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventInviteMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventInviteMapABValue> eventInviteMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventInviteMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventInviteMapABValue> EventInviteMapABPatch {
      get { return eventInviteMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventInviteConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventInviteConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventInviteMap.Equals(other.EventInviteMap)) return false;
      if (!EventInviteMapAB.Equals(other.EventInviteMapAB)) return false;
      if (!EventInviteMapABPatch.Equals(other.EventInviteMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventInviteMap.GetHashCode();
      hash ^= EventInviteMapAB.GetHashCode();
      hash ^= EventInviteMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventInviteMap_.WriteTo(output, _map_eventInviteMap_codec);
      eventInviteMapAB_.WriteTo(output, _map_eventInviteMapAB_codec);
      eventInviteMapABPatch_.WriteTo(output, _map_eventInviteMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventInviteMap_.WriteTo(ref output, _map_eventInviteMap_codec);
      eventInviteMapAB_.WriteTo(ref output, _map_eventInviteMapAB_codec);
      eventInviteMapABPatch_.WriteTo(ref output, _map_eventInviteMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventInviteMap_.CalculateSize(_map_eventInviteMap_codec);
      size += eventInviteMapAB_.CalculateSize(_map_eventInviteMapAB_codec);
      size += eventInviteMapABPatch_.CalculateSize(_map_eventInviteMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventInviteConf other) {
      if (other == null) {
        return;
      }
      eventInviteMap_.Add(other.eventInviteMap_);
      eventInviteMapAB_.Add(other.eventInviteMapAB_);
      eventInviteMapABPatch_.Add(other.eventInviteMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventInviteMap_.AddEntriesFrom(input, _map_eventInviteMap_codec);
            break;
          }
          case 18: {
            eventInviteMapAB_.AddEntriesFrom(input, _map_eventInviteMapAB_codec);
            break;
          }
          case 26: {
            eventInviteMapABPatch_.AddEntriesFrom(input, _map_eventInviteMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventInviteMap_.AddEntriesFrom(ref input, _map_eventInviteMap_codec);
            break;
          }
          case 18: {
            eventInviteMapAB_.AddEntriesFrom(ref input, _map_eventInviteMapAB_codec);
            break;
          }
          case 26: {
            eventInviteMapABPatch_.AddEntriesFrom(ref input, _map_eventInviteMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
