// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventGuessRoundConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventGuessRoundConf.proto</summary>
  public static partial class EventGuessRoundConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventGuessRoundConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventGuessRoundConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiFyYXdkYXRhL0V2ZW50R3Vlc3NSb3VuZENvbmYucHJvdG8SB3Jhd2RhdGEi",
            "NQoPRXZlbnRHdWVzc1JvdW5kEgoKAmlkGAEgASgFEhYKDmluY2x1ZGVHdWVz",
            "c0lkGAIgAygFIsgBChlFdmVudEd1ZXNzUm91bmRNYXBBQlZhbHVlElYKEkV2",
            "ZW50R3Vlc3NSb3VuZE1hcBgBIAMoCzI6LnJhd2RhdGEuRXZlbnRHdWVzc1Jv",
            "dW5kTWFwQUJWYWx1ZS5FdmVudEd1ZXNzUm91bmRNYXBFbnRyeRpTChdFdmVu",
            "dEd1ZXNzUm91bmRNYXBFbnRyeRILCgNrZXkYASABKAUSJwoFdmFsdWUYAiAB",
            "KAsyGC5yYXdkYXRhLkV2ZW50R3Vlc3NSb3VuZDoCOAEiuQQKE0V2ZW50R3Vl",
            "c3NSb3VuZENvbmYSUAoSRXZlbnRHdWVzc1JvdW5kTWFwGAEgAygLMjQucmF3",
            "ZGF0YS5FdmVudEd1ZXNzUm91bmRDb25mLkV2ZW50R3Vlc3NSb3VuZE1hcEVu",
            "dHJ5ElQKFEV2ZW50R3Vlc3NSb3VuZE1hcEFCGAIgAygLMjYucmF3ZGF0YS5F",
            "dmVudEd1ZXNzUm91bmRDb25mLkV2ZW50R3Vlc3NSb3VuZE1hcEFCRW50cnkS",
            "XgoZRXZlbnRHdWVzc1JvdW5kTWFwQUJQYXRjaBgDIAMoCzI7LnJhd2RhdGEu",
            "RXZlbnRHdWVzc1JvdW5kQ29uZi5FdmVudEd1ZXNzUm91bmRNYXBBQlBhdGNo",
            "RW50cnkaUwoXRXZlbnRHdWVzc1JvdW5kTWFwRW50cnkSCwoDa2V5GAEgASgF",
            "EicKBXZhbHVlGAIgASgLMhgucmF3ZGF0YS5FdmVudEd1ZXNzUm91bmQ6AjgB",
            "Gl8KGUV2ZW50R3Vlc3NSb3VuZE1hcEFCRW50cnkSCwoDa2V5GAEgASgJEjEK",
            "BXZhbHVlGAIgASgLMiIucmF3ZGF0YS5FdmVudEd1ZXNzUm91bmRNYXBBQlZh",
            "bHVlOgI4ARpkCh5FdmVudEd1ZXNzUm91bmRNYXBBQlBhdGNoRW50cnkSCwoD",
            "a2V5GAEgASgJEjEKBXZhbHVlGAIgASgLMiIucmF3ZGF0YS5FdmVudEd1ZXNz",
            "Um91bmRNYXBBQlZhbHVlOgI4AUI9Wi1naXRsYWIuZnVucGx1cy5pby9mYXQv",
            "Y29uZi9nZW4vZ29sYW5nL3Jhd2RhdGGqAgtmYXQucmF3ZGF0YWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventGuessRound), global::fat.rawdata.EventGuessRound.Parser, new[]{ "Id", "IncludeGuessId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventGuessRoundMapABValue), global::fat.rawdata.EventGuessRoundMapABValue.Parser, new[]{ "EventGuessRoundMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventGuessRoundConf), global::fat.rawdata.EventGuessRoundConf.Parser, new[]{ "EventGuessRoundMap", "EventGuessRoundMapAB", "EventGuessRoundMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventGuessRound",table="EventGuessRoundMap",table_wrapper="EventGuessRoundConf",map="true",map_key_type="int32",data="EventGuessRoundConf")
  /// annotation@ab(table_ab="EventGuessRoundMapAB",table_ab_patch="EventGuessRoundMapABPatch",table_ab_value="EventGuessRoundMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventGuessRound(id="id")
  /// </summary>
  public sealed partial class EventGuessRound : pb::IMessage<EventGuessRound>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventGuessRound> _parser = new pb::MessageParser<EventGuessRound>(() => new EventGuessRound());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventGuessRound> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventGuessRoundConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventGuessRound() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventGuessRound(EventGuessRound other) : this() {
      id_ = other.id_;
      includeGuessId_ = other.includeGuessId_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventGuessRound Clone() {
      return new EventGuessRound(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 活动模板ID
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "includeGuessId" field.</summary>
    public const int IncludeGuessIdFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_includeGuessId_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> includeGuessId_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 活动包含哪几轮活动
    /// （EventGuess.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> IncludeGuessId {
      get { return includeGuessId_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventGuessRound);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventGuessRound other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!includeGuessId_.Equals(other.includeGuessId_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      hash ^= includeGuessId_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      includeGuessId_.WriteTo(output, _repeated_includeGuessId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      includeGuessId_.WriteTo(ref output, _repeated_includeGuessId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      size += includeGuessId_.CalculateSize(_repeated_includeGuessId_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventGuessRound other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      includeGuessId_.Add(other.includeGuessId_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            includeGuessId_.AddEntriesFrom(input, _repeated_includeGuessId_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            includeGuessId_.AddEntriesFrom(ref input, _repeated_includeGuessId_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventGuessRoundMapABValue : pb::IMessage<EventGuessRoundMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventGuessRoundMapABValue> _parser = new pb::MessageParser<EventGuessRoundMapABValue>(() => new EventGuessRoundMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventGuessRoundMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventGuessRoundConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventGuessRoundMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventGuessRoundMapABValue(EventGuessRoundMapABValue other) : this() {
      eventGuessRoundMap_ = other.eventGuessRoundMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventGuessRoundMapABValue Clone() {
      return new EventGuessRoundMapABValue(this);
    }

    /// <summary>Field number for the "EventGuessRoundMap" field.</summary>
    public const int EventGuessRoundMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventGuessRound>.Codec _map_eventGuessRoundMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventGuessRound>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventGuessRound.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventGuessRound> eventGuessRoundMap_ = new pbc::MapField<int, global::fat.rawdata.EventGuessRound>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventGuessRound> EventGuessRoundMap {
      get { return eventGuessRoundMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventGuessRoundMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventGuessRoundMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventGuessRoundMap.Equals(other.EventGuessRoundMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventGuessRoundMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventGuessRoundMap_.WriteTo(output, _map_eventGuessRoundMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventGuessRoundMap_.WriteTo(ref output, _map_eventGuessRoundMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventGuessRoundMap_.CalculateSize(_map_eventGuessRoundMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventGuessRoundMapABValue other) {
      if (other == null) {
        return;
      }
      eventGuessRoundMap_.Add(other.eventGuessRoundMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventGuessRoundMap_.AddEntriesFrom(input, _map_eventGuessRoundMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventGuessRoundMap_.AddEntriesFrom(ref input, _map_eventGuessRoundMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventGuessRoundConf : pb::IMessage<EventGuessRoundConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventGuessRoundConf> _parser = new pb::MessageParser<EventGuessRoundConf>(() => new EventGuessRoundConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventGuessRoundConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventGuessRoundConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventGuessRoundConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventGuessRoundConf(EventGuessRoundConf other) : this() {
      eventGuessRoundMap_ = other.eventGuessRoundMap_.Clone();
      eventGuessRoundMapAB_ = other.eventGuessRoundMapAB_.Clone();
      eventGuessRoundMapABPatch_ = other.eventGuessRoundMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventGuessRoundConf Clone() {
      return new EventGuessRoundConf(this);
    }

    /// <summary>Field number for the "EventGuessRoundMap" field.</summary>
    public const int EventGuessRoundMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventGuessRound>.Codec _map_eventGuessRoundMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventGuessRound>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventGuessRound.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventGuessRound> eventGuessRoundMap_ = new pbc::MapField<int, global::fat.rawdata.EventGuessRound>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventGuessRound> EventGuessRoundMap {
      get { return eventGuessRoundMap_; }
    }

    /// <summary>Field number for the "EventGuessRoundMapAB" field.</summary>
    public const int EventGuessRoundMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventGuessRoundMapABValue>.Codec _map_eventGuessRoundMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventGuessRoundMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventGuessRoundMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventGuessRoundMapABValue> eventGuessRoundMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventGuessRoundMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventGuessRoundMapABValue> EventGuessRoundMapAB {
      get { return eventGuessRoundMapAB_; }
    }

    /// <summary>Field number for the "EventGuessRoundMapABPatch" field.</summary>
    public const int EventGuessRoundMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventGuessRoundMapABValue>.Codec _map_eventGuessRoundMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventGuessRoundMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventGuessRoundMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventGuessRoundMapABValue> eventGuessRoundMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventGuessRoundMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventGuessRoundMapABValue> EventGuessRoundMapABPatch {
      get { return eventGuessRoundMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventGuessRoundConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventGuessRoundConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventGuessRoundMap.Equals(other.EventGuessRoundMap)) return false;
      if (!EventGuessRoundMapAB.Equals(other.EventGuessRoundMapAB)) return false;
      if (!EventGuessRoundMapABPatch.Equals(other.EventGuessRoundMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventGuessRoundMap.GetHashCode();
      hash ^= EventGuessRoundMapAB.GetHashCode();
      hash ^= EventGuessRoundMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventGuessRoundMap_.WriteTo(output, _map_eventGuessRoundMap_codec);
      eventGuessRoundMapAB_.WriteTo(output, _map_eventGuessRoundMapAB_codec);
      eventGuessRoundMapABPatch_.WriteTo(output, _map_eventGuessRoundMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventGuessRoundMap_.WriteTo(ref output, _map_eventGuessRoundMap_codec);
      eventGuessRoundMapAB_.WriteTo(ref output, _map_eventGuessRoundMapAB_codec);
      eventGuessRoundMapABPatch_.WriteTo(ref output, _map_eventGuessRoundMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventGuessRoundMap_.CalculateSize(_map_eventGuessRoundMap_codec);
      size += eventGuessRoundMapAB_.CalculateSize(_map_eventGuessRoundMapAB_codec);
      size += eventGuessRoundMapABPatch_.CalculateSize(_map_eventGuessRoundMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventGuessRoundConf other) {
      if (other == null) {
        return;
      }
      eventGuessRoundMap_.Add(other.eventGuessRoundMap_);
      eventGuessRoundMapAB_.Add(other.eventGuessRoundMapAB_);
      eventGuessRoundMapABPatch_.Add(other.eventGuessRoundMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventGuessRoundMap_.AddEntriesFrom(input, _map_eventGuessRoundMap_codec);
            break;
          }
          case 18: {
            eventGuessRoundMapAB_.AddEntriesFrom(input, _map_eventGuessRoundMapAB_codec);
            break;
          }
          case 26: {
            eventGuessRoundMapABPatch_.AddEntriesFrom(input, _map_eventGuessRoundMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventGuessRoundMap_.AddEntriesFrom(ref input, _map_eventGuessRoundMap_codec);
            break;
          }
          case 18: {
            eventGuessRoundMapAB_.AddEntriesFrom(ref input, _map_eventGuessRoundMapAB_codec);
            break;
          }
          case 26: {
            eventGuessRoundMapABPatch_.AddEntriesFrom(ref input, _map_eventGuessRoundMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
