// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventOrderLikeConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventOrderLikeConf.proto</summary>
  public static partial class EventOrderLikeConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventOrderLikeConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventOrderLikeConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiByYXdkYXRhL0V2ZW50T3JkZXJMaWtlQ29uZi5wcm90bxIHcmF3ZGF0YSJ8",
            "Cg5FdmVudE9yZGVyTGlrZRIKCgJpZBgBIAEoBRIPCgdib2FyZElkGAIgASgF",
            "EhMKC2N5Y2xlRGV0YWlsGAMgASgFEhIKCmV2ZW50VGhlbWUYBCABKAUSEwoL",
            "cXVldWVEZXRhaWwYBSADKAUSDwoHdG9rZW5JZBgGIAEoBSLCAQoYRXZlbnRP",
            "cmRlckxpa2VNYXBBQlZhbHVlElMKEUV2ZW50T3JkZXJMaWtlTWFwGAEgAygL",
            "MjgucmF3ZGF0YS5FdmVudE9yZGVyTGlrZU1hcEFCVmFsdWUuRXZlbnRPcmRl",
            "ckxpa2VNYXBFbnRyeRpRChZFdmVudE9yZGVyTGlrZU1hcEVudHJ5EgsKA2tl",
            "eRgBIAEoBRImCgV2YWx1ZRgCIAEoCzIXLnJhd2RhdGEuRXZlbnRPcmRlckxp",
            "a2U6AjgBIqkEChJFdmVudE9yZGVyTGlrZUNvbmYSTQoRRXZlbnRPcmRlckxp",
            "a2VNYXAYASADKAsyMi5yYXdkYXRhLkV2ZW50T3JkZXJMaWtlQ29uZi5FdmVu",
            "dE9yZGVyTGlrZU1hcEVudHJ5ElEKE0V2ZW50T3JkZXJMaWtlTWFwQUIYAiAD",
            "KAsyNC5yYXdkYXRhLkV2ZW50T3JkZXJMaWtlQ29uZi5FdmVudE9yZGVyTGlr",
            "ZU1hcEFCRW50cnkSWwoYRXZlbnRPcmRlckxpa2VNYXBBQlBhdGNoGAMgAygL",
            "MjkucmF3ZGF0YS5FdmVudE9yZGVyTGlrZUNvbmYuRXZlbnRPcmRlckxpa2VN",
            "YXBBQlBhdGNoRW50cnkaUQoWRXZlbnRPcmRlckxpa2VNYXBFbnRyeRILCgNr",
            "ZXkYASABKAUSJgoFdmFsdWUYAiABKAsyFy5yYXdkYXRhLkV2ZW50T3JkZXJM",
            "aWtlOgI4ARpdChhFdmVudE9yZGVyTGlrZU1hcEFCRW50cnkSCwoDa2V5GAEg",
            "ASgJEjAKBXZhbHVlGAIgASgLMiEucmF3ZGF0YS5FdmVudE9yZGVyTGlrZU1h",
            "cEFCVmFsdWU6AjgBGmIKHUV2ZW50T3JkZXJMaWtlTWFwQUJQYXRjaEVudHJ5",
            "EgsKA2tleRgBIAEoCRIwCgV2YWx1ZRgCIAEoCzIhLnJhd2RhdGEuRXZlbnRP",
            "cmRlckxpa2VNYXBBQlZhbHVlOgI4AUI9Wi1naXRsYWIuZnVucGx1cy5pby9m",
            "YXQvY29uZi9nZW4vZ29sYW5nL3Jhd2RhdGGqAgtmYXQucmF3ZGF0YWIGcHJv",
            "dG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventOrderLike), global::fat.rawdata.EventOrderLike.Parser, new[]{ "Id", "BoardId", "CycleDetail", "EventTheme", "QueueDetail", "TokenId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventOrderLikeMapABValue), global::fat.rawdata.EventOrderLikeMapABValue.Parser, new[]{ "EventOrderLikeMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventOrderLikeConf), global::fat.rawdata.EventOrderLikeConf.Parser, new[]{ "EventOrderLikeMap", "EventOrderLikeMapAB", "EventOrderLikeMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventOrderLike",table="EventOrderLikeMap",table_wrapper="EventOrderLikeConf",map="true",map_key_type="int32",data="EventOrderLikeConf")
  /// annotation@ab(table_ab="EventOrderLikeMapAB",table_ab_patch="EventOrderLikeMapABPatch",table_ab_value="EventOrderLikeMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventOrderLike(id="id")
  /// </summary>
  public sealed partial class EventOrderLike : pb::IMessage<EventOrderLike>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventOrderLike> _parser = new pb::MessageParser<EventOrderLike>(() => new EventOrderLike());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventOrderLike> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventOrderLikeConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventOrderLike() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventOrderLike(EventOrderLike other) : this() {
      id_ = other.id_;
      boardId_ = other.boardId_;
      cycleDetail_ = other.cycleDetail_;
      eventTheme_ = other.eventTheme_;
      queueDetail_ = other.queueDetail_.Clone();
      tokenId_ = other.tokenId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventOrderLike Clone() {
      return new EventOrderLike(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 活动id
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "boardId" field.</summary>
    public const int BoardIdFieldNumber = 2;
    private int boardId_;
    /// <summary>
    /// 生效棋盘
    /// （MergeBoard.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BoardId {
      get { return boardId_; }
      set {
        boardId_ = value;
      }
    }

    /// <summary>Field number for the "cycleDetail" field.</summary>
    public const int CycleDetailFieldNumber = 3;
    private int cycleDetail_;
    /// <summary>
    /// 循环模版
    /// （EventOrderLikeDetail.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CycleDetail {
      get { return cycleDetail_; }
      set {
        cycleDetail_ = value;
      }
    }

    /// <summary>Field number for the "eventTheme" field.</summary>
    public const int EventThemeFieldNumber = 4;
    private int eventTheme_;
    /// <summary>
    /// 活动主界面弹板id
    /// （EventTheme.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EventTheme {
      get { return eventTheme_; }
      set {
        eventTheme_ = value;
      }
    }

    /// <summary>Field number for the "queueDetail" field.</summary>
    public const int QueueDetailFieldNumber = 5;
    private static readonly pb::FieldCodec<int> _repeated_queueDetail_codec
        = pb::FieldCodec.ForInt32(42);
    private readonly pbc::RepeatedField<int> queueDetail_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 轮次对应模版
    /// （EventOrderLikeDetail.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> QueueDetail {
      get { return queueDetail_; }
    }

    /// <summary>Field number for the "tokenId" field.</summary>
    public const int TokenIdFieldNumber = 6;
    private int tokenId_;
    /// <summary>
    /// 活动积分id
    /// (ObjToken.id)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TokenId {
      get { return tokenId_; }
      set {
        tokenId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventOrderLike);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventOrderLike other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (BoardId != other.BoardId) return false;
      if (CycleDetail != other.CycleDetail) return false;
      if (EventTheme != other.EventTheme) return false;
      if(!queueDetail_.Equals(other.queueDetail_)) return false;
      if (TokenId != other.TokenId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (BoardId != 0) hash ^= BoardId.GetHashCode();
      if (CycleDetail != 0) hash ^= CycleDetail.GetHashCode();
      if (EventTheme != 0) hash ^= EventTheme.GetHashCode();
      hash ^= queueDetail_.GetHashCode();
      if (TokenId != 0) hash ^= TokenId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (BoardId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BoardId);
      }
      if (CycleDetail != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CycleDetail);
      }
      if (EventTheme != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(EventTheme);
      }
      queueDetail_.WriteTo(output, _repeated_queueDetail_codec);
      if (TokenId != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(TokenId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (BoardId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BoardId);
      }
      if (CycleDetail != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CycleDetail);
      }
      if (EventTheme != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(EventTheme);
      }
      queueDetail_.WriteTo(ref output, _repeated_queueDetail_codec);
      if (TokenId != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(TokenId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (BoardId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BoardId);
      }
      if (CycleDetail != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CycleDetail);
      }
      if (EventTheme != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EventTheme);
      }
      size += queueDetail_.CalculateSize(_repeated_queueDetail_codec);
      if (TokenId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TokenId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventOrderLike other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.BoardId != 0) {
        BoardId = other.BoardId;
      }
      if (other.CycleDetail != 0) {
        CycleDetail = other.CycleDetail;
      }
      if (other.EventTheme != 0) {
        EventTheme = other.EventTheme;
      }
      queueDetail_.Add(other.queueDetail_);
      if (other.TokenId != 0) {
        TokenId = other.TokenId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            BoardId = input.ReadInt32();
            break;
          }
          case 24: {
            CycleDetail = input.ReadInt32();
            break;
          }
          case 32: {
            EventTheme = input.ReadInt32();
            break;
          }
          case 42:
          case 40: {
            queueDetail_.AddEntriesFrom(input, _repeated_queueDetail_codec);
            break;
          }
          case 48: {
            TokenId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            BoardId = input.ReadInt32();
            break;
          }
          case 24: {
            CycleDetail = input.ReadInt32();
            break;
          }
          case 32: {
            EventTheme = input.ReadInt32();
            break;
          }
          case 42:
          case 40: {
            queueDetail_.AddEntriesFrom(ref input, _repeated_queueDetail_codec);
            break;
          }
          case 48: {
            TokenId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventOrderLikeMapABValue : pb::IMessage<EventOrderLikeMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventOrderLikeMapABValue> _parser = new pb::MessageParser<EventOrderLikeMapABValue>(() => new EventOrderLikeMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventOrderLikeMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventOrderLikeConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventOrderLikeMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventOrderLikeMapABValue(EventOrderLikeMapABValue other) : this() {
      eventOrderLikeMap_ = other.eventOrderLikeMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventOrderLikeMapABValue Clone() {
      return new EventOrderLikeMapABValue(this);
    }

    /// <summary>Field number for the "EventOrderLikeMap" field.</summary>
    public const int EventOrderLikeMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventOrderLike>.Codec _map_eventOrderLikeMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventOrderLike>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventOrderLike.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventOrderLike> eventOrderLikeMap_ = new pbc::MapField<int, global::fat.rawdata.EventOrderLike>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventOrderLike> EventOrderLikeMap {
      get { return eventOrderLikeMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventOrderLikeMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventOrderLikeMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventOrderLikeMap.Equals(other.EventOrderLikeMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventOrderLikeMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventOrderLikeMap_.WriteTo(output, _map_eventOrderLikeMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventOrderLikeMap_.WriteTo(ref output, _map_eventOrderLikeMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventOrderLikeMap_.CalculateSize(_map_eventOrderLikeMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventOrderLikeMapABValue other) {
      if (other == null) {
        return;
      }
      eventOrderLikeMap_.Add(other.eventOrderLikeMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventOrderLikeMap_.AddEntriesFrom(input, _map_eventOrderLikeMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventOrderLikeMap_.AddEntriesFrom(ref input, _map_eventOrderLikeMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventOrderLikeConf : pb::IMessage<EventOrderLikeConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventOrderLikeConf> _parser = new pb::MessageParser<EventOrderLikeConf>(() => new EventOrderLikeConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventOrderLikeConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventOrderLikeConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventOrderLikeConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventOrderLikeConf(EventOrderLikeConf other) : this() {
      eventOrderLikeMap_ = other.eventOrderLikeMap_.Clone();
      eventOrderLikeMapAB_ = other.eventOrderLikeMapAB_.Clone();
      eventOrderLikeMapABPatch_ = other.eventOrderLikeMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventOrderLikeConf Clone() {
      return new EventOrderLikeConf(this);
    }

    /// <summary>Field number for the "EventOrderLikeMap" field.</summary>
    public const int EventOrderLikeMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventOrderLike>.Codec _map_eventOrderLikeMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventOrderLike>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventOrderLike.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventOrderLike> eventOrderLikeMap_ = new pbc::MapField<int, global::fat.rawdata.EventOrderLike>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventOrderLike> EventOrderLikeMap {
      get { return eventOrderLikeMap_; }
    }

    /// <summary>Field number for the "EventOrderLikeMapAB" field.</summary>
    public const int EventOrderLikeMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventOrderLikeMapABValue>.Codec _map_eventOrderLikeMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventOrderLikeMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventOrderLikeMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventOrderLikeMapABValue> eventOrderLikeMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventOrderLikeMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventOrderLikeMapABValue> EventOrderLikeMapAB {
      get { return eventOrderLikeMapAB_; }
    }

    /// <summary>Field number for the "EventOrderLikeMapABPatch" field.</summary>
    public const int EventOrderLikeMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventOrderLikeMapABValue>.Codec _map_eventOrderLikeMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventOrderLikeMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventOrderLikeMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventOrderLikeMapABValue> eventOrderLikeMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventOrderLikeMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventOrderLikeMapABValue> EventOrderLikeMapABPatch {
      get { return eventOrderLikeMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventOrderLikeConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventOrderLikeConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventOrderLikeMap.Equals(other.EventOrderLikeMap)) return false;
      if (!EventOrderLikeMapAB.Equals(other.EventOrderLikeMapAB)) return false;
      if (!EventOrderLikeMapABPatch.Equals(other.EventOrderLikeMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventOrderLikeMap.GetHashCode();
      hash ^= EventOrderLikeMapAB.GetHashCode();
      hash ^= EventOrderLikeMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventOrderLikeMap_.WriteTo(output, _map_eventOrderLikeMap_codec);
      eventOrderLikeMapAB_.WriteTo(output, _map_eventOrderLikeMapAB_codec);
      eventOrderLikeMapABPatch_.WriteTo(output, _map_eventOrderLikeMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventOrderLikeMap_.WriteTo(ref output, _map_eventOrderLikeMap_codec);
      eventOrderLikeMapAB_.WriteTo(ref output, _map_eventOrderLikeMapAB_codec);
      eventOrderLikeMapABPatch_.WriteTo(ref output, _map_eventOrderLikeMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventOrderLikeMap_.CalculateSize(_map_eventOrderLikeMap_codec);
      size += eventOrderLikeMapAB_.CalculateSize(_map_eventOrderLikeMapAB_codec);
      size += eventOrderLikeMapABPatch_.CalculateSize(_map_eventOrderLikeMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventOrderLikeConf other) {
      if (other == null) {
        return;
      }
      eventOrderLikeMap_.Add(other.eventOrderLikeMap_);
      eventOrderLikeMapAB_.Add(other.eventOrderLikeMapAB_);
      eventOrderLikeMapABPatch_.Add(other.eventOrderLikeMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventOrderLikeMap_.AddEntriesFrom(input, _map_eventOrderLikeMap_codec);
            break;
          }
          case 18: {
            eventOrderLikeMapAB_.AddEntriesFrom(input, _map_eventOrderLikeMapAB_codec);
            break;
          }
          case 26: {
            eventOrderLikeMapABPatch_.AddEntriesFrom(input, _map_eventOrderLikeMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventOrderLikeMap_.AddEntriesFrom(ref input, _map_eventOrderLikeMap_codec);
            break;
          }
          case 18: {
            eventOrderLikeMapAB_.AddEntriesFrom(ref input, _map_eventOrderLikeMapAB_codec);
            break;
          }
          case 26: {
            eventOrderLikeMapABPatch_.AddEntriesFrom(ref input, _map_eventOrderLikeMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
