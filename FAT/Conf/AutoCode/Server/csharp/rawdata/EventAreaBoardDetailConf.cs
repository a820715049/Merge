// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventAreaBoardDetailConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventAreaBoardDetailConf.proto</summary>
  public static partial class EventAreaBoardDetailConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventAreaBoardDetailConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventAreaBoardDetailConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiZyYXdkYXRhL0V2ZW50QXJlYUJvYXJkRGV0YWlsQ29uZi5wcm90bxIHcmF3",
            "ZGF0YSI2ChRFdmVudEFyZWFCb2FyZERldGFpbBIKCgJpZBgBIAEoBRISCgpi",
            "b2FyZFJvd0lkGAIgAygFIuYBCh5FdmVudEFyZWFCb2FyZERldGFpbE1hcEFC",
            "VmFsdWUSZQoXRXZlbnRBcmVhQm9hcmREZXRhaWxNYXAYASADKAsyRC5yYXdk",
            "YXRhLkV2ZW50QXJlYUJvYXJkRGV0YWlsTWFwQUJWYWx1ZS5FdmVudEFyZWFC",
            "b2FyZERldGFpbE1hcEVudHJ5Gl0KHEV2ZW50QXJlYUJvYXJkRGV0YWlsTWFw",
            "RW50cnkSCwoDa2V5GAEgASgFEiwKBXZhbHVlGAIgASgLMh0ucmF3ZGF0YS5F",
            "dmVudEFyZWFCb2FyZERldGFpbDoCOAEiiQUKGEV2ZW50QXJlYUJvYXJkRGV0",
            "YWlsQ29uZhJfChdFdmVudEFyZWFCb2FyZERldGFpbE1hcBgBIAMoCzI+LnJh",
            "d2RhdGEuRXZlbnRBcmVhQm9hcmREZXRhaWxDb25mLkV2ZW50QXJlYUJvYXJk",
            "RGV0YWlsTWFwRW50cnkSYwoZRXZlbnRBcmVhQm9hcmREZXRhaWxNYXBBQhgC",
            "IAMoCzJALnJhd2RhdGEuRXZlbnRBcmVhQm9hcmREZXRhaWxDb25mLkV2ZW50",
            "QXJlYUJvYXJkRGV0YWlsTWFwQUJFbnRyeRJtCh5FdmVudEFyZWFCb2FyZERl",
            "dGFpbE1hcEFCUGF0Y2gYAyADKAsyRS5yYXdkYXRhLkV2ZW50QXJlYUJvYXJk",
            "RGV0YWlsQ29uZi5FdmVudEFyZWFCb2FyZERldGFpbE1hcEFCUGF0Y2hFbnRy",
            "eRpdChxFdmVudEFyZWFCb2FyZERldGFpbE1hcEVudHJ5EgsKA2tleRgBIAEo",
            "BRIsCgV2YWx1ZRgCIAEoCzIdLnJhd2RhdGEuRXZlbnRBcmVhQm9hcmREZXRh",
            "aWw6AjgBGmkKHkV2ZW50QXJlYUJvYXJkRGV0YWlsTWFwQUJFbnRyeRILCgNr",
            "ZXkYASABKAkSNgoFdmFsdWUYAiABKAsyJy5yYXdkYXRhLkV2ZW50QXJlYUJv",
            "YXJkRGV0YWlsTWFwQUJWYWx1ZToCOAEabgojRXZlbnRBcmVhQm9hcmREZXRh",
            "aWxNYXBBQlBhdGNoRW50cnkSCwoDa2V5GAEgASgJEjYKBXZhbHVlGAIgASgL",
            "MicucmF3ZGF0YS5FdmVudEFyZWFCb2FyZERldGFpbE1hcEFCVmFsdWU6AjgB",
            "Qj1aLWdpdGxhYi5mdW5wbHVzLmlvL2ZhdC9jb25mL2dlbi9nb2xhbmcvcmF3",
            "ZGF0YaoCC2ZhdC5yYXdkYXRhYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventAreaBoardDetail), global::fat.rawdata.EventAreaBoardDetail.Parser, new[]{ "Id", "BoardRowId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventAreaBoardDetailMapABValue), global::fat.rawdata.EventAreaBoardDetailMapABValue.Parser, new[]{ "EventAreaBoardDetailMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventAreaBoardDetailConf), global::fat.rawdata.EventAreaBoardDetailConf.Parser, new[]{ "EventAreaBoardDetailMap", "EventAreaBoardDetailMapAB", "EventAreaBoardDetailMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventAreaBoardDetail",table="EventAreaBoardDetailMap",table_wrapper="EventAreaBoardDetailConf",map="true",map_key_type="int32",data="EventAreaBoardDetailConf")
  /// annotation@ab(table_ab="EventAreaBoardDetailMapAB",table_ab_patch="EventAreaBoardDetailMapABPatch",table_ab_value="EventAreaBoardDetailMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventAreaBoardDetail(id="id")
  /// </summary>
  public sealed partial class EventAreaBoardDetail : pb::IMessage<EventAreaBoardDetail>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventAreaBoardDetail> _parser = new pb::MessageParser<EventAreaBoardDetail>(() => new EventAreaBoardDetail());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventAreaBoardDetail> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventAreaBoardDetailConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventAreaBoardDetail() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventAreaBoardDetail(EventAreaBoardDetail other) : this() {
      id_ = other.id_;
      boardRowId_ = other.boardRowId_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventAreaBoardDetail Clone() {
      return new EventAreaBoardDetail(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// boardid
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "boardRowId" field.</summary>
    public const int BoardRowIdFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_boardRowId_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> boardRowId_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 所有棋盘行id
    /// （EventAreaBoardRow.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> BoardRowId {
      get { return boardRowId_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventAreaBoardDetail);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventAreaBoardDetail other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!boardRowId_.Equals(other.boardRowId_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      hash ^= boardRowId_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      boardRowId_.WriteTo(output, _repeated_boardRowId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      boardRowId_.WriteTo(ref output, _repeated_boardRowId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      size += boardRowId_.CalculateSize(_repeated_boardRowId_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventAreaBoardDetail other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      boardRowId_.Add(other.boardRowId_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            boardRowId_.AddEntriesFrom(input, _repeated_boardRowId_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            boardRowId_.AddEntriesFrom(ref input, _repeated_boardRowId_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventAreaBoardDetailMapABValue : pb::IMessage<EventAreaBoardDetailMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventAreaBoardDetailMapABValue> _parser = new pb::MessageParser<EventAreaBoardDetailMapABValue>(() => new EventAreaBoardDetailMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventAreaBoardDetailMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventAreaBoardDetailConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventAreaBoardDetailMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventAreaBoardDetailMapABValue(EventAreaBoardDetailMapABValue other) : this() {
      eventAreaBoardDetailMap_ = other.eventAreaBoardDetailMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventAreaBoardDetailMapABValue Clone() {
      return new EventAreaBoardDetailMapABValue(this);
    }

    /// <summary>Field number for the "EventAreaBoardDetailMap" field.</summary>
    public const int EventAreaBoardDetailMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventAreaBoardDetail>.Codec _map_eventAreaBoardDetailMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventAreaBoardDetail>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventAreaBoardDetail.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventAreaBoardDetail> eventAreaBoardDetailMap_ = new pbc::MapField<int, global::fat.rawdata.EventAreaBoardDetail>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventAreaBoardDetail> EventAreaBoardDetailMap {
      get { return eventAreaBoardDetailMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventAreaBoardDetailMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventAreaBoardDetailMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventAreaBoardDetailMap.Equals(other.EventAreaBoardDetailMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventAreaBoardDetailMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventAreaBoardDetailMap_.WriteTo(output, _map_eventAreaBoardDetailMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventAreaBoardDetailMap_.WriteTo(ref output, _map_eventAreaBoardDetailMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventAreaBoardDetailMap_.CalculateSize(_map_eventAreaBoardDetailMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventAreaBoardDetailMapABValue other) {
      if (other == null) {
        return;
      }
      eventAreaBoardDetailMap_.Add(other.eventAreaBoardDetailMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventAreaBoardDetailMap_.AddEntriesFrom(input, _map_eventAreaBoardDetailMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventAreaBoardDetailMap_.AddEntriesFrom(ref input, _map_eventAreaBoardDetailMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventAreaBoardDetailConf : pb::IMessage<EventAreaBoardDetailConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventAreaBoardDetailConf> _parser = new pb::MessageParser<EventAreaBoardDetailConf>(() => new EventAreaBoardDetailConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventAreaBoardDetailConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventAreaBoardDetailConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventAreaBoardDetailConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventAreaBoardDetailConf(EventAreaBoardDetailConf other) : this() {
      eventAreaBoardDetailMap_ = other.eventAreaBoardDetailMap_.Clone();
      eventAreaBoardDetailMapAB_ = other.eventAreaBoardDetailMapAB_.Clone();
      eventAreaBoardDetailMapABPatch_ = other.eventAreaBoardDetailMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventAreaBoardDetailConf Clone() {
      return new EventAreaBoardDetailConf(this);
    }

    /// <summary>Field number for the "EventAreaBoardDetailMap" field.</summary>
    public const int EventAreaBoardDetailMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventAreaBoardDetail>.Codec _map_eventAreaBoardDetailMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventAreaBoardDetail>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventAreaBoardDetail.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventAreaBoardDetail> eventAreaBoardDetailMap_ = new pbc::MapField<int, global::fat.rawdata.EventAreaBoardDetail>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventAreaBoardDetail> EventAreaBoardDetailMap {
      get { return eventAreaBoardDetailMap_; }
    }

    /// <summary>Field number for the "EventAreaBoardDetailMapAB" field.</summary>
    public const int EventAreaBoardDetailMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventAreaBoardDetailMapABValue>.Codec _map_eventAreaBoardDetailMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventAreaBoardDetailMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventAreaBoardDetailMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventAreaBoardDetailMapABValue> eventAreaBoardDetailMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventAreaBoardDetailMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventAreaBoardDetailMapABValue> EventAreaBoardDetailMapAB {
      get { return eventAreaBoardDetailMapAB_; }
    }

    /// <summary>Field number for the "EventAreaBoardDetailMapABPatch" field.</summary>
    public const int EventAreaBoardDetailMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventAreaBoardDetailMapABValue>.Codec _map_eventAreaBoardDetailMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventAreaBoardDetailMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventAreaBoardDetailMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventAreaBoardDetailMapABValue> eventAreaBoardDetailMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventAreaBoardDetailMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventAreaBoardDetailMapABValue> EventAreaBoardDetailMapABPatch {
      get { return eventAreaBoardDetailMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventAreaBoardDetailConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventAreaBoardDetailConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventAreaBoardDetailMap.Equals(other.EventAreaBoardDetailMap)) return false;
      if (!EventAreaBoardDetailMapAB.Equals(other.EventAreaBoardDetailMapAB)) return false;
      if (!EventAreaBoardDetailMapABPatch.Equals(other.EventAreaBoardDetailMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventAreaBoardDetailMap.GetHashCode();
      hash ^= EventAreaBoardDetailMapAB.GetHashCode();
      hash ^= EventAreaBoardDetailMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventAreaBoardDetailMap_.WriteTo(output, _map_eventAreaBoardDetailMap_codec);
      eventAreaBoardDetailMapAB_.WriteTo(output, _map_eventAreaBoardDetailMapAB_codec);
      eventAreaBoardDetailMapABPatch_.WriteTo(output, _map_eventAreaBoardDetailMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventAreaBoardDetailMap_.WriteTo(ref output, _map_eventAreaBoardDetailMap_codec);
      eventAreaBoardDetailMapAB_.WriteTo(ref output, _map_eventAreaBoardDetailMapAB_codec);
      eventAreaBoardDetailMapABPatch_.WriteTo(ref output, _map_eventAreaBoardDetailMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventAreaBoardDetailMap_.CalculateSize(_map_eventAreaBoardDetailMap_codec);
      size += eventAreaBoardDetailMapAB_.CalculateSize(_map_eventAreaBoardDetailMapAB_codec);
      size += eventAreaBoardDetailMapABPatch_.CalculateSize(_map_eventAreaBoardDetailMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventAreaBoardDetailConf other) {
      if (other == null) {
        return;
      }
      eventAreaBoardDetailMap_.Add(other.eventAreaBoardDetailMap_);
      eventAreaBoardDetailMapAB_.Add(other.eventAreaBoardDetailMapAB_);
      eventAreaBoardDetailMapABPatch_.Add(other.eventAreaBoardDetailMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventAreaBoardDetailMap_.AddEntriesFrom(input, _map_eventAreaBoardDetailMap_codec);
            break;
          }
          case 18: {
            eventAreaBoardDetailMapAB_.AddEntriesFrom(input, _map_eventAreaBoardDetailMapAB_codec);
            break;
          }
          case 26: {
            eventAreaBoardDetailMapABPatch_.AddEntriesFrom(input, _map_eventAreaBoardDetailMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventAreaBoardDetailMap_.AddEntriesFrom(ref input, _map_eventAreaBoardDetailMap_codec);
            break;
          }
          case 18: {
            eventAreaBoardDetailMapAB_.AddEntriesFrom(ref input, _map_eventAreaBoardDetailMapAB_codec);
            break;
          }
          case 26: {
            eventAreaBoardDetailMapABPatch_.AddEntriesFrom(ref input, _map_eventAreaBoardDetailMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
