// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventWeeklyTaskConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventWeeklyTaskConf.proto</summary>
  public static partial class EventWeeklyTaskConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventWeeklyTaskConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventWeeklyTaskConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiFyYXdkYXRhL0V2ZW50V2Vla2x5VGFza0NvbmYucHJvdG8SB3Jhd2RhdGEi",
            "dQoPRXZlbnRXZWVrbHlUYXNrEgoKAmlkGAEgASgFEgwKBGRlc2MYBiABKAkS",
            "DgoGZGV0YWlsGAIgASgFEhIKCmV2ZW50VGhlbWUYAyABKAUSEwoLcmVzdWx0",
            "VGhlbWUYBCABKAUSDwoHdG9rZW5JZBgFIAMoBSLIAQoZRXZlbnRXZWVrbHlU",
            "YXNrTWFwQUJWYWx1ZRJWChJFdmVudFdlZWtseVRhc2tNYXAYASADKAsyOi5y",
            "YXdkYXRhLkV2ZW50V2Vla2x5VGFza01hcEFCVmFsdWUuRXZlbnRXZWVrbHlU",
            "YXNrTWFwRW50cnkaUwoXRXZlbnRXZWVrbHlUYXNrTWFwRW50cnkSCwoDa2V5",
            "GAEgASgFEicKBXZhbHVlGAIgASgLMhgucmF3ZGF0YS5FdmVudFdlZWtseVRh",
            "c2s6AjgBIrkEChNFdmVudFdlZWtseVRhc2tDb25mElAKEkV2ZW50V2Vla2x5",
            "VGFza01hcBgBIAMoCzI0LnJhd2RhdGEuRXZlbnRXZWVrbHlUYXNrQ29uZi5F",
            "dmVudFdlZWtseVRhc2tNYXBFbnRyeRJUChRFdmVudFdlZWtseVRhc2tNYXBB",
            "QhgCIAMoCzI2LnJhd2RhdGEuRXZlbnRXZWVrbHlUYXNrQ29uZi5FdmVudFdl",
            "ZWtseVRhc2tNYXBBQkVudHJ5El4KGUV2ZW50V2Vla2x5VGFza01hcEFCUGF0",
            "Y2gYAyADKAsyOy5yYXdkYXRhLkV2ZW50V2Vla2x5VGFza0NvbmYuRXZlbnRX",
            "ZWVrbHlUYXNrTWFwQUJQYXRjaEVudHJ5GlMKF0V2ZW50V2Vla2x5VGFza01h",
            "cEVudHJ5EgsKA2tleRgBIAEoBRInCgV2YWx1ZRgCIAEoCzIYLnJhd2RhdGEu",
            "RXZlbnRXZWVrbHlUYXNrOgI4ARpfChlFdmVudFdlZWtseVRhc2tNYXBBQkVu",
            "dHJ5EgsKA2tleRgBIAEoCRIxCgV2YWx1ZRgCIAEoCzIiLnJhd2RhdGEuRXZl",
            "bnRXZWVrbHlUYXNrTWFwQUJWYWx1ZToCOAEaZAoeRXZlbnRXZWVrbHlUYXNr",
            "TWFwQUJQYXRjaEVudHJ5EgsKA2tleRgBIAEoCRIxCgV2YWx1ZRgCIAEoCzIi",
            "LnJhd2RhdGEuRXZlbnRXZWVrbHlUYXNrTWFwQUJWYWx1ZToCOAFCPVotZ2l0",
            "bGFiLmZ1bnBsdXMuaW8vZmF0L2NvbmYvZ2VuL2dvbGFuZy9yYXdkYXRhqgIL",
            "ZmF0LnJhd2RhdGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventWeeklyTask), global::fat.rawdata.EventWeeklyTask.Parser, new[]{ "Id", "Desc", "Detail", "EventTheme", "ResultTheme", "TokenId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventWeeklyTaskMapABValue), global::fat.rawdata.EventWeeklyTaskMapABValue.Parser, new[]{ "EventWeeklyTaskMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventWeeklyTaskConf), global::fat.rawdata.EventWeeklyTaskConf.Parser, new[]{ "EventWeeklyTaskMap", "EventWeeklyTaskMapAB", "EventWeeklyTaskMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventWeeklyTask",table="EventWeeklyTaskMap",table_wrapper="EventWeeklyTaskConf",map="true",map_key_type="int32",data="EventWeeklyTaskConf")
  /// annotation@ab(table_ab="EventWeeklyTaskMapAB",table_ab_patch="EventWeeklyTaskMapABPatch",table_ab_value="EventWeeklyTaskMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventWeeklyTask(id="id")
  /// </summary>
  public sealed partial class EventWeeklyTask : pb::IMessage<EventWeeklyTask>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventWeeklyTask> _parser = new pb::MessageParser<EventWeeklyTask>(() => new EventWeeklyTask());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventWeeklyTask> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventWeeklyTaskConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWeeklyTask() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWeeklyTask(EventWeeklyTask other) : this() {
      id_ = other.id_;
      desc_ = other.desc_;
      detail_ = other.detail_;
      eventTheme_ = other.eventTheme_;
      resultTheme_ = other.resultTheme_;
      tokenId_ = other.tokenId_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWeeklyTask Clone() {
      return new EventWeeklyTask(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 活动模版id
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "desc" field.</summary>
    public const int DescFieldNumber = 6;
    private string desc_ = "";
    /// <summary>
    /// 模版描述
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Desc {
      get { return desc_; }
      set {
        desc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "detail" field.</summary>
    public const int DetailFieldNumber = 2;
    private int detail_;
    /// <summary>
    /// 活动详情
    /// (GradeIndexMapping.id)
    /// (EventWeeklyTaskDetail.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Detail {
      get { return detail_; }
      set {
        detail_ = value;
      }
    }

    /// <summary>Field number for the "eventTheme" field.</summary>
    public const int EventThemeFieldNumber = 3;
    private int eventTheme_;
    /// <summary>
    /// 活动主题弹窗Id
    /// （EventTheme.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EventTheme {
      get { return eventTheme_; }
      set {
        eventTheme_ = value;
      }
    }

    /// <summary>Field number for the "resultTheme" field.</summary>
    public const int ResultThemeFieldNumber = 4;
    private int resultTheme_;
    /// <summary>
    /// 结算界面
    /// （EventTheme.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ResultTheme {
      get { return resultTheme_; }
      set {
        resultTheme_ = value;
      }
    }

    /// <summary>Field number for the "tokenId" field.</summary>
    public const int TokenIdFieldNumber = 5;
    private static readonly pb::FieldCodec<int> _repeated_tokenId_codec
        = pb::FieldCodec.ForInt32(42);
    private readonly pbc::RepeatedField<int> tokenId_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// tokenId列表
    /// 按序对应每阶段的token
    /// （ObjBasic.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> TokenId {
      get { return tokenId_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventWeeklyTask);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventWeeklyTask other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Desc != other.Desc) return false;
      if (Detail != other.Detail) return false;
      if (EventTheme != other.EventTheme) return false;
      if (ResultTheme != other.ResultTheme) return false;
      if(!tokenId_.Equals(other.tokenId_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Desc.Length != 0) hash ^= Desc.GetHashCode();
      if (Detail != 0) hash ^= Detail.GetHashCode();
      if (EventTheme != 0) hash ^= EventTheme.GetHashCode();
      if (ResultTheme != 0) hash ^= ResultTheme.GetHashCode();
      hash ^= tokenId_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Detail != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Detail);
      }
      if (EventTheme != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(EventTheme);
      }
      if (ResultTheme != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ResultTheme);
      }
      tokenId_.WriteTo(output, _repeated_tokenId_codec);
      if (Desc.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Desc);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Detail != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Detail);
      }
      if (EventTheme != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(EventTheme);
      }
      if (ResultTheme != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ResultTheme);
      }
      tokenId_.WriteTo(ref output, _repeated_tokenId_codec);
      if (Desc.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Desc);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Desc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Desc);
      }
      if (Detail != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Detail);
      }
      if (EventTheme != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EventTheme);
      }
      if (ResultTheme != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ResultTheme);
      }
      size += tokenId_.CalculateSize(_repeated_tokenId_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventWeeklyTask other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Desc.Length != 0) {
        Desc = other.Desc;
      }
      if (other.Detail != 0) {
        Detail = other.Detail;
      }
      if (other.EventTheme != 0) {
        EventTheme = other.EventTheme;
      }
      if (other.ResultTheme != 0) {
        ResultTheme = other.ResultTheme;
      }
      tokenId_.Add(other.tokenId_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Detail = input.ReadInt32();
            break;
          }
          case 24: {
            EventTheme = input.ReadInt32();
            break;
          }
          case 32: {
            ResultTheme = input.ReadInt32();
            break;
          }
          case 42:
          case 40: {
            tokenId_.AddEntriesFrom(input, _repeated_tokenId_codec);
            break;
          }
          case 50: {
            Desc = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Detail = input.ReadInt32();
            break;
          }
          case 24: {
            EventTheme = input.ReadInt32();
            break;
          }
          case 32: {
            ResultTheme = input.ReadInt32();
            break;
          }
          case 42:
          case 40: {
            tokenId_.AddEntriesFrom(ref input, _repeated_tokenId_codec);
            break;
          }
          case 50: {
            Desc = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventWeeklyTaskMapABValue : pb::IMessage<EventWeeklyTaskMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventWeeklyTaskMapABValue> _parser = new pb::MessageParser<EventWeeklyTaskMapABValue>(() => new EventWeeklyTaskMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventWeeklyTaskMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventWeeklyTaskConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWeeklyTaskMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWeeklyTaskMapABValue(EventWeeklyTaskMapABValue other) : this() {
      eventWeeklyTaskMap_ = other.eventWeeklyTaskMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWeeklyTaskMapABValue Clone() {
      return new EventWeeklyTaskMapABValue(this);
    }

    /// <summary>Field number for the "EventWeeklyTaskMap" field.</summary>
    public const int EventWeeklyTaskMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventWeeklyTask>.Codec _map_eventWeeklyTaskMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventWeeklyTask>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventWeeklyTask.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventWeeklyTask> eventWeeklyTaskMap_ = new pbc::MapField<int, global::fat.rawdata.EventWeeklyTask>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventWeeklyTask> EventWeeklyTaskMap {
      get { return eventWeeklyTaskMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventWeeklyTaskMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventWeeklyTaskMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventWeeklyTaskMap.Equals(other.EventWeeklyTaskMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventWeeklyTaskMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventWeeklyTaskMap_.WriteTo(output, _map_eventWeeklyTaskMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventWeeklyTaskMap_.WriteTo(ref output, _map_eventWeeklyTaskMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventWeeklyTaskMap_.CalculateSize(_map_eventWeeklyTaskMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventWeeklyTaskMapABValue other) {
      if (other == null) {
        return;
      }
      eventWeeklyTaskMap_.Add(other.eventWeeklyTaskMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventWeeklyTaskMap_.AddEntriesFrom(input, _map_eventWeeklyTaskMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventWeeklyTaskMap_.AddEntriesFrom(ref input, _map_eventWeeklyTaskMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventWeeklyTaskConf : pb::IMessage<EventWeeklyTaskConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventWeeklyTaskConf> _parser = new pb::MessageParser<EventWeeklyTaskConf>(() => new EventWeeklyTaskConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventWeeklyTaskConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventWeeklyTaskConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWeeklyTaskConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWeeklyTaskConf(EventWeeklyTaskConf other) : this() {
      eventWeeklyTaskMap_ = other.eventWeeklyTaskMap_.Clone();
      eventWeeklyTaskMapAB_ = other.eventWeeklyTaskMapAB_.Clone();
      eventWeeklyTaskMapABPatch_ = other.eventWeeklyTaskMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWeeklyTaskConf Clone() {
      return new EventWeeklyTaskConf(this);
    }

    /// <summary>Field number for the "EventWeeklyTaskMap" field.</summary>
    public const int EventWeeklyTaskMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventWeeklyTask>.Codec _map_eventWeeklyTaskMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventWeeklyTask>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventWeeklyTask.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventWeeklyTask> eventWeeklyTaskMap_ = new pbc::MapField<int, global::fat.rawdata.EventWeeklyTask>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventWeeklyTask> EventWeeklyTaskMap {
      get { return eventWeeklyTaskMap_; }
    }

    /// <summary>Field number for the "EventWeeklyTaskMapAB" field.</summary>
    public const int EventWeeklyTaskMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventWeeklyTaskMapABValue>.Codec _map_eventWeeklyTaskMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventWeeklyTaskMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventWeeklyTaskMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventWeeklyTaskMapABValue> eventWeeklyTaskMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventWeeklyTaskMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventWeeklyTaskMapABValue> EventWeeklyTaskMapAB {
      get { return eventWeeklyTaskMapAB_; }
    }

    /// <summary>Field number for the "EventWeeklyTaskMapABPatch" field.</summary>
    public const int EventWeeklyTaskMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventWeeklyTaskMapABValue>.Codec _map_eventWeeklyTaskMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventWeeklyTaskMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventWeeklyTaskMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventWeeklyTaskMapABValue> eventWeeklyTaskMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventWeeklyTaskMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventWeeklyTaskMapABValue> EventWeeklyTaskMapABPatch {
      get { return eventWeeklyTaskMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventWeeklyTaskConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventWeeklyTaskConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventWeeklyTaskMap.Equals(other.EventWeeklyTaskMap)) return false;
      if (!EventWeeklyTaskMapAB.Equals(other.EventWeeklyTaskMapAB)) return false;
      if (!EventWeeklyTaskMapABPatch.Equals(other.EventWeeklyTaskMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventWeeklyTaskMap.GetHashCode();
      hash ^= EventWeeklyTaskMapAB.GetHashCode();
      hash ^= EventWeeklyTaskMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventWeeklyTaskMap_.WriteTo(output, _map_eventWeeklyTaskMap_codec);
      eventWeeklyTaskMapAB_.WriteTo(output, _map_eventWeeklyTaskMapAB_codec);
      eventWeeklyTaskMapABPatch_.WriteTo(output, _map_eventWeeklyTaskMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventWeeklyTaskMap_.WriteTo(ref output, _map_eventWeeklyTaskMap_codec);
      eventWeeklyTaskMapAB_.WriteTo(ref output, _map_eventWeeklyTaskMapAB_codec);
      eventWeeklyTaskMapABPatch_.WriteTo(ref output, _map_eventWeeklyTaskMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventWeeklyTaskMap_.CalculateSize(_map_eventWeeklyTaskMap_codec);
      size += eventWeeklyTaskMapAB_.CalculateSize(_map_eventWeeklyTaskMapAB_codec);
      size += eventWeeklyTaskMapABPatch_.CalculateSize(_map_eventWeeklyTaskMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventWeeklyTaskConf other) {
      if (other == null) {
        return;
      }
      eventWeeklyTaskMap_.Add(other.eventWeeklyTaskMap_);
      eventWeeklyTaskMapAB_.Add(other.eventWeeklyTaskMapAB_);
      eventWeeklyTaskMapABPatch_.Add(other.eventWeeklyTaskMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventWeeklyTaskMap_.AddEntriesFrom(input, _map_eventWeeklyTaskMap_codec);
            break;
          }
          case 18: {
            eventWeeklyTaskMapAB_.AddEntriesFrom(input, _map_eventWeeklyTaskMapAB_codec);
            break;
          }
          case 26: {
            eventWeeklyTaskMapABPatch_.AddEntriesFrom(input, _map_eventWeeklyTaskMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventWeeklyTaskMap_.AddEntriesFrom(ref input, _map_eventWeeklyTaskMap_codec);
            break;
          }
          case 18: {
            eventWeeklyTaskMapAB_.AddEntriesFrom(ref input, _map_eventWeeklyTaskMapAB_codec);
            break;
          }
          case 26: {
            eventWeeklyTaskMapABPatch_.AddEntriesFrom(ref input, _map_eventWeeklyTaskMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
