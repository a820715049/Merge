// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventWishingRecycleConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventWishingRecycleConf.proto</summary>
  public static partial class EventWishingRecycleConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventWishingRecycleConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventWishingRecycleConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiVyYXdkYXRhL0V2ZW50V2lzaGluZ1JlY3ljbGVDb25mLnByb3RvEgdyYXdk",
            "YXRhIlIKE0V2ZW50V2lzaGluZ1JlY3ljbGUSCgoCaWQYASABKAUSFgoOZGlm",
            "ZmVyZW5jZUxlZnQYAiABKAUSFwoPZGlmZmVyZW5jZVJpZ2h0GAMgASgFIuAB",
            "Ch1FdmVudFdpc2hpbmdSZWN5Y2xlTWFwQUJWYWx1ZRJiChZFdmVudFdpc2hp",
            "bmdSZWN5Y2xlTWFwGAEgAygLMkIucmF3ZGF0YS5FdmVudFdpc2hpbmdSZWN5",
            "Y2xlTWFwQUJWYWx1ZS5FdmVudFdpc2hpbmdSZWN5Y2xlTWFwRW50cnkaWwob",
            "RXZlbnRXaXNoaW5nUmVjeWNsZU1hcEVudHJ5EgsKA2tleRgBIAEoBRIrCgV2",
            "YWx1ZRgCIAEoCzIcLnJhd2RhdGEuRXZlbnRXaXNoaW5nUmVjeWNsZToCOAEi",
            "+QQKF0V2ZW50V2lzaGluZ1JlY3ljbGVDb25mElwKFkV2ZW50V2lzaGluZ1Jl",
            "Y3ljbGVNYXAYASADKAsyPC5yYXdkYXRhLkV2ZW50V2lzaGluZ1JlY3ljbGVD",
            "b25mLkV2ZW50V2lzaGluZ1JlY3ljbGVNYXBFbnRyeRJgChhFdmVudFdpc2hp",
            "bmdSZWN5Y2xlTWFwQUIYAiADKAsyPi5yYXdkYXRhLkV2ZW50V2lzaGluZ1Jl",
            "Y3ljbGVDb25mLkV2ZW50V2lzaGluZ1JlY3ljbGVNYXBBQkVudHJ5EmoKHUV2",
            "ZW50V2lzaGluZ1JlY3ljbGVNYXBBQlBhdGNoGAMgAygLMkMucmF3ZGF0YS5F",
            "dmVudFdpc2hpbmdSZWN5Y2xlQ29uZi5FdmVudFdpc2hpbmdSZWN5Y2xlTWFw",
            "QUJQYXRjaEVudHJ5GlsKG0V2ZW50V2lzaGluZ1JlY3ljbGVNYXBFbnRyeRIL",
            "CgNrZXkYASABKAUSKwoFdmFsdWUYAiABKAsyHC5yYXdkYXRhLkV2ZW50V2lz",
            "aGluZ1JlY3ljbGU6AjgBGmcKHUV2ZW50V2lzaGluZ1JlY3ljbGVNYXBBQkVu",
            "dHJ5EgsKA2tleRgBIAEoCRI1CgV2YWx1ZRgCIAEoCzImLnJhd2RhdGEuRXZl",
            "bnRXaXNoaW5nUmVjeWNsZU1hcEFCVmFsdWU6AjgBGmwKIkV2ZW50V2lzaGlu",
            "Z1JlY3ljbGVNYXBBQlBhdGNoRW50cnkSCwoDa2V5GAEgASgJEjUKBXZhbHVl",
            "GAIgASgLMiYucmF3ZGF0YS5FdmVudFdpc2hpbmdSZWN5Y2xlTWFwQUJWYWx1",
            "ZToCOAFCPVotZ2l0bGFiLmZ1bnBsdXMuaW8vZmF0L2NvbmYvZ2VuL2dvbGFu",
            "Zy9yYXdkYXRhqgILZmF0LnJhd2RhdGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventWishingRecycle), global::fat.rawdata.EventWishingRecycle.Parser, new[]{ "Id", "DifferenceLeft", "DifferenceRight" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventWishingRecycleMapABValue), global::fat.rawdata.EventWishingRecycleMapABValue.Parser, new[]{ "EventWishingRecycleMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventWishingRecycleConf), global::fat.rawdata.EventWishingRecycleConf.Parser, new[]{ "EventWishingRecycleMap", "EventWishingRecycleMapAB", "EventWishingRecycleMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventWishingRecycle",table="EventWishingRecycleMap",table_wrapper="EventWishingRecycleConf",map="true",map_key_type="int32",data="EventWishingRecycleConf")
  /// annotation@ab(table_ab="EventWishingRecycleMapAB",table_ab_patch="EventWishingRecycleMapABPatch",table_ab_value="EventWishingRecycleMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventWishingRecycle(id="id")
  /// </summary>
  public sealed partial class EventWishingRecycle : pb::IMessage<EventWishingRecycle>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventWishingRecycle> _parser = new pb::MessageParser<EventWishingRecycle>(() => new EventWishingRecycle());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventWishingRecycle> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventWishingRecycleConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishingRecycle() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishingRecycle(EventWishingRecycle other) : this() {
      id_ = other.id_;
      differenceLeft_ = other.differenceLeft_;
      differenceRight_ = other.differenceRight_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishingRecycle Clone() {
      return new EventWishingRecycle(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 槽位id
    /// (OrderRandomer.id)
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "differenceLeft" field.</summary>
    public const int DifferenceLeftFieldNumber = 2;
    private int differenceLeft_;
    /// <summary>
    /// 回收棋子槽位难度
    /// 左区间
    /// （百分数）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DifferenceLeft {
      get { return differenceLeft_; }
      set {
        differenceLeft_ = value;
      }
    }

    /// <summary>Field number for the "differenceRight" field.</summary>
    public const int DifferenceRightFieldNumber = 3;
    private int differenceRight_;
    /// <summary>
    /// 回收棋子槽位难度
    /// 右区间
    /// （百分数）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DifferenceRight {
      get { return differenceRight_; }
      set {
        differenceRight_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventWishingRecycle);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventWishingRecycle other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (DifferenceLeft != other.DifferenceLeft) return false;
      if (DifferenceRight != other.DifferenceRight) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (DifferenceLeft != 0) hash ^= DifferenceLeft.GetHashCode();
      if (DifferenceRight != 0) hash ^= DifferenceRight.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (DifferenceLeft != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(DifferenceLeft);
      }
      if (DifferenceRight != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(DifferenceRight);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (DifferenceLeft != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(DifferenceLeft);
      }
      if (DifferenceRight != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(DifferenceRight);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (DifferenceLeft != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DifferenceLeft);
      }
      if (DifferenceRight != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DifferenceRight);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventWishingRecycle other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.DifferenceLeft != 0) {
        DifferenceLeft = other.DifferenceLeft;
      }
      if (other.DifferenceRight != 0) {
        DifferenceRight = other.DifferenceRight;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            DifferenceLeft = input.ReadInt32();
            break;
          }
          case 24: {
            DifferenceRight = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            DifferenceLeft = input.ReadInt32();
            break;
          }
          case 24: {
            DifferenceRight = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventWishingRecycleMapABValue : pb::IMessage<EventWishingRecycleMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventWishingRecycleMapABValue> _parser = new pb::MessageParser<EventWishingRecycleMapABValue>(() => new EventWishingRecycleMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventWishingRecycleMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventWishingRecycleConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishingRecycleMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishingRecycleMapABValue(EventWishingRecycleMapABValue other) : this() {
      eventWishingRecycleMap_ = other.eventWishingRecycleMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishingRecycleMapABValue Clone() {
      return new EventWishingRecycleMapABValue(this);
    }

    /// <summary>Field number for the "EventWishingRecycleMap" field.</summary>
    public const int EventWishingRecycleMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventWishingRecycle>.Codec _map_eventWishingRecycleMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventWishingRecycle>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventWishingRecycle.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventWishingRecycle> eventWishingRecycleMap_ = new pbc::MapField<int, global::fat.rawdata.EventWishingRecycle>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventWishingRecycle> EventWishingRecycleMap {
      get { return eventWishingRecycleMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventWishingRecycleMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventWishingRecycleMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventWishingRecycleMap.Equals(other.EventWishingRecycleMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventWishingRecycleMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventWishingRecycleMap_.WriteTo(output, _map_eventWishingRecycleMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventWishingRecycleMap_.WriteTo(ref output, _map_eventWishingRecycleMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventWishingRecycleMap_.CalculateSize(_map_eventWishingRecycleMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventWishingRecycleMapABValue other) {
      if (other == null) {
        return;
      }
      eventWishingRecycleMap_.Add(other.eventWishingRecycleMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventWishingRecycleMap_.AddEntriesFrom(input, _map_eventWishingRecycleMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventWishingRecycleMap_.AddEntriesFrom(ref input, _map_eventWishingRecycleMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventWishingRecycleConf : pb::IMessage<EventWishingRecycleConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventWishingRecycleConf> _parser = new pb::MessageParser<EventWishingRecycleConf>(() => new EventWishingRecycleConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventWishingRecycleConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventWishingRecycleConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishingRecycleConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishingRecycleConf(EventWishingRecycleConf other) : this() {
      eventWishingRecycleMap_ = other.eventWishingRecycleMap_.Clone();
      eventWishingRecycleMapAB_ = other.eventWishingRecycleMapAB_.Clone();
      eventWishingRecycleMapABPatch_ = other.eventWishingRecycleMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishingRecycleConf Clone() {
      return new EventWishingRecycleConf(this);
    }

    /// <summary>Field number for the "EventWishingRecycleMap" field.</summary>
    public const int EventWishingRecycleMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventWishingRecycle>.Codec _map_eventWishingRecycleMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventWishingRecycle>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventWishingRecycle.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventWishingRecycle> eventWishingRecycleMap_ = new pbc::MapField<int, global::fat.rawdata.EventWishingRecycle>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventWishingRecycle> EventWishingRecycleMap {
      get { return eventWishingRecycleMap_; }
    }

    /// <summary>Field number for the "EventWishingRecycleMapAB" field.</summary>
    public const int EventWishingRecycleMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventWishingRecycleMapABValue>.Codec _map_eventWishingRecycleMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventWishingRecycleMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventWishingRecycleMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventWishingRecycleMapABValue> eventWishingRecycleMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventWishingRecycleMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventWishingRecycleMapABValue> EventWishingRecycleMapAB {
      get { return eventWishingRecycleMapAB_; }
    }

    /// <summary>Field number for the "EventWishingRecycleMapABPatch" field.</summary>
    public const int EventWishingRecycleMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventWishingRecycleMapABValue>.Codec _map_eventWishingRecycleMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventWishingRecycleMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventWishingRecycleMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventWishingRecycleMapABValue> eventWishingRecycleMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventWishingRecycleMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventWishingRecycleMapABValue> EventWishingRecycleMapABPatch {
      get { return eventWishingRecycleMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventWishingRecycleConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventWishingRecycleConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventWishingRecycleMap.Equals(other.EventWishingRecycleMap)) return false;
      if (!EventWishingRecycleMapAB.Equals(other.EventWishingRecycleMapAB)) return false;
      if (!EventWishingRecycleMapABPatch.Equals(other.EventWishingRecycleMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventWishingRecycleMap.GetHashCode();
      hash ^= EventWishingRecycleMapAB.GetHashCode();
      hash ^= EventWishingRecycleMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventWishingRecycleMap_.WriteTo(output, _map_eventWishingRecycleMap_codec);
      eventWishingRecycleMapAB_.WriteTo(output, _map_eventWishingRecycleMapAB_codec);
      eventWishingRecycleMapABPatch_.WriteTo(output, _map_eventWishingRecycleMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventWishingRecycleMap_.WriteTo(ref output, _map_eventWishingRecycleMap_codec);
      eventWishingRecycleMapAB_.WriteTo(ref output, _map_eventWishingRecycleMapAB_codec);
      eventWishingRecycleMapABPatch_.WriteTo(ref output, _map_eventWishingRecycleMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventWishingRecycleMap_.CalculateSize(_map_eventWishingRecycleMap_codec);
      size += eventWishingRecycleMapAB_.CalculateSize(_map_eventWishingRecycleMapAB_codec);
      size += eventWishingRecycleMapABPatch_.CalculateSize(_map_eventWishingRecycleMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventWishingRecycleConf other) {
      if (other == null) {
        return;
      }
      eventWishingRecycleMap_.Add(other.eventWishingRecycleMap_);
      eventWishingRecycleMapAB_.Add(other.eventWishingRecycleMapAB_);
      eventWishingRecycleMapABPatch_.Add(other.eventWishingRecycleMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventWishingRecycleMap_.AddEntriesFrom(input, _map_eventWishingRecycleMap_codec);
            break;
          }
          case 18: {
            eventWishingRecycleMapAB_.AddEntriesFrom(input, _map_eventWishingRecycleMapAB_codec);
            break;
          }
          case 26: {
            eventWishingRecycleMapABPatch_.AddEntriesFrom(input, _map_eventWishingRecycleMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventWishingRecycleMap_.AddEntriesFrom(ref input, _map_eventWishingRecycleMap_codec);
            break;
          }
          case 18: {
            eventWishingRecycleMapAB_.AddEntriesFrom(ref input, _map_eventWishingRecycleMapAB_codec);
            break;
          }
          case 26: {
            eventWishingRecycleMapABPatch_.AddEntriesFrom(ref input, _map_eventWishingRecycleMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
