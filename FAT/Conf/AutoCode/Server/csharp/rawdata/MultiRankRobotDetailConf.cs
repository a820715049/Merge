// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/MultiRankRobotDetailConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/MultiRankRobotDetailConf.proto</summary>
  public static partial class MultiRankRobotDetailConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/MultiRankRobotDetailConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MultiRankRobotDetailConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiZyYXdkYXRhL011bHRpUmFua1JvYm90RGV0YWlsQ29uZi5wcm90bxIHcmF3",
            "ZGF0YSL7AQoUTXVsdGlSYW5rUm9ib3REZXRhaWwSCgoCaWQYASABKAUSFwoP",
            "YWNjZWxNdWx0aXBsaWVyGAIgASgCEh0KFWFjY2xPZmZsaW5lTXVsdGlwbGll",
            "chgDIAEoAhIXCg9kZWNlbE11bHRpcGxpZXIYBCABKAISHgoWZGVjZWxPZmZs",
            "aW5lTXVsdGlwbGllchgFIAEoAhIRCglpZkNoYXNpbmcYBiABKAgSDQoFbWF4",
            "UHQYByABKAUSFwoPb2ZmbGluZVB0R3Jvd3RoGAggASgJEhUKDXB0R3Jvd3Ro",
            "UmFuZ2UYCSADKAUSFAoMcHRHcm93dGhUaW1lGAogAygFIuYBCh5NdWx0aVJh",
            "bmtSb2JvdERldGFpbE1hcEFCVmFsdWUSZQoXTXVsdGlSYW5rUm9ib3REZXRh",
            "aWxNYXAYASADKAsyRC5yYXdkYXRhLk11bHRpUmFua1JvYm90RGV0YWlsTWFw",
            "QUJWYWx1ZS5NdWx0aVJhbmtSb2JvdERldGFpbE1hcEVudHJ5Gl0KHE11bHRp",
            "UmFua1JvYm90RGV0YWlsTWFwRW50cnkSCwoDa2V5GAEgASgFEiwKBXZhbHVl",
            "GAIgASgLMh0ucmF3ZGF0YS5NdWx0aVJhbmtSb2JvdERldGFpbDoCOAEiiQUK",
            "GE11bHRpUmFua1JvYm90RGV0YWlsQ29uZhJfChdNdWx0aVJhbmtSb2JvdERl",
            "dGFpbE1hcBgBIAMoCzI+LnJhd2RhdGEuTXVsdGlSYW5rUm9ib3REZXRhaWxD",
            "b25mLk11bHRpUmFua1JvYm90RGV0YWlsTWFwRW50cnkSYwoZTXVsdGlSYW5r",
            "Um9ib3REZXRhaWxNYXBBQhgCIAMoCzJALnJhd2RhdGEuTXVsdGlSYW5rUm9i",
            "b3REZXRhaWxDb25mLk11bHRpUmFua1JvYm90RGV0YWlsTWFwQUJFbnRyeRJt",
            "Ch5NdWx0aVJhbmtSb2JvdERldGFpbE1hcEFCUGF0Y2gYAyADKAsyRS5yYXdk",
            "YXRhLk11bHRpUmFua1JvYm90RGV0YWlsQ29uZi5NdWx0aVJhbmtSb2JvdERl",
            "dGFpbE1hcEFCUGF0Y2hFbnRyeRpdChxNdWx0aVJhbmtSb2JvdERldGFpbE1h",
            "cEVudHJ5EgsKA2tleRgBIAEoBRIsCgV2YWx1ZRgCIAEoCzIdLnJhd2RhdGEu",
            "TXVsdGlSYW5rUm9ib3REZXRhaWw6AjgBGmkKHk11bHRpUmFua1JvYm90RGV0",
            "YWlsTWFwQUJFbnRyeRILCgNrZXkYASABKAkSNgoFdmFsdWUYAiABKAsyJy5y",
            "YXdkYXRhLk11bHRpUmFua1JvYm90RGV0YWlsTWFwQUJWYWx1ZToCOAEabgoj",
            "TXVsdGlSYW5rUm9ib3REZXRhaWxNYXBBQlBhdGNoRW50cnkSCwoDa2V5GAEg",
            "ASgJEjYKBXZhbHVlGAIgASgLMicucmF3ZGF0YS5NdWx0aVJhbmtSb2JvdERl",
            "dGFpbE1hcEFCVmFsdWU6AjgBQj1aLWdpdGxhYi5mdW5wbHVzLmlvL2ZhdC9j",
            "b25mL2dlbi9nb2xhbmcvcmF3ZGF0YaoCC2ZhdC5yYXdkYXRhYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.MultiRankRobotDetail), global::fat.rawdata.MultiRankRobotDetail.Parser, new[]{ "Id", "AccelMultiplier", "AcclOfflineMultiplier", "DecelMultiplier", "DecelOfflineMultiplier", "IfChasing", "MaxPt", "OfflinePtGrowth", "PtGrowthRange", "PtGrowthTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.MultiRankRobotDetailMapABValue), global::fat.rawdata.MultiRankRobotDetailMapABValue.Parser, new[]{ "MultiRankRobotDetailMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.MultiRankRobotDetailConf), global::fat.rawdata.MultiRankRobotDetailConf.Parser, new[]{ "MultiRankRobotDetailMap", "MultiRankRobotDetailMapAB", "MultiRankRobotDetailMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="MultiRankRobotDetail",table="MultiRankRobotDetailMap",table_wrapper="MultiRankRobotDetailConf",map="true",map_key_type="int32",data="MultiRankRobotDetailConf")
  /// annotation@ab(table_ab="MultiRankRobotDetailMapAB",table_ab_patch="MultiRankRobotDetailMapABPatch",table_ab_value="MultiRankRobotDetailMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@MultiRankRobotDetail(id="id")
  /// </summary>
  public sealed partial class MultiRankRobotDetail : pb::IMessage<MultiRankRobotDetail>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MultiRankRobotDetail> _parser = new pb::MessageParser<MultiRankRobotDetail>(() => new MultiRankRobotDetail());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MultiRankRobotDetail> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.MultiRankRobotDetailConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiRankRobotDetail() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiRankRobotDetail(MultiRankRobotDetail other) : this() {
      id_ = other.id_;
      accelMultiplier_ = other.accelMultiplier_;
      acclOfflineMultiplier_ = other.acclOfflineMultiplier_;
      decelMultiplier_ = other.decelMultiplier_;
      decelOfflineMultiplier_ = other.decelOfflineMultiplier_;
      ifChasing_ = other.ifChasing_;
      maxPt_ = other.maxPt_;
      offlinePtGrowth_ = other.offlinePtGrowth_;
      ptGrowthRange_ = other.ptGrowthRange_.Clone();
      ptGrowthTime_ = other.ptGrowthTime_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiRankRobotDetail Clone() {
      return new MultiRankRobotDetail(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 机器人id
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "accelMultiplier" field.</summary>
    public const int AccelMultiplierFieldNumber = 2;
    private float accelMultiplier_;
    /// <summary>
    /// 触发追分时，在线积分乘以的额外系数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float AccelMultiplier {
      get { return accelMultiplier_; }
      set {
        accelMultiplier_ = value;
      }
    }

    /// <summary>Field number for the "acclOfflineMultiplier" field.</summary>
    public const int AcclOfflineMultiplierFieldNumber = 3;
    private float acclOfflineMultiplier_;
    /// <summary>
    /// 触发追分时，离线积分乘以的额外系数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float AcclOfflineMultiplier {
      get { return acclOfflineMultiplier_; }
      set {
        acclOfflineMultiplier_ = value;
      }
    }

    /// <summary>Field number for the "decelMultiplier" field.</summary>
    public const int DecelMultiplierFieldNumber = 4;
    private float decelMultiplier_;
    /// <summary>
    /// 触发等分时，在线积分乘以的额外系数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float DecelMultiplier {
      get { return decelMultiplier_; }
      set {
        decelMultiplier_ = value;
      }
    }

    /// <summary>Field number for the "decelOfflineMultiplier" field.</summary>
    public const int DecelOfflineMultiplierFieldNumber = 5;
    private float decelOfflineMultiplier_;
    /// <summary>
    /// 触发等分时，离线积分乘以的额外系数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float DecelOfflineMultiplier {
      get { return decelOfflineMultiplier_; }
      set {
        decelOfflineMultiplier_ = value;
      }
    }

    /// <summary>Field number for the "ifChasing" field.</summary>
    public const int IfChasingFieldNumber = 6;
    private bool ifChasing_;
    /// <summary>
    /// 该bot是否会触发追分/等分逻辑
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IfChasing {
      get { return ifChasing_; }
      set {
        ifChasing_ = value;
      }
    }

    /// <summary>Field number for the "maxPt" field.</summary>
    public const int MaxPtFieldNumber = 7;
    private int maxPt_;
    /// <summary>
    /// 自动涨分最大分值
    /// （超过该分值后，不再自动涨分）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxPt {
      get { return maxPt_; }
      set {
        maxPt_ = value;
      }
    }

    /// <summary>Field number for the "offlinePtGrowth" field.</summary>
    public const int OfflinePtGrowthFieldNumber = 8;
    private string offlinePtGrowth_ = "";
    /// <summary>
    /// 离线涨分
    /// （秒:分，每N秒涨M分）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OfflinePtGrowth {
      get { return offlinePtGrowth_; }
      set {
        offlinePtGrowth_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ptGrowthRange" field.</summary>
    public const int PtGrowthRangeFieldNumber = 9;
    private static readonly pb::FieldCodec<int> _repeated_ptGrowthRange_codec
        = pb::FieldCodec.ForInt32(74);
    private readonly pbc::RepeatedField<int> ptGrowthRange_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 每次积分增长的范围
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> PtGrowthRange {
      get { return ptGrowthRange_; }
    }

    /// <summary>Field number for the "ptGrowthTime" field.</summary>
    public const int PtGrowthTimeFieldNumber = 10;
    private static readonly pb::FieldCodec<int> _repeated_ptGrowthTime_codec
        = pb::FieldCodec.ForInt32(82);
    private readonly pbc::RepeatedField<int> ptGrowthTime_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 每次积分增长的间隔时长
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> PtGrowthTime {
      get { return ptGrowthTime_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MultiRankRobotDetail);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MultiRankRobotDetail other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AccelMultiplier, other.AccelMultiplier)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AcclOfflineMultiplier, other.AcclOfflineMultiplier)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(DecelMultiplier, other.DecelMultiplier)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(DecelOfflineMultiplier, other.DecelOfflineMultiplier)) return false;
      if (IfChasing != other.IfChasing) return false;
      if (MaxPt != other.MaxPt) return false;
      if (OfflinePtGrowth != other.OfflinePtGrowth) return false;
      if(!ptGrowthRange_.Equals(other.ptGrowthRange_)) return false;
      if(!ptGrowthTime_.Equals(other.ptGrowthTime_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (AccelMultiplier != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AccelMultiplier);
      if (AcclOfflineMultiplier != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AcclOfflineMultiplier);
      if (DecelMultiplier != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(DecelMultiplier);
      if (DecelOfflineMultiplier != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(DecelOfflineMultiplier);
      if (IfChasing != false) hash ^= IfChasing.GetHashCode();
      if (MaxPt != 0) hash ^= MaxPt.GetHashCode();
      if (OfflinePtGrowth.Length != 0) hash ^= OfflinePtGrowth.GetHashCode();
      hash ^= ptGrowthRange_.GetHashCode();
      hash ^= ptGrowthTime_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (AccelMultiplier != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(AccelMultiplier);
      }
      if (AcclOfflineMultiplier != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(AcclOfflineMultiplier);
      }
      if (DecelMultiplier != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(DecelMultiplier);
      }
      if (DecelOfflineMultiplier != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(DecelOfflineMultiplier);
      }
      if (IfChasing != false) {
        output.WriteRawTag(48);
        output.WriteBool(IfChasing);
      }
      if (MaxPt != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(MaxPt);
      }
      if (OfflinePtGrowth.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(OfflinePtGrowth);
      }
      ptGrowthRange_.WriteTo(output, _repeated_ptGrowthRange_codec);
      ptGrowthTime_.WriteTo(output, _repeated_ptGrowthTime_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (AccelMultiplier != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(AccelMultiplier);
      }
      if (AcclOfflineMultiplier != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(AcclOfflineMultiplier);
      }
      if (DecelMultiplier != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(DecelMultiplier);
      }
      if (DecelOfflineMultiplier != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(DecelOfflineMultiplier);
      }
      if (IfChasing != false) {
        output.WriteRawTag(48);
        output.WriteBool(IfChasing);
      }
      if (MaxPt != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(MaxPt);
      }
      if (OfflinePtGrowth.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(OfflinePtGrowth);
      }
      ptGrowthRange_.WriteTo(ref output, _repeated_ptGrowthRange_codec);
      ptGrowthTime_.WriteTo(ref output, _repeated_ptGrowthTime_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (AccelMultiplier != 0F) {
        size += 1 + 4;
      }
      if (AcclOfflineMultiplier != 0F) {
        size += 1 + 4;
      }
      if (DecelMultiplier != 0F) {
        size += 1 + 4;
      }
      if (DecelOfflineMultiplier != 0F) {
        size += 1 + 4;
      }
      if (IfChasing != false) {
        size += 1 + 1;
      }
      if (MaxPt != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxPt);
      }
      if (OfflinePtGrowth.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OfflinePtGrowth);
      }
      size += ptGrowthRange_.CalculateSize(_repeated_ptGrowthRange_codec);
      size += ptGrowthTime_.CalculateSize(_repeated_ptGrowthTime_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MultiRankRobotDetail other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.AccelMultiplier != 0F) {
        AccelMultiplier = other.AccelMultiplier;
      }
      if (other.AcclOfflineMultiplier != 0F) {
        AcclOfflineMultiplier = other.AcclOfflineMultiplier;
      }
      if (other.DecelMultiplier != 0F) {
        DecelMultiplier = other.DecelMultiplier;
      }
      if (other.DecelOfflineMultiplier != 0F) {
        DecelOfflineMultiplier = other.DecelOfflineMultiplier;
      }
      if (other.IfChasing != false) {
        IfChasing = other.IfChasing;
      }
      if (other.MaxPt != 0) {
        MaxPt = other.MaxPt;
      }
      if (other.OfflinePtGrowth.Length != 0) {
        OfflinePtGrowth = other.OfflinePtGrowth;
      }
      ptGrowthRange_.Add(other.ptGrowthRange_);
      ptGrowthTime_.Add(other.ptGrowthTime_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 21: {
            AccelMultiplier = input.ReadFloat();
            break;
          }
          case 29: {
            AcclOfflineMultiplier = input.ReadFloat();
            break;
          }
          case 37: {
            DecelMultiplier = input.ReadFloat();
            break;
          }
          case 45: {
            DecelOfflineMultiplier = input.ReadFloat();
            break;
          }
          case 48: {
            IfChasing = input.ReadBool();
            break;
          }
          case 56: {
            MaxPt = input.ReadInt32();
            break;
          }
          case 66: {
            OfflinePtGrowth = input.ReadString();
            break;
          }
          case 74:
          case 72: {
            ptGrowthRange_.AddEntriesFrom(input, _repeated_ptGrowthRange_codec);
            break;
          }
          case 82:
          case 80: {
            ptGrowthTime_.AddEntriesFrom(input, _repeated_ptGrowthTime_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 21: {
            AccelMultiplier = input.ReadFloat();
            break;
          }
          case 29: {
            AcclOfflineMultiplier = input.ReadFloat();
            break;
          }
          case 37: {
            DecelMultiplier = input.ReadFloat();
            break;
          }
          case 45: {
            DecelOfflineMultiplier = input.ReadFloat();
            break;
          }
          case 48: {
            IfChasing = input.ReadBool();
            break;
          }
          case 56: {
            MaxPt = input.ReadInt32();
            break;
          }
          case 66: {
            OfflinePtGrowth = input.ReadString();
            break;
          }
          case 74:
          case 72: {
            ptGrowthRange_.AddEntriesFrom(ref input, _repeated_ptGrowthRange_codec);
            break;
          }
          case 82:
          case 80: {
            ptGrowthTime_.AddEntriesFrom(ref input, _repeated_ptGrowthTime_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MultiRankRobotDetailMapABValue : pb::IMessage<MultiRankRobotDetailMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MultiRankRobotDetailMapABValue> _parser = new pb::MessageParser<MultiRankRobotDetailMapABValue>(() => new MultiRankRobotDetailMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MultiRankRobotDetailMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.MultiRankRobotDetailConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiRankRobotDetailMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiRankRobotDetailMapABValue(MultiRankRobotDetailMapABValue other) : this() {
      multiRankRobotDetailMap_ = other.multiRankRobotDetailMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiRankRobotDetailMapABValue Clone() {
      return new MultiRankRobotDetailMapABValue(this);
    }

    /// <summary>Field number for the "MultiRankRobotDetailMap" field.</summary>
    public const int MultiRankRobotDetailMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.MultiRankRobotDetail>.Codec _map_multiRankRobotDetailMap_codec
        = new pbc::MapField<int, global::fat.rawdata.MultiRankRobotDetail>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.MultiRankRobotDetail.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.MultiRankRobotDetail> multiRankRobotDetailMap_ = new pbc::MapField<int, global::fat.rawdata.MultiRankRobotDetail>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.MultiRankRobotDetail> MultiRankRobotDetailMap {
      get { return multiRankRobotDetailMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MultiRankRobotDetailMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MultiRankRobotDetailMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!MultiRankRobotDetailMap.Equals(other.MultiRankRobotDetailMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= MultiRankRobotDetailMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      multiRankRobotDetailMap_.WriteTo(output, _map_multiRankRobotDetailMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      multiRankRobotDetailMap_.WriteTo(ref output, _map_multiRankRobotDetailMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += multiRankRobotDetailMap_.CalculateSize(_map_multiRankRobotDetailMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MultiRankRobotDetailMapABValue other) {
      if (other == null) {
        return;
      }
      multiRankRobotDetailMap_.Add(other.multiRankRobotDetailMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            multiRankRobotDetailMap_.AddEntriesFrom(input, _map_multiRankRobotDetailMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            multiRankRobotDetailMap_.AddEntriesFrom(ref input, _map_multiRankRobotDetailMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MultiRankRobotDetailConf : pb::IMessage<MultiRankRobotDetailConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MultiRankRobotDetailConf> _parser = new pb::MessageParser<MultiRankRobotDetailConf>(() => new MultiRankRobotDetailConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MultiRankRobotDetailConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.MultiRankRobotDetailConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiRankRobotDetailConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiRankRobotDetailConf(MultiRankRobotDetailConf other) : this() {
      multiRankRobotDetailMap_ = other.multiRankRobotDetailMap_.Clone();
      multiRankRobotDetailMapAB_ = other.multiRankRobotDetailMapAB_.Clone();
      multiRankRobotDetailMapABPatch_ = other.multiRankRobotDetailMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiRankRobotDetailConf Clone() {
      return new MultiRankRobotDetailConf(this);
    }

    /// <summary>Field number for the "MultiRankRobotDetailMap" field.</summary>
    public const int MultiRankRobotDetailMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.MultiRankRobotDetail>.Codec _map_multiRankRobotDetailMap_codec
        = new pbc::MapField<int, global::fat.rawdata.MultiRankRobotDetail>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.MultiRankRobotDetail.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.MultiRankRobotDetail> multiRankRobotDetailMap_ = new pbc::MapField<int, global::fat.rawdata.MultiRankRobotDetail>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.MultiRankRobotDetail> MultiRankRobotDetailMap {
      get { return multiRankRobotDetailMap_; }
    }

    /// <summary>Field number for the "MultiRankRobotDetailMapAB" field.</summary>
    public const int MultiRankRobotDetailMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.MultiRankRobotDetailMapABValue>.Codec _map_multiRankRobotDetailMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.MultiRankRobotDetailMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.MultiRankRobotDetailMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.MultiRankRobotDetailMapABValue> multiRankRobotDetailMapAB_ = new pbc::MapField<string, global::fat.rawdata.MultiRankRobotDetailMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.MultiRankRobotDetailMapABValue> MultiRankRobotDetailMapAB {
      get { return multiRankRobotDetailMapAB_; }
    }

    /// <summary>Field number for the "MultiRankRobotDetailMapABPatch" field.</summary>
    public const int MultiRankRobotDetailMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.MultiRankRobotDetailMapABValue>.Codec _map_multiRankRobotDetailMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.MultiRankRobotDetailMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.MultiRankRobotDetailMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.MultiRankRobotDetailMapABValue> multiRankRobotDetailMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.MultiRankRobotDetailMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.MultiRankRobotDetailMapABValue> MultiRankRobotDetailMapABPatch {
      get { return multiRankRobotDetailMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MultiRankRobotDetailConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MultiRankRobotDetailConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!MultiRankRobotDetailMap.Equals(other.MultiRankRobotDetailMap)) return false;
      if (!MultiRankRobotDetailMapAB.Equals(other.MultiRankRobotDetailMapAB)) return false;
      if (!MultiRankRobotDetailMapABPatch.Equals(other.MultiRankRobotDetailMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= MultiRankRobotDetailMap.GetHashCode();
      hash ^= MultiRankRobotDetailMapAB.GetHashCode();
      hash ^= MultiRankRobotDetailMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      multiRankRobotDetailMap_.WriteTo(output, _map_multiRankRobotDetailMap_codec);
      multiRankRobotDetailMapAB_.WriteTo(output, _map_multiRankRobotDetailMapAB_codec);
      multiRankRobotDetailMapABPatch_.WriteTo(output, _map_multiRankRobotDetailMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      multiRankRobotDetailMap_.WriteTo(ref output, _map_multiRankRobotDetailMap_codec);
      multiRankRobotDetailMapAB_.WriteTo(ref output, _map_multiRankRobotDetailMapAB_codec);
      multiRankRobotDetailMapABPatch_.WriteTo(ref output, _map_multiRankRobotDetailMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += multiRankRobotDetailMap_.CalculateSize(_map_multiRankRobotDetailMap_codec);
      size += multiRankRobotDetailMapAB_.CalculateSize(_map_multiRankRobotDetailMapAB_codec);
      size += multiRankRobotDetailMapABPatch_.CalculateSize(_map_multiRankRobotDetailMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MultiRankRobotDetailConf other) {
      if (other == null) {
        return;
      }
      multiRankRobotDetailMap_.Add(other.multiRankRobotDetailMap_);
      multiRankRobotDetailMapAB_.Add(other.multiRankRobotDetailMapAB_);
      multiRankRobotDetailMapABPatch_.Add(other.multiRankRobotDetailMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            multiRankRobotDetailMap_.AddEntriesFrom(input, _map_multiRankRobotDetailMap_codec);
            break;
          }
          case 18: {
            multiRankRobotDetailMapAB_.AddEntriesFrom(input, _map_multiRankRobotDetailMapAB_codec);
            break;
          }
          case 26: {
            multiRankRobotDetailMapABPatch_.AddEntriesFrom(input, _map_multiRankRobotDetailMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            multiRankRobotDetailMap_.AddEntriesFrom(ref input, _map_multiRankRobotDetailMap_codec);
            break;
          }
          case 18: {
            multiRankRobotDetailMapAB_.AddEntriesFrom(ref input, _map_multiRankRobotDetailMapAB_codec);
            break;
          }
          case 26: {
            multiRankRobotDetailMapABPatch_.AddEntriesFrom(ref input, _map_multiRankRobotDetailMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
