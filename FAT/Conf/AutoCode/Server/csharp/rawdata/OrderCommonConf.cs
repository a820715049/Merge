// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/OrderCommonConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/OrderCommonConf.proto</summary>
  public static partial class OrderCommonConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/OrderCommonConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static OrderCommonConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch1yYXdkYXRhL09yZGVyQ29tbW9uQ29uZi5wcm90bxIHcmF3ZGF0YSKxAgoL",
            "T3JkZXJDb21tb24SCgoCaWQYASABKAUSFAoMYWN0aXZlSXRlbUlkGAIgAygF",
            "EhMKC2FjdGl2ZUxldmVsGAMgASgFEhUKDWFjdGl2ZU9yZGVySWQYBCADKAUS",
            "DwoHYm9hcmRJZBgFIAEoBRIUCgxkaXNwbGF5TGV2ZWwYBiABKAUSEwoLaXNS",
            "ZWxhdGVCb3gYDiABKAgSFQoNcmVxdWlyZUl0ZW1JZBgHIAMoBRIZChFyZXF1",
            "aXJlT3JkZXJDb3VudBgIIAEoBRIOCgZyZXdhcmQYCSADKAkSDgoGcm9sZUlk",
            "GAogASgFEhYKDnNodXRkb3duSXRlbUlkGAsgAygFEhUKDXNodXRkb3duTGV2",
            "ZWwYDCABKAUSFwoPc2h1dGRvd25PcmRlcklkGA0gAygFIrABChVPcmRlckNv",
            "bW1vbk1hcEFCVmFsdWUSSgoOT3JkZXJDb21tb25NYXAYASADKAsyMi5yYXdk",
            "YXRhLk9yZGVyQ29tbW9uTWFwQUJWYWx1ZS5PcmRlckNvbW1vbk1hcEVudHJ5",
            "GksKE09yZGVyQ29tbW9uTWFwRW50cnkSCwoDa2V5GAEgASgFEiMKBXZhbHVl",
            "GAIgASgLMhQucmF3ZGF0YS5PcmRlckNvbW1vbjoCOAEi+QMKD09yZGVyQ29t",
            "bW9uQ29uZhJECg5PcmRlckNvbW1vbk1hcBgBIAMoCzIsLnJhd2RhdGEuT3Jk",
            "ZXJDb21tb25Db25mLk9yZGVyQ29tbW9uTWFwRW50cnkSSAoQT3JkZXJDb21t",
            "b25NYXBBQhgCIAMoCzIuLnJhd2RhdGEuT3JkZXJDb21tb25Db25mLk9yZGVy",
            "Q29tbW9uTWFwQUJFbnRyeRJSChVPcmRlckNvbW1vbk1hcEFCUGF0Y2gYAyAD",
            "KAsyMy5yYXdkYXRhLk9yZGVyQ29tbW9uQ29uZi5PcmRlckNvbW1vbk1hcEFC",
            "UGF0Y2hFbnRyeRpLChNPcmRlckNvbW1vbk1hcEVudHJ5EgsKA2tleRgBIAEo",
            "BRIjCgV2YWx1ZRgCIAEoCzIULnJhd2RhdGEuT3JkZXJDb21tb246AjgBGlcK",
            "FU9yZGVyQ29tbW9uTWFwQUJFbnRyeRILCgNrZXkYASABKAkSLQoFdmFsdWUY",
            "AiABKAsyHi5yYXdkYXRhLk9yZGVyQ29tbW9uTWFwQUJWYWx1ZToCOAEaXAoa",
            "T3JkZXJDb21tb25NYXBBQlBhdGNoRW50cnkSCwoDa2V5GAEgASgJEi0KBXZh",
            "bHVlGAIgASgLMh4ucmF3ZGF0YS5PcmRlckNvbW1vbk1hcEFCVmFsdWU6AjgB",
            "Qj1aLWdpdGxhYi5mdW5wbHVzLmlvL2ZhdC9jb25mL2dlbi9nb2xhbmcvcmF3",
            "ZGF0YaoCC2ZhdC5yYXdkYXRhYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.OrderCommon), global::fat.rawdata.OrderCommon.Parser, new[]{ "Id", "ActiveItemId", "ActiveLevel", "ActiveOrderId", "BoardId", "DisplayLevel", "IsRelateBox", "RequireItemId", "RequireOrderCount", "Reward", "RoleId", "ShutdownItemId", "ShutdownLevel", "ShutdownOrderId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.OrderCommonMapABValue), global::fat.rawdata.OrderCommonMapABValue.Parser, new[]{ "OrderCommonMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.OrderCommonConf), global::fat.rawdata.OrderCommonConf.Parser, new[]{ "OrderCommonMap", "OrderCommonMapAB", "OrderCommonMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="OrderCommon",table="OrderCommonMap",table_wrapper="OrderCommonConf",map="true",map_key_type="int32",data="OrderCommonConf")
  /// annotation@ab(table_ab="OrderCommonMapAB",table_ab_patch="OrderCommonMapABPatch",table_ab_value="OrderCommonMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@OrderCommon(id="id")
  /// </summary>
  public sealed partial class OrderCommon : pb::IMessage<OrderCommon>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OrderCommon> _parser = new pb::MessageParser<OrderCommon>(() => new OrderCommon());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OrderCommon> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.OrderCommonConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderCommon() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderCommon(OrderCommon other) : this() {
      id_ = other.id_;
      activeItemId_ = other.activeItemId_.Clone();
      activeLevel_ = other.activeLevel_;
      activeOrderId_ = other.activeOrderId_.Clone();
      boardId_ = other.boardId_;
      displayLevel_ = other.displayLevel_;
      isRelateBox_ = other.isRelateBox_;
      requireItemId_ = other.requireItemId_.Clone();
      requireOrderCount_ = other.requireOrderCount_;
      reward_ = other.reward_.Clone();
      roleId_ = other.roleId_;
      shutdownItemId_ = other.shutdownItemId_.Clone();
      shutdownLevel_ = other.shutdownLevel_;
      shutdownOrderId_ = other.shutdownOrderId_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderCommon Clone() {
      return new OrderCommon(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 固定订单ID
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "activeItemId" field.</summary>
    public const int ActiveItemIdFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_activeItemId_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> activeItemId_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 激活棋子ID
    /// （且）
    /// （ObjBasic.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> ActiveItemId {
      get { return activeItemId_; }
    }

    /// <summary>Field number for the "activeLevel" field.</summary>
    public const int ActiveLevelFieldNumber = 3;
    private int activeLevel_;
    /// <summary>
    /// 激活等级
    /// 先激活
    /// 后关闭
    /// （且）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ActiveLevel {
      get { return activeLevel_; }
      set {
        activeLevel_ = value;
      }
    }

    /// <summary>Field number for the "activeOrderId" field.</summary>
    public const int ActiveOrderIdFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_activeOrderId_codec
        = pb::FieldCodec.ForInt32(34);
    private readonly pbc::RepeatedField<int> activeOrderId_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 激活订单ID
    /// （且）
    /// （OrderCommon.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> ActiveOrderId {
      get { return activeOrderId_; }
    }

    /// <summary>Field number for the "boardId" field.</summary>
    public const int BoardIdFieldNumber = 5;
    private int boardId_;
    /// <summary>
    /// 所属棋盘ID
    /// （MergeBoard.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BoardId {
      get { return boardId_; }
      set {
        boardId_ = value;
      }
    }

    /// <summary>Field number for the "displayLevel" field.</summary>
    public const int DisplayLevelFieldNumber = 6;
    private int displayLevel_;
    /// <summary>
    /// 订单展示等级
    /// 未到达时
    /// 仅能看到等级限制
    /// 且无法完成订单
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DisplayLevel {
      get { return displayLevel_; }
      set {
        displayLevel_ = value;
      }
    }

    /// <summary>Field number for the "isRelateBox" field.</summary>
    public const int IsRelateBoxFieldNumber = 14;
    private bool isRelateBox_;
    /// <summary>
    /// 是否被以下物品关注
    /// 棋子魔盒
    /// 三选一盒子
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsRelateBox {
      get { return isRelateBox_; }
      set {
        isRelateBox_ = value;
      }
    }

    /// <summary>Field number for the "requireItemId" field.</summary>
    public const int RequireItemIdFieldNumber = 7;
    private static readonly pb::FieldCodec<int> _repeated_requireItemId_codec
        = pb::FieldCodec.ForInt32(58);
    private readonly pbc::RepeatedField<int> requireItemId_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 所需物品
    /// （ObjBasic.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> RequireItemId {
      get { return requireItemId_; }
    }

    /// <summary>Field number for the "requireOrderCount" field.</summary>
    public const int RequireOrderCountFieldNumber = 8;
    private int requireOrderCount_;
    /// <summary>
    /// 所需订单数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RequireOrderCount {
      get { return requireOrderCount_; }
      set {
        requireOrderCount_ = value;
      }
    }

    /// <summary>Field number for the "reward" field.</summary>
    public const int RewardFieldNumber = 9;
    private static readonly pb::FieldCodec<string> _repeated_reward_codec
        = pb::FieldCodec.ForString(74);
    private readonly pbc::RepeatedField<string> reward_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 奖励
    /// （ObjBasic.id:数量:计算方式,ObjBasic.id:数量:计算方式）
    /// 参数3计算方式规则如下：
    /// 0 = 数量
    /// 1 = 数量*（等级系数/100）*（实际难度/100），RoundCoin取整
    /// 2 = 数量*（等级系数/100）*（实际难度/100），RoundTool取工具
    /// 3 = 数量*（等级系数/100），RoundCoin取整
    /// 4 = 数量*（等级系数/100），RoundTool取工具
    /// 5 = 数量*（实际难度/100），RoundCoin取整
    /// 6 = 数量*（实际难度/100），RoundTool取工具
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Reward {
      get { return reward_; }
    }

    /// <summary>Field number for the "roleId" field.</summary>
    public const int RoleIdFieldNumber = 10;
    private int roleId_;
    /// <summary>
    /// 订单角色形象
    /// （0 = 随机角色）
    /// （NpcConfig.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RoleId {
      get { return roleId_; }
      set {
        roleId_ = value;
      }
    }

    /// <summary>Field number for the "shutdownItemId" field.</summary>
    public const int ShutdownItemIdFieldNumber = 11;
    private static readonly pb::FieldCodec<int> _repeated_shutdownItemId_codec
        = pb::FieldCodec.ForInt32(90);
    private readonly pbc::RepeatedField<int> shutdownItemId_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 关闭棋子ID
    /// （或）
    /// （ObjBasic.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> ShutdownItemId {
      get { return shutdownItemId_; }
    }

    /// <summary>Field number for the "shutdownLevel" field.</summary>
    public const int ShutdownLevelFieldNumber = 12;
    private int shutdownLevel_;
    /// <summary>
    /// 关闭等级
    /// 先激活
    /// 后关闭
    /// （或）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ShutdownLevel {
      get { return shutdownLevel_; }
      set {
        shutdownLevel_ = value;
      }
    }

    /// <summary>Field number for the "shutdownOrderId" field.</summary>
    public const int ShutdownOrderIdFieldNumber = 13;
    private static readonly pb::FieldCodec<int> _repeated_shutdownOrderId_codec
        = pb::FieldCodec.ForInt32(106);
    private readonly pbc::RepeatedField<int> shutdownOrderId_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 关闭订单ID
    /// （或）
    /// （OrderCommon.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> ShutdownOrderId {
      get { return shutdownOrderId_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OrderCommon);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OrderCommon other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!activeItemId_.Equals(other.activeItemId_)) return false;
      if (ActiveLevel != other.ActiveLevel) return false;
      if(!activeOrderId_.Equals(other.activeOrderId_)) return false;
      if (BoardId != other.BoardId) return false;
      if (DisplayLevel != other.DisplayLevel) return false;
      if (IsRelateBox != other.IsRelateBox) return false;
      if(!requireItemId_.Equals(other.requireItemId_)) return false;
      if (RequireOrderCount != other.RequireOrderCount) return false;
      if(!reward_.Equals(other.reward_)) return false;
      if (RoleId != other.RoleId) return false;
      if(!shutdownItemId_.Equals(other.shutdownItemId_)) return false;
      if (ShutdownLevel != other.ShutdownLevel) return false;
      if(!shutdownOrderId_.Equals(other.shutdownOrderId_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      hash ^= activeItemId_.GetHashCode();
      if (ActiveLevel != 0) hash ^= ActiveLevel.GetHashCode();
      hash ^= activeOrderId_.GetHashCode();
      if (BoardId != 0) hash ^= BoardId.GetHashCode();
      if (DisplayLevel != 0) hash ^= DisplayLevel.GetHashCode();
      if (IsRelateBox != false) hash ^= IsRelateBox.GetHashCode();
      hash ^= requireItemId_.GetHashCode();
      if (RequireOrderCount != 0) hash ^= RequireOrderCount.GetHashCode();
      hash ^= reward_.GetHashCode();
      if (RoleId != 0) hash ^= RoleId.GetHashCode();
      hash ^= shutdownItemId_.GetHashCode();
      if (ShutdownLevel != 0) hash ^= ShutdownLevel.GetHashCode();
      hash ^= shutdownOrderId_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      activeItemId_.WriteTo(output, _repeated_activeItemId_codec);
      if (ActiveLevel != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ActiveLevel);
      }
      activeOrderId_.WriteTo(output, _repeated_activeOrderId_codec);
      if (BoardId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(BoardId);
      }
      if (DisplayLevel != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(DisplayLevel);
      }
      requireItemId_.WriteTo(output, _repeated_requireItemId_codec);
      if (RequireOrderCount != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(RequireOrderCount);
      }
      reward_.WriteTo(output, _repeated_reward_codec);
      if (RoleId != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(RoleId);
      }
      shutdownItemId_.WriteTo(output, _repeated_shutdownItemId_codec);
      if (ShutdownLevel != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(ShutdownLevel);
      }
      shutdownOrderId_.WriteTo(output, _repeated_shutdownOrderId_codec);
      if (IsRelateBox != false) {
        output.WriteRawTag(112);
        output.WriteBool(IsRelateBox);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      activeItemId_.WriteTo(ref output, _repeated_activeItemId_codec);
      if (ActiveLevel != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ActiveLevel);
      }
      activeOrderId_.WriteTo(ref output, _repeated_activeOrderId_codec);
      if (BoardId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(BoardId);
      }
      if (DisplayLevel != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(DisplayLevel);
      }
      requireItemId_.WriteTo(ref output, _repeated_requireItemId_codec);
      if (RequireOrderCount != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(RequireOrderCount);
      }
      reward_.WriteTo(ref output, _repeated_reward_codec);
      if (RoleId != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(RoleId);
      }
      shutdownItemId_.WriteTo(ref output, _repeated_shutdownItemId_codec);
      if (ShutdownLevel != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(ShutdownLevel);
      }
      shutdownOrderId_.WriteTo(ref output, _repeated_shutdownOrderId_codec);
      if (IsRelateBox != false) {
        output.WriteRawTag(112);
        output.WriteBool(IsRelateBox);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      size += activeItemId_.CalculateSize(_repeated_activeItemId_codec);
      if (ActiveLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ActiveLevel);
      }
      size += activeOrderId_.CalculateSize(_repeated_activeOrderId_codec);
      if (BoardId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BoardId);
      }
      if (DisplayLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DisplayLevel);
      }
      if (IsRelateBox != false) {
        size += 1 + 1;
      }
      size += requireItemId_.CalculateSize(_repeated_requireItemId_codec);
      if (RequireOrderCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RequireOrderCount);
      }
      size += reward_.CalculateSize(_repeated_reward_codec);
      if (RoleId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoleId);
      }
      size += shutdownItemId_.CalculateSize(_repeated_shutdownItemId_codec);
      if (ShutdownLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ShutdownLevel);
      }
      size += shutdownOrderId_.CalculateSize(_repeated_shutdownOrderId_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OrderCommon other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      activeItemId_.Add(other.activeItemId_);
      if (other.ActiveLevel != 0) {
        ActiveLevel = other.ActiveLevel;
      }
      activeOrderId_.Add(other.activeOrderId_);
      if (other.BoardId != 0) {
        BoardId = other.BoardId;
      }
      if (other.DisplayLevel != 0) {
        DisplayLevel = other.DisplayLevel;
      }
      if (other.IsRelateBox != false) {
        IsRelateBox = other.IsRelateBox;
      }
      requireItemId_.Add(other.requireItemId_);
      if (other.RequireOrderCount != 0) {
        RequireOrderCount = other.RequireOrderCount;
      }
      reward_.Add(other.reward_);
      if (other.RoleId != 0) {
        RoleId = other.RoleId;
      }
      shutdownItemId_.Add(other.shutdownItemId_);
      if (other.ShutdownLevel != 0) {
        ShutdownLevel = other.ShutdownLevel;
      }
      shutdownOrderId_.Add(other.shutdownOrderId_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            activeItemId_.AddEntriesFrom(input, _repeated_activeItemId_codec);
            break;
          }
          case 24: {
            ActiveLevel = input.ReadInt32();
            break;
          }
          case 34:
          case 32: {
            activeOrderId_.AddEntriesFrom(input, _repeated_activeOrderId_codec);
            break;
          }
          case 40: {
            BoardId = input.ReadInt32();
            break;
          }
          case 48: {
            DisplayLevel = input.ReadInt32();
            break;
          }
          case 58:
          case 56: {
            requireItemId_.AddEntriesFrom(input, _repeated_requireItemId_codec);
            break;
          }
          case 64: {
            RequireOrderCount = input.ReadInt32();
            break;
          }
          case 74: {
            reward_.AddEntriesFrom(input, _repeated_reward_codec);
            break;
          }
          case 80: {
            RoleId = input.ReadInt32();
            break;
          }
          case 90:
          case 88: {
            shutdownItemId_.AddEntriesFrom(input, _repeated_shutdownItemId_codec);
            break;
          }
          case 96: {
            ShutdownLevel = input.ReadInt32();
            break;
          }
          case 106:
          case 104: {
            shutdownOrderId_.AddEntriesFrom(input, _repeated_shutdownOrderId_codec);
            break;
          }
          case 112: {
            IsRelateBox = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            activeItemId_.AddEntriesFrom(ref input, _repeated_activeItemId_codec);
            break;
          }
          case 24: {
            ActiveLevel = input.ReadInt32();
            break;
          }
          case 34:
          case 32: {
            activeOrderId_.AddEntriesFrom(ref input, _repeated_activeOrderId_codec);
            break;
          }
          case 40: {
            BoardId = input.ReadInt32();
            break;
          }
          case 48: {
            DisplayLevel = input.ReadInt32();
            break;
          }
          case 58:
          case 56: {
            requireItemId_.AddEntriesFrom(ref input, _repeated_requireItemId_codec);
            break;
          }
          case 64: {
            RequireOrderCount = input.ReadInt32();
            break;
          }
          case 74: {
            reward_.AddEntriesFrom(ref input, _repeated_reward_codec);
            break;
          }
          case 80: {
            RoleId = input.ReadInt32();
            break;
          }
          case 90:
          case 88: {
            shutdownItemId_.AddEntriesFrom(ref input, _repeated_shutdownItemId_codec);
            break;
          }
          case 96: {
            ShutdownLevel = input.ReadInt32();
            break;
          }
          case 106:
          case 104: {
            shutdownOrderId_.AddEntriesFrom(ref input, _repeated_shutdownOrderId_codec);
            break;
          }
          case 112: {
            IsRelateBox = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class OrderCommonMapABValue : pb::IMessage<OrderCommonMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OrderCommonMapABValue> _parser = new pb::MessageParser<OrderCommonMapABValue>(() => new OrderCommonMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OrderCommonMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.OrderCommonConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderCommonMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderCommonMapABValue(OrderCommonMapABValue other) : this() {
      orderCommonMap_ = other.orderCommonMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderCommonMapABValue Clone() {
      return new OrderCommonMapABValue(this);
    }

    /// <summary>Field number for the "OrderCommonMap" field.</summary>
    public const int OrderCommonMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.OrderCommon>.Codec _map_orderCommonMap_codec
        = new pbc::MapField<int, global::fat.rawdata.OrderCommon>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.OrderCommon.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.OrderCommon> orderCommonMap_ = new pbc::MapField<int, global::fat.rawdata.OrderCommon>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.OrderCommon> OrderCommonMap {
      get { return orderCommonMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OrderCommonMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OrderCommonMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!OrderCommonMap.Equals(other.OrderCommonMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= OrderCommonMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      orderCommonMap_.WriteTo(output, _map_orderCommonMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      orderCommonMap_.WriteTo(ref output, _map_orderCommonMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += orderCommonMap_.CalculateSize(_map_orderCommonMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OrderCommonMapABValue other) {
      if (other == null) {
        return;
      }
      orderCommonMap_.Add(other.orderCommonMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            orderCommonMap_.AddEntriesFrom(input, _map_orderCommonMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            orderCommonMap_.AddEntriesFrom(ref input, _map_orderCommonMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class OrderCommonConf : pb::IMessage<OrderCommonConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OrderCommonConf> _parser = new pb::MessageParser<OrderCommonConf>(() => new OrderCommonConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OrderCommonConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.OrderCommonConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderCommonConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderCommonConf(OrderCommonConf other) : this() {
      orderCommonMap_ = other.orderCommonMap_.Clone();
      orderCommonMapAB_ = other.orderCommonMapAB_.Clone();
      orderCommonMapABPatch_ = other.orderCommonMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderCommonConf Clone() {
      return new OrderCommonConf(this);
    }

    /// <summary>Field number for the "OrderCommonMap" field.</summary>
    public const int OrderCommonMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.OrderCommon>.Codec _map_orderCommonMap_codec
        = new pbc::MapField<int, global::fat.rawdata.OrderCommon>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.OrderCommon.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.OrderCommon> orderCommonMap_ = new pbc::MapField<int, global::fat.rawdata.OrderCommon>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.OrderCommon> OrderCommonMap {
      get { return orderCommonMap_; }
    }

    /// <summary>Field number for the "OrderCommonMapAB" field.</summary>
    public const int OrderCommonMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.OrderCommonMapABValue>.Codec _map_orderCommonMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.OrderCommonMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.OrderCommonMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.OrderCommonMapABValue> orderCommonMapAB_ = new pbc::MapField<string, global::fat.rawdata.OrderCommonMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.OrderCommonMapABValue> OrderCommonMapAB {
      get { return orderCommonMapAB_; }
    }

    /// <summary>Field number for the "OrderCommonMapABPatch" field.</summary>
    public const int OrderCommonMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.OrderCommonMapABValue>.Codec _map_orderCommonMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.OrderCommonMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.OrderCommonMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.OrderCommonMapABValue> orderCommonMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.OrderCommonMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.OrderCommonMapABValue> OrderCommonMapABPatch {
      get { return orderCommonMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OrderCommonConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OrderCommonConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!OrderCommonMap.Equals(other.OrderCommonMap)) return false;
      if (!OrderCommonMapAB.Equals(other.OrderCommonMapAB)) return false;
      if (!OrderCommonMapABPatch.Equals(other.OrderCommonMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= OrderCommonMap.GetHashCode();
      hash ^= OrderCommonMapAB.GetHashCode();
      hash ^= OrderCommonMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      orderCommonMap_.WriteTo(output, _map_orderCommonMap_codec);
      orderCommonMapAB_.WriteTo(output, _map_orderCommonMapAB_codec);
      orderCommonMapABPatch_.WriteTo(output, _map_orderCommonMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      orderCommonMap_.WriteTo(ref output, _map_orderCommonMap_codec);
      orderCommonMapAB_.WriteTo(ref output, _map_orderCommonMapAB_codec);
      orderCommonMapABPatch_.WriteTo(ref output, _map_orderCommonMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += orderCommonMap_.CalculateSize(_map_orderCommonMap_codec);
      size += orderCommonMapAB_.CalculateSize(_map_orderCommonMapAB_codec);
      size += orderCommonMapABPatch_.CalculateSize(_map_orderCommonMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OrderCommonConf other) {
      if (other == null) {
        return;
      }
      orderCommonMap_.Add(other.orderCommonMap_);
      orderCommonMapAB_.Add(other.orderCommonMapAB_);
      orderCommonMapABPatch_.Add(other.orderCommonMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            orderCommonMap_.AddEntriesFrom(input, _map_orderCommonMap_codec);
            break;
          }
          case 18: {
            orderCommonMapAB_.AddEntriesFrom(input, _map_orderCommonMapAB_codec);
            break;
          }
          case 26: {
            orderCommonMapABPatch_.AddEntriesFrom(input, _map_orderCommonMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            orderCommonMap_.AddEntriesFrom(ref input, _map_orderCommonMap_codec);
            break;
          }
          case 18: {
            orderCommonMapAB_.AddEntriesFrom(ref input, _map_orderCommonMapAB_codec);
            break;
          }
          case 26: {
            orderCommonMapABPatch_.AddEntriesFrom(ref input, _map_orderCommonMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
