// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventItemBingoRoundConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventItemBingoRoundConf.proto</summary>
  public static partial class EventItemBingoRoundConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventItemBingoRoundConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventItemBingoRoundConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiVyYXdkYXRhL0V2ZW50SXRlbUJpbmdvUm91bmRDb25mLnByb3RvEgdyYXdk",
            "YXRhIj0KE0V2ZW50SXRlbUJpbmdvUm91bmQSCgoCaWQYASABKAUSGgoSaW5j",
            "bHVkZUl0ZW1CaW5nb0lkGAMgAygFIuABCh1FdmVudEl0ZW1CaW5nb1JvdW5k",
            "TWFwQUJWYWx1ZRJiChZFdmVudEl0ZW1CaW5nb1JvdW5kTWFwGAEgAygLMkIu",
            "cmF3ZGF0YS5FdmVudEl0ZW1CaW5nb1JvdW5kTWFwQUJWYWx1ZS5FdmVudEl0",
            "ZW1CaW5nb1JvdW5kTWFwRW50cnkaWwobRXZlbnRJdGVtQmluZ29Sb3VuZE1h",
            "cEVudHJ5EgsKA2tleRgBIAEoBRIrCgV2YWx1ZRgCIAEoCzIcLnJhd2RhdGEu",
            "RXZlbnRJdGVtQmluZ29Sb3VuZDoCOAEi+QQKF0V2ZW50SXRlbUJpbmdvUm91",
            "bmRDb25mElwKFkV2ZW50SXRlbUJpbmdvUm91bmRNYXAYASADKAsyPC5yYXdk",
            "YXRhLkV2ZW50SXRlbUJpbmdvUm91bmRDb25mLkV2ZW50SXRlbUJpbmdvUm91",
            "bmRNYXBFbnRyeRJgChhFdmVudEl0ZW1CaW5nb1JvdW5kTWFwQUIYAiADKAsy",
            "Pi5yYXdkYXRhLkV2ZW50SXRlbUJpbmdvUm91bmRDb25mLkV2ZW50SXRlbUJp",
            "bmdvUm91bmRNYXBBQkVudHJ5EmoKHUV2ZW50SXRlbUJpbmdvUm91bmRNYXBB",
            "QlBhdGNoGAMgAygLMkMucmF3ZGF0YS5FdmVudEl0ZW1CaW5nb1JvdW5kQ29u",
            "Zi5FdmVudEl0ZW1CaW5nb1JvdW5kTWFwQUJQYXRjaEVudHJ5GlsKG0V2ZW50",
            "SXRlbUJpbmdvUm91bmRNYXBFbnRyeRILCgNrZXkYASABKAUSKwoFdmFsdWUY",
            "AiABKAsyHC5yYXdkYXRhLkV2ZW50SXRlbUJpbmdvUm91bmQ6AjgBGmcKHUV2",
            "ZW50SXRlbUJpbmdvUm91bmRNYXBBQkVudHJ5EgsKA2tleRgBIAEoCRI1CgV2",
            "YWx1ZRgCIAEoCzImLnJhd2RhdGEuRXZlbnRJdGVtQmluZ29Sb3VuZE1hcEFC",
            "VmFsdWU6AjgBGmwKIkV2ZW50SXRlbUJpbmdvUm91bmRNYXBBQlBhdGNoRW50",
            "cnkSCwoDa2V5GAEgASgJEjUKBXZhbHVlGAIgASgLMiYucmF3ZGF0YS5FdmVu",
            "dEl0ZW1CaW5nb1JvdW5kTWFwQUJWYWx1ZToCOAFCPVotZ2l0bGFiLmZ1bnBs",
            "dXMuaW8vZmF0L2NvbmYvZ2VuL2dvbGFuZy9yYXdkYXRhqgILZmF0LnJhd2Rh",
            "dGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventItemBingoRound), global::fat.rawdata.EventItemBingoRound.Parser, new[]{ "Id", "IncludeItemBingoId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventItemBingoRoundMapABValue), global::fat.rawdata.EventItemBingoRoundMapABValue.Parser, new[]{ "EventItemBingoRoundMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventItemBingoRoundConf), global::fat.rawdata.EventItemBingoRoundConf.Parser, new[]{ "EventItemBingoRoundMap", "EventItemBingoRoundMapAB", "EventItemBingoRoundMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventItemBingoRound",table="EventItemBingoRoundMap",table_wrapper="EventItemBingoRoundConf",map="true",map_key_type="int32",data="EventItemBingoRoundConf")
  /// annotation@ab(table_ab="EventItemBingoRoundMapAB",table_ab_patch="EventItemBingoRoundMapABPatch",table_ab_value="EventItemBingoRoundMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventItemBingoRound(id="id")
  /// </summary>
  public sealed partial class EventItemBingoRound : pb::IMessage<EventItemBingoRound>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventItemBingoRound> _parser = new pb::MessageParser<EventItemBingoRound>(() => new EventItemBingoRound());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventItemBingoRound> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventItemBingoRoundConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventItemBingoRound() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventItemBingoRound(EventItemBingoRound other) : this() {
      id_ = other.id_;
      includeItemBingoId_ = other.includeItemBingoId_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventItemBingoRound Clone() {
      return new EventItemBingoRound(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 活动模板ID
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "includeItemBingoId" field.</summary>
    public const int IncludeItemBingoIdFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_includeItemBingoId_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> includeItemBingoId_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 活动包含哪几轮活动
    /// （EventItemBingo.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> IncludeItemBingoId {
      get { return includeItemBingoId_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventItemBingoRound);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventItemBingoRound other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!includeItemBingoId_.Equals(other.includeItemBingoId_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      hash ^= includeItemBingoId_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      includeItemBingoId_.WriteTo(output, _repeated_includeItemBingoId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      includeItemBingoId_.WriteTo(ref output, _repeated_includeItemBingoId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      size += includeItemBingoId_.CalculateSize(_repeated_includeItemBingoId_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventItemBingoRound other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      includeItemBingoId_.Add(other.includeItemBingoId_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            includeItemBingoId_.AddEntriesFrom(input, _repeated_includeItemBingoId_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            includeItemBingoId_.AddEntriesFrom(ref input, _repeated_includeItemBingoId_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventItemBingoRoundMapABValue : pb::IMessage<EventItemBingoRoundMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventItemBingoRoundMapABValue> _parser = new pb::MessageParser<EventItemBingoRoundMapABValue>(() => new EventItemBingoRoundMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventItemBingoRoundMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventItemBingoRoundConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventItemBingoRoundMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventItemBingoRoundMapABValue(EventItemBingoRoundMapABValue other) : this() {
      eventItemBingoRoundMap_ = other.eventItemBingoRoundMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventItemBingoRoundMapABValue Clone() {
      return new EventItemBingoRoundMapABValue(this);
    }

    /// <summary>Field number for the "EventItemBingoRoundMap" field.</summary>
    public const int EventItemBingoRoundMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventItemBingoRound>.Codec _map_eventItemBingoRoundMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventItemBingoRound>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventItemBingoRound.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventItemBingoRound> eventItemBingoRoundMap_ = new pbc::MapField<int, global::fat.rawdata.EventItemBingoRound>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventItemBingoRound> EventItemBingoRoundMap {
      get { return eventItemBingoRoundMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventItemBingoRoundMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventItemBingoRoundMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventItemBingoRoundMap.Equals(other.EventItemBingoRoundMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventItemBingoRoundMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventItemBingoRoundMap_.WriteTo(output, _map_eventItemBingoRoundMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventItemBingoRoundMap_.WriteTo(ref output, _map_eventItemBingoRoundMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventItemBingoRoundMap_.CalculateSize(_map_eventItemBingoRoundMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventItemBingoRoundMapABValue other) {
      if (other == null) {
        return;
      }
      eventItemBingoRoundMap_.Add(other.eventItemBingoRoundMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventItemBingoRoundMap_.AddEntriesFrom(input, _map_eventItemBingoRoundMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventItemBingoRoundMap_.AddEntriesFrom(ref input, _map_eventItemBingoRoundMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventItemBingoRoundConf : pb::IMessage<EventItemBingoRoundConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventItemBingoRoundConf> _parser = new pb::MessageParser<EventItemBingoRoundConf>(() => new EventItemBingoRoundConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventItemBingoRoundConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventItemBingoRoundConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventItemBingoRoundConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventItemBingoRoundConf(EventItemBingoRoundConf other) : this() {
      eventItemBingoRoundMap_ = other.eventItemBingoRoundMap_.Clone();
      eventItemBingoRoundMapAB_ = other.eventItemBingoRoundMapAB_.Clone();
      eventItemBingoRoundMapABPatch_ = other.eventItemBingoRoundMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventItemBingoRoundConf Clone() {
      return new EventItemBingoRoundConf(this);
    }

    /// <summary>Field number for the "EventItemBingoRoundMap" field.</summary>
    public const int EventItemBingoRoundMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventItemBingoRound>.Codec _map_eventItemBingoRoundMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventItemBingoRound>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventItemBingoRound.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventItemBingoRound> eventItemBingoRoundMap_ = new pbc::MapField<int, global::fat.rawdata.EventItemBingoRound>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventItemBingoRound> EventItemBingoRoundMap {
      get { return eventItemBingoRoundMap_; }
    }

    /// <summary>Field number for the "EventItemBingoRoundMapAB" field.</summary>
    public const int EventItemBingoRoundMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventItemBingoRoundMapABValue>.Codec _map_eventItemBingoRoundMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventItemBingoRoundMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventItemBingoRoundMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventItemBingoRoundMapABValue> eventItemBingoRoundMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventItemBingoRoundMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventItemBingoRoundMapABValue> EventItemBingoRoundMapAB {
      get { return eventItemBingoRoundMapAB_; }
    }

    /// <summary>Field number for the "EventItemBingoRoundMapABPatch" field.</summary>
    public const int EventItemBingoRoundMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventItemBingoRoundMapABValue>.Codec _map_eventItemBingoRoundMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventItemBingoRoundMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventItemBingoRoundMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventItemBingoRoundMapABValue> eventItemBingoRoundMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventItemBingoRoundMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventItemBingoRoundMapABValue> EventItemBingoRoundMapABPatch {
      get { return eventItemBingoRoundMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventItemBingoRoundConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventItemBingoRoundConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventItemBingoRoundMap.Equals(other.EventItemBingoRoundMap)) return false;
      if (!EventItemBingoRoundMapAB.Equals(other.EventItemBingoRoundMapAB)) return false;
      if (!EventItemBingoRoundMapABPatch.Equals(other.EventItemBingoRoundMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventItemBingoRoundMap.GetHashCode();
      hash ^= EventItemBingoRoundMapAB.GetHashCode();
      hash ^= EventItemBingoRoundMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventItemBingoRoundMap_.WriteTo(output, _map_eventItemBingoRoundMap_codec);
      eventItemBingoRoundMapAB_.WriteTo(output, _map_eventItemBingoRoundMapAB_codec);
      eventItemBingoRoundMapABPatch_.WriteTo(output, _map_eventItemBingoRoundMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventItemBingoRoundMap_.WriteTo(ref output, _map_eventItemBingoRoundMap_codec);
      eventItemBingoRoundMapAB_.WriteTo(ref output, _map_eventItemBingoRoundMapAB_codec);
      eventItemBingoRoundMapABPatch_.WriteTo(ref output, _map_eventItemBingoRoundMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventItemBingoRoundMap_.CalculateSize(_map_eventItemBingoRoundMap_codec);
      size += eventItemBingoRoundMapAB_.CalculateSize(_map_eventItemBingoRoundMapAB_codec);
      size += eventItemBingoRoundMapABPatch_.CalculateSize(_map_eventItemBingoRoundMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventItemBingoRoundConf other) {
      if (other == null) {
        return;
      }
      eventItemBingoRoundMap_.Add(other.eventItemBingoRoundMap_);
      eventItemBingoRoundMapAB_.Add(other.eventItemBingoRoundMapAB_);
      eventItemBingoRoundMapABPatch_.Add(other.eventItemBingoRoundMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventItemBingoRoundMap_.AddEntriesFrom(input, _map_eventItemBingoRoundMap_codec);
            break;
          }
          case 18: {
            eventItemBingoRoundMapAB_.AddEntriesFrom(input, _map_eventItemBingoRoundMapAB_codec);
            break;
          }
          case 26: {
            eventItemBingoRoundMapABPatch_.AddEntriesFrom(input, _map_eventItemBingoRoundMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventItemBingoRoundMap_.AddEntriesFrom(ref input, _map_eventItemBingoRoundMap_codec);
            break;
          }
          case 18: {
            eventItemBingoRoundMapAB_.AddEntriesFrom(ref input, _map_eventItemBingoRoundMapAB_codec);
            break;
          }
          case 26: {
            eventItemBingoRoundMapABPatch_.AddEntriesFrom(ref input, _map_eventItemBingoRoundMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
