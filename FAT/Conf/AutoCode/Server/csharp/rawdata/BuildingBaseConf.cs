// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/BuildingBaseConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/BuildingBaseConf.proto</summary>
  public static partial class BuildingBaseConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/BuildingBaseConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BuildingBaseConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch5yYXdkYXRhL0J1aWxkaW5nQmFzZUNvbmYucHJvdG8SB3Jhd2RhdGEi0wEK",
            "DEJ1aWxkaW5nQmFzZRIKCgJpZBgBIAEoBRIRCglpc1ByZVNob3cYCiABKAgS",
            "EAoIaXNTZWNyZXQYAiABKAgSEQoJbGV2ZWxJbmZvGAMgAygFEhgKEGxvY2tl",
            "ZENsb3VkQXNzZXQYBCABKAkSDAoEbmFtZRgFIAEoCRILCgNwcmUYCyABKAUS",
            "DwoHc2NlbmVJZBgGIAEoCRIQCghzZXF1ZW5jZRgHIAEoBRISCgpzdG9yeUlt",
            "YWdlGAggASgJEhMKC3VubG9ja0xldmVsGAkgASgFIrYBChZCdWlsZGluZ0Jh",
            "c2VNYXBBQlZhbHVlEk0KD0J1aWxkaW5nQmFzZU1hcBgBIAMoCzI0LnJhd2Rh",
            "dGEuQnVpbGRpbmdCYXNlTWFwQUJWYWx1ZS5CdWlsZGluZ0Jhc2VNYXBFbnRy",
            "eRpNChRCdWlsZGluZ0Jhc2VNYXBFbnRyeRILCgNrZXkYASABKAUSJAoFdmFs",
            "dWUYAiABKAsyFS5yYXdkYXRhLkJ1aWxkaW5nQmFzZToCOAEiiQQKEEJ1aWxk",
            "aW5nQmFzZUNvbmYSRwoPQnVpbGRpbmdCYXNlTWFwGAEgAygLMi4ucmF3ZGF0",
            "YS5CdWlsZGluZ0Jhc2VDb25mLkJ1aWxkaW5nQmFzZU1hcEVudHJ5EksKEUJ1",
            "aWxkaW5nQmFzZU1hcEFCGAIgAygLMjAucmF3ZGF0YS5CdWlsZGluZ0Jhc2VD",
            "b25mLkJ1aWxkaW5nQmFzZU1hcEFCRW50cnkSVQoWQnVpbGRpbmdCYXNlTWFw",
            "QUJQYXRjaBgDIAMoCzI1LnJhd2RhdGEuQnVpbGRpbmdCYXNlQ29uZi5CdWls",
            "ZGluZ0Jhc2VNYXBBQlBhdGNoRW50cnkaTQoUQnVpbGRpbmdCYXNlTWFwRW50",
            "cnkSCwoDa2V5GAEgASgFEiQKBXZhbHVlGAIgASgLMhUucmF3ZGF0YS5CdWls",
            "ZGluZ0Jhc2U6AjgBGlkKFkJ1aWxkaW5nQmFzZU1hcEFCRW50cnkSCwoDa2V5",
            "GAEgASgJEi4KBXZhbHVlGAIgASgLMh8ucmF3ZGF0YS5CdWlsZGluZ0Jhc2VN",
            "YXBBQlZhbHVlOgI4ARpeChtCdWlsZGluZ0Jhc2VNYXBBQlBhdGNoRW50cnkS",
            "CwoDa2V5GAEgASgJEi4KBXZhbHVlGAIgASgLMh8ucmF3ZGF0YS5CdWlsZGlu",
            "Z0Jhc2VNYXBBQlZhbHVlOgI4AUI9Wi1naXRsYWIuZnVucGx1cy5pby9mYXQv",
            "Y29uZi9nZW4vZ29sYW5nL3Jhd2RhdGGqAgtmYXQucmF3ZGF0YWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.BuildingBase), global::fat.rawdata.BuildingBase.Parser, new[]{ "Id", "IsPreShow", "IsSecret", "LevelInfo", "LockedCloudAsset", "Name", "Pre", "SceneId", "Sequence", "StoryImage", "UnlockLevel" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.BuildingBaseMapABValue), global::fat.rawdata.BuildingBaseMapABValue.Parser, new[]{ "BuildingBaseMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.BuildingBaseConf), global::fat.rawdata.BuildingBaseConf.Parser, new[]{ "BuildingBaseMap", "BuildingBaseMapAB", "BuildingBaseMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="BuildingBase",table="BuildingBaseMap",table_wrapper="BuildingBaseConf",map="true",map_key_type="int32",data="BuildingBaseConf")
  /// annotation@ab(table_ab="BuildingBaseMapAB",table_ab_patch="BuildingBaseMapABPatch",table_ab_value="BuildingBaseMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@BuildingBase(id="id")
  /// </summary>
  public sealed partial class BuildingBase : pb::IMessage<BuildingBase>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BuildingBase> _parser = new pb::MessageParser<BuildingBase>(() => new BuildingBase());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BuildingBase> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.BuildingBaseConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildingBase() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildingBase(BuildingBase other) : this() {
      id_ = other.id_;
      isPreShow_ = other.isPreShow_;
      isSecret_ = other.isSecret_;
      levelInfo_ = other.levelInfo_.Clone();
      lockedCloudAsset_ = other.lockedCloudAsset_;
      name_ = other.name_;
      pre_ = other.pre_;
      sceneId_ = other.sceneId_;
      sequence_ = other.sequence_;
      storyImage_ = other.storyImage_;
      unlockLevel_ = other.unlockLevel_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildingBase Clone() {
      return new BuildingBase(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 建筑ID
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "isPreShow" field.</summary>
    public const int IsPreShowFieldNumber = 10;
    private bool isPreShow_;
    /// <summary>
    /// 是否在建造之前就显示level0
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsPreShow {
      get { return isPreShow_; }
      set {
        isPreShow_ = value;
      }
    }

    /// <summary>Field number for the "isSecret" field.</summary>
    public const int IsSecretFieldNumber = 2;
    private bool isSecret_;
    /// <summary>
    /// 是否是神秘建筑
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsSecret {
      get { return isSecret_; }
      set {
        isSecret_ = value;
      }
    }

    /// <summary>Field number for the "levelInfo" field.</summary>
    public const int LevelInfoFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_levelInfo_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> levelInfo_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 建筑等级信息
    /// （BuildingLevel.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> LevelInfo {
      get { return levelInfo_; }
    }

    /// <summary>Field number for the "lockedCloudAsset" field.</summary>
    public const int LockedCloudAssetFieldNumber = 4;
    private string lockedCloudAsset_ = "";
    /// <summary>
    /// 遮盖云的美术资源
    /// （Asset）
    /// （不配就不显示云）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LockedCloudAsset {
      get { return lockedCloudAsset_; }
      set {
        lockedCloudAsset_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 5;
    private string name_ = "";
    /// <summary>
    /// 建筑名称
    /// （多语言）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pre" field.</summary>
    public const int PreFieldNumber = 11;
    private int pre_;
    /// <summary>
    /// 前置建筑
    /// 0 = 一直可见
    /// 其他 = 前置BuildingBase.id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Pre {
      get { return pre_; }
      set {
        pre_ = value;
      }
    }

    /// <summary>Field number for the "sceneId" field.</summary>
    public const int SceneIdFieldNumber = 6;
    private string sceneId_ = "";
    /// <summary>
    /// 所属场景
    /// （BuildScene.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SceneId {
      get { return sceneId_; }
      set {
        sceneId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sequence" field.</summary>
    public const int SequenceFieldNumber = 7;
    private int sequence_;
    /// <summary>
    /// 建造排序
    /// （跳转逻辑用到）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Sequence {
      get { return sequence_; }
      set {
        sequence_ = value;
      }
    }

    /// <summary>Field number for the "storyImage" field.</summary>
    public const int StoryImageFieldNumber = 8;
    private string storyImage_ = "";
    /// <summary>
    /// 对话中显示的
    /// 建筑微缩图标
    /// （Asset）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StoryImage {
      get { return storyImage_; }
      set {
        storyImage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "unlockLevel" field.</summary>
    public const int UnlockLevelFieldNumber = 9;
    private int unlockLevel_;
    /// <summary>
    /// 解锁所需玩家等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnlockLevel {
      get { return unlockLevel_; }
      set {
        unlockLevel_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BuildingBase);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BuildingBase other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (IsPreShow != other.IsPreShow) return false;
      if (IsSecret != other.IsSecret) return false;
      if(!levelInfo_.Equals(other.levelInfo_)) return false;
      if (LockedCloudAsset != other.LockedCloudAsset) return false;
      if (Name != other.Name) return false;
      if (Pre != other.Pre) return false;
      if (SceneId != other.SceneId) return false;
      if (Sequence != other.Sequence) return false;
      if (StoryImage != other.StoryImage) return false;
      if (UnlockLevel != other.UnlockLevel) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (IsPreShow != false) hash ^= IsPreShow.GetHashCode();
      if (IsSecret != false) hash ^= IsSecret.GetHashCode();
      hash ^= levelInfo_.GetHashCode();
      if (LockedCloudAsset.Length != 0) hash ^= LockedCloudAsset.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Pre != 0) hash ^= Pre.GetHashCode();
      if (SceneId.Length != 0) hash ^= SceneId.GetHashCode();
      if (Sequence != 0) hash ^= Sequence.GetHashCode();
      if (StoryImage.Length != 0) hash ^= StoryImage.GetHashCode();
      if (UnlockLevel != 0) hash ^= UnlockLevel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (IsSecret != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsSecret);
      }
      levelInfo_.WriteTo(output, _repeated_levelInfo_codec);
      if (LockedCloudAsset.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(LockedCloudAsset);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Name);
      }
      if (SceneId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(SceneId);
      }
      if (Sequence != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Sequence);
      }
      if (StoryImage.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(StoryImage);
      }
      if (UnlockLevel != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(UnlockLevel);
      }
      if (IsPreShow != false) {
        output.WriteRawTag(80);
        output.WriteBool(IsPreShow);
      }
      if (Pre != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(Pre);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (IsSecret != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsSecret);
      }
      levelInfo_.WriteTo(ref output, _repeated_levelInfo_codec);
      if (LockedCloudAsset.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(LockedCloudAsset);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Name);
      }
      if (SceneId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(SceneId);
      }
      if (Sequence != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Sequence);
      }
      if (StoryImage.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(StoryImage);
      }
      if (UnlockLevel != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(UnlockLevel);
      }
      if (IsPreShow != false) {
        output.WriteRawTag(80);
        output.WriteBool(IsPreShow);
      }
      if (Pre != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(Pre);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (IsPreShow != false) {
        size += 1 + 1;
      }
      if (IsSecret != false) {
        size += 1 + 1;
      }
      size += levelInfo_.CalculateSize(_repeated_levelInfo_codec);
      if (LockedCloudAsset.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LockedCloudAsset);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Pre != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Pre);
      }
      if (SceneId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SceneId);
      }
      if (Sequence != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Sequence);
      }
      if (StoryImage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StoryImage);
      }
      if (UnlockLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnlockLevel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BuildingBase other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.IsPreShow != false) {
        IsPreShow = other.IsPreShow;
      }
      if (other.IsSecret != false) {
        IsSecret = other.IsSecret;
      }
      levelInfo_.Add(other.levelInfo_);
      if (other.LockedCloudAsset.Length != 0) {
        LockedCloudAsset = other.LockedCloudAsset;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Pre != 0) {
        Pre = other.Pre;
      }
      if (other.SceneId.Length != 0) {
        SceneId = other.SceneId;
      }
      if (other.Sequence != 0) {
        Sequence = other.Sequence;
      }
      if (other.StoryImage.Length != 0) {
        StoryImage = other.StoryImage;
      }
      if (other.UnlockLevel != 0) {
        UnlockLevel = other.UnlockLevel;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            IsSecret = input.ReadBool();
            break;
          }
          case 26:
          case 24: {
            levelInfo_.AddEntriesFrom(input, _repeated_levelInfo_codec);
            break;
          }
          case 34: {
            LockedCloudAsset = input.ReadString();
            break;
          }
          case 42: {
            Name = input.ReadString();
            break;
          }
          case 50: {
            SceneId = input.ReadString();
            break;
          }
          case 56: {
            Sequence = input.ReadInt32();
            break;
          }
          case 66: {
            StoryImage = input.ReadString();
            break;
          }
          case 72: {
            UnlockLevel = input.ReadInt32();
            break;
          }
          case 80: {
            IsPreShow = input.ReadBool();
            break;
          }
          case 88: {
            Pre = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            IsSecret = input.ReadBool();
            break;
          }
          case 26:
          case 24: {
            levelInfo_.AddEntriesFrom(ref input, _repeated_levelInfo_codec);
            break;
          }
          case 34: {
            LockedCloudAsset = input.ReadString();
            break;
          }
          case 42: {
            Name = input.ReadString();
            break;
          }
          case 50: {
            SceneId = input.ReadString();
            break;
          }
          case 56: {
            Sequence = input.ReadInt32();
            break;
          }
          case 66: {
            StoryImage = input.ReadString();
            break;
          }
          case 72: {
            UnlockLevel = input.ReadInt32();
            break;
          }
          case 80: {
            IsPreShow = input.ReadBool();
            break;
          }
          case 88: {
            Pre = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BuildingBaseMapABValue : pb::IMessage<BuildingBaseMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BuildingBaseMapABValue> _parser = new pb::MessageParser<BuildingBaseMapABValue>(() => new BuildingBaseMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BuildingBaseMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.BuildingBaseConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildingBaseMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildingBaseMapABValue(BuildingBaseMapABValue other) : this() {
      buildingBaseMap_ = other.buildingBaseMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildingBaseMapABValue Clone() {
      return new BuildingBaseMapABValue(this);
    }

    /// <summary>Field number for the "BuildingBaseMap" field.</summary>
    public const int BuildingBaseMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.BuildingBase>.Codec _map_buildingBaseMap_codec
        = new pbc::MapField<int, global::fat.rawdata.BuildingBase>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.BuildingBase.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.BuildingBase> buildingBaseMap_ = new pbc::MapField<int, global::fat.rawdata.BuildingBase>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.BuildingBase> BuildingBaseMap {
      get { return buildingBaseMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BuildingBaseMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BuildingBaseMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!BuildingBaseMap.Equals(other.BuildingBaseMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= BuildingBaseMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      buildingBaseMap_.WriteTo(output, _map_buildingBaseMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      buildingBaseMap_.WriteTo(ref output, _map_buildingBaseMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += buildingBaseMap_.CalculateSize(_map_buildingBaseMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BuildingBaseMapABValue other) {
      if (other == null) {
        return;
      }
      buildingBaseMap_.Add(other.buildingBaseMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            buildingBaseMap_.AddEntriesFrom(input, _map_buildingBaseMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            buildingBaseMap_.AddEntriesFrom(ref input, _map_buildingBaseMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BuildingBaseConf : pb::IMessage<BuildingBaseConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BuildingBaseConf> _parser = new pb::MessageParser<BuildingBaseConf>(() => new BuildingBaseConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BuildingBaseConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.BuildingBaseConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildingBaseConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildingBaseConf(BuildingBaseConf other) : this() {
      buildingBaseMap_ = other.buildingBaseMap_.Clone();
      buildingBaseMapAB_ = other.buildingBaseMapAB_.Clone();
      buildingBaseMapABPatch_ = other.buildingBaseMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildingBaseConf Clone() {
      return new BuildingBaseConf(this);
    }

    /// <summary>Field number for the "BuildingBaseMap" field.</summary>
    public const int BuildingBaseMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.BuildingBase>.Codec _map_buildingBaseMap_codec
        = new pbc::MapField<int, global::fat.rawdata.BuildingBase>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.BuildingBase.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.BuildingBase> buildingBaseMap_ = new pbc::MapField<int, global::fat.rawdata.BuildingBase>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.BuildingBase> BuildingBaseMap {
      get { return buildingBaseMap_; }
    }

    /// <summary>Field number for the "BuildingBaseMapAB" field.</summary>
    public const int BuildingBaseMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.BuildingBaseMapABValue>.Codec _map_buildingBaseMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.BuildingBaseMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.BuildingBaseMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.BuildingBaseMapABValue> buildingBaseMapAB_ = new pbc::MapField<string, global::fat.rawdata.BuildingBaseMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.BuildingBaseMapABValue> BuildingBaseMapAB {
      get { return buildingBaseMapAB_; }
    }

    /// <summary>Field number for the "BuildingBaseMapABPatch" field.</summary>
    public const int BuildingBaseMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.BuildingBaseMapABValue>.Codec _map_buildingBaseMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.BuildingBaseMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.BuildingBaseMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.BuildingBaseMapABValue> buildingBaseMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.BuildingBaseMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.BuildingBaseMapABValue> BuildingBaseMapABPatch {
      get { return buildingBaseMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BuildingBaseConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BuildingBaseConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!BuildingBaseMap.Equals(other.BuildingBaseMap)) return false;
      if (!BuildingBaseMapAB.Equals(other.BuildingBaseMapAB)) return false;
      if (!BuildingBaseMapABPatch.Equals(other.BuildingBaseMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= BuildingBaseMap.GetHashCode();
      hash ^= BuildingBaseMapAB.GetHashCode();
      hash ^= BuildingBaseMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      buildingBaseMap_.WriteTo(output, _map_buildingBaseMap_codec);
      buildingBaseMapAB_.WriteTo(output, _map_buildingBaseMapAB_codec);
      buildingBaseMapABPatch_.WriteTo(output, _map_buildingBaseMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      buildingBaseMap_.WriteTo(ref output, _map_buildingBaseMap_codec);
      buildingBaseMapAB_.WriteTo(ref output, _map_buildingBaseMapAB_codec);
      buildingBaseMapABPatch_.WriteTo(ref output, _map_buildingBaseMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += buildingBaseMap_.CalculateSize(_map_buildingBaseMap_codec);
      size += buildingBaseMapAB_.CalculateSize(_map_buildingBaseMapAB_codec);
      size += buildingBaseMapABPatch_.CalculateSize(_map_buildingBaseMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BuildingBaseConf other) {
      if (other == null) {
        return;
      }
      buildingBaseMap_.Add(other.buildingBaseMap_);
      buildingBaseMapAB_.Add(other.buildingBaseMapAB_);
      buildingBaseMapABPatch_.Add(other.buildingBaseMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            buildingBaseMap_.AddEntriesFrom(input, _map_buildingBaseMap_codec);
            break;
          }
          case 18: {
            buildingBaseMapAB_.AddEntriesFrom(input, _map_buildingBaseMapAB_codec);
            break;
          }
          case 26: {
            buildingBaseMapABPatch_.AddEntriesFrom(input, _map_buildingBaseMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            buildingBaseMap_.AddEntriesFrom(ref input, _map_buildingBaseMap_codec);
            break;
          }
          case 18: {
            buildingBaseMapAB_.AddEntriesFrom(ref input, _map_buildingBaseMapAB_codec);
            break;
          }
          case 26: {
            buildingBaseMapABPatch_.AddEntriesFrom(ref input, _map_buildingBaseMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
