// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/MailConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/MailConf.proto</summary>
  public static partial class MailConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/MailConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MailConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChZyYXdkYXRhL01haWxDb25mLnByb3RvEgdyYXdkYXRhIuQCCgRNYWlsEgoK",
            "AmlkGAEgASgFEg8KB0NvbnRlbnQYAiABKAkSEAoIRW5kTGV2ZWwYAyABKAUS",
            "EgoKRW5kVmVyaXNvbhgEIAEoCRISCgpFeHBpcmVUaW1lGAUgASgDEgwKBEZy",
            "b20YDiABKAkSKQoGUmV3YXJkGAcgAygLMhkucmF3ZGF0YS5NYWlsLlJld2Fy",
            "ZEVudHJ5EhAKCFNob3dUaW1lGAggASgDEhIKClN0YXJ0TGV2ZWwYCSABKAUS",
            "FAoMU3RhcnRQbGF5RGF5GAogASgFEhQKDFN0YXJ0VmVyc2lvbhgLIAEoCRIN",
            "CgVUaXRsZRgMIAEoCRIMCgRpY29uGA8gASgJEg0KBWltYWdlGBAgASgJEgwK",
            "BGxpbmsYESABKAkSEQoJbGlua190eXBlGBIgASgFGi0KC1Jld2FyZEVudHJ5",
            "EgsKA2tleRgBIAEoBRINCgV2YWx1ZRgCIAEoBToCOAEihgEKDk1haWxNYXBB",
            "QlZhbHVlEjUKB01haWxNYXAYASADKAsyJC5yYXdkYXRhLk1haWxNYXBBQlZh",
            "bHVlLk1haWxNYXBFbnRyeRo9CgxNYWlsTWFwRW50cnkSCwoDa2V5GAEgASgF",
            "EhwKBXZhbHVlGAIgASgLMg0ucmF3ZGF0YS5NYWlsOgI4ASKJAwoITWFpbENv",
            "bmYSLwoHTWFpbE1hcBgBIAMoCzIeLnJhd2RhdGEuTWFpbENvbmYuTWFpbE1h",
            "cEVudHJ5EjMKCU1haWxNYXBBQhgCIAMoCzIgLnJhd2RhdGEuTWFpbENvbmYu",
            "TWFpbE1hcEFCRW50cnkSPQoOTWFpbE1hcEFCUGF0Y2gYAyADKAsyJS5yYXdk",
            "YXRhLk1haWxDb25mLk1haWxNYXBBQlBhdGNoRW50cnkaPQoMTWFpbE1hcEVu",
            "dHJ5EgsKA2tleRgBIAEoBRIcCgV2YWx1ZRgCIAEoCzINLnJhd2RhdGEuTWFp",
            "bDoCOAEaSQoOTWFpbE1hcEFCRW50cnkSCwoDa2V5GAEgASgJEiYKBXZhbHVl",
            "GAIgASgLMhcucmF3ZGF0YS5NYWlsTWFwQUJWYWx1ZToCOAEaTgoTTWFpbE1h",
            "cEFCUGF0Y2hFbnRyeRILCgNrZXkYASABKAkSJgoFdmFsdWUYAiABKAsyFy5y",
            "YXdkYXRhLk1haWxNYXBBQlZhbHVlOgI4AUI9Wi1naXRsYWIuZnVucGx1cy5p",
            "by9mYXQvY29uZi9nZW4vZ29sYW5nL3Jhd2RhdGGqAgtmYXQucmF3ZGF0YWIG",
            "cHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.Mail), global::fat.rawdata.Mail.Parser, new[]{ "Id", "Content", "EndLevel", "EndVerison", "ExpireTime", "From", "Reward", "ShowTime", "StartLevel", "StartPlayDay", "StartVersion", "Title", "Icon", "Image", "Link", "LinkType" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.MailMapABValue), global::fat.rawdata.MailMapABValue.Parser, new[]{ "MailMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.MailConf), global::fat.rawdata.MailConf.Parser, new[]{ "MailMap", "MailMapAB", "MailMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="Mail",table="MailMap",table_wrapper="MailConf",map="true",map_key_type="int32",data="MailConf")
  /// annotation@ab(table_ab="MailMapAB",table_ab_patch="MailMapABPatch",table_ab_value="MailMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@Mail(id="id")
  /// </summary>
  public sealed partial class Mail : pb::IMessage<Mail>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Mail> _parser = new pb::MessageParser<Mail>(() => new Mail());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Mail> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.MailConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Mail() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Mail(Mail other) : this() {
      id_ = other.id_;
      content_ = other.content_;
      endLevel_ = other.endLevel_;
      endVerison_ = other.endVerison_;
      expireTime_ = other.expireTime_;
      from_ = other.from_;
      reward_ = other.reward_.Clone();
      showTime_ = other.showTime_;
      startLevel_ = other.startLevel_;
      startPlayDay_ = other.startPlayDay_;
      startVersion_ = other.startVersion_;
      title_ = other.title_;
      icon_ = other.icon_;
      image_ = other.image_;
      link_ = other.link_;
      linkType_ = other.linkType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Mail Clone() {
      return new Mail(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 可以以日期为id, 但是必须是递增的值
    /// 例如2019111201
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "Content" field.</summary>
    public const int ContentFieldNumber = 2;
    private string content_ = "";
    /// <summary>
    /// 内容
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "EndLevel" field.</summary>
    public const int EndLevelFieldNumber = 3;
    private int endLevel_;
    /// <summary>
    /// 结束等级&lt;=
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EndLevel {
      get { return endLevel_; }
      set {
        endLevel_ = value;
      }
    }

    /// <summary>Field number for the "EndVerison" field.</summary>
    public const int EndVerisonFieldNumber = 4;
    private string endVerison_ = "";
    /// <summary>
    /// &lt;某个版本
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EndVerison {
      get { return endVerison_; }
      set {
        endVerison_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ExpireTime" field.</summary>
    public const int ExpireTimeFieldNumber = 5;
    private long expireTime_;
    /// <summary>
    /// 过期后会删除
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ExpireTime {
      get { return expireTime_; }
      set {
        expireTime_ = value;
      }
    }

    /// <summary>Field number for the "From" field.</summary>
    public const int FromFieldNumber = 14;
    private string from_ = "";
    /// <summary>
    /// 落款
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string From {
      get { return from_; }
      set {
        from_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Reward" field.</summary>
    public const int RewardFieldNumber = 7;
    private static readonly pbc::MapField<int, int>.Codec _map_reward_codec
        = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForInt32(16, 0), 58);
    private readonly pbc::MapField<int, int> reward_ = new pbc::MapField<int, int>();
    /// <summary>
    /// 奖励内容
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, int> Reward {
      get { return reward_; }
    }

    /// <summary>Field number for the "ShowTime" field.</summary>
    public const int ShowTimeFieldNumber = 8;
    private long showTime_;
    /// <summary>
    /// 大于等于这个时间才会显示
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ShowTime {
      get { return showTime_; }
      set {
        showTime_ = value;
      }
    }

    /// <summary>Field number for the "StartLevel" field.</summary>
    public const int StartLevelFieldNumber = 9;
    private int startLevel_;
    /// <summary>
    /// 开始等级>=
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StartLevel {
      get { return startLevel_; }
      set {
        startLevel_ = value;
      }
    }

    /// <summary>Field number for the "StartPlayDay" field.</summary>
    public const int StartPlayDayFieldNumber = 10;
    private int startPlayDay_;
    /// <summary>
    /// 游戏天数>=
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StartPlayDay {
      get { return startPlayDay_; }
      set {
        startPlayDay_ = value;
      }
    }

    /// <summary>Field number for the "StartVersion" field.</summary>
    public const int StartVersionFieldNumber = 11;
    private string startVersion_ = "";
    /// <summary>
    /// >=某个版本
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StartVersion {
      get { return startVersion_; }
      set {
        startVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Title" field.</summary>
    public const int TitleFieldNumber = 12;
    private string title_ = "";
    /// <summary>
    /// 标题
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "icon" field.</summary>
    public const int IconFieldNumber = 15;
    private string icon_ = "";
    /// <summary>
    /// 图标
    /// （暂时无效）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Icon {
      get { return icon_; }
      set {
        icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "image" field.</summary>
    public const int ImageFieldNumber = 16;
    private string image_ = "";
    /// <summary>
    /// 图片
    /// （暂时无效）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Image {
      get { return image_; }
      set {
        image_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "link" field.</summary>
    public const int LinkFieldNumber = 17;
    private string link_ = "";
    /// <summary>
    /// 链接
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Link {
      get { return link_; }
      set {
        link_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "link_type" field.</summary>
    public const int LinkTypeFieldNumber = 18;
    private int linkType_;
    /// <summary>
    /// 链接类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LinkType {
      get { return linkType_; }
      set {
        linkType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Mail);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Mail other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Content != other.Content) return false;
      if (EndLevel != other.EndLevel) return false;
      if (EndVerison != other.EndVerison) return false;
      if (ExpireTime != other.ExpireTime) return false;
      if (From != other.From) return false;
      if (!Reward.Equals(other.Reward)) return false;
      if (ShowTime != other.ShowTime) return false;
      if (StartLevel != other.StartLevel) return false;
      if (StartPlayDay != other.StartPlayDay) return false;
      if (StartVersion != other.StartVersion) return false;
      if (Title != other.Title) return false;
      if (Icon != other.Icon) return false;
      if (Image != other.Image) return false;
      if (Link != other.Link) return false;
      if (LinkType != other.LinkType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      if (EndLevel != 0) hash ^= EndLevel.GetHashCode();
      if (EndVerison.Length != 0) hash ^= EndVerison.GetHashCode();
      if (ExpireTime != 0L) hash ^= ExpireTime.GetHashCode();
      if (From.Length != 0) hash ^= From.GetHashCode();
      hash ^= Reward.GetHashCode();
      if (ShowTime != 0L) hash ^= ShowTime.GetHashCode();
      if (StartLevel != 0) hash ^= StartLevel.GetHashCode();
      if (StartPlayDay != 0) hash ^= StartPlayDay.GetHashCode();
      if (StartVersion.Length != 0) hash ^= StartVersion.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (Icon.Length != 0) hash ^= Icon.GetHashCode();
      if (Image.Length != 0) hash ^= Image.GetHashCode();
      if (Link.Length != 0) hash ^= Link.GetHashCode();
      if (LinkType != 0) hash ^= LinkType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Content);
      }
      if (EndLevel != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(EndLevel);
      }
      if (EndVerison.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(EndVerison);
      }
      if (ExpireTime != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(ExpireTime);
      }
      reward_.WriteTo(output, _map_reward_codec);
      if (ShowTime != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(ShowTime);
      }
      if (StartLevel != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(StartLevel);
      }
      if (StartPlayDay != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(StartPlayDay);
      }
      if (StartVersion.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(StartVersion);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Title);
      }
      if (From.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(From);
      }
      if (Icon.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(Icon);
      }
      if (Image.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(Image);
      }
      if (Link.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(Link);
      }
      if (LinkType != 0) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(LinkType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Content);
      }
      if (EndLevel != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(EndLevel);
      }
      if (EndVerison.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(EndVerison);
      }
      if (ExpireTime != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(ExpireTime);
      }
      reward_.WriteTo(ref output, _map_reward_codec);
      if (ShowTime != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(ShowTime);
      }
      if (StartLevel != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(StartLevel);
      }
      if (StartPlayDay != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(StartPlayDay);
      }
      if (StartVersion.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(StartVersion);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Title);
      }
      if (From.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(From);
      }
      if (Icon.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(Icon);
      }
      if (Image.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(Image);
      }
      if (Link.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(Link);
      }
      if (LinkType != 0) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(LinkType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
      }
      if (EndLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EndLevel);
      }
      if (EndVerison.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EndVerison);
      }
      if (ExpireTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ExpireTime);
      }
      if (From.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(From);
      }
      size += reward_.CalculateSize(_map_reward_codec);
      if (ShowTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ShowTime);
      }
      if (StartLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartLevel);
      }
      if (StartPlayDay != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartPlayDay);
      }
      if (StartVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StartVersion);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (Icon.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Icon);
      }
      if (Image.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Image);
      }
      if (Link.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Link);
      }
      if (LinkType != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(LinkType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Mail other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      if (other.EndLevel != 0) {
        EndLevel = other.EndLevel;
      }
      if (other.EndVerison.Length != 0) {
        EndVerison = other.EndVerison;
      }
      if (other.ExpireTime != 0L) {
        ExpireTime = other.ExpireTime;
      }
      if (other.From.Length != 0) {
        From = other.From;
      }
      reward_.Add(other.reward_);
      if (other.ShowTime != 0L) {
        ShowTime = other.ShowTime;
      }
      if (other.StartLevel != 0) {
        StartLevel = other.StartLevel;
      }
      if (other.StartPlayDay != 0) {
        StartPlayDay = other.StartPlayDay;
      }
      if (other.StartVersion.Length != 0) {
        StartVersion = other.StartVersion;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.Icon.Length != 0) {
        Icon = other.Icon;
      }
      if (other.Image.Length != 0) {
        Image = other.Image;
      }
      if (other.Link.Length != 0) {
        Link = other.Link;
      }
      if (other.LinkType != 0) {
        LinkType = other.LinkType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Content = input.ReadString();
            break;
          }
          case 24: {
            EndLevel = input.ReadInt32();
            break;
          }
          case 34: {
            EndVerison = input.ReadString();
            break;
          }
          case 40: {
            ExpireTime = input.ReadInt64();
            break;
          }
          case 58: {
            reward_.AddEntriesFrom(input, _map_reward_codec);
            break;
          }
          case 64: {
            ShowTime = input.ReadInt64();
            break;
          }
          case 72: {
            StartLevel = input.ReadInt32();
            break;
          }
          case 80: {
            StartPlayDay = input.ReadInt32();
            break;
          }
          case 90: {
            StartVersion = input.ReadString();
            break;
          }
          case 98: {
            Title = input.ReadString();
            break;
          }
          case 114: {
            From = input.ReadString();
            break;
          }
          case 122: {
            Icon = input.ReadString();
            break;
          }
          case 130: {
            Image = input.ReadString();
            break;
          }
          case 138: {
            Link = input.ReadString();
            break;
          }
          case 144: {
            LinkType = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Content = input.ReadString();
            break;
          }
          case 24: {
            EndLevel = input.ReadInt32();
            break;
          }
          case 34: {
            EndVerison = input.ReadString();
            break;
          }
          case 40: {
            ExpireTime = input.ReadInt64();
            break;
          }
          case 58: {
            reward_.AddEntriesFrom(ref input, _map_reward_codec);
            break;
          }
          case 64: {
            ShowTime = input.ReadInt64();
            break;
          }
          case 72: {
            StartLevel = input.ReadInt32();
            break;
          }
          case 80: {
            StartPlayDay = input.ReadInt32();
            break;
          }
          case 90: {
            StartVersion = input.ReadString();
            break;
          }
          case 98: {
            Title = input.ReadString();
            break;
          }
          case 114: {
            From = input.ReadString();
            break;
          }
          case 122: {
            Icon = input.ReadString();
            break;
          }
          case 130: {
            Image = input.ReadString();
            break;
          }
          case 138: {
            Link = input.ReadString();
            break;
          }
          case 144: {
            LinkType = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MailMapABValue : pb::IMessage<MailMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MailMapABValue> _parser = new pb::MessageParser<MailMapABValue>(() => new MailMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MailMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.MailConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MailMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MailMapABValue(MailMapABValue other) : this() {
      mailMap_ = other.mailMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MailMapABValue Clone() {
      return new MailMapABValue(this);
    }

    /// <summary>Field number for the "MailMap" field.</summary>
    public const int MailMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.Mail>.Codec _map_mailMap_codec
        = new pbc::MapField<int, global::fat.rawdata.Mail>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.Mail.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.Mail> mailMap_ = new pbc::MapField<int, global::fat.rawdata.Mail>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.Mail> MailMap {
      get { return mailMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MailMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MailMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!MailMap.Equals(other.MailMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= MailMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      mailMap_.WriteTo(output, _map_mailMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      mailMap_.WriteTo(ref output, _map_mailMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += mailMap_.CalculateSize(_map_mailMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MailMapABValue other) {
      if (other == null) {
        return;
      }
      mailMap_.Add(other.mailMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            mailMap_.AddEntriesFrom(input, _map_mailMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            mailMap_.AddEntriesFrom(ref input, _map_mailMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MailConf : pb::IMessage<MailConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MailConf> _parser = new pb::MessageParser<MailConf>(() => new MailConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MailConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.MailConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MailConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MailConf(MailConf other) : this() {
      mailMap_ = other.mailMap_.Clone();
      mailMapAB_ = other.mailMapAB_.Clone();
      mailMapABPatch_ = other.mailMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MailConf Clone() {
      return new MailConf(this);
    }

    /// <summary>Field number for the "MailMap" field.</summary>
    public const int MailMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.Mail>.Codec _map_mailMap_codec
        = new pbc::MapField<int, global::fat.rawdata.Mail>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.Mail.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.Mail> mailMap_ = new pbc::MapField<int, global::fat.rawdata.Mail>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.Mail> MailMap {
      get { return mailMap_; }
    }

    /// <summary>Field number for the "MailMapAB" field.</summary>
    public const int MailMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.MailMapABValue>.Codec _map_mailMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.MailMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.MailMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.MailMapABValue> mailMapAB_ = new pbc::MapField<string, global::fat.rawdata.MailMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.MailMapABValue> MailMapAB {
      get { return mailMapAB_; }
    }

    /// <summary>Field number for the "MailMapABPatch" field.</summary>
    public const int MailMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.MailMapABValue>.Codec _map_mailMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.MailMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.MailMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.MailMapABValue> mailMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.MailMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.MailMapABValue> MailMapABPatch {
      get { return mailMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MailConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MailConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!MailMap.Equals(other.MailMap)) return false;
      if (!MailMapAB.Equals(other.MailMapAB)) return false;
      if (!MailMapABPatch.Equals(other.MailMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= MailMap.GetHashCode();
      hash ^= MailMapAB.GetHashCode();
      hash ^= MailMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      mailMap_.WriteTo(output, _map_mailMap_codec);
      mailMapAB_.WriteTo(output, _map_mailMapAB_codec);
      mailMapABPatch_.WriteTo(output, _map_mailMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      mailMap_.WriteTo(ref output, _map_mailMap_codec);
      mailMapAB_.WriteTo(ref output, _map_mailMapAB_codec);
      mailMapABPatch_.WriteTo(ref output, _map_mailMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += mailMap_.CalculateSize(_map_mailMap_codec);
      size += mailMapAB_.CalculateSize(_map_mailMapAB_codec);
      size += mailMapABPatch_.CalculateSize(_map_mailMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MailConf other) {
      if (other == null) {
        return;
      }
      mailMap_.Add(other.mailMap_);
      mailMapAB_.Add(other.mailMapAB_);
      mailMapABPatch_.Add(other.mailMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            mailMap_.AddEntriesFrom(input, _map_mailMap_codec);
            break;
          }
          case 18: {
            mailMapAB_.AddEntriesFrom(input, _map_mailMapAB_codec);
            break;
          }
          case 26: {
            mailMapABPatch_.AddEntriesFrom(input, _map_mailMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            mailMap_.AddEntriesFrom(ref input, _map_mailMap_codec);
            break;
          }
          case 18: {
            mailMapAB_.AddEntriesFrom(ref input, _map_mailMapAB_codec);
            break;
          }
          case 26: {
            mailMapABPatch_.AddEntriesFrom(ref input, _map_mailMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
