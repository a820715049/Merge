// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventIndepenBingoRoundConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventIndepenBingoRoundConf.proto</summary>
  public static partial class EventIndepenBingoRoundConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventIndepenBingoRoundConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventIndepenBingoRoundConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CihyYXdkYXRhL0V2ZW50SW5kZXBlbkJpbmdvUm91bmRDb25mLnByb3RvEgdy",
            "YXdkYXRhIkAKFkV2ZW50SW5kZXBlbkJpbmdvUm91bmQSCgoCaWQYASABKAUS",
            "GgoSaW5jbHVkZUl0ZW1CaW5nb0lkGAIgAygFIvIBCiBFdmVudEluZGVwZW5C",
            "aW5nb1JvdW5kTWFwQUJWYWx1ZRJrChlFdmVudEluZGVwZW5CaW5nb1JvdW5k",
            "TWFwGAEgAygLMkgucmF3ZGF0YS5FdmVudEluZGVwZW5CaW5nb1JvdW5kTWFw",
            "QUJWYWx1ZS5FdmVudEluZGVwZW5CaW5nb1JvdW5kTWFwRW50cnkaYQoeRXZl",
            "bnRJbmRlcGVuQmluZ29Sb3VuZE1hcEVudHJ5EgsKA2tleRgBIAEoBRIuCgV2",
            "YWx1ZRgCIAEoCzIfLnJhd2RhdGEuRXZlbnRJbmRlcGVuQmluZ29Sb3VuZDoC",
            "OAEiqQUKGkV2ZW50SW5kZXBlbkJpbmdvUm91bmRDb25mEmUKGUV2ZW50SW5k",
            "ZXBlbkJpbmdvUm91bmRNYXAYASADKAsyQi5yYXdkYXRhLkV2ZW50SW5kZXBl",
            "bkJpbmdvUm91bmRDb25mLkV2ZW50SW5kZXBlbkJpbmdvUm91bmRNYXBFbnRy",
            "eRJpChtFdmVudEluZGVwZW5CaW5nb1JvdW5kTWFwQUIYAiADKAsyRC5yYXdk",
            "YXRhLkV2ZW50SW5kZXBlbkJpbmdvUm91bmRDb25mLkV2ZW50SW5kZXBlbkJp",
            "bmdvUm91bmRNYXBBQkVudHJ5EnMKIEV2ZW50SW5kZXBlbkJpbmdvUm91bmRN",
            "YXBBQlBhdGNoGAMgAygLMkkucmF3ZGF0YS5FdmVudEluZGVwZW5CaW5nb1Jv",
            "dW5kQ29uZi5FdmVudEluZGVwZW5CaW5nb1JvdW5kTWFwQUJQYXRjaEVudHJ5",
            "GmEKHkV2ZW50SW5kZXBlbkJpbmdvUm91bmRNYXBFbnRyeRILCgNrZXkYASAB",
            "KAUSLgoFdmFsdWUYAiABKAsyHy5yYXdkYXRhLkV2ZW50SW5kZXBlbkJpbmdv",
            "Um91bmQ6AjgBGm0KIEV2ZW50SW5kZXBlbkJpbmdvUm91bmRNYXBBQkVudHJ5",
            "EgsKA2tleRgBIAEoCRI4CgV2YWx1ZRgCIAEoCzIpLnJhd2RhdGEuRXZlbnRJ",
            "bmRlcGVuQmluZ29Sb3VuZE1hcEFCVmFsdWU6AjgBGnIKJUV2ZW50SW5kZXBl",
            "bkJpbmdvUm91bmRNYXBBQlBhdGNoRW50cnkSCwoDa2V5GAEgASgJEjgKBXZh",
            "bHVlGAIgASgLMikucmF3ZGF0YS5FdmVudEluZGVwZW5CaW5nb1JvdW5kTWFw",
            "QUJWYWx1ZToCOAFCPVotZ2l0bGFiLmZ1bnBsdXMuaW8vZmF0L2NvbmYvZ2Vu",
            "L2dvbGFuZy9yYXdkYXRhqgILZmF0LnJhd2RhdGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventIndepenBingoRound), global::fat.rawdata.EventIndepenBingoRound.Parser, new[]{ "Id", "IncludeItemBingoId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventIndepenBingoRoundMapABValue), global::fat.rawdata.EventIndepenBingoRoundMapABValue.Parser, new[]{ "EventIndepenBingoRoundMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventIndepenBingoRoundConf), global::fat.rawdata.EventIndepenBingoRoundConf.Parser, new[]{ "EventIndepenBingoRoundMap", "EventIndepenBingoRoundMapAB", "EventIndepenBingoRoundMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventIndepenBingoRound",table="EventIndepenBingoRoundMap",table_wrapper="EventIndepenBingoRoundConf",map="true",map_key_type="int32",data="EventIndepenBingoRoundConf")
  /// annotation@ab(table_ab="EventIndepenBingoRoundMapAB",table_ab_patch="EventIndepenBingoRoundMapABPatch",table_ab_value="EventIndepenBingoRoundMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventIndepenBingoRound(id="id")
  /// </summary>
  public sealed partial class EventIndepenBingoRound : pb::IMessage<EventIndepenBingoRound>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventIndepenBingoRound> _parser = new pb::MessageParser<EventIndepenBingoRound>(() => new EventIndepenBingoRound());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventIndepenBingoRound> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventIndepenBingoRoundConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventIndepenBingoRound() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventIndepenBingoRound(EventIndepenBingoRound other) : this() {
      id_ = other.id_;
      includeItemBingoId_ = other.includeItemBingoId_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventIndepenBingoRound Clone() {
      return new EventIndepenBingoRound(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 活动模板ID
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "includeItemBingoId" field.</summary>
    public const int IncludeItemBingoIdFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_includeItemBingoId_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> includeItemBingoId_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 活动包含哪几轮活动
    /// （EventItemBingo.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> IncludeItemBingoId {
      get { return includeItemBingoId_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventIndepenBingoRound);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventIndepenBingoRound other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!includeItemBingoId_.Equals(other.includeItemBingoId_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      hash ^= includeItemBingoId_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      includeItemBingoId_.WriteTo(output, _repeated_includeItemBingoId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      includeItemBingoId_.WriteTo(ref output, _repeated_includeItemBingoId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      size += includeItemBingoId_.CalculateSize(_repeated_includeItemBingoId_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventIndepenBingoRound other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      includeItemBingoId_.Add(other.includeItemBingoId_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            includeItemBingoId_.AddEntriesFrom(input, _repeated_includeItemBingoId_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            includeItemBingoId_.AddEntriesFrom(ref input, _repeated_includeItemBingoId_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventIndepenBingoRoundMapABValue : pb::IMessage<EventIndepenBingoRoundMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventIndepenBingoRoundMapABValue> _parser = new pb::MessageParser<EventIndepenBingoRoundMapABValue>(() => new EventIndepenBingoRoundMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventIndepenBingoRoundMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventIndepenBingoRoundConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventIndepenBingoRoundMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventIndepenBingoRoundMapABValue(EventIndepenBingoRoundMapABValue other) : this() {
      eventIndepenBingoRoundMap_ = other.eventIndepenBingoRoundMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventIndepenBingoRoundMapABValue Clone() {
      return new EventIndepenBingoRoundMapABValue(this);
    }

    /// <summary>Field number for the "EventIndepenBingoRoundMap" field.</summary>
    public const int EventIndepenBingoRoundMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventIndepenBingoRound>.Codec _map_eventIndepenBingoRoundMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventIndepenBingoRound>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventIndepenBingoRound.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventIndepenBingoRound> eventIndepenBingoRoundMap_ = new pbc::MapField<int, global::fat.rawdata.EventIndepenBingoRound>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventIndepenBingoRound> EventIndepenBingoRoundMap {
      get { return eventIndepenBingoRoundMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventIndepenBingoRoundMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventIndepenBingoRoundMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventIndepenBingoRoundMap.Equals(other.EventIndepenBingoRoundMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventIndepenBingoRoundMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventIndepenBingoRoundMap_.WriteTo(output, _map_eventIndepenBingoRoundMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventIndepenBingoRoundMap_.WriteTo(ref output, _map_eventIndepenBingoRoundMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventIndepenBingoRoundMap_.CalculateSize(_map_eventIndepenBingoRoundMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventIndepenBingoRoundMapABValue other) {
      if (other == null) {
        return;
      }
      eventIndepenBingoRoundMap_.Add(other.eventIndepenBingoRoundMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventIndepenBingoRoundMap_.AddEntriesFrom(input, _map_eventIndepenBingoRoundMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventIndepenBingoRoundMap_.AddEntriesFrom(ref input, _map_eventIndepenBingoRoundMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventIndepenBingoRoundConf : pb::IMessage<EventIndepenBingoRoundConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventIndepenBingoRoundConf> _parser = new pb::MessageParser<EventIndepenBingoRoundConf>(() => new EventIndepenBingoRoundConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventIndepenBingoRoundConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventIndepenBingoRoundConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventIndepenBingoRoundConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventIndepenBingoRoundConf(EventIndepenBingoRoundConf other) : this() {
      eventIndepenBingoRoundMap_ = other.eventIndepenBingoRoundMap_.Clone();
      eventIndepenBingoRoundMapAB_ = other.eventIndepenBingoRoundMapAB_.Clone();
      eventIndepenBingoRoundMapABPatch_ = other.eventIndepenBingoRoundMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventIndepenBingoRoundConf Clone() {
      return new EventIndepenBingoRoundConf(this);
    }

    /// <summary>Field number for the "EventIndepenBingoRoundMap" field.</summary>
    public const int EventIndepenBingoRoundMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventIndepenBingoRound>.Codec _map_eventIndepenBingoRoundMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventIndepenBingoRound>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventIndepenBingoRound.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventIndepenBingoRound> eventIndepenBingoRoundMap_ = new pbc::MapField<int, global::fat.rawdata.EventIndepenBingoRound>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventIndepenBingoRound> EventIndepenBingoRoundMap {
      get { return eventIndepenBingoRoundMap_; }
    }

    /// <summary>Field number for the "EventIndepenBingoRoundMapAB" field.</summary>
    public const int EventIndepenBingoRoundMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventIndepenBingoRoundMapABValue>.Codec _map_eventIndepenBingoRoundMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventIndepenBingoRoundMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventIndepenBingoRoundMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventIndepenBingoRoundMapABValue> eventIndepenBingoRoundMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventIndepenBingoRoundMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventIndepenBingoRoundMapABValue> EventIndepenBingoRoundMapAB {
      get { return eventIndepenBingoRoundMapAB_; }
    }

    /// <summary>Field number for the "EventIndepenBingoRoundMapABPatch" field.</summary>
    public const int EventIndepenBingoRoundMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventIndepenBingoRoundMapABValue>.Codec _map_eventIndepenBingoRoundMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventIndepenBingoRoundMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventIndepenBingoRoundMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventIndepenBingoRoundMapABValue> eventIndepenBingoRoundMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventIndepenBingoRoundMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventIndepenBingoRoundMapABValue> EventIndepenBingoRoundMapABPatch {
      get { return eventIndepenBingoRoundMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventIndepenBingoRoundConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventIndepenBingoRoundConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventIndepenBingoRoundMap.Equals(other.EventIndepenBingoRoundMap)) return false;
      if (!EventIndepenBingoRoundMapAB.Equals(other.EventIndepenBingoRoundMapAB)) return false;
      if (!EventIndepenBingoRoundMapABPatch.Equals(other.EventIndepenBingoRoundMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventIndepenBingoRoundMap.GetHashCode();
      hash ^= EventIndepenBingoRoundMapAB.GetHashCode();
      hash ^= EventIndepenBingoRoundMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventIndepenBingoRoundMap_.WriteTo(output, _map_eventIndepenBingoRoundMap_codec);
      eventIndepenBingoRoundMapAB_.WriteTo(output, _map_eventIndepenBingoRoundMapAB_codec);
      eventIndepenBingoRoundMapABPatch_.WriteTo(output, _map_eventIndepenBingoRoundMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventIndepenBingoRoundMap_.WriteTo(ref output, _map_eventIndepenBingoRoundMap_codec);
      eventIndepenBingoRoundMapAB_.WriteTo(ref output, _map_eventIndepenBingoRoundMapAB_codec);
      eventIndepenBingoRoundMapABPatch_.WriteTo(ref output, _map_eventIndepenBingoRoundMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventIndepenBingoRoundMap_.CalculateSize(_map_eventIndepenBingoRoundMap_codec);
      size += eventIndepenBingoRoundMapAB_.CalculateSize(_map_eventIndepenBingoRoundMapAB_codec);
      size += eventIndepenBingoRoundMapABPatch_.CalculateSize(_map_eventIndepenBingoRoundMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventIndepenBingoRoundConf other) {
      if (other == null) {
        return;
      }
      eventIndepenBingoRoundMap_.Add(other.eventIndepenBingoRoundMap_);
      eventIndepenBingoRoundMapAB_.Add(other.eventIndepenBingoRoundMapAB_);
      eventIndepenBingoRoundMapABPatch_.Add(other.eventIndepenBingoRoundMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventIndepenBingoRoundMap_.AddEntriesFrom(input, _map_eventIndepenBingoRoundMap_codec);
            break;
          }
          case 18: {
            eventIndepenBingoRoundMapAB_.AddEntriesFrom(input, _map_eventIndepenBingoRoundMapAB_codec);
            break;
          }
          case 26: {
            eventIndepenBingoRoundMapABPatch_.AddEntriesFrom(input, _map_eventIndepenBingoRoundMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventIndepenBingoRoundMap_.AddEntriesFrom(ref input, _map_eventIndepenBingoRoundMap_codec);
            break;
          }
          case 18: {
            eventIndepenBingoRoundMapAB_.AddEntriesFrom(ref input, _map_eventIndepenBingoRoundMapAB_codec);
            break;
          }
          case 26: {
            eventIndepenBingoRoundMapABPatch_.AddEntriesFrom(ref input, _map_eventIndepenBingoRoundMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
