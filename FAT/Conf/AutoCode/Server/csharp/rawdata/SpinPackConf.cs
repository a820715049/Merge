// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/SpinPackConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/SpinPackConf.proto</summary>
  public static partial class SpinPackConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/SpinPackConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SpinPackConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChpyYXdkYXRhL1NwaW5QYWNrQ29uZi5wcm90bxIHcmF3ZGF0YSI+CghTcGlu",
            "UGFjaxIKCgJpZBgBIAEoBRISCgpldmVudEdyb3VwGAIgASgFEhIKCmV2ZW50",
            "VGhlbWUYAyABKAUingEKElNwaW5QYWNrTWFwQUJWYWx1ZRJBCgtTcGluUGFj",
            "a01hcBgBIAMoCzIsLnJhd2RhdGEuU3BpblBhY2tNYXBBQlZhbHVlLlNwaW5Q",
            "YWNrTWFwRW50cnkaRQoQU3BpblBhY2tNYXBFbnRyeRILCgNrZXkYASABKAUS",
            "IAoFdmFsdWUYAiABKAsyES5yYXdkYXRhLlNwaW5QYWNrOgI4ASLJAwoMU3Bp",
            "blBhY2tDb25mEjsKC1NwaW5QYWNrTWFwGAEgAygLMiYucmF3ZGF0YS5TcGlu",
            "UGFja0NvbmYuU3BpblBhY2tNYXBFbnRyeRI/Cg1TcGluUGFja01hcEFCGAIg",
            "AygLMigucmF3ZGF0YS5TcGluUGFja0NvbmYuU3BpblBhY2tNYXBBQkVudHJ5",
            "EkkKElNwaW5QYWNrTWFwQUJQYXRjaBgDIAMoCzItLnJhd2RhdGEuU3BpblBh",
            "Y2tDb25mLlNwaW5QYWNrTWFwQUJQYXRjaEVudHJ5GkUKEFNwaW5QYWNrTWFw",
            "RW50cnkSCwoDa2V5GAEgASgFEiAKBXZhbHVlGAIgASgLMhEucmF3ZGF0YS5T",
            "cGluUGFjazoCOAEaUQoSU3BpblBhY2tNYXBBQkVudHJ5EgsKA2tleRgBIAEo",
            "CRIqCgV2YWx1ZRgCIAEoCzIbLnJhd2RhdGEuU3BpblBhY2tNYXBBQlZhbHVl",
            "OgI4ARpWChdTcGluUGFja01hcEFCUGF0Y2hFbnRyeRILCgNrZXkYASABKAkS",
            "KgoFdmFsdWUYAiABKAsyGy5yYXdkYXRhLlNwaW5QYWNrTWFwQUJWYWx1ZToC",
            "OAFCPVotZ2l0bGFiLmZ1bnBsdXMuaW8vZmF0L2NvbmYvZ2VuL2dvbGFuZy9y",
            "YXdkYXRhqgILZmF0LnJhd2RhdGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.SpinPack), global::fat.rawdata.SpinPack.Parser, new[]{ "Id", "EventGroup", "EventTheme" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.SpinPackMapABValue), global::fat.rawdata.SpinPackMapABValue.Parser, new[]{ "SpinPackMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.SpinPackConf), global::fat.rawdata.SpinPackConf.Parser, new[]{ "SpinPackMap", "SpinPackMapAB", "SpinPackMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="SpinPack",table="SpinPackMap",table_wrapper="SpinPackConf",map="true",map_key_type="int32",data="SpinPackConf")
  /// annotation@ab(table_ab="SpinPackMapAB",table_ab_patch="SpinPackMapABPatch",table_ab_value="SpinPackMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@SpinPack(id="id")
  /// </summary>
  public sealed partial class SpinPack : pb::IMessage<SpinPack>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpinPack> _parser = new pb::MessageParser<SpinPack>(() => new SpinPack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SpinPack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.SpinPackConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpinPack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpinPack(SpinPack other) : this() {
      id_ = other.id_;
      eventGroup_ = other.eventGroup_;
      eventTheme_ = other.eventTheme_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpinPack Clone() {
      return new SpinPack(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 活动模板id
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "eventGroup" field.</summary>
    public const int EventGroupFieldNumber = 2;
    private int eventGroup_;
    /// <summary>
    /// 活动用户分层
    /// （GradeIndexMapping.id）
    /// （SpinPackDetail.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EventGroup {
      get { return eventGroup_; }
      set {
        eventGroup_ = value;
      }
    }

    /// <summary>Field number for the "eventTheme" field.</summary>
    public const int EventThemeFieldNumber = 3;
    private int eventTheme_;
    /// <summary>
    /// 活动弹板ID
    /// （EventTheme.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EventTheme {
      get { return eventTheme_; }
      set {
        eventTheme_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SpinPack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SpinPack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (EventGroup != other.EventGroup) return false;
      if (EventTheme != other.EventTheme) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (EventGroup != 0) hash ^= EventGroup.GetHashCode();
      if (EventTheme != 0) hash ^= EventTheme.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (EventGroup != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(EventGroup);
      }
      if (EventTheme != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(EventTheme);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (EventGroup != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(EventGroup);
      }
      if (EventTheme != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(EventTheme);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (EventGroup != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EventGroup);
      }
      if (EventTheme != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EventTheme);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SpinPack other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.EventGroup != 0) {
        EventGroup = other.EventGroup;
      }
      if (other.EventTheme != 0) {
        EventTheme = other.EventTheme;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            EventGroup = input.ReadInt32();
            break;
          }
          case 24: {
            EventTheme = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            EventGroup = input.ReadInt32();
            break;
          }
          case 24: {
            EventTheme = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SpinPackMapABValue : pb::IMessage<SpinPackMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpinPackMapABValue> _parser = new pb::MessageParser<SpinPackMapABValue>(() => new SpinPackMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SpinPackMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.SpinPackConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpinPackMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpinPackMapABValue(SpinPackMapABValue other) : this() {
      spinPackMap_ = other.spinPackMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpinPackMapABValue Clone() {
      return new SpinPackMapABValue(this);
    }

    /// <summary>Field number for the "SpinPackMap" field.</summary>
    public const int SpinPackMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.SpinPack>.Codec _map_spinPackMap_codec
        = new pbc::MapField<int, global::fat.rawdata.SpinPack>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.SpinPack.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.SpinPack> spinPackMap_ = new pbc::MapField<int, global::fat.rawdata.SpinPack>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.SpinPack> SpinPackMap {
      get { return spinPackMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SpinPackMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SpinPackMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!SpinPackMap.Equals(other.SpinPackMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= SpinPackMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      spinPackMap_.WriteTo(output, _map_spinPackMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      spinPackMap_.WriteTo(ref output, _map_spinPackMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += spinPackMap_.CalculateSize(_map_spinPackMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SpinPackMapABValue other) {
      if (other == null) {
        return;
      }
      spinPackMap_.Add(other.spinPackMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            spinPackMap_.AddEntriesFrom(input, _map_spinPackMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            spinPackMap_.AddEntriesFrom(ref input, _map_spinPackMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SpinPackConf : pb::IMessage<SpinPackConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpinPackConf> _parser = new pb::MessageParser<SpinPackConf>(() => new SpinPackConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SpinPackConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.SpinPackConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpinPackConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpinPackConf(SpinPackConf other) : this() {
      spinPackMap_ = other.spinPackMap_.Clone();
      spinPackMapAB_ = other.spinPackMapAB_.Clone();
      spinPackMapABPatch_ = other.spinPackMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpinPackConf Clone() {
      return new SpinPackConf(this);
    }

    /// <summary>Field number for the "SpinPackMap" field.</summary>
    public const int SpinPackMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.SpinPack>.Codec _map_spinPackMap_codec
        = new pbc::MapField<int, global::fat.rawdata.SpinPack>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.SpinPack.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.SpinPack> spinPackMap_ = new pbc::MapField<int, global::fat.rawdata.SpinPack>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.SpinPack> SpinPackMap {
      get { return spinPackMap_; }
    }

    /// <summary>Field number for the "SpinPackMapAB" field.</summary>
    public const int SpinPackMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.SpinPackMapABValue>.Codec _map_spinPackMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.SpinPackMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.SpinPackMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.SpinPackMapABValue> spinPackMapAB_ = new pbc::MapField<string, global::fat.rawdata.SpinPackMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.SpinPackMapABValue> SpinPackMapAB {
      get { return spinPackMapAB_; }
    }

    /// <summary>Field number for the "SpinPackMapABPatch" field.</summary>
    public const int SpinPackMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.SpinPackMapABValue>.Codec _map_spinPackMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.SpinPackMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.SpinPackMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.SpinPackMapABValue> spinPackMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.SpinPackMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.SpinPackMapABValue> SpinPackMapABPatch {
      get { return spinPackMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SpinPackConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SpinPackConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!SpinPackMap.Equals(other.SpinPackMap)) return false;
      if (!SpinPackMapAB.Equals(other.SpinPackMapAB)) return false;
      if (!SpinPackMapABPatch.Equals(other.SpinPackMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= SpinPackMap.GetHashCode();
      hash ^= SpinPackMapAB.GetHashCode();
      hash ^= SpinPackMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      spinPackMap_.WriteTo(output, _map_spinPackMap_codec);
      spinPackMapAB_.WriteTo(output, _map_spinPackMapAB_codec);
      spinPackMapABPatch_.WriteTo(output, _map_spinPackMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      spinPackMap_.WriteTo(ref output, _map_spinPackMap_codec);
      spinPackMapAB_.WriteTo(ref output, _map_spinPackMapAB_codec);
      spinPackMapABPatch_.WriteTo(ref output, _map_spinPackMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += spinPackMap_.CalculateSize(_map_spinPackMap_codec);
      size += spinPackMapAB_.CalculateSize(_map_spinPackMapAB_codec);
      size += spinPackMapABPatch_.CalculateSize(_map_spinPackMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SpinPackConf other) {
      if (other == null) {
        return;
      }
      spinPackMap_.Add(other.spinPackMap_);
      spinPackMapAB_.Add(other.spinPackMapAB_);
      spinPackMapABPatch_.Add(other.spinPackMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            spinPackMap_.AddEntriesFrom(input, _map_spinPackMap_codec);
            break;
          }
          case 18: {
            spinPackMapAB_.AddEntriesFrom(input, _map_spinPackMapAB_codec);
            break;
          }
          case 26: {
            spinPackMapABPatch_.AddEntriesFrom(input, _map_spinPackMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            spinPackMap_.AddEntriesFrom(ref input, _map_spinPackMap_codec);
            break;
          }
          case 18: {
            spinPackMapAB_.AddEntriesFrom(ref input, _map_spinPackMapAB_codec);
            break;
          }
          case 26: {
            spinPackMapABPatch_.AddEntriesFrom(ref input, _map_spinPackMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
