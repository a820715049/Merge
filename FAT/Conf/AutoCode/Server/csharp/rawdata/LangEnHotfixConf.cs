// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/LangEnHotfixConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/LangEnHotfixConf.proto</summary>
  public static partial class LangEnHotfixConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/LangEnHotfixConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LangEnHotfixConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch5yYXdkYXRhL0xhbmdFbkhvdGZpeENvbmYucHJvdG8SB3Jhd2RhdGEiKAoM",
            "TGFuZ0VuSG90Zml4EgoKAkxLGAEgASgJEgwKBE5hbWUYAiABKAkiTAoYTGFu",
            "Z0VuSG90Zml4U2xpY2VBQlZhbHVlEjAKEUxhbmdFbkhvdGZpeFNsaWNlGAEg",
            "AygLMhUucmF3ZGF0YS5MYW5nRW5Ib3RmaXgiswMKEExhbmdFbkhvdGZpeENv",
            "bmYSMAoRTGFuZ0VuSG90Zml4U2xpY2UYASADKAsyFS5yYXdkYXRhLkxhbmdF",
            "bkhvdGZpeBJPChNMYW5nRW5Ib3RmaXhTbGljZUFCGAIgAygLMjIucmF3ZGF0",
            "YS5MYW5nRW5Ib3RmaXhDb25mLkxhbmdFbkhvdGZpeFNsaWNlQUJFbnRyeRJZ",
            "ChhMYW5nRW5Ib3RmaXhTbGljZUFCUGF0Y2gYAyADKAsyNy5yYXdkYXRhLkxh",
            "bmdFbkhvdGZpeENvbmYuTGFuZ0VuSG90Zml4U2xpY2VBQlBhdGNoRW50cnka",
            "XQoYTGFuZ0VuSG90Zml4U2xpY2VBQkVudHJ5EgsKA2tleRgBIAEoCRIwCgV2",
            "YWx1ZRgCIAEoCzIhLnJhd2RhdGEuTGFuZ0VuSG90Zml4U2xpY2VBQlZhbHVl",
            "OgI4ARpiCh1MYW5nRW5Ib3RmaXhTbGljZUFCUGF0Y2hFbnRyeRILCgNrZXkY",
            "ASABKAkSMAoFdmFsdWUYAiABKAsyIS5yYXdkYXRhLkxhbmdFbkhvdGZpeFNs",
            "aWNlQUJWYWx1ZToCOAFCPVotZ2l0bGFiLmZ1bnBsdXMuaW8vZmF0L2NvbmYv",
            "Z2VuL2dvbGFuZy9yYXdkYXRhqgILZmF0LnJhd2RhdGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.LangEnHotfix), global::fat.rawdata.LangEnHotfix.Parser, new[]{ "LK", "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.LangEnHotfixSliceABValue), global::fat.rawdata.LangEnHotfixSliceABValue.Parser, new[]{ "LangEnHotfixSlice" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.LangEnHotfixConf), global::fat.rawdata.LangEnHotfixConf.Parser, new[]{ "LangEnHotfixSlice", "LangEnHotfixSliceAB", "LangEnHotfixSliceABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="LangEnHotfix",table="LangEnHotfixSlice",table_wrapper="LangEnHotfixConf",map="false",map_key_type="",data="LangEnHotfixConf")
  /// annotation@ab(table_ab="LangEnHotfixSliceAB",table_ab_patch="LangEnHotfixSliceABPatch",table_ab_value="LangEnHotfixSliceABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// </summary>
  public sealed partial class LangEnHotfix : pb::IMessage<LangEnHotfix>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LangEnHotfix> _parser = new pb::MessageParser<LangEnHotfix>(() => new LangEnHotfix());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LangEnHotfix> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.LangEnHotfixConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangEnHotfix() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangEnHotfix(LangEnHotfix other) : this() {
      lK_ = other.lK_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangEnHotfix Clone() {
      return new LangEnHotfix(this);
    }

    /// <summary>Field number for the "LK" field.</summary>
    public const int LKFieldNumber = 1;
    private string lK_ = "";
    /// <summary>
    /// key
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LK {
      get { return lK_; }
      set {
        lK_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    /// 英语
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LangEnHotfix);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LangEnHotfix other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LK != other.LK) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LK.Length != 0) hash ^= LK.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (LK.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LK);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (LK.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LK);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LK.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LK);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LangEnHotfix other) {
      if (other == null) {
        return;
      }
      if (other.LK.Length != 0) {
        LK = other.LK;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LK = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            LK = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LangEnHotfixSliceABValue : pb::IMessage<LangEnHotfixSliceABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LangEnHotfixSliceABValue> _parser = new pb::MessageParser<LangEnHotfixSliceABValue>(() => new LangEnHotfixSliceABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LangEnHotfixSliceABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.LangEnHotfixConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangEnHotfixSliceABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangEnHotfixSliceABValue(LangEnHotfixSliceABValue other) : this() {
      langEnHotfixSlice_ = other.langEnHotfixSlice_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangEnHotfixSliceABValue Clone() {
      return new LangEnHotfixSliceABValue(this);
    }

    /// <summary>Field number for the "LangEnHotfixSlice" field.</summary>
    public const int LangEnHotfixSliceFieldNumber = 1;
    private static readonly pb::FieldCodec<global::fat.rawdata.LangEnHotfix> _repeated_langEnHotfixSlice_codec
        = pb::FieldCodec.ForMessage(10, global::fat.rawdata.LangEnHotfix.Parser);
    private readonly pbc::RepeatedField<global::fat.rawdata.LangEnHotfix> langEnHotfixSlice_ = new pbc::RepeatedField<global::fat.rawdata.LangEnHotfix>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::fat.rawdata.LangEnHotfix> LangEnHotfixSlice {
      get { return langEnHotfixSlice_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LangEnHotfixSliceABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LangEnHotfixSliceABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!langEnHotfixSlice_.Equals(other.langEnHotfixSlice_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= langEnHotfixSlice_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      langEnHotfixSlice_.WriteTo(output, _repeated_langEnHotfixSlice_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      langEnHotfixSlice_.WriteTo(ref output, _repeated_langEnHotfixSlice_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += langEnHotfixSlice_.CalculateSize(_repeated_langEnHotfixSlice_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LangEnHotfixSliceABValue other) {
      if (other == null) {
        return;
      }
      langEnHotfixSlice_.Add(other.langEnHotfixSlice_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            langEnHotfixSlice_.AddEntriesFrom(input, _repeated_langEnHotfixSlice_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            langEnHotfixSlice_.AddEntriesFrom(ref input, _repeated_langEnHotfixSlice_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LangEnHotfixConf : pb::IMessage<LangEnHotfixConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LangEnHotfixConf> _parser = new pb::MessageParser<LangEnHotfixConf>(() => new LangEnHotfixConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LangEnHotfixConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.LangEnHotfixConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangEnHotfixConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangEnHotfixConf(LangEnHotfixConf other) : this() {
      langEnHotfixSlice_ = other.langEnHotfixSlice_.Clone();
      langEnHotfixSliceAB_ = other.langEnHotfixSliceAB_.Clone();
      langEnHotfixSliceABPatch_ = other.langEnHotfixSliceABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangEnHotfixConf Clone() {
      return new LangEnHotfixConf(this);
    }

    /// <summary>Field number for the "LangEnHotfixSlice" field.</summary>
    public const int LangEnHotfixSliceFieldNumber = 1;
    private static readonly pb::FieldCodec<global::fat.rawdata.LangEnHotfix> _repeated_langEnHotfixSlice_codec
        = pb::FieldCodec.ForMessage(10, global::fat.rawdata.LangEnHotfix.Parser);
    private readonly pbc::RepeatedField<global::fat.rawdata.LangEnHotfix> langEnHotfixSlice_ = new pbc::RepeatedField<global::fat.rawdata.LangEnHotfix>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::fat.rawdata.LangEnHotfix> LangEnHotfixSlice {
      get { return langEnHotfixSlice_; }
    }

    /// <summary>Field number for the "LangEnHotfixSliceAB" field.</summary>
    public const int LangEnHotfixSliceABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.LangEnHotfixSliceABValue>.Codec _map_langEnHotfixSliceAB_codec
        = new pbc::MapField<string, global::fat.rawdata.LangEnHotfixSliceABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.LangEnHotfixSliceABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.LangEnHotfixSliceABValue> langEnHotfixSliceAB_ = new pbc::MapField<string, global::fat.rawdata.LangEnHotfixSliceABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.LangEnHotfixSliceABValue> LangEnHotfixSliceAB {
      get { return langEnHotfixSliceAB_; }
    }

    /// <summary>Field number for the "LangEnHotfixSliceABPatch" field.</summary>
    public const int LangEnHotfixSliceABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.LangEnHotfixSliceABValue>.Codec _map_langEnHotfixSliceABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.LangEnHotfixSliceABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.LangEnHotfixSliceABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.LangEnHotfixSliceABValue> langEnHotfixSliceABPatch_ = new pbc::MapField<string, global::fat.rawdata.LangEnHotfixSliceABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.LangEnHotfixSliceABValue> LangEnHotfixSliceABPatch {
      get { return langEnHotfixSliceABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LangEnHotfixConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LangEnHotfixConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!langEnHotfixSlice_.Equals(other.langEnHotfixSlice_)) return false;
      if (!LangEnHotfixSliceAB.Equals(other.LangEnHotfixSliceAB)) return false;
      if (!LangEnHotfixSliceABPatch.Equals(other.LangEnHotfixSliceABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= langEnHotfixSlice_.GetHashCode();
      hash ^= LangEnHotfixSliceAB.GetHashCode();
      hash ^= LangEnHotfixSliceABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      langEnHotfixSlice_.WriteTo(output, _repeated_langEnHotfixSlice_codec);
      langEnHotfixSliceAB_.WriteTo(output, _map_langEnHotfixSliceAB_codec);
      langEnHotfixSliceABPatch_.WriteTo(output, _map_langEnHotfixSliceABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      langEnHotfixSlice_.WriteTo(ref output, _repeated_langEnHotfixSlice_codec);
      langEnHotfixSliceAB_.WriteTo(ref output, _map_langEnHotfixSliceAB_codec);
      langEnHotfixSliceABPatch_.WriteTo(ref output, _map_langEnHotfixSliceABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += langEnHotfixSlice_.CalculateSize(_repeated_langEnHotfixSlice_codec);
      size += langEnHotfixSliceAB_.CalculateSize(_map_langEnHotfixSliceAB_codec);
      size += langEnHotfixSliceABPatch_.CalculateSize(_map_langEnHotfixSliceABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LangEnHotfixConf other) {
      if (other == null) {
        return;
      }
      langEnHotfixSlice_.Add(other.langEnHotfixSlice_);
      langEnHotfixSliceAB_.Add(other.langEnHotfixSliceAB_);
      langEnHotfixSliceABPatch_.Add(other.langEnHotfixSliceABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            langEnHotfixSlice_.AddEntriesFrom(input, _repeated_langEnHotfixSlice_codec);
            break;
          }
          case 18: {
            langEnHotfixSliceAB_.AddEntriesFrom(input, _map_langEnHotfixSliceAB_codec);
            break;
          }
          case 26: {
            langEnHotfixSliceABPatch_.AddEntriesFrom(input, _map_langEnHotfixSliceABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            langEnHotfixSlice_.AddEntriesFrom(ref input, _repeated_langEnHotfixSlice_codec);
            break;
          }
          case 18: {
            langEnHotfixSliceAB_.AddEntriesFrom(ref input, _map_langEnHotfixSliceAB_codec);
            break;
          }
          case 26: {
            langEnHotfixSliceABPatch_.AddEntriesFrom(ref input, _map_langEnHotfixSliceABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
