// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/FishInfoConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/FishInfoConf.proto</summary>
  public static partial class FishInfoConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/FishInfoConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FishInfoConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChpyYXdkYXRhL0Zpc2hJbmZvQ29uZi5wcm90bxIHcmF3ZGF0YSKwAQoIRmlz",
            "aEluZm8SCgoCaWQYASABKAUSDAoEaWNvbhgCIAEoCRIPCgdpY29uQW5pGAog",
            "ASgJEhAKCGljb25EYXJrGAMgASgJEgwKBG5hbWUYBCABKAkSFAoMcmFuZG9t",
            "V2VpZ2h0GAUgASgFEg4KBnJhcml0eRgGIAEoBRIVCg1yZXBlYXRDb252ZXJ0",
            "GAcgAygJEgwKBHN0YXIYCCADKAkSDgoGd2VpZ2h0GAkgAygFIp4BChJGaXNo",
            "SW5mb01hcEFCVmFsdWUSQQoLRmlzaEluZm9NYXAYASADKAsyLC5yYXdkYXRh",
            "LkZpc2hJbmZvTWFwQUJWYWx1ZS5GaXNoSW5mb01hcEVudHJ5GkUKEEZpc2hJ",
            "bmZvTWFwRW50cnkSCwoDa2V5GAEgASgFEiAKBXZhbHVlGAIgASgLMhEucmF3",
            "ZGF0YS5GaXNoSW5mbzoCOAEiyQMKDEZpc2hJbmZvQ29uZhI7CgtGaXNoSW5m",
            "b01hcBgBIAMoCzImLnJhd2RhdGEuRmlzaEluZm9Db25mLkZpc2hJbmZvTWFw",
            "RW50cnkSPwoNRmlzaEluZm9NYXBBQhgCIAMoCzIoLnJhd2RhdGEuRmlzaElu",
            "Zm9Db25mLkZpc2hJbmZvTWFwQUJFbnRyeRJJChJGaXNoSW5mb01hcEFCUGF0",
            "Y2gYAyADKAsyLS5yYXdkYXRhLkZpc2hJbmZvQ29uZi5GaXNoSW5mb01hcEFC",
            "UGF0Y2hFbnRyeRpFChBGaXNoSW5mb01hcEVudHJ5EgsKA2tleRgBIAEoBRIg",
            "CgV2YWx1ZRgCIAEoCzIRLnJhd2RhdGEuRmlzaEluZm86AjgBGlEKEkZpc2hJ",
            "bmZvTWFwQUJFbnRyeRILCgNrZXkYASABKAkSKgoFdmFsdWUYAiABKAsyGy5y",
            "YXdkYXRhLkZpc2hJbmZvTWFwQUJWYWx1ZToCOAEaVgoXRmlzaEluZm9NYXBB",
            "QlBhdGNoRW50cnkSCwoDa2V5GAEgASgJEioKBXZhbHVlGAIgASgLMhsucmF3",
            "ZGF0YS5GaXNoSW5mb01hcEFCVmFsdWU6AjgBQj1aLWdpdGxhYi5mdW5wbHVz",
            "LmlvL2ZhdC9jb25mL2dlbi9nb2xhbmcvcmF3ZGF0YaoCC2ZhdC5yYXdkYXRh",
            "YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.FishInfo), global::fat.rawdata.FishInfo.Parser, new[]{ "Id", "Icon", "IconAni", "IconDark", "Name", "RandomWeight", "Rarity", "RepeatConvert", "Star", "Weight" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.FishInfoMapABValue), global::fat.rawdata.FishInfoMapABValue.Parser, new[]{ "FishInfoMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.FishInfoConf), global::fat.rawdata.FishInfoConf.Parser, new[]{ "FishInfoMap", "FishInfoMapAB", "FishInfoMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="FishInfo",table="FishInfoMap",table_wrapper="FishInfoConf",map="true",map_key_type="int32",data="FishInfoConf")
  /// annotation@ab(table_ab="FishInfoMapAB",table_ab_patch="FishInfoMapABPatch",table_ab_value="FishInfoMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@FishInfo(id="id")
  /// </summary>
  public sealed partial class FishInfo : pb::IMessage<FishInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FishInfo> _parser = new pb::MessageParser<FishInfo>(() => new FishInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FishInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.FishInfoConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FishInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FishInfo(FishInfo other) : this() {
      id_ = other.id_;
      icon_ = other.icon_;
      iconAni_ = other.iconAni_;
      iconDark_ = other.iconDark_;
      name_ = other.name_;
      randomWeight_ = other.randomWeight_;
      rarity_ = other.rarity_;
      repeatConvert_ = other.repeatConvert_.Clone();
      star_ = other.star_.Clone();
      weight_ = other.weight_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FishInfo Clone() {
      return new FishInfo(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 鱼id
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "icon" field.</summary>
    public const int IconFieldNumber = 2;
    private string icon_ = "";
    /// <summary>
    /// 图片
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Icon {
      get { return icon_; }
      set {
        icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "iconAni" field.</summary>
    public const int IconAniFieldNumber = 10;
    private string iconAni_ = "";
    /// <summary>
    /// 钓鱼动画图
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IconAni {
      get { return iconAni_; }
      set {
        iconAni_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "iconDark" field.</summary>
    public const int IconDarkFieldNumber = 3;
    private string iconDark_ = "";
    /// <summary>
    /// 剪影图
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IconDark {
      get { return iconDark_; }
      set {
        iconDark_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 4;
    private string name_ = "";
    /// <summary>
    /// 名字
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "randomWeight" field.</summary>
    public const int RandomWeightFieldNumber = 5;
    private int randomWeight_;
    /// <summary>
    /// 随机权重
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RandomWeight {
      get { return randomWeight_; }
      set {
        randomWeight_ = value;
      }
    }

    /// <summary>Field number for the "rarity" field.</summary>
    public const int RarityFieldNumber = 6;
    private int rarity_;
    /// <summary>
    /// 稀有度id
    /// (FishRarity.id)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Rarity {
      get { return rarity_; }
      set {
        rarity_ = value;
      }
    }

    /// <summary>Field number for the "repeatConvert" field.</summary>
    public const int RepeatConvertFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _repeated_repeatConvert_codec
        = pb::FieldCodec.ForString(58);
    private readonly pbc::RepeatedField<string> repeatConvert_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 集齐后
    /// 重复转化奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> RepeatConvert {
      get { return repeatConvert_; }
    }

    /// <summary>Field number for the "star" field.</summary>
    public const int StarFieldNumber = 8;
    private static readonly pb::FieldCodec<string> _repeated_star_codec
        = pb::FieldCodec.ForString(66);
    private readonly pbc::RepeatedField<string> star_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 星星以及数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Star {
      get { return star_; }
    }

    /// <summary>Field number for the "weight" field.</summary>
    public const int WeightFieldNumber = 9;
    private static readonly pb::FieldCodec<int> _repeated_weight_codec
        = pb::FieldCodec.ForInt32(74);
    private readonly pbc::RepeatedField<int> weight_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 重量随机范围kg
    /// （实际=配置/10）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Weight {
      get { return weight_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FishInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FishInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Icon != other.Icon) return false;
      if (IconAni != other.IconAni) return false;
      if (IconDark != other.IconDark) return false;
      if (Name != other.Name) return false;
      if (RandomWeight != other.RandomWeight) return false;
      if (Rarity != other.Rarity) return false;
      if(!repeatConvert_.Equals(other.repeatConvert_)) return false;
      if(!star_.Equals(other.star_)) return false;
      if(!weight_.Equals(other.weight_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Icon.Length != 0) hash ^= Icon.GetHashCode();
      if (IconAni.Length != 0) hash ^= IconAni.GetHashCode();
      if (IconDark.Length != 0) hash ^= IconDark.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (RandomWeight != 0) hash ^= RandomWeight.GetHashCode();
      if (Rarity != 0) hash ^= Rarity.GetHashCode();
      hash ^= repeatConvert_.GetHashCode();
      hash ^= star_.GetHashCode();
      hash ^= weight_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Icon.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Icon);
      }
      if (IconDark.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(IconDark);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (RandomWeight != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(RandomWeight);
      }
      if (Rarity != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Rarity);
      }
      repeatConvert_.WriteTo(output, _repeated_repeatConvert_codec);
      star_.WriteTo(output, _repeated_star_codec);
      weight_.WriteTo(output, _repeated_weight_codec);
      if (IconAni.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(IconAni);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Icon.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Icon);
      }
      if (IconDark.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(IconDark);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (RandomWeight != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(RandomWeight);
      }
      if (Rarity != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Rarity);
      }
      repeatConvert_.WriteTo(ref output, _repeated_repeatConvert_codec);
      star_.WriteTo(ref output, _repeated_star_codec);
      weight_.WriteTo(ref output, _repeated_weight_codec);
      if (IconAni.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(IconAni);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Icon.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Icon);
      }
      if (IconAni.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IconAni);
      }
      if (IconDark.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IconDark);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (RandomWeight != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RandomWeight);
      }
      if (Rarity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Rarity);
      }
      size += repeatConvert_.CalculateSize(_repeated_repeatConvert_codec);
      size += star_.CalculateSize(_repeated_star_codec);
      size += weight_.CalculateSize(_repeated_weight_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FishInfo other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Icon.Length != 0) {
        Icon = other.Icon;
      }
      if (other.IconAni.Length != 0) {
        IconAni = other.IconAni;
      }
      if (other.IconDark.Length != 0) {
        IconDark = other.IconDark;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.RandomWeight != 0) {
        RandomWeight = other.RandomWeight;
      }
      if (other.Rarity != 0) {
        Rarity = other.Rarity;
      }
      repeatConvert_.Add(other.repeatConvert_);
      star_.Add(other.star_);
      weight_.Add(other.weight_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Icon = input.ReadString();
            break;
          }
          case 26: {
            IconDark = input.ReadString();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 40: {
            RandomWeight = input.ReadInt32();
            break;
          }
          case 48: {
            Rarity = input.ReadInt32();
            break;
          }
          case 58: {
            repeatConvert_.AddEntriesFrom(input, _repeated_repeatConvert_codec);
            break;
          }
          case 66: {
            star_.AddEntriesFrom(input, _repeated_star_codec);
            break;
          }
          case 74:
          case 72: {
            weight_.AddEntriesFrom(input, _repeated_weight_codec);
            break;
          }
          case 82: {
            IconAni = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Icon = input.ReadString();
            break;
          }
          case 26: {
            IconDark = input.ReadString();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 40: {
            RandomWeight = input.ReadInt32();
            break;
          }
          case 48: {
            Rarity = input.ReadInt32();
            break;
          }
          case 58: {
            repeatConvert_.AddEntriesFrom(ref input, _repeated_repeatConvert_codec);
            break;
          }
          case 66: {
            star_.AddEntriesFrom(ref input, _repeated_star_codec);
            break;
          }
          case 74:
          case 72: {
            weight_.AddEntriesFrom(ref input, _repeated_weight_codec);
            break;
          }
          case 82: {
            IconAni = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class FishInfoMapABValue : pb::IMessage<FishInfoMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FishInfoMapABValue> _parser = new pb::MessageParser<FishInfoMapABValue>(() => new FishInfoMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FishInfoMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.FishInfoConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FishInfoMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FishInfoMapABValue(FishInfoMapABValue other) : this() {
      fishInfoMap_ = other.fishInfoMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FishInfoMapABValue Clone() {
      return new FishInfoMapABValue(this);
    }

    /// <summary>Field number for the "FishInfoMap" field.</summary>
    public const int FishInfoMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.FishInfo>.Codec _map_fishInfoMap_codec
        = new pbc::MapField<int, global::fat.rawdata.FishInfo>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.FishInfo.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.FishInfo> fishInfoMap_ = new pbc::MapField<int, global::fat.rawdata.FishInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.FishInfo> FishInfoMap {
      get { return fishInfoMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FishInfoMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FishInfoMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!FishInfoMap.Equals(other.FishInfoMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= FishInfoMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      fishInfoMap_.WriteTo(output, _map_fishInfoMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      fishInfoMap_.WriteTo(ref output, _map_fishInfoMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += fishInfoMap_.CalculateSize(_map_fishInfoMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FishInfoMapABValue other) {
      if (other == null) {
        return;
      }
      fishInfoMap_.Add(other.fishInfoMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            fishInfoMap_.AddEntriesFrom(input, _map_fishInfoMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            fishInfoMap_.AddEntriesFrom(ref input, _map_fishInfoMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class FishInfoConf : pb::IMessage<FishInfoConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FishInfoConf> _parser = new pb::MessageParser<FishInfoConf>(() => new FishInfoConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FishInfoConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.FishInfoConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FishInfoConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FishInfoConf(FishInfoConf other) : this() {
      fishInfoMap_ = other.fishInfoMap_.Clone();
      fishInfoMapAB_ = other.fishInfoMapAB_.Clone();
      fishInfoMapABPatch_ = other.fishInfoMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FishInfoConf Clone() {
      return new FishInfoConf(this);
    }

    /// <summary>Field number for the "FishInfoMap" field.</summary>
    public const int FishInfoMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.FishInfo>.Codec _map_fishInfoMap_codec
        = new pbc::MapField<int, global::fat.rawdata.FishInfo>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.FishInfo.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.FishInfo> fishInfoMap_ = new pbc::MapField<int, global::fat.rawdata.FishInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.FishInfo> FishInfoMap {
      get { return fishInfoMap_; }
    }

    /// <summary>Field number for the "FishInfoMapAB" field.</summary>
    public const int FishInfoMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.FishInfoMapABValue>.Codec _map_fishInfoMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.FishInfoMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.FishInfoMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.FishInfoMapABValue> fishInfoMapAB_ = new pbc::MapField<string, global::fat.rawdata.FishInfoMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.FishInfoMapABValue> FishInfoMapAB {
      get { return fishInfoMapAB_; }
    }

    /// <summary>Field number for the "FishInfoMapABPatch" field.</summary>
    public const int FishInfoMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.FishInfoMapABValue>.Codec _map_fishInfoMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.FishInfoMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.FishInfoMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.FishInfoMapABValue> fishInfoMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.FishInfoMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.FishInfoMapABValue> FishInfoMapABPatch {
      get { return fishInfoMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FishInfoConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FishInfoConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!FishInfoMap.Equals(other.FishInfoMap)) return false;
      if (!FishInfoMapAB.Equals(other.FishInfoMapAB)) return false;
      if (!FishInfoMapABPatch.Equals(other.FishInfoMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= FishInfoMap.GetHashCode();
      hash ^= FishInfoMapAB.GetHashCode();
      hash ^= FishInfoMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      fishInfoMap_.WriteTo(output, _map_fishInfoMap_codec);
      fishInfoMapAB_.WriteTo(output, _map_fishInfoMapAB_codec);
      fishInfoMapABPatch_.WriteTo(output, _map_fishInfoMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      fishInfoMap_.WriteTo(ref output, _map_fishInfoMap_codec);
      fishInfoMapAB_.WriteTo(ref output, _map_fishInfoMapAB_codec);
      fishInfoMapABPatch_.WriteTo(ref output, _map_fishInfoMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += fishInfoMap_.CalculateSize(_map_fishInfoMap_codec);
      size += fishInfoMapAB_.CalculateSize(_map_fishInfoMapAB_codec);
      size += fishInfoMapABPatch_.CalculateSize(_map_fishInfoMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FishInfoConf other) {
      if (other == null) {
        return;
      }
      fishInfoMap_.Add(other.fishInfoMap_);
      fishInfoMapAB_.Add(other.fishInfoMapAB_);
      fishInfoMapABPatch_.Add(other.fishInfoMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            fishInfoMap_.AddEntriesFrom(input, _map_fishInfoMap_codec);
            break;
          }
          case 18: {
            fishInfoMapAB_.AddEntriesFrom(input, _map_fishInfoMapAB_codec);
            break;
          }
          case 26: {
            fishInfoMapABPatch_.AddEntriesFrom(input, _map_fishInfoMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            fishInfoMap_.AddEntriesFrom(ref input, _map_fishInfoMap_codec);
            break;
          }
          case 18: {
            fishInfoMapAB_.AddEntriesFrom(ref input, _map_fishInfoMapAB_codec);
            break;
          }
          case 26: {
            fishInfoMapABPatch_.AddEntriesFrom(ref input, _map_fishInfoMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
