// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/InventoryToolConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/InventoryToolConf.proto</summary>
  public static partial class InventoryToolConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/InventoryToolConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static InventoryToolConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch9yYXdkYXRhL0ludmVudG9yeVRvb2xDb25mLnByb3RvEgdyYXdkYXRhIkUK",
            "DUludmVudG9yeVRvb2wSCgoCaWQYASABKAUSEQoJb2JqQ29pbklkGAIgASgF",
            "EhUKDXJlbGF0ZWRJdGVtSWQYAyABKAUivAEKF0ludmVudG9yeVRvb2xNYXBB",
            "QlZhbHVlElAKEEludmVudG9yeVRvb2xNYXAYASADKAsyNi5yYXdkYXRhLklu",
            "dmVudG9yeVRvb2xNYXBBQlZhbHVlLkludmVudG9yeVRvb2xNYXBFbnRyeRpP",
            "ChVJbnZlbnRvcnlUb29sTWFwRW50cnkSCwoDa2V5GAEgASgFEiUKBXZhbHVl",
            "GAIgASgLMhYucmF3ZGF0YS5JbnZlbnRvcnlUb29sOgI4ASKZBAoRSW52ZW50",
            "b3J5VG9vbENvbmYSSgoQSW52ZW50b3J5VG9vbE1hcBgBIAMoCzIwLnJhd2Rh",
            "dGEuSW52ZW50b3J5VG9vbENvbmYuSW52ZW50b3J5VG9vbE1hcEVudHJ5Ek4K",
            "EkludmVudG9yeVRvb2xNYXBBQhgCIAMoCzIyLnJhd2RhdGEuSW52ZW50b3J5",
            "VG9vbENvbmYuSW52ZW50b3J5VG9vbE1hcEFCRW50cnkSWAoXSW52ZW50b3J5",
            "VG9vbE1hcEFCUGF0Y2gYAyADKAsyNy5yYXdkYXRhLkludmVudG9yeVRvb2xD",
            "b25mLkludmVudG9yeVRvb2xNYXBBQlBhdGNoRW50cnkaTwoVSW52ZW50b3J5",
            "VG9vbE1hcEVudHJ5EgsKA2tleRgBIAEoBRIlCgV2YWx1ZRgCIAEoCzIWLnJh",
            "d2RhdGEuSW52ZW50b3J5VG9vbDoCOAEaWwoXSW52ZW50b3J5VG9vbE1hcEFC",
            "RW50cnkSCwoDa2V5GAEgASgJEi8KBXZhbHVlGAIgASgLMiAucmF3ZGF0YS5J",
            "bnZlbnRvcnlUb29sTWFwQUJWYWx1ZToCOAEaYAocSW52ZW50b3J5VG9vbE1h",
            "cEFCUGF0Y2hFbnRyeRILCgNrZXkYASABKAkSLwoFdmFsdWUYAiABKAsyIC5y",
            "YXdkYXRhLkludmVudG9yeVRvb2xNYXBBQlZhbHVlOgI4AUI9Wi1naXRsYWIu",
            "ZnVucGx1cy5pby9mYXQvY29uZi9nZW4vZ29sYW5nL3Jhd2RhdGGqAgtmYXQu",
            "cmF3ZGF0YWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.InventoryTool), global::fat.rawdata.InventoryTool.Parser, new[]{ "Id", "ObjCoinId", "RelatedItemId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.InventoryToolMapABValue), global::fat.rawdata.InventoryToolMapABValue.Parser, new[]{ "InventoryToolMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.InventoryToolConf), global::fat.rawdata.InventoryToolConf.Parser, new[]{ "InventoryToolMap", "InventoryToolMapAB", "InventoryToolMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="InventoryTool",table="InventoryToolMap",table_wrapper="InventoryToolConf",map="true",map_key_type="int32",data="InventoryToolConf")
  /// annotation@ab(table_ab="InventoryToolMapAB",table_ab_patch="InventoryToolMapABPatch",table_ab_value="InventoryToolMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@InventoryTool(id="id")
  /// </summary>
  public sealed partial class InventoryTool : pb::IMessage<InventoryTool>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InventoryTool> _parser = new pb::MessageParser<InventoryTool>(() => new InventoryTool());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InventoryTool> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.InventoryToolConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InventoryTool() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InventoryTool(InventoryTool other) : this() {
      id_ = other.id_;
      objCoinId_ = other.objCoinId_;
      relatedItemId_ = other.relatedItemId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InventoryTool Clone() {
      return new InventoryTool(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 工具仓库格子ID
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "objCoinId" field.</summary>
    public const int ObjCoinIdFieldNumber = 2;
    private int objCoinId_;
    /// <summary>
    /// 对应资源ID
    /// （ObjBasic.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ObjCoinId {
      get { return objCoinId_; }
      set {
        objCoinId_ = value;
      }
    }

    /// <summary>Field number for the "relatedItemId" field.</summary>
    public const int RelatedItemIdFieldNumber = 3;
    private int relatedItemId_;
    /// <summary>
    /// 关联图鉴中哪个棋子的解锁情况
    /// （用于控制对应货币显示问号还是图标）
    /// (已解锁显示图标）
    /// （其他状态显示问号）
    /// （ObjBasic.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RelatedItemId {
      get { return relatedItemId_; }
      set {
        relatedItemId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InventoryTool);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InventoryTool other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ObjCoinId != other.ObjCoinId) return false;
      if (RelatedItemId != other.RelatedItemId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (ObjCoinId != 0) hash ^= ObjCoinId.GetHashCode();
      if (RelatedItemId != 0) hash ^= RelatedItemId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (ObjCoinId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ObjCoinId);
      }
      if (RelatedItemId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(RelatedItemId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (ObjCoinId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ObjCoinId);
      }
      if (RelatedItemId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(RelatedItemId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (ObjCoinId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ObjCoinId);
      }
      if (RelatedItemId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RelatedItemId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InventoryTool other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.ObjCoinId != 0) {
        ObjCoinId = other.ObjCoinId;
      }
      if (other.RelatedItemId != 0) {
        RelatedItemId = other.RelatedItemId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            ObjCoinId = input.ReadInt32();
            break;
          }
          case 24: {
            RelatedItemId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            ObjCoinId = input.ReadInt32();
            break;
          }
          case 24: {
            RelatedItemId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class InventoryToolMapABValue : pb::IMessage<InventoryToolMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InventoryToolMapABValue> _parser = new pb::MessageParser<InventoryToolMapABValue>(() => new InventoryToolMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InventoryToolMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.InventoryToolConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InventoryToolMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InventoryToolMapABValue(InventoryToolMapABValue other) : this() {
      inventoryToolMap_ = other.inventoryToolMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InventoryToolMapABValue Clone() {
      return new InventoryToolMapABValue(this);
    }

    /// <summary>Field number for the "InventoryToolMap" field.</summary>
    public const int InventoryToolMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.InventoryTool>.Codec _map_inventoryToolMap_codec
        = new pbc::MapField<int, global::fat.rawdata.InventoryTool>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.InventoryTool.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.InventoryTool> inventoryToolMap_ = new pbc::MapField<int, global::fat.rawdata.InventoryTool>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.InventoryTool> InventoryToolMap {
      get { return inventoryToolMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InventoryToolMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InventoryToolMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!InventoryToolMap.Equals(other.InventoryToolMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= InventoryToolMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      inventoryToolMap_.WriteTo(output, _map_inventoryToolMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      inventoryToolMap_.WriteTo(ref output, _map_inventoryToolMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += inventoryToolMap_.CalculateSize(_map_inventoryToolMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InventoryToolMapABValue other) {
      if (other == null) {
        return;
      }
      inventoryToolMap_.Add(other.inventoryToolMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            inventoryToolMap_.AddEntriesFrom(input, _map_inventoryToolMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            inventoryToolMap_.AddEntriesFrom(ref input, _map_inventoryToolMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class InventoryToolConf : pb::IMessage<InventoryToolConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InventoryToolConf> _parser = new pb::MessageParser<InventoryToolConf>(() => new InventoryToolConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InventoryToolConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.InventoryToolConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InventoryToolConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InventoryToolConf(InventoryToolConf other) : this() {
      inventoryToolMap_ = other.inventoryToolMap_.Clone();
      inventoryToolMapAB_ = other.inventoryToolMapAB_.Clone();
      inventoryToolMapABPatch_ = other.inventoryToolMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InventoryToolConf Clone() {
      return new InventoryToolConf(this);
    }

    /// <summary>Field number for the "InventoryToolMap" field.</summary>
    public const int InventoryToolMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.InventoryTool>.Codec _map_inventoryToolMap_codec
        = new pbc::MapField<int, global::fat.rawdata.InventoryTool>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.InventoryTool.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.InventoryTool> inventoryToolMap_ = new pbc::MapField<int, global::fat.rawdata.InventoryTool>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.InventoryTool> InventoryToolMap {
      get { return inventoryToolMap_; }
    }

    /// <summary>Field number for the "InventoryToolMapAB" field.</summary>
    public const int InventoryToolMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.InventoryToolMapABValue>.Codec _map_inventoryToolMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.InventoryToolMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.InventoryToolMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.InventoryToolMapABValue> inventoryToolMapAB_ = new pbc::MapField<string, global::fat.rawdata.InventoryToolMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.InventoryToolMapABValue> InventoryToolMapAB {
      get { return inventoryToolMapAB_; }
    }

    /// <summary>Field number for the "InventoryToolMapABPatch" field.</summary>
    public const int InventoryToolMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.InventoryToolMapABValue>.Codec _map_inventoryToolMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.InventoryToolMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.InventoryToolMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.InventoryToolMapABValue> inventoryToolMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.InventoryToolMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.InventoryToolMapABValue> InventoryToolMapABPatch {
      get { return inventoryToolMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InventoryToolConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InventoryToolConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!InventoryToolMap.Equals(other.InventoryToolMap)) return false;
      if (!InventoryToolMapAB.Equals(other.InventoryToolMapAB)) return false;
      if (!InventoryToolMapABPatch.Equals(other.InventoryToolMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= InventoryToolMap.GetHashCode();
      hash ^= InventoryToolMapAB.GetHashCode();
      hash ^= InventoryToolMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      inventoryToolMap_.WriteTo(output, _map_inventoryToolMap_codec);
      inventoryToolMapAB_.WriteTo(output, _map_inventoryToolMapAB_codec);
      inventoryToolMapABPatch_.WriteTo(output, _map_inventoryToolMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      inventoryToolMap_.WriteTo(ref output, _map_inventoryToolMap_codec);
      inventoryToolMapAB_.WriteTo(ref output, _map_inventoryToolMapAB_codec);
      inventoryToolMapABPatch_.WriteTo(ref output, _map_inventoryToolMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += inventoryToolMap_.CalculateSize(_map_inventoryToolMap_codec);
      size += inventoryToolMapAB_.CalculateSize(_map_inventoryToolMapAB_codec);
      size += inventoryToolMapABPatch_.CalculateSize(_map_inventoryToolMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InventoryToolConf other) {
      if (other == null) {
        return;
      }
      inventoryToolMap_.Add(other.inventoryToolMap_);
      inventoryToolMapAB_.Add(other.inventoryToolMapAB_);
      inventoryToolMapABPatch_.Add(other.inventoryToolMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            inventoryToolMap_.AddEntriesFrom(input, _map_inventoryToolMap_codec);
            break;
          }
          case 18: {
            inventoryToolMapAB_.AddEntriesFrom(input, _map_inventoryToolMapAB_codec);
            break;
          }
          case 26: {
            inventoryToolMapABPatch_.AddEntriesFrom(input, _map_inventoryToolMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            inventoryToolMap_.AddEntriesFrom(ref input, _map_inventoryToolMap_codec);
            break;
          }
          case 18: {
            inventoryToolMapAB_.AddEntriesFrom(ref input, _map_inventoryToolMapAB_codec);
            break;
          }
          case 26: {
            inventoryToolMapABPatch_.AddEntriesFrom(ref input, _map_inventoryToolMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
