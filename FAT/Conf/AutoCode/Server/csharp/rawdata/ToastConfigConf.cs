// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/ToastConfigConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/ToastConfigConf.proto</summary>
  public static partial class ToastConfigConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/ToastConfigConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ToastConfigConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch1yYXdkYXRhL1RvYXN0Q29uZmlnQ29uZi5wcm90bxIHcmF3ZGF0YRoTcmF3",
            "ZGF0YS9Ub2FzdC5wcm90byJZCgtUb2FzdENvbmZpZxINCgVzdHlsZRgBIAEo",
            "BRIMCgR0ZXh0GAIgASgJEh8KB3RvYXN0SWQYAyABKA4yDi5yYXdkYXRhLlRv",
            "YXN0EgwKBHR5cGUYBCABKAUiSQoXVG9hc3RDb25maWdTbGljZUFCVmFsdWUS",
            "LgoQVG9hc3RDb25maWdTbGljZRgBIAMoCzIULnJhd2RhdGEuVG9hc3RDb25m",
            "aWcipgMKD1RvYXN0Q29uZmlnQ29uZhIuChBUb2FzdENvbmZpZ1NsaWNlGAEg",
            "AygLMhQucmF3ZGF0YS5Ub2FzdENvbmZpZxJMChJUb2FzdENvbmZpZ1NsaWNl",
            "QUIYAiADKAsyMC5yYXdkYXRhLlRvYXN0Q29uZmlnQ29uZi5Ub2FzdENvbmZp",
            "Z1NsaWNlQUJFbnRyeRJWChdUb2FzdENvbmZpZ1NsaWNlQUJQYXRjaBgDIAMo",
            "CzI1LnJhd2RhdGEuVG9hc3RDb25maWdDb25mLlRvYXN0Q29uZmlnU2xpY2VB",
            "QlBhdGNoRW50cnkaWwoXVG9hc3RDb25maWdTbGljZUFCRW50cnkSCwoDa2V5",
            "GAEgASgJEi8KBXZhbHVlGAIgASgLMiAucmF3ZGF0YS5Ub2FzdENvbmZpZ1Ns",
            "aWNlQUJWYWx1ZToCOAEaYAocVG9hc3RDb25maWdTbGljZUFCUGF0Y2hFbnRy",
            "eRILCgNrZXkYASABKAkSLwoFdmFsdWUYAiABKAsyIC5yYXdkYXRhLlRvYXN0",
            "Q29uZmlnU2xpY2VBQlZhbHVlOgI4AUI9Wi1naXRsYWIuZnVucGx1cy5pby9m",
            "YXQvY29uZi9nZW4vZ29sYW5nL3Jhd2RhdGGqAgtmYXQucmF3ZGF0YWIGcHJv",
            "dG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::fat.rawdata.ToastReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.ToastConfig), global::fat.rawdata.ToastConfig.Parser, new[]{ "Style", "Text", "ToastId", "Type" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.ToastConfigSliceABValue), global::fat.rawdata.ToastConfigSliceABValue.Parser, new[]{ "ToastConfigSlice" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.ToastConfigConf), global::fat.rawdata.ToastConfigConf.Parser, new[]{ "ToastConfigSlice", "ToastConfigSliceAB", "ToastConfigSliceABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="ToastConfig",table="ToastConfigSlice",table_wrapper="ToastConfigConf",map="false",map_key_type="",data="ToastConfigConf")
  /// annotation@ab(table_ab="ToastConfigSliceAB",table_ab_patch="ToastConfigSliceABPatch",table_ab_value="ToastConfigSliceABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// </summary>
  public sealed partial class ToastConfig : pb::IMessage<ToastConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ToastConfig> _parser = new pb::MessageParser<ToastConfig>(() => new ToastConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ToastConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.ToastConfigConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ToastConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ToastConfig(ToastConfig other) : this() {
      style_ = other.style_;
      text_ = other.text_;
      toastId_ = other.toastId_;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ToastConfig Clone() {
      return new ToastConfig(this);
    }

    /// <summary>Field number for the "style" field.</summary>
    public const int StyleFieldNumber = 1;
    private int style_;
    /// <summary>
    /// 样式
    /// 1 = 横幅
    /// 2 = 白
    /// 3 = 蓝
    /// 4 = 紫
    /// 5 = Max
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Style {
      get { return style_; }
      set {
        style_ = value;
      }
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 2;
    private string text_ = "";
    /// <summary>
    /// 提示内容
    /// （多语言ID）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return text_; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "toastId" field.</summary>
    public const int ToastIdFieldNumber = 3;
    private global::fat.rawdata.Toast toastId_ = global::fat.rawdata.Toast.Empty;
    /// <summary>
    /// Toast提示ID
    /// （Toast@enum）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::fat.rawdata.Toast ToastId {
      get { return toastId_; }
      set {
        toastId_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 4;
    private int type_;
    /// <summary>
    /// 提示类型
    /// 1 = 横幅
    /// 2 = 飘字弯曲
    /// 3 = 飘字水平
    /// PS：飘字只适用于棋盘
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ToastConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ToastConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Style != other.Style) return false;
      if (Text != other.Text) return false;
      if (ToastId != other.ToastId) return false;
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Style != 0) hash ^= Style.GetHashCode();
      if (Text.Length != 0) hash ^= Text.GetHashCode();
      if (ToastId != global::fat.rawdata.Toast.Empty) hash ^= ToastId.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Style != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Style);
      }
      if (Text.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Text);
      }
      if (ToastId != global::fat.rawdata.Toast.Empty) {
        output.WriteRawTag(24);
        output.WriteEnum((int) ToastId);
      }
      if (Type != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Style != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Style);
      }
      if (Text.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Text);
      }
      if (ToastId != global::fat.rawdata.Toast.Empty) {
        output.WriteRawTag(24);
        output.WriteEnum((int) ToastId);
      }
      if (Type != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Style != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Style);
      }
      if (Text.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (ToastId != global::fat.rawdata.Toast.Empty) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ToastId);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ToastConfig other) {
      if (other == null) {
        return;
      }
      if (other.Style != 0) {
        Style = other.Style;
      }
      if (other.Text.Length != 0) {
        Text = other.Text;
      }
      if (other.ToastId != global::fat.rawdata.Toast.Empty) {
        ToastId = other.ToastId;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Style = input.ReadInt32();
            break;
          }
          case 18: {
            Text = input.ReadString();
            break;
          }
          case 24: {
            ToastId = (global::fat.rawdata.Toast) input.ReadEnum();
            break;
          }
          case 32: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Style = input.ReadInt32();
            break;
          }
          case 18: {
            Text = input.ReadString();
            break;
          }
          case 24: {
            ToastId = (global::fat.rawdata.Toast) input.ReadEnum();
            break;
          }
          case 32: {
            Type = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ToastConfigSliceABValue : pb::IMessage<ToastConfigSliceABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ToastConfigSliceABValue> _parser = new pb::MessageParser<ToastConfigSliceABValue>(() => new ToastConfigSliceABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ToastConfigSliceABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.ToastConfigConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ToastConfigSliceABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ToastConfigSliceABValue(ToastConfigSliceABValue other) : this() {
      toastConfigSlice_ = other.toastConfigSlice_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ToastConfigSliceABValue Clone() {
      return new ToastConfigSliceABValue(this);
    }

    /// <summary>Field number for the "ToastConfigSlice" field.</summary>
    public const int ToastConfigSliceFieldNumber = 1;
    private static readonly pb::FieldCodec<global::fat.rawdata.ToastConfig> _repeated_toastConfigSlice_codec
        = pb::FieldCodec.ForMessage(10, global::fat.rawdata.ToastConfig.Parser);
    private readonly pbc::RepeatedField<global::fat.rawdata.ToastConfig> toastConfigSlice_ = new pbc::RepeatedField<global::fat.rawdata.ToastConfig>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::fat.rawdata.ToastConfig> ToastConfigSlice {
      get { return toastConfigSlice_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ToastConfigSliceABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ToastConfigSliceABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!toastConfigSlice_.Equals(other.toastConfigSlice_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= toastConfigSlice_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      toastConfigSlice_.WriteTo(output, _repeated_toastConfigSlice_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      toastConfigSlice_.WriteTo(ref output, _repeated_toastConfigSlice_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += toastConfigSlice_.CalculateSize(_repeated_toastConfigSlice_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ToastConfigSliceABValue other) {
      if (other == null) {
        return;
      }
      toastConfigSlice_.Add(other.toastConfigSlice_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            toastConfigSlice_.AddEntriesFrom(input, _repeated_toastConfigSlice_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            toastConfigSlice_.AddEntriesFrom(ref input, _repeated_toastConfigSlice_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ToastConfigConf : pb::IMessage<ToastConfigConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ToastConfigConf> _parser = new pb::MessageParser<ToastConfigConf>(() => new ToastConfigConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ToastConfigConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.ToastConfigConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ToastConfigConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ToastConfigConf(ToastConfigConf other) : this() {
      toastConfigSlice_ = other.toastConfigSlice_.Clone();
      toastConfigSliceAB_ = other.toastConfigSliceAB_.Clone();
      toastConfigSliceABPatch_ = other.toastConfigSliceABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ToastConfigConf Clone() {
      return new ToastConfigConf(this);
    }

    /// <summary>Field number for the "ToastConfigSlice" field.</summary>
    public const int ToastConfigSliceFieldNumber = 1;
    private static readonly pb::FieldCodec<global::fat.rawdata.ToastConfig> _repeated_toastConfigSlice_codec
        = pb::FieldCodec.ForMessage(10, global::fat.rawdata.ToastConfig.Parser);
    private readonly pbc::RepeatedField<global::fat.rawdata.ToastConfig> toastConfigSlice_ = new pbc::RepeatedField<global::fat.rawdata.ToastConfig>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::fat.rawdata.ToastConfig> ToastConfigSlice {
      get { return toastConfigSlice_; }
    }

    /// <summary>Field number for the "ToastConfigSliceAB" field.</summary>
    public const int ToastConfigSliceABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.ToastConfigSliceABValue>.Codec _map_toastConfigSliceAB_codec
        = new pbc::MapField<string, global::fat.rawdata.ToastConfigSliceABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ToastConfigSliceABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.ToastConfigSliceABValue> toastConfigSliceAB_ = new pbc::MapField<string, global::fat.rawdata.ToastConfigSliceABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.ToastConfigSliceABValue> ToastConfigSliceAB {
      get { return toastConfigSliceAB_; }
    }

    /// <summary>Field number for the "ToastConfigSliceABPatch" field.</summary>
    public const int ToastConfigSliceABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.ToastConfigSliceABValue>.Codec _map_toastConfigSliceABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.ToastConfigSliceABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ToastConfigSliceABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.ToastConfigSliceABValue> toastConfigSliceABPatch_ = new pbc::MapField<string, global::fat.rawdata.ToastConfigSliceABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.ToastConfigSliceABValue> ToastConfigSliceABPatch {
      get { return toastConfigSliceABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ToastConfigConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ToastConfigConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!toastConfigSlice_.Equals(other.toastConfigSlice_)) return false;
      if (!ToastConfigSliceAB.Equals(other.ToastConfigSliceAB)) return false;
      if (!ToastConfigSliceABPatch.Equals(other.ToastConfigSliceABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= toastConfigSlice_.GetHashCode();
      hash ^= ToastConfigSliceAB.GetHashCode();
      hash ^= ToastConfigSliceABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      toastConfigSlice_.WriteTo(output, _repeated_toastConfigSlice_codec);
      toastConfigSliceAB_.WriteTo(output, _map_toastConfigSliceAB_codec);
      toastConfigSliceABPatch_.WriteTo(output, _map_toastConfigSliceABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      toastConfigSlice_.WriteTo(ref output, _repeated_toastConfigSlice_codec);
      toastConfigSliceAB_.WriteTo(ref output, _map_toastConfigSliceAB_codec);
      toastConfigSliceABPatch_.WriteTo(ref output, _map_toastConfigSliceABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += toastConfigSlice_.CalculateSize(_repeated_toastConfigSlice_codec);
      size += toastConfigSliceAB_.CalculateSize(_map_toastConfigSliceAB_codec);
      size += toastConfigSliceABPatch_.CalculateSize(_map_toastConfigSliceABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ToastConfigConf other) {
      if (other == null) {
        return;
      }
      toastConfigSlice_.Add(other.toastConfigSlice_);
      toastConfigSliceAB_.Add(other.toastConfigSliceAB_);
      toastConfigSliceABPatch_.Add(other.toastConfigSliceABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            toastConfigSlice_.AddEntriesFrom(input, _repeated_toastConfigSlice_codec);
            break;
          }
          case 18: {
            toastConfigSliceAB_.AddEntriesFrom(input, _map_toastConfigSliceAB_codec);
            break;
          }
          case 26: {
            toastConfigSliceABPatch_.AddEntriesFrom(input, _map_toastConfigSliceABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            toastConfigSlice_.AddEntriesFrom(ref input, _repeated_toastConfigSlice_codec);
            break;
          }
          case 18: {
            toastConfigSliceAB_.AddEntriesFrom(ref input, _map_toastConfigSliceAB_codec);
            break;
          }
          case 26: {
            toastConfigSliceABPatch_.AddEntriesFrom(ref input, _map_toastConfigSliceABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
