// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EndlessPackProgressConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EndlessPackProgressConf.proto</summary>
  public static partial class EndlessPackProgressConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EndlessPackProgressConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EndlessPackProgressConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiVyYXdkYXRhL0VuZGxlc3NQYWNrUHJvZ3Jlc3NDb25mLnByb3RvEgdyYXdk",
            "YXRhIk8KE0VuZGxlc3NQYWNrUHJvZ3Jlc3MSCgoCaWQYASABKAUSFAoMcHJv",
            "Z3Jlc3NOb2RlGAIgAygFEhYKDnByb2dyZXNzUmV3YXJkGAMgAygJIuABCh1F",
            "bmRsZXNzUGFja1Byb2dyZXNzTWFwQUJWYWx1ZRJiChZFbmRsZXNzUGFja1By",
            "b2dyZXNzTWFwGAEgAygLMkIucmF3ZGF0YS5FbmRsZXNzUGFja1Byb2dyZXNz",
            "TWFwQUJWYWx1ZS5FbmRsZXNzUGFja1Byb2dyZXNzTWFwRW50cnkaWwobRW5k",
            "bGVzc1BhY2tQcm9ncmVzc01hcEVudHJ5EgsKA2tleRgBIAEoBRIrCgV2YWx1",
            "ZRgCIAEoCzIcLnJhd2RhdGEuRW5kbGVzc1BhY2tQcm9ncmVzczoCOAEi+QQK",
            "F0VuZGxlc3NQYWNrUHJvZ3Jlc3NDb25mElwKFkVuZGxlc3NQYWNrUHJvZ3Jl",
            "c3NNYXAYASADKAsyPC5yYXdkYXRhLkVuZGxlc3NQYWNrUHJvZ3Jlc3NDb25m",
            "LkVuZGxlc3NQYWNrUHJvZ3Jlc3NNYXBFbnRyeRJgChhFbmRsZXNzUGFja1By",
            "b2dyZXNzTWFwQUIYAiADKAsyPi5yYXdkYXRhLkVuZGxlc3NQYWNrUHJvZ3Jl",
            "c3NDb25mLkVuZGxlc3NQYWNrUHJvZ3Jlc3NNYXBBQkVudHJ5EmoKHUVuZGxl",
            "c3NQYWNrUHJvZ3Jlc3NNYXBBQlBhdGNoGAMgAygLMkMucmF3ZGF0YS5FbmRs",
            "ZXNzUGFja1Byb2dyZXNzQ29uZi5FbmRsZXNzUGFja1Byb2dyZXNzTWFwQUJQ",
            "YXRjaEVudHJ5GlsKG0VuZGxlc3NQYWNrUHJvZ3Jlc3NNYXBFbnRyeRILCgNr",
            "ZXkYASABKAUSKwoFdmFsdWUYAiABKAsyHC5yYXdkYXRhLkVuZGxlc3NQYWNr",
            "UHJvZ3Jlc3M6AjgBGmcKHUVuZGxlc3NQYWNrUHJvZ3Jlc3NNYXBBQkVudHJ5",
            "EgsKA2tleRgBIAEoCRI1CgV2YWx1ZRgCIAEoCzImLnJhd2RhdGEuRW5kbGVz",
            "c1BhY2tQcm9ncmVzc01hcEFCVmFsdWU6AjgBGmwKIkVuZGxlc3NQYWNrUHJv",
            "Z3Jlc3NNYXBBQlBhdGNoRW50cnkSCwoDa2V5GAEgASgJEjUKBXZhbHVlGAIg",
            "ASgLMiYucmF3ZGF0YS5FbmRsZXNzUGFja1Byb2dyZXNzTWFwQUJWYWx1ZToC",
            "OAFCPVotZ2l0bGFiLmZ1bnBsdXMuaW8vZmF0L2NvbmYvZ2VuL2dvbGFuZy9y",
            "YXdkYXRhqgILZmF0LnJhd2RhdGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EndlessPackProgress), global::fat.rawdata.EndlessPackProgress.Parser, new[]{ "Id", "ProgressNode", "ProgressReward" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EndlessPackProgressMapABValue), global::fat.rawdata.EndlessPackProgressMapABValue.Parser, new[]{ "EndlessPackProgressMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EndlessPackProgressConf), global::fat.rawdata.EndlessPackProgressConf.Parser, new[]{ "EndlessPackProgressMap", "EndlessPackProgressMapAB", "EndlessPackProgressMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EndlessPackProgress",table="EndlessPackProgressMap",table_wrapper="EndlessPackProgressConf",map="true",map_key_type="int32",data="EndlessPackProgressConf")
  /// annotation@ab(table_ab="EndlessPackProgressMapAB",table_ab_patch="EndlessPackProgressMapABPatch",table_ab_value="EndlessPackProgressMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EndlessPackProgress(id="id")
  /// </summary>
  public sealed partial class EndlessPackProgress : pb::IMessage<EndlessPackProgress>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EndlessPackProgress> _parser = new pb::MessageParser<EndlessPackProgress>(() => new EndlessPackProgress());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EndlessPackProgress> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EndlessPackProgressConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndlessPackProgress() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndlessPackProgress(EndlessPackProgress other) : this() {
      id_ = other.id_;
      progressNode_ = other.progressNode_.Clone();
      progressReward_ = other.progressReward_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndlessPackProgress Clone() {
      return new EndlessPackProgress(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 进度条配置id
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "progressNode" field.</summary>
    public const int ProgressNodeFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_progressNode_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> progressNode_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 各奖励节点所需token数量
    /// （位数即总节点数）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> ProgressNode {
      get { return progressNode_; }
    }

    /// <summary>Field number for the "progressReward" field.</summary>
    public const int ProgressRewardFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_progressReward_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> progressReward_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 各节点具体奖励
    /// （奖励id:数量,...）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ProgressReward {
      get { return progressReward_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EndlessPackProgress);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EndlessPackProgress other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!progressNode_.Equals(other.progressNode_)) return false;
      if(!progressReward_.Equals(other.progressReward_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      hash ^= progressNode_.GetHashCode();
      hash ^= progressReward_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      progressNode_.WriteTo(output, _repeated_progressNode_codec);
      progressReward_.WriteTo(output, _repeated_progressReward_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      progressNode_.WriteTo(ref output, _repeated_progressNode_codec);
      progressReward_.WriteTo(ref output, _repeated_progressReward_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      size += progressNode_.CalculateSize(_repeated_progressNode_codec);
      size += progressReward_.CalculateSize(_repeated_progressReward_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EndlessPackProgress other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      progressNode_.Add(other.progressNode_);
      progressReward_.Add(other.progressReward_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            progressNode_.AddEntriesFrom(input, _repeated_progressNode_codec);
            break;
          }
          case 26: {
            progressReward_.AddEntriesFrom(input, _repeated_progressReward_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            progressNode_.AddEntriesFrom(ref input, _repeated_progressNode_codec);
            break;
          }
          case 26: {
            progressReward_.AddEntriesFrom(ref input, _repeated_progressReward_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EndlessPackProgressMapABValue : pb::IMessage<EndlessPackProgressMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EndlessPackProgressMapABValue> _parser = new pb::MessageParser<EndlessPackProgressMapABValue>(() => new EndlessPackProgressMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EndlessPackProgressMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EndlessPackProgressConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndlessPackProgressMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndlessPackProgressMapABValue(EndlessPackProgressMapABValue other) : this() {
      endlessPackProgressMap_ = other.endlessPackProgressMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndlessPackProgressMapABValue Clone() {
      return new EndlessPackProgressMapABValue(this);
    }

    /// <summary>Field number for the "EndlessPackProgressMap" field.</summary>
    public const int EndlessPackProgressMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EndlessPackProgress>.Codec _map_endlessPackProgressMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EndlessPackProgress>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EndlessPackProgress.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EndlessPackProgress> endlessPackProgressMap_ = new pbc::MapField<int, global::fat.rawdata.EndlessPackProgress>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EndlessPackProgress> EndlessPackProgressMap {
      get { return endlessPackProgressMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EndlessPackProgressMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EndlessPackProgressMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EndlessPackProgressMap.Equals(other.EndlessPackProgressMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EndlessPackProgressMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      endlessPackProgressMap_.WriteTo(output, _map_endlessPackProgressMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      endlessPackProgressMap_.WriteTo(ref output, _map_endlessPackProgressMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += endlessPackProgressMap_.CalculateSize(_map_endlessPackProgressMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EndlessPackProgressMapABValue other) {
      if (other == null) {
        return;
      }
      endlessPackProgressMap_.Add(other.endlessPackProgressMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            endlessPackProgressMap_.AddEntriesFrom(input, _map_endlessPackProgressMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            endlessPackProgressMap_.AddEntriesFrom(ref input, _map_endlessPackProgressMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EndlessPackProgressConf : pb::IMessage<EndlessPackProgressConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EndlessPackProgressConf> _parser = new pb::MessageParser<EndlessPackProgressConf>(() => new EndlessPackProgressConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EndlessPackProgressConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EndlessPackProgressConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndlessPackProgressConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndlessPackProgressConf(EndlessPackProgressConf other) : this() {
      endlessPackProgressMap_ = other.endlessPackProgressMap_.Clone();
      endlessPackProgressMapAB_ = other.endlessPackProgressMapAB_.Clone();
      endlessPackProgressMapABPatch_ = other.endlessPackProgressMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndlessPackProgressConf Clone() {
      return new EndlessPackProgressConf(this);
    }

    /// <summary>Field number for the "EndlessPackProgressMap" field.</summary>
    public const int EndlessPackProgressMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EndlessPackProgress>.Codec _map_endlessPackProgressMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EndlessPackProgress>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EndlessPackProgress.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EndlessPackProgress> endlessPackProgressMap_ = new pbc::MapField<int, global::fat.rawdata.EndlessPackProgress>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EndlessPackProgress> EndlessPackProgressMap {
      get { return endlessPackProgressMap_; }
    }

    /// <summary>Field number for the "EndlessPackProgressMapAB" field.</summary>
    public const int EndlessPackProgressMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EndlessPackProgressMapABValue>.Codec _map_endlessPackProgressMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EndlessPackProgressMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EndlessPackProgressMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EndlessPackProgressMapABValue> endlessPackProgressMapAB_ = new pbc::MapField<string, global::fat.rawdata.EndlessPackProgressMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EndlessPackProgressMapABValue> EndlessPackProgressMapAB {
      get { return endlessPackProgressMapAB_; }
    }

    /// <summary>Field number for the "EndlessPackProgressMapABPatch" field.</summary>
    public const int EndlessPackProgressMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EndlessPackProgressMapABValue>.Codec _map_endlessPackProgressMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EndlessPackProgressMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EndlessPackProgressMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EndlessPackProgressMapABValue> endlessPackProgressMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EndlessPackProgressMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EndlessPackProgressMapABValue> EndlessPackProgressMapABPatch {
      get { return endlessPackProgressMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EndlessPackProgressConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EndlessPackProgressConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EndlessPackProgressMap.Equals(other.EndlessPackProgressMap)) return false;
      if (!EndlessPackProgressMapAB.Equals(other.EndlessPackProgressMapAB)) return false;
      if (!EndlessPackProgressMapABPatch.Equals(other.EndlessPackProgressMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EndlessPackProgressMap.GetHashCode();
      hash ^= EndlessPackProgressMapAB.GetHashCode();
      hash ^= EndlessPackProgressMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      endlessPackProgressMap_.WriteTo(output, _map_endlessPackProgressMap_codec);
      endlessPackProgressMapAB_.WriteTo(output, _map_endlessPackProgressMapAB_codec);
      endlessPackProgressMapABPatch_.WriteTo(output, _map_endlessPackProgressMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      endlessPackProgressMap_.WriteTo(ref output, _map_endlessPackProgressMap_codec);
      endlessPackProgressMapAB_.WriteTo(ref output, _map_endlessPackProgressMapAB_codec);
      endlessPackProgressMapABPatch_.WriteTo(ref output, _map_endlessPackProgressMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += endlessPackProgressMap_.CalculateSize(_map_endlessPackProgressMap_codec);
      size += endlessPackProgressMapAB_.CalculateSize(_map_endlessPackProgressMapAB_codec);
      size += endlessPackProgressMapABPatch_.CalculateSize(_map_endlessPackProgressMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EndlessPackProgressConf other) {
      if (other == null) {
        return;
      }
      endlessPackProgressMap_.Add(other.endlessPackProgressMap_);
      endlessPackProgressMapAB_.Add(other.endlessPackProgressMapAB_);
      endlessPackProgressMapABPatch_.Add(other.endlessPackProgressMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            endlessPackProgressMap_.AddEntriesFrom(input, _map_endlessPackProgressMap_codec);
            break;
          }
          case 18: {
            endlessPackProgressMapAB_.AddEntriesFrom(input, _map_endlessPackProgressMapAB_codec);
            break;
          }
          case 26: {
            endlessPackProgressMapABPatch_.AddEntriesFrom(input, _map_endlessPackProgressMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            endlessPackProgressMap_.AddEntriesFrom(ref input, _map_endlessPackProgressMap_codec);
            break;
          }
          case 18: {
            endlessPackProgressMapAB_.AddEntriesFrom(ref input, _map_endlessPackProgressMapAB_codec);
            break;
          }
          case 26: {
            endlessPackProgressMapABPatch_.AddEntriesFrom(ref input, _map_endlessPackProgressMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
