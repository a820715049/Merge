// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/SevenDayTaskInfoConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/SevenDayTaskInfoConf.proto</summary>
  public static partial class SevenDayTaskInfoConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/SevenDayTaskInfoConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SevenDayTaskInfoConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiJyYXdkYXRhL1NldmVuRGF5VGFza0luZm9Db25mLnByb3RvEgdyYXdkYXRh",
            "It0BChBTZXZlbkRheVRhc2tJbmZvEgoKAmlkGAEgASgFEgwKBGRlc2MYAiAB",
            "KAkSEAoIaWNvbkRlc2MYAyABKAkSEAoIaWNvblNob3cYBCADKAkSGAoQaWNv",
            "blNob3dBY3Rpdml0eRgFIAEoBRIWCg5pY29uU2hvd0NvbW1vbhgGIAEoCRIU",
            "CgxyZXF1aXJlUGFyYW0YByABKAkSDAoEc29ydBgIIAEoBRISCgp0YXNrUmV3",
            "YXJkGAkgAygJEhAKCHRhc2tUeXBlGAogASgFEg8KB3Rva2VuSWQYCyABKAUi",
            "zgEKGlNldmVuRGF5VGFza0luZm9NYXBBQlZhbHVlElkKE1NldmVuRGF5VGFz",
            "a0luZm9NYXAYASADKAsyPC5yYXdkYXRhLlNldmVuRGF5VGFza0luZm9NYXBB",
            "QlZhbHVlLlNldmVuRGF5VGFza0luZm9NYXBFbnRyeRpVChhTZXZlbkRheVRh",
            "c2tJbmZvTWFwRW50cnkSCwoDa2V5GAEgASgFEigKBXZhbHVlGAIgASgLMhku",
            "cmF3ZGF0YS5TZXZlbkRheVRhc2tJbmZvOgI4ASLJBAoUU2V2ZW5EYXlUYXNr",
            "SW5mb0NvbmYSUwoTU2V2ZW5EYXlUYXNrSW5mb01hcBgBIAMoCzI2LnJhd2Rh",
            "dGEuU2V2ZW5EYXlUYXNrSW5mb0NvbmYuU2V2ZW5EYXlUYXNrSW5mb01hcEVu",
            "dHJ5ElcKFVNldmVuRGF5VGFza0luZm9NYXBBQhgCIAMoCzI4LnJhd2RhdGEu",
            "U2V2ZW5EYXlUYXNrSW5mb0NvbmYuU2V2ZW5EYXlUYXNrSW5mb01hcEFCRW50",
            "cnkSYQoaU2V2ZW5EYXlUYXNrSW5mb01hcEFCUGF0Y2gYAyADKAsyPS5yYXdk",
            "YXRhLlNldmVuRGF5VGFza0luZm9Db25mLlNldmVuRGF5VGFza0luZm9NYXBB",
            "QlBhdGNoRW50cnkaVQoYU2V2ZW5EYXlUYXNrSW5mb01hcEVudHJ5EgsKA2tl",
            "eRgBIAEoBRIoCgV2YWx1ZRgCIAEoCzIZLnJhd2RhdGEuU2V2ZW5EYXlUYXNr",
            "SW5mbzoCOAEaYQoaU2V2ZW5EYXlUYXNrSW5mb01hcEFCRW50cnkSCwoDa2V5",
            "GAEgASgJEjIKBXZhbHVlGAIgASgLMiMucmF3ZGF0YS5TZXZlbkRheVRhc2tJ",
            "bmZvTWFwQUJWYWx1ZToCOAEaZgofU2V2ZW5EYXlUYXNrSW5mb01hcEFCUGF0",
            "Y2hFbnRyeRILCgNrZXkYASABKAkSMgoFdmFsdWUYAiABKAsyIy5yYXdkYXRh",
            "LlNldmVuRGF5VGFza0luZm9NYXBBQlZhbHVlOgI4AUI9Wi1naXRsYWIuZnVu",
            "cGx1cy5pby9mYXQvY29uZi9nZW4vZ29sYW5nL3Jhd2RhdGGqAgtmYXQucmF3",
            "ZGF0YWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.SevenDayTaskInfo), global::fat.rawdata.SevenDayTaskInfo.Parser, new[]{ "Id", "Desc", "IconDesc", "IconShow", "IconShowActivity", "IconShowCommon", "RequireParam", "Sort", "TaskReward", "TaskType", "TokenId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.SevenDayTaskInfoMapABValue), global::fat.rawdata.SevenDayTaskInfoMapABValue.Parser, new[]{ "SevenDayTaskInfoMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.SevenDayTaskInfoConf), global::fat.rawdata.SevenDayTaskInfoConf.Parser, new[]{ "SevenDayTaskInfoMap", "SevenDayTaskInfoMapAB", "SevenDayTaskInfoMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="SevenDayTaskInfo",table="SevenDayTaskInfoMap",table_wrapper="SevenDayTaskInfoConf",map="true",map_key_type="int32",data="SevenDayTaskInfoConf")
  /// annotation@ab(table_ab="SevenDayTaskInfoMapAB",table_ab_patch="SevenDayTaskInfoMapABPatch",table_ab_value="SevenDayTaskInfoMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@SevenDayTaskInfo(id="id")
  /// </summary>
  public sealed partial class SevenDayTaskInfo : pb::IMessage<SevenDayTaskInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SevenDayTaskInfo> _parser = new pb::MessageParser<SevenDayTaskInfo>(() => new SevenDayTaskInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SevenDayTaskInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.SevenDayTaskInfoConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SevenDayTaskInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SevenDayTaskInfo(SevenDayTaskInfo other) : this() {
      id_ = other.id_;
      desc_ = other.desc_;
      iconDesc_ = other.iconDesc_;
      iconShow_ = other.iconShow_.Clone();
      iconShowActivity_ = other.iconShowActivity_;
      iconShowCommon_ = other.iconShowCommon_;
      requireParam_ = other.requireParam_;
      sort_ = other.sort_;
      taskReward_ = other.taskReward_.Clone();
      taskType_ = other.taskType_;
      tokenId_ = other.tokenId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SevenDayTaskInfo Clone() {
      return new SevenDayTaskInfo(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 任务id
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "desc" field.</summary>
    public const int DescFieldNumber = 2;
    private string desc_ = "";
    /// <summary>
    /// 任务描述
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Desc {
      get { return desc_; }
      set {
        desc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "iconDesc" field.</summary>
    public const int IconDescFieldNumber = 3;
    private string iconDesc_ = "";
    /// <summary>
    /// icon处弹出的描述文案id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IconDesc {
      get { return iconDesc_; }
      set {
        iconDesc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "iconShow" field.</summary>
    public const int IconShowFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_iconShow_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> iconShow_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 本任务关联的活动和任务icon
    /// {活动模版id1:token.Asset1,活动模版id2:token.Asset2,.......}
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> IconShow {
      get { return iconShow_; }
    }

    /// <summary>Field number for the "iconShowActivity" field.</summary>
    public const int IconShowActivityFieldNumber = 5;
    private int iconShowActivity_;
    /// <summary>
    /// 本任务关联的活动id
    /// （eventType.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IconShowActivity {
      get { return iconShowActivity_; }
      set {
        iconShowActivity_ = value;
      }
    }

    /// <summary>Field number for the "iconShowCommon" field.</summary>
    public const int IconShowCommonFieldNumber = 6;
    private string iconShowCommon_ = "";
    /// <summary>
    /// 不与活动关联的icon图
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IconShowCommon {
      get { return iconShowCommon_; }
      set {
        iconShowCommon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "requireParam" field.</summary>
    public const int RequireParamFieldNumber = 7;
    private string requireParam_ = "";
    /// <summary>
    /// 任务要求数量
    /// （数量:计算方式）
    /// 参数2计算方式规则如下：
    /// 0 = 数量
    /// 3 = 数量*（等级系数/100），RoundCoin取整
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RequireParam {
      get { return requireParam_; }
      set {
        requireParam_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sort" field.</summary>
    public const int SortFieldNumber = 8;
    private int sort_;
    /// <summary>
    /// 任务排序
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Sort {
      get { return sort_; }
      set {
        sort_ = value;
      }
    }

    /// <summary>Field number for the "taskReward" field.</summary>
    public const int TaskRewardFieldNumber = 9;
    private static readonly pb::FieldCodec<string> _repeated_taskReward_codec
        = pb::FieldCodec.ForString(74);
    private readonly pbc::RepeatedField<string> taskReward_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 任务奖励
    /// {货币id:数量,奖励id:数量}
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> TaskReward {
      get { return taskReward_; }
    }

    /// <summary>Field number for the "taskType" field.</summary>
    public const int TaskTypeFieldNumber = 10;
    private int taskType_;
    /// <summary>
    /// 任务类型
    /// （TaskType@enum.value）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TaskType {
      get { return taskType_; }
      set {
        taskType_ = value;
      }
    }

    /// <summary>Field number for the "tokenId" field.</summary>
    public const int TokenIdFieldNumber = 11;
    private int tokenId_;
    /// <summary>
    /// 关联具体活动
    /// 根据tokenId关联到对应活动
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TokenId {
      get { return tokenId_; }
      set {
        tokenId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SevenDayTaskInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SevenDayTaskInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Desc != other.Desc) return false;
      if (IconDesc != other.IconDesc) return false;
      if(!iconShow_.Equals(other.iconShow_)) return false;
      if (IconShowActivity != other.IconShowActivity) return false;
      if (IconShowCommon != other.IconShowCommon) return false;
      if (RequireParam != other.RequireParam) return false;
      if (Sort != other.Sort) return false;
      if(!taskReward_.Equals(other.taskReward_)) return false;
      if (TaskType != other.TaskType) return false;
      if (TokenId != other.TokenId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Desc.Length != 0) hash ^= Desc.GetHashCode();
      if (IconDesc.Length != 0) hash ^= IconDesc.GetHashCode();
      hash ^= iconShow_.GetHashCode();
      if (IconShowActivity != 0) hash ^= IconShowActivity.GetHashCode();
      if (IconShowCommon.Length != 0) hash ^= IconShowCommon.GetHashCode();
      if (RequireParam.Length != 0) hash ^= RequireParam.GetHashCode();
      if (Sort != 0) hash ^= Sort.GetHashCode();
      hash ^= taskReward_.GetHashCode();
      if (TaskType != 0) hash ^= TaskType.GetHashCode();
      if (TokenId != 0) hash ^= TokenId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Desc.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Desc);
      }
      if (IconDesc.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(IconDesc);
      }
      iconShow_.WriteTo(output, _repeated_iconShow_codec);
      if (IconShowActivity != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(IconShowActivity);
      }
      if (IconShowCommon.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(IconShowCommon);
      }
      if (RequireParam.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(RequireParam);
      }
      if (Sort != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Sort);
      }
      taskReward_.WriteTo(output, _repeated_taskReward_codec);
      if (TaskType != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(TaskType);
      }
      if (TokenId != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(TokenId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Desc.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Desc);
      }
      if (IconDesc.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(IconDesc);
      }
      iconShow_.WriteTo(ref output, _repeated_iconShow_codec);
      if (IconShowActivity != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(IconShowActivity);
      }
      if (IconShowCommon.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(IconShowCommon);
      }
      if (RequireParam.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(RequireParam);
      }
      if (Sort != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Sort);
      }
      taskReward_.WriteTo(ref output, _repeated_taskReward_codec);
      if (TaskType != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(TaskType);
      }
      if (TokenId != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(TokenId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Desc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Desc);
      }
      if (IconDesc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IconDesc);
      }
      size += iconShow_.CalculateSize(_repeated_iconShow_codec);
      if (IconShowActivity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IconShowActivity);
      }
      if (IconShowCommon.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IconShowCommon);
      }
      if (RequireParam.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RequireParam);
      }
      if (Sort != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Sort);
      }
      size += taskReward_.CalculateSize(_repeated_taskReward_codec);
      if (TaskType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TaskType);
      }
      if (TokenId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TokenId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SevenDayTaskInfo other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Desc.Length != 0) {
        Desc = other.Desc;
      }
      if (other.IconDesc.Length != 0) {
        IconDesc = other.IconDesc;
      }
      iconShow_.Add(other.iconShow_);
      if (other.IconShowActivity != 0) {
        IconShowActivity = other.IconShowActivity;
      }
      if (other.IconShowCommon.Length != 0) {
        IconShowCommon = other.IconShowCommon;
      }
      if (other.RequireParam.Length != 0) {
        RequireParam = other.RequireParam;
      }
      if (other.Sort != 0) {
        Sort = other.Sort;
      }
      taskReward_.Add(other.taskReward_);
      if (other.TaskType != 0) {
        TaskType = other.TaskType;
      }
      if (other.TokenId != 0) {
        TokenId = other.TokenId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Desc = input.ReadString();
            break;
          }
          case 26: {
            IconDesc = input.ReadString();
            break;
          }
          case 34: {
            iconShow_.AddEntriesFrom(input, _repeated_iconShow_codec);
            break;
          }
          case 40: {
            IconShowActivity = input.ReadInt32();
            break;
          }
          case 50: {
            IconShowCommon = input.ReadString();
            break;
          }
          case 58: {
            RequireParam = input.ReadString();
            break;
          }
          case 64: {
            Sort = input.ReadInt32();
            break;
          }
          case 74: {
            taskReward_.AddEntriesFrom(input, _repeated_taskReward_codec);
            break;
          }
          case 80: {
            TaskType = input.ReadInt32();
            break;
          }
          case 88: {
            TokenId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Desc = input.ReadString();
            break;
          }
          case 26: {
            IconDesc = input.ReadString();
            break;
          }
          case 34: {
            iconShow_.AddEntriesFrom(ref input, _repeated_iconShow_codec);
            break;
          }
          case 40: {
            IconShowActivity = input.ReadInt32();
            break;
          }
          case 50: {
            IconShowCommon = input.ReadString();
            break;
          }
          case 58: {
            RequireParam = input.ReadString();
            break;
          }
          case 64: {
            Sort = input.ReadInt32();
            break;
          }
          case 74: {
            taskReward_.AddEntriesFrom(ref input, _repeated_taskReward_codec);
            break;
          }
          case 80: {
            TaskType = input.ReadInt32();
            break;
          }
          case 88: {
            TokenId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SevenDayTaskInfoMapABValue : pb::IMessage<SevenDayTaskInfoMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SevenDayTaskInfoMapABValue> _parser = new pb::MessageParser<SevenDayTaskInfoMapABValue>(() => new SevenDayTaskInfoMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SevenDayTaskInfoMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.SevenDayTaskInfoConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SevenDayTaskInfoMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SevenDayTaskInfoMapABValue(SevenDayTaskInfoMapABValue other) : this() {
      sevenDayTaskInfoMap_ = other.sevenDayTaskInfoMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SevenDayTaskInfoMapABValue Clone() {
      return new SevenDayTaskInfoMapABValue(this);
    }

    /// <summary>Field number for the "SevenDayTaskInfoMap" field.</summary>
    public const int SevenDayTaskInfoMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.SevenDayTaskInfo>.Codec _map_sevenDayTaskInfoMap_codec
        = new pbc::MapField<int, global::fat.rawdata.SevenDayTaskInfo>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.SevenDayTaskInfo.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.SevenDayTaskInfo> sevenDayTaskInfoMap_ = new pbc::MapField<int, global::fat.rawdata.SevenDayTaskInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.SevenDayTaskInfo> SevenDayTaskInfoMap {
      get { return sevenDayTaskInfoMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SevenDayTaskInfoMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SevenDayTaskInfoMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!SevenDayTaskInfoMap.Equals(other.SevenDayTaskInfoMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= SevenDayTaskInfoMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      sevenDayTaskInfoMap_.WriteTo(output, _map_sevenDayTaskInfoMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      sevenDayTaskInfoMap_.WriteTo(ref output, _map_sevenDayTaskInfoMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += sevenDayTaskInfoMap_.CalculateSize(_map_sevenDayTaskInfoMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SevenDayTaskInfoMapABValue other) {
      if (other == null) {
        return;
      }
      sevenDayTaskInfoMap_.Add(other.sevenDayTaskInfoMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            sevenDayTaskInfoMap_.AddEntriesFrom(input, _map_sevenDayTaskInfoMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            sevenDayTaskInfoMap_.AddEntriesFrom(ref input, _map_sevenDayTaskInfoMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SevenDayTaskInfoConf : pb::IMessage<SevenDayTaskInfoConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SevenDayTaskInfoConf> _parser = new pb::MessageParser<SevenDayTaskInfoConf>(() => new SevenDayTaskInfoConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SevenDayTaskInfoConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.SevenDayTaskInfoConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SevenDayTaskInfoConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SevenDayTaskInfoConf(SevenDayTaskInfoConf other) : this() {
      sevenDayTaskInfoMap_ = other.sevenDayTaskInfoMap_.Clone();
      sevenDayTaskInfoMapAB_ = other.sevenDayTaskInfoMapAB_.Clone();
      sevenDayTaskInfoMapABPatch_ = other.sevenDayTaskInfoMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SevenDayTaskInfoConf Clone() {
      return new SevenDayTaskInfoConf(this);
    }

    /// <summary>Field number for the "SevenDayTaskInfoMap" field.</summary>
    public const int SevenDayTaskInfoMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.SevenDayTaskInfo>.Codec _map_sevenDayTaskInfoMap_codec
        = new pbc::MapField<int, global::fat.rawdata.SevenDayTaskInfo>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.SevenDayTaskInfo.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.SevenDayTaskInfo> sevenDayTaskInfoMap_ = new pbc::MapField<int, global::fat.rawdata.SevenDayTaskInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.SevenDayTaskInfo> SevenDayTaskInfoMap {
      get { return sevenDayTaskInfoMap_; }
    }

    /// <summary>Field number for the "SevenDayTaskInfoMapAB" field.</summary>
    public const int SevenDayTaskInfoMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.SevenDayTaskInfoMapABValue>.Codec _map_sevenDayTaskInfoMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.SevenDayTaskInfoMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.SevenDayTaskInfoMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.SevenDayTaskInfoMapABValue> sevenDayTaskInfoMapAB_ = new pbc::MapField<string, global::fat.rawdata.SevenDayTaskInfoMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.SevenDayTaskInfoMapABValue> SevenDayTaskInfoMapAB {
      get { return sevenDayTaskInfoMapAB_; }
    }

    /// <summary>Field number for the "SevenDayTaskInfoMapABPatch" field.</summary>
    public const int SevenDayTaskInfoMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.SevenDayTaskInfoMapABValue>.Codec _map_sevenDayTaskInfoMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.SevenDayTaskInfoMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.SevenDayTaskInfoMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.SevenDayTaskInfoMapABValue> sevenDayTaskInfoMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.SevenDayTaskInfoMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.SevenDayTaskInfoMapABValue> SevenDayTaskInfoMapABPatch {
      get { return sevenDayTaskInfoMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SevenDayTaskInfoConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SevenDayTaskInfoConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!SevenDayTaskInfoMap.Equals(other.SevenDayTaskInfoMap)) return false;
      if (!SevenDayTaskInfoMapAB.Equals(other.SevenDayTaskInfoMapAB)) return false;
      if (!SevenDayTaskInfoMapABPatch.Equals(other.SevenDayTaskInfoMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= SevenDayTaskInfoMap.GetHashCode();
      hash ^= SevenDayTaskInfoMapAB.GetHashCode();
      hash ^= SevenDayTaskInfoMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      sevenDayTaskInfoMap_.WriteTo(output, _map_sevenDayTaskInfoMap_codec);
      sevenDayTaskInfoMapAB_.WriteTo(output, _map_sevenDayTaskInfoMapAB_codec);
      sevenDayTaskInfoMapABPatch_.WriteTo(output, _map_sevenDayTaskInfoMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      sevenDayTaskInfoMap_.WriteTo(ref output, _map_sevenDayTaskInfoMap_codec);
      sevenDayTaskInfoMapAB_.WriteTo(ref output, _map_sevenDayTaskInfoMapAB_codec);
      sevenDayTaskInfoMapABPatch_.WriteTo(ref output, _map_sevenDayTaskInfoMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += sevenDayTaskInfoMap_.CalculateSize(_map_sevenDayTaskInfoMap_codec);
      size += sevenDayTaskInfoMapAB_.CalculateSize(_map_sevenDayTaskInfoMapAB_codec);
      size += sevenDayTaskInfoMapABPatch_.CalculateSize(_map_sevenDayTaskInfoMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SevenDayTaskInfoConf other) {
      if (other == null) {
        return;
      }
      sevenDayTaskInfoMap_.Add(other.sevenDayTaskInfoMap_);
      sevenDayTaskInfoMapAB_.Add(other.sevenDayTaskInfoMapAB_);
      sevenDayTaskInfoMapABPatch_.Add(other.sevenDayTaskInfoMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            sevenDayTaskInfoMap_.AddEntriesFrom(input, _map_sevenDayTaskInfoMap_codec);
            break;
          }
          case 18: {
            sevenDayTaskInfoMapAB_.AddEntriesFrom(input, _map_sevenDayTaskInfoMapAB_codec);
            break;
          }
          case 26: {
            sevenDayTaskInfoMapABPatch_.AddEntriesFrom(input, _map_sevenDayTaskInfoMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            sevenDayTaskInfoMap_.AddEntriesFrom(ref input, _map_sevenDayTaskInfoMap_codec);
            break;
          }
          case 18: {
            sevenDayTaskInfoMapAB_.AddEntriesFrom(ref input, _map_sevenDayTaskInfoMapAB_codec);
            break;
          }
          case 26: {
            sevenDayTaskInfoMapABPatch_.AddEntriesFrom(ref input, _map_sevenDayTaskInfoMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
