// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventLandmarkConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventLandmarkConf.proto</summary>
  public static partial class EventLandmarkConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventLandmarkConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventLandmarkConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch9yYXdkYXRhL0V2ZW50TGFuZG1hcmtDb25mLnByb3RvEgdyYXdkYXRhInoK",
            "DUV2ZW50TGFuZG1hcmsSCgoCaWQYASABKAUSDwoHaW5mb0dycBgCIAEoCRIT",
            "CgtsYW5kbWFya0JpZxgDIAEoBRIVCg1sYW5kbWFya1NtYWxsGAQgASgFEg8K",
            "B3RoZW1lSWQYBSABKAUSDwoHdG9rZW5JZBgGIAEoBSK8AQoXRXZlbnRMYW5k",
            "bWFya01hcEFCVmFsdWUSUAoQRXZlbnRMYW5kbWFya01hcBgBIAMoCzI2LnJh",
            "d2RhdGEuRXZlbnRMYW5kbWFya01hcEFCVmFsdWUuRXZlbnRMYW5kbWFya01h",
            "cEVudHJ5Gk8KFUV2ZW50TGFuZG1hcmtNYXBFbnRyeRILCgNrZXkYASABKAUS",
            "JQoFdmFsdWUYAiABKAsyFi5yYXdkYXRhLkV2ZW50TGFuZG1hcms6AjgBIpkE",
            "ChFFdmVudExhbmRtYXJrQ29uZhJKChBFdmVudExhbmRtYXJrTWFwGAEgAygL",
            "MjAucmF3ZGF0YS5FdmVudExhbmRtYXJrQ29uZi5FdmVudExhbmRtYXJrTWFw",
            "RW50cnkSTgoSRXZlbnRMYW5kbWFya01hcEFCGAIgAygLMjIucmF3ZGF0YS5F",
            "dmVudExhbmRtYXJrQ29uZi5FdmVudExhbmRtYXJrTWFwQUJFbnRyeRJYChdF",
            "dmVudExhbmRtYXJrTWFwQUJQYXRjaBgDIAMoCzI3LnJhd2RhdGEuRXZlbnRM",
            "YW5kbWFya0NvbmYuRXZlbnRMYW5kbWFya01hcEFCUGF0Y2hFbnRyeRpPChVF",
            "dmVudExhbmRtYXJrTWFwRW50cnkSCwoDa2V5GAEgASgFEiUKBXZhbHVlGAIg",
            "ASgLMhYucmF3ZGF0YS5FdmVudExhbmRtYXJrOgI4ARpbChdFdmVudExhbmRt",
            "YXJrTWFwQUJFbnRyeRILCgNrZXkYASABKAkSLwoFdmFsdWUYAiABKAsyIC5y",
            "YXdkYXRhLkV2ZW50TGFuZG1hcmtNYXBBQlZhbHVlOgI4ARpgChxFdmVudExh",
            "bmRtYXJrTWFwQUJQYXRjaEVudHJ5EgsKA2tleRgBIAEoCRIvCgV2YWx1ZRgC",
            "IAEoCzIgLnJhd2RhdGEuRXZlbnRMYW5kbWFya01hcEFCVmFsdWU6AjgBQj1a",
            "LWdpdGxhYi5mdW5wbHVzLmlvL2ZhdC9jb25mL2dlbi9nb2xhbmcvcmF3ZGF0",
            "YaoCC2ZhdC5yYXdkYXRhYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventLandmark), global::fat.rawdata.EventLandmark.Parser, new[]{ "Id", "InfoGrp", "LandmarkBig", "LandmarkSmall", "ThemeId", "TokenId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventLandmarkMapABValue), global::fat.rawdata.EventLandmarkMapABValue.Parser, new[]{ "EventLandmarkMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventLandmarkConf), global::fat.rawdata.EventLandmarkConf.Parser, new[]{ "EventLandmarkMap", "EventLandmarkMapAB", "EventLandmarkMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventLandmark",table="EventLandmarkMap",table_wrapper="EventLandmarkConf",map="true",map_key_type="int32",data="EventLandmarkConf")
  /// annotation@ab(table_ab="EventLandmarkMapAB",table_ab_patch="EventLandmarkMapABPatch",table_ab_value="EventLandmarkMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventLandmark(id="id")
  /// </summary>
  public sealed partial class EventLandmark : pb::IMessage<EventLandmark>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventLandmark> _parser = new pb::MessageParser<EventLandmark>(() => new EventLandmark());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventLandmark> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventLandmarkConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventLandmark() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventLandmark(EventLandmark other) : this() {
      id_ = other.id_;
      infoGrp_ = other.infoGrp_;
      landmarkBig_ = other.landmarkBig_;
      landmarkSmall_ = other.landmarkSmall_;
      themeId_ = other.themeId_;
      tokenId_ = other.tokenId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventLandmark Clone() {
      return new EventLandmark(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 路径活动id
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "infoGrp" field.</summary>
    public const int InfoGrpFieldNumber = 2;
    private string infoGrp_ = "";
    /// <summary>
    /// 用户分层id
    /// （GradeIndexMapping.id）
    /// （DailyLandmarkDetail.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InfoGrp {
      get { return infoGrp_; }
      set {
        infoGrp_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "landmarkBig" field.</summary>
    public const int LandmarkBigFieldNumber = 3;
    private int landmarkBig_;
    /// <summary>
    /// 大奖需要的token数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LandmarkBig {
      get { return landmarkBig_; }
      set {
        landmarkBig_ = value;
      }
    }

    /// <summary>Field number for the "landmarkSmall" field.</summary>
    public const int LandmarkSmallFieldNumber = 4;
    private int landmarkSmall_;
    /// <summary>
    /// 小奖需要的token数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LandmarkSmall {
      get { return landmarkSmall_; }
      set {
        landmarkSmall_ = value;
      }
    }

    /// <summary>Field number for the "themeId" field.</summary>
    public const int ThemeIdFieldNumber = 5;
    private int themeId_;
    /// <summary>
    /// 活动弹板ID
    /// （EventTheme.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ThemeId {
      get { return themeId_; }
      set {
        themeId_ = value;
      }
    }

    /// <summary>Field number for the "tokenId" field.</summary>
    public const int TokenIdFieldNumber = 6;
    private int tokenId_;
    /// <summary>
    /// 活动tokenID
    /// （ObjToken.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TokenId {
      get { return tokenId_; }
      set {
        tokenId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventLandmark);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventLandmark other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (InfoGrp != other.InfoGrp) return false;
      if (LandmarkBig != other.LandmarkBig) return false;
      if (LandmarkSmall != other.LandmarkSmall) return false;
      if (ThemeId != other.ThemeId) return false;
      if (TokenId != other.TokenId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (InfoGrp.Length != 0) hash ^= InfoGrp.GetHashCode();
      if (LandmarkBig != 0) hash ^= LandmarkBig.GetHashCode();
      if (LandmarkSmall != 0) hash ^= LandmarkSmall.GetHashCode();
      if (ThemeId != 0) hash ^= ThemeId.GetHashCode();
      if (TokenId != 0) hash ^= TokenId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (InfoGrp.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(InfoGrp);
      }
      if (LandmarkBig != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(LandmarkBig);
      }
      if (LandmarkSmall != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(LandmarkSmall);
      }
      if (ThemeId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ThemeId);
      }
      if (TokenId != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(TokenId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (InfoGrp.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(InfoGrp);
      }
      if (LandmarkBig != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(LandmarkBig);
      }
      if (LandmarkSmall != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(LandmarkSmall);
      }
      if (ThemeId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ThemeId);
      }
      if (TokenId != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(TokenId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (InfoGrp.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InfoGrp);
      }
      if (LandmarkBig != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LandmarkBig);
      }
      if (LandmarkSmall != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LandmarkSmall);
      }
      if (ThemeId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ThemeId);
      }
      if (TokenId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TokenId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventLandmark other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.InfoGrp.Length != 0) {
        InfoGrp = other.InfoGrp;
      }
      if (other.LandmarkBig != 0) {
        LandmarkBig = other.LandmarkBig;
      }
      if (other.LandmarkSmall != 0) {
        LandmarkSmall = other.LandmarkSmall;
      }
      if (other.ThemeId != 0) {
        ThemeId = other.ThemeId;
      }
      if (other.TokenId != 0) {
        TokenId = other.TokenId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            InfoGrp = input.ReadString();
            break;
          }
          case 24: {
            LandmarkBig = input.ReadInt32();
            break;
          }
          case 32: {
            LandmarkSmall = input.ReadInt32();
            break;
          }
          case 40: {
            ThemeId = input.ReadInt32();
            break;
          }
          case 48: {
            TokenId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            InfoGrp = input.ReadString();
            break;
          }
          case 24: {
            LandmarkBig = input.ReadInt32();
            break;
          }
          case 32: {
            LandmarkSmall = input.ReadInt32();
            break;
          }
          case 40: {
            ThemeId = input.ReadInt32();
            break;
          }
          case 48: {
            TokenId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventLandmarkMapABValue : pb::IMessage<EventLandmarkMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventLandmarkMapABValue> _parser = new pb::MessageParser<EventLandmarkMapABValue>(() => new EventLandmarkMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventLandmarkMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventLandmarkConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventLandmarkMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventLandmarkMapABValue(EventLandmarkMapABValue other) : this() {
      eventLandmarkMap_ = other.eventLandmarkMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventLandmarkMapABValue Clone() {
      return new EventLandmarkMapABValue(this);
    }

    /// <summary>Field number for the "EventLandmarkMap" field.</summary>
    public const int EventLandmarkMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventLandmark>.Codec _map_eventLandmarkMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventLandmark>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventLandmark.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventLandmark> eventLandmarkMap_ = new pbc::MapField<int, global::fat.rawdata.EventLandmark>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventLandmark> EventLandmarkMap {
      get { return eventLandmarkMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventLandmarkMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventLandmarkMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventLandmarkMap.Equals(other.EventLandmarkMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventLandmarkMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventLandmarkMap_.WriteTo(output, _map_eventLandmarkMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventLandmarkMap_.WriteTo(ref output, _map_eventLandmarkMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventLandmarkMap_.CalculateSize(_map_eventLandmarkMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventLandmarkMapABValue other) {
      if (other == null) {
        return;
      }
      eventLandmarkMap_.Add(other.eventLandmarkMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventLandmarkMap_.AddEntriesFrom(input, _map_eventLandmarkMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventLandmarkMap_.AddEntriesFrom(ref input, _map_eventLandmarkMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventLandmarkConf : pb::IMessage<EventLandmarkConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventLandmarkConf> _parser = new pb::MessageParser<EventLandmarkConf>(() => new EventLandmarkConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventLandmarkConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventLandmarkConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventLandmarkConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventLandmarkConf(EventLandmarkConf other) : this() {
      eventLandmarkMap_ = other.eventLandmarkMap_.Clone();
      eventLandmarkMapAB_ = other.eventLandmarkMapAB_.Clone();
      eventLandmarkMapABPatch_ = other.eventLandmarkMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventLandmarkConf Clone() {
      return new EventLandmarkConf(this);
    }

    /// <summary>Field number for the "EventLandmarkMap" field.</summary>
    public const int EventLandmarkMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventLandmark>.Codec _map_eventLandmarkMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventLandmark>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventLandmark.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventLandmark> eventLandmarkMap_ = new pbc::MapField<int, global::fat.rawdata.EventLandmark>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventLandmark> EventLandmarkMap {
      get { return eventLandmarkMap_; }
    }

    /// <summary>Field number for the "EventLandmarkMapAB" field.</summary>
    public const int EventLandmarkMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventLandmarkMapABValue>.Codec _map_eventLandmarkMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventLandmarkMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventLandmarkMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventLandmarkMapABValue> eventLandmarkMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventLandmarkMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventLandmarkMapABValue> EventLandmarkMapAB {
      get { return eventLandmarkMapAB_; }
    }

    /// <summary>Field number for the "EventLandmarkMapABPatch" field.</summary>
    public const int EventLandmarkMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventLandmarkMapABValue>.Codec _map_eventLandmarkMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventLandmarkMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventLandmarkMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventLandmarkMapABValue> eventLandmarkMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventLandmarkMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventLandmarkMapABValue> EventLandmarkMapABPatch {
      get { return eventLandmarkMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventLandmarkConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventLandmarkConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventLandmarkMap.Equals(other.EventLandmarkMap)) return false;
      if (!EventLandmarkMapAB.Equals(other.EventLandmarkMapAB)) return false;
      if (!EventLandmarkMapABPatch.Equals(other.EventLandmarkMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventLandmarkMap.GetHashCode();
      hash ^= EventLandmarkMapAB.GetHashCode();
      hash ^= EventLandmarkMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventLandmarkMap_.WriteTo(output, _map_eventLandmarkMap_codec);
      eventLandmarkMapAB_.WriteTo(output, _map_eventLandmarkMapAB_codec);
      eventLandmarkMapABPatch_.WriteTo(output, _map_eventLandmarkMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventLandmarkMap_.WriteTo(ref output, _map_eventLandmarkMap_codec);
      eventLandmarkMapAB_.WriteTo(ref output, _map_eventLandmarkMapAB_codec);
      eventLandmarkMapABPatch_.WriteTo(ref output, _map_eventLandmarkMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventLandmarkMap_.CalculateSize(_map_eventLandmarkMap_codec);
      size += eventLandmarkMapAB_.CalculateSize(_map_eventLandmarkMapAB_codec);
      size += eventLandmarkMapABPatch_.CalculateSize(_map_eventLandmarkMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventLandmarkConf other) {
      if (other == null) {
        return;
      }
      eventLandmarkMap_.Add(other.eventLandmarkMap_);
      eventLandmarkMapAB_.Add(other.eventLandmarkMapAB_);
      eventLandmarkMapABPatch_.Add(other.eventLandmarkMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventLandmarkMap_.AddEntriesFrom(input, _map_eventLandmarkMap_codec);
            break;
          }
          case 18: {
            eventLandmarkMapAB_.AddEntriesFrom(input, _map_eventLandmarkMapAB_codec);
            break;
          }
          case 26: {
            eventLandmarkMapABPatch_.AddEntriesFrom(input, _map_eventLandmarkMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventLandmarkMap_.AddEntriesFrom(ref input, _map_eventLandmarkMap_codec);
            break;
          }
          case 18: {
            eventLandmarkMapAB_.AddEntriesFrom(ref input, _map_eventLandmarkMapAB_codec);
            break;
          }
          case 26: {
            eventLandmarkMapABPatch_.AddEntriesFrom(ref input, _map_eventLandmarkMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
