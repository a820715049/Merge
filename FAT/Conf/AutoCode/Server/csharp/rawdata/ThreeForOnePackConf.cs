// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/ThreeForOnePackConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/ThreeForOnePackConf.proto</summary>
  public static partial class ThreeForOnePackConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/ThreeForOnePackConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ThreeForOnePackConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiFyYXdkYXRhL1RocmVlRm9yT25lUGFja0NvbmYucHJvdG8SB3Jhd2RhdGEi",
            "lQEKD1RocmVlRm9yT25lUGFjaxIKCgJpZBgBIAEoBRIQCghhTExHcnBJZBgC",
            "IAEoBRISCgpldmVudFRoZW1lGAMgASgFEhQKDHBhY2tPbmVHcnBJZBgEIAEo",
            "BRIWCg5wYWNrVGhyZWVHcnBJZBgFIAEoBRIUCgxwYWNrVHdvR3JwSWQYBiAB",
            "KAUSDAoEc2FsZRgHIAEoCCLIAQoZVGhyZWVGb3JPbmVQYWNrTWFwQUJWYWx1",
            "ZRJWChJUaHJlZUZvck9uZVBhY2tNYXAYASADKAsyOi5yYXdkYXRhLlRocmVl",
            "Rm9yT25lUGFja01hcEFCVmFsdWUuVGhyZWVGb3JPbmVQYWNrTWFwRW50cnka",
            "UwoXVGhyZWVGb3JPbmVQYWNrTWFwRW50cnkSCwoDa2V5GAEgASgFEicKBXZh",
            "bHVlGAIgASgLMhgucmF3ZGF0YS5UaHJlZUZvck9uZVBhY2s6AjgBIrkEChNU",
            "aHJlZUZvck9uZVBhY2tDb25mElAKElRocmVlRm9yT25lUGFja01hcBgBIAMo",
            "CzI0LnJhd2RhdGEuVGhyZWVGb3JPbmVQYWNrQ29uZi5UaHJlZUZvck9uZVBh",
            "Y2tNYXBFbnRyeRJUChRUaHJlZUZvck9uZVBhY2tNYXBBQhgCIAMoCzI2LnJh",
            "d2RhdGEuVGhyZWVGb3JPbmVQYWNrQ29uZi5UaHJlZUZvck9uZVBhY2tNYXBB",
            "QkVudHJ5El4KGVRocmVlRm9yT25lUGFja01hcEFCUGF0Y2gYAyADKAsyOy5y",
            "YXdkYXRhLlRocmVlRm9yT25lUGFja0NvbmYuVGhyZWVGb3JPbmVQYWNrTWFw",
            "QUJQYXRjaEVudHJ5GlMKF1RocmVlRm9yT25lUGFja01hcEVudHJ5EgsKA2tl",
            "eRgBIAEoBRInCgV2YWx1ZRgCIAEoCzIYLnJhd2RhdGEuVGhyZWVGb3JPbmVQ",
            "YWNrOgI4ARpfChlUaHJlZUZvck9uZVBhY2tNYXBBQkVudHJ5EgsKA2tleRgB",
            "IAEoCRIxCgV2YWx1ZRgCIAEoCzIiLnJhd2RhdGEuVGhyZWVGb3JPbmVQYWNr",
            "TWFwQUJWYWx1ZToCOAEaZAoeVGhyZWVGb3JPbmVQYWNrTWFwQUJQYXRjaEVu",
            "dHJ5EgsKA2tleRgBIAEoCRIxCgV2YWx1ZRgCIAEoCzIiLnJhd2RhdGEuVGhy",
            "ZWVGb3JPbmVQYWNrTWFwQUJWYWx1ZToCOAFCPVotZ2l0bGFiLmZ1bnBsdXMu",
            "aW8vZmF0L2NvbmYvZ2VuL2dvbGFuZy9yYXdkYXRhqgILZmF0LnJhd2RhdGFi",
            "BnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.ThreeForOnePack), global::fat.rawdata.ThreeForOnePack.Parser, new[]{ "Id", "ALLGrpId", "EventTheme", "PackOneGrpId", "PackThreeGrpId", "PackTwoGrpId", "Sale" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.ThreeForOnePackMapABValue), global::fat.rawdata.ThreeForOnePackMapABValue.Parser, new[]{ "ThreeForOnePackMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.ThreeForOnePackConf), global::fat.rawdata.ThreeForOnePackConf.Parser, new[]{ "ThreeForOnePackMap", "ThreeForOnePackMapAB", "ThreeForOnePackMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="ThreeForOnePack",table="ThreeForOnePackMap",table_wrapper="ThreeForOnePackConf",map="true",map_key_type="int32",data="ThreeForOnePackConf")
  /// annotation@ab(table_ab="ThreeForOnePackMapAB",table_ab_patch="ThreeForOnePackMapABPatch",table_ab_value="ThreeForOnePackMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@ThreeForOnePack(id="id")
  /// </summary>
  public sealed partial class ThreeForOnePack : pb::IMessage<ThreeForOnePack>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ThreeForOnePack> _parser = new pb::MessageParser<ThreeForOnePack>(() => new ThreeForOnePack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ThreeForOnePack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.ThreeForOnePackConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ThreeForOnePack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ThreeForOnePack(ThreeForOnePack other) : this() {
      id_ = other.id_;
      aLLGrpId_ = other.aLLGrpId_;
      eventTheme_ = other.eventTheme_;
      packOneGrpId_ = other.packOneGrpId_;
      packThreeGrpId_ = other.packThreeGrpId_;
      packTwoGrpId_ = other.packTwoGrpId_;
      sale_ = other.sale_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ThreeForOnePack Clone() {
      return new ThreeForOnePack(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 礼包
    /// 模板ID
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "aLLGrpId" field.</summary>
    public const int ALLGrpIdFieldNumber = 2;
    private int aLLGrpId_;
    /// <summary>
    /// 内购商品ID
    /// （受档位组控制）
    /// （GradeIndexMapping.id）
    /// （IAPPack.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ALLGrpId {
      get { return aLLGrpId_; }
      set {
        aLLGrpId_ = value;
      }
    }

    /// <summary>Field number for the "eventTheme" field.</summary>
    public const int EventThemeFieldNumber = 3;
    private int eventTheme_;
    /// <summary>
    /// 活动弹板ID
    /// （EventTheme.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EventTheme {
      get { return eventTheme_; }
      set {
        eventTheme_ = value;
      }
    }

    /// <summary>Field number for the "packOneGrpId" field.</summary>
    public const int PackOneGrpIdFieldNumber = 4;
    private int packOneGrpId_;
    /// <summary>
    /// 内购商品ID
    /// （受档位组控制）
    /// （GradeIndexMapping.id）
    /// （IAPPack.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PackOneGrpId {
      get { return packOneGrpId_; }
      set {
        packOneGrpId_ = value;
      }
    }

    /// <summary>Field number for the "packThreeGrpId" field.</summary>
    public const int PackThreeGrpIdFieldNumber = 5;
    private int packThreeGrpId_;
    /// <summary>
    /// 内购商品ID
    /// （受档位组控制）
    /// （GradeIndexMapping.id）
    /// （IAPPack.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PackThreeGrpId {
      get { return packThreeGrpId_; }
      set {
        packThreeGrpId_ = value;
      }
    }

    /// <summary>Field number for the "packTwoGrpId" field.</summary>
    public const int PackTwoGrpIdFieldNumber = 6;
    private int packTwoGrpId_;
    /// <summary>
    /// 内购商品ID
    /// （受档位组控制）
    /// （GradeIndexMapping.id）
    /// （IAPPack.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PackTwoGrpId {
      get { return packTwoGrpId_; }
      set {
        packTwoGrpId_ = value;
      }
    }

    /// <summary>Field number for the "sale" field.</summary>
    public const int SaleFieldNumber = 7;
    private bool sale_;
    /// <summary>
    /// 是否显示
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Sale {
      get { return sale_; }
      set {
        sale_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ThreeForOnePack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ThreeForOnePack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ALLGrpId != other.ALLGrpId) return false;
      if (EventTheme != other.EventTheme) return false;
      if (PackOneGrpId != other.PackOneGrpId) return false;
      if (PackThreeGrpId != other.PackThreeGrpId) return false;
      if (PackTwoGrpId != other.PackTwoGrpId) return false;
      if (Sale != other.Sale) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (ALLGrpId != 0) hash ^= ALLGrpId.GetHashCode();
      if (EventTheme != 0) hash ^= EventTheme.GetHashCode();
      if (PackOneGrpId != 0) hash ^= PackOneGrpId.GetHashCode();
      if (PackThreeGrpId != 0) hash ^= PackThreeGrpId.GetHashCode();
      if (PackTwoGrpId != 0) hash ^= PackTwoGrpId.GetHashCode();
      if (Sale != false) hash ^= Sale.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (ALLGrpId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ALLGrpId);
      }
      if (EventTheme != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(EventTheme);
      }
      if (PackOneGrpId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(PackOneGrpId);
      }
      if (PackThreeGrpId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(PackThreeGrpId);
      }
      if (PackTwoGrpId != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(PackTwoGrpId);
      }
      if (Sale != false) {
        output.WriteRawTag(56);
        output.WriteBool(Sale);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (ALLGrpId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ALLGrpId);
      }
      if (EventTheme != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(EventTheme);
      }
      if (PackOneGrpId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(PackOneGrpId);
      }
      if (PackThreeGrpId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(PackThreeGrpId);
      }
      if (PackTwoGrpId != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(PackTwoGrpId);
      }
      if (Sale != false) {
        output.WriteRawTag(56);
        output.WriteBool(Sale);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (ALLGrpId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ALLGrpId);
      }
      if (EventTheme != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EventTheme);
      }
      if (PackOneGrpId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PackOneGrpId);
      }
      if (PackThreeGrpId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PackThreeGrpId);
      }
      if (PackTwoGrpId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PackTwoGrpId);
      }
      if (Sale != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ThreeForOnePack other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.ALLGrpId != 0) {
        ALLGrpId = other.ALLGrpId;
      }
      if (other.EventTheme != 0) {
        EventTheme = other.EventTheme;
      }
      if (other.PackOneGrpId != 0) {
        PackOneGrpId = other.PackOneGrpId;
      }
      if (other.PackThreeGrpId != 0) {
        PackThreeGrpId = other.PackThreeGrpId;
      }
      if (other.PackTwoGrpId != 0) {
        PackTwoGrpId = other.PackTwoGrpId;
      }
      if (other.Sale != false) {
        Sale = other.Sale;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            ALLGrpId = input.ReadInt32();
            break;
          }
          case 24: {
            EventTheme = input.ReadInt32();
            break;
          }
          case 32: {
            PackOneGrpId = input.ReadInt32();
            break;
          }
          case 40: {
            PackThreeGrpId = input.ReadInt32();
            break;
          }
          case 48: {
            PackTwoGrpId = input.ReadInt32();
            break;
          }
          case 56: {
            Sale = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            ALLGrpId = input.ReadInt32();
            break;
          }
          case 24: {
            EventTheme = input.ReadInt32();
            break;
          }
          case 32: {
            PackOneGrpId = input.ReadInt32();
            break;
          }
          case 40: {
            PackThreeGrpId = input.ReadInt32();
            break;
          }
          case 48: {
            PackTwoGrpId = input.ReadInt32();
            break;
          }
          case 56: {
            Sale = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ThreeForOnePackMapABValue : pb::IMessage<ThreeForOnePackMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ThreeForOnePackMapABValue> _parser = new pb::MessageParser<ThreeForOnePackMapABValue>(() => new ThreeForOnePackMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ThreeForOnePackMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.ThreeForOnePackConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ThreeForOnePackMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ThreeForOnePackMapABValue(ThreeForOnePackMapABValue other) : this() {
      threeForOnePackMap_ = other.threeForOnePackMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ThreeForOnePackMapABValue Clone() {
      return new ThreeForOnePackMapABValue(this);
    }

    /// <summary>Field number for the "ThreeForOnePackMap" field.</summary>
    public const int ThreeForOnePackMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.ThreeForOnePack>.Codec _map_threeForOnePackMap_codec
        = new pbc::MapField<int, global::fat.rawdata.ThreeForOnePack>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ThreeForOnePack.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.ThreeForOnePack> threeForOnePackMap_ = new pbc::MapField<int, global::fat.rawdata.ThreeForOnePack>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.ThreeForOnePack> ThreeForOnePackMap {
      get { return threeForOnePackMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ThreeForOnePackMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ThreeForOnePackMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!ThreeForOnePackMap.Equals(other.ThreeForOnePackMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ThreeForOnePackMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      threeForOnePackMap_.WriteTo(output, _map_threeForOnePackMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      threeForOnePackMap_.WriteTo(ref output, _map_threeForOnePackMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += threeForOnePackMap_.CalculateSize(_map_threeForOnePackMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ThreeForOnePackMapABValue other) {
      if (other == null) {
        return;
      }
      threeForOnePackMap_.Add(other.threeForOnePackMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            threeForOnePackMap_.AddEntriesFrom(input, _map_threeForOnePackMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            threeForOnePackMap_.AddEntriesFrom(ref input, _map_threeForOnePackMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ThreeForOnePackConf : pb::IMessage<ThreeForOnePackConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ThreeForOnePackConf> _parser = new pb::MessageParser<ThreeForOnePackConf>(() => new ThreeForOnePackConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ThreeForOnePackConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.ThreeForOnePackConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ThreeForOnePackConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ThreeForOnePackConf(ThreeForOnePackConf other) : this() {
      threeForOnePackMap_ = other.threeForOnePackMap_.Clone();
      threeForOnePackMapAB_ = other.threeForOnePackMapAB_.Clone();
      threeForOnePackMapABPatch_ = other.threeForOnePackMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ThreeForOnePackConf Clone() {
      return new ThreeForOnePackConf(this);
    }

    /// <summary>Field number for the "ThreeForOnePackMap" field.</summary>
    public const int ThreeForOnePackMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.ThreeForOnePack>.Codec _map_threeForOnePackMap_codec
        = new pbc::MapField<int, global::fat.rawdata.ThreeForOnePack>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ThreeForOnePack.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.ThreeForOnePack> threeForOnePackMap_ = new pbc::MapField<int, global::fat.rawdata.ThreeForOnePack>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.ThreeForOnePack> ThreeForOnePackMap {
      get { return threeForOnePackMap_; }
    }

    /// <summary>Field number for the "ThreeForOnePackMapAB" field.</summary>
    public const int ThreeForOnePackMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.ThreeForOnePackMapABValue>.Codec _map_threeForOnePackMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.ThreeForOnePackMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ThreeForOnePackMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.ThreeForOnePackMapABValue> threeForOnePackMapAB_ = new pbc::MapField<string, global::fat.rawdata.ThreeForOnePackMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.ThreeForOnePackMapABValue> ThreeForOnePackMapAB {
      get { return threeForOnePackMapAB_; }
    }

    /// <summary>Field number for the "ThreeForOnePackMapABPatch" field.</summary>
    public const int ThreeForOnePackMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.ThreeForOnePackMapABValue>.Codec _map_threeForOnePackMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.ThreeForOnePackMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ThreeForOnePackMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.ThreeForOnePackMapABValue> threeForOnePackMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.ThreeForOnePackMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.ThreeForOnePackMapABValue> ThreeForOnePackMapABPatch {
      get { return threeForOnePackMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ThreeForOnePackConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ThreeForOnePackConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!ThreeForOnePackMap.Equals(other.ThreeForOnePackMap)) return false;
      if (!ThreeForOnePackMapAB.Equals(other.ThreeForOnePackMapAB)) return false;
      if (!ThreeForOnePackMapABPatch.Equals(other.ThreeForOnePackMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ThreeForOnePackMap.GetHashCode();
      hash ^= ThreeForOnePackMapAB.GetHashCode();
      hash ^= ThreeForOnePackMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      threeForOnePackMap_.WriteTo(output, _map_threeForOnePackMap_codec);
      threeForOnePackMapAB_.WriteTo(output, _map_threeForOnePackMapAB_codec);
      threeForOnePackMapABPatch_.WriteTo(output, _map_threeForOnePackMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      threeForOnePackMap_.WriteTo(ref output, _map_threeForOnePackMap_codec);
      threeForOnePackMapAB_.WriteTo(ref output, _map_threeForOnePackMapAB_codec);
      threeForOnePackMapABPatch_.WriteTo(ref output, _map_threeForOnePackMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += threeForOnePackMap_.CalculateSize(_map_threeForOnePackMap_codec);
      size += threeForOnePackMapAB_.CalculateSize(_map_threeForOnePackMapAB_codec);
      size += threeForOnePackMapABPatch_.CalculateSize(_map_threeForOnePackMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ThreeForOnePackConf other) {
      if (other == null) {
        return;
      }
      threeForOnePackMap_.Add(other.threeForOnePackMap_);
      threeForOnePackMapAB_.Add(other.threeForOnePackMapAB_);
      threeForOnePackMapABPatch_.Add(other.threeForOnePackMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            threeForOnePackMap_.AddEntriesFrom(input, _map_threeForOnePackMap_codec);
            break;
          }
          case 18: {
            threeForOnePackMapAB_.AddEntriesFrom(input, _map_threeForOnePackMapAB_codec);
            break;
          }
          case 26: {
            threeForOnePackMapABPatch_.AddEntriesFrom(input, _map_threeForOnePackMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            threeForOnePackMap_.AddEntriesFrom(ref input, _map_threeForOnePackMap_codec);
            break;
          }
          case 18: {
            threeForOnePackMapAB_.AddEntriesFrom(ref input, _map_threeForOnePackMapAB_codec);
            break;
          }
          case 26: {
            threeForOnePackMapABPatch_.AddEntriesFrom(ref input, _map_threeForOnePackMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
