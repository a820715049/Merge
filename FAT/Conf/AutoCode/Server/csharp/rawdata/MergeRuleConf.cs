// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/MergeRuleConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/MergeRuleConf.proto</summary>
  public static partial class MergeRuleConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/MergeRuleConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MergeRuleConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChtyYXdkYXRhL01lcmdlUnVsZUNvbmYucHJvdG8SB3Jhd2RhdGEiKQoJTWVy",
            "Z2VSdWxlEgoKAmlkGAEgASgFEhAKCHRhcmdldElkGAIgASgFIqQBChNNZXJn",
            "ZVJ1bGVNYXBBQlZhbHVlEkQKDE1lcmdlUnVsZU1hcBgBIAMoCzIuLnJhd2Rh",
            "dGEuTWVyZ2VSdWxlTWFwQUJWYWx1ZS5NZXJnZVJ1bGVNYXBFbnRyeRpHChFN",
            "ZXJnZVJ1bGVNYXBFbnRyeRILCgNrZXkYASABKAUSIQoFdmFsdWUYAiABKAsy",
            "Ei5yYXdkYXRhLk1lcmdlUnVsZToCOAEi2QMKDU1lcmdlUnVsZUNvbmYSPgoM",
            "TWVyZ2VSdWxlTWFwGAEgAygLMigucmF3ZGF0YS5NZXJnZVJ1bGVDb25mLk1l",
            "cmdlUnVsZU1hcEVudHJ5EkIKDk1lcmdlUnVsZU1hcEFCGAIgAygLMioucmF3",
            "ZGF0YS5NZXJnZVJ1bGVDb25mLk1lcmdlUnVsZU1hcEFCRW50cnkSTAoTTWVy",
            "Z2VSdWxlTWFwQUJQYXRjaBgDIAMoCzIvLnJhd2RhdGEuTWVyZ2VSdWxlQ29u",
            "Zi5NZXJnZVJ1bGVNYXBBQlBhdGNoRW50cnkaRwoRTWVyZ2VSdWxlTWFwRW50",
            "cnkSCwoDa2V5GAEgASgFEiEKBXZhbHVlGAIgASgLMhIucmF3ZGF0YS5NZXJn",
            "ZVJ1bGU6AjgBGlMKE01lcmdlUnVsZU1hcEFCRW50cnkSCwoDa2V5GAEgASgJ",
            "EisKBXZhbHVlGAIgASgLMhwucmF3ZGF0YS5NZXJnZVJ1bGVNYXBBQlZhbHVl",
            "OgI4ARpYChhNZXJnZVJ1bGVNYXBBQlBhdGNoRW50cnkSCwoDa2V5GAEgASgJ",
            "EisKBXZhbHVlGAIgASgLMhwucmF3ZGF0YS5NZXJnZVJ1bGVNYXBBQlZhbHVl",
            "OgI4AUI9Wi1naXRsYWIuZnVucGx1cy5pby9mYXQvY29uZi9nZW4vZ29sYW5n",
            "L3Jhd2RhdGGqAgtmYXQucmF3ZGF0YWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.MergeRule), global::fat.rawdata.MergeRule.Parser, new[]{ "Id", "TargetId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.MergeRuleMapABValue), global::fat.rawdata.MergeRuleMapABValue.Parser, new[]{ "MergeRuleMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.MergeRuleConf), global::fat.rawdata.MergeRuleConf.Parser, new[]{ "MergeRuleMap", "MergeRuleMapAB", "MergeRuleMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="MergeRule",table="MergeRuleMap",table_wrapper="MergeRuleConf",map="true",map_key_type="int32",data="MergeRuleConf")
  /// annotation@ab(table_ab="MergeRuleMapAB",table_ab_patch="MergeRuleMapABPatch",table_ab_value="MergeRuleMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@MergeRule(id="id")
  /// </summary>
  public sealed partial class MergeRule : pb::IMessage<MergeRule>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MergeRule> _parser = new pb::MessageParser<MergeRule>(() => new MergeRule());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MergeRule> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.MergeRuleConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeRule() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeRule(MergeRule other) : this() {
      id_ = other.id_;
      targetId_ = other.targetId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeRule Clone() {
      return new MergeRule(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 物品id
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "targetId" field.</summary>
    public const int TargetIdFieldNumber = 2;
    private int targetId_;
    /// <summary>
    /// 目标物品id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TargetId {
      get { return targetId_; }
      set {
        targetId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MergeRule);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MergeRule other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (TargetId != other.TargetId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (TargetId != 0) hash ^= TargetId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (TargetId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TargetId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (TargetId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TargetId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (TargetId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TargetId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MergeRule other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.TargetId != 0) {
        TargetId = other.TargetId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            TargetId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            TargetId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MergeRuleMapABValue : pb::IMessage<MergeRuleMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MergeRuleMapABValue> _parser = new pb::MessageParser<MergeRuleMapABValue>(() => new MergeRuleMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MergeRuleMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.MergeRuleConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeRuleMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeRuleMapABValue(MergeRuleMapABValue other) : this() {
      mergeRuleMap_ = other.mergeRuleMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeRuleMapABValue Clone() {
      return new MergeRuleMapABValue(this);
    }

    /// <summary>Field number for the "MergeRuleMap" field.</summary>
    public const int MergeRuleMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.MergeRule>.Codec _map_mergeRuleMap_codec
        = new pbc::MapField<int, global::fat.rawdata.MergeRule>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.MergeRule.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.MergeRule> mergeRuleMap_ = new pbc::MapField<int, global::fat.rawdata.MergeRule>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.MergeRule> MergeRuleMap {
      get { return mergeRuleMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MergeRuleMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MergeRuleMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!MergeRuleMap.Equals(other.MergeRuleMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= MergeRuleMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      mergeRuleMap_.WriteTo(output, _map_mergeRuleMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      mergeRuleMap_.WriteTo(ref output, _map_mergeRuleMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += mergeRuleMap_.CalculateSize(_map_mergeRuleMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MergeRuleMapABValue other) {
      if (other == null) {
        return;
      }
      mergeRuleMap_.Add(other.mergeRuleMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            mergeRuleMap_.AddEntriesFrom(input, _map_mergeRuleMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            mergeRuleMap_.AddEntriesFrom(ref input, _map_mergeRuleMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MergeRuleConf : pb::IMessage<MergeRuleConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MergeRuleConf> _parser = new pb::MessageParser<MergeRuleConf>(() => new MergeRuleConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MergeRuleConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.MergeRuleConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeRuleConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeRuleConf(MergeRuleConf other) : this() {
      mergeRuleMap_ = other.mergeRuleMap_.Clone();
      mergeRuleMapAB_ = other.mergeRuleMapAB_.Clone();
      mergeRuleMapABPatch_ = other.mergeRuleMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeRuleConf Clone() {
      return new MergeRuleConf(this);
    }

    /// <summary>Field number for the "MergeRuleMap" field.</summary>
    public const int MergeRuleMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.MergeRule>.Codec _map_mergeRuleMap_codec
        = new pbc::MapField<int, global::fat.rawdata.MergeRule>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.MergeRule.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.MergeRule> mergeRuleMap_ = new pbc::MapField<int, global::fat.rawdata.MergeRule>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.MergeRule> MergeRuleMap {
      get { return mergeRuleMap_; }
    }

    /// <summary>Field number for the "MergeRuleMapAB" field.</summary>
    public const int MergeRuleMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.MergeRuleMapABValue>.Codec _map_mergeRuleMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.MergeRuleMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.MergeRuleMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.MergeRuleMapABValue> mergeRuleMapAB_ = new pbc::MapField<string, global::fat.rawdata.MergeRuleMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.MergeRuleMapABValue> MergeRuleMapAB {
      get { return mergeRuleMapAB_; }
    }

    /// <summary>Field number for the "MergeRuleMapABPatch" field.</summary>
    public const int MergeRuleMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.MergeRuleMapABValue>.Codec _map_mergeRuleMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.MergeRuleMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.MergeRuleMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.MergeRuleMapABValue> mergeRuleMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.MergeRuleMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.MergeRuleMapABValue> MergeRuleMapABPatch {
      get { return mergeRuleMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MergeRuleConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MergeRuleConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!MergeRuleMap.Equals(other.MergeRuleMap)) return false;
      if (!MergeRuleMapAB.Equals(other.MergeRuleMapAB)) return false;
      if (!MergeRuleMapABPatch.Equals(other.MergeRuleMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= MergeRuleMap.GetHashCode();
      hash ^= MergeRuleMapAB.GetHashCode();
      hash ^= MergeRuleMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      mergeRuleMap_.WriteTo(output, _map_mergeRuleMap_codec);
      mergeRuleMapAB_.WriteTo(output, _map_mergeRuleMapAB_codec);
      mergeRuleMapABPatch_.WriteTo(output, _map_mergeRuleMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      mergeRuleMap_.WriteTo(ref output, _map_mergeRuleMap_codec);
      mergeRuleMapAB_.WriteTo(ref output, _map_mergeRuleMapAB_codec);
      mergeRuleMapABPatch_.WriteTo(ref output, _map_mergeRuleMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += mergeRuleMap_.CalculateSize(_map_mergeRuleMap_codec);
      size += mergeRuleMapAB_.CalculateSize(_map_mergeRuleMapAB_codec);
      size += mergeRuleMapABPatch_.CalculateSize(_map_mergeRuleMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MergeRuleConf other) {
      if (other == null) {
        return;
      }
      mergeRuleMap_.Add(other.mergeRuleMap_);
      mergeRuleMapAB_.Add(other.mergeRuleMapAB_);
      mergeRuleMapABPatch_.Add(other.mergeRuleMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            mergeRuleMap_.AddEntriesFrom(input, _map_mergeRuleMap_codec);
            break;
          }
          case 18: {
            mergeRuleMapAB_.AddEntriesFrom(input, _map_mergeRuleMapAB_codec);
            break;
          }
          case 26: {
            mergeRuleMapABPatch_.AddEntriesFrom(input, _map_mergeRuleMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            mergeRuleMap_.AddEntriesFrom(ref input, _map_mergeRuleMap_codec);
            break;
          }
          case 18: {
            mergeRuleMapAB_.AddEntriesFrom(ref input, _map_mergeRuleMapAB_codec);
            break;
          }
          case 26: {
            mergeRuleMapABPatch_.AddEntriesFrom(ref input, _map_mergeRuleMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
