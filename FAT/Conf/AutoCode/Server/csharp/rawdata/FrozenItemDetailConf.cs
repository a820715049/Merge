// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/FrozenItemDetailConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/FrozenItemDetailConf.proto</summary>
  public static partial class FrozenItemDetailConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/FrozenItemDetailConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FrozenItemDetailConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiJyYXdkYXRhL0Zyb3plbkl0ZW1EZXRhaWxDb25mLnByb3RvEgdyYXdkYXRh",
            "IusBChBGcm96ZW5JdGVtRGV0YWlsEgoKAmlkGAEgASgFEhAKCGJhc2VQcm9i",
            "GAIgASgFEhIKCmRlYWRXZWlnaHQYAyADKAkSEwoLZW5lcmd5UmFuZ2UYBCAD",
            "KAkSFwoPZXJnQ29uc3VtZVRpbWVzGAUgASgFEhQKDGl0ZW1EZWFkVGltZRgO",
            "IAMoBRIVCg1pdGVtRGlmZlJhbmdlGAkgAygJEg4KBmx2RGlmZhgKIAEoBRIU",
            "CgxyYXRlVXBFbmVyZ3kYCyABKAUSEgoKcmF0ZVVwUHJvYhgMIAEoBRIQCghz",
            "dGVwUHJvYhgNIAEoBSLOAQoaRnJvemVuSXRlbURldGFpbE1hcEFCVmFsdWUS",
            "WQoTRnJvemVuSXRlbURldGFpbE1hcBgBIAMoCzI8LnJhd2RhdGEuRnJvemVu",
            "SXRlbURldGFpbE1hcEFCVmFsdWUuRnJvemVuSXRlbURldGFpbE1hcEVudHJ5",
            "GlUKGEZyb3plbkl0ZW1EZXRhaWxNYXBFbnRyeRILCgNrZXkYASABKAUSKAoF",
            "dmFsdWUYAiABKAsyGS5yYXdkYXRhLkZyb3plbkl0ZW1EZXRhaWw6AjgBIskE",
            "ChRGcm96ZW5JdGVtRGV0YWlsQ29uZhJTChNGcm96ZW5JdGVtRGV0YWlsTWFw",
            "GAEgAygLMjYucmF3ZGF0YS5Gcm96ZW5JdGVtRGV0YWlsQ29uZi5Gcm96ZW5J",
            "dGVtRGV0YWlsTWFwRW50cnkSVwoVRnJvemVuSXRlbURldGFpbE1hcEFCGAIg",
            "AygLMjgucmF3ZGF0YS5Gcm96ZW5JdGVtRGV0YWlsQ29uZi5Gcm96ZW5JdGVt",
            "RGV0YWlsTWFwQUJFbnRyeRJhChpGcm96ZW5JdGVtRGV0YWlsTWFwQUJQYXRj",
            "aBgDIAMoCzI9LnJhd2RhdGEuRnJvemVuSXRlbURldGFpbENvbmYuRnJvemVu",
            "SXRlbURldGFpbE1hcEFCUGF0Y2hFbnRyeRpVChhGcm96ZW5JdGVtRGV0YWls",
            "TWFwRW50cnkSCwoDa2V5GAEgASgFEigKBXZhbHVlGAIgASgLMhkucmF3ZGF0",
            "YS5Gcm96ZW5JdGVtRGV0YWlsOgI4ARphChpGcm96ZW5JdGVtRGV0YWlsTWFw",
            "QUJFbnRyeRILCgNrZXkYASABKAkSMgoFdmFsdWUYAiABKAsyIy5yYXdkYXRh",
            "LkZyb3plbkl0ZW1EZXRhaWxNYXBBQlZhbHVlOgI4ARpmCh9Gcm96ZW5JdGVt",
            "RGV0YWlsTWFwQUJQYXRjaEVudHJ5EgsKA2tleRgBIAEoCRIyCgV2YWx1ZRgC",
            "IAEoCzIjLnJhd2RhdGEuRnJvemVuSXRlbURldGFpbE1hcEFCVmFsdWU6AjgB",
            "Qj1aLWdpdGxhYi5mdW5wbHVzLmlvL2ZhdC9jb25mL2dlbi9nb2xhbmcvcmF3",
            "ZGF0YaoCC2ZhdC5yYXdkYXRhYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.FrozenItemDetail), global::fat.rawdata.FrozenItemDetail.Parser, new[]{ "Id", "BaseProb", "DeadWeight", "EnergyRange", "ErgConsumeTimes", "ItemDeadTime", "ItemDiffRange", "LvDiff", "RateUpEnergy", "RateUpProb", "StepProb" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.FrozenItemDetailMapABValue), global::fat.rawdata.FrozenItemDetailMapABValue.Parser, new[]{ "FrozenItemDetailMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.FrozenItemDetailConf), global::fat.rawdata.FrozenItemDetailConf.Parser, new[]{ "FrozenItemDetailMap", "FrozenItemDetailMapAB", "FrozenItemDetailMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="FrozenItemDetail",table="FrozenItemDetailMap",table_wrapper="FrozenItemDetailConf",map="true",map_key_type="int32",data="FrozenItemDetailConf")
  /// annotation@ab(table_ab="FrozenItemDetailMapAB",table_ab_patch="FrozenItemDetailMapABPatch",table_ab_value="FrozenItemDetailMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@FrozenItemDetail(id="id")
  /// </summary>
  public sealed partial class FrozenItemDetail : pb::IMessage<FrozenItemDetail>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FrozenItemDetail> _parser = new pb::MessageParser<FrozenItemDetail>(() => new FrozenItemDetail());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FrozenItemDetail> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.FrozenItemDetailConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FrozenItemDetail() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FrozenItemDetail(FrozenItemDetail other) : this() {
      id_ = other.id_;
      baseProb_ = other.baseProb_;
      deadWeight_ = other.deadWeight_.Clone();
      energyRange_ = other.energyRange_.Clone();
      ergConsumeTimes_ = other.ergConsumeTimes_;
      itemDeadTime_ = other.itemDeadTime_.Clone();
      itemDiffRange_ = other.itemDiffRange_.Clone();
      lvDiff_ = other.lvDiff_;
      rateUpEnergy_ = other.rateUpEnergy_;
      rateUpProb_ = other.rateUpProb_;
      stepProb_ = other.stepProb_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FrozenItemDetail Clone() {
      return new FrozenItemDetail(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 活动详情id
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "baseProb" field.</summary>
    public const int BaseProbFieldNumber = 2;
    private int baseProb_;
    /// <summary>
    /// 冰冻棋子的基础掉落概率
    /// （单位：千分比）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BaseProb {
      get { return baseProb_; }
      set {
        baseProb_ = value;
      }
    }

    /// <summary>Field number for the "deadWeight" field.</summary>
    public const int DeadWeightFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_deadWeight_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> deadWeight_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 冰冻棋子过期后产生的棋子
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> DeadWeight {
      get { return deadWeight_; }
    }

    /// <summary>Field number for the "energyRange" field.</summary>
    public const int EnergyRangeFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_energyRange_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> energyRange_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 生成冰冻棋子时，消耗能量的范围
    /// （默认-1为无限大）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> EnergyRange {
      get { return energyRange_; }
    }

    /// <summary>Field number for the "ergConsumeTimes" field.</summary>
    public const int ErgConsumeTimesFieldNumber = 5;
    private int ergConsumeTimes_;
    /// <summary>
    /// 触发冰冻棋子所需的最少体力点击次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ErgConsumeTimes {
      get { return ergConsumeTimes_; }
      set {
        ergConsumeTimes_ = value;
      }
    }

    /// <summary>Field number for the "itemDeadTime" field.</summary>
    public const int ItemDeadTimeFieldNumber = 14;
    private static readonly pb::FieldCodec<int> _repeated_itemDeadTime_codec
        = pb::FieldCodec.ForInt32(114);
    private readonly pbc::RepeatedField<int> itemDeadTime_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 冰冻棋子存在的时间
    /// （单位：秒）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> ItemDeadTime {
      get { return itemDeadTime_; }
    }

    /// <summary>Field number for the "itemDiffRange" field.</summary>
    public const int ItemDiffRangeFieldNumber = 9;
    private static readonly pb::FieldCodec<string> _repeated_itemDiffRange_codec
        = pb::FieldCodec.ForString(74);
    private readonly pbc::RepeatedField<string> itemDiffRange_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 根据能量范围，对应可掉棋子的难度范围
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ItemDiffRange {
      get { return itemDiffRange_; }
    }

    /// <summary>Field number for the "lvDiff" field.</summary>
    public const int LvDiffFieldNumber = 10;
    private int lvDiff_;
    /// <summary>
    /// 冰冻棋子比合成棋子高出的等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LvDiff {
      get { return lvDiff_; }
      set {
        lvDiff_ = value;
      }
    }

    /// <summary>Field number for the "rateUpEnergy" field.</summary>
    public const int RateUpEnergyFieldNumber = 11;
    private int rateUpEnergy_;
    /// <summary>
    /// 触发概率提升的体力
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RateUpEnergy {
      get { return rateUpEnergy_; }
      set {
        rateUpEnergy_ = value;
      }
    }

    /// <summary>Field number for the "rateUpProb" field.</summary>
    public const int RateUpProbFieldNumber = 12;
    private int rateUpProb_;
    /// <summary>
    /// 提升概率
    /// （单位：千分比）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RateUpProb {
      get { return rateUpProb_; }
      set {
        rateUpProb_ = value;
      }
    }

    /// <summary>Field number for the "stepProb" field.</summary>
    public const int StepProbFieldNumber = 13;
    private int stepProb_;
    /// <summary>
    /// 冰冻棋子掉率随耗体增长速度
    /// （单位：千分比）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StepProb {
      get { return stepProb_; }
      set {
        stepProb_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FrozenItemDetail);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FrozenItemDetail other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (BaseProb != other.BaseProb) return false;
      if(!deadWeight_.Equals(other.deadWeight_)) return false;
      if(!energyRange_.Equals(other.energyRange_)) return false;
      if (ErgConsumeTimes != other.ErgConsumeTimes) return false;
      if(!itemDeadTime_.Equals(other.itemDeadTime_)) return false;
      if(!itemDiffRange_.Equals(other.itemDiffRange_)) return false;
      if (LvDiff != other.LvDiff) return false;
      if (RateUpEnergy != other.RateUpEnergy) return false;
      if (RateUpProb != other.RateUpProb) return false;
      if (StepProb != other.StepProb) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (BaseProb != 0) hash ^= BaseProb.GetHashCode();
      hash ^= deadWeight_.GetHashCode();
      hash ^= energyRange_.GetHashCode();
      if (ErgConsumeTimes != 0) hash ^= ErgConsumeTimes.GetHashCode();
      hash ^= itemDeadTime_.GetHashCode();
      hash ^= itemDiffRange_.GetHashCode();
      if (LvDiff != 0) hash ^= LvDiff.GetHashCode();
      if (RateUpEnergy != 0) hash ^= RateUpEnergy.GetHashCode();
      if (RateUpProb != 0) hash ^= RateUpProb.GetHashCode();
      if (StepProb != 0) hash ^= StepProb.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (BaseProb != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BaseProb);
      }
      deadWeight_.WriteTo(output, _repeated_deadWeight_codec);
      energyRange_.WriteTo(output, _repeated_energyRange_codec);
      if (ErgConsumeTimes != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ErgConsumeTimes);
      }
      itemDiffRange_.WriteTo(output, _repeated_itemDiffRange_codec);
      if (LvDiff != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(LvDiff);
      }
      if (RateUpEnergy != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(RateUpEnergy);
      }
      if (RateUpProb != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(RateUpProb);
      }
      if (StepProb != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(StepProb);
      }
      itemDeadTime_.WriteTo(output, _repeated_itemDeadTime_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (BaseProb != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BaseProb);
      }
      deadWeight_.WriteTo(ref output, _repeated_deadWeight_codec);
      energyRange_.WriteTo(ref output, _repeated_energyRange_codec);
      if (ErgConsumeTimes != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ErgConsumeTimes);
      }
      itemDiffRange_.WriteTo(ref output, _repeated_itemDiffRange_codec);
      if (LvDiff != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(LvDiff);
      }
      if (RateUpEnergy != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(RateUpEnergy);
      }
      if (RateUpProb != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(RateUpProb);
      }
      if (StepProb != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(StepProb);
      }
      itemDeadTime_.WriteTo(ref output, _repeated_itemDeadTime_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (BaseProb != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BaseProb);
      }
      size += deadWeight_.CalculateSize(_repeated_deadWeight_codec);
      size += energyRange_.CalculateSize(_repeated_energyRange_codec);
      if (ErgConsumeTimes != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ErgConsumeTimes);
      }
      size += itemDeadTime_.CalculateSize(_repeated_itemDeadTime_codec);
      size += itemDiffRange_.CalculateSize(_repeated_itemDiffRange_codec);
      if (LvDiff != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LvDiff);
      }
      if (RateUpEnergy != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RateUpEnergy);
      }
      if (RateUpProb != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RateUpProb);
      }
      if (StepProb != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StepProb);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FrozenItemDetail other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.BaseProb != 0) {
        BaseProb = other.BaseProb;
      }
      deadWeight_.Add(other.deadWeight_);
      energyRange_.Add(other.energyRange_);
      if (other.ErgConsumeTimes != 0) {
        ErgConsumeTimes = other.ErgConsumeTimes;
      }
      itemDeadTime_.Add(other.itemDeadTime_);
      itemDiffRange_.Add(other.itemDiffRange_);
      if (other.LvDiff != 0) {
        LvDiff = other.LvDiff;
      }
      if (other.RateUpEnergy != 0) {
        RateUpEnergy = other.RateUpEnergy;
      }
      if (other.RateUpProb != 0) {
        RateUpProb = other.RateUpProb;
      }
      if (other.StepProb != 0) {
        StepProb = other.StepProb;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            BaseProb = input.ReadInt32();
            break;
          }
          case 26: {
            deadWeight_.AddEntriesFrom(input, _repeated_deadWeight_codec);
            break;
          }
          case 34: {
            energyRange_.AddEntriesFrom(input, _repeated_energyRange_codec);
            break;
          }
          case 40: {
            ErgConsumeTimes = input.ReadInt32();
            break;
          }
          case 74: {
            itemDiffRange_.AddEntriesFrom(input, _repeated_itemDiffRange_codec);
            break;
          }
          case 80: {
            LvDiff = input.ReadInt32();
            break;
          }
          case 88: {
            RateUpEnergy = input.ReadInt32();
            break;
          }
          case 96: {
            RateUpProb = input.ReadInt32();
            break;
          }
          case 104: {
            StepProb = input.ReadInt32();
            break;
          }
          case 114:
          case 112: {
            itemDeadTime_.AddEntriesFrom(input, _repeated_itemDeadTime_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            BaseProb = input.ReadInt32();
            break;
          }
          case 26: {
            deadWeight_.AddEntriesFrom(ref input, _repeated_deadWeight_codec);
            break;
          }
          case 34: {
            energyRange_.AddEntriesFrom(ref input, _repeated_energyRange_codec);
            break;
          }
          case 40: {
            ErgConsumeTimes = input.ReadInt32();
            break;
          }
          case 74: {
            itemDiffRange_.AddEntriesFrom(ref input, _repeated_itemDiffRange_codec);
            break;
          }
          case 80: {
            LvDiff = input.ReadInt32();
            break;
          }
          case 88: {
            RateUpEnergy = input.ReadInt32();
            break;
          }
          case 96: {
            RateUpProb = input.ReadInt32();
            break;
          }
          case 104: {
            StepProb = input.ReadInt32();
            break;
          }
          case 114:
          case 112: {
            itemDeadTime_.AddEntriesFrom(ref input, _repeated_itemDeadTime_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class FrozenItemDetailMapABValue : pb::IMessage<FrozenItemDetailMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FrozenItemDetailMapABValue> _parser = new pb::MessageParser<FrozenItemDetailMapABValue>(() => new FrozenItemDetailMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FrozenItemDetailMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.FrozenItemDetailConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FrozenItemDetailMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FrozenItemDetailMapABValue(FrozenItemDetailMapABValue other) : this() {
      frozenItemDetailMap_ = other.frozenItemDetailMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FrozenItemDetailMapABValue Clone() {
      return new FrozenItemDetailMapABValue(this);
    }

    /// <summary>Field number for the "FrozenItemDetailMap" field.</summary>
    public const int FrozenItemDetailMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.FrozenItemDetail>.Codec _map_frozenItemDetailMap_codec
        = new pbc::MapField<int, global::fat.rawdata.FrozenItemDetail>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.FrozenItemDetail.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.FrozenItemDetail> frozenItemDetailMap_ = new pbc::MapField<int, global::fat.rawdata.FrozenItemDetail>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.FrozenItemDetail> FrozenItemDetailMap {
      get { return frozenItemDetailMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FrozenItemDetailMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FrozenItemDetailMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!FrozenItemDetailMap.Equals(other.FrozenItemDetailMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= FrozenItemDetailMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      frozenItemDetailMap_.WriteTo(output, _map_frozenItemDetailMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      frozenItemDetailMap_.WriteTo(ref output, _map_frozenItemDetailMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += frozenItemDetailMap_.CalculateSize(_map_frozenItemDetailMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FrozenItemDetailMapABValue other) {
      if (other == null) {
        return;
      }
      frozenItemDetailMap_.Add(other.frozenItemDetailMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            frozenItemDetailMap_.AddEntriesFrom(input, _map_frozenItemDetailMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            frozenItemDetailMap_.AddEntriesFrom(ref input, _map_frozenItemDetailMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class FrozenItemDetailConf : pb::IMessage<FrozenItemDetailConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FrozenItemDetailConf> _parser = new pb::MessageParser<FrozenItemDetailConf>(() => new FrozenItemDetailConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FrozenItemDetailConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.FrozenItemDetailConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FrozenItemDetailConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FrozenItemDetailConf(FrozenItemDetailConf other) : this() {
      frozenItemDetailMap_ = other.frozenItemDetailMap_.Clone();
      frozenItemDetailMapAB_ = other.frozenItemDetailMapAB_.Clone();
      frozenItemDetailMapABPatch_ = other.frozenItemDetailMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FrozenItemDetailConf Clone() {
      return new FrozenItemDetailConf(this);
    }

    /// <summary>Field number for the "FrozenItemDetailMap" field.</summary>
    public const int FrozenItemDetailMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.FrozenItemDetail>.Codec _map_frozenItemDetailMap_codec
        = new pbc::MapField<int, global::fat.rawdata.FrozenItemDetail>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.FrozenItemDetail.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.FrozenItemDetail> frozenItemDetailMap_ = new pbc::MapField<int, global::fat.rawdata.FrozenItemDetail>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.FrozenItemDetail> FrozenItemDetailMap {
      get { return frozenItemDetailMap_; }
    }

    /// <summary>Field number for the "FrozenItemDetailMapAB" field.</summary>
    public const int FrozenItemDetailMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.FrozenItemDetailMapABValue>.Codec _map_frozenItemDetailMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.FrozenItemDetailMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.FrozenItemDetailMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.FrozenItemDetailMapABValue> frozenItemDetailMapAB_ = new pbc::MapField<string, global::fat.rawdata.FrozenItemDetailMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.FrozenItemDetailMapABValue> FrozenItemDetailMapAB {
      get { return frozenItemDetailMapAB_; }
    }

    /// <summary>Field number for the "FrozenItemDetailMapABPatch" field.</summary>
    public const int FrozenItemDetailMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.FrozenItemDetailMapABValue>.Codec _map_frozenItemDetailMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.FrozenItemDetailMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.FrozenItemDetailMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.FrozenItemDetailMapABValue> frozenItemDetailMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.FrozenItemDetailMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.FrozenItemDetailMapABValue> FrozenItemDetailMapABPatch {
      get { return frozenItemDetailMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FrozenItemDetailConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FrozenItemDetailConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!FrozenItemDetailMap.Equals(other.FrozenItemDetailMap)) return false;
      if (!FrozenItemDetailMapAB.Equals(other.FrozenItemDetailMapAB)) return false;
      if (!FrozenItemDetailMapABPatch.Equals(other.FrozenItemDetailMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= FrozenItemDetailMap.GetHashCode();
      hash ^= FrozenItemDetailMapAB.GetHashCode();
      hash ^= FrozenItemDetailMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      frozenItemDetailMap_.WriteTo(output, _map_frozenItemDetailMap_codec);
      frozenItemDetailMapAB_.WriteTo(output, _map_frozenItemDetailMapAB_codec);
      frozenItemDetailMapABPatch_.WriteTo(output, _map_frozenItemDetailMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      frozenItemDetailMap_.WriteTo(ref output, _map_frozenItemDetailMap_codec);
      frozenItemDetailMapAB_.WriteTo(ref output, _map_frozenItemDetailMapAB_codec);
      frozenItemDetailMapABPatch_.WriteTo(ref output, _map_frozenItemDetailMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += frozenItemDetailMap_.CalculateSize(_map_frozenItemDetailMap_codec);
      size += frozenItemDetailMapAB_.CalculateSize(_map_frozenItemDetailMapAB_codec);
      size += frozenItemDetailMapABPatch_.CalculateSize(_map_frozenItemDetailMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FrozenItemDetailConf other) {
      if (other == null) {
        return;
      }
      frozenItemDetailMap_.Add(other.frozenItemDetailMap_);
      frozenItemDetailMapAB_.Add(other.frozenItemDetailMapAB_);
      frozenItemDetailMapABPatch_.Add(other.frozenItemDetailMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            frozenItemDetailMap_.AddEntriesFrom(input, _map_frozenItemDetailMap_codec);
            break;
          }
          case 18: {
            frozenItemDetailMapAB_.AddEntriesFrom(input, _map_frozenItemDetailMapAB_codec);
            break;
          }
          case 26: {
            frozenItemDetailMapABPatch_.AddEntriesFrom(input, _map_frozenItemDetailMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            frozenItemDetailMap_.AddEntriesFrom(ref input, _map_frozenItemDetailMap_codec);
            break;
          }
          case 18: {
            frozenItemDetailMapAB_.AddEntriesFrom(ref input, _map_frozenItemDetailMapAB_codec);
            break;
          }
          case 26: {
            frozenItemDetailMapABPatch_.AddEntriesFrom(ref input, _map_frozenItemDetailMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
