// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/GemEndlessThreeDetailConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/GemEndlessThreeDetailConf.proto</summary>
  public static partial class GemEndlessThreeDetailConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/GemEndlessThreeDetailConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GemEndlessThreeDetailConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CidyYXdkYXRhL0dlbUVuZGxlc3NUaHJlZURldGFpbENvbmYucHJvdG8SB3Jh",
            "d2RhdGEiaAoVR2VtRW5kbGVzc1RocmVlRGV0YWlsEhAKCGRldGFpbGlkGAEg",
            "ASgFEhQKDGZyZWVPbmVHcnBJZBgCIAEoBRIUCgxmcmVlVHdvR3JwSWQYAyAB",
            "KAUSEQoJcGFja0dycElkGAQgASgFImcKIUdlbUVuZGxlc3NUaHJlZURldGFp",
            "bFNsaWNlQUJWYWx1ZRJCChpHZW1FbmRsZXNzVGhyZWVEZXRhaWxTbGljZRgB",
            "IAMoCzIeLnJhd2RhdGEuR2VtRW5kbGVzc1RocmVlRGV0YWlsIqgEChlHZW1F",
            "bmRsZXNzVGhyZWVEZXRhaWxDb25mEkIKGkdlbUVuZGxlc3NUaHJlZURldGFp",
            "bFNsaWNlGAEgAygLMh4ucmF3ZGF0YS5HZW1FbmRsZXNzVGhyZWVEZXRhaWwS",
            "agocR2VtRW5kbGVzc1RocmVlRGV0YWlsU2xpY2VBQhgCIAMoCzJELnJhd2Rh",
            "dGEuR2VtRW5kbGVzc1RocmVlRGV0YWlsQ29uZi5HZW1FbmRsZXNzVGhyZWVE",
            "ZXRhaWxTbGljZUFCRW50cnkSdAohR2VtRW5kbGVzc1RocmVlRGV0YWlsU2xp",
            "Y2VBQlBhdGNoGAMgAygLMkkucmF3ZGF0YS5HZW1FbmRsZXNzVGhyZWVEZXRh",
            "aWxDb25mLkdlbUVuZGxlc3NUaHJlZURldGFpbFNsaWNlQUJQYXRjaEVudHJ5",
            "Gm8KIUdlbUVuZGxlc3NUaHJlZURldGFpbFNsaWNlQUJFbnRyeRILCgNrZXkY",
            "ASABKAkSOQoFdmFsdWUYAiABKAsyKi5yYXdkYXRhLkdlbUVuZGxlc3NUaHJl",
            "ZURldGFpbFNsaWNlQUJWYWx1ZToCOAEadAomR2VtRW5kbGVzc1RocmVlRGV0",
            "YWlsU2xpY2VBQlBhdGNoRW50cnkSCwoDa2V5GAEgASgJEjkKBXZhbHVlGAIg",
            "ASgLMioucmF3ZGF0YS5HZW1FbmRsZXNzVGhyZWVEZXRhaWxTbGljZUFCVmFs",
            "dWU6AjgBQj1aLWdpdGxhYi5mdW5wbHVzLmlvL2ZhdC9jb25mL2dlbi9nb2xh",
            "bmcvcmF3ZGF0YaoCC2ZhdC5yYXdkYXRhYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.GemEndlessThreeDetail), global::fat.rawdata.GemEndlessThreeDetail.Parser, new[]{ "Detailid", "FreeOneGrpId", "FreeTwoGrpId", "PackGrpId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.GemEndlessThreeDetailSliceABValue), global::fat.rawdata.GemEndlessThreeDetailSliceABValue.Parser, new[]{ "GemEndlessThreeDetailSlice" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.GemEndlessThreeDetailConf), global::fat.rawdata.GemEndlessThreeDetailConf.Parser, new[]{ "GemEndlessThreeDetailSlice", "GemEndlessThreeDetailSliceAB", "GemEndlessThreeDetailSliceABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="GemEndlessThreeDetail",table="GemEndlessThreeDetailSlice",table_wrapper="GemEndlessThreeDetailConf",map="false",map_key_type="",data="GemEndlessThreeDetailConf")
  /// annotation@ab(table_ab="GemEndlessThreeDetailSliceAB",table_ab_patch="GemEndlessThreeDetailSliceABPatch",table_ab_value="GemEndlessThreeDetailSliceABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// </summary>
  public sealed partial class GemEndlessThreeDetail : pb::IMessage<GemEndlessThreeDetail>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GemEndlessThreeDetail> _parser = new pb::MessageParser<GemEndlessThreeDetail>(() => new GemEndlessThreeDetail());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GemEndlessThreeDetail> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.GemEndlessThreeDetailConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GemEndlessThreeDetail() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GemEndlessThreeDetail(GemEndlessThreeDetail other) : this() {
      detailid_ = other.detailid_;
      freeOneGrpId_ = other.freeOneGrpId_;
      freeTwoGrpId_ = other.freeTwoGrpId_;
      packGrpId_ = other.packGrpId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GemEndlessThreeDetail Clone() {
      return new GemEndlessThreeDetail(this);
    }

    /// <summary>Field number for the "detailid" field.</summary>
    public const int DetailidFieldNumber = 1;
    private int detailid_;
    /// <summary>
    /// 礼包详情id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Detailid {
      get { return detailid_; }
      set {
        detailid_ = value;
      }
    }

    /// <summary>Field number for the "freeOneGrpId" field.</summary>
    public const int FreeOneGrpIdFieldNumber = 2;
    private int freeOneGrpId_;
    /// <summary>
    /// 赠品ID
    /// （受档位组控制）
    /// （GradeIndexMapping.id）
    /// （IAPFree.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FreeOneGrpId {
      get { return freeOneGrpId_; }
      set {
        freeOneGrpId_ = value;
      }
    }

    /// <summary>Field number for the "freeTwoGrpId" field.</summary>
    public const int FreeTwoGrpIdFieldNumber = 3;
    private int freeTwoGrpId_;
    /// <summary>
    /// 赠品ID
    /// （受档位组控制）
    /// （GradeIndexMapping.id）
    /// （IAPFree.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FreeTwoGrpId {
      get { return freeTwoGrpId_; }
      set {
        freeTwoGrpId_ = value;
      }
    }

    /// <summary>Field number for the "packGrpId" field.</summary>
    public const int PackGrpIdFieldNumber = 4;
    private int packGrpId_;
    /// <summary>
    /// 内购商品ID
    /// （受档位组控制）
    /// （GradeIndexMapping.id）
    /// （CurrencyPack.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PackGrpId {
      get { return packGrpId_; }
      set {
        packGrpId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GemEndlessThreeDetail);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GemEndlessThreeDetail other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Detailid != other.Detailid) return false;
      if (FreeOneGrpId != other.FreeOneGrpId) return false;
      if (FreeTwoGrpId != other.FreeTwoGrpId) return false;
      if (PackGrpId != other.PackGrpId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Detailid != 0) hash ^= Detailid.GetHashCode();
      if (FreeOneGrpId != 0) hash ^= FreeOneGrpId.GetHashCode();
      if (FreeTwoGrpId != 0) hash ^= FreeTwoGrpId.GetHashCode();
      if (PackGrpId != 0) hash ^= PackGrpId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Detailid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Detailid);
      }
      if (FreeOneGrpId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(FreeOneGrpId);
      }
      if (FreeTwoGrpId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(FreeTwoGrpId);
      }
      if (PackGrpId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(PackGrpId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Detailid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Detailid);
      }
      if (FreeOneGrpId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(FreeOneGrpId);
      }
      if (FreeTwoGrpId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(FreeTwoGrpId);
      }
      if (PackGrpId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(PackGrpId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Detailid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Detailid);
      }
      if (FreeOneGrpId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FreeOneGrpId);
      }
      if (FreeTwoGrpId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FreeTwoGrpId);
      }
      if (PackGrpId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PackGrpId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GemEndlessThreeDetail other) {
      if (other == null) {
        return;
      }
      if (other.Detailid != 0) {
        Detailid = other.Detailid;
      }
      if (other.FreeOneGrpId != 0) {
        FreeOneGrpId = other.FreeOneGrpId;
      }
      if (other.FreeTwoGrpId != 0) {
        FreeTwoGrpId = other.FreeTwoGrpId;
      }
      if (other.PackGrpId != 0) {
        PackGrpId = other.PackGrpId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Detailid = input.ReadInt32();
            break;
          }
          case 16: {
            FreeOneGrpId = input.ReadInt32();
            break;
          }
          case 24: {
            FreeTwoGrpId = input.ReadInt32();
            break;
          }
          case 32: {
            PackGrpId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Detailid = input.ReadInt32();
            break;
          }
          case 16: {
            FreeOneGrpId = input.ReadInt32();
            break;
          }
          case 24: {
            FreeTwoGrpId = input.ReadInt32();
            break;
          }
          case 32: {
            PackGrpId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GemEndlessThreeDetailSliceABValue : pb::IMessage<GemEndlessThreeDetailSliceABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GemEndlessThreeDetailSliceABValue> _parser = new pb::MessageParser<GemEndlessThreeDetailSliceABValue>(() => new GemEndlessThreeDetailSliceABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GemEndlessThreeDetailSliceABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.GemEndlessThreeDetailConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GemEndlessThreeDetailSliceABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GemEndlessThreeDetailSliceABValue(GemEndlessThreeDetailSliceABValue other) : this() {
      gemEndlessThreeDetailSlice_ = other.gemEndlessThreeDetailSlice_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GemEndlessThreeDetailSliceABValue Clone() {
      return new GemEndlessThreeDetailSliceABValue(this);
    }

    /// <summary>Field number for the "GemEndlessThreeDetailSlice" field.</summary>
    public const int GemEndlessThreeDetailSliceFieldNumber = 1;
    private static readonly pb::FieldCodec<global::fat.rawdata.GemEndlessThreeDetail> _repeated_gemEndlessThreeDetailSlice_codec
        = pb::FieldCodec.ForMessage(10, global::fat.rawdata.GemEndlessThreeDetail.Parser);
    private readonly pbc::RepeatedField<global::fat.rawdata.GemEndlessThreeDetail> gemEndlessThreeDetailSlice_ = new pbc::RepeatedField<global::fat.rawdata.GemEndlessThreeDetail>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::fat.rawdata.GemEndlessThreeDetail> GemEndlessThreeDetailSlice {
      get { return gemEndlessThreeDetailSlice_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GemEndlessThreeDetailSliceABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GemEndlessThreeDetailSliceABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!gemEndlessThreeDetailSlice_.Equals(other.gemEndlessThreeDetailSlice_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= gemEndlessThreeDetailSlice_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      gemEndlessThreeDetailSlice_.WriteTo(output, _repeated_gemEndlessThreeDetailSlice_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      gemEndlessThreeDetailSlice_.WriteTo(ref output, _repeated_gemEndlessThreeDetailSlice_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += gemEndlessThreeDetailSlice_.CalculateSize(_repeated_gemEndlessThreeDetailSlice_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GemEndlessThreeDetailSliceABValue other) {
      if (other == null) {
        return;
      }
      gemEndlessThreeDetailSlice_.Add(other.gemEndlessThreeDetailSlice_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            gemEndlessThreeDetailSlice_.AddEntriesFrom(input, _repeated_gemEndlessThreeDetailSlice_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            gemEndlessThreeDetailSlice_.AddEntriesFrom(ref input, _repeated_gemEndlessThreeDetailSlice_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GemEndlessThreeDetailConf : pb::IMessage<GemEndlessThreeDetailConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GemEndlessThreeDetailConf> _parser = new pb::MessageParser<GemEndlessThreeDetailConf>(() => new GemEndlessThreeDetailConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GemEndlessThreeDetailConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.GemEndlessThreeDetailConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GemEndlessThreeDetailConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GemEndlessThreeDetailConf(GemEndlessThreeDetailConf other) : this() {
      gemEndlessThreeDetailSlice_ = other.gemEndlessThreeDetailSlice_.Clone();
      gemEndlessThreeDetailSliceAB_ = other.gemEndlessThreeDetailSliceAB_.Clone();
      gemEndlessThreeDetailSliceABPatch_ = other.gemEndlessThreeDetailSliceABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GemEndlessThreeDetailConf Clone() {
      return new GemEndlessThreeDetailConf(this);
    }

    /// <summary>Field number for the "GemEndlessThreeDetailSlice" field.</summary>
    public const int GemEndlessThreeDetailSliceFieldNumber = 1;
    private static readonly pb::FieldCodec<global::fat.rawdata.GemEndlessThreeDetail> _repeated_gemEndlessThreeDetailSlice_codec
        = pb::FieldCodec.ForMessage(10, global::fat.rawdata.GemEndlessThreeDetail.Parser);
    private readonly pbc::RepeatedField<global::fat.rawdata.GemEndlessThreeDetail> gemEndlessThreeDetailSlice_ = new pbc::RepeatedField<global::fat.rawdata.GemEndlessThreeDetail>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::fat.rawdata.GemEndlessThreeDetail> GemEndlessThreeDetailSlice {
      get { return gemEndlessThreeDetailSlice_; }
    }

    /// <summary>Field number for the "GemEndlessThreeDetailSliceAB" field.</summary>
    public const int GemEndlessThreeDetailSliceABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.GemEndlessThreeDetailSliceABValue>.Codec _map_gemEndlessThreeDetailSliceAB_codec
        = new pbc::MapField<string, global::fat.rawdata.GemEndlessThreeDetailSliceABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.GemEndlessThreeDetailSliceABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.GemEndlessThreeDetailSliceABValue> gemEndlessThreeDetailSliceAB_ = new pbc::MapField<string, global::fat.rawdata.GemEndlessThreeDetailSliceABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.GemEndlessThreeDetailSliceABValue> GemEndlessThreeDetailSliceAB {
      get { return gemEndlessThreeDetailSliceAB_; }
    }

    /// <summary>Field number for the "GemEndlessThreeDetailSliceABPatch" field.</summary>
    public const int GemEndlessThreeDetailSliceABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.GemEndlessThreeDetailSliceABValue>.Codec _map_gemEndlessThreeDetailSliceABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.GemEndlessThreeDetailSliceABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.GemEndlessThreeDetailSliceABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.GemEndlessThreeDetailSliceABValue> gemEndlessThreeDetailSliceABPatch_ = new pbc::MapField<string, global::fat.rawdata.GemEndlessThreeDetailSliceABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.GemEndlessThreeDetailSliceABValue> GemEndlessThreeDetailSliceABPatch {
      get { return gemEndlessThreeDetailSliceABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GemEndlessThreeDetailConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GemEndlessThreeDetailConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!gemEndlessThreeDetailSlice_.Equals(other.gemEndlessThreeDetailSlice_)) return false;
      if (!GemEndlessThreeDetailSliceAB.Equals(other.GemEndlessThreeDetailSliceAB)) return false;
      if (!GemEndlessThreeDetailSliceABPatch.Equals(other.GemEndlessThreeDetailSliceABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= gemEndlessThreeDetailSlice_.GetHashCode();
      hash ^= GemEndlessThreeDetailSliceAB.GetHashCode();
      hash ^= GemEndlessThreeDetailSliceABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      gemEndlessThreeDetailSlice_.WriteTo(output, _repeated_gemEndlessThreeDetailSlice_codec);
      gemEndlessThreeDetailSliceAB_.WriteTo(output, _map_gemEndlessThreeDetailSliceAB_codec);
      gemEndlessThreeDetailSliceABPatch_.WriteTo(output, _map_gemEndlessThreeDetailSliceABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      gemEndlessThreeDetailSlice_.WriteTo(ref output, _repeated_gemEndlessThreeDetailSlice_codec);
      gemEndlessThreeDetailSliceAB_.WriteTo(ref output, _map_gemEndlessThreeDetailSliceAB_codec);
      gemEndlessThreeDetailSliceABPatch_.WriteTo(ref output, _map_gemEndlessThreeDetailSliceABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += gemEndlessThreeDetailSlice_.CalculateSize(_repeated_gemEndlessThreeDetailSlice_codec);
      size += gemEndlessThreeDetailSliceAB_.CalculateSize(_map_gemEndlessThreeDetailSliceAB_codec);
      size += gemEndlessThreeDetailSliceABPatch_.CalculateSize(_map_gemEndlessThreeDetailSliceABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GemEndlessThreeDetailConf other) {
      if (other == null) {
        return;
      }
      gemEndlessThreeDetailSlice_.Add(other.gemEndlessThreeDetailSlice_);
      gemEndlessThreeDetailSliceAB_.Add(other.gemEndlessThreeDetailSliceAB_);
      gemEndlessThreeDetailSliceABPatch_.Add(other.gemEndlessThreeDetailSliceABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            gemEndlessThreeDetailSlice_.AddEntriesFrom(input, _repeated_gemEndlessThreeDetailSlice_codec);
            break;
          }
          case 18: {
            gemEndlessThreeDetailSliceAB_.AddEntriesFrom(input, _map_gemEndlessThreeDetailSliceAB_codec);
            break;
          }
          case 26: {
            gemEndlessThreeDetailSliceABPatch_.AddEntriesFrom(input, _map_gemEndlessThreeDetailSliceABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            gemEndlessThreeDetailSlice_.AddEntriesFrom(ref input, _repeated_gemEndlessThreeDetailSlice_codec);
            break;
          }
          case 18: {
            gemEndlessThreeDetailSliceAB_.AddEntriesFrom(ref input, _map_gemEndlessThreeDetailSliceAB_codec);
            break;
          }
          case 26: {
            gemEndlessThreeDetailSliceABPatch_.AddEntriesFrom(ref input, _map_gemEndlessThreeDetailSliceABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
