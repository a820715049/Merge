// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/ComMergeBonusConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/ComMergeBonusConf.proto</summary>
  public static partial class ComMergeBonusConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/ComMergeBonusConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ComMergeBonusConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch9yYXdkYXRhL0NvbU1lcmdlQm9udXNDb25mLnByb3RvEgdyYXdkYXRhGhZy",
            "YXdkYXRhL0Z1bmNUeXBlLnByb3RvIqoBCg1Db21NZXJnZUJvbnVzEgoKAmlk",
            "GAEgASgFEhIKCmF1dG9QaWNrVXAYAiABKAUSEgoKYm9udXNDb3VudBgDIAEo",
            "BRIPCgdib251c0lkGAQgASgFEiMKCGZ1bmNUeXBlGAUgASgOMhEucmF3ZGF0",
            "YS5GdW5jVHlwZRIaChJpc0ludmVudG9yeUF1dG9Vc2UYByABKAgSEwoLaXNT",
            "Y2FsZUFuaW0YBiABKAgivAEKF0NvbU1lcmdlQm9udXNNYXBBQlZhbHVlElAK",
            "EENvbU1lcmdlQm9udXNNYXAYASADKAsyNi5yYXdkYXRhLkNvbU1lcmdlQm9u",
            "dXNNYXBBQlZhbHVlLkNvbU1lcmdlQm9udXNNYXBFbnRyeRpPChVDb21NZXJn",
            "ZUJvbnVzTWFwRW50cnkSCwoDa2V5GAEgASgFEiUKBXZhbHVlGAIgASgLMhYu",
            "cmF3ZGF0YS5Db21NZXJnZUJvbnVzOgI4ASKZBAoRQ29tTWVyZ2VCb251c0Nv",
            "bmYSSgoQQ29tTWVyZ2VCb251c01hcBgBIAMoCzIwLnJhd2RhdGEuQ29tTWVy",
            "Z2VCb251c0NvbmYuQ29tTWVyZ2VCb251c01hcEVudHJ5Ek4KEkNvbU1lcmdl",
            "Qm9udXNNYXBBQhgCIAMoCzIyLnJhd2RhdGEuQ29tTWVyZ2VCb251c0NvbmYu",
            "Q29tTWVyZ2VCb251c01hcEFCRW50cnkSWAoXQ29tTWVyZ2VCb251c01hcEFC",
            "UGF0Y2gYAyADKAsyNy5yYXdkYXRhLkNvbU1lcmdlQm9udXNDb25mLkNvbU1l",
            "cmdlQm9udXNNYXBBQlBhdGNoRW50cnkaTwoVQ29tTWVyZ2VCb251c01hcEVu",
            "dHJ5EgsKA2tleRgBIAEoBRIlCgV2YWx1ZRgCIAEoCzIWLnJhd2RhdGEuQ29t",
            "TWVyZ2VCb251czoCOAEaWwoXQ29tTWVyZ2VCb251c01hcEFCRW50cnkSCwoD",
            "a2V5GAEgASgJEi8KBXZhbHVlGAIgASgLMiAucmF3ZGF0YS5Db21NZXJnZUJv",
            "bnVzTWFwQUJWYWx1ZToCOAEaYAocQ29tTWVyZ2VCb251c01hcEFCUGF0Y2hF",
            "bnRyeRILCgNrZXkYASABKAkSLwoFdmFsdWUYAiABKAsyIC5yYXdkYXRhLkNv",
            "bU1lcmdlQm9udXNNYXBBQlZhbHVlOgI4AUI9Wi1naXRsYWIuZnVucGx1cy5p",
            "by9mYXQvY29uZi9nZW4vZ29sYW5nL3Jhd2RhdGGqAgtmYXQucmF3ZGF0YWIG",
            "cHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::fat.rawdata.FuncTypeReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.ComMergeBonus), global::fat.rawdata.ComMergeBonus.Parser, new[]{ "Id", "AutoPickUp", "BonusCount", "BonusId", "FuncType", "IsInventoryAutoUse", "IsScaleAnim" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.ComMergeBonusMapABValue), global::fat.rawdata.ComMergeBonusMapABValue.Parser, new[]{ "ComMergeBonusMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.ComMergeBonusConf), global::fat.rawdata.ComMergeBonusConf.Parser, new[]{ "ComMergeBonusMap", "ComMergeBonusMapAB", "ComMergeBonusMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="ComMergeBonus",table="ComMergeBonusMap",table_wrapper="ComMergeBonusConf",map="true",map_key_type="int32",data="ComMergeBonusConf")
  /// annotation@ab(table_ab="ComMergeBonusMapAB",table_ab_patch="ComMergeBonusMapABPatch",table_ab_value="ComMergeBonusMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@ComMergeBonus(id="id")
  /// </summary>
  public sealed partial class ComMergeBonus : pb::IMessage<ComMergeBonus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ComMergeBonus> _parser = new pb::MessageParser<ComMergeBonus>(() => new ComMergeBonus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ComMergeBonus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.ComMergeBonusConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComMergeBonus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComMergeBonus(ComMergeBonus other) : this() {
      id_ = other.id_;
      autoPickUp_ = other.autoPickUp_;
      bonusCount_ = other.bonusCount_;
      bonusId_ = other.bonusId_;
      funcType_ = other.funcType_;
      isInventoryAutoUse_ = other.isInventoryAutoUse_;
      isScaleAnim_ = other.isScaleAnim_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComMergeBonus Clone() {
      return new ComMergeBonus(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 合成物品id
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "autoPickUp" field.</summary>
    public const int AutoPickUpFieldNumber = 2;
    private int autoPickUp_;
    /// <summary>
    /// 是否自动领取配置
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AutoPickUp {
      get { return autoPickUp_; }
      set {
        autoPickUp_ = value;
      }
    }

    /// <summary>Field number for the "bonusCount" field.</summary>
    public const int BonusCountFieldNumber = 3;
    private int bonusCount_;
    /// <summary>
    /// 奖励数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BonusCount {
      get { return bonusCount_; }
      set {
        bonusCount_ = value;
      }
    }

    /// <summary>Field number for the "bonusId" field.</summary>
    public const int BonusIdFieldNumber = 4;
    private int bonusId_;
    /// <summary>
    /// 奖励id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BonusId {
      get { return bonusId_; }
      set {
        bonusId_ = value;
      }
    }

    /// <summary>Field number for the "funcType" field.</summary>
    public const int FuncTypeFieldNumber = 5;
    private global::fat.rawdata.FuncType funcType_ = global::fat.rawdata.FuncType.None;
    /// <summary>
    /// 功能类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::fat.rawdata.FuncType FuncType {
      get { return funcType_; }
      set {
        funcType_ = value;
      }
    }

    /// <summary>Field number for the "isInventoryAutoUse" field.</summary>
    public const int IsInventoryAutoUseFieldNumber = 7;
    private bool isInventoryAutoUse_;
    /// <summary>
    /// 是否在放入仓库时自动使用
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsInventoryAutoUse {
      get { return isInventoryAutoUse_; }
      set {
        isInventoryAutoUse_ = value;
      }
    }

    /// <summary>Field number for the "isScaleAnim" field.</summary>
    public const int IsScaleAnimFieldNumber = 6;
    private bool isScaleAnim_;
    /// <summary>
    /// 是否常态播放缩放动画
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsScaleAnim {
      get { return isScaleAnim_; }
      set {
        isScaleAnim_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ComMergeBonus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ComMergeBonus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (AutoPickUp != other.AutoPickUp) return false;
      if (BonusCount != other.BonusCount) return false;
      if (BonusId != other.BonusId) return false;
      if (FuncType != other.FuncType) return false;
      if (IsInventoryAutoUse != other.IsInventoryAutoUse) return false;
      if (IsScaleAnim != other.IsScaleAnim) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (AutoPickUp != 0) hash ^= AutoPickUp.GetHashCode();
      if (BonusCount != 0) hash ^= BonusCount.GetHashCode();
      if (BonusId != 0) hash ^= BonusId.GetHashCode();
      if (FuncType != global::fat.rawdata.FuncType.None) hash ^= FuncType.GetHashCode();
      if (IsInventoryAutoUse != false) hash ^= IsInventoryAutoUse.GetHashCode();
      if (IsScaleAnim != false) hash ^= IsScaleAnim.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (AutoPickUp != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(AutoPickUp);
      }
      if (BonusCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(BonusCount);
      }
      if (BonusId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(BonusId);
      }
      if (FuncType != global::fat.rawdata.FuncType.None) {
        output.WriteRawTag(40);
        output.WriteEnum((int) FuncType);
      }
      if (IsScaleAnim != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsScaleAnim);
      }
      if (IsInventoryAutoUse != false) {
        output.WriteRawTag(56);
        output.WriteBool(IsInventoryAutoUse);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (AutoPickUp != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(AutoPickUp);
      }
      if (BonusCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(BonusCount);
      }
      if (BonusId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(BonusId);
      }
      if (FuncType != global::fat.rawdata.FuncType.None) {
        output.WriteRawTag(40);
        output.WriteEnum((int) FuncType);
      }
      if (IsScaleAnim != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsScaleAnim);
      }
      if (IsInventoryAutoUse != false) {
        output.WriteRawTag(56);
        output.WriteBool(IsInventoryAutoUse);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (AutoPickUp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AutoPickUp);
      }
      if (BonusCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BonusCount);
      }
      if (BonusId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BonusId);
      }
      if (FuncType != global::fat.rawdata.FuncType.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) FuncType);
      }
      if (IsInventoryAutoUse != false) {
        size += 1 + 1;
      }
      if (IsScaleAnim != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ComMergeBonus other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.AutoPickUp != 0) {
        AutoPickUp = other.AutoPickUp;
      }
      if (other.BonusCount != 0) {
        BonusCount = other.BonusCount;
      }
      if (other.BonusId != 0) {
        BonusId = other.BonusId;
      }
      if (other.FuncType != global::fat.rawdata.FuncType.None) {
        FuncType = other.FuncType;
      }
      if (other.IsInventoryAutoUse != false) {
        IsInventoryAutoUse = other.IsInventoryAutoUse;
      }
      if (other.IsScaleAnim != false) {
        IsScaleAnim = other.IsScaleAnim;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            AutoPickUp = input.ReadInt32();
            break;
          }
          case 24: {
            BonusCount = input.ReadInt32();
            break;
          }
          case 32: {
            BonusId = input.ReadInt32();
            break;
          }
          case 40: {
            FuncType = (global::fat.rawdata.FuncType) input.ReadEnum();
            break;
          }
          case 48: {
            IsScaleAnim = input.ReadBool();
            break;
          }
          case 56: {
            IsInventoryAutoUse = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            AutoPickUp = input.ReadInt32();
            break;
          }
          case 24: {
            BonusCount = input.ReadInt32();
            break;
          }
          case 32: {
            BonusId = input.ReadInt32();
            break;
          }
          case 40: {
            FuncType = (global::fat.rawdata.FuncType) input.ReadEnum();
            break;
          }
          case 48: {
            IsScaleAnim = input.ReadBool();
            break;
          }
          case 56: {
            IsInventoryAutoUse = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ComMergeBonusMapABValue : pb::IMessage<ComMergeBonusMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ComMergeBonusMapABValue> _parser = new pb::MessageParser<ComMergeBonusMapABValue>(() => new ComMergeBonusMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ComMergeBonusMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.ComMergeBonusConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComMergeBonusMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComMergeBonusMapABValue(ComMergeBonusMapABValue other) : this() {
      comMergeBonusMap_ = other.comMergeBonusMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComMergeBonusMapABValue Clone() {
      return new ComMergeBonusMapABValue(this);
    }

    /// <summary>Field number for the "ComMergeBonusMap" field.</summary>
    public const int ComMergeBonusMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.ComMergeBonus>.Codec _map_comMergeBonusMap_codec
        = new pbc::MapField<int, global::fat.rawdata.ComMergeBonus>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ComMergeBonus.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.ComMergeBonus> comMergeBonusMap_ = new pbc::MapField<int, global::fat.rawdata.ComMergeBonus>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.ComMergeBonus> ComMergeBonusMap {
      get { return comMergeBonusMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ComMergeBonusMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ComMergeBonusMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!ComMergeBonusMap.Equals(other.ComMergeBonusMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ComMergeBonusMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      comMergeBonusMap_.WriteTo(output, _map_comMergeBonusMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      comMergeBonusMap_.WriteTo(ref output, _map_comMergeBonusMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += comMergeBonusMap_.CalculateSize(_map_comMergeBonusMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ComMergeBonusMapABValue other) {
      if (other == null) {
        return;
      }
      comMergeBonusMap_.Add(other.comMergeBonusMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            comMergeBonusMap_.AddEntriesFrom(input, _map_comMergeBonusMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            comMergeBonusMap_.AddEntriesFrom(ref input, _map_comMergeBonusMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ComMergeBonusConf : pb::IMessage<ComMergeBonusConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ComMergeBonusConf> _parser = new pb::MessageParser<ComMergeBonusConf>(() => new ComMergeBonusConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ComMergeBonusConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.ComMergeBonusConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComMergeBonusConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComMergeBonusConf(ComMergeBonusConf other) : this() {
      comMergeBonusMap_ = other.comMergeBonusMap_.Clone();
      comMergeBonusMapAB_ = other.comMergeBonusMapAB_.Clone();
      comMergeBonusMapABPatch_ = other.comMergeBonusMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComMergeBonusConf Clone() {
      return new ComMergeBonusConf(this);
    }

    /// <summary>Field number for the "ComMergeBonusMap" field.</summary>
    public const int ComMergeBonusMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.ComMergeBonus>.Codec _map_comMergeBonusMap_codec
        = new pbc::MapField<int, global::fat.rawdata.ComMergeBonus>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ComMergeBonus.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.ComMergeBonus> comMergeBonusMap_ = new pbc::MapField<int, global::fat.rawdata.ComMergeBonus>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.ComMergeBonus> ComMergeBonusMap {
      get { return comMergeBonusMap_; }
    }

    /// <summary>Field number for the "ComMergeBonusMapAB" field.</summary>
    public const int ComMergeBonusMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.ComMergeBonusMapABValue>.Codec _map_comMergeBonusMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.ComMergeBonusMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ComMergeBonusMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.ComMergeBonusMapABValue> comMergeBonusMapAB_ = new pbc::MapField<string, global::fat.rawdata.ComMergeBonusMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.ComMergeBonusMapABValue> ComMergeBonusMapAB {
      get { return comMergeBonusMapAB_; }
    }

    /// <summary>Field number for the "ComMergeBonusMapABPatch" field.</summary>
    public const int ComMergeBonusMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.ComMergeBonusMapABValue>.Codec _map_comMergeBonusMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.ComMergeBonusMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ComMergeBonusMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.ComMergeBonusMapABValue> comMergeBonusMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.ComMergeBonusMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.ComMergeBonusMapABValue> ComMergeBonusMapABPatch {
      get { return comMergeBonusMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ComMergeBonusConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ComMergeBonusConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!ComMergeBonusMap.Equals(other.ComMergeBonusMap)) return false;
      if (!ComMergeBonusMapAB.Equals(other.ComMergeBonusMapAB)) return false;
      if (!ComMergeBonusMapABPatch.Equals(other.ComMergeBonusMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ComMergeBonusMap.GetHashCode();
      hash ^= ComMergeBonusMapAB.GetHashCode();
      hash ^= ComMergeBonusMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      comMergeBonusMap_.WriteTo(output, _map_comMergeBonusMap_codec);
      comMergeBonusMapAB_.WriteTo(output, _map_comMergeBonusMapAB_codec);
      comMergeBonusMapABPatch_.WriteTo(output, _map_comMergeBonusMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      comMergeBonusMap_.WriteTo(ref output, _map_comMergeBonusMap_codec);
      comMergeBonusMapAB_.WriteTo(ref output, _map_comMergeBonusMapAB_codec);
      comMergeBonusMapABPatch_.WriteTo(ref output, _map_comMergeBonusMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += comMergeBonusMap_.CalculateSize(_map_comMergeBonusMap_codec);
      size += comMergeBonusMapAB_.CalculateSize(_map_comMergeBonusMapAB_codec);
      size += comMergeBonusMapABPatch_.CalculateSize(_map_comMergeBonusMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ComMergeBonusConf other) {
      if (other == null) {
        return;
      }
      comMergeBonusMap_.Add(other.comMergeBonusMap_);
      comMergeBonusMapAB_.Add(other.comMergeBonusMapAB_);
      comMergeBonusMapABPatch_.Add(other.comMergeBonusMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            comMergeBonusMap_.AddEntriesFrom(input, _map_comMergeBonusMap_codec);
            break;
          }
          case 18: {
            comMergeBonusMapAB_.AddEntriesFrom(input, _map_comMergeBonusMapAB_codec);
            break;
          }
          case 26: {
            comMergeBonusMapABPatch_.AddEntriesFrom(input, _map_comMergeBonusMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            comMergeBonusMap_.AddEntriesFrom(ref input, _map_comMergeBonusMap_codec);
            break;
          }
          case 18: {
            comMergeBonusMapAB_.AddEntriesFrom(ref input, _map_comMergeBonusMapAB_codec);
            break;
          }
          case 26: {
            comMergeBonusMapABPatch_.AddEntriesFrom(ref input, _map_comMergeBonusMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
