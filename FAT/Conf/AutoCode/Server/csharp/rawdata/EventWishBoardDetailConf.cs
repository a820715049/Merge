// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventWishBoardDetailConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventWishBoardDetailConf.proto</summary>
  public static partial class EventWishBoardDetailConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventWishBoardDetailConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventWishBoardDetailConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiZyYXdkYXRhL0V2ZW50V2lzaEJvYXJkRGV0YWlsQ29uZi5wcm90bxIHcmF3",
            "ZGF0YSI2ChRFdmVudFdpc2hCb2FyZERldGFpbBIKCgJpZBgBIAEoBRISCgpi",
            "b2FyZFJvd0lkGAIgAygFIuYBCh5FdmVudFdpc2hCb2FyZERldGFpbE1hcEFC",
            "VmFsdWUSZQoXRXZlbnRXaXNoQm9hcmREZXRhaWxNYXAYASADKAsyRC5yYXdk",
            "YXRhLkV2ZW50V2lzaEJvYXJkRGV0YWlsTWFwQUJWYWx1ZS5FdmVudFdpc2hC",
            "b2FyZERldGFpbE1hcEVudHJ5Gl0KHEV2ZW50V2lzaEJvYXJkRGV0YWlsTWFw",
            "RW50cnkSCwoDa2V5GAEgASgFEiwKBXZhbHVlGAIgASgLMh0ucmF3ZGF0YS5F",
            "dmVudFdpc2hCb2FyZERldGFpbDoCOAEiiQUKGEV2ZW50V2lzaEJvYXJkRGV0",
            "YWlsQ29uZhJfChdFdmVudFdpc2hCb2FyZERldGFpbE1hcBgBIAMoCzI+LnJh",
            "d2RhdGEuRXZlbnRXaXNoQm9hcmREZXRhaWxDb25mLkV2ZW50V2lzaEJvYXJk",
            "RGV0YWlsTWFwRW50cnkSYwoZRXZlbnRXaXNoQm9hcmREZXRhaWxNYXBBQhgC",
            "IAMoCzJALnJhd2RhdGEuRXZlbnRXaXNoQm9hcmREZXRhaWxDb25mLkV2ZW50",
            "V2lzaEJvYXJkRGV0YWlsTWFwQUJFbnRyeRJtCh5FdmVudFdpc2hCb2FyZERl",
            "dGFpbE1hcEFCUGF0Y2gYAyADKAsyRS5yYXdkYXRhLkV2ZW50V2lzaEJvYXJk",
            "RGV0YWlsQ29uZi5FdmVudFdpc2hCb2FyZERldGFpbE1hcEFCUGF0Y2hFbnRy",
            "eRpdChxFdmVudFdpc2hCb2FyZERldGFpbE1hcEVudHJ5EgsKA2tleRgBIAEo",
            "BRIsCgV2YWx1ZRgCIAEoCzIdLnJhd2RhdGEuRXZlbnRXaXNoQm9hcmREZXRh",
            "aWw6AjgBGmkKHkV2ZW50V2lzaEJvYXJkRGV0YWlsTWFwQUJFbnRyeRILCgNr",
            "ZXkYASABKAkSNgoFdmFsdWUYAiABKAsyJy5yYXdkYXRhLkV2ZW50V2lzaEJv",
            "YXJkRGV0YWlsTWFwQUJWYWx1ZToCOAEabgojRXZlbnRXaXNoQm9hcmREZXRh",
            "aWxNYXBBQlBhdGNoRW50cnkSCwoDa2V5GAEgASgJEjYKBXZhbHVlGAIgASgL",
            "MicucmF3ZGF0YS5FdmVudFdpc2hCb2FyZERldGFpbE1hcEFCVmFsdWU6AjgB",
            "Qj1aLWdpdGxhYi5mdW5wbHVzLmlvL2ZhdC9jb25mL2dlbi9nb2xhbmcvcmF3",
            "ZGF0YaoCC2ZhdC5yYXdkYXRhYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventWishBoardDetail), global::fat.rawdata.EventWishBoardDetail.Parser, new[]{ "Id", "BoardRowId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventWishBoardDetailMapABValue), global::fat.rawdata.EventWishBoardDetailMapABValue.Parser, new[]{ "EventWishBoardDetailMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventWishBoardDetailConf), global::fat.rawdata.EventWishBoardDetailConf.Parser, new[]{ "EventWishBoardDetailMap", "EventWishBoardDetailMapAB", "EventWishBoardDetailMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventWishBoardDetail",table="EventWishBoardDetailMap",table_wrapper="EventWishBoardDetailConf",map="true",map_key_type="int32",data="EventWishBoardDetailConf")
  /// annotation@ab(table_ab="EventWishBoardDetailMapAB",table_ab_patch="EventWishBoardDetailMapABPatch",table_ab_value="EventWishBoardDetailMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventWishBoardDetail(id="id")
  /// </summary>
  public sealed partial class EventWishBoardDetail : pb::IMessage<EventWishBoardDetail>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventWishBoardDetail> _parser = new pb::MessageParser<EventWishBoardDetail>(() => new EventWishBoardDetail());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventWishBoardDetail> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventWishBoardDetailConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishBoardDetail() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishBoardDetail(EventWishBoardDetail other) : this() {
      id_ = other.id_;
      boardRowId_ = other.boardRowId_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishBoardDetail Clone() {
      return new EventWishBoardDetail(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// boardid
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "boardRowId" field.</summary>
    public const int BoardRowIdFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_boardRowId_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> boardRowId_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 所有棋盘行id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> BoardRowId {
      get { return boardRowId_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventWishBoardDetail);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventWishBoardDetail other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!boardRowId_.Equals(other.boardRowId_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      hash ^= boardRowId_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      boardRowId_.WriteTo(output, _repeated_boardRowId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      boardRowId_.WriteTo(ref output, _repeated_boardRowId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      size += boardRowId_.CalculateSize(_repeated_boardRowId_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventWishBoardDetail other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      boardRowId_.Add(other.boardRowId_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            boardRowId_.AddEntriesFrom(input, _repeated_boardRowId_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            boardRowId_.AddEntriesFrom(ref input, _repeated_boardRowId_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventWishBoardDetailMapABValue : pb::IMessage<EventWishBoardDetailMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventWishBoardDetailMapABValue> _parser = new pb::MessageParser<EventWishBoardDetailMapABValue>(() => new EventWishBoardDetailMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventWishBoardDetailMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventWishBoardDetailConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishBoardDetailMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishBoardDetailMapABValue(EventWishBoardDetailMapABValue other) : this() {
      eventWishBoardDetailMap_ = other.eventWishBoardDetailMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishBoardDetailMapABValue Clone() {
      return new EventWishBoardDetailMapABValue(this);
    }

    /// <summary>Field number for the "EventWishBoardDetailMap" field.</summary>
    public const int EventWishBoardDetailMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventWishBoardDetail>.Codec _map_eventWishBoardDetailMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventWishBoardDetail>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventWishBoardDetail.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventWishBoardDetail> eventWishBoardDetailMap_ = new pbc::MapField<int, global::fat.rawdata.EventWishBoardDetail>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventWishBoardDetail> EventWishBoardDetailMap {
      get { return eventWishBoardDetailMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventWishBoardDetailMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventWishBoardDetailMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventWishBoardDetailMap.Equals(other.EventWishBoardDetailMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventWishBoardDetailMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventWishBoardDetailMap_.WriteTo(output, _map_eventWishBoardDetailMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventWishBoardDetailMap_.WriteTo(ref output, _map_eventWishBoardDetailMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventWishBoardDetailMap_.CalculateSize(_map_eventWishBoardDetailMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventWishBoardDetailMapABValue other) {
      if (other == null) {
        return;
      }
      eventWishBoardDetailMap_.Add(other.eventWishBoardDetailMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventWishBoardDetailMap_.AddEntriesFrom(input, _map_eventWishBoardDetailMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventWishBoardDetailMap_.AddEntriesFrom(ref input, _map_eventWishBoardDetailMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventWishBoardDetailConf : pb::IMessage<EventWishBoardDetailConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventWishBoardDetailConf> _parser = new pb::MessageParser<EventWishBoardDetailConf>(() => new EventWishBoardDetailConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventWishBoardDetailConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventWishBoardDetailConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishBoardDetailConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishBoardDetailConf(EventWishBoardDetailConf other) : this() {
      eventWishBoardDetailMap_ = other.eventWishBoardDetailMap_.Clone();
      eventWishBoardDetailMapAB_ = other.eventWishBoardDetailMapAB_.Clone();
      eventWishBoardDetailMapABPatch_ = other.eventWishBoardDetailMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishBoardDetailConf Clone() {
      return new EventWishBoardDetailConf(this);
    }

    /// <summary>Field number for the "EventWishBoardDetailMap" field.</summary>
    public const int EventWishBoardDetailMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventWishBoardDetail>.Codec _map_eventWishBoardDetailMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventWishBoardDetail>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventWishBoardDetail.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventWishBoardDetail> eventWishBoardDetailMap_ = new pbc::MapField<int, global::fat.rawdata.EventWishBoardDetail>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventWishBoardDetail> EventWishBoardDetailMap {
      get { return eventWishBoardDetailMap_; }
    }

    /// <summary>Field number for the "EventWishBoardDetailMapAB" field.</summary>
    public const int EventWishBoardDetailMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventWishBoardDetailMapABValue>.Codec _map_eventWishBoardDetailMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventWishBoardDetailMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventWishBoardDetailMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventWishBoardDetailMapABValue> eventWishBoardDetailMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventWishBoardDetailMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventWishBoardDetailMapABValue> EventWishBoardDetailMapAB {
      get { return eventWishBoardDetailMapAB_; }
    }

    /// <summary>Field number for the "EventWishBoardDetailMapABPatch" field.</summary>
    public const int EventWishBoardDetailMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventWishBoardDetailMapABValue>.Codec _map_eventWishBoardDetailMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventWishBoardDetailMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventWishBoardDetailMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventWishBoardDetailMapABValue> eventWishBoardDetailMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventWishBoardDetailMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventWishBoardDetailMapABValue> EventWishBoardDetailMapABPatch {
      get { return eventWishBoardDetailMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventWishBoardDetailConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventWishBoardDetailConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventWishBoardDetailMap.Equals(other.EventWishBoardDetailMap)) return false;
      if (!EventWishBoardDetailMapAB.Equals(other.EventWishBoardDetailMapAB)) return false;
      if (!EventWishBoardDetailMapABPatch.Equals(other.EventWishBoardDetailMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventWishBoardDetailMap.GetHashCode();
      hash ^= EventWishBoardDetailMapAB.GetHashCode();
      hash ^= EventWishBoardDetailMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventWishBoardDetailMap_.WriteTo(output, _map_eventWishBoardDetailMap_codec);
      eventWishBoardDetailMapAB_.WriteTo(output, _map_eventWishBoardDetailMapAB_codec);
      eventWishBoardDetailMapABPatch_.WriteTo(output, _map_eventWishBoardDetailMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventWishBoardDetailMap_.WriteTo(ref output, _map_eventWishBoardDetailMap_codec);
      eventWishBoardDetailMapAB_.WriteTo(ref output, _map_eventWishBoardDetailMapAB_codec);
      eventWishBoardDetailMapABPatch_.WriteTo(ref output, _map_eventWishBoardDetailMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventWishBoardDetailMap_.CalculateSize(_map_eventWishBoardDetailMap_codec);
      size += eventWishBoardDetailMapAB_.CalculateSize(_map_eventWishBoardDetailMapAB_codec);
      size += eventWishBoardDetailMapABPatch_.CalculateSize(_map_eventWishBoardDetailMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventWishBoardDetailConf other) {
      if (other == null) {
        return;
      }
      eventWishBoardDetailMap_.Add(other.eventWishBoardDetailMap_);
      eventWishBoardDetailMapAB_.Add(other.eventWishBoardDetailMapAB_);
      eventWishBoardDetailMapABPatch_.Add(other.eventWishBoardDetailMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventWishBoardDetailMap_.AddEntriesFrom(input, _map_eventWishBoardDetailMap_codec);
            break;
          }
          case 18: {
            eventWishBoardDetailMapAB_.AddEntriesFrom(input, _map_eventWishBoardDetailMapAB_codec);
            break;
          }
          case 26: {
            eventWishBoardDetailMapABPatch_.AddEntriesFrom(input, _map_eventWishBoardDetailMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventWishBoardDetailMap_.AddEntriesFrom(ref input, _map_eventWishBoardDetailMap_codec);
            break;
          }
          case 18: {
            eventWishBoardDetailMapAB_.AddEntriesFrom(ref input, _map_eventWishBoardDetailMapAB_codec);
            break;
          }
          case 26: {
            eventWishBoardDetailMapABPatch_.AddEntriesFrom(ref input, _map_eventWishBoardDetailMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
