// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventStepTaskConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventStepTaskConf.proto</summary>
  public static partial class EventStepTaskConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventStepTaskConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventStepTaskConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch9yYXdkYXRhL0V2ZW50U3RlcFRhc2tDb25mLnByb3RvEgdyYXdkYXRhIpYE",
            "Cg1FdmVudFN0ZXBUYXNrEgoKAmlkGAEgASgFEg4KBm51bWJlchgCIAEoBRIY",
            "ChBvdXRwdXRzRml4ZWRGb3VyGAsgASgFEhcKD291dHB1dHNGaXhlZE9uZRgD",
            "IAEoBRIXCg9vdXRwdXRzRml4ZWRUd28YBCABKAUSPAoLb3V0cHV0c0ZvdXIY",
            "DCADKAsyJy5yYXdkYXRhLkV2ZW50U3RlcFRhc2suT3V0cHV0c0ZvdXJFbnRy",
            "eRI6CgpvdXRwdXRzT25lGAUgAygLMiYucmF3ZGF0YS5FdmVudFN0ZXBUYXNr",
            "Lk91dHB1dHNPbmVFbnRyeRI6CgpvdXRwdXRzVHdvGAYgAygLMiYucmF3ZGF0",
            "YS5FdmVudFN0ZXBUYXNrLk91dHB1dHNUd29FbnRyeRIVCg1yZXF1aXJlSXRl",
            "bUlkGAcgAygFEg4KBnJld2FyZBgIIAMoCRIOCgZyb2xlSWQYCSABKAUSFgoO",
            "d2l0aG91dHB1dFRpbWUYCiADKAUaMgoQT3V0cHV0c0ZvdXJFbnRyeRILCgNr",
            "ZXkYASABKAUSDQoFdmFsdWUYAiABKAU6AjgBGjEKD091dHB1dHNPbmVFbnRy",
            "eRILCgNrZXkYASABKAUSDQoFdmFsdWUYAiABKAU6AjgBGjEKD091dHB1dHNU",
            "d29FbnRyeRILCgNrZXkYASABKAUSDQoFdmFsdWUYAiABKAU6AjgBIrwBChdF",
            "dmVudFN0ZXBUYXNrTWFwQUJWYWx1ZRJQChBFdmVudFN0ZXBUYXNrTWFwGAEg",
            "AygLMjYucmF3ZGF0YS5FdmVudFN0ZXBUYXNrTWFwQUJWYWx1ZS5FdmVudFN0",
            "ZXBUYXNrTWFwRW50cnkaTwoVRXZlbnRTdGVwVGFza01hcEVudHJ5EgsKA2tl",
            "eRgBIAEoBRIlCgV2YWx1ZRgCIAEoCzIWLnJhd2RhdGEuRXZlbnRTdGVwVGFz",
            "azoCOAEimQQKEUV2ZW50U3RlcFRhc2tDb25mEkoKEEV2ZW50U3RlcFRhc2tN",
            "YXAYASADKAsyMC5yYXdkYXRhLkV2ZW50U3RlcFRhc2tDb25mLkV2ZW50U3Rl",
            "cFRhc2tNYXBFbnRyeRJOChJFdmVudFN0ZXBUYXNrTWFwQUIYAiADKAsyMi5y",
            "YXdkYXRhLkV2ZW50U3RlcFRhc2tDb25mLkV2ZW50U3RlcFRhc2tNYXBBQkVu",
            "dHJ5ElgKF0V2ZW50U3RlcFRhc2tNYXBBQlBhdGNoGAMgAygLMjcucmF3ZGF0",
            "YS5FdmVudFN0ZXBUYXNrQ29uZi5FdmVudFN0ZXBUYXNrTWFwQUJQYXRjaEVu",
            "dHJ5Gk8KFUV2ZW50U3RlcFRhc2tNYXBFbnRyeRILCgNrZXkYASABKAUSJQoF",
            "dmFsdWUYAiABKAsyFi5yYXdkYXRhLkV2ZW50U3RlcFRhc2s6AjgBGlsKF0V2",
            "ZW50U3RlcFRhc2tNYXBBQkVudHJ5EgsKA2tleRgBIAEoCRIvCgV2YWx1ZRgC",
            "IAEoCzIgLnJhd2RhdGEuRXZlbnRTdGVwVGFza01hcEFCVmFsdWU6AjgBGmAK",
            "HEV2ZW50U3RlcFRhc2tNYXBBQlBhdGNoRW50cnkSCwoDa2V5GAEgASgJEi8K",
            "BXZhbHVlGAIgASgLMiAucmF3ZGF0YS5FdmVudFN0ZXBUYXNrTWFwQUJWYWx1",
            "ZToCOAFCPVotZ2l0bGFiLmZ1bnBsdXMuaW8vZmF0L2NvbmYvZ2VuL2dvbGFu",
            "Zy9yYXdkYXRhqgILZmF0LnJhd2RhdGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventStepTask), global::fat.rawdata.EventStepTask.Parser, new[]{ "Id", "Number", "OutputsFixedFour", "OutputsFixedOne", "OutputsFixedTwo", "OutputsFour", "OutputsOne", "OutputsTwo", "RequireItemId", "Reward", "RoleId", "WithoutputTime" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventStepTaskMapABValue), global::fat.rawdata.EventStepTaskMapABValue.Parser, new[]{ "EventStepTaskMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventStepTaskConf), global::fat.rawdata.EventStepTaskConf.Parser, new[]{ "EventStepTaskMap", "EventStepTaskMapAB", "EventStepTaskMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventStepTask",table="EventStepTaskMap",table_wrapper="EventStepTaskConf",map="true",map_key_type="int32",data="EventStepTaskConf")
  /// annotation@ab(table_ab="EventStepTaskMapAB",table_ab_patch="EventStepTaskMapABPatch",table_ab_value="EventStepTaskMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventStepTask(id="id")
  /// </summary>
  public sealed partial class EventStepTask : pb::IMessage<EventStepTask>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventStepTask> _parser = new pb::MessageParser<EventStepTask>(() => new EventStepTask());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventStepTask> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventStepTaskConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventStepTask() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventStepTask(EventStepTask other) : this() {
      id_ = other.id_;
      number_ = other.number_;
      outputsFixedFour_ = other.outputsFixedFour_;
      outputsFixedOne_ = other.outputsFixedOne_;
      outputsFixedTwo_ = other.outputsFixedTwo_;
      outputsFour_ = other.outputsFour_.Clone();
      outputsOne_ = other.outputsOne_.Clone();
      outputsTwo_ = other.outputsTwo_.Clone();
      requireItemId_ = other.requireItemId_.Clone();
      reward_ = other.reward_.Clone();
      roleId_ = other.roleId_;
      withoutputTime_ = other.withoutputTime_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventStepTask Clone() {
      return new EventStepTask(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 任务ID
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "number" field.</summary>
    public const int NumberFieldNumber = 2;
    private int number_;
    /// <summary>
    /// 任务序号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Number {
      get { return number_; }
      set {
        number_ = value;
      }
    }

    /// <summary>Field number for the "outputsFixedFour" field.</summary>
    public const int OutputsFixedFourFieldNumber = 11;
    private int outputsFixedFour_;
    /// <summary>
    /// 耗体4保底产出
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int OutputsFixedFour {
      get { return outputsFixedFour_; }
      set {
        outputsFixedFour_ = value;
      }
    }

    /// <summary>Field number for the "outputsFixedOne" field.</summary>
    public const int OutputsFixedOneFieldNumber = 3;
    private int outputsFixedOne_;
    /// <summary>
    /// 耗体1保底产出
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int OutputsFixedOne {
      get { return outputsFixedOne_; }
      set {
        outputsFixedOne_ = value;
      }
    }

    /// <summary>Field number for the "outputsFixedTwo" field.</summary>
    public const int OutputsFixedTwoFieldNumber = 4;
    private int outputsFixedTwo_;
    /// <summary>
    /// 耗体2保底产出
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int OutputsFixedTwo {
      get { return outputsFixedTwo_; }
      set {
        outputsFixedTwo_ = value;
      }
    }

    /// <summary>Field number for the "outputsFour" field.</summary>
    public const int OutputsFourFieldNumber = 12;
    private static readonly pbc::MapField<int, int>.Codec _map_outputsFour_codec
        = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForInt32(16, 0), 98);
    private readonly pbc::MapField<int, int> outputsFour_ = new pbc::MapField<int, int>();
    /// <summary>
    /// 耗体4产出棋子
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, int> OutputsFour {
      get { return outputsFour_; }
    }

    /// <summary>Field number for the "outputsOne" field.</summary>
    public const int OutputsOneFieldNumber = 5;
    private static readonly pbc::MapField<int, int>.Codec _map_outputsOne_codec
        = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForInt32(16, 0), 42);
    private readonly pbc::MapField<int, int> outputsOne_ = new pbc::MapField<int, int>();
    /// <summary>
    /// 耗体1产出棋子
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, int> OutputsOne {
      get { return outputsOne_; }
    }

    /// <summary>Field number for the "outputsTwo" field.</summary>
    public const int OutputsTwoFieldNumber = 6;
    private static readonly pbc::MapField<int, int>.Codec _map_outputsTwo_codec
        = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForInt32(16, 0), 50);
    private readonly pbc::MapField<int, int> outputsTwo_ = new pbc::MapField<int, int>();
    /// <summary>
    /// 耗体2产出棋子
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, int> OutputsTwo {
      get { return outputsTwo_; }
    }

    /// <summary>Field number for the "requireItemId" field.</summary>
    public const int RequireItemIdFieldNumber = 7;
    private static readonly pb::FieldCodec<int> _repeated_requireItemId_codec
        = pb::FieldCodec.ForInt32(58);
    private readonly pbc::RepeatedField<int> requireItemId_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 任务内容
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> RequireItemId {
      get { return requireItemId_; }
    }

    /// <summary>Field number for the "reward" field.</summary>
    public const int RewardFieldNumber = 8;
    private static readonly pb::FieldCodec<string> _repeated_reward_codec
        = pb::FieldCodec.ForString(66);
    private readonly pbc::RepeatedField<string> reward_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 任务奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Reward {
      get { return reward_; }
    }

    /// <summary>Field number for the "roleId" field.</summary>
    public const int RoleIdFieldNumber = 9;
    private int roleId_;
    /// <summary>
    /// 订单角色形象
    /// （0 = 随机角色）
    /// （NpcConfig.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RoleId {
      get { return roleId_; }
      set {
        roleId_ = value;
      }
    }

    /// <summary>Field number for the "withoutputTime" field.</summary>
    public const int WithoutputTimeFieldNumber = 10;
    private static readonly pb::FieldCodec<int> _repeated_withoutputTime_codec
        = pb::FieldCodec.ForInt32(82);
    private readonly pbc::RepeatedField<int> withoutputTime_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 连续不产出次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> WithoutputTime {
      get { return withoutputTime_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventStepTask);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventStepTask other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Number != other.Number) return false;
      if (OutputsFixedFour != other.OutputsFixedFour) return false;
      if (OutputsFixedOne != other.OutputsFixedOne) return false;
      if (OutputsFixedTwo != other.OutputsFixedTwo) return false;
      if (!OutputsFour.Equals(other.OutputsFour)) return false;
      if (!OutputsOne.Equals(other.OutputsOne)) return false;
      if (!OutputsTwo.Equals(other.OutputsTwo)) return false;
      if(!requireItemId_.Equals(other.requireItemId_)) return false;
      if(!reward_.Equals(other.reward_)) return false;
      if (RoleId != other.RoleId) return false;
      if(!withoutputTime_.Equals(other.withoutputTime_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Number != 0) hash ^= Number.GetHashCode();
      if (OutputsFixedFour != 0) hash ^= OutputsFixedFour.GetHashCode();
      if (OutputsFixedOne != 0) hash ^= OutputsFixedOne.GetHashCode();
      if (OutputsFixedTwo != 0) hash ^= OutputsFixedTwo.GetHashCode();
      hash ^= OutputsFour.GetHashCode();
      hash ^= OutputsOne.GetHashCode();
      hash ^= OutputsTwo.GetHashCode();
      hash ^= requireItemId_.GetHashCode();
      hash ^= reward_.GetHashCode();
      if (RoleId != 0) hash ^= RoleId.GetHashCode();
      hash ^= withoutputTime_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Number != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Number);
      }
      if (OutputsFixedOne != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(OutputsFixedOne);
      }
      if (OutputsFixedTwo != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(OutputsFixedTwo);
      }
      outputsOne_.WriteTo(output, _map_outputsOne_codec);
      outputsTwo_.WriteTo(output, _map_outputsTwo_codec);
      requireItemId_.WriteTo(output, _repeated_requireItemId_codec);
      reward_.WriteTo(output, _repeated_reward_codec);
      if (RoleId != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(RoleId);
      }
      withoutputTime_.WriteTo(output, _repeated_withoutputTime_codec);
      if (OutputsFixedFour != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(OutputsFixedFour);
      }
      outputsFour_.WriteTo(output, _map_outputsFour_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Number != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Number);
      }
      if (OutputsFixedOne != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(OutputsFixedOne);
      }
      if (OutputsFixedTwo != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(OutputsFixedTwo);
      }
      outputsOne_.WriteTo(ref output, _map_outputsOne_codec);
      outputsTwo_.WriteTo(ref output, _map_outputsTwo_codec);
      requireItemId_.WriteTo(ref output, _repeated_requireItemId_codec);
      reward_.WriteTo(ref output, _repeated_reward_codec);
      if (RoleId != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(RoleId);
      }
      withoutputTime_.WriteTo(ref output, _repeated_withoutputTime_codec);
      if (OutputsFixedFour != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(OutputsFixedFour);
      }
      outputsFour_.WriteTo(ref output, _map_outputsFour_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Number != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Number);
      }
      if (OutputsFixedFour != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OutputsFixedFour);
      }
      if (OutputsFixedOne != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OutputsFixedOne);
      }
      if (OutputsFixedTwo != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OutputsFixedTwo);
      }
      size += outputsFour_.CalculateSize(_map_outputsFour_codec);
      size += outputsOne_.CalculateSize(_map_outputsOne_codec);
      size += outputsTwo_.CalculateSize(_map_outputsTwo_codec);
      size += requireItemId_.CalculateSize(_repeated_requireItemId_codec);
      size += reward_.CalculateSize(_repeated_reward_codec);
      if (RoleId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoleId);
      }
      size += withoutputTime_.CalculateSize(_repeated_withoutputTime_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventStepTask other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Number != 0) {
        Number = other.Number;
      }
      if (other.OutputsFixedFour != 0) {
        OutputsFixedFour = other.OutputsFixedFour;
      }
      if (other.OutputsFixedOne != 0) {
        OutputsFixedOne = other.OutputsFixedOne;
      }
      if (other.OutputsFixedTwo != 0) {
        OutputsFixedTwo = other.OutputsFixedTwo;
      }
      outputsFour_.Add(other.outputsFour_);
      outputsOne_.Add(other.outputsOne_);
      outputsTwo_.Add(other.outputsTwo_);
      requireItemId_.Add(other.requireItemId_);
      reward_.Add(other.reward_);
      if (other.RoleId != 0) {
        RoleId = other.RoleId;
      }
      withoutputTime_.Add(other.withoutputTime_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Number = input.ReadInt32();
            break;
          }
          case 24: {
            OutputsFixedOne = input.ReadInt32();
            break;
          }
          case 32: {
            OutputsFixedTwo = input.ReadInt32();
            break;
          }
          case 42: {
            outputsOne_.AddEntriesFrom(input, _map_outputsOne_codec);
            break;
          }
          case 50: {
            outputsTwo_.AddEntriesFrom(input, _map_outputsTwo_codec);
            break;
          }
          case 58:
          case 56: {
            requireItemId_.AddEntriesFrom(input, _repeated_requireItemId_codec);
            break;
          }
          case 66: {
            reward_.AddEntriesFrom(input, _repeated_reward_codec);
            break;
          }
          case 72: {
            RoleId = input.ReadInt32();
            break;
          }
          case 82:
          case 80: {
            withoutputTime_.AddEntriesFrom(input, _repeated_withoutputTime_codec);
            break;
          }
          case 88: {
            OutputsFixedFour = input.ReadInt32();
            break;
          }
          case 98: {
            outputsFour_.AddEntriesFrom(input, _map_outputsFour_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Number = input.ReadInt32();
            break;
          }
          case 24: {
            OutputsFixedOne = input.ReadInt32();
            break;
          }
          case 32: {
            OutputsFixedTwo = input.ReadInt32();
            break;
          }
          case 42: {
            outputsOne_.AddEntriesFrom(ref input, _map_outputsOne_codec);
            break;
          }
          case 50: {
            outputsTwo_.AddEntriesFrom(ref input, _map_outputsTwo_codec);
            break;
          }
          case 58:
          case 56: {
            requireItemId_.AddEntriesFrom(ref input, _repeated_requireItemId_codec);
            break;
          }
          case 66: {
            reward_.AddEntriesFrom(ref input, _repeated_reward_codec);
            break;
          }
          case 72: {
            RoleId = input.ReadInt32();
            break;
          }
          case 82:
          case 80: {
            withoutputTime_.AddEntriesFrom(ref input, _repeated_withoutputTime_codec);
            break;
          }
          case 88: {
            OutputsFixedFour = input.ReadInt32();
            break;
          }
          case 98: {
            outputsFour_.AddEntriesFrom(ref input, _map_outputsFour_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventStepTaskMapABValue : pb::IMessage<EventStepTaskMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventStepTaskMapABValue> _parser = new pb::MessageParser<EventStepTaskMapABValue>(() => new EventStepTaskMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventStepTaskMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventStepTaskConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventStepTaskMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventStepTaskMapABValue(EventStepTaskMapABValue other) : this() {
      eventStepTaskMap_ = other.eventStepTaskMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventStepTaskMapABValue Clone() {
      return new EventStepTaskMapABValue(this);
    }

    /// <summary>Field number for the "EventStepTaskMap" field.</summary>
    public const int EventStepTaskMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventStepTask>.Codec _map_eventStepTaskMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventStepTask>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventStepTask.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventStepTask> eventStepTaskMap_ = new pbc::MapField<int, global::fat.rawdata.EventStepTask>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventStepTask> EventStepTaskMap {
      get { return eventStepTaskMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventStepTaskMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventStepTaskMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventStepTaskMap.Equals(other.EventStepTaskMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventStepTaskMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventStepTaskMap_.WriteTo(output, _map_eventStepTaskMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventStepTaskMap_.WriteTo(ref output, _map_eventStepTaskMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventStepTaskMap_.CalculateSize(_map_eventStepTaskMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventStepTaskMapABValue other) {
      if (other == null) {
        return;
      }
      eventStepTaskMap_.Add(other.eventStepTaskMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventStepTaskMap_.AddEntriesFrom(input, _map_eventStepTaskMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventStepTaskMap_.AddEntriesFrom(ref input, _map_eventStepTaskMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventStepTaskConf : pb::IMessage<EventStepTaskConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventStepTaskConf> _parser = new pb::MessageParser<EventStepTaskConf>(() => new EventStepTaskConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventStepTaskConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventStepTaskConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventStepTaskConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventStepTaskConf(EventStepTaskConf other) : this() {
      eventStepTaskMap_ = other.eventStepTaskMap_.Clone();
      eventStepTaskMapAB_ = other.eventStepTaskMapAB_.Clone();
      eventStepTaskMapABPatch_ = other.eventStepTaskMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventStepTaskConf Clone() {
      return new EventStepTaskConf(this);
    }

    /// <summary>Field number for the "EventStepTaskMap" field.</summary>
    public const int EventStepTaskMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventStepTask>.Codec _map_eventStepTaskMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventStepTask>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventStepTask.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventStepTask> eventStepTaskMap_ = new pbc::MapField<int, global::fat.rawdata.EventStepTask>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventStepTask> EventStepTaskMap {
      get { return eventStepTaskMap_; }
    }

    /// <summary>Field number for the "EventStepTaskMapAB" field.</summary>
    public const int EventStepTaskMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventStepTaskMapABValue>.Codec _map_eventStepTaskMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventStepTaskMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventStepTaskMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventStepTaskMapABValue> eventStepTaskMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventStepTaskMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventStepTaskMapABValue> EventStepTaskMapAB {
      get { return eventStepTaskMapAB_; }
    }

    /// <summary>Field number for the "EventStepTaskMapABPatch" field.</summary>
    public const int EventStepTaskMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventStepTaskMapABValue>.Codec _map_eventStepTaskMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventStepTaskMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventStepTaskMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventStepTaskMapABValue> eventStepTaskMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventStepTaskMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventStepTaskMapABValue> EventStepTaskMapABPatch {
      get { return eventStepTaskMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventStepTaskConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventStepTaskConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventStepTaskMap.Equals(other.EventStepTaskMap)) return false;
      if (!EventStepTaskMapAB.Equals(other.EventStepTaskMapAB)) return false;
      if (!EventStepTaskMapABPatch.Equals(other.EventStepTaskMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventStepTaskMap.GetHashCode();
      hash ^= EventStepTaskMapAB.GetHashCode();
      hash ^= EventStepTaskMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventStepTaskMap_.WriteTo(output, _map_eventStepTaskMap_codec);
      eventStepTaskMapAB_.WriteTo(output, _map_eventStepTaskMapAB_codec);
      eventStepTaskMapABPatch_.WriteTo(output, _map_eventStepTaskMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventStepTaskMap_.WriteTo(ref output, _map_eventStepTaskMap_codec);
      eventStepTaskMapAB_.WriteTo(ref output, _map_eventStepTaskMapAB_codec);
      eventStepTaskMapABPatch_.WriteTo(ref output, _map_eventStepTaskMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventStepTaskMap_.CalculateSize(_map_eventStepTaskMap_codec);
      size += eventStepTaskMapAB_.CalculateSize(_map_eventStepTaskMapAB_codec);
      size += eventStepTaskMapABPatch_.CalculateSize(_map_eventStepTaskMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventStepTaskConf other) {
      if (other == null) {
        return;
      }
      eventStepTaskMap_.Add(other.eventStepTaskMap_);
      eventStepTaskMapAB_.Add(other.eventStepTaskMapAB_);
      eventStepTaskMapABPatch_.Add(other.eventStepTaskMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventStepTaskMap_.AddEntriesFrom(input, _map_eventStepTaskMap_codec);
            break;
          }
          case 18: {
            eventStepTaskMapAB_.AddEntriesFrom(input, _map_eventStepTaskMapAB_codec);
            break;
          }
          case 26: {
            eventStepTaskMapABPatch_.AddEntriesFrom(input, _map_eventStepTaskMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventStepTaskMap_.AddEntriesFrom(ref input, _map_eventStepTaskMap_codec);
            break;
          }
          case 18: {
            eventStepTaskMapAB_.AddEntriesFrom(ref input, _map_eventStepTaskMapAB_codec);
            break;
          }
          case 26: {
            eventStepTaskMapABPatch_.AddEntriesFrom(ref input, _map_eventStepTaskMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
