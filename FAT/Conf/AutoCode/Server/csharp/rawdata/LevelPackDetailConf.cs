// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/LevelPackDetailConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/LevelPackDetailConf.proto</summary>
  public static partial class LevelPackDetailConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/LevelPackDetailConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LevelPackDetailConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiFyYXdkYXRhL0xldmVsUGFja0RldGFpbENvbmYucHJvdG8SB3Jhd2RhdGEi",
            "TwoPTGV2ZWxQYWNrRGV0YWlsEgoKAmlkGAEgASgFEg0KBWNvdW50GAIgASgF",
            "Eg0KBWxhYmVsGAMgASgFEhIKCnBhY2tEZXRhaWwYBSADKAUiyAEKGUxldmVs",
            "UGFja0RldGFpbE1hcEFCVmFsdWUSVgoSTGV2ZWxQYWNrRGV0YWlsTWFwGAEg",
            "AygLMjoucmF3ZGF0YS5MZXZlbFBhY2tEZXRhaWxNYXBBQlZhbHVlLkxldmVs",
            "UGFja0RldGFpbE1hcEVudHJ5GlMKF0xldmVsUGFja0RldGFpbE1hcEVudHJ5",
            "EgsKA2tleRgBIAEoBRInCgV2YWx1ZRgCIAEoCzIYLnJhd2RhdGEuTGV2ZWxQ",
            "YWNrRGV0YWlsOgI4ASK5BAoTTGV2ZWxQYWNrRGV0YWlsQ29uZhJQChJMZXZl",
            "bFBhY2tEZXRhaWxNYXAYASADKAsyNC5yYXdkYXRhLkxldmVsUGFja0RldGFp",
            "bENvbmYuTGV2ZWxQYWNrRGV0YWlsTWFwRW50cnkSVAoUTGV2ZWxQYWNrRGV0",
            "YWlsTWFwQUIYAiADKAsyNi5yYXdkYXRhLkxldmVsUGFja0RldGFpbENvbmYu",
            "TGV2ZWxQYWNrRGV0YWlsTWFwQUJFbnRyeRJeChlMZXZlbFBhY2tEZXRhaWxN",
            "YXBBQlBhdGNoGAMgAygLMjsucmF3ZGF0YS5MZXZlbFBhY2tEZXRhaWxDb25m",
            "LkxldmVsUGFja0RldGFpbE1hcEFCUGF0Y2hFbnRyeRpTChdMZXZlbFBhY2tE",
            "ZXRhaWxNYXBFbnRyeRILCgNrZXkYASABKAUSJwoFdmFsdWUYAiABKAsyGC5y",
            "YXdkYXRhLkxldmVsUGFja0RldGFpbDoCOAEaXwoZTGV2ZWxQYWNrRGV0YWls",
            "TWFwQUJFbnRyeRILCgNrZXkYASABKAkSMQoFdmFsdWUYAiABKAsyIi5yYXdk",
            "YXRhLkxldmVsUGFja0RldGFpbE1hcEFCVmFsdWU6AjgBGmQKHkxldmVsUGFj",
            "a0RldGFpbE1hcEFCUGF0Y2hFbnRyeRILCgNrZXkYASABKAkSMQoFdmFsdWUY",
            "AiABKAsyIi5yYXdkYXRhLkxldmVsUGFja0RldGFpbE1hcEFCVmFsdWU6AjgB",
            "Qj1aLWdpdGxhYi5mdW5wbHVzLmlvL2ZhdC9jb25mL2dlbi9nb2xhbmcvcmF3",
            "ZGF0YaoCC2ZhdC5yYXdkYXRhYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.LevelPackDetail), global::fat.rawdata.LevelPackDetail.Parser, new[]{ "Id", "Count", "Label", "PackDetail" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.LevelPackDetailMapABValue), global::fat.rawdata.LevelPackDetailMapABValue.Parser, new[]{ "LevelPackDetailMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.LevelPackDetailConf), global::fat.rawdata.LevelPackDetailConf.Parser, new[]{ "LevelPackDetailMap", "LevelPackDetailMapAB", "LevelPackDetailMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="LevelPackDetail",table="LevelPackDetailMap",table_wrapper="LevelPackDetailConf",map="true",map_key_type="int32",data="LevelPackDetailConf")
  /// annotation@ab(table_ab="LevelPackDetailMapAB",table_ab_patch="LevelPackDetailMapABPatch",table_ab_value="LevelPackDetailMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@LevelPackDetail(id="id")
  /// </summary>
  public sealed partial class LevelPackDetail : pb::IMessage<LevelPackDetail>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LevelPackDetail> _parser = new pb::MessageParser<LevelPackDetail>(() => new LevelPackDetail());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LevelPackDetail> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.LevelPackDetailConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LevelPackDetail() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LevelPackDetail(LevelPackDetail other) : this() {
      id_ = other.id_;
      count_ = other.count_;
      label_ = other.label_;
      packDetail_ = other.packDetail_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LevelPackDetail Clone() {
      return new LevelPackDetail(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 活动 id
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 2;
    private int count_;
    /// <summary>
    /// 购买次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    /// <summary>Field number for the "label" field.</summary>
    public const int LabelFieldNumber = 3;
    private int label_;
    /// <summary>
    /// 折扣
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Label {
      get { return label_; }
      set {
        label_ = value;
      }
    }

    /// <summary>Field number for the "packDetail" field.</summary>
    public const int PackDetailFieldNumber = 5;
    private static readonly pb::FieldCodec<int> _repeated_packDetail_codec
        = pb::FieldCodec.ForInt32(42);
    private readonly pbc::RepeatedField<int> packDetail_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 内购商品ID组
    /// （IAPPack.id）
    /// (IAPProduct.id)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> PackDetail {
      get { return packDetail_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LevelPackDetail);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LevelPackDetail other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Count != other.Count) return false;
      if (Label != other.Label) return false;
      if(!packDetail_.Equals(other.packDetail_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Count != 0) hash ^= Count.GetHashCode();
      if (Label != 0) hash ^= Label.GetHashCode();
      hash ^= packDetail_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Count != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Count);
      }
      if (Label != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Label);
      }
      packDetail_.WriteTo(output, _repeated_packDetail_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Count != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Count);
      }
      if (Label != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Label);
      }
      packDetail_.WriteTo(ref output, _repeated_packDetail_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      if (Label != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Label);
      }
      size += packDetail_.CalculateSize(_repeated_packDetail_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LevelPackDetail other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      if (other.Label != 0) {
        Label = other.Label;
      }
      packDetail_.Add(other.packDetail_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Count = input.ReadInt32();
            break;
          }
          case 24: {
            Label = input.ReadInt32();
            break;
          }
          case 42:
          case 40: {
            packDetail_.AddEntriesFrom(input, _repeated_packDetail_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Count = input.ReadInt32();
            break;
          }
          case 24: {
            Label = input.ReadInt32();
            break;
          }
          case 42:
          case 40: {
            packDetail_.AddEntriesFrom(ref input, _repeated_packDetail_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LevelPackDetailMapABValue : pb::IMessage<LevelPackDetailMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LevelPackDetailMapABValue> _parser = new pb::MessageParser<LevelPackDetailMapABValue>(() => new LevelPackDetailMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LevelPackDetailMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.LevelPackDetailConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LevelPackDetailMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LevelPackDetailMapABValue(LevelPackDetailMapABValue other) : this() {
      levelPackDetailMap_ = other.levelPackDetailMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LevelPackDetailMapABValue Clone() {
      return new LevelPackDetailMapABValue(this);
    }

    /// <summary>Field number for the "LevelPackDetailMap" field.</summary>
    public const int LevelPackDetailMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.LevelPackDetail>.Codec _map_levelPackDetailMap_codec
        = new pbc::MapField<int, global::fat.rawdata.LevelPackDetail>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.LevelPackDetail.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.LevelPackDetail> levelPackDetailMap_ = new pbc::MapField<int, global::fat.rawdata.LevelPackDetail>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.LevelPackDetail> LevelPackDetailMap {
      get { return levelPackDetailMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LevelPackDetailMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LevelPackDetailMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!LevelPackDetailMap.Equals(other.LevelPackDetailMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= LevelPackDetailMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      levelPackDetailMap_.WriteTo(output, _map_levelPackDetailMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      levelPackDetailMap_.WriteTo(ref output, _map_levelPackDetailMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += levelPackDetailMap_.CalculateSize(_map_levelPackDetailMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LevelPackDetailMapABValue other) {
      if (other == null) {
        return;
      }
      levelPackDetailMap_.Add(other.levelPackDetailMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            levelPackDetailMap_.AddEntriesFrom(input, _map_levelPackDetailMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            levelPackDetailMap_.AddEntriesFrom(ref input, _map_levelPackDetailMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LevelPackDetailConf : pb::IMessage<LevelPackDetailConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LevelPackDetailConf> _parser = new pb::MessageParser<LevelPackDetailConf>(() => new LevelPackDetailConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LevelPackDetailConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.LevelPackDetailConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LevelPackDetailConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LevelPackDetailConf(LevelPackDetailConf other) : this() {
      levelPackDetailMap_ = other.levelPackDetailMap_.Clone();
      levelPackDetailMapAB_ = other.levelPackDetailMapAB_.Clone();
      levelPackDetailMapABPatch_ = other.levelPackDetailMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LevelPackDetailConf Clone() {
      return new LevelPackDetailConf(this);
    }

    /// <summary>Field number for the "LevelPackDetailMap" field.</summary>
    public const int LevelPackDetailMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.LevelPackDetail>.Codec _map_levelPackDetailMap_codec
        = new pbc::MapField<int, global::fat.rawdata.LevelPackDetail>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.LevelPackDetail.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.LevelPackDetail> levelPackDetailMap_ = new pbc::MapField<int, global::fat.rawdata.LevelPackDetail>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.LevelPackDetail> LevelPackDetailMap {
      get { return levelPackDetailMap_; }
    }

    /// <summary>Field number for the "LevelPackDetailMapAB" field.</summary>
    public const int LevelPackDetailMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.LevelPackDetailMapABValue>.Codec _map_levelPackDetailMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.LevelPackDetailMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.LevelPackDetailMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.LevelPackDetailMapABValue> levelPackDetailMapAB_ = new pbc::MapField<string, global::fat.rawdata.LevelPackDetailMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.LevelPackDetailMapABValue> LevelPackDetailMapAB {
      get { return levelPackDetailMapAB_; }
    }

    /// <summary>Field number for the "LevelPackDetailMapABPatch" field.</summary>
    public const int LevelPackDetailMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.LevelPackDetailMapABValue>.Codec _map_levelPackDetailMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.LevelPackDetailMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.LevelPackDetailMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.LevelPackDetailMapABValue> levelPackDetailMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.LevelPackDetailMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.LevelPackDetailMapABValue> LevelPackDetailMapABPatch {
      get { return levelPackDetailMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LevelPackDetailConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LevelPackDetailConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!LevelPackDetailMap.Equals(other.LevelPackDetailMap)) return false;
      if (!LevelPackDetailMapAB.Equals(other.LevelPackDetailMapAB)) return false;
      if (!LevelPackDetailMapABPatch.Equals(other.LevelPackDetailMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= LevelPackDetailMap.GetHashCode();
      hash ^= LevelPackDetailMapAB.GetHashCode();
      hash ^= LevelPackDetailMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      levelPackDetailMap_.WriteTo(output, _map_levelPackDetailMap_codec);
      levelPackDetailMapAB_.WriteTo(output, _map_levelPackDetailMapAB_codec);
      levelPackDetailMapABPatch_.WriteTo(output, _map_levelPackDetailMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      levelPackDetailMap_.WriteTo(ref output, _map_levelPackDetailMap_codec);
      levelPackDetailMapAB_.WriteTo(ref output, _map_levelPackDetailMapAB_codec);
      levelPackDetailMapABPatch_.WriteTo(ref output, _map_levelPackDetailMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += levelPackDetailMap_.CalculateSize(_map_levelPackDetailMap_codec);
      size += levelPackDetailMapAB_.CalculateSize(_map_levelPackDetailMapAB_codec);
      size += levelPackDetailMapABPatch_.CalculateSize(_map_levelPackDetailMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LevelPackDetailConf other) {
      if (other == null) {
        return;
      }
      levelPackDetailMap_.Add(other.levelPackDetailMap_);
      levelPackDetailMapAB_.Add(other.levelPackDetailMapAB_);
      levelPackDetailMapABPatch_.Add(other.levelPackDetailMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            levelPackDetailMap_.AddEntriesFrom(input, _map_levelPackDetailMap_codec);
            break;
          }
          case 18: {
            levelPackDetailMapAB_.AddEntriesFrom(input, _map_levelPackDetailMapAB_codec);
            break;
          }
          case 26: {
            levelPackDetailMapABPatch_.AddEntriesFrom(input, _map_levelPackDetailMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            levelPackDetailMap_.AddEntriesFrom(ref input, _map_levelPackDetailMap_codec);
            break;
          }
          case 18: {
            levelPackDetailMapAB_.AddEntriesFrom(ref input, _map_levelPackDetailMapAB_codec);
            break;
          }
          case 26: {
            levelPackDetailMapABPatch_.AddEntriesFrom(ref input, _map_levelPackDetailMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
