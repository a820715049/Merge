// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/UserGradeConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/UserGradeConf.proto</summary>
  public static partial class UserGradeConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/UserGradeConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static UserGradeConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChtyYXdkYXRhL1VzZXJHcmFkZUNvbmYucHJvdG8SB3Jhd2RhdGEilAIKCVVz",
            "ZXJHcmFkZRIKCgJpZBgBIAEoBRIWCg5hcGlSZWZyZXNoVHlwZRgGIAEoBRIZ",
            "ChFkZWZhdWx0R3JhZGVWYWx1ZRgFIAEoBRIRCglpc0FwaVNlbmQYByABKAgS",
            "EAoIaXNBcGlVc2UYCCABKAgSFAoMbW9kZWxWZXJzaW9uGAkgASgJEj4KDnVz",
            "ZXJHcmFkZVZhbHVlGAMgAygLMiYucmF3ZGF0YS5Vc2VyR3JhZGUuVXNlckdy",
            "YWRlVmFsdWVFbnRyeRIWCg51c2VyVGFnR3JvdXBJZBgEIAEoBRo1ChNVc2Vy",
            "R3JhZGVWYWx1ZUVudHJ5EgsKA2tleRgBIAEoBRINCgV2YWx1ZRgCIAEoBToC",
            "OAEipAEKE1VzZXJHcmFkZU1hcEFCVmFsdWUSRAoMVXNlckdyYWRlTWFwGAEg",
            "AygLMi4ucmF3ZGF0YS5Vc2VyR3JhZGVNYXBBQlZhbHVlLlVzZXJHcmFkZU1h",
            "cEVudHJ5GkcKEVVzZXJHcmFkZU1hcEVudHJ5EgsKA2tleRgBIAEoBRIhCgV2",
            "YWx1ZRgCIAEoCzISLnJhd2RhdGEuVXNlckdyYWRlOgI4ASLZAwoNVXNlckdy",
            "YWRlQ29uZhI+CgxVc2VyR3JhZGVNYXAYASADKAsyKC5yYXdkYXRhLlVzZXJH",
            "cmFkZUNvbmYuVXNlckdyYWRlTWFwRW50cnkSQgoOVXNlckdyYWRlTWFwQUIY",
            "AiADKAsyKi5yYXdkYXRhLlVzZXJHcmFkZUNvbmYuVXNlckdyYWRlTWFwQUJF",
            "bnRyeRJMChNVc2VyR3JhZGVNYXBBQlBhdGNoGAMgAygLMi8ucmF3ZGF0YS5V",
            "c2VyR3JhZGVDb25mLlVzZXJHcmFkZU1hcEFCUGF0Y2hFbnRyeRpHChFVc2Vy",
            "R3JhZGVNYXBFbnRyeRILCgNrZXkYASABKAUSIQoFdmFsdWUYAiABKAsyEi5y",
            "YXdkYXRhLlVzZXJHcmFkZToCOAEaUwoTVXNlckdyYWRlTWFwQUJFbnRyeRIL",
            "CgNrZXkYASABKAkSKwoFdmFsdWUYAiABKAsyHC5yYXdkYXRhLlVzZXJHcmFk",
            "ZU1hcEFCVmFsdWU6AjgBGlgKGFVzZXJHcmFkZU1hcEFCUGF0Y2hFbnRyeRIL",
            "CgNrZXkYASABKAkSKwoFdmFsdWUYAiABKAsyHC5yYXdkYXRhLlVzZXJHcmFk",
            "ZU1hcEFCVmFsdWU6AjgBQj1aLWdpdGxhYi5mdW5wbHVzLmlvL2ZhdC9jb25m",
            "L2dlbi9nb2xhbmcvcmF3ZGF0YaoCC2ZhdC5yYXdkYXRhYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.UserGrade), global::fat.rawdata.UserGrade.Parser, new[]{ "Id", "ApiRefreshType", "DefaultGradeValue", "IsApiSend", "IsApiUse", "ModelVersion", "UserGradeValue", "UserTagGroupId" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.UserGradeMapABValue), global::fat.rawdata.UserGradeMapABValue.Parser, new[]{ "UserGradeMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.UserGradeConf), global::fat.rawdata.UserGradeConf.Parser, new[]{ "UserGradeMap", "UserGradeMapAB", "UserGradeMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="UserGrade",table="UserGradeMap",table_wrapper="UserGradeConf",map="true",map_key_type="int32",data="UserGradeConf")
  /// annotation@ab(table_ab="UserGradeMapAB",table_ab_patch="UserGradeMapABPatch",table_ab_value="UserGradeMapABValue",ab_patch="true")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@UserGrade(id="id")
  /// </summary>
  public sealed partial class UserGrade : pb::IMessage<UserGrade>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserGrade> _parser = new pb::MessageParser<UserGrade>(() => new UserGrade());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserGrade> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.UserGradeConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserGrade() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserGrade(UserGrade other) : this() {
      id_ = other.id_;
      apiRefreshType_ = other.apiRefreshType_;
      defaultGradeValue_ = other.defaultGradeValue_;
      isApiSend_ = other.isApiSend_;
      isApiUse_ = other.isApiUse_;
      modelVersion_ = other.modelVersion_;
      userGradeValue_ = other.userGradeValue_.Clone();
      userTagGroupId_ = other.userTagGroupId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserGrade Clone() {
      return new UserGrade(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 用户档位ID
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "apiRefreshType" field.</summary>
    public const int ApiRefreshTypeFieldNumber = 6;
    private int apiRefreshType_;
    /// <summary>
    /// 难度API刷新类型
    /// 1：每天的UTC-0的10点
    /// 2：每周一的UTC-0的10点
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ApiRefreshType {
      get { return apiRefreshType_; }
      set {
        apiRefreshType_ = value;
      }
    }

    /// <summary>Field number for the "defaultGradeValue" field.</summary>
    public const int DefaultGradeValueFieldNumber = 5;
    private int defaultGradeValue_;
    /// <summary>
    /// 客户端档位默认值
    /// （仅出于逻辑安全考虑，服务器无视此逻辑）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DefaultGradeValue {
      get { return defaultGradeValue_; }
      set {
        defaultGradeValue_ = value;
      }
    }

    /// <summary>Field number for the "isApiSend" field.</summary>
    public const int IsApiSendFieldNumber = 7;
    private bool isApiSend_;
    /// <summary>
    /// 是否调用难度API
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsApiSend {
      get { return isApiSend_; }
      set {
        isApiSend_ = value;
      }
    }

    /// <summary>Field number for the "isApiUse" field.</summary>
    public const int IsApiUseFieldNumber = 8;
    private bool isApiUse_;
    /// <summary>
    /// 是否使用难度API返回值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsApiUse {
      get { return isApiUse_; }
      set {
        isApiUse_ = value;
      }
    }

    /// <summary>Field number for the "modelVersion" field.</summary>
    public const int ModelVersionFieldNumber = 9;
    private string modelVersion_ = "";
    /// <summary>
    /// 难度API模型版本
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModelVersion {
      get { return modelVersion_; }
      set {
        modelVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "userGradeValue" field.</summary>
    public const int UserGradeValueFieldNumber = 3;
    private static readonly pbc::MapField<int, int>.Codec _map_userGradeValue_codec
        = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForInt32(16, 0), 26);
    private readonly pbc::MapField<int, int> userGradeValue_ = new pbc::MapField<int, int>();
    /// <summary>
    /// 基于标签组的值确定档位
    /// （userTagGroupValue:userGradeValue）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, int> UserGradeValue {
      get { return userGradeValue_; }
    }

    /// <summary>Field number for the "userTagGroupId" field.</summary>
    public const int UserTagGroupIdFieldNumber = 4;
    private int userTagGroupId_;
    /// <summary>
    /// 关联的用户标签组ID
    /// （UserTagGroup.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UserTagGroupId {
      get { return userTagGroupId_; }
      set {
        userTagGroupId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserGrade);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserGrade other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ApiRefreshType != other.ApiRefreshType) return false;
      if (DefaultGradeValue != other.DefaultGradeValue) return false;
      if (IsApiSend != other.IsApiSend) return false;
      if (IsApiUse != other.IsApiUse) return false;
      if (ModelVersion != other.ModelVersion) return false;
      if (!UserGradeValue.Equals(other.UserGradeValue)) return false;
      if (UserTagGroupId != other.UserTagGroupId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (ApiRefreshType != 0) hash ^= ApiRefreshType.GetHashCode();
      if (DefaultGradeValue != 0) hash ^= DefaultGradeValue.GetHashCode();
      if (IsApiSend != false) hash ^= IsApiSend.GetHashCode();
      if (IsApiUse != false) hash ^= IsApiUse.GetHashCode();
      if (ModelVersion.Length != 0) hash ^= ModelVersion.GetHashCode();
      hash ^= UserGradeValue.GetHashCode();
      if (UserTagGroupId != 0) hash ^= UserTagGroupId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      userGradeValue_.WriteTo(output, _map_userGradeValue_codec);
      if (UserTagGroupId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(UserTagGroupId);
      }
      if (DefaultGradeValue != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(DefaultGradeValue);
      }
      if (ApiRefreshType != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(ApiRefreshType);
      }
      if (IsApiSend != false) {
        output.WriteRawTag(56);
        output.WriteBool(IsApiSend);
      }
      if (IsApiUse != false) {
        output.WriteRawTag(64);
        output.WriteBool(IsApiUse);
      }
      if (ModelVersion.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ModelVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      userGradeValue_.WriteTo(ref output, _map_userGradeValue_codec);
      if (UserTagGroupId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(UserTagGroupId);
      }
      if (DefaultGradeValue != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(DefaultGradeValue);
      }
      if (ApiRefreshType != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(ApiRefreshType);
      }
      if (IsApiSend != false) {
        output.WriteRawTag(56);
        output.WriteBool(IsApiSend);
      }
      if (IsApiUse != false) {
        output.WriteRawTag(64);
        output.WriteBool(IsApiUse);
      }
      if (ModelVersion.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ModelVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (ApiRefreshType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ApiRefreshType);
      }
      if (DefaultGradeValue != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DefaultGradeValue);
      }
      if (IsApiSend != false) {
        size += 1 + 1;
      }
      if (IsApiUse != false) {
        size += 1 + 1;
      }
      if (ModelVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModelVersion);
      }
      size += userGradeValue_.CalculateSize(_map_userGradeValue_codec);
      if (UserTagGroupId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserTagGroupId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserGrade other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.ApiRefreshType != 0) {
        ApiRefreshType = other.ApiRefreshType;
      }
      if (other.DefaultGradeValue != 0) {
        DefaultGradeValue = other.DefaultGradeValue;
      }
      if (other.IsApiSend != false) {
        IsApiSend = other.IsApiSend;
      }
      if (other.IsApiUse != false) {
        IsApiUse = other.IsApiUse;
      }
      if (other.ModelVersion.Length != 0) {
        ModelVersion = other.ModelVersion;
      }
      userGradeValue_.Add(other.userGradeValue_);
      if (other.UserTagGroupId != 0) {
        UserTagGroupId = other.UserTagGroupId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 26: {
            userGradeValue_.AddEntriesFrom(input, _map_userGradeValue_codec);
            break;
          }
          case 32: {
            UserTagGroupId = input.ReadInt32();
            break;
          }
          case 40: {
            DefaultGradeValue = input.ReadInt32();
            break;
          }
          case 48: {
            ApiRefreshType = input.ReadInt32();
            break;
          }
          case 56: {
            IsApiSend = input.ReadBool();
            break;
          }
          case 64: {
            IsApiUse = input.ReadBool();
            break;
          }
          case 74: {
            ModelVersion = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 26: {
            userGradeValue_.AddEntriesFrom(ref input, _map_userGradeValue_codec);
            break;
          }
          case 32: {
            UserTagGroupId = input.ReadInt32();
            break;
          }
          case 40: {
            DefaultGradeValue = input.ReadInt32();
            break;
          }
          case 48: {
            ApiRefreshType = input.ReadInt32();
            break;
          }
          case 56: {
            IsApiSend = input.ReadBool();
            break;
          }
          case 64: {
            IsApiUse = input.ReadBool();
            break;
          }
          case 74: {
            ModelVersion = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UserGradeMapABValue : pb::IMessage<UserGradeMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserGradeMapABValue> _parser = new pb::MessageParser<UserGradeMapABValue>(() => new UserGradeMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserGradeMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.UserGradeConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserGradeMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserGradeMapABValue(UserGradeMapABValue other) : this() {
      userGradeMap_ = other.userGradeMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserGradeMapABValue Clone() {
      return new UserGradeMapABValue(this);
    }

    /// <summary>Field number for the "UserGradeMap" field.</summary>
    public const int UserGradeMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.UserGrade>.Codec _map_userGradeMap_codec
        = new pbc::MapField<int, global::fat.rawdata.UserGrade>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.UserGrade.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.UserGrade> userGradeMap_ = new pbc::MapField<int, global::fat.rawdata.UserGrade>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.UserGrade> UserGradeMap {
      get { return userGradeMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserGradeMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserGradeMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!UserGradeMap.Equals(other.UserGradeMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= UserGradeMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      userGradeMap_.WriteTo(output, _map_userGradeMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      userGradeMap_.WriteTo(ref output, _map_userGradeMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += userGradeMap_.CalculateSize(_map_userGradeMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserGradeMapABValue other) {
      if (other == null) {
        return;
      }
      userGradeMap_.Add(other.userGradeMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            userGradeMap_.AddEntriesFrom(input, _map_userGradeMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            userGradeMap_.AddEntriesFrom(ref input, _map_userGradeMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UserGradeConf : pb::IMessage<UserGradeConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserGradeConf> _parser = new pb::MessageParser<UserGradeConf>(() => new UserGradeConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserGradeConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.UserGradeConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserGradeConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserGradeConf(UserGradeConf other) : this() {
      userGradeMap_ = other.userGradeMap_.Clone();
      userGradeMapAB_ = other.userGradeMapAB_.Clone();
      userGradeMapABPatch_ = other.userGradeMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserGradeConf Clone() {
      return new UserGradeConf(this);
    }

    /// <summary>Field number for the "UserGradeMap" field.</summary>
    public const int UserGradeMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.UserGrade>.Codec _map_userGradeMap_codec
        = new pbc::MapField<int, global::fat.rawdata.UserGrade>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.UserGrade.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.UserGrade> userGradeMap_ = new pbc::MapField<int, global::fat.rawdata.UserGrade>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.UserGrade> UserGradeMap {
      get { return userGradeMap_; }
    }

    /// <summary>Field number for the "UserGradeMapAB" field.</summary>
    public const int UserGradeMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.UserGradeMapABValue>.Codec _map_userGradeMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.UserGradeMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.UserGradeMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.UserGradeMapABValue> userGradeMapAB_ = new pbc::MapField<string, global::fat.rawdata.UserGradeMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.UserGradeMapABValue> UserGradeMapAB {
      get { return userGradeMapAB_; }
    }

    /// <summary>Field number for the "UserGradeMapABPatch" field.</summary>
    public const int UserGradeMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.UserGradeMapABValue>.Codec _map_userGradeMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.UserGradeMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.UserGradeMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.UserGradeMapABValue> userGradeMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.UserGradeMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.UserGradeMapABValue> UserGradeMapABPatch {
      get { return userGradeMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserGradeConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserGradeConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!UserGradeMap.Equals(other.UserGradeMap)) return false;
      if (!UserGradeMapAB.Equals(other.UserGradeMapAB)) return false;
      if (!UserGradeMapABPatch.Equals(other.UserGradeMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= UserGradeMap.GetHashCode();
      hash ^= UserGradeMapAB.GetHashCode();
      hash ^= UserGradeMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      userGradeMap_.WriteTo(output, _map_userGradeMap_codec);
      userGradeMapAB_.WriteTo(output, _map_userGradeMapAB_codec);
      userGradeMapABPatch_.WriteTo(output, _map_userGradeMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      userGradeMap_.WriteTo(ref output, _map_userGradeMap_codec);
      userGradeMapAB_.WriteTo(ref output, _map_userGradeMapAB_codec);
      userGradeMapABPatch_.WriteTo(ref output, _map_userGradeMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += userGradeMap_.CalculateSize(_map_userGradeMap_codec);
      size += userGradeMapAB_.CalculateSize(_map_userGradeMapAB_codec);
      size += userGradeMapABPatch_.CalculateSize(_map_userGradeMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserGradeConf other) {
      if (other == null) {
        return;
      }
      userGradeMap_.Add(other.userGradeMap_);
      userGradeMapAB_.Add(other.userGradeMapAB_);
      userGradeMapABPatch_.Add(other.userGradeMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            userGradeMap_.AddEntriesFrom(input, _map_userGradeMap_codec);
            break;
          }
          case 18: {
            userGradeMapAB_.AddEntriesFrom(input, _map_userGradeMapAB_codec);
            break;
          }
          case 26: {
            userGradeMapABPatch_.AddEntriesFrom(input, _map_userGradeMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            userGradeMap_.AddEntriesFrom(ref input, _map_userGradeMap_codec);
            break;
          }
          case 18: {
            userGradeMapAB_.AddEntriesFrom(ref input, _map_userGradeMapAB_codec);
            break;
          }
          case 26: {
            userGradeMapABPatch_.AddEntriesFrom(ref input, _map_userGradeMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
