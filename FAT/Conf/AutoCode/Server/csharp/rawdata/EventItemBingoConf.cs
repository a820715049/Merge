// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventItemBingoConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventItemBingoConf.proto</summary>
  public static partial class EventItemBingoConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventItemBingoConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventItemBingoConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiByYXdkYXRhL0V2ZW50SXRlbUJpbmdvQ29uZi5wcm90bxIHcmF3ZGF0YSLC",
            "AQoORXZlbnRJdGVtQmluZ28SCgoCaWQYASABKAUSEQoJTWFpblRoZW1lGAIg",
            "ASgFEhIKCmJpbmdvVGhlbWUYAyABKAUSDwoHYm9hcmRJZBgEIAEoBRIQCghl",
            "bmRUaGVtZRgKIAEoBRIPCgdncmFkZUlkGAUgASgFEhEKCWl0ZW1UaGVtZRgG",
            "IAEoBRIMCgRuYW1lGAcgASgJEhQKDHJlc3RhcnRUaGVtZRgIIAEoBRISCgpz",
            "dGFydFRoZW1lGAkgASgFIsIBChhFdmVudEl0ZW1CaW5nb01hcEFCVmFsdWUS",
            "UwoRRXZlbnRJdGVtQmluZ29NYXAYASADKAsyOC5yYXdkYXRhLkV2ZW50SXRl",
            "bUJpbmdvTWFwQUJWYWx1ZS5FdmVudEl0ZW1CaW5nb01hcEVudHJ5GlEKFkV2",
            "ZW50SXRlbUJpbmdvTWFwRW50cnkSCwoDa2V5GAEgASgFEiYKBXZhbHVlGAIg",
            "ASgLMhcucmF3ZGF0YS5FdmVudEl0ZW1CaW5nbzoCOAEiqQQKEkV2ZW50SXRl",
            "bUJpbmdvQ29uZhJNChFFdmVudEl0ZW1CaW5nb01hcBgBIAMoCzIyLnJhd2Rh",
            "dGEuRXZlbnRJdGVtQmluZ29Db25mLkV2ZW50SXRlbUJpbmdvTWFwRW50cnkS",
            "UQoTRXZlbnRJdGVtQmluZ29NYXBBQhgCIAMoCzI0LnJhd2RhdGEuRXZlbnRJ",
            "dGVtQmluZ29Db25mLkV2ZW50SXRlbUJpbmdvTWFwQUJFbnRyeRJbChhFdmVu",
            "dEl0ZW1CaW5nb01hcEFCUGF0Y2gYAyADKAsyOS5yYXdkYXRhLkV2ZW50SXRl",
            "bUJpbmdvQ29uZi5FdmVudEl0ZW1CaW5nb01hcEFCUGF0Y2hFbnRyeRpRChZF",
            "dmVudEl0ZW1CaW5nb01hcEVudHJ5EgsKA2tleRgBIAEoBRImCgV2YWx1ZRgC",
            "IAEoCzIXLnJhd2RhdGEuRXZlbnRJdGVtQmluZ286AjgBGl0KGEV2ZW50SXRl",
            "bUJpbmdvTWFwQUJFbnRyeRILCgNrZXkYASABKAkSMAoFdmFsdWUYAiABKAsy",
            "IS5yYXdkYXRhLkV2ZW50SXRlbUJpbmdvTWFwQUJWYWx1ZToCOAEaYgodRXZl",
            "bnRJdGVtQmluZ29NYXBBQlBhdGNoRW50cnkSCwoDa2V5GAEgASgJEjAKBXZh",
            "bHVlGAIgASgLMiEucmF3ZGF0YS5FdmVudEl0ZW1CaW5nb01hcEFCVmFsdWU6",
            "AjgBQj1aLWdpdGxhYi5mdW5wbHVzLmlvL2ZhdC9jb25mL2dlbi9nb2xhbmcv",
            "cmF3ZGF0YaoCC2ZhdC5yYXdkYXRhYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventItemBingo), global::fat.rawdata.EventItemBingo.Parser, new[]{ "Id", "MainTheme", "BingoTheme", "BoardId", "EndTheme", "GradeId", "ItemTheme", "Name", "RestartTheme", "StartTheme" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventItemBingoMapABValue), global::fat.rawdata.EventItemBingoMapABValue.Parser, new[]{ "EventItemBingoMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventItemBingoConf), global::fat.rawdata.EventItemBingoConf.Parser, new[]{ "EventItemBingoMap", "EventItemBingoMapAB", "EventItemBingoMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventItemBingo",table="EventItemBingoMap",table_wrapper="EventItemBingoConf",map="true",map_key_type="int32",data="EventItemBingoConf")
  /// annotation@ab(table_ab="EventItemBingoMapAB",table_ab_patch="EventItemBingoMapABPatch",table_ab_value="EventItemBingoMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventItemBingo(id="id")
  /// </summary>
  public sealed partial class EventItemBingo : pb::IMessage<EventItemBingo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventItemBingo> _parser = new pb::MessageParser<EventItemBingo>(() => new EventItemBingo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventItemBingo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventItemBingoConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventItemBingo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventItemBingo(EventItemBingo other) : this() {
      id_ = other.id_;
      mainTheme_ = other.mainTheme_;
      bingoTheme_ = other.bingoTheme_;
      boardId_ = other.boardId_;
      endTheme_ = other.endTheme_;
      gradeId_ = other.gradeId_;
      itemTheme_ = other.itemTheme_;
      name_ = other.name_;
      restartTheme_ = other.restartTheme_;
      startTheme_ = other.startTheme_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventItemBingo Clone() {
      return new EventItemBingo(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 活动ID
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "MainTheme" field.</summary>
    public const int MainThemeFieldNumber = 2;
    private int mainTheme_;
    /// <summary>
    /// 玩法弹板
    /// 活动弹板ID
    /// （EventTheme.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MainTheme {
      get { return mainTheme_; }
      set {
        mainTheme_ = value;
      }
    }

    /// <summary>Field number for the "bingoTheme" field.</summary>
    public const int BingoThemeFieldNumber = 3;
    private int bingoTheme_;
    /// <summary>
    /// bingo奖励
    /// 详情弹板
    /// （EventTheme.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BingoTheme {
      get { return bingoTheme_; }
      set {
        bingoTheme_ = value;
      }
    }

    /// <summary>Field number for the "boardId" field.</summary>
    public const int BoardIdFieldNumber = 4;
    private int boardId_;
    /// <summary>
    /// 适用棋盘
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BoardId {
      get { return boardId_; }
      set {
        boardId_ = value;
      }
    }

    /// <summary>Field number for the "endTheme" field.</summary>
    public const int EndThemeFieldNumber = 10;
    private int endTheme_;
    /// <summary>
    /// 活动结束
    /// （EventTheme.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EndTheme {
      get { return endTheme_; }
      set {
        endTheme_ = value;
      }
    }

    /// <summary>Field number for the "gradeId" field.</summary>
    public const int GradeIdFieldNumber = 5;
    private int gradeId_;
    /// <summary>
    /// 关卡信息
    /// （受档位组控制）
    /// （GradeIndexMapping.id）
    /// （EventItemBingoDetail.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GradeId {
      get { return gradeId_; }
      set {
        gradeId_ = value;
      }
    }

    /// <summary>Field number for the "itemTheme" field.</summary>
    public const int ItemThemeFieldNumber = 6;
    private int itemTheme_;
    /// <summary>
    /// 提交棋子界面
    /// （EventTheme.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ItemTheme {
      get { return itemTheme_; }
      set {
        itemTheme_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 7;
    private string name_ = "";
    /// <summary>
    /// 名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "restartTheme" field.</summary>
    public const int RestartThemeFieldNumber = 8;
    private int restartTheme_;
    /// <summary>
    /// 新一轮弹板
    /// 活动弹板ID
    /// （EventTheme.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RestartTheme {
      get { return restartTheme_; }
      set {
        restartTheme_ = value;
      }
    }

    /// <summary>Field number for the "startTheme" field.</summary>
    public const int StartThemeFieldNumber = 9;
    private int startTheme_;
    /// <summary>
    /// 开启弹板
    /// 活动弹板ID
    /// （EventTheme.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StartTheme {
      get { return startTheme_; }
      set {
        startTheme_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventItemBingo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventItemBingo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (MainTheme != other.MainTheme) return false;
      if (BingoTheme != other.BingoTheme) return false;
      if (BoardId != other.BoardId) return false;
      if (EndTheme != other.EndTheme) return false;
      if (GradeId != other.GradeId) return false;
      if (ItemTheme != other.ItemTheme) return false;
      if (Name != other.Name) return false;
      if (RestartTheme != other.RestartTheme) return false;
      if (StartTheme != other.StartTheme) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (MainTheme != 0) hash ^= MainTheme.GetHashCode();
      if (BingoTheme != 0) hash ^= BingoTheme.GetHashCode();
      if (BoardId != 0) hash ^= BoardId.GetHashCode();
      if (EndTheme != 0) hash ^= EndTheme.GetHashCode();
      if (GradeId != 0) hash ^= GradeId.GetHashCode();
      if (ItemTheme != 0) hash ^= ItemTheme.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (RestartTheme != 0) hash ^= RestartTheme.GetHashCode();
      if (StartTheme != 0) hash ^= StartTheme.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (MainTheme != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MainTheme);
      }
      if (BingoTheme != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(BingoTheme);
      }
      if (BoardId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(BoardId);
      }
      if (GradeId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(GradeId);
      }
      if (ItemTheme != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(ItemTheme);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Name);
      }
      if (RestartTheme != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(RestartTheme);
      }
      if (StartTheme != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(StartTheme);
      }
      if (EndTheme != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(EndTheme);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (MainTheme != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MainTheme);
      }
      if (BingoTheme != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(BingoTheme);
      }
      if (BoardId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(BoardId);
      }
      if (GradeId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(GradeId);
      }
      if (ItemTheme != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(ItemTheme);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Name);
      }
      if (RestartTheme != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(RestartTheme);
      }
      if (StartTheme != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(StartTheme);
      }
      if (EndTheme != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(EndTheme);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (MainTheme != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MainTheme);
      }
      if (BingoTheme != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BingoTheme);
      }
      if (BoardId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BoardId);
      }
      if (EndTheme != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EndTheme);
      }
      if (GradeId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GradeId);
      }
      if (ItemTheme != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemTheme);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (RestartTheme != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RestartTheme);
      }
      if (StartTheme != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartTheme);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventItemBingo other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.MainTheme != 0) {
        MainTheme = other.MainTheme;
      }
      if (other.BingoTheme != 0) {
        BingoTheme = other.BingoTheme;
      }
      if (other.BoardId != 0) {
        BoardId = other.BoardId;
      }
      if (other.EndTheme != 0) {
        EndTheme = other.EndTheme;
      }
      if (other.GradeId != 0) {
        GradeId = other.GradeId;
      }
      if (other.ItemTheme != 0) {
        ItemTheme = other.ItemTheme;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.RestartTheme != 0) {
        RestartTheme = other.RestartTheme;
      }
      if (other.StartTheme != 0) {
        StartTheme = other.StartTheme;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            MainTheme = input.ReadInt32();
            break;
          }
          case 24: {
            BingoTheme = input.ReadInt32();
            break;
          }
          case 32: {
            BoardId = input.ReadInt32();
            break;
          }
          case 40: {
            GradeId = input.ReadInt32();
            break;
          }
          case 48: {
            ItemTheme = input.ReadInt32();
            break;
          }
          case 58: {
            Name = input.ReadString();
            break;
          }
          case 64: {
            RestartTheme = input.ReadInt32();
            break;
          }
          case 72: {
            StartTheme = input.ReadInt32();
            break;
          }
          case 80: {
            EndTheme = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            MainTheme = input.ReadInt32();
            break;
          }
          case 24: {
            BingoTheme = input.ReadInt32();
            break;
          }
          case 32: {
            BoardId = input.ReadInt32();
            break;
          }
          case 40: {
            GradeId = input.ReadInt32();
            break;
          }
          case 48: {
            ItemTheme = input.ReadInt32();
            break;
          }
          case 58: {
            Name = input.ReadString();
            break;
          }
          case 64: {
            RestartTheme = input.ReadInt32();
            break;
          }
          case 72: {
            StartTheme = input.ReadInt32();
            break;
          }
          case 80: {
            EndTheme = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventItemBingoMapABValue : pb::IMessage<EventItemBingoMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventItemBingoMapABValue> _parser = new pb::MessageParser<EventItemBingoMapABValue>(() => new EventItemBingoMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventItemBingoMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventItemBingoConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventItemBingoMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventItemBingoMapABValue(EventItemBingoMapABValue other) : this() {
      eventItemBingoMap_ = other.eventItemBingoMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventItemBingoMapABValue Clone() {
      return new EventItemBingoMapABValue(this);
    }

    /// <summary>Field number for the "EventItemBingoMap" field.</summary>
    public const int EventItemBingoMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventItemBingo>.Codec _map_eventItemBingoMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventItemBingo>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventItemBingo.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventItemBingo> eventItemBingoMap_ = new pbc::MapField<int, global::fat.rawdata.EventItemBingo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventItemBingo> EventItemBingoMap {
      get { return eventItemBingoMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventItemBingoMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventItemBingoMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventItemBingoMap.Equals(other.EventItemBingoMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventItemBingoMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventItemBingoMap_.WriteTo(output, _map_eventItemBingoMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventItemBingoMap_.WriteTo(ref output, _map_eventItemBingoMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventItemBingoMap_.CalculateSize(_map_eventItemBingoMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventItemBingoMapABValue other) {
      if (other == null) {
        return;
      }
      eventItemBingoMap_.Add(other.eventItemBingoMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventItemBingoMap_.AddEntriesFrom(input, _map_eventItemBingoMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventItemBingoMap_.AddEntriesFrom(ref input, _map_eventItemBingoMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventItemBingoConf : pb::IMessage<EventItemBingoConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventItemBingoConf> _parser = new pb::MessageParser<EventItemBingoConf>(() => new EventItemBingoConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventItemBingoConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventItemBingoConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventItemBingoConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventItemBingoConf(EventItemBingoConf other) : this() {
      eventItemBingoMap_ = other.eventItemBingoMap_.Clone();
      eventItemBingoMapAB_ = other.eventItemBingoMapAB_.Clone();
      eventItemBingoMapABPatch_ = other.eventItemBingoMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventItemBingoConf Clone() {
      return new EventItemBingoConf(this);
    }

    /// <summary>Field number for the "EventItemBingoMap" field.</summary>
    public const int EventItemBingoMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventItemBingo>.Codec _map_eventItemBingoMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventItemBingo>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventItemBingo.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventItemBingo> eventItemBingoMap_ = new pbc::MapField<int, global::fat.rawdata.EventItemBingo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventItemBingo> EventItemBingoMap {
      get { return eventItemBingoMap_; }
    }

    /// <summary>Field number for the "EventItemBingoMapAB" field.</summary>
    public const int EventItemBingoMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventItemBingoMapABValue>.Codec _map_eventItemBingoMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventItemBingoMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventItemBingoMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventItemBingoMapABValue> eventItemBingoMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventItemBingoMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventItemBingoMapABValue> EventItemBingoMapAB {
      get { return eventItemBingoMapAB_; }
    }

    /// <summary>Field number for the "EventItemBingoMapABPatch" field.</summary>
    public const int EventItemBingoMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventItemBingoMapABValue>.Codec _map_eventItemBingoMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventItemBingoMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventItemBingoMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventItemBingoMapABValue> eventItemBingoMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventItemBingoMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventItemBingoMapABValue> EventItemBingoMapABPatch {
      get { return eventItemBingoMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventItemBingoConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventItemBingoConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventItemBingoMap.Equals(other.EventItemBingoMap)) return false;
      if (!EventItemBingoMapAB.Equals(other.EventItemBingoMapAB)) return false;
      if (!EventItemBingoMapABPatch.Equals(other.EventItemBingoMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventItemBingoMap.GetHashCode();
      hash ^= EventItemBingoMapAB.GetHashCode();
      hash ^= EventItemBingoMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventItemBingoMap_.WriteTo(output, _map_eventItemBingoMap_codec);
      eventItemBingoMapAB_.WriteTo(output, _map_eventItemBingoMapAB_codec);
      eventItemBingoMapABPatch_.WriteTo(output, _map_eventItemBingoMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventItemBingoMap_.WriteTo(ref output, _map_eventItemBingoMap_codec);
      eventItemBingoMapAB_.WriteTo(ref output, _map_eventItemBingoMapAB_codec);
      eventItemBingoMapABPatch_.WriteTo(ref output, _map_eventItemBingoMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventItemBingoMap_.CalculateSize(_map_eventItemBingoMap_codec);
      size += eventItemBingoMapAB_.CalculateSize(_map_eventItemBingoMapAB_codec);
      size += eventItemBingoMapABPatch_.CalculateSize(_map_eventItemBingoMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventItemBingoConf other) {
      if (other == null) {
        return;
      }
      eventItemBingoMap_.Add(other.eventItemBingoMap_);
      eventItemBingoMapAB_.Add(other.eventItemBingoMapAB_);
      eventItemBingoMapABPatch_.Add(other.eventItemBingoMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventItemBingoMap_.AddEntriesFrom(input, _map_eventItemBingoMap_codec);
            break;
          }
          case 18: {
            eventItemBingoMapAB_.AddEntriesFrom(input, _map_eventItemBingoMapAB_codec);
            break;
          }
          case 26: {
            eventItemBingoMapABPatch_.AddEntriesFrom(input, _map_eventItemBingoMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventItemBingoMap_.AddEntriesFrom(ref input, _map_eventItemBingoMap_codec);
            break;
          }
          case 18: {
            eventItemBingoMapAB_.AddEntriesFrom(ref input, _map_eventItemBingoMapAB_codec);
            break;
          }
          case 26: {
            eventItemBingoMapABPatch_.AddEntriesFrom(ref input, _map_eventItemBingoMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
