// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EnergyPackConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EnergyPackConf.proto</summary>
  public static partial class EnergyPackConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EnergyPackConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EnergyPackConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChxyYXdkYXRhL0VuZXJneVBhY2tDb25mLnByb3RvEgdyYXdkYXRhIq4BCgpF",
            "bmVyZ3lQYWNrEgoKAmlkGAEgASgFEhMKC2FwaVBhY2tQb29sGAogAygFEhIK",
            "CmV2ZW50VGhlbWUYByABKAUSEAoIaXNBcGlVc2UYCyABKAgSDQoFbGFiZWwY",
            "CSABKAUSFAoMbW9kZWxWZXJzaW9uGA0gASgJEhEKCXBhY2tHcnBJZBgIIAEo",
            "BRIQCghwYXl0aW1lcxgDIAEoBRIPCgdzdWJUeXBlGAwgASgJIqoBChRFbmVy",
            "Z3lQYWNrTWFwQUJWYWx1ZRJHCg1FbmVyZ3lQYWNrTWFwGAEgAygLMjAucmF3",
            "ZGF0YS5FbmVyZ3lQYWNrTWFwQUJWYWx1ZS5FbmVyZ3lQYWNrTWFwRW50cnka",
            "SQoSRW5lcmd5UGFja01hcEVudHJ5EgsKA2tleRgBIAEoBRIiCgV2YWx1ZRgC",
            "IAEoCzITLnJhd2RhdGEuRW5lcmd5UGFjazoCOAEi6QMKDkVuZXJneVBhY2tD",
            "b25mEkEKDUVuZXJneVBhY2tNYXAYASADKAsyKi5yYXdkYXRhLkVuZXJneVBh",
            "Y2tDb25mLkVuZXJneVBhY2tNYXBFbnRyeRJFCg9FbmVyZ3lQYWNrTWFwQUIY",
            "AiADKAsyLC5yYXdkYXRhLkVuZXJneVBhY2tDb25mLkVuZXJneVBhY2tNYXBB",
            "QkVudHJ5Ek8KFEVuZXJneVBhY2tNYXBBQlBhdGNoGAMgAygLMjEucmF3ZGF0",
            "YS5FbmVyZ3lQYWNrQ29uZi5FbmVyZ3lQYWNrTWFwQUJQYXRjaEVudHJ5GkkK",
            "EkVuZXJneVBhY2tNYXBFbnRyeRILCgNrZXkYASABKAUSIgoFdmFsdWUYAiAB",
            "KAsyEy5yYXdkYXRhLkVuZXJneVBhY2s6AjgBGlUKFEVuZXJneVBhY2tNYXBB",
            "QkVudHJ5EgsKA2tleRgBIAEoCRIsCgV2YWx1ZRgCIAEoCzIdLnJhd2RhdGEu",
            "RW5lcmd5UGFja01hcEFCVmFsdWU6AjgBGloKGUVuZXJneVBhY2tNYXBBQlBh",
            "dGNoRW50cnkSCwoDa2V5GAEgASgJEiwKBXZhbHVlGAIgASgLMh0ucmF3ZGF0",
            "YS5FbmVyZ3lQYWNrTWFwQUJWYWx1ZToCOAFCPVotZ2l0bGFiLmZ1bnBsdXMu",
            "aW8vZmF0L2NvbmYvZ2VuL2dvbGFuZy9yYXdkYXRhqgILZmF0LnJhd2RhdGFi",
            "BnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EnergyPack), global::fat.rawdata.EnergyPack.Parser, new[]{ "Id", "ApiPackPool", "EventTheme", "IsApiUse", "Label", "ModelVersion", "PackGrpId", "Paytimes", "SubType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EnergyPackMapABValue), global::fat.rawdata.EnergyPackMapABValue.Parser, new[]{ "EnergyPackMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EnergyPackConf), global::fat.rawdata.EnergyPackConf.Parser, new[]{ "EnergyPackMap", "EnergyPackMapAB", "EnergyPackMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EnergyPack",table="EnergyPackMap",table_wrapper="EnergyPackConf",map="true",map_key_type="int32",data="EnergyPackConf")
  /// annotation@ab(table_ab="EnergyPackMapAB",table_ab_patch="EnergyPackMapABPatch",table_ab_value="EnergyPackMapABValue",ab_patch="true")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EnergyPack(id="id")
  /// </summary>
  public sealed partial class EnergyPack : pb::IMessage<EnergyPack>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EnergyPack> _parser = new pb::MessageParser<EnergyPack>(() => new EnergyPack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EnergyPack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EnergyPackConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnergyPack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnergyPack(EnergyPack other) : this() {
      id_ = other.id_;
      apiPackPool_ = other.apiPackPool_.Clone();
      eventTheme_ = other.eventTheme_;
      isApiUse_ = other.isApiUse_;
      label_ = other.label_;
      modelVersion_ = other.modelVersion_;
      packGrpId_ = other.packGrpId_;
      paytimes_ = other.paytimes_;
      subType_ = other.subType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnergyPack Clone() {
      return new EnergyPack(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 无体力礼包
    /// 模板ID
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "apiPackPool" field.</summary>
    public const int ApiPackPoolFieldNumber = 10;
    private static readonly pb::FieldCodec<int> _repeated_apiPackPool_codec
        = pb::FieldCodec.ForInt32(82);
    private readonly pbc::RepeatedField<int> apiPackPool_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 礼包备选池
    /// 如果为空，代表不调用API
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> ApiPackPool {
      get { return apiPackPool_; }
    }

    /// <summary>Field number for the "eventTheme" field.</summary>
    public const int EventThemeFieldNumber = 7;
    private int eventTheme_;
    /// <summary>
    /// 活动弹板ID
    /// （EventTheme.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EventTheme {
      get { return eventTheme_; }
      set {
        eventTheme_ = value;
      }
    }

    /// <summary>Field number for the "isApiUse" field.</summary>
    public const int IsApiUseFieldNumber = 11;
    private bool isApiUse_;
    /// <summary>
    /// 是否真的使用
    /// 礼包API返回的结果
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsApiUse {
      get { return isApiUse_; }
      set {
        isApiUse_ = value;
      }
    }

    /// <summary>Field number for the "label" field.</summary>
    public const int LabelFieldNumber = 9;
    private int label_;
    /// <summary>
    /// 标签信息
    /// （Label.id）
    /// （为空代表不显示标签）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Label {
      get { return label_; }
      set {
        label_ = value;
      }
    }

    /// <summary>Field number for the "modelVersion" field.</summary>
    public const int ModelVersionFieldNumber = 13;
    private string modelVersion_ = "";
    /// <summary>
    /// 使用的模型版本
    /// 与Data Product约定
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModelVersion {
      get { return modelVersion_; }
      set {
        modelVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "packGrpId" field.</summary>
    public const int PackGrpIdFieldNumber = 8;
    private int packGrpId_;
    /// <summary>
    /// 内购商品ID
    /// （受档位组控制）
    /// （GradeIndexMapping.id）
    /// （IAPPack.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PackGrpId {
      get { return packGrpId_; }
      set {
        packGrpId_ = value;
      }
    }

    /// <summary>Field number for the "paytimes" field.</summary>
    public const int PaytimesFieldNumber = 3;
    private int paytimes_;
    /// <summary>
    /// 限购次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Paytimes {
      get { return paytimes_; }
      set {
        paytimes_ = value;
      }
    }

    /// <summary>Field number for the "subType" field.</summary>
    public const int SubTypeFieldNumber = 12;
    private string subType_ = "";
    /// <summary>
    /// 礼包子类型
    /// API会用到
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SubType {
      get { return subType_; }
      set {
        subType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EnergyPack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EnergyPack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!apiPackPool_.Equals(other.apiPackPool_)) return false;
      if (EventTheme != other.EventTheme) return false;
      if (IsApiUse != other.IsApiUse) return false;
      if (Label != other.Label) return false;
      if (ModelVersion != other.ModelVersion) return false;
      if (PackGrpId != other.PackGrpId) return false;
      if (Paytimes != other.Paytimes) return false;
      if (SubType != other.SubType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      hash ^= apiPackPool_.GetHashCode();
      if (EventTheme != 0) hash ^= EventTheme.GetHashCode();
      if (IsApiUse != false) hash ^= IsApiUse.GetHashCode();
      if (Label != 0) hash ^= Label.GetHashCode();
      if (ModelVersion.Length != 0) hash ^= ModelVersion.GetHashCode();
      if (PackGrpId != 0) hash ^= PackGrpId.GetHashCode();
      if (Paytimes != 0) hash ^= Paytimes.GetHashCode();
      if (SubType.Length != 0) hash ^= SubType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Paytimes != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Paytimes);
      }
      if (EventTheme != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(EventTheme);
      }
      if (PackGrpId != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(PackGrpId);
      }
      if (Label != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Label);
      }
      apiPackPool_.WriteTo(output, _repeated_apiPackPool_codec);
      if (IsApiUse != false) {
        output.WriteRawTag(88);
        output.WriteBool(IsApiUse);
      }
      if (SubType.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(SubType);
      }
      if (ModelVersion.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(ModelVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Paytimes != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Paytimes);
      }
      if (EventTheme != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(EventTheme);
      }
      if (PackGrpId != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(PackGrpId);
      }
      if (Label != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Label);
      }
      apiPackPool_.WriteTo(ref output, _repeated_apiPackPool_codec);
      if (IsApiUse != false) {
        output.WriteRawTag(88);
        output.WriteBool(IsApiUse);
      }
      if (SubType.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(SubType);
      }
      if (ModelVersion.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(ModelVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      size += apiPackPool_.CalculateSize(_repeated_apiPackPool_codec);
      if (EventTheme != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EventTheme);
      }
      if (IsApiUse != false) {
        size += 1 + 1;
      }
      if (Label != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Label);
      }
      if (ModelVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModelVersion);
      }
      if (PackGrpId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PackGrpId);
      }
      if (Paytimes != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Paytimes);
      }
      if (SubType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SubType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EnergyPack other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      apiPackPool_.Add(other.apiPackPool_);
      if (other.EventTheme != 0) {
        EventTheme = other.EventTheme;
      }
      if (other.IsApiUse != false) {
        IsApiUse = other.IsApiUse;
      }
      if (other.Label != 0) {
        Label = other.Label;
      }
      if (other.ModelVersion.Length != 0) {
        ModelVersion = other.ModelVersion;
      }
      if (other.PackGrpId != 0) {
        PackGrpId = other.PackGrpId;
      }
      if (other.Paytimes != 0) {
        Paytimes = other.Paytimes;
      }
      if (other.SubType.Length != 0) {
        SubType = other.SubType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 24: {
            Paytimes = input.ReadInt32();
            break;
          }
          case 56: {
            EventTheme = input.ReadInt32();
            break;
          }
          case 64: {
            PackGrpId = input.ReadInt32();
            break;
          }
          case 72: {
            Label = input.ReadInt32();
            break;
          }
          case 82:
          case 80: {
            apiPackPool_.AddEntriesFrom(input, _repeated_apiPackPool_codec);
            break;
          }
          case 88: {
            IsApiUse = input.ReadBool();
            break;
          }
          case 98: {
            SubType = input.ReadString();
            break;
          }
          case 106: {
            ModelVersion = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 24: {
            Paytimes = input.ReadInt32();
            break;
          }
          case 56: {
            EventTheme = input.ReadInt32();
            break;
          }
          case 64: {
            PackGrpId = input.ReadInt32();
            break;
          }
          case 72: {
            Label = input.ReadInt32();
            break;
          }
          case 82:
          case 80: {
            apiPackPool_.AddEntriesFrom(ref input, _repeated_apiPackPool_codec);
            break;
          }
          case 88: {
            IsApiUse = input.ReadBool();
            break;
          }
          case 98: {
            SubType = input.ReadString();
            break;
          }
          case 106: {
            ModelVersion = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EnergyPackMapABValue : pb::IMessage<EnergyPackMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EnergyPackMapABValue> _parser = new pb::MessageParser<EnergyPackMapABValue>(() => new EnergyPackMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EnergyPackMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EnergyPackConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnergyPackMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnergyPackMapABValue(EnergyPackMapABValue other) : this() {
      energyPackMap_ = other.energyPackMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnergyPackMapABValue Clone() {
      return new EnergyPackMapABValue(this);
    }

    /// <summary>Field number for the "EnergyPackMap" field.</summary>
    public const int EnergyPackMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EnergyPack>.Codec _map_energyPackMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EnergyPack>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EnergyPack.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EnergyPack> energyPackMap_ = new pbc::MapField<int, global::fat.rawdata.EnergyPack>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EnergyPack> EnergyPackMap {
      get { return energyPackMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EnergyPackMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EnergyPackMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EnergyPackMap.Equals(other.EnergyPackMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EnergyPackMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      energyPackMap_.WriteTo(output, _map_energyPackMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      energyPackMap_.WriteTo(ref output, _map_energyPackMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += energyPackMap_.CalculateSize(_map_energyPackMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EnergyPackMapABValue other) {
      if (other == null) {
        return;
      }
      energyPackMap_.Add(other.energyPackMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            energyPackMap_.AddEntriesFrom(input, _map_energyPackMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            energyPackMap_.AddEntriesFrom(ref input, _map_energyPackMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EnergyPackConf : pb::IMessage<EnergyPackConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EnergyPackConf> _parser = new pb::MessageParser<EnergyPackConf>(() => new EnergyPackConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EnergyPackConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EnergyPackConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnergyPackConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnergyPackConf(EnergyPackConf other) : this() {
      energyPackMap_ = other.energyPackMap_.Clone();
      energyPackMapAB_ = other.energyPackMapAB_.Clone();
      energyPackMapABPatch_ = other.energyPackMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnergyPackConf Clone() {
      return new EnergyPackConf(this);
    }

    /// <summary>Field number for the "EnergyPackMap" field.</summary>
    public const int EnergyPackMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EnergyPack>.Codec _map_energyPackMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EnergyPack>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EnergyPack.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EnergyPack> energyPackMap_ = new pbc::MapField<int, global::fat.rawdata.EnergyPack>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EnergyPack> EnergyPackMap {
      get { return energyPackMap_; }
    }

    /// <summary>Field number for the "EnergyPackMapAB" field.</summary>
    public const int EnergyPackMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EnergyPackMapABValue>.Codec _map_energyPackMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EnergyPackMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EnergyPackMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EnergyPackMapABValue> energyPackMapAB_ = new pbc::MapField<string, global::fat.rawdata.EnergyPackMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EnergyPackMapABValue> EnergyPackMapAB {
      get { return energyPackMapAB_; }
    }

    /// <summary>Field number for the "EnergyPackMapABPatch" field.</summary>
    public const int EnergyPackMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EnergyPackMapABValue>.Codec _map_energyPackMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EnergyPackMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EnergyPackMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EnergyPackMapABValue> energyPackMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EnergyPackMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EnergyPackMapABValue> EnergyPackMapABPatch {
      get { return energyPackMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EnergyPackConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EnergyPackConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EnergyPackMap.Equals(other.EnergyPackMap)) return false;
      if (!EnergyPackMapAB.Equals(other.EnergyPackMapAB)) return false;
      if (!EnergyPackMapABPatch.Equals(other.EnergyPackMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EnergyPackMap.GetHashCode();
      hash ^= EnergyPackMapAB.GetHashCode();
      hash ^= EnergyPackMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      energyPackMap_.WriteTo(output, _map_energyPackMap_codec);
      energyPackMapAB_.WriteTo(output, _map_energyPackMapAB_codec);
      energyPackMapABPatch_.WriteTo(output, _map_energyPackMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      energyPackMap_.WriteTo(ref output, _map_energyPackMap_codec);
      energyPackMapAB_.WriteTo(ref output, _map_energyPackMapAB_codec);
      energyPackMapABPatch_.WriteTo(ref output, _map_energyPackMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += energyPackMap_.CalculateSize(_map_energyPackMap_codec);
      size += energyPackMapAB_.CalculateSize(_map_energyPackMapAB_codec);
      size += energyPackMapABPatch_.CalculateSize(_map_energyPackMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EnergyPackConf other) {
      if (other == null) {
        return;
      }
      energyPackMap_.Add(other.energyPackMap_);
      energyPackMapAB_.Add(other.energyPackMapAB_);
      energyPackMapABPatch_.Add(other.energyPackMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            energyPackMap_.AddEntriesFrom(input, _map_energyPackMap_codec);
            break;
          }
          case 18: {
            energyPackMapAB_.AddEntriesFrom(input, _map_energyPackMapAB_codec);
            break;
          }
          case 26: {
            energyPackMapABPatch_.AddEntriesFrom(input, _map_energyPackMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            energyPackMap_.AddEntriesFrom(ref input, _map_energyPackMap_codec);
            break;
          }
          case 18: {
            energyPackMapAB_.AddEntriesFrom(ref input, _map_energyPackMapAB_codec);
            break;
          }
          case 26: {
            energyPackMapABPatch_.AddEntriesFrom(ref input, _map_energyPackMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
