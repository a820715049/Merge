// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EnergyBoostConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EnergyBoostConf.proto</summary>
  public static partial class EnergyBoostConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EnergyBoostConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EnergyBoostConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch1yYXdkYXRhL0VuZXJneUJvb3N0Q29uZi5wcm90bxIHcmF3ZGF0YSLJAQoL",
            "RW5lcmd5Qm9vc3QSCgoCaWQYASABKAUSEAoIYWN0aXZlTHYYAiABKAUSEgoK",
            "Ym9vc3RMZXZlbBgDIAEoBRIRCglib29zdFJhdGUYBCABKAUSDQoFZ3VpZGUY",
            "BSABKAUSEgoKaXNFeGNoYW5nZRgKIAEoCBIRCglpc1Bhc3NpdmUYBiABKAgS",
            "EgoKaXNUb2FzdE1heBgIIAEoCBIYChByZXF1aXJlRW5lcmd5TnVtGAcgASgF",
            "EhEKCXJld2FyZE51bRgJIAEoBSKwAQoVRW5lcmd5Qm9vc3RNYXBBQlZhbHVl",
            "EkoKDkVuZXJneUJvb3N0TWFwGAEgAygLMjIucmF3ZGF0YS5FbmVyZ3lCb29z",
            "dE1hcEFCVmFsdWUuRW5lcmd5Qm9vc3RNYXBFbnRyeRpLChNFbmVyZ3lCb29z",
            "dE1hcEVudHJ5EgsKA2tleRgBIAEoBRIjCgV2YWx1ZRgCIAEoCzIULnJhd2Rh",
            "dGEuRW5lcmd5Qm9vc3Q6AjgBIvkDCg9FbmVyZ3lCb29zdENvbmYSRAoORW5l",
            "cmd5Qm9vc3RNYXAYASADKAsyLC5yYXdkYXRhLkVuZXJneUJvb3N0Q29uZi5F",
            "bmVyZ3lCb29zdE1hcEVudHJ5EkgKEEVuZXJneUJvb3N0TWFwQUIYAiADKAsy",
            "Li5yYXdkYXRhLkVuZXJneUJvb3N0Q29uZi5FbmVyZ3lCb29zdE1hcEFCRW50",
            "cnkSUgoVRW5lcmd5Qm9vc3RNYXBBQlBhdGNoGAMgAygLMjMucmF3ZGF0YS5F",
            "bmVyZ3lCb29zdENvbmYuRW5lcmd5Qm9vc3RNYXBBQlBhdGNoRW50cnkaSwoT",
            "RW5lcmd5Qm9vc3RNYXBFbnRyeRILCgNrZXkYASABKAUSIwoFdmFsdWUYAiAB",
            "KAsyFC5yYXdkYXRhLkVuZXJneUJvb3N0OgI4ARpXChVFbmVyZ3lCb29zdE1h",
            "cEFCRW50cnkSCwoDa2V5GAEgASgJEi0KBXZhbHVlGAIgASgLMh4ucmF3ZGF0",
            "YS5FbmVyZ3lCb29zdE1hcEFCVmFsdWU6AjgBGlwKGkVuZXJneUJvb3N0TWFw",
            "QUJQYXRjaEVudHJ5EgsKA2tleRgBIAEoCRItCgV2YWx1ZRgCIAEoCzIeLnJh",
            "d2RhdGEuRW5lcmd5Qm9vc3RNYXBBQlZhbHVlOgI4AUI9Wi1naXRsYWIuZnVu",
            "cGx1cy5pby9mYXQvY29uZi9nZW4vZ29sYW5nL3Jhd2RhdGGqAgtmYXQucmF3",
            "ZGF0YWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EnergyBoost), global::fat.rawdata.EnergyBoost.Parser, new[]{ "Id", "ActiveLv", "BoostLevel", "BoostRate", "Guide", "IsExchange", "IsPassive", "IsToastMax", "RequireEnergyNum", "RewardNum" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EnergyBoostMapABValue), global::fat.rawdata.EnergyBoostMapABValue.Parser, new[]{ "EnergyBoostMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EnergyBoostConf), global::fat.rawdata.EnergyBoostConf.Parser, new[]{ "EnergyBoostMap", "EnergyBoostMapAB", "EnergyBoostMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EnergyBoost",table="EnergyBoostMap",table_wrapper="EnergyBoostConf",map="true",map_key_type="int32",data="EnergyBoostConf")
  /// annotation@ab(table_ab="EnergyBoostMapAB",table_ab_patch="EnergyBoostMapABPatch",table_ab_value="EnergyBoostMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EnergyBoost(id="id")
  /// </summary>
  public sealed partial class EnergyBoost : pb::IMessage<EnergyBoost>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EnergyBoost> _parser = new pb::MessageParser<EnergyBoost>(() => new EnergyBoost());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EnergyBoost> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EnergyBoostConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnergyBoost() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnergyBoost(EnergyBoost other) : this() {
      id_ = other.id_;
      activeLv_ = other.activeLv_;
      boostLevel_ = other.boostLevel_;
      boostRate_ = other.boostRate_;
      guide_ = other.guide_;
      isExchange_ = other.isExchange_;
      isPassive_ = other.isPassive_;
      isToastMax_ = other.isToastMax_;
      requireEnergyNum_ = other.requireEnergyNum_;
      rewardNum_ = other.rewardNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnergyBoost Clone() {
      return new EnergyBoost(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// ID
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "activeLv" field.</summary>
    public const int ActiveLvFieldNumber = 2;
    private int activeLv_;
    /// <summary>
    /// 开启等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ActiveLv {
      get { return activeLv_; }
      set {
        activeLv_ = value;
      }
    }

    /// <summary>Field number for the "boostLevel" field.</summary>
    public const int BoostLevelFieldNumber = 3;
    private int boostLevel_;
    /// <summary>
    /// 提升等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BoostLevel {
      get { return boostLevel_; }
      set {
        boostLevel_ = value;
      }
    }

    /// <summary>Field number for the "boostRate" field.</summary>
    public const int BoostRateFieldNumber = 4;
    private int boostRate_;
    /// <summary>
    /// 消耗倍率
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BoostRate {
      get { return boostRate_; }
      set {
        boostRate_ = value;
      }
    }

    /// <summary>Field number for the "guide" field.</summary>
    public const int GuideFieldNumber = 5;
    private int guide_;
    /// <summary>
    /// 激活引导步骤
    /// （或）
    /// （GuideMerge.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Guide {
      get { return guide_; }
      set {
        guide_ = value;
      }
    }

    /// <summary>Field number for the "isExchange" field.</summary>
    public const int IsExchangeFieldNumber = 10;
    private bool isExchange_;
    /// <summary>
    /// 是否可以执行替换棋子逻辑
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsExchange {
      get { return isExchange_; }
      set {
        isExchange_ = value;
      }
    }

    /// <summary>Field number for the "isPassive" field.</summary>
    public const int IsPassiveFieldNumber = 6;
    private bool isPassive_;
    /// <summary>
    /// 是否被动启用
    /// TRUE：
    /// 适用activeLv，且需要被活动启用
    /// FALSE：
    /// 可以直接根据activeLv开启
    /// （由于目前2、4倍没有对于此字段的需求，后面有需求了再加实现逻辑）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsPassive {
      get { return isPassive_; }
      set {
        isPassive_ = value;
      }
    }

    /// <summary>Field number for the "isToastMax" field.</summary>
    public const int IsToastMaxFieldNumber = 8;
    private bool isToastMax_;
    /// <summary>
    /// 是否可以使用Max
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsToastMax {
      get { return isToastMax_; }
      set {
        isToastMax_ = value;
      }
    }

    /// <summary>Field number for the "requireEnergyNum" field.</summary>
    public const int RequireEnergyNumFieldNumber = 7;
    private int requireEnergyNum_;
    /// <summary>
    /// 开启所需体力数量
    /// （为空代表不需要体力要求）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RequireEnergyNum {
      get { return requireEnergyNum_; }
      set {
        requireEnergyNum_ = value;
      }
    }

    /// <summary>Field number for the "rewardNum" field.</summary>
    public const int RewardNumFieldNumber = 9;
    private int rewardNum_;
    /// <summary>
    /// 活动棋子掉落的数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RewardNum {
      get { return rewardNum_; }
      set {
        rewardNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EnergyBoost);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EnergyBoost other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ActiveLv != other.ActiveLv) return false;
      if (BoostLevel != other.BoostLevel) return false;
      if (BoostRate != other.BoostRate) return false;
      if (Guide != other.Guide) return false;
      if (IsExchange != other.IsExchange) return false;
      if (IsPassive != other.IsPassive) return false;
      if (IsToastMax != other.IsToastMax) return false;
      if (RequireEnergyNum != other.RequireEnergyNum) return false;
      if (RewardNum != other.RewardNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (ActiveLv != 0) hash ^= ActiveLv.GetHashCode();
      if (BoostLevel != 0) hash ^= BoostLevel.GetHashCode();
      if (BoostRate != 0) hash ^= BoostRate.GetHashCode();
      if (Guide != 0) hash ^= Guide.GetHashCode();
      if (IsExchange != false) hash ^= IsExchange.GetHashCode();
      if (IsPassive != false) hash ^= IsPassive.GetHashCode();
      if (IsToastMax != false) hash ^= IsToastMax.GetHashCode();
      if (RequireEnergyNum != 0) hash ^= RequireEnergyNum.GetHashCode();
      if (RewardNum != 0) hash ^= RewardNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (ActiveLv != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ActiveLv);
      }
      if (BoostLevel != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(BoostLevel);
      }
      if (BoostRate != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(BoostRate);
      }
      if (Guide != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Guide);
      }
      if (IsPassive != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsPassive);
      }
      if (RequireEnergyNum != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(RequireEnergyNum);
      }
      if (IsToastMax != false) {
        output.WriteRawTag(64);
        output.WriteBool(IsToastMax);
      }
      if (RewardNum != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(RewardNum);
      }
      if (IsExchange != false) {
        output.WriteRawTag(80);
        output.WriteBool(IsExchange);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (ActiveLv != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ActiveLv);
      }
      if (BoostLevel != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(BoostLevel);
      }
      if (BoostRate != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(BoostRate);
      }
      if (Guide != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Guide);
      }
      if (IsPassive != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsPassive);
      }
      if (RequireEnergyNum != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(RequireEnergyNum);
      }
      if (IsToastMax != false) {
        output.WriteRawTag(64);
        output.WriteBool(IsToastMax);
      }
      if (RewardNum != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(RewardNum);
      }
      if (IsExchange != false) {
        output.WriteRawTag(80);
        output.WriteBool(IsExchange);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (ActiveLv != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ActiveLv);
      }
      if (BoostLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BoostLevel);
      }
      if (BoostRate != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BoostRate);
      }
      if (Guide != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Guide);
      }
      if (IsExchange != false) {
        size += 1 + 1;
      }
      if (IsPassive != false) {
        size += 1 + 1;
      }
      if (IsToastMax != false) {
        size += 1 + 1;
      }
      if (RequireEnergyNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RequireEnergyNum);
      }
      if (RewardNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RewardNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EnergyBoost other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.ActiveLv != 0) {
        ActiveLv = other.ActiveLv;
      }
      if (other.BoostLevel != 0) {
        BoostLevel = other.BoostLevel;
      }
      if (other.BoostRate != 0) {
        BoostRate = other.BoostRate;
      }
      if (other.Guide != 0) {
        Guide = other.Guide;
      }
      if (other.IsExchange != false) {
        IsExchange = other.IsExchange;
      }
      if (other.IsPassive != false) {
        IsPassive = other.IsPassive;
      }
      if (other.IsToastMax != false) {
        IsToastMax = other.IsToastMax;
      }
      if (other.RequireEnergyNum != 0) {
        RequireEnergyNum = other.RequireEnergyNum;
      }
      if (other.RewardNum != 0) {
        RewardNum = other.RewardNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            ActiveLv = input.ReadInt32();
            break;
          }
          case 24: {
            BoostLevel = input.ReadInt32();
            break;
          }
          case 32: {
            BoostRate = input.ReadInt32();
            break;
          }
          case 40: {
            Guide = input.ReadInt32();
            break;
          }
          case 48: {
            IsPassive = input.ReadBool();
            break;
          }
          case 56: {
            RequireEnergyNum = input.ReadInt32();
            break;
          }
          case 64: {
            IsToastMax = input.ReadBool();
            break;
          }
          case 72: {
            RewardNum = input.ReadInt32();
            break;
          }
          case 80: {
            IsExchange = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            ActiveLv = input.ReadInt32();
            break;
          }
          case 24: {
            BoostLevel = input.ReadInt32();
            break;
          }
          case 32: {
            BoostRate = input.ReadInt32();
            break;
          }
          case 40: {
            Guide = input.ReadInt32();
            break;
          }
          case 48: {
            IsPassive = input.ReadBool();
            break;
          }
          case 56: {
            RequireEnergyNum = input.ReadInt32();
            break;
          }
          case 64: {
            IsToastMax = input.ReadBool();
            break;
          }
          case 72: {
            RewardNum = input.ReadInt32();
            break;
          }
          case 80: {
            IsExchange = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EnergyBoostMapABValue : pb::IMessage<EnergyBoostMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EnergyBoostMapABValue> _parser = new pb::MessageParser<EnergyBoostMapABValue>(() => new EnergyBoostMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EnergyBoostMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EnergyBoostConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnergyBoostMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnergyBoostMapABValue(EnergyBoostMapABValue other) : this() {
      energyBoostMap_ = other.energyBoostMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnergyBoostMapABValue Clone() {
      return new EnergyBoostMapABValue(this);
    }

    /// <summary>Field number for the "EnergyBoostMap" field.</summary>
    public const int EnergyBoostMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EnergyBoost>.Codec _map_energyBoostMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EnergyBoost>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EnergyBoost.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EnergyBoost> energyBoostMap_ = new pbc::MapField<int, global::fat.rawdata.EnergyBoost>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EnergyBoost> EnergyBoostMap {
      get { return energyBoostMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EnergyBoostMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EnergyBoostMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EnergyBoostMap.Equals(other.EnergyBoostMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EnergyBoostMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      energyBoostMap_.WriteTo(output, _map_energyBoostMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      energyBoostMap_.WriteTo(ref output, _map_energyBoostMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += energyBoostMap_.CalculateSize(_map_energyBoostMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EnergyBoostMapABValue other) {
      if (other == null) {
        return;
      }
      energyBoostMap_.Add(other.energyBoostMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            energyBoostMap_.AddEntriesFrom(input, _map_energyBoostMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            energyBoostMap_.AddEntriesFrom(ref input, _map_energyBoostMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EnergyBoostConf : pb::IMessage<EnergyBoostConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EnergyBoostConf> _parser = new pb::MessageParser<EnergyBoostConf>(() => new EnergyBoostConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EnergyBoostConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EnergyBoostConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnergyBoostConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnergyBoostConf(EnergyBoostConf other) : this() {
      energyBoostMap_ = other.energyBoostMap_.Clone();
      energyBoostMapAB_ = other.energyBoostMapAB_.Clone();
      energyBoostMapABPatch_ = other.energyBoostMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnergyBoostConf Clone() {
      return new EnergyBoostConf(this);
    }

    /// <summary>Field number for the "EnergyBoostMap" field.</summary>
    public const int EnergyBoostMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EnergyBoost>.Codec _map_energyBoostMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EnergyBoost>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EnergyBoost.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EnergyBoost> energyBoostMap_ = new pbc::MapField<int, global::fat.rawdata.EnergyBoost>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EnergyBoost> EnergyBoostMap {
      get { return energyBoostMap_; }
    }

    /// <summary>Field number for the "EnergyBoostMapAB" field.</summary>
    public const int EnergyBoostMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EnergyBoostMapABValue>.Codec _map_energyBoostMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EnergyBoostMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EnergyBoostMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EnergyBoostMapABValue> energyBoostMapAB_ = new pbc::MapField<string, global::fat.rawdata.EnergyBoostMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EnergyBoostMapABValue> EnergyBoostMapAB {
      get { return energyBoostMapAB_; }
    }

    /// <summary>Field number for the "EnergyBoostMapABPatch" field.</summary>
    public const int EnergyBoostMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EnergyBoostMapABValue>.Codec _map_energyBoostMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EnergyBoostMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EnergyBoostMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EnergyBoostMapABValue> energyBoostMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EnergyBoostMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EnergyBoostMapABValue> EnergyBoostMapABPatch {
      get { return energyBoostMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EnergyBoostConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EnergyBoostConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EnergyBoostMap.Equals(other.EnergyBoostMap)) return false;
      if (!EnergyBoostMapAB.Equals(other.EnergyBoostMapAB)) return false;
      if (!EnergyBoostMapABPatch.Equals(other.EnergyBoostMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EnergyBoostMap.GetHashCode();
      hash ^= EnergyBoostMapAB.GetHashCode();
      hash ^= EnergyBoostMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      energyBoostMap_.WriteTo(output, _map_energyBoostMap_codec);
      energyBoostMapAB_.WriteTo(output, _map_energyBoostMapAB_codec);
      energyBoostMapABPatch_.WriteTo(output, _map_energyBoostMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      energyBoostMap_.WriteTo(ref output, _map_energyBoostMap_codec);
      energyBoostMapAB_.WriteTo(ref output, _map_energyBoostMapAB_codec);
      energyBoostMapABPatch_.WriteTo(ref output, _map_energyBoostMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += energyBoostMap_.CalculateSize(_map_energyBoostMap_codec);
      size += energyBoostMapAB_.CalculateSize(_map_energyBoostMapAB_codec);
      size += energyBoostMapABPatch_.CalculateSize(_map_energyBoostMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EnergyBoostConf other) {
      if (other == null) {
        return;
      }
      energyBoostMap_.Add(other.energyBoostMap_);
      energyBoostMapAB_.Add(other.energyBoostMapAB_);
      energyBoostMapABPatch_.Add(other.energyBoostMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            energyBoostMap_.AddEntriesFrom(input, _map_energyBoostMap_codec);
            break;
          }
          case 18: {
            energyBoostMapAB_.AddEntriesFrom(input, _map_energyBoostMapAB_codec);
            break;
          }
          case 26: {
            energyBoostMapABPatch_.AddEntriesFrom(input, _map_energyBoostMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            energyBoostMap_.AddEntriesFrom(ref input, _map_energyBoostMap_codec);
            break;
          }
          case 18: {
            energyBoostMapAB_.AddEntriesFrom(ref input, _map_energyBoostMapAB_codec);
            break;
          }
          case 26: {
            energyBoostMapABPatch_.AddEntriesFrom(ref input, _map_energyBoostMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
