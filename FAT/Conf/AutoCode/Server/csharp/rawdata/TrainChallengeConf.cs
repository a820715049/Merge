// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/TrainChallengeConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/TrainChallengeConf.proto</summary>
  public static partial class TrainChallengeConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/TrainChallengeConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TrainChallengeConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiByYXdkYXRhL1RyYWluQ2hhbGxlbmdlQ29uZi5wcm90bxIHcmF3ZGF0YSJr",
            "Cg5UcmFpbkNoYWxsZW5nZRIKCgJpZBgBIAEoBRIWCg5jb25uZWN0U3Bhd25l",
            "chgCIAMoBRIYChBpbmNsdWRlTWlsZXN0b25lGAMgAygFEhsKE2luY2x1ZGVU",
            "cmFpbk1pc3Npb24YBCADKAUiwgEKGFRyYWluQ2hhbGxlbmdlTWFwQUJWYWx1",
            "ZRJTChFUcmFpbkNoYWxsZW5nZU1hcBgBIAMoCzI4LnJhd2RhdGEuVHJhaW5D",
            "aGFsbGVuZ2VNYXBBQlZhbHVlLlRyYWluQ2hhbGxlbmdlTWFwRW50cnkaUQoW",
            "VHJhaW5DaGFsbGVuZ2VNYXBFbnRyeRILCgNrZXkYASABKAUSJgoFdmFsdWUY",
            "AiABKAsyFy5yYXdkYXRhLlRyYWluQ2hhbGxlbmdlOgI4ASKpBAoSVHJhaW5D",
            "aGFsbGVuZ2VDb25mEk0KEVRyYWluQ2hhbGxlbmdlTWFwGAEgAygLMjIucmF3",
            "ZGF0YS5UcmFpbkNoYWxsZW5nZUNvbmYuVHJhaW5DaGFsbGVuZ2VNYXBFbnRy",
            "eRJRChNUcmFpbkNoYWxsZW5nZU1hcEFCGAIgAygLMjQucmF3ZGF0YS5UcmFp",
            "bkNoYWxsZW5nZUNvbmYuVHJhaW5DaGFsbGVuZ2VNYXBBQkVudHJ5ElsKGFRy",
            "YWluQ2hhbGxlbmdlTWFwQUJQYXRjaBgDIAMoCzI5LnJhd2RhdGEuVHJhaW5D",
            "aGFsbGVuZ2VDb25mLlRyYWluQ2hhbGxlbmdlTWFwQUJQYXRjaEVudHJ5GlEK",
            "FlRyYWluQ2hhbGxlbmdlTWFwRW50cnkSCwoDa2V5GAEgASgFEiYKBXZhbHVl",
            "GAIgASgLMhcucmF3ZGF0YS5UcmFpbkNoYWxsZW5nZToCOAEaXQoYVHJhaW5D",
            "aGFsbGVuZ2VNYXBBQkVudHJ5EgsKA2tleRgBIAEoCRIwCgV2YWx1ZRgCIAEo",
            "CzIhLnJhd2RhdGEuVHJhaW5DaGFsbGVuZ2VNYXBBQlZhbHVlOgI4ARpiCh1U",
            "cmFpbkNoYWxsZW5nZU1hcEFCUGF0Y2hFbnRyeRILCgNrZXkYASABKAkSMAoF",
            "dmFsdWUYAiABKAsyIS5yYXdkYXRhLlRyYWluQ2hhbGxlbmdlTWFwQUJWYWx1",
            "ZToCOAFCPVotZ2l0bGFiLmZ1bnBsdXMuaW8vZmF0L2NvbmYvZ2VuL2dvbGFu",
            "Zy9yYXdkYXRhqgILZmF0LnJhd2RhdGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.TrainChallenge), global::fat.rawdata.TrainChallenge.Parser, new[]{ "Id", "ConnectSpawner", "IncludeMilestone", "IncludeTrainMission" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.TrainChallengeMapABValue), global::fat.rawdata.TrainChallengeMapABValue.Parser, new[]{ "TrainChallengeMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.TrainChallengeConf), global::fat.rawdata.TrainChallengeConf.Parser, new[]{ "TrainChallengeMap", "TrainChallengeMapAB", "TrainChallengeMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="TrainChallenge",table="TrainChallengeMap",table_wrapper="TrainChallengeConf",map="true",map_key_type="int32",data="TrainChallengeConf")
  /// annotation@ab(table_ab="TrainChallengeMapAB",table_ab_patch="TrainChallengeMapABPatch",table_ab_value="TrainChallengeMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@TrainChallenge(id="id")
  /// </summary>
  public sealed partial class TrainChallenge : pb::IMessage<TrainChallenge>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TrainChallenge> _parser = new pb::MessageParser<TrainChallenge>(() => new TrainChallenge());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TrainChallenge> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.TrainChallengeConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrainChallenge() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrainChallenge(TrainChallenge other) : this() {
      id_ = other.id_;
      connectSpawner_ = other.connectSpawner_.Clone();
      includeMilestone_ = other.includeMilestone_.Clone();
      includeTrainMission_ = other.includeTrainMission_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrainChallenge Clone() {
      return new TrainChallenge(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 挑战id
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "connectSpawner" field.</summary>
    public const int ConnectSpawnerFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_connectSpawner_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> connectSpawner_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 使用的生成器链条ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> ConnectSpawner {
      get { return connectSpawner_; }
    }

    /// <summary>Field number for the "includeMilestone" field.</summary>
    public const int IncludeMilestoneFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_includeMilestone_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> includeMilestone_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 包含的里程碑
    /// (milestoneGroup.id)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> IncludeMilestone {
      get { return includeMilestone_; }
    }

    /// <summary>Field number for the "includeTrainMission" field.</summary>
    public const int IncludeTrainMissionFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_includeTrainMission_codec
        = pb::FieldCodec.ForInt32(34);
    private readonly pbc::RepeatedField<int> includeTrainMission_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 包含的火车
    /// (milestoneGroup.id)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> IncludeTrainMission {
      get { return includeTrainMission_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TrainChallenge);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TrainChallenge other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!connectSpawner_.Equals(other.connectSpawner_)) return false;
      if(!includeMilestone_.Equals(other.includeMilestone_)) return false;
      if(!includeTrainMission_.Equals(other.includeTrainMission_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      hash ^= connectSpawner_.GetHashCode();
      hash ^= includeMilestone_.GetHashCode();
      hash ^= includeTrainMission_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      connectSpawner_.WriteTo(output, _repeated_connectSpawner_codec);
      includeMilestone_.WriteTo(output, _repeated_includeMilestone_codec);
      includeTrainMission_.WriteTo(output, _repeated_includeTrainMission_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      connectSpawner_.WriteTo(ref output, _repeated_connectSpawner_codec);
      includeMilestone_.WriteTo(ref output, _repeated_includeMilestone_codec);
      includeTrainMission_.WriteTo(ref output, _repeated_includeTrainMission_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      size += connectSpawner_.CalculateSize(_repeated_connectSpawner_codec);
      size += includeMilestone_.CalculateSize(_repeated_includeMilestone_codec);
      size += includeTrainMission_.CalculateSize(_repeated_includeTrainMission_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TrainChallenge other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      connectSpawner_.Add(other.connectSpawner_);
      includeMilestone_.Add(other.includeMilestone_);
      includeTrainMission_.Add(other.includeTrainMission_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            connectSpawner_.AddEntriesFrom(input, _repeated_connectSpawner_codec);
            break;
          }
          case 26:
          case 24: {
            includeMilestone_.AddEntriesFrom(input, _repeated_includeMilestone_codec);
            break;
          }
          case 34:
          case 32: {
            includeTrainMission_.AddEntriesFrom(input, _repeated_includeTrainMission_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            connectSpawner_.AddEntriesFrom(ref input, _repeated_connectSpawner_codec);
            break;
          }
          case 26:
          case 24: {
            includeMilestone_.AddEntriesFrom(ref input, _repeated_includeMilestone_codec);
            break;
          }
          case 34:
          case 32: {
            includeTrainMission_.AddEntriesFrom(ref input, _repeated_includeTrainMission_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TrainChallengeMapABValue : pb::IMessage<TrainChallengeMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TrainChallengeMapABValue> _parser = new pb::MessageParser<TrainChallengeMapABValue>(() => new TrainChallengeMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TrainChallengeMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.TrainChallengeConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrainChallengeMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrainChallengeMapABValue(TrainChallengeMapABValue other) : this() {
      trainChallengeMap_ = other.trainChallengeMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrainChallengeMapABValue Clone() {
      return new TrainChallengeMapABValue(this);
    }

    /// <summary>Field number for the "TrainChallengeMap" field.</summary>
    public const int TrainChallengeMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.TrainChallenge>.Codec _map_trainChallengeMap_codec
        = new pbc::MapField<int, global::fat.rawdata.TrainChallenge>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.TrainChallenge.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.TrainChallenge> trainChallengeMap_ = new pbc::MapField<int, global::fat.rawdata.TrainChallenge>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.TrainChallenge> TrainChallengeMap {
      get { return trainChallengeMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TrainChallengeMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TrainChallengeMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!TrainChallengeMap.Equals(other.TrainChallengeMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= TrainChallengeMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      trainChallengeMap_.WriteTo(output, _map_trainChallengeMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      trainChallengeMap_.WriteTo(ref output, _map_trainChallengeMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += trainChallengeMap_.CalculateSize(_map_trainChallengeMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TrainChallengeMapABValue other) {
      if (other == null) {
        return;
      }
      trainChallengeMap_.Add(other.trainChallengeMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            trainChallengeMap_.AddEntriesFrom(input, _map_trainChallengeMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            trainChallengeMap_.AddEntriesFrom(ref input, _map_trainChallengeMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TrainChallengeConf : pb::IMessage<TrainChallengeConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TrainChallengeConf> _parser = new pb::MessageParser<TrainChallengeConf>(() => new TrainChallengeConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TrainChallengeConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.TrainChallengeConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrainChallengeConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrainChallengeConf(TrainChallengeConf other) : this() {
      trainChallengeMap_ = other.trainChallengeMap_.Clone();
      trainChallengeMapAB_ = other.trainChallengeMapAB_.Clone();
      trainChallengeMapABPatch_ = other.trainChallengeMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TrainChallengeConf Clone() {
      return new TrainChallengeConf(this);
    }

    /// <summary>Field number for the "TrainChallengeMap" field.</summary>
    public const int TrainChallengeMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.TrainChallenge>.Codec _map_trainChallengeMap_codec
        = new pbc::MapField<int, global::fat.rawdata.TrainChallenge>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.TrainChallenge.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.TrainChallenge> trainChallengeMap_ = new pbc::MapField<int, global::fat.rawdata.TrainChallenge>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.TrainChallenge> TrainChallengeMap {
      get { return trainChallengeMap_; }
    }

    /// <summary>Field number for the "TrainChallengeMapAB" field.</summary>
    public const int TrainChallengeMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.TrainChallengeMapABValue>.Codec _map_trainChallengeMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.TrainChallengeMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.TrainChallengeMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.TrainChallengeMapABValue> trainChallengeMapAB_ = new pbc::MapField<string, global::fat.rawdata.TrainChallengeMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.TrainChallengeMapABValue> TrainChallengeMapAB {
      get { return trainChallengeMapAB_; }
    }

    /// <summary>Field number for the "TrainChallengeMapABPatch" field.</summary>
    public const int TrainChallengeMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.TrainChallengeMapABValue>.Codec _map_trainChallengeMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.TrainChallengeMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.TrainChallengeMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.TrainChallengeMapABValue> trainChallengeMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.TrainChallengeMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.TrainChallengeMapABValue> TrainChallengeMapABPatch {
      get { return trainChallengeMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TrainChallengeConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TrainChallengeConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!TrainChallengeMap.Equals(other.TrainChallengeMap)) return false;
      if (!TrainChallengeMapAB.Equals(other.TrainChallengeMapAB)) return false;
      if (!TrainChallengeMapABPatch.Equals(other.TrainChallengeMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= TrainChallengeMap.GetHashCode();
      hash ^= TrainChallengeMapAB.GetHashCode();
      hash ^= TrainChallengeMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      trainChallengeMap_.WriteTo(output, _map_trainChallengeMap_codec);
      trainChallengeMapAB_.WriteTo(output, _map_trainChallengeMapAB_codec);
      trainChallengeMapABPatch_.WriteTo(output, _map_trainChallengeMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      trainChallengeMap_.WriteTo(ref output, _map_trainChallengeMap_codec);
      trainChallengeMapAB_.WriteTo(ref output, _map_trainChallengeMapAB_codec);
      trainChallengeMapABPatch_.WriteTo(ref output, _map_trainChallengeMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += trainChallengeMap_.CalculateSize(_map_trainChallengeMap_codec);
      size += trainChallengeMapAB_.CalculateSize(_map_trainChallengeMapAB_codec);
      size += trainChallengeMapABPatch_.CalculateSize(_map_trainChallengeMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TrainChallengeConf other) {
      if (other == null) {
        return;
      }
      trainChallengeMap_.Add(other.trainChallengeMap_);
      trainChallengeMapAB_.Add(other.trainChallengeMapAB_);
      trainChallengeMapABPatch_.Add(other.trainChallengeMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            trainChallengeMap_.AddEntriesFrom(input, _map_trainChallengeMap_codec);
            break;
          }
          case 18: {
            trainChallengeMapAB_.AddEntriesFrom(input, _map_trainChallengeMapAB_codec);
            break;
          }
          case 26: {
            trainChallengeMapABPatch_.AddEntriesFrom(input, _map_trainChallengeMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            trainChallengeMap_.AddEntriesFrom(ref input, _map_trainChallengeMap_codec);
            break;
          }
          case 18: {
            trainChallengeMapAB_.AddEntriesFrom(ref input, _map_trainChallengeMapAB_codec);
            break;
          }
          case 26: {
            trainChallengeMapABPatch_.AddEntriesFrom(ref input, _map_trainChallengeMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
