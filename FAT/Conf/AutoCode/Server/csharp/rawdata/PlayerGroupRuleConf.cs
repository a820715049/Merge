// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/PlayerGroupRuleConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/PlayerGroupRuleConf.proto</summary>
  public static partial class PlayerGroupRuleConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/PlayerGroupRuleConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PlayerGroupRuleConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiFyYXdkYXRhL1BsYXllckdyb3VwUnVsZUNvbmYucHJvdG8SB3Jhd2RhdGEi",
            "xgEKD1BsYXllckdyb3VwUnVsZRIPCgdjaGFubmVsGAEgASgFEj4KC2dyb3Vw",
            "RGVmaW5lGAIgAygLMikucmF3ZGF0YS5QbGF5ZXJHcm91cFJ1bGUuR3JvdXBE",
            "ZWZpbmVFbnRyeRIPCgdncm91cElkGAMgASgFEhAKCHBsYXRmb3JtGAQgAygJ",
            "EgsKA3RhZxgFIAEoCRoyChBHcm91cERlZmluZUVudHJ5EgsKA2tleRgBIAEo",
            "BRINCgV2YWx1ZRgCIAEoBToCOAEiVQobUGxheWVyR3JvdXBSdWxlU2xpY2VB",
            "QlZhbHVlEjYKFFBsYXllckdyb3VwUnVsZVNsaWNlGAEgAygLMhgucmF3ZGF0",
            "YS5QbGF5ZXJHcm91cFJ1bGUi2gMKE1BsYXllckdyb3VwUnVsZUNvbmYSNgoU",
            "UGxheWVyR3JvdXBSdWxlU2xpY2UYASADKAsyGC5yYXdkYXRhLlBsYXllckdy",
            "b3VwUnVsZRJYChZQbGF5ZXJHcm91cFJ1bGVTbGljZUFCGAIgAygLMjgucmF3",
            "ZGF0YS5QbGF5ZXJHcm91cFJ1bGVDb25mLlBsYXllckdyb3VwUnVsZVNsaWNl",
            "QUJFbnRyeRJiChtQbGF5ZXJHcm91cFJ1bGVTbGljZUFCUGF0Y2gYAyADKAsy",
            "PS5yYXdkYXRhLlBsYXllckdyb3VwUnVsZUNvbmYuUGxheWVyR3JvdXBSdWxl",
            "U2xpY2VBQlBhdGNoRW50cnkaYwobUGxheWVyR3JvdXBSdWxlU2xpY2VBQkVu",
            "dHJ5EgsKA2tleRgBIAEoCRIzCgV2YWx1ZRgCIAEoCzIkLnJhd2RhdGEuUGxh",
            "eWVyR3JvdXBSdWxlU2xpY2VBQlZhbHVlOgI4ARpoCiBQbGF5ZXJHcm91cFJ1",
            "bGVTbGljZUFCUGF0Y2hFbnRyeRILCgNrZXkYASABKAkSMwoFdmFsdWUYAiAB",
            "KAsyJC5yYXdkYXRhLlBsYXllckdyb3VwUnVsZVNsaWNlQUJWYWx1ZToCOAFC",
            "PVotZ2l0bGFiLmZ1bnBsdXMuaW8vZmF0L2NvbmYvZ2VuL2dvbGFuZy9yYXdk",
            "YXRhqgILZmF0LnJhd2RhdGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.PlayerGroupRule), global::fat.rawdata.PlayerGroupRule.Parser, new[]{ "Channel", "GroupDefine", "GroupId", "Platform", "Tag" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.PlayerGroupRuleSliceABValue), global::fat.rawdata.PlayerGroupRuleSliceABValue.Parser, new[]{ "PlayerGroupRuleSlice" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.PlayerGroupRuleConf), global::fat.rawdata.PlayerGroupRuleConf.Parser, new[]{ "PlayerGroupRuleSlice", "PlayerGroupRuleSliceAB", "PlayerGroupRuleSliceABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="PlayerGroupRule",table="PlayerGroupRuleSlice",table_wrapper="PlayerGroupRuleConf",map="false",map_key_type="",data="PlayerGroupRuleConf")
  /// annotation@ab(table_ab="PlayerGroupRuleSliceAB",table_ab_patch="PlayerGroupRuleSliceABPatch",table_ab_value="PlayerGroupRuleSliceABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// </summary>
  public sealed partial class PlayerGroupRule : pb::IMessage<PlayerGroupRule>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerGroupRule> _parser = new pb::MessageParser<PlayerGroupRule>(() => new PlayerGroupRule());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerGroupRule> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.PlayerGroupRuleConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerGroupRule() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerGroupRule(PlayerGroupRule other) : this() {
      channel_ = other.channel_;
      groupDefine_ = other.groupDefine_.Clone();
      groupId_ = other.groupId_;
      platform_ = other.platform_.Clone();
      tag_ = other.tag_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerGroupRule Clone() {
      return new PlayerGroupRule(this);
    }

    /// <summary>Field number for the "channel" field.</summary>
    public const int ChannelFieldNumber = 1;
    private int channel_;
    /// <summary>
    /// sdk channel
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Channel {
      get { return channel_; }
      set {
        channel_ = value;
      }
    }

    /// <summary>Field number for the "groupDefine" field.</summary>
    public const int GroupDefineFieldNumber = 2;
    private static readonly pbc::MapField<int, int>.Codec _map_groupDefine_codec
        = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForInt32(16, 0), 18);
    private readonly pbc::MapField<int, int> groupDefine_ = new pbc::MapField<int, int>();
    /// <summary>
    /// 使用此配置
    /// 替换原本对应测试ID的分组规则
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, int> GroupDefine {
      get { return groupDefine_; }
    }

    /// <summary>Field number for the "groupId" field.</summary>
    public const int GroupIdFieldNumber = 3;
    private int groupId_;
    /// <summary>
    /// A/B Testing
    /// 测试ID
    /// （PlayerGroup.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GroupId {
      get { return groupId_; }
      set {
        groupId_ = value;
      }
    }

    /// <summary>Field number for the "platform" field.</summary>
    public const int PlatformFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_platform_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> platform_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// ios、android、webgl（全小写）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Platform {
      get { return platform_; }
    }

    /// <summary>Field number for the "tag" field.</summary>
    public const int TagFieldNumber = 5;
    private string tag_ = "";
    /// <summary>
    /// 安卓打包时的tag
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tag {
      get { return tag_; }
      set {
        tag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerGroupRule);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerGroupRule other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Channel != other.Channel) return false;
      if (!GroupDefine.Equals(other.GroupDefine)) return false;
      if (GroupId != other.GroupId) return false;
      if(!platform_.Equals(other.platform_)) return false;
      if (Tag != other.Tag) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Channel != 0) hash ^= Channel.GetHashCode();
      hash ^= GroupDefine.GetHashCode();
      if (GroupId != 0) hash ^= GroupId.GetHashCode();
      hash ^= platform_.GetHashCode();
      if (Tag.Length != 0) hash ^= Tag.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Channel != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Channel);
      }
      groupDefine_.WriteTo(output, _map_groupDefine_codec);
      if (GroupId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(GroupId);
      }
      platform_.WriteTo(output, _repeated_platform_codec);
      if (Tag.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Tag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Channel != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Channel);
      }
      groupDefine_.WriteTo(ref output, _map_groupDefine_codec);
      if (GroupId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(GroupId);
      }
      platform_.WriteTo(ref output, _repeated_platform_codec);
      if (Tag.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Tag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Channel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Channel);
      }
      size += groupDefine_.CalculateSize(_map_groupDefine_codec);
      if (GroupId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GroupId);
      }
      size += platform_.CalculateSize(_repeated_platform_codec);
      if (Tag.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tag);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerGroupRule other) {
      if (other == null) {
        return;
      }
      if (other.Channel != 0) {
        Channel = other.Channel;
      }
      groupDefine_.Add(other.groupDefine_);
      if (other.GroupId != 0) {
        GroupId = other.GroupId;
      }
      platform_.Add(other.platform_);
      if (other.Tag.Length != 0) {
        Tag = other.Tag;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Channel = input.ReadInt32();
            break;
          }
          case 18: {
            groupDefine_.AddEntriesFrom(input, _map_groupDefine_codec);
            break;
          }
          case 24: {
            GroupId = input.ReadInt32();
            break;
          }
          case 34: {
            platform_.AddEntriesFrom(input, _repeated_platform_codec);
            break;
          }
          case 42: {
            Tag = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Channel = input.ReadInt32();
            break;
          }
          case 18: {
            groupDefine_.AddEntriesFrom(ref input, _map_groupDefine_codec);
            break;
          }
          case 24: {
            GroupId = input.ReadInt32();
            break;
          }
          case 34: {
            platform_.AddEntriesFrom(ref input, _repeated_platform_codec);
            break;
          }
          case 42: {
            Tag = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PlayerGroupRuleSliceABValue : pb::IMessage<PlayerGroupRuleSliceABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerGroupRuleSliceABValue> _parser = new pb::MessageParser<PlayerGroupRuleSliceABValue>(() => new PlayerGroupRuleSliceABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerGroupRuleSliceABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.PlayerGroupRuleConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerGroupRuleSliceABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerGroupRuleSliceABValue(PlayerGroupRuleSliceABValue other) : this() {
      playerGroupRuleSlice_ = other.playerGroupRuleSlice_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerGroupRuleSliceABValue Clone() {
      return new PlayerGroupRuleSliceABValue(this);
    }

    /// <summary>Field number for the "PlayerGroupRuleSlice" field.</summary>
    public const int PlayerGroupRuleSliceFieldNumber = 1;
    private static readonly pb::FieldCodec<global::fat.rawdata.PlayerGroupRule> _repeated_playerGroupRuleSlice_codec
        = pb::FieldCodec.ForMessage(10, global::fat.rawdata.PlayerGroupRule.Parser);
    private readonly pbc::RepeatedField<global::fat.rawdata.PlayerGroupRule> playerGroupRuleSlice_ = new pbc::RepeatedField<global::fat.rawdata.PlayerGroupRule>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::fat.rawdata.PlayerGroupRule> PlayerGroupRuleSlice {
      get { return playerGroupRuleSlice_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerGroupRuleSliceABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerGroupRuleSliceABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!playerGroupRuleSlice_.Equals(other.playerGroupRuleSlice_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= playerGroupRuleSlice_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      playerGroupRuleSlice_.WriteTo(output, _repeated_playerGroupRuleSlice_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      playerGroupRuleSlice_.WriteTo(ref output, _repeated_playerGroupRuleSlice_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += playerGroupRuleSlice_.CalculateSize(_repeated_playerGroupRuleSlice_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerGroupRuleSliceABValue other) {
      if (other == null) {
        return;
      }
      playerGroupRuleSlice_.Add(other.playerGroupRuleSlice_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            playerGroupRuleSlice_.AddEntriesFrom(input, _repeated_playerGroupRuleSlice_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            playerGroupRuleSlice_.AddEntriesFrom(ref input, _repeated_playerGroupRuleSlice_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PlayerGroupRuleConf : pb::IMessage<PlayerGroupRuleConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerGroupRuleConf> _parser = new pb::MessageParser<PlayerGroupRuleConf>(() => new PlayerGroupRuleConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerGroupRuleConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.PlayerGroupRuleConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerGroupRuleConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerGroupRuleConf(PlayerGroupRuleConf other) : this() {
      playerGroupRuleSlice_ = other.playerGroupRuleSlice_.Clone();
      playerGroupRuleSliceAB_ = other.playerGroupRuleSliceAB_.Clone();
      playerGroupRuleSliceABPatch_ = other.playerGroupRuleSliceABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerGroupRuleConf Clone() {
      return new PlayerGroupRuleConf(this);
    }

    /// <summary>Field number for the "PlayerGroupRuleSlice" field.</summary>
    public const int PlayerGroupRuleSliceFieldNumber = 1;
    private static readonly pb::FieldCodec<global::fat.rawdata.PlayerGroupRule> _repeated_playerGroupRuleSlice_codec
        = pb::FieldCodec.ForMessage(10, global::fat.rawdata.PlayerGroupRule.Parser);
    private readonly pbc::RepeatedField<global::fat.rawdata.PlayerGroupRule> playerGroupRuleSlice_ = new pbc::RepeatedField<global::fat.rawdata.PlayerGroupRule>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::fat.rawdata.PlayerGroupRule> PlayerGroupRuleSlice {
      get { return playerGroupRuleSlice_; }
    }

    /// <summary>Field number for the "PlayerGroupRuleSliceAB" field.</summary>
    public const int PlayerGroupRuleSliceABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.PlayerGroupRuleSliceABValue>.Codec _map_playerGroupRuleSliceAB_codec
        = new pbc::MapField<string, global::fat.rawdata.PlayerGroupRuleSliceABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.PlayerGroupRuleSliceABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.PlayerGroupRuleSliceABValue> playerGroupRuleSliceAB_ = new pbc::MapField<string, global::fat.rawdata.PlayerGroupRuleSliceABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.PlayerGroupRuleSliceABValue> PlayerGroupRuleSliceAB {
      get { return playerGroupRuleSliceAB_; }
    }

    /// <summary>Field number for the "PlayerGroupRuleSliceABPatch" field.</summary>
    public const int PlayerGroupRuleSliceABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.PlayerGroupRuleSliceABValue>.Codec _map_playerGroupRuleSliceABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.PlayerGroupRuleSliceABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.PlayerGroupRuleSliceABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.PlayerGroupRuleSliceABValue> playerGroupRuleSliceABPatch_ = new pbc::MapField<string, global::fat.rawdata.PlayerGroupRuleSliceABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.PlayerGroupRuleSliceABValue> PlayerGroupRuleSliceABPatch {
      get { return playerGroupRuleSliceABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerGroupRuleConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerGroupRuleConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!playerGroupRuleSlice_.Equals(other.playerGroupRuleSlice_)) return false;
      if (!PlayerGroupRuleSliceAB.Equals(other.PlayerGroupRuleSliceAB)) return false;
      if (!PlayerGroupRuleSliceABPatch.Equals(other.PlayerGroupRuleSliceABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= playerGroupRuleSlice_.GetHashCode();
      hash ^= PlayerGroupRuleSliceAB.GetHashCode();
      hash ^= PlayerGroupRuleSliceABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      playerGroupRuleSlice_.WriteTo(output, _repeated_playerGroupRuleSlice_codec);
      playerGroupRuleSliceAB_.WriteTo(output, _map_playerGroupRuleSliceAB_codec);
      playerGroupRuleSliceABPatch_.WriteTo(output, _map_playerGroupRuleSliceABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      playerGroupRuleSlice_.WriteTo(ref output, _repeated_playerGroupRuleSlice_codec);
      playerGroupRuleSliceAB_.WriteTo(ref output, _map_playerGroupRuleSliceAB_codec);
      playerGroupRuleSliceABPatch_.WriteTo(ref output, _map_playerGroupRuleSliceABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += playerGroupRuleSlice_.CalculateSize(_repeated_playerGroupRuleSlice_codec);
      size += playerGroupRuleSliceAB_.CalculateSize(_map_playerGroupRuleSliceAB_codec);
      size += playerGroupRuleSliceABPatch_.CalculateSize(_map_playerGroupRuleSliceABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerGroupRuleConf other) {
      if (other == null) {
        return;
      }
      playerGroupRuleSlice_.Add(other.playerGroupRuleSlice_);
      playerGroupRuleSliceAB_.Add(other.playerGroupRuleSliceAB_);
      playerGroupRuleSliceABPatch_.Add(other.playerGroupRuleSliceABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            playerGroupRuleSlice_.AddEntriesFrom(input, _repeated_playerGroupRuleSlice_codec);
            break;
          }
          case 18: {
            playerGroupRuleSliceAB_.AddEntriesFrom(input, _map_playerGroupRuleSliceAB_codec);
            break;
          }
          case 26: {
            playerGroupRuleSliceABPatch_.AddEntriesFrom(input, _map_playerGroupRuleSliceABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            playerGroupRuleSlice_.AddEntriesFrom(ref input, _repeated_playerGroupRuleSlice_codec);
            break;
          }
          case 18: {
            playerGroupRuleSliceAB_.AddEntriesFrom(ref input, _map_playerGroupRuleSliceAB_codec);
            break;
          }
          case 26: {
            playerGroupRuleSliceABPatch_.AddEntriesFrom(ref input, _map_playerGroupRuleSliceABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
