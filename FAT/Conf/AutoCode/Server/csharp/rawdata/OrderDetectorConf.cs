// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/OrderDetectorConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/OrderDetectorConf.proto</summary>
  public static partial class OrderDetectorConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/OrderDetectorConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static OrderDetectorConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch9yYXdkYXRhL09yZGVyRGV0ZWN0b3JDb25mLnByb3RvEgdyYXdkYXRhIvgC",
            "Cg1PcmRlckRldGVjdG9yEgoKAmlkGAEgASgFEhQKDGFjdGl2ZUl0ZW1JZBgC",
            "IAMoBRITCgthY3RpdmVMZXZlbBgDIAEoBRIVCg1hY3RpdmVPcmRlcklkGAQg",
            "AygFEg8KB2JvYXJkSWQYBSABKAUSPgoMZGV0ZWN0SXRlbUlkGAYgAygLMigu",
            "cmF3ZGF0YS5PcmRlckRldGVjdG9yLkRldGVjdEl0ZW1JZEVudHJ5EhQKDGRp",
            "c3BsYXlMZXZlbBgHIAEoBRIVCg1yZXF1aXJlSXRlbUlkGAggAygFEg4KBnJl",
            "d2FyZBgJIAMoCRIOCgZyb2xlSWQYCiABKAUSFgoOc2h1dGRvd25JdGVtSWQY",
            "CyADKAUSFQoNc2h1dGRvd25MZXZlbBgMIAEoBRIXCg9zaHV0ZG93bk9yZGVy",
            "SWQYDSADKAUaMwoRRGV0ZWN0SXRlbUlkRW50cnkSCwoDa2V5GAEgASgFEg0K",
            "BXZhbHVlGAIgASgFOgI4ASK8AQoXT3JkZXJEZXRlY3Rvck1hcEFCVmFsdWUS",
            "UAoQT3JkZXJEZXRlY3Rvck1hcBgBIAMoCzI2LnJhd2RhdGEuT3JkZXJEZXRl",
            "Y3Rvck1hcEFCVmFsdWUuT3JkZXJEZXRlY3Rvck1hcEVudHJ5Gk8KFU9yZGVy",
            "RGV0ZWN0b3JNYXBFbnRyeRILCgNrZXkYASABKAUSJQoFdmFsdWUYAiABKAsy",
            "Fi5yYXdkYXRhLk9yZGVyRGV0ZWN0b3I6AjgBIpkEChFPcmRlckRldGVjdG9y",
            "Q29uZhJKChBPcmRlckRldGVjdG9yTWFwGAEgAygLMjAucmF3ZGF0YS5PcmRl",
            "ckRldGVjdG9yQ29uZi5PcmRlckRldGVjdG9yTWFwRW50cnkSTgoST3JkZXJE",
            "ZXRlY3Rvck1hcEFCGAIgAygLMjIucmF3ZGF0YS5PcmRlckRldGVjdG9yQ29u",
            "Zi5PcmRlckRldGVjdG9yTWFwQUJFbnRyeRJYChdPcmRlckRldGVjdG9yTWFw",
            "QUJQYXRjaBgDIAMoCzI3LnJhd2RhdGEuT3JkZXJEZXRlY3RvckNvbmYuT3Jk",
            "ZXJEZXRlY3Rvck1hcEFCUGF0Y2hFbnRyeRpPChVPcmRlckRldGVjdG9yTWFw",
            "RW50cnkSCwoDa2V5GAEgASgFEiUKBXZhbHVlGAIgASgLMhYucmF3ZGF0YS5P",
            "cmRlckRldGVjdG9yOgI4ARpbChdPcmRlckRldGVjdG9yTWFwQUJFbnRyeRIL",
            "CgNrZXkYASABKAkSLwoFdmFsdWUYAiABKAsyIC5yYXdkYXRhLk9yZGVyRGV0",
            "ZWN0b3JNYXBBQlZhbHVlOgI4ARpgChxPcmRlckRldGVjdG9yTWFwQUJQYXRj",
            "aEVudHJ5EgsKA2tleRgBIAEoCRIvCgV2YWx1ZRgCIAEoCzIgLnJhd2RhdGEu",
            "T3JkZXJEZXRlY3Rvck1hcEFCVmFsdWU6AjgBQj1aLWdpdGxhYi5mdW5wbHVz",
            "LmlvL2ZhdC9jb25mL2dlbi9nb2xhbmcvcmF3ZGF0YaoCC2ZhdC5yYXdkYXRh",
            "YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.OrderDetector), global::fat.rawdata.OrderDetector.Parser, new[]{ "Id", "ActiveItemId", "ActiveLevel", "ActiveOrderId", "BoardId", "DetectItemId", "DisplayLevel", "RequireItemId", "Reward", "RoleId", "ShutdownItemId", "ShutdownLevel", "ShutdownOrderId" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.OrderDetectorMapABValue), global::fat.rawdata.OrderDetectorMapABValue.Parser, new[]{ "OrderDetectorMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.OrderDetectorConf), global::fat.rawdata.OrderDetectorConf.Parser, new[]{ "OrderDetectorMap", "OrderDetectorMapAB", "OrderDetectorMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="OrderDetector",table="OrderDetectorMap",table_wrapper="OrderDetectorConf",map="true",map_key_type="int32",data="OrderDetectorConf")
  /// annotation@ab(table_ab="OrderDetectorMapAB",table_ab_patch="OrderDetectorMapABPatch",table_ab_value="OrderDetectorMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@OrderDetector(id="id")
  /// </summary>
  public sealed partial class OrderDetector : pb::IMessage<OrderDetector>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OrderDetector> _parser = new pb::MessageParser<OrderDetector>(() => new OrderDetector());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OrderDetector> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.OrderDetectorConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderDetector() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderDetector(OrderDetector other) : this() {
      id_ = other.id_;
      activeItemId_ = other.activeItemId_.Clone();
      activeLevel_ = other.activeLevel_;
      activeOrderId_ = other.activeOrderId_.Clone();
      boardId_ = other.boardId_;
      detectItemId_ = other.detectItemId_.Clone();
      displayLevel_ = other.displayLevel_;
      requireItemId_ = other.requireItemId_.Clone();
      reward_ = other.reward_.Clone();
      roleId_ = other.roleId_;
      shutdownItemId_ = other.shutdownItemId_.Clone();
      shutdownLevel_ = other.shutdownLevel_;
      shutdownOrderId_ = other.shutdownOrderId_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderDetector Clone() {
      return new OrderDetector(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 棋盘检测规则ID
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "activeItemId" field.</summary>
    public const int ActiveItemIdFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_activeItemId_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> activeItemId_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 激活棋子ID
    /// （且）
    /// （ObjBasic.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> ActiveItemId {
      get { return activeItemId_; }
    }

    /// <summary>Field number for the "activeLevel" field.</summary>
    public const int ActiveLevelFieldNumber = 3;
    private int activeLevel_;
    /// <summary>
    /// 激活等级
    /// 先激活
    /// 后关闭
    /// （且）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ActiveLevel {
      get { return activeLevel_; }
      set {
        activeLevel_ = value;
      }
    }

    /// <summary>Field number for the "activeOrderId" field.</summary>
    public const int ActiveOrderIdFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_activeOrderId_codec
        = pb::FieldCodec.ForInt32(34);
    private readonly pbc::RepeatedField<int> activeOrderId_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 激活订单ID
    /// （且）
    /// （OrderCommon.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> ActiveOrderId {
      get { return activeOrderId_; }
    }

    /// <summary>Field number for the "boardId" field.</summary>
    public const int BoardIdFieldNumber = 5;
    private int boardId_;
    /// <summary>
    /// 所属棋盘ID
    /// （MergeBoard.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BoardId {
      get { return boardId_; }
      set {
        boardId_ = value;
      }
    }

    /// <summary>Field number for the "detectItemId" field.</summary>
    public const int DetectItemIdFieldNumber = 6;
    private static readonly pbc::MapField<int, int>.Codec _map_detectItemId_codec
        = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForInt32(16, 0), 50);
    private readonly pbc::MapField<int, int> detectItemId_ = new pbc::MapField<int, int>();
    /// <summary>
    /// 检测物品
    /// {ObjBasic.id:数量}
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, int> DetectItemId {
      get { return detectItemId_; }
    }

    /// <summary>Field number for the "displayLevel" field.</summary>
    public const int DisplayLevelFieldNumber = 7;
    private int displayLevel_;
    /// <summary>
    /// 订单展示等级
    /// 未到达时
    /// 仅能看到等级限制
    /// 且无法完成订单
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DisplayLevel {
      get { return displayLevel_; }
      set {
        displayLevel_ = value;
      }
    }

    /// <summary>Field number for the "requireItemId" field.</summary>
    public const int RequireItemIdFieldNumber = 8;
    private static readonly pb::FieldCodec<int> _repeated_requireItemId_codec
        = pb::FieldCodec.ForInt32(66);
    private readonly pbc::RepeatedField<int> requireItemId_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 所需物品
    /// （ObjBasic.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> RequireItemId {
      get { return requireItemId_; }
    }

    /// <summary>Field number for the "reward" field.</summary>
    public const int RewardFieldNumber = 9;
    private static readonly pb::FieldCodec<string> _repeated_reward_codec
        = pb::FieldCodec.ForString(74);
    private readonly pbc::RepeatedField<string> reward_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 奖励
    /// （ObjBasic.id:数量:计算方式,ObjBasic.id:数量:计算方式）
    /// 参数3计算方式规则如下：
    /// 0 = 数量
    /// 1 = 数量*（等级系数/100）*（实际难度/100），RoundCoin取整
    /// 2 = 数量*（等级系数/100）*（实际难度/100），RoundTool取工具
    /// 3 = 数量*（等级系数/100），RoundCoin取整
    /// 4 = 数量*（等级系数/100），RoundTool取工具
    /// 5 = 数量*（实际难度/100），RoundCoin取整
    /// 6 = 数量*（实际难度/100），RoundTool取工具
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Reward {
      get { return reward_; }
    }

    /// <summary>Field number for the "roleId" field.</summary>
    public const int RoleIdFieldNumber = 10;
    private int roleId_;
    /// <summary>
    /// 订单角色形象
    /// （0 = 随机角色）
    /// （NpcConfig.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RoleId {
      get { return roleId_; }
      set {
        roleId_ = value;
      }
    }

    /// <summary>Field number for the "shutdownItemId" field.</summary>
    public const int ShutdownItemIdFieldNumber = 11;
    private static readonly pb::FieldCodec<int> _repeated_shutdownItemId_codec
        = pb::FieldCodec.ForInt32(90);
    private readonly pbc::RepeatedField<int> shutdownItemId_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 关闭棋子ID
    /// （或）
    /// （ObjBasic.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> ShutdownItemId {
      get { return shutdownItemId_; }
    }

    /// <summary>Field number for the "shutdownLevel" field.</summary>
    public const int ShutdownLevelFieldNumber = 12;
    private int shutdownLevel_;
    /// <summary>
    /// 关闭等级
    /// 先激活
    /// 后关闭
    /// （或）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ShutdownLevel {
      get { return shutdownLevel_; }
      set {
        shutdownLevel_ = value;
      }
    }

    /// <summary>Field number for the "shutdownOrderId" field.</summary>
    public const int ShutdownOrderIdFieldNumber = 13;
    private static readonly pb::FieldCodec<int> _repeated_shutdownOrderId_codec
        = pb::FieldCodec.ForInt32(106);
    private readonly pbc::RepeatedField<int> shutdownOrderId_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 关闭订单ID
    /// （或）
    /// （OrderCommon.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> ShutdownOrderId {
      get { return shutdownOrderId_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OrderDetector);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OrderDetector other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!activeItemId_.Equals(other.activeItemId_)) return false;
      if (ActiveLevel != other.ActiveLevel) return false;
      if(!activeOrderId_.Equals(other.activeOrderId_)) return false;
      if (BoardId != other.BoardId) return false;
      if (!DetectItemId.Equals(other.DetectItemId)) return false;
      if (DisplayLevel != other.DisplayLevel) return false;
      if(!requireItemId_.Equals(other.requireItemId_)) return false;
      if(!reward_.Equals(other.reward_)) return false;
      if (RoleId != other.RoleId) return false;
      if(!shutdownItemId_.Equals(other.shutdownItemId_)) return false;
      if (ShutdownLevel != other.ShutdownLevel) return false;
      if(!shutdownOrderId_.Equals(other.shutdownOrderId_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      hash ^= activeItemId_.GetHashCode();
      if (ActiveLevel != 0) hash ^= ActiveLevel.GetHashCode();
      hash ^= activeOrderId_.GetHashCode();
      if (BoardId != 0) hash ^= BoardId.GetHashCode();
      hash ^= DetectItemId.GetHashCode();
      if (DisplayLevel != 0) hash ^= DisplayLevel.GetHashCode();
      hash ^= requireItemId_.GetHashCode();
      hash ^= reward_.GetHashCode();
      if (RoleId != 0) hash ^= RoleId.GetHashCode();
      hash ^= shutdownItemId_.GetHashCode();
      if (ShutdownLevel != 0) hash ^= ShutdownLevel.GetHashCode();
      hash ^= shutdownOrderId_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      activeItemId_.WriteTo(output, _repeated_activeItemId_codec);
      if (ActiveLevel != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ActiveLevel);
      }
      activeOrderId_.WriteTo(output, _repeated_activeOrderId_codec);
      if (BoardId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(BoardId);
      }
      detectItemId_.WriteTo(output, _map_detectItemId_codec);
      if (DisplayLevel != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(DisplayLevel);
      }
      requireItemId_.WriteTo(output, _repeated_requireItemId_codec);
      reward_.WriteTo(output, _repeated_reward_codec);
      if (RoleId != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(RoleId);
      }
      shutdownItemId_.WriteTo(output, _repeated_shutdownItemId_codec);
      if (ShutdownLevel != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(ShutdownLevel);
      }
      shutdownOrderId_.WriteTo(output, _repeated_shutdownOrderId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      activeItemId_.WriteTo(ref output, _repeated_activeItemId_codec);
      if (ActiveLevel != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ActiveLevel);
      }
      activeOrderId_.WriteTo(ref output, _repeated_activeOrderId_codec);
      if (BoardId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(BoardId);
      }
      detectItemId_.WriteTo(ref output, _map_detectItemId_codec);
      if (DisplayLevel != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(DisplayLevel);
      }
      requireItemId_.WriteTo(ref output, _repeated_requireItemId_codec);
      reward_.WriteTo(ref output, _repeated_reward_codec);
      if (RoleId != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(RoleId);
      }
      shutdownItemId_.WriteTo(ref output, _repeated_shutdownItemId_codec);
      if (ShutdownLevel != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(ShutdownLevel);
      }
      shutdownOrderId_.WriteTo(ref output, _repeated_shutdownOrderId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      size += activeItemId_.CalculateSize(_repeated_activeItemId_codec);
      if (ActiveLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ActiveLevel);
      }
      size += activeOrderId_.CalculateSize(_repeated_activeOrderId_codec);
      if (BoardId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BoardId);
      }
      size += detectItemId_.CalculateSize(_map_detectItemId_codec);
      if (DisplayLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DisplayLevel);
      }
      size += requireItemId_.CalculateSize(_repeated_requireItemId_codec);
      size += reward_.CalculateSize(_repeated_reward_codec);
      if (RoleId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoleId);
      }
      size += shutdownItemId_.CalculateSize(_repeated_shutdownItemId_codec);
      if (ShutdownLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ShutdownLevel);
      }
      size += shutdownOrderId_.CalculateSize(_repeated_shutdownOrderId_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OrderDetector other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      activeItemId_.Add(other.activeItemId_);
      if (other.ActiveLevel != 0) {
        ActiveLevel = other.ActiveLevel;
      }
      activeOrderId_.Add(other.activeOrderId_);
      if (other.BoardId != 0) {
        BoardId = other.BoardId;
      }
      detectItemId_.Add(other.detectItemId_);
      if (other.DisplayLevel != 0) {
        DisplayLevel = other.DisplayLevel;
      }
      requireItemId_.Add(other.requireItemId_);
      reward_.Add(other.reward_);
      if (other.RoleId != 0) {
        RoleId = other.RoleId;
      }
      shutdownItemId_.Add(other.shutdownItemId_);
      if (other.ShutdownLevel != 0) {
        ShutdownLevel = other.ShutdownLevel;
      }
      shutdownOrderId_.Add(other.shutdownOrderId_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            activeItemId_.AddEntriesFrom(input, _repeated_activeItemId_codec);
            break;
          }
          case 24: {
            ActiveLevel = input.ReadInt32();
            break;
          }
          case 34:
          case 32: {
            activeOrderId_.AddEntriesFrom(input, _repeated_activeOrderId_codec);
            break;
          }
          case 40: {
            BoardId = input.ReadInt32();
            break;
          }
          case 50: {
            detectItemId_.AddEntriesFrom(input, _map_detectItemId_codec);
            break;
          }
          case 56: {
            DisplayLevel = input.ReadInt32();
            break;
          }
          case 66:
          case 64: {
            requireItemId_.AddEntriesFrom(input, _repeated_requireItemId_codec);
            break;
          }
          case 74: {
            reward_.AddEntriesFrom(input, _repeated_reward_codec);
            break;
          }
          case 80: {
            RoleId = input.ReadInt32();
            break;
          }
          case 90:
          case 88: {
            shutdownItemId_.AddEntriesFrom(input, _repeated_shutdownItemId_codec);
            break;
          }
          case 96: {
            ShutdownLevel = input.ReadInt32();
            break;
          }
          case 106:
          case 104: {
            shutdownOrderId_.AddEntriesFrom(input, _repeated_shutdownOrderId_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            activeItemId_.AddEntriesFrom(ref input, _repeated_activeItemId_codec);
            break;
          }
          case 24: {
            ActiveLevel = input.ReadInt32();
            break;
          }
          case 34:
          case 32: {
            activeOrderId_.AddEntriesFrom(ref input, _repeated_activeOrderId_codec);
            break;
          }
          case 40: {
            BoardId = input.ReadInt32();
            break;
          }
          case 50: {
            detectItemId_.AddEntriesFrom(ref input, _map_detectItemId_codec);
            break;
          }
          case 56: {
            DisplayLevel = input.ReadInt32();
            break;
          }
          case 66:
          case 64: {
            requireItemId_.AddEntriesFrom(ref input, _repeated_requireItemId_codec);
            break;
          }
          case 74: {
            reward_.AddEntriesFrom(ref input, _repeated_reward_codec);
            break;
          }
          case 80: {
            RoleId = input.ReadInt32();
            break;
          }
          case 90:
          case 88: {
            shutdownItemId_.AddEntriesFrom(ref input, _repeated_shutdownItemId_codec);
            break;
          }
          case 96: {
            ShutdownLevel = input.ReadInt32();
            break;
          }
          case 106:
          case 104: {
            shutdownOrderId_.AddEntriesFrom(ref input, _repeated_shutdownOrderId_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class OrderDetectorMapABValue : pb::IMessage<OrderDetectorMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OrderDetectorMapABValue> _parser = new pb::MessageParser<OrderDetectorMapABValue>(() => new OrderDetectorMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OrderDetectorMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.OrderDetectorConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderDetectorMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderDetectorMapABValue(OrderDetectorMapABValue other) : this() {
      orderDetectorMap_ = other.orderDetectorMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderDetectorMapABValue Clone() {
      return new OrderDetectorMapABValue(this);
    }

    /// <summary>Field number for the "OrderDetectorMap" field.</summary>
    public const int OrderDetectorMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.OrderDetector>.Codec _map_orderDetectorMap_codec
        = new pbc::MapField<int, global::fat.rawdata.OrderDetector>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.OrderDetector.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.OrderDetector> orderDetectorMap_ = new pbc::MapField<int, global::fat.rawdata.OrderDetector>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.OrderDetector> OrderDetectorMap {
      get { return orderDetectorMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OrderDetectorMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OrderDetectorMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!OrderDetectorMap.Equals(other.OrderDetectorMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= OrderDetectorMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      orderDetectorMap_.WriteTo(output, _map_orderDetectorMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      orderDetectorMap_.WriteTo(ref output, _map_orderDetectorMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += orderDetectorMap_.CalculateSize(_map_orderDetectorMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OrderDetectorMapABValue other) {
      if (other == null) {
        return;
      }
      orderDetectorMap_.Add(other.orderDetectorMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            orderDetectorMap_.AddEntriesFrom(input, _map_orderDetectorMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            orderDetectorMap_.AddEntriesFrom(ref input, _map_orderDetectorMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class OrderDetectorConf : pb::IMessage<OrderDetectorConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OrderDetectorConf> _parser = new pb::MessageParser<OrderDetectorConf>(() => new OrderDetectorConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OrderDetectorConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.OrderDetectorConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderDetectorConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderDetectorConf(OrderDetectorConf other) : this() {
      orderDetectorMap_ = other.orderDetectorMap_.Clone();
      orderDetectorMapAB_ = other.orderDetectorMapAB_.Clone();
      orderDetectorMapABPatch_ = other.orderDetectorMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderDetectorConf Clone() {
      return new OrderDetectorConf(this);
    }

    /// <summary>Field number for the "OrderDetectorMap" field.</summary>
    public const int OrderDetectorMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.OrderDetector>.Codec _map_orderDetectorMap_codec
        = new pbc::MapField<int, global::fat.rawdata.OrderDetector>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.OrderDetector.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.OrderDetector> orderDetectorMap_ = new pbc::MapField<int, global::fat.rawdata.OrderDetector>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.OrderDetector> OrderDetectorMap {
      get { return orderDetectorMap_; }
    }

    /// <summary>Field number for the "OrderDetectorMapAB" field.</summary>
    public const int OrderDetectorMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.OrderDetectorMapABValue>.Codec _map_orderDetectorMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.OrderDetectorMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.OrderDetectorMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.OrderDetectorMapABValue> orderDetectorMapAB_ = new pbc::MapField<string, global::fat.rawdata.OrderDetectorMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.OrderDetectorMapABValue> OrderDetectorMapAB {
      get { return orderDetectorMapAB_; }
    }

    /// <summary>Field number for the "OrderDetectorMapABPatch" field.</summary>
    public const int OrderDetectorMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.OrderDetectorMapABValue>.Codec _map_orderDetectorMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.OrderDetectorMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.OrderDetectorMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.OrderDetectorMapABValue> orderDetectorMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.OrderDetectorMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.OrderDetectorMapABValue> OrderDetectorMapABPatch {
      get { return orderDetectorMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OrderDetectorConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OrderDetectorConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!OrderDetectorMap.Equals(other.OrderDetectorMap)) return false;
      if (!OrderDetectorMapAB.Equals(other.OrderDetectorMapAB)) return false;
      if (!OrderDetectorMapABPatch.Equals(other.OrderDetectorMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= OrderDetectorMap.GetHashCode();
      hash ^= OrderDetectorMapAB.GetHashCode();
      hash ^= OrderDetectorMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      orderDetectorMap_.WriteTo(output, _map_orderDetectorMap_codec);
      orderDetectorMapAB_.WriteTo(output, _map_orderDetectorMapAB_codec);
      orderDetectorMapABPatch_.WriteTo(output, _map_orderDetectorMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      orderDetectorMap_.WriteTo(ref output, _map_orderDetectorMap_codec);
      orderDetectorMapAB_.WriteTo(ref output, _map_orderDetectorMapAB_codec);
      orderDetectorMapABPatch_.WriteTo(ref output, _map_orderDetectorMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += orderDetectorMap_.CalculateSize(_map_orderDetectorMap_codec);
      size += orderDetectorMapAB_.CalculateSize(_map_orderDetectorMapAB_codec);
      size += orderDetectorMapABPatch_.CalculateSize(_map_orderDetectorMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OrderDetectorConf other) {
      if (other == null) {
        return;
      }
      orderDetectorMap_.Add(other.orderDetectorMap_);
      orderDetectorMapAB_.Add(other.orderDetectorMapAB_);
      orderDetectorMapABPatch_.Add(other.orderDetectorMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            orderDetectorMap_.AddEntriesFrom(input, _map_orderDetectorMap_codec);
            break;
          }
          case 18: {
            orderDetectorMapAB_.AddEntriesFrom(input, _map_orderDetectorMapAB_codec);
            break;
          }
          case 26: {
            orderDetectorMapABPatch_.AddEntriesFrom(input, _map_orderDetectorMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            orderDetectorMap_.AddEntriesFrom(ref input, _map_orderDetectorMap_codec);
            break;
          }
          case 18: {
            orderDetectorMapAB_.AddEntriesFrom(ref input, _map_orderDetectorMapAB_codec);
            break;
          }
          case 26: {
            orderDetectorMapABPatch_.AddEntriesFrom(ref input, _map_orderDetectorMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
