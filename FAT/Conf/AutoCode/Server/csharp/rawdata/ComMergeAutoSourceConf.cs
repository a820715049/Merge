// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/ComMergeAutoSourceConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/ComMergeAutoSourceConf.proto</summary>
  public static partial class ComMergeAutoSourceConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/ComMergeAutoSourceConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ComMergeAutoSourceConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiRyYXdkYXRhL0NvbU1lcmdlQXV0b1NvdXJjZUNvbmYucHJvdG8SB3Jhd2Rh",
            "dGEisgQKEkNvbU1lcmdlQXV0b1NvdXJjZRIKCgJpZBgBIAEoBRIOCgZfdGFn",
            "c18YAiADKAkSFgoOYXV0b1ZhbmlzaFRpbWUYAyABKAUSEAoIZGVhZEl0ZW0Y",
            "BCABKAUSOQoHZGllSW50bxgQIAMoCzIoLnJhd2RhdGEuQ29tTWVyZ2VBdXRv",
            "U291cmNlLkRpZUludG9FbnRyeRIXCg9maXJzdE91dHB1dFRpbWUYBSABKAUS",
            "DgoGZnJvemVuGAYgASgIEhMKC2lzRmlsbENsZWFyGA4gASgIEg0KBWxpbWl0",
            "GAcgASgFEhMKC291dHB1dENvdW50GA0gASgFEhIKCm91dHB1dFRpbWUYCCAB",
            "KAUSDwoHb3V0cHV0cxgJIAMoBRIUCgxvdXRwdXRzRml4ZWQYESADKAUSGAoQ",
            "b3V0cHV0c0ZpeGVkVGltZRgSIAMoBRJDCgxvdXRwdXRzVG9hc3QYDyADKAsy",
            "LS5yYXdkYXRhLkNvbU1lcmdlQXV0b1NvdXJjZS5PdXRwdXRzVG9hc3RFbnRy",
            "eRIVCg1vdXRwdXRzV2VpZ2h0GAogAygFEhAKCHNwYXduU2Z4GAsgASgJEhEK",
            "CXNwZWVkQ29zdBgMIAEoBRouCgxEaWVJbnRvRW50cnkSCwoDa2V5GAEgASgF",
            "Eg0KBXZhbHVlGAIgASgFOgI4ARozChFPdXRwdXRzVG9hc3RFbnRyeRILCgNr",
            "ZXkYASABKAUSDQoFdmFsdWUYAiABKAU6AjgBItoBChxDb21NZXJnZUF1dG9T",
            "b3VyY2VNYXBBQlZhbHVlEl8KFUNvbU1lcmdlQXV0b1NvdXJjZU1hcBgBIAMo",
            "CzJALnJhd2RhdGEuQ29tTWVyZ2VBdXRvU291cmNlTWFwQUJWYWx1ZS5Db21N",
            "ZXJnZUF1dG9Tb3VyY2VNYXBFbnRyeRpZChpDb21NZXJnZUF1dG9Tb3VyY2VN",
            "YXBFbnRyeRILCgNrZXkYASABKAUSKgoFdmFsdWUYAiABKAsyGy5yYXdkYXRh",
            "LkNvbU1lcmdlQXV0b1NvdXJjZToCOAEi6QQKFkNvbU1lcmdlQXV0b1NvdXJj",
            "ZUNvbmYSWQoVQ29tTWVyZ2VBdXRvU291cmNlTWFwGAEgAygLMjoucmF3ZGF0",
            "YS5Db21NZXJnZUF1dG9Tb3VyY2VDb25mLkNvbU1lcmdlQXV0b1NvdXJjZU1h",
            "cEVudHJ5El0KF0NvbU1lcmdlQXV0b1NvdXJjZU1hcEFCGAIgAygLMjwucmF3",
            "ZGF0YS5Db21NZXJnZUF1dG9Tb3VyY2VDb25mLkNvbU1lcmdlQXV0b1NvdXJj",
            "ZU1hcEFCRW50cnkSZwocQ29tTWVyZ2VBdXRvU291cmNlTWFwQUJQYXRjaBgD",
            "IAMoCzJBLnJhd2RhdGEuQ29tTWVyZ2VBdXRvU291cmNlQ29uZi5Db21NZXJn",
            "ZUF1dG9Tb3VyY2VNYXBBQlBhdGNoRW50cnkaWQoaQ29tTWVyZ2VBdXRvU291",
            "cmNlTWFwRW50cnkSCwoDa2V5GAEgASgFEioKBXZhbHVlGAIgASgLMhsucmF3",
            "ZGF0YS5Db21NZXJnZUF1dG9Tb3VyY2U6AjgBGmUKHENvbU1lcmdlQXV0b1Nv",
            "dXJjZU1hcEFCRW50cnkSCwoDa2V5GAEgASgJEjQKBXZhbHVlGAIgASgLMiUu",
            "cmF3ZGF0YS5Db21NZXJnZUF1dG9Tb3VyY2VNYXBBQlZhbHVlOgI4ARpqCiFD",
            "b21NZXJnZUF1dG9Tb3VyY2VNYXBBQlBhdGNoRW50cnkSCwoDa2V5GAEgASgJ",
            "EjQKBXZhbHVlGAIgASgLMiUucmF3ZGF0YS5Db21NZXJnZUF1dG9Tb3VyY2VN",
            "YXBBQlZhbHVlOgI4AUI9Wi1naXRsYWIuZnVucGx1cy5pby9mYXQvY29uZi9n",
            "ZW4vZ29sYW5nL3Jhd2RhdGGqAgtmYXQucmF3ZGF0YWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.ComMergeAutoSource), global::fat.rawdata.ComMergeAutoSource.Parser, new[]{ "Id", "Tags", "AutoVanishTime", "DeadItem", "DieInto", "FirstOutputTime", "Frozen", "IsFillClear", "Limit", "OutputCount", "OutputTime", "Outputs", "OutputsFixed", "OutputsFixedTime", "OutputsToast", "OutputsWeight", "SpawnSfx", "SpeedCost" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.ComMergeAutoSourceMapABValue), global::fat.rawdata.ComMergeAutoSourceMapABValue.Parser, new[]{ "ComMergeAutoSourceMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.ComMergeAutoSourceConf), global::fat.rawdata.ComMergeAutoSourceConf.Parser, new[]{ "ComMergeAutoSourceMap", "ComMergeAutoSourceMapAB", "ComMergeAutoSourceMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="ComMergeAutoSource",table="ComMergeAutoSourceMap",table_wrapper="ComMergeAutoSourceConf",map="true",map_key_type="int32",data="ComMergeAutoSourceConf")
  /// annotation@ab(table_ab="ComMergeAutoSourceMapAB",table_ab_patch="ComMergeAutoSourceMapABPatch",table_ab_value="ComMergeAutoSourceMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@ComMergeAutoSource(id="id")
  /// </summary>
  public sealed partial class ComMergeAutoSource : pb::IMessage<ComMergeAutoSource>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ComMergeAutoSource> _parser = new pb::MessageParser<ComMergeAutoSource>(() => new ComMergeAutoSource());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ComMergeAutoSource> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.ComMergeAutoSourceConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComMergeAutoSource() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComMergeAutoSource(ComMergeAutoSource other) : this() {
      id_ = other.id_;
      Tags_ = other.Tags_.Clone();
      autoVanishTime_ = other.autoVanishTime_;
      deadItem_ = other.deadItem_;
      dieInto_ = other.dieInto_.Clone();
      firstOutputTime_ = other.firstOutputTime_;
      frozen_ = other.frozen_;
      isFillClear_ = other.isFillClear_;
      limit_ = other.limit_;
      outputCount_ = other.outputCount_;
      outputTime_ = other.outputTime_;
      outputs_ = other.outputs_.Clone();
      outputsFixed_ = other.outputsFixed_.Clone();
      outputsFixedTime_ = other.outputsFixedTime_.Clone();
      outputsToast_ = other.outputsToast_.Clone();
      outputsWeight_ = other.outputsWeight_.Clone();
      spawnSfx_ = other.spawnSfx_;
      speedCost_ = other.speedCost_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComMergeAutoSource Clone() {
      return new ComMergeAutoSource(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 合成物品id
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "_tags_" field.</summary>
    public const int TagsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_Tags_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> Tags_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 版本标记
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Tags {
      get { return Tags_; }
    }

    /// <summary>Field number for the "autoVanishTime" field.</summary>
    public const int AutoVanishTimeFieldNumber = 3;
    private int autoVanishTime_;
    /// <summary>
    /// 产出几个后死亡
    /// 0 = 不死亡
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AutoVanishTime {
      get { return autoVanishTime_; }
      set {
        autoVanishTime_ = value;
      }
    }

    /// <summary>Field number for the "deadItem" field.</summary>
    public const int DeadItemFieldNumber = 4;
    private int deadItem_;
    /// <summary>
    /// 死亡后
    /// 变成什么
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DeadItem {
      get { return deadItem_; }
      set {
        deadItem_ = value;
      }
    }

    /// <summary>Field number for the "dieInto" field.</summary>
    public const int DieIntoFieldNumber = 16;
    private static readonly pbc::MapField<int, int>.Codec _map_dieInto_codec
        = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForInt32(16, 0), 130);
    private readonly pbc::MapField<int, int> dieInto_ = new pbc::MapField<int, int>();
    /// <summary>
    /// 死后随机变成
    /// {ObjBasic.id:权重}
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, int> DieInto {
      get { return dieInto_; }
    }

    /// <summary>Field number for the "firstOutputTime" field.</summary>
    public const int FirstOutputTimeFieldNumber = 5;
    private int firstOutputTime_;
    /// <summary>
    /// 首次产出
    /// 等待时间
    /// （秒）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FirstOutputTime {
      get { return firstOutputTime_; }
      set {
        firstOutputTime_ = value;
      }
    }

    /// <summary>Field number for the "frozen" field.</summary>
    public const int FrozenFieldNumber = 6;
    private bool frozen_;
    /// <summary>
    /// 产出是否
    /// 有蜘蛛网
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Frozen {
      get { return frozen_; }
      set {
        frozen_ = value;
      }
    }

    /// <summary>Field number for the "isFillClear" field.</summary>
    public const int IsFillClearFieldNumber = 14;
    private bool isFillClear_;
    /// <summary>
    /// 是否在库存为0时
    /// 才开始走CD
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsFillClear {
      get { return isFillClear_; }
      set {
        isFillClear_ = value;
      }
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 7;
    private int limit_;
    /// <summary>
    /// 最大库存
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    /// <summary>Field number for the "outputCount" field.</summary>
    public const int OutputCountFieldNumber = 13;
    private int outputCount_;
    /// <summary>
    /// 每个产出
    /// 提供库存
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int OutputCount {
      get { return outputCount_; }
      set {
        outputCount_ = value;
      }
    }

    /// <summary>Field number for the "outputTime" field.</summary>
    public const int OutputTimeFieldNumber = 8;
    private int outputTime_;
    /// <summary>
    /// 每个产出
    /// 等待时间
    /// （秒）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int OutputTime {
      get { return outputTime_; }
      set {
        outputTime_ = value;
      }
    }

    /// <summary>Field number for the "outputs" field.</summary>
    public const int OutputsFieldNumber = 9;
    private static readonly pb::FieldCodec<int> _repeated_outputs_codec
        = pb::FieldCodec.ForInt32(74);
    private readonly pbc::RepeatedField<int> outputs_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 产出表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Outputs {
      get { return outputs_; }
    }

    /// <summary>Field number for the "outputsFixed" field.</summary>
    public const int OutputsFixedFieldNumber = 17;
    private static readonly pb::FieldCodec<int> _repeated_outputsFixed_codec
        = pb::FieldCodec.ForInt32(138);
    private readonly pbc::RepeatedField<int> outputsFixed_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 保底产出
    /// （ObjBasic.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> OutputsFixed {
      get { return outputsFixed_; }
    }

    /// <summary>Field number for the "outputsFixedTime" field.</summary>
    public const int OutputsFixedTimeFieldNumber = 18;
    private static readonly pb::FieldCodec<int> _repeated_outputsFixedTime_codec
        = pb::FieldCodec.ForInt32(146);
    private readonly pbc::RepeatedField<int> outputsFixedTime_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 保底次数
    /// {多少次,产几个}
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> OutputsFixedTime {
      get { return outputsFixedTime_; }
    }

    /// <summary>Field number for the "outputsToast" field.</summary>
    public const int OutputsToastFieldNumber = 15;
    private static readonly pbc::MapField<int, int>.Codec _map_outputsToast_codec
        = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForInt32(16, 0), 122);
    private readonly pbc::MapField<int, int> outputsToast_ = new pbc::MapField<int, int>();
    /// <summary>
    /// 掉落时的鼓励toast
    /// {棋子ID:toastValue,棋子ID:toastValue}
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, int> OutputsToast {
      get { return outputsToast_; }
    }

    /// <summary>Field number for the "outputsWeight" field.</summary>
    public const int OutputsWeightFieldNumber = 10;
    private static readonly pb::FieldCodec<int> _repeated_outputsWeight_codec
        = pb::FieldCodec.ForInt32(82);
    private readonly pbc::RepeatedField<int> outputsWeight_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 产出权重
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> OutputsWeight {
      get { return outputsWeight_; }
    }

    /// <summary>Field number for the "spawnSfx" field.</summary>
    public const int SpawnSfxFieldNumber = 11;
    private string spawnSfx_ = "";
    /// <summary>
    /// 产出音效
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SpawnSfx {
      get { return spawnSfx_; }
      set {
        spawnSfx_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "speedCost" field.</summary>
    public const int SpeedCostFieldNumber = 12;
    private int speedCost_;
    /// <summary>
    /// 消除CD
    /// 需要钻石
    /// （废弃）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SpeedCost {
      get { return speedCost_; }
      set {
        speedCost_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ComMergeAutoSource);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ComMergeAutoSource other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!Tags_.Equals(other.Tags_)) return false;
      if (AutoVanishTime != other.AutoVanishTime) return false;
      if (DeadItem != other.DeadItem) return false;
      if (!DieInto.Equals(other.DieInto)) return false;
      if (FirstOutputTime != other.FirstOutputTime) return false;
      if (Frozen != other.Frozen) return false;
      if (IsFillClear != other.IsFillClear) return false;
      if (Limit != other.Limit) return false;
      if (OutputCount != other.OutputCount) return false;
      if (OutputTime != other.OutputTime) return false;
      if(!outputs_.Equals(other.outputs_)) return false;
      if(!outputsFixed_.Equals(other.outputsFixed_)) return false;
      if(!outputsFixedTime_.Equals(other.outputsFixedTime_)) return false;
      if (!OutputsToast.Equals(other.OutputsToast)) return false;
      if(!outputsWeight_.Equals(other.outputsWeight_)) return false;
      if (SpawnSfx != other.SpawnSfx) return false;
      if (SpeedCost != other.SpeedCost) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      hash ^= Tags_.GetHashCode();
      if (AutoVanishTime != 0) hash ^= AutoVanishTime.GetHashCode();
      if (DeadItem != 0) hash ^= DeadItem.GetHashCode();
      hash ^= DieInto.GetHashCode();
      if (FirstOutputTime != 0) hash ^= FirstOutputTime.GetHashCode();
      if (Frozen != false) hash ^= Frozen.GetHashCode();
      if (IsFillClear != false) hash ^= IsFillClear.GetHashCode();
      if (Limit != 0) hash ^= Limit.GetHashCode();
      if (OutputCount != 0) hash ^= OutputCount.GetHashCode();
      if (OutputTime != 0) hash ^= OutputTime.GetHashCode();
      hash ^= outputs_.GetHashCode();
      hash ^= outputsFixed_.GetHashCode();
      hash ^= outputsFixedTime_.GetHashCode();
      hash ^= OutputsToast.GetHashCode();
      hash ^= outputsWeight_.GetHashCode();
      if (SpawnSfx.Length != 0) hash ^= SpawnSfx.GetHashCode();
      if (SpeedCost != 0) hash ^= SpeedCost.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      Tags_.WriteTo(output, _repeated_Tags_codec);
      if (AutoVanishTime != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(AutoVanishTime);
      }
      if (DeadItem != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(DeadItem);
      }
      if (FirstOutputTime != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(FirstOutputTime);
      }
      if (Frozen != false) {
        output.WriteRawTag(48);
        output.WriteBool(Frozen);
      }
      if (Limit != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Limit);
      }
      if (OutputTime != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(OutputTime);
      }
      outputs_.WriteTo(output, _repeated_outputs_codec);
      outputsWeight_.WriteTo(output, _repeated_outputsWeight_codec);
      if (SpawnSfx.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(SpawnSfx);
      }
      if (SpeedCost != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(SpeedCost);
      }
      if (OutputCount != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(OutputCount);
      }
      if (IsFillClear != false) {
        output.WriteRawTag(112);
        output.WriteBool(IsFillClear);
      }
      outputsToast_.WriteTo(output, _map_outputsToast_codec);
      dieInto_.WriteTo(output, _map_dieInto_codec);
      outputsFixed_.WriteTo(output, _repeated_outputsFixed_codec);
      outputsFixedTime_.WriteTo(output, _repeated_outputsFixedTime_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      Tags_.WriteTo(ref output, _repeated_Tags_codec);
      if (AutoVanishTime != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(AutoVanishTime);
      }
      if (DeadItem != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(DeadItem);
      }
      if (FirstOutputTime != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(FirstOutputTime);
      }
      if (Frozen != false) {
        output.WriteRawTag(48);
        output.WriteBool(Frozen);
      }
      if (Limit != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Limit);
      }
      if (OutputTime != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(OutputTime);
      }
      outputs_.WriteTo(ref output, _repeated_outputs_codec);
      outputsWeight_.WriteTo(ref output, _repeated_outputsWeight_codec);
      if (SpawnSfx.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(SpawnSfx);
      }
      if (SpeedCost != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(SpeedCost);
      }
      if (OutputCount != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(OutputCount);
      }
      if (IsFillClear != false) {
        output.WriteRawTag(112);
        output.WriteBool(IsFillClear);
      }
      outputsToast_.WriteTo(ref output, _map_outputsToast_codec);
      dieInto_.WriteTo(ref output, _map_dieInto_codec);
      outputsFixed_.WriteTo(ref output, _repeated_outputsFixed_codec);
      outputsFixedTime_.WriteTo(ref output, _repeated_outputsFixedTime_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      size += Tags_.CalculateSize(_repeated_Tags_codec);
      if (AutoVanishTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AutoVanishTime);
      }
      if (DeadItem != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DeadItem);
      }
      size += dieInto_.CalculateSize(_map_dieInto_codec);
      if (FirstOutputTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FirstOutputTime);
      }
      if (Frozen != false) {
        size += 1 + 1;
      }
      if (IsFillClear != false) {
        size += 1 + 1;
      }
      if (Limit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Limit);
      }
      if (OutputCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OutputCount);
      }
      if (OutputTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OutputTime);
      }
      size += outputs_.CalculateSize(_repeated_outputs_codec);
      size += outputsFixed_.CalculateSize(_repeated_outputsFixed_codec);
      size += outputsFixedTime_.CalculateSize(_repeated_outputsFixedTime_codec);
      size += outputsToast_.CalculateSize(_map_outputsToast_codec);
      size += outputsWeight_.CalculateSize(_repeated_outputsWeight_codec);
      if (SpawnSfx.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SpawnSfx);
      }
      if (SpeedCost != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SpeedCost);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ComMergeAutoSource other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      Tags_.Add(other.Tags_);
      if (other.AutoVanishTime != 0) {
        AutoVanishTime = other.AutoVanishTime;
      }
      if (other.DeadItem != 0) {
        DeadItem = other.DeadItem;
      }
      dieInto_.Add(other.dieInto_);
      if (other.FirstOutputTime != 0) {
        FirstOutputTime = other.FirstOutputTime;
      }
      if (other.Frozen != false) {
        Frozen = other.Frozen;
      }
      if (other.IsFillClear != false) {
        IsFillClear = other.IsFillClear;
      }
      if (other.Limit != 0) {
        Limit = other.Limit;
      }
      if (other.OutputCount != 0) {
        OutputCount = other.OutputCount;
      }
      if (other.OutputTime != 0) {
        OutputTime = other.OutputTime;
      }
      outputs_.Add(other.outputs_);
      outputsFixed_.Add(other.outputsFixed_);
      outputsFixedTime_.Add(other.outputsFixedTime_);
      outputsToast_.Add(other.outputsToast_);
      outputsWeight_.Add(other.outputsWeight_);
      if (other.SpawnSfx.Length != 0) {
        SpawnSfx = other.SpawnSfx;
      }
      if (other.SpeedCost != 0) {
        SpeedCost = other.SpeedCost;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Tags_.AddEntriesFrom(input, _repeated_Tags_codec);
            break;
          }
          case 24: {
            AutoVanishTime = input.ReadInt32();
            break;
          }
          case 32: {
            DeadItem = input.ReadInt32();
            break;
          }
          case 40: {
            FirstOutputTime = input.ReadInt32();
            break;
          }
          case 48: {
            Frozen = input.ReadBool();
            break;
          }
          case 56: {
            Limit = input.ReadInt32();
            break;
          }
          case 64: {
            OutputTime = input.ReadInt32();
            break;
          }
          case 74:
          case 72: {
            outputs_.AddEntriesFrom(input, _repeated_outputs_codec);
            break;
          }
          case 82:
          case 80: {
            outputsWeight_.AddEntriesFrom(input, _repeated_outputsWeight_codec);
            break;
          }
          case 90: {
            SpawnSfx = input.ReadString();
            break;
          }
          case 96: {
            SpeedCost = input.ReadInt32();
            break;
          }
          case 104: {
            OutputCount = input.ReadInt32();
            break;
          }
          case 112: {
            IsFillClear = input.ReadBool();
            break;
          }
          case 122: {
            outputsToast_.AddEntriesFrom(input, _map_outputsToast_codec);
            break;
          }
          case 130: {
            dieInto_.AddEntriesFrom(input, _map_dieInto_codec);
            break;
          }
          case 138:
          case 136: {
            outputsFixed_.AddEntriesFrom(input, _repeated_outputsFixed_codec);
            break;
          }
          case 146:
          case 144: {
            outputsFixedTime_.AddEntriesFrom(input, _repeated_outputsFixedTime_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Tags_.AddEntriesFrom(ref input, _repeated_Tags_codec);
            break;
          }
          case 24: {
            AutoVanishTime = input.ReadInt32();
            break;
          }
          case 32: {
            DeadItem = input.ReadInt32();
            break;
          }
          case 40: {
            FirstOutputTime = input.ReadInt32();
            break;
          }
          case 48: {
            Frozen = input.ReadBool();
            break;
          }
          case 56: {
            Limit = input.ReadInt32();
            break;
          }
          case 64: {
            OutputTime = input.ReadInt32();
            break;
          }
          case 74:
          case 72: {
            outputs_.AddEntriesFrom(ref input, _repeated_outputs_codec);
            break;
          }
          case 82:
          case 80: {
            outputsWeight_.AddEntriesFrom(ref input, _repeated_outputsWeight_codec);
            break;
          }
          case 90: {
            SpawnSfx = input.ReadString();
            break;
          }
          case 96: {
            SpeedCost = input.ReadInt32();
            break;
          }
          case 104: {
            OutputCount = input.ReadInt32();
            break;
          }
          case 112: {
            IsFillClear = input.ReadBool();
            break;
          }
          case 122: {
            outputsToast_.AddEntriesFrom(ref input, _map_outputsToast_codec);
            break;
          }
          case 130: {
            dieInto_.AddEntriesFrom(ref input, _map_dieInto_codec);
            break;
          }
          case 138:
          case 136: {
            outputsFixed_.AddEntriesFrom(ref input, _repeated_outputsFixed_codec);
            break;
          }
          case 146:
          case 144: {
            outputsFixedTime_.AddEntriesFrom(ref input, _repeated_outputsFixedTime_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ComMergeAutoSourceMapABValue : pb::IMessage<ComMergeAutoSourceMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ComMergeAutoSourceMapABValue> _parser = new pb::MessageParser<ComMergeAutoSourceMapABValue>(() => new ComMergeAutoSourceMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ComMergeAutoSourceMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.ComMergeAutoSourceConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComMergeAutoSourceMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComMergeAutoSourceMapABValue(ComMergeAutoSourceMapABValue other) : this() {
      comMergeAutoSourceMap_ = other.comMergeAutoSourceMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComMergeAutoSourceMapABValue Clone() {
      return new ComMergeAutoSourceMapABValue(this);
    }

    /// <summary>Field number for the "ComMergeAutoSourceMap" field.</summary>
    public const int ComMergeAutoSourceMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.ComMergeAutoSource>.Codec _map_comMergeAutoSourceMap_codec
        = new pbc::MapField<int, global::fat.rawdata.ComMergeAutoSource>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ComMergeAutoSource.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.ComMergeAutoSource> comMergeAutoSourceMap_ = new pbc::MapField<int, global::fat.rawdata.ComMergeAutoSource>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.ComMergeAutoSource> ComMergeAutoSourceMap {
      get { return comMergeAutoSourceMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ComMergeAutoSourceMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ComMergeAutoSourceMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!ComMergeAutoSourceMap.Equals(other.ComMergeAutoSourceMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ComMergeAutoSourceMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      comMergeAutoSourceMap_.WriteTo(output, _map_comMergeAutoSourceMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      comMergeAutoSourceMap_.WriteTo(ref output, _map_comMergeAutoSourceMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += comMergeAutoSourceMap_.CalculateSize(_map_comMergeAutoSourceMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ComMergeAutoSourceMapABValue other) {
      if (other == null) {
        return;
      }
      comMergeAutoSourceMap_.Add(other.comMergeAutoSourceMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            comMergeAutoSourceMap_.AddEntriesFrom(input, _map_comMergeAutoSourceMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            comMergeAutoSourceMap_.AddEntriesFrom(ref input, _map_comMergeAutoSourceMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ComMergeAutoSourceConf : pb::IMessage<ComMergeAutoSourceConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ComMergeAutoSourceConf> _parser = new pb::MessageParser<ComMergeAutoSourceConf>(() => new ComMergeAutoSourceConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ComMergeAutoSourceConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.ComMergeAutoSourceConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComMergeAutoSourceConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComMergeAutoSourceConf(ComMergeAutoSourceConf other) : this() {
      comMergeAutoSourceMap_ = other.comMergeAutoSourceMap_.Clone();
      comMergeAutoSourceMapAB_ = other.comMergeAutoSourceMapAB_.Clone();
      comMergeAutoSourceMapABPatch_ = other.comMergeAutoSourceMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComMergeAutoSourceConf Clone() {
      return new ComMergeAutoSourceConf(this);
    }

    /// <summary>Field number for the "ComMergeAutoSourceMap" field.</summary>
    public const int ComMergeAutoSourceMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.ComMergeAutoSource>.Codec _map_comMergeAutoSourceMap_codec
        = new pbc::MapField<int, global::fat.rawdata.ComMergeAutoSource>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ComMergeAutoSource.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.ComMergeAutoSource> comMergeAutoSourceMap_ = new pbc::MapField<int, global::fat.rawdata.ComMergeAutoSource>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.ComMergeAutoSource> ComMergeAutoSourceMap {
      get { return comMergeAutoSourceMap_; }
    }

    /// <summary>Field number for the "ComMergeAutoSourceMapAB" field.</summary>
    public const int ComMergeAutoSourceMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.ComMergeAutoSourceMapABValue>.Codec _map_comMergeAutoSourceMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.ComMergeAutoSourceMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ComMergeAutoSourceMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.ComMergeAutoSourceMapABValue> comMergeAutoSourceMapAB_ = new pbc::MapField<string, global::fat.rawdata.ComMergeAutoSourceMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.ComMergeAutoSourceMapABValue> ComMergeAutoSourceMapAB {
      get { return comMergeAutoSourceMapAB_; }
    }

    /// <summary>Field number for the "ComMergeAutoSourceMapABPatch" field.</summary>
    public const int ComMergeAutoSourceMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.ComMergeAutoSourceMapABValue>.Codec _map_comMergeAutoSourceMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.ComMergeAutoSourceMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ComMergeAutoSourceMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.ComMergeAutoSourceMapABValue> comMergeAutoSourceMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.ComMergeAutoSourceMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.ComMergeAutoSourceMapABValue> ComMergeAutoSourceMapABPatch {
      get { return comMergeAutoSourceMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ComMergeAutoSourceConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ComMergeAutoSourceConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!ComMergeAutoSourceMap.Equals(other.ComMergeAutoSourceMap)) return false;
      if (!ComMergeAutoSourceMapAB.Equals(other.ComMergeAutoSourceMapAB)) return false;
      if (!ComMergeAutoSourceMapABPatch.Equals(other.ComMergeAutoSourceMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ComMergeAutoSourceMap.GetHashCode();
      hash ^= ComMergeAutoSourceMapAB.GetHashCode();
      hash ^= ComMergeAutoSourceMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      comMergeAutoSourceMap_.WriteTo(output, _map_comMergeAutoSourceMap_codec);
      comMergeAutoSourceMapAB_.WriteTo(output, _map_comMergeAutoSourceMapAB_codec);
      comMergeAutoSourceMapABPatch_.WriteTo(output, _map_comMergeAutoSourceMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      comMergeAutoSourceMap_.WriteTo(ref output, _map_comMergeAutoSourceMap_codec);
      comMergeAutoSourceMapAB_.WriteTo(ref output, _map_comMergeAutoSourceMapAB_codec);
      comMergeAutoSourceMapABPatch_.WriteTo(ref output, _map_comMergeAutoSourceMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += comMergeAutoSourceMap_.CalculateSize(_map_comMergeAutoSourceMap_codec);
      size += comMergeAutoSourceMapAB_.CalculateSize(_map_comMergeAutoSourceMapAB_codec);
      size += comMergeAutoSourceMapABPatch_.CalculateSize(_map_comMergeAutoSourceMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ComMergeAutoSourceConf other) {
      if (other == null) {
        return;
      }
      comMergeAutoSourceMap_.Add(other.comMergeAutoSourceMap_);
      comMergeAutoSourceMapAB_.Add(other.comMergeAutoSourceMapAB_);
      comMergeAutoSourceMapABPatch_.Add(other.comMergeAutoSourceMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            comMergeAutoSourceMap_.AddEntriesFrom(input, _map_comMergeAutoSourceMap_codec);
            break;
          }
          case 18: {
            comMergeAutoSourceMapAB_.AddEntriesFrom(input, _map_comMergeAutoSourceMapAB_codec);
            break;
          }
          case 26: {
            comMergeAutoSourceMapABPatch_.AddEntriesFrom(input, _map_comMergeAutoSourceMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            comMergeAutoSourceMap_.AddEntriesFrom(ref input, _map_comMergeAutoSourceMap_codec);
            break;
          }
          case 18: {
            comMergeAutoSourceMapAB_.AddEntriesFrom(ref input, _map_comMergeAutoSourceMapAB_codec);
            break;
          }
          case 26: {
            comMergeAutoSourceMapABPatch_.AddEntriesFrom(ref input, _map_comMergeAutoSourceMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
