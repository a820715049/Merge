// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/FishRarityConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/FishRarityConf.proto</summary>
  public static partial class FishRarityConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/FishRarityConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FishRarityConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChxyYXdkYXRhL0Zpc2hSYXJpdHlDb25mLnByb3RvEgdyYXdkYXRhGhxyYXdk",
            "YXRhL0Zpc2hSYXJpdHlUeXBlLnByb3RvIpYBCgpGaXNoUmFyaXR5EgoKAmlk",
            "GAEgASgFEg8KB2Jvb2tJbWcYBiABKAkSDQoFY29sb3IYBSABKAkSEQoJY29s",
            "b3JEZXNjGAcgASgJEg4KBmljb25CZxgCIAEoCRIMCgRuYW1lGAMgASgJEisK",
            "CnJhcml0eVR5cGUYBCABKA4yFy5yYXdkYXRhLkZpc2hSYXJpdHlUeXBlIqoB",
            "ChRGaXNoUmFyaXR5TWFwQUJWYWx1ZRJHCg1GaXNoUmFyaXR5TWFwGAEgAygL",
            "MjAucmF3ZGF0YS5GaXNoUmFyaXR5TWFwQUJWYWx1ZS5GaXNoUmFyaXR5TWFw",
            "RW50cnkaSQoSRmlzaFJhcml0eU1hcEVudHJ5EgsKA2tleRgBIAEoBRIiCgV2",
            "YWx1ZRgCIAEoCzITLnJhd2RhdGEuRmlzaFJhcml0eToCOAEi6QMKDkZpc2hS",
            "YXJpdHlDb25mEkEKDUZpc2hSYXJpdHlNYXAYASADKAsyKi5yYXdkYXRhLkZp",
            "c2hSYXJpdHlDb25mLkZpc2hSYXJpdHlNYXBFbnRyeRJFCg9GaXNoUmFyaXR5",
            "TWFwQUIYAiADKAsyLC5yYXdkYXRhLkZpc2hSYXJpdHlDb25mLkZpc2hSYXJp",
            "dHlNYXBBQkVudHJ5Ek8KFEZpc2hSYXJpdHlNYXBBQlBhdGNoGAMgAygLMjEu",
            "cmF3ZGF0YS5GaXNoUmFyaXR5Q29uZi5GaXNoUmFyaXR5TWFwQUJQYXRjaEVu",
            "dHJ5GkkKEkZpc2hSYXJpdHlNYXBFbnRyeRILCgNrZXkYASABKAUSIgoFdmFs",
            "dWUYAiABKAsyEy5yYXdkYXRhLkZpc2hSYXJpdHk6AjgBGlUKFEZpc2hSYXJp",
            "dHlNYXBBQkVudHJ5EgsKA2tleRgBIAEoCRIsCgV2YWx1ZRgCIAEoCzIdLnJh",
            "d2RhdGEuRmlzaFJhcml0eU1hcEFCVmFsdWU6AjgBGloKGUZpc2hSYXJpdHlN",
            "YXBBQlBhdGNoRW50cnkSCwoDa2V5GAEgASgJEiwKBXZhbHVlGAIgASgLMh0u",
            "cmF3ZGF0YS5GaXNoUmFyaXR5TWFwQUJWYWx1ZToCOAFCPVotZ2l0bGFiLmZ1",
            "bnBsdXMuaW8vZmF0L2NvbmYvZ2VuL2dvbGFuZy9yYXdkYXRhqgILZmF0LnJh",
            "d2RhdGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::fat.rawdata.FishRarityTypeReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.FishRarity), global::fat.rawdata.FishRarity.Parser, new[]{ "Id", "BookImg", "Color", "ColorDesc", "IconBg", "Name", "RarityType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.FishRarityMapABValue), global::fat.rawdata.FishRarityMapABValue.Parser, new[]{ "FishRarityMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.FishRarityConf), global::fat.rawdata.FishRarityConf.Parser, new[]{ "FishRarityMap", "FishRarityMapAB", "FishRarityMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="FishRarity",table="FishRarityMap",table_wrapper="FishRarityConf",map="true",map_key_type="int32",data="FishRarityConf")
  /// annotation@ab(table_ab="FishRarityMapAB",table_ab_patch="FishRarityMapABPatch",table_ab_value="FishRarityMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@FishRarity(id="id")
  /// </summary>
  public sealed partial class FishRarity : pb::IMessage<FishRarity>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FishRarity> _parser = new pb::MessageParser<FishRarity>(() => new FishRarity());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FishRarity> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.FishRarityConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FishRarity() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FishRarity(FishRarity other) : this() {
      id_ = other.id_;
      bookImg_ = other.bookImg_;
      color_ = other.color_;
      colorDesc_ = other.colorDesc_;
      iconBg_ = other.iconBg_;
      name_ = other.name_;
      rarityType_ = other.rarityType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FishRarity Clone() {
      return new FishRarity(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 鱼稀有度ID
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "bookImg" field.</summary>
    public const int BookImgFieldNumber = 6;
    private string bookImg_ = "";
    /// <summary>
    /// 鱼图鉴
    /// 方块底图
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BookImg {
      get { return bookImg_; }
      set {
        bookImg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "color" field.</summary>
    public const int ColorFieldNumber = 5;
    private string color_ = "";
    /// <summary>
    /// 获得鱼界面
    /// 稀有度底图
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Color {
      get { return color_; }
      set {
        color_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "colorDesc" field.</summary>
    public const int ColorDescFieldNumber = 7;
    private string colorDesc_ = "";
    /// <summary>
    /// 获得鱼界面
    /// 稀有度字色
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ColorDesc {
      get { return colorDesc_; }
      set {
        colorDesc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "iconBg" field.</summary>
    public const int IconBgFieldNumber = 2;
    private string iconBg_ = "";
    /// <summary>
    /// 鱼图鉴tip
    /// 稀有度底图颜色
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IconBg {
      get { return iconBg_; }
      set {
        iconBg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    /// <summary>
    /// 稀有度名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "rarityType" field.</summary>
    public const int RarityTypeFieldNumber = 4;
    private global::fat.rawdata.FishRarityType rarityType_ = global::fat.rawdata.FishRarityType.RarityTypeN;
    /// <summary>
    /// 鱼稀有度类型
    /// (FishRarityType@enum.key)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::fat.rawdata.FishRarityType RarityType {
      get { return rarityType_; }
      set {
        rarityType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FishRarity);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FishRarity other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (BookImg != other.BookImg) return false;
      if (Color != other.Color) return false;
      if (ColorDesc != other.ColorDesc) return false;
      if (IconBg != other.IconBg) return false;
      if (Name != other.Name) return false;
      if (RarityType != other.RarityType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (BookImg.Length != 0) hash ^= BookImg.GetHashCode();
      if (Color.Length != 0) hash ^= Color.GetHashCode();
      if (ColorDesc.Length != 0) hash ^= ColorDesc.GetHashCode();
      if (IconBg.Length != 0) hash ^= IconBg.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (RarityType != global::fat.rawdata.FishRarityType.RarityTypeN) hash ^= RarityType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (IconBg.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(IconBg);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (RarityType != global::fat.rawdata.FishRarityType.RarityTypeN) {
        output.WriteRawTag(32);
        output.WriteEnum((int) RarityType);
      }
      if (Color.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Color);
      }
      if (BookImg.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(BookImg);
      }
      if (ColorDesc.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ColorDesc);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (IconBg.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(IconBg);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (RarityType != global::fat.rawdata.FishRarityType.RarityTypeN) {
        output.WriteRawTag(32);
        output.WriteEnum((int) RarityType);
      }
      if (Color.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Color);
      }
      if (BookImg.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(BookImg);
      }
      if (ColorDesc.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ColorDesc);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (BookImg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BookImg);
      }
      if (Color.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Color);
      }
      if (ColorDesc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ColorDesc);
      }
      if (IconBg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IconBg);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (RarityType != global::fat.rawdata.FishRarityType.RarityTypeN) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RarityType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FishRarity other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.BookImg.Length != 0) {
        BookImg = other.BookImg;
      }
      if (other.Color.Length != 0) {
        Color = other.Color;
      }
      if (other.ColorDesc.Length != 0) {
        ColorDesc = other.ColorDesc;
      }
      if (other.IconBg.Length != 0) {
        IconBg = other.IconBg;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.RarityType != global::fat.rawdata.FishRarityType.RarityTypeN) {
        RarityType = other.RarityType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            IconBg = input.ReadString();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 32: {
            RarityType = (global::fat.rawdata.FishRarityType) input.ReadEnum();
            break;
          }
          case 42: {
            Color = input.ReadString();
            break;
          }
          case 50: {
            BookImg = input.ReadString();
            break;
          }
          case 58: {
            ColorDesc = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            IconBg = input.ReadString();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 32: {
            RarityType = (global::fat.rawdata.FishRarityType) input.ReadEnum();
            break;
          }
          case 42: {
            Color = input.ReadString();
            break;
          }
          case 50: {
            BookImg = input.ReadString();
            break;
          }
          case 58: {
            ColorDesc = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class FishRarityMapABValue : pb::IMessage<FishRarityMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FishRarityMapABValue> _parser = new pb::MessageParser<FishRarityMapABValue>(() => new FishRarityMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FishRarityMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.FishRarityConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FishRarityMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FishRarityMapABValue(FishRarityMapABValue other) : this() {
      fishRarityMap_ = other.fishRarityMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FishRarityMapABValue Clone() {
      return new FishRarityMapABValue(this);
    }

    /// <summary>Field number for the "FishRarityMap" field.</summary>
    public const int FishRarityMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.FishRarity>.Codec _map_fishRarityMap_codec
        = new pbc::MapField<int, global::fat.rawdata.FishRarity>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.FishRarity.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.FishRarity> fishRarityMap_ = new pbc::MapField<int, global::fat.rawdata.FishRarity>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.FishRarity> FishRarityMap {
      get { return fishRarityMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FishRarityMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FishRarityMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!FishRarityMap.Equals(other.FishRarityMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= FishRarityMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      fishRarityMap_.WriteTo(output, _map_fishRarityMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      fishRarityMap_.WriteTo(ref output, _map_fishRarityMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += fishRarityMap_.CalculateSize(_map_fishRarityMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FishRarityMapABValue other) {
      if (other == null) {
        return;
      }
      fishRarityMap_.Add(other.fishRarityMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            fishRarityMap_.AddEntriesFrom(input, _map_fishRarityMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            fishRarityMap_.AddEntriesFrom(ref input, _map_fishRarityMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class FishRarityConf : pb::IMessage<FishRarityConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FishRarityConf> _parser = new pb::MessageParser<FishRarityConf>(() => new FishRarityConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FishRarityConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.FishRarityConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FishRarityConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FishRarityConf(FishRarityConf other) : this() {
      fishRarityMap_ = other.fishRarityMap_.Clone();
      fishRarityMapAB_ = other.fishRarityMapAB_.Clone();
      fishRarityMapABPatch_ = other.fishRarityMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FishRarityConf Clone() {
      return new FishRarityConf(this);
    }

    /// <summary>Field number for the "FishRarityMap" field.</summary>
    public const int FishRarityMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.FishRarity>.Codec _map_fishRarityMap_codec
        = new pbc::MapField<int, global::fat.rawdata.FishRarity>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.FishRarity.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.FishRarity> fishRarityMap_ = new pbc::MapField<int, global::fat.rawdata.FishRarity>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.FishRarity> FishRarityMap {
      get { return fishRarityMap_; }
    }

    /// <summary>Field number for the "FishRarityMapAB" field.</summary>
    public const int FishRarityMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.FishRarityMapABValue>.Codec _map_fishRarityMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.FishRarityMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.FishRarityMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.FishRarityMapABValue> fishRarityMapAB_ = new pbc::MapField<string, global::fat.rawdata.FishRarityMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.FishRarityMapABValue> FishRarityMapAB {
      get { return fishRarityMapAB_; }
    }

    /// <summary>Field number for the "FishRarityMapABPatch" field.</summary>
    public const int FishRarityMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.FishRarityMapABValue>.Codec _map_fishRarityMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.FishRarityMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.FishRarityMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.FishRarityMapABValue> fishRarityMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.FishRarityMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.FishRarityMapABValue> FishRarityMapABPatch {
      get { return fishRarityMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FishRarityConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FishRarityConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!FishRarityMap.Equals(other.FishRarityMap)) return false;
      if (!FishRarityMapAB.Equals(other.FishRarityMapAB)) return false;
      if (!FishRarityMapABPatch.Equals(other.FishRarityMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= FishRarityMap.GetHashCode();
      hash ^= FishRarityMapAB.GetHashCode();
      hash ^= FishRarityMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      fishRarityMap_.WriteTo(output, _map_fishRarityMap_codec);
      fishRarityMapAB_.WriteTo(output, _map_fishRarityMapAB_codec);
      fishRarityMapABPatch_.WriteTo(output, _map_fishRarityMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      fishRarityMap_.WriteTo(ref output, _map_fishRarityMap_codec);
      fishRarityMapAB_.WriteTo(ref output, _map_fishRarityMapAB_codec);
      fishRarityMapABPatch_.WriteTo(ref output, _map_fishRarityMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += fishRarityMap_.CalculateSize(_map_fishRarityMap_codec);
      size += fishRarityMapAB_.CalculateSize(_map_fishRarityMapAB_codec);
      size += fishRarityMapABPatch_.CalculateSize(_map_fishRarityMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FishRarityConf other) {
      if (other == null) {
        return;
      }
      fishRarityMap_.Add(other.fishRarityMap_);
      fishRarityMapAB_.Add(other.fishRarityMapAB_);
      fishRarityMapABPatch_.Add(other.fishRarityMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            fishRarityMap_.AddEntriesFrom(input, _map_fishRarityMap_codec);
            break;
          }
          case 18: {
            fishRarityMapAB_.AddEntriesFrom(input, _map_fishRarityMapAB_codec);
            break;
          }
          case 26: {
            fishRarityMapABPatch_.AddEntriesFrom(input, _map_fishRarityMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            fishRarityMap_.AddEntriesFrom(ref input, _map_fishRarityMap_codec);
            break;
          }
          case 18: {
            fishRarityMapAB_.AddEntriesFrom(ref input, _map_fishRarityMapAB_codec);
            break;
          }
          case 26: {
            fishRarityMapABPatch_.AddEntriesFrom(ref input, _map_fishRarityMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
