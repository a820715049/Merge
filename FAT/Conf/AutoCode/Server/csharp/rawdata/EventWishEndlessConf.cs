// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventWishEndlessConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventWishEndlessConf.proto</summary>
  public static partial class EventWishEndlessConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventWishEndlessConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventWishEndlessConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiJyYXdkYXRhL0V2ZW50V2lzaEVuZGxlc3NDb25mLnByb3RvEgdyYXdkYXRh",
            "IlwKEEV2ZW50V2lzaEVuZGxlc3MSCgoCaWQYASABKAUSEAoIZGV0YWlsaWQY",
            "AiADKAUSEgoKZXZlbnRUaGVtZRgDIAEoBRIWCg5zdGFydExvb3BQa2dJZBgE",
            "IAEoBSLOAQoaRXZlbnRXaXNoRW5kbGVzc01hcEFCVmFsdWUSWQoTRXZlbnRX",
            "aXNoRW5kbGVzc01hcBgBIAMoCzI8LnJhd2RhdGEuRXZlbnRXaXNoRW5kbGVz",
            "c01hcEFCVmFsdWUuRXZlbnRXaXNoRW5kbGVzc01hcEVudHJ5GlUKGEV2ZW50",
            "V2lzaEVuZGxlc3NNYXBFbnRyeRILCgNrZXkYASABKAUSKAoFdmFsdWUYAiAB",
            "KAsyGS5yYXdkYXRhLkV2ZW50V2lzaEVuZGxlc3M6AjgBIskEChRFdmVudFdp",
            "c2hFbmRsZXNzQ29uZhJTChNFdmVudFdpc2hFbmRsZXNzTWFwGAEgAygLMjYu",
            "cmF3ZGF0YS5FdmVudFdpc2hFbmRsZXNzQ29uZi5FdmVudFdpc2hFbmRsZXNz",
            "TWFwRW50cnkSVwoVRXZlbnRXaXNoRW5kbGVzc01hcEFCGAIgAygLMjgucmF3",
            "ZGF0YS5FdmVudFdpc2hFbmRsZXNzQ29uZi5FdmVudFdpc2hFbmRsZXNzTWFw",
            "QUJFbnRyeRJhChpFdmVudFdpc2hFbmRsZXNzTWFwQUJQYXRjaBgDIAMoCzI9",
            "LnJhd2RhdGEuRXZlbnRXaXNoRW5kbGVzc0NvbmYuRXZlbnRXaXNoRW5kbGVz",
            "c01hcEFCUGF0Y2hFbnRyeRpVChhFdmVudFdpc2hFbmRsZXNzTWFwRW50cnkS",
            "CwoDa2V5GAEgASgFEigKBXZhbHVlGAIgASgLMhkucmF3ZGF0YS5FdmVudFdp",
            "c2hFbmRsZXNzOgI4ARphChpFdmVudFdpc2hFbmRsZXNzTWFwQUJFbnRyeRIL",
            "CgNrZXkYASABKAkSMgoFdmFsdWUYAiABKAsyIy5yYXdkYXRhLkV2ZW50V2lz",
            "aEVuZGxlc3NNYXBBQlZhbHVlOgI4ARpmCh9FdmVudFdpc2hFbmRsZXNzTWFw",
            "QUJQYXRjaEVudHJ5EgsKA2tleRgBIAEoCRIyCgV2YWx1ZRgCIAEoCzIjLnJh",
            "d2RhdGEuRXZlbnRXaXNoRW5kbGVzc01hcEFCVmFsdWU6AjgBQj1aLWdpdGxh",
            "Yi5mdW5wbHVzLmlvL2ZhdC9jb25mL2dlbi9nb2xhbmcvcmF3ZGF0YaoCC2Zh",
            "dC5yYXdkYXRhYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventWishEndless), global::fat.rawdata.EventWishEndless.Parser, new[]{ "Id", "Detailid", "EventTheme", "StartLoopPkgId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventWishEndlessMapABValue), global::fat.rawdata.EventWishEndlessMapABValue.Parser, new[]{ "EventWishEndlessMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventWishEndlessConf), global::fat.rawdata.EventWishEndlessConf.Parser, new[]{ "EventWishEndlessMap", "EventWishEndlessMapAB", "EventWishEndlessMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventWishEndless",table="EventWishEndlessMap",table_wrapper="EventWishEndlessConf",map="true",map_key_type="int32",data="EventWishEndlessConf")
  /// annotation@ab(table_ab="EventWishEndlessMapAB",table_ab_patch="EventWishEndlessMapABPatch",table_ab_value="EventWishEndlessMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventWishEndless(id="id")
  /// </summary>
  public sealed partial class EventWishEndless : pb::IMessage<EventWishEndless>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventWishEndless> _parser = new pb::MessageParser<EventWishEndless>(() => new EventWishEndless());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventWishEndless> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventWishEndlessConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishEndless() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishEndless(EventWishEndless other) : this() {
      id_ = other.id_;
      detailid_ = other.detailid_.Clone();
      eventTheme_ = other.eventTheme_;
      startLoopPkgId_ = other.startLoopPkgId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishEndless Clone() {
      return new EventWishEndless(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 无限礼包
    /// 模板ID
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "detailid" field.</summary>
    public const int DetailidFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_detailid_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> detailid_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 礼包详情id(填写顺序决定出现顺序)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Detailid {
      get { return detailid_; }
    }

    /// <summary>Field number for the "eventTheme" field.</summary>
    public const int EventThemeFieldNumber = 3;
    private int eventTheme_;
    /// <summary>
    /// 活动弹板ID
    /// （EventTheme.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EventTheme {
      get { return eventTheme_; }
      set {
        eventTheme_ = value;
      }
    }

    /// <summary>Field number for the "startLoopPkgId" field.</summary>
    public const int StartLoopPkgIdFieldNumber = 4;
    private int startLoopPkgId_;
    /// <summary>
    /// 从哪个礼包开始循环
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StartLoopPkgId {
      get { return startLoopPkgId_; }
      set {
        startLoopPkgId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventWishEndless);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventWishEndless other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!detailid_.Equals(other.detailid_)) return false;
      if (EventTheme != other.EventTheme) return false;
      if (StartLoopPkgId != other.StartLoopPkgId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      hash ^= detailid_.GetHashCode();
      if (EventTheme != 0) hash ^= EventTheme.GetHashCode();
      if (StartLoopPkgId != 0) hash ^= StartLoopPkgId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      detailid_.WriteTo(output, _repeated_detailid_codec);
      if (EventTheme != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(EventTheme);
      }
      if (StartLoopPkgId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(StartLoopPkgId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      detailid_.WriteTo(ref output, _repeated_detailid_codec);
      if (EventTheme != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(EventTheme);
      }
      if (StartLoopPkgId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(StartLoopPkgId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      size += detailid_.CalculateSize(_repeated_detailid_codec);
      if (EventTheme != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EventTheme);
      }
      if (StartLoopPkgId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartLoopPkgId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventWishEndless other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      detailid_.Add(other.detailid_);
      if (other.EventTheme != 0) {
        EventTheme = other.EventTheme;
      }
      if (other.StartLoopPkgId != 0) {
        StartLoopPkgId = other.StartLoopPkgId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            detailid_.AddEntriesFrom(input, _repeated_detailid_codec);
            break;
          }
          case 24: {
            EventTheme = input.ReadInt32();
            break;
          }
          case 32: {
            StartLoopPkgId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            detailid_.AddEntriesFrom(ref input, _repeated_detailid_codec);
            break;
          }
          case 24: {
            EventTheme = input.ReadInt32();
            break;
          }
          case 32: {
            StartLoopPkgId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventWishEndlessMapABValue : pb::IMessage<EventWishEndlessMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventWishEndlessMapABValue> _parser = new pb::MessageParser<EventWishEndlessMapABValue>(() => new EventWishEndlessMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventWishEndlessMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventWishEndlessConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishEndlessMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishEndlessMapABValue(EventWishEndlessMapABValue other) : this() {
      eventWishEndlessMap_ = other.eventWishEndlessMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishEndlessMapABValue Clone() {
      return new EventWishEndlessMapABValue(this);
    }

    /// <summary>Field number for the "EventWishEndlessMap" field.</summary>
    public const int EventWishEndlessMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventWishEndless>.Codec _map_eventWishEndlessMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventWishEndless>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventWishEndless.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventWishEndless> eventWishEndlessMap_ = new pbc::MapField<int, global::fat.rawdata.EventWishEndless>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventWishEndless> EventWishEndlessMap {
      get { return eventWishEndlessMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventWishEndlessMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventWishEndlessMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventWishEndlessMap.Equals(other.EventWishEndlessMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventWishEndlessMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventWishEndlessMap_.WriteTo(output, _map_eventWishEndlessMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventWishEndlessMap_.WriteTo(ref output, _map_eventWishEndlessMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventWishEndlessMap_.CalculateSize(_map_eventWishEndlessMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventWishEndlessMapABValue other) {
      if (other == null) {
        return;
      }
      eventWishEndlessMap_.Add(other.eventWishEndlessMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventWishEndlessMap_.AddEntriesFrom(input, _map_eventWishEndlessMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventWishEndlessMap_.AddEntriesFrom(ref input, _map_eventWishEndlessMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventWishEndlessConf : pb::IMessage<EventWishEndlessConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventWishEndlessConf> _parser = new pb::MessageParser<EventWishEndlessConf>(() => new EventWishEndlessConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventWishEndlessConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventWishEndlessConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishEndlessConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishEndlessConf(EventWishEndlessConf other) : this() {
      eventWishEndlessMap_ = other.eventWishEndlessMap_.Clone();
      eventWishEndlessMapAB_ = other.eventWishEndlessMapAB_.Clone();
      eventWishEndlessMapABPatch_ = other.eventWishEndlessMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishEndlessConf Clone() {
      return new EventWishEndlessConf(this);
    }

    /// <summary>Field number for the "EventWishEndlessMap" field.</summary>
    public const int EventWishEndlessMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventWishEndless>.Codec _map_eventWishEndlessMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventWishEndless>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventWishEndless.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventWishEndless> eventWishEndlessMap_ = new pbc::MapField<int, global::fat.rawdata.EventWishEndless>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventWishEndless> EventWishEndlessMap {
      get { return eventWishEndlessMap_; }
    }

    /// <summary>Field number for the "EventWishEndlessMapAB" field.</summary>
    public const int EventWishEndlessMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventWishEndlessMapABValue>.Codec _map_eventWishEndlessMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventWishEndlessMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventWishEndlessMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventWishEndlessMapABValue> eventWishEndlessMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventWishEndlessMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventWishEndlessMapABValue> EventWishEndlessMapAB {
      get { return eventWishEndlessMapAB_; }
    }

    /// <summary>Field number for the "EventWishEndlessMapABPatch" field.</summary>
    public const int EventWishEndlessMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventWishEndlessMapABValue>.Codec _map_eventWishEndlessMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventWishEndlessMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventWishEndlessMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventWishEndlessMapABValue> eventWishEndlessMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventWishEndlessMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventWishEndlessMapABValue> EventWishEndlessMapABPatch {
      get { return eventWishEndlessMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventWishEndlessConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventWishEndlessConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventWishEndlessMap.Equals(other.EventWishEndlessMap)) return false;
      if (!EventWishEndlessMapAB.Equals(other.EventWishEndlessMapAB)) return false;
      if (!EventWishEndlessMapABPatch.Equals(other.EventWishEndlessMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventWishEndlessMap.GetHashCode();
      hash ^= EventWishEndlessMapAB.GetHashCode();
      hash ^= EventWishEndlessMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventWishEndlessMap_.WriteTo(output, _map_eventWishEndlessMap_codec);
      eventWishEndlessMapAB_.WriteTo(output, _map_eventWishEndlessMapAB_codec);
      eventWishEndlessMapABPatch_.WriteTo(output, _map_eventWishEndlessMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventWishEndlessMap_.WriteTo(ref output, _map_eventWishEndlessMap_codec);
      eventWishEndlessMapAB_.WriteTo(ref output, _map_eventWishEndlessMapAB_codec);
      eventWishEndlessMapABPatch_.WriteTo(ref output, _map_eventWishEndlessMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventWishEndlessMap_.CalculateSize(_map_eventWishEndlessMap_codec);
      size += eventWishEndlessMapAB_.CalculateSize(_map_eventWishEndlessMapAB_codec);
      size += eventWishEndlessMapABPatch_.CalculateSize(_map_eventWishEndlessMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventWishEndlessConf other) {
      if (other == null) {
        return;
      }
      eventWishEndlessMap_.Add(other.eventWishEndlessMap_);
      eventWishEndlessMapAB_.Add(other.eventWishEndlessMapAB_);
      eventWishEndlessMapABPatch_.Add(other.eventWishEndlessMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventWishEndlessMap_.AddEntriesFrom(input, _map_eventWishEndlessMap_codec);
            break;
          }
          case 18: {
            eventWishEndlessMapAB_.AddEntriesFrom(input, _map_eventWishEndlessMapAB_codec);
            break;
          }
          case 26: {
            eventWishEndlessMapABPatch_.AddEntriesFrom(input, _map_eventWishEndlessMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventWishEndlessMap_.AddEntriesFrom(ref input, _map_eventWishEndlessMap_codec);
            break;
          }
          case 18: {
            eventWishEndlessMapAB_.AddEntriesFrom(ref input, _map_eventWishEndlessMapAB_codec);
            break;
          }
          case 26: {
            eventWishEndlessMapABPatch_.AddEntriesFrom(ref input, _map_eventWishEndlessMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
