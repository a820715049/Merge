// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/MarketSlidePackConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/MarketSlidePackConf.proto</summary>
  public static partial class MarketSlidePackConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/MarketSlidePackConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MarketSlidePackConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiFyYXdkYXRhL01hcmtldFNsaWRlUGFja0NvbmYucHJvdG8SB3Jhd2RhdGEi",
            "XAoPTWFya2V0U2xpZGVQYWNrEgoKAmlkGAEgASgFEhAKCGRldGFpbGlkGAIg",
            "AygFEhAKCGR1cmF0aW9uGAMgASgFEhkKEWV2ZW50UmVmcmVzaFRoZW1lGAUg",
            "ASgFIsgBChlNYXJrZXRTbGlkZVBhY2tNYXBBQlZhbHVlElYKEk1hcmtldFNs",
            "aWRlUGFja01hcBgBIAMoCzI6LnJhd2RhdGEuTWFya2V0U2xpZGVQYWNrTWFw",
            "QUJWYWx1ZS5NYXJrZXRTbGlkZVBhY2tNYXBFbnRyeRpTChdNYXJrZXRTbGlk",
            "ZVBhY2tNYXBFbnRyeRILCgNrZXkYASABKAUSJwoFdmFsdWUYAiABKAsyGC5y",
            "YXdkYXRhLk1hcmtldFNsaWRlUGFjazoCOAEiuQQKE01hcmtldFNsaWRlUGFj",
            "a0NvbmYSUAoSTWFya2V0U2xpZGVQYWNrTWFwGAEgAygLMjQucmF3ZGF0YS5N",
            "YXJrZXRTbGlkZVBhY2tDb25mLk1hcmtldFNsaWRlUGFja01hcEVudHJ5ElQK",
            "FE1hcmtldFNsaWRlUGFja01hcEFCGAIgAygLMjYucmF3ZGF0YS5NYXJrZXRT",
            "bGlkZVBhY2tDb25mLk1hcmtldFNsaWRlUGFja01hcEFCRW50cnkSXgoZTWFy",
            "a2V0U2xpZGVQYWNrTWFwQUJQYXRjaBgDIAMoCzI7LnJhd2RhdGEuTWFya2V0",
            "U2xpZGVQYWNrQ29uZi5NYXJrZXRTbGlkZVBhY2tNYXBBQlBhdGNoRW50cnka",
            "UwoXTWFya2V0U2xpZGVQYWNrTWFwRW50cnkSCwoDa2V5GAEgASgFEicKBXZh",
            "bHVlGAIgASgLMhgucmF3ZGF0YS5NYXJrZXRTbGlkZVBhY2s6AjgBGl8KGU1h",
            "cmtldFNsaWRlUGFja01hcEFCRW50cnkSCwoDa2V5GAEgASgJEjEKBXZhbHVl",
            "GAIgASgLMiIucmF3ZGF0YS5NYXJrZXRTbGlkZVBhY2tNYXBBQlZhbHVlOgI4",
            "ARpkCh5NYXJrZXRTbGlkZVBhY2tNYXBBQlBhdGNoRW50cnkSCwoDa2V5GAEg",
            "ASgJEjEKBXZhbHVlGAIgASgLMiIucmF3ZGF0YS5NYXJrZXRTbGlkZVBhY2tN",
            "YXBBQlZhbHVlOgI4AUI9Wi1naXRsYWIuZnVucGx1cy5pby9mYXQvY29uZi9n",
            "ZW4vZ29sYW5nL3Jhd2RhdGGqAgtmYXQucmF3ZGF0YWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.MarketSlidePack), global::fat.rawdata.MarketSlidePack.Parser, new[]{ "Id", "Detailid", "Duration", "EventRefreshTheme" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.MarketSlidePackMapABValue), global::fat.rawdata.MarketSlidePackMapABValue.Parser, new[]{ "MarketSlidePackMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.MarketSlidePackConf), global::fat.rawdata.MarketSlidePackConf.Parser, new[]{ "MarketSlidePackMap", "MarketSlidePackMapAB", "MarketSlidePackMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="MarketSlidePack",table="MarketSlidePackMap",table_wrapper="MarketSlidePackConf",map="true",map_key_type="int32",data="MarketSlidePackConf")
  /// annotation@ab(table_ab="MarketSlidePackMapAB",table_ab_patch="MarketSlidePackMapABPatch",table_ab_value="MarketSlidePackMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@MarketSlidePack(id="id")
  /// </summary>
  public sealed partial class MarketSlidePack : pb::IMessage<MarketSlidePack>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MarketSlidePack> _parser = new pb::MessageParser<MarketSlidePack>(() => new MarketSlidePack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MarketSlidePack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.MarketSlidePackConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MarketSlidePack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MarketSlidePack(MarketSlidePack other) : this() {
      id_ = other.id_;
      detailid_ = other.detailid_.Clone();
      duration_ = other.duration_;
      eventRefreshTheme_ = other.eventRefreshTheme_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MarketSlidePack Clone() {
      return new MarketSlidePack(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 商店轮播礼包
    /// 模板ID
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "detailid" field.</summary>
    public const int DetailidFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_detailid_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> detailid_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 礼包详情id
    /// (填写顺序决定出现顺序)
    /// (MarketSlidePackDetail_id)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Detailid {
      get { return detailid_; }
    }

    /// <summary>Field number for the "duration" field.</summary>
    public const int DurationFieldNumber = 3;
    private int duration_;
    /// <summary>
    /// 每个礼包轮播停留时间(秒)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Duration {
      get { return duration_; }
      set {
        duration_ = value;
      }
    }

    /// <summary>Field number for the "eventRefreshTheme" field.</summary>
    public const int EventRefreshThemeFieldNumber = 5;
    private int eventRefreshTheme_;
    /// <summary>
    /// 刷新弹版主题ID
    /// （EventTheme.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EventRefreshTheme {
      get { return eventRefreshTheme_; }
      set {
        eventRefreshTheme_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MarketSlidePack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MarketSlidePack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!detailid_.Equals(other.detailid_)) return false;
      if (Duration != other.Duration) return false;
      if (EventRefreshTheme != other.EventRefreshTheme) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      hash ^= detailid_.GetHashCode();
      if (Duration != 0) hash ^= Duration.GetHashCode();
      if (EventRefreshTheme != 0) hash ^= EventRefreshTheme.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      detailid_.WriteTo(output, _repeated_detailid_codec);
      if (Duration != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Duration);
      }
      if (EventRefreshTheme != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(EventRefreshTheme);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      detailid_.WriteTo(ref output, _repeated_detailid_codec);
      if (Duration != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Duration);
      }
      if (EventRefreshTheme != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(EventRefreshTheme);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      size += detailid_.CalculateSize(_repeated_detailid_codec);
      if (Duration != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Duration);
      }
      if (EventRefreshTheme != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EventRefreshTheme);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MarketSlidePack other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      detailid_.Add(other.detailid_);
      if (other.Duration != 0) {
        Duration = other.Duration;
      }
      if (other.EventRefreshTheme != 0) {
        EventRefreshTheme = other.EventRefreshTheme;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            detailid_.AddEntriesFrom(input, _repeated_detailid_codec);
            break;
          }
          case 24: {
            Duration = input.ReadInt32();
            break;
          }
          case 40: {
            EventRefreshTheme = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            detailid_.AddEntriesFrom(ref input, _repeated_detailid_codec);
            break;
          }
          case 24: {
            Duration = input.ReadInt32();
            break;
          }
          case 40: {
            EventRefreshTheme = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MarketSlidePackMapABValue : pb::IMessage<MarketSlidePackMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MarketSlidePackMapABValue> _parser = new pb::MessageParser<MarketSlidePackMapABValue>(() => new MarketSlidePackMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MarketSlidePackMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.MarketSlidePackConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MarketSlidePackMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MarketSlidePackMapABValue(MarketSlidePackMapABValue other) : this() {
      marketSlidePackMap_ = other.marketSlidePackMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MarketSlidePackMapABValue Clone() {
      return new MarketSlidePackMapABValue(this);
    }

    /// <summary>Field number for the "MarketSlidePackMap" field.</summary>
    public const int MarketSlidePackMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.MarketSlidePack>.Codec _map_marketSlidePackMap_codec
        = new pbc::MapField<int, global::fat.rawdata.MarketSlidePack>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.MarketSlidePack.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.MarketSlidePack> marketSlidePackMap_ = new pbc::MapField<int, global::fat.rawdata.MarketSlidePack>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.MarketSlidePack> MarketSlidePackMap {
      get { return marketSlidePackMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MarketSlidePackMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MarketSlidePackMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!MarketSlidePackMap.Equals(other.MarketSlidePackMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= MarketSlidePackMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      marketSlidePackMap_.WriteTo(output, _map_marketSlidePackMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      marketSlidePackMap_.WriteTo(ref output, _map_marketSlidePackMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += marketSlidePackMap_.CalculateSize(_map_marketSlidePackMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MarketSlidePackMapABValue other) {
      if (other == null) {
        return;
      }
      marketSlidePackMap_.Add(other.marketSlidePackMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            marketSlidePackMap_.AddEntriesFrom(input, _map_marketSlidePackMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            marketSlidePackMap_.AddEntriesFrom(ref input, _map_marketSlidePackMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MarketSlidePackConf : pb::IMessage<MarketSlidePackConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MarketSlidePackConf> _parser = new pb::MessageParser<MarketSlidePackConf>(() => new MarketSlidePackConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MarketSlidePackConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.MarketSlidePackConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MarketSlidePackConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MarketSlidePackConf(MarketSlidePackConf other) : this() {
      marketSlidePackMap_ = other.marketSlidePackMap_.Clone();
      marketSlidePackMapAB_ = other.marketSlidePackMapAB_.Clone();
      marketSlidePackMapABPatch_ = other.marketSlidePackMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MarketSlidePackConf Clone() {
      return new MarketSlidePackConf(this);
    }

    /// <summary>Field number for the "MarketSlidePackMap" field.</summary>
    public const int MarketSlidePackMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.MarketSlidePack>.Codec _map_marketSlidePackMap_codec
        = new pbc::MapField<int, global::fat.rawdata.MarketSlidePack>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.MarketSlidePack.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.MarketSlidePack> marketSlidePackMap_ = new pbc::MapField<int, global::fat.rawdata.MarketSlidePack>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.MarketSlidePack> MarketSlidePackMap {
      get { return marketSlidePackMap_; }
    }

    /// <summary>Field number for the "MarketSlidePackMapAB" field.</summary>
    public const int MarketSlidePackMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.MarketSlidePackMapABValue>.Codec _map_marketSlidePackMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.MarketSlidePackMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.MarketSlidePackMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.MarketSlidePackMapABValue> marketSlidePackMapAB_ = new pbc::MapField<string, global::fat.rawdata.MarketSlidePackMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.MarketSlidePackMapABValue> MarketSlidePackMapAB {
      get { return marketSlidePackMapAB_; }
    }

    /// <summary>Field number for the "MarketSlidePackMapABPatch" field.</summary>
    public const int MarketSlidePackMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.MarketSlidePackMapABValue>.Codec _map_marketSlidePackMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.MarketSlidePackMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.MarketSlidePackMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.MarketSlidePackMapABValue> marketSlidePackMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.MarketSlidePackMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.MarketSlidePackMapABValue> MarketSlidePackMapABPatch {
      get { return marketSlidePackMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MarketSlidePackConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MarketSlidePackConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!MarketSlidePackMap.Equals(other.MarketSlidePackMap)) return false;
      if (!MarketSlidePackMapAB.Equals(other.MarketSlidePackMapAB)) return false;
      if (!MarketSlidePackMapABPatch.Equals(other.MarketSlidePackMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= MarketSlidePackMap.GetHashCode();
      hash ^= MarketSlidePackMapAB.GetHashCode();
      hash ^= MarketSlidePackMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      marketSlidePackMap_.WriteTo(output, _map_marketSlidePackMap_codec);
      marketSlidePackMapAB_.WriteTo(output, _map_marketSlidePackMapAB_codec);
      marketSlidePackMapABPatch_.WriteTo(output, _map_marketSlidePackMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      marketSlidePackMap_.WriteTo(ref output, _map_marketSlidePackMap_codec);
      marketSlidePackMapAB_.WriteTo(ref output, _map_marketSlidePackMapAB_codec);
      marketSlidePackMapABPatch_.WriteTo(ref output, _map_marketSlidePackMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += marketSlidePackMap_.CalculateSize(_map_marketSlidePackMap_codec);
      size += marketSlidePackMapAB_.CalculateSize(_map_marketSlidePackMapAB_codec);
      size += marketSlidePackMapABPatch_.CalculateSize(_map_marketSlidePackMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MarketSlidePackConf other) {
      if (other == null) {
        return;
      }
      marketSlidePackMap_.Add(other.marketSlidePackMap_);
      marketSlidePackMapAB_.Add(other.marketSlidePackMapAB_);
      marketSlidePackMapABPatch_.Add(other.marketSlidePackMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            marketSlidePackMap_.AddEntriesFrom(input, _map_marketSlidePackMap_codec);
            break;
          }
          case 18: {
            marketSlidePackMapAB_.AddEntriesFrom(input, _map_marketSlidePackMapAB_codec);
            break;
          }
          case 26: {
            marketSlidePackMapABPatch_.AddEntriesFrom(input, _map_marketSlidePackMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            marketSlidePackMap_.AddEntriesFrom(ref input, _map_marketSlidePackMap_codec);
            break;
          }
          case 18: {
            marketSlidePackMapAB_.AddEntriesFrom(ref input, _map_marketSlidePackMapAB_codec);
            break;
          }
          case 26: {
            marketSlidePackMapABPatch_.AddEntriesFrom(ref input, _map_marketSlidePackMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
