// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/BuildingCostConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/BuildingCostConf.proto</summary>
  public static partial class BuildingCostConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/BuildingCostConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BuildingCostConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch5yYXdkYXRhL0J1aWxkaW5nQ29zdENvbmYucHJvdG8SB3Jhd2RhdGEiigEK",
            "DEJ1aWxkaW5nQ29zdBIKCgJpZBgBIAEoBRISCgpiYW5uZXJJY29uGAIgASgJ",
            "EgwKBGNvc3QYAyADKAkSEgoKY29zdFJld2FyZBgEIAMoCRISCgppc0Nvc3RU",
            "b29sGAcgASgIEhMKC3Nob3dSZXNJY29uGAUgASgFEg8KB3N0b3J5SWQYBiAB",
            "KAUitgEKFkJ1aWxkaW5nQ29zdE1hcEFCVmFsdWUSTQoPQnVpbGRpbmdDb3N0",
            "TWFwGAEgAygLMjQucmF3ZGF0YS5CdWlsZGluZ0Nvc3RNYXBBQlZhbHVlLkJ1",
            "aWxkaW5nQ29zdE1hcEVudHJ5Gk0KFEJ1aWxkaW5nQ29zdE1hcEVudHJ5EgsK",
            "A2tleRgBIAEoBRIkCgV2YWx1ZRgCIAEoCzIVLnJhd2RhdGEuQnVpbGRpbmdD",
            "b3N0OgI4ASKJBAoQQnVpbGRpbmdDb3N0Q29uZhJHCg9CdWlsZGluZ0Nvc3RN",
            "YXAYASADKAsyLi5yYXdkYXRhLkJ1aWxkaW5nQ29zdENvbmYuQnVpbGRpbmdD",
            "b3N0TWFwRW50cnkSSwoRQnVpbGRpbmdDb3N0TWFwQUIYAiADKAsyMC5yYXdk",
            "YXRhLkJ1aWxkaW5nQ29zdENvbmYuQnVpbGRpbmdDb3N0TWFwQUJFbnRyeRJV",
            "ChZCdWlsZGluZ0Nvc3RNYXBBQlBhdGNoGAMgAygLMjUucmF3ZGF0YS5CdWls",
            "ZGluZ0Nvc3RDb25mLkJ1aWxkaW5nQ29zdE1hcEFCUGF0Y2hFbnRyeRpNChRC",
            "dWlsZGluZ0Nvc3RNYXBFbnRyeRILCgNrZXkYASABKAUSJAoFdmFsdWUYAiAB",
            "KAsyFS5yYXdkYXRhLkJ1aWxkaW5nQ29zdDoCOAEaWQoWQnVpbGRpbmdDb3N0",
            "TWFwQUJFbnRyeRILCgNrZXkYASABKAkSLgoFdmFsdWUYAiABKAsyHy5yYXdk",
            "YXRhLkJ1aWxkaW5nQ29zdE1hcEFCVmFsdWU6AjgBGl4KG0J1aWxkaW5nQ29z",
            "dE1hcEFCUGF0Y2hFbnRyeRILCgNrZXkYASABKAkSLgoFdmFsdWUYAiABKAsy",
            "Hy5yYXdkYXRhLkJ1aWxkaW5nQ29zdE1hcEFCVmFsdWU6AjgBQj1aLWdpdGxh",
            "Yi5mdW5wbHVzLmlvL2ZhdC9jb25mL2dlbi9nb2xhbmcvcmF3ZGF0YaoCC2Zh",
            "dC5yYXdkYXRhYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.BuildingCost), global::fat.rawdata.BuildingCost.Parser, new[]{ "Id", "BannerIcon", "Cost", "CostReward", "IsCostTool", "ShowResIcon", "StoryId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.BuildingCostMapABValue), global::fat.rawdata.BuildingCostMapABValue.Parser, new[]{ "BuildingCostMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.BuildingCostConf), global::fat.rawdata.BuildingCostConf.Parser, new[]{ "BuildingCostMap", "BuildingCostMapAB", "BuildingCostMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="BuildingCost",table="BuildingCostMap",table_wrapper="BuildingCostConf",map="true",map_key_type="int32",data="BuildingCostConf")
  /// annotation@ab(table_ab="BuildingCostMapAB",table_ab_patch="BuildingCostMapABPatch",table_ab_value="BuildingCostMapABValue",ab_patch="true")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@BuildingCost(id="id")
  /// </summary>
  public sealed partial class BuildingCost : pb::IMessage<BuildingCost>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BuildingCost> _parser = new pb::MessageParser<BuildingCost>(() => new BuildingCost());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BuildingCost> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.BuildingCostConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildingCost() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildingCost(BuildingCost other) : this() {
      id_ = other.id_;
      bannerIcon_ = other.bannerIcon_;
      cost_ = other.cost_.Clone();
      costReward_ = other.costReward_.Clone();
      isCostTool_ = other.isCostTool_;
      showResIcon_ = other.showResIcon_;
      storyId_ = other.storyId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildingCost Clone() {
      return new BuildingCost(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 消耗信息ID
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "bannerIcon" field.</summary>
    public const int BannerIconFieldNumber = 2;
    private string bannerIcon_ = "";
    /// <summary>
    /// cost的banner
    /// 显示的图标
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BannerIcon {
      get { return bannerIcon_; }
      set {
        bannerIcon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cost" field.</summary>
    public const int CostFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_cost_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> cost_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 建造消耗
    /// （要求必须有金币）
    /// （要求金币必须排在首位）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Cost {
      get { return cost_; }
    }

    /// <summary>Field number for the "costReward" field.</summary>
    public const int CostRewardFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_costReward_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> costReward_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 消耗奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> CostReward {
      get { return costReward_; }
    }

    /// <summary>Field number for the "isCostTool" field.</summary>
    public const int IsCostToolFieldNumber = 7;
    private bool isCostTool_;
    /// <summary>
    /// 是否消耗工具
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsCostTool {
      get { return isCostTool_; }
      set {
        isCostTool_ = value;
      }
    }

    /// <summary>Field number for the "showResIcon" field.</summary>
    public const int ShowResIconFieldNumber = 5;
    private int showResIcon_;
    /// <summary>
    /// cost消耗的货币图标
    /// （配置ObjBasicConfig.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ShowResIcon {
      get { return showResIcon_; }
      set {
        showResIcon_ = value;
      }
    }

    /// <summary>Field number for the "storyId" field.</summary>
    public const int StoryIdFieldNumber = 6;
    private int storyId_;
    /// <summary>
    /// 消耗结束触发对话
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StoryId {
      get { return storyId_; }
      set {
        storyId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BuildingCost);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BuildingCost other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (BannerIcon != other.BannerIcon) return false;
      if(!cost_.Equals(other.cost_)) return false;
      if(!costReward_.Equals(other.costReward_)) return false;
      if (IsCostTool != other.IsCostTool) return false;
      if (ShowResIcon != other.ShowResIcon) return false;
      if (StoryId != other.StoryId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (BannerIcon.Length != 0) hash ^= BannerIcon.GetHashCode();
      hash ^= cost_.GetHashCode();
      hash ^= costReward_.GetHashCode();
      if (IsCostTool != false) hash ^= IsCostTool.GetHashCode();
      if (ShowResIcon != 0) hash ^= ShowResIcon.GetHashCode();
      if (StoryId != 0) hash ^= StoryId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (BannerIcon.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(BannerIcon);
      }
      cost_.WriteTo(output, _repeated_cost_codec);
      costReward_.WriteTo(output, _repeated_costReward_codec);
      if (ShowResIcon != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ShowResIcon);
      }
      if (StoryId != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(StoryId);
      }
      if (IsCostTool != false) {
        output.WriteRawTag(56);
        output.WriteBool(IsCostTool);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (BannerIcon.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(BannerIcon);
      }
      cost_.WriteTo(ref output, _repeated_cost_codec);
      costReward_.WriteTo(ref output, _repeated_costReward_codec);
      if (ShowResIcon != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ShowResIcon);
      }
      if (StoryId != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(StoryId);
      }
      if (IsCostTool != false) {
        output.WriteRawTag(56);
        output.WriteBool(IsCostTool);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (BannerIcon.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BannerIcon);
      }
      size += cost_.CalculateSize(_repeated_cost_codec);
      size += costReward_.CalculateSize(_repeated_costReward_codec);
      if (IsCostTool != false) {
        size += 1 + 1;
      }
      if (ShowResIcon != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ShowResIcon);
      }
      if (StoryId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StoryId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BuildingCost other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.BannerIcon.Length != 0) {
        BannerIcon = other.BannerIcon;
      }
      cost_.Add(other.cost_);
      costReward_.Add(other.costReward_);
      if (other.IsCostTool != false) {
        IsCostTool = other.IsCostTool;
      }
      if (other.ShowResIcon != 0) {
        ShowResIcon = other.ShowResIcon;
      }
      if (other.StoryId != 0) {
        StoryId = other.StoryId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            BannerIcon = input.ReadString();
            break;
          }
          case 26: {
            cost_.AddEntriesFrom(input, _repeated_cost_codec);
            break;
          }
          case 34: {
            costReward_.AddEntriesFrom(input, _repeated_costReward_codec);
            break;
          }
          case 40: {
            ShowResIcon = input.ReadInt32();
            break;
          }
          case 48: {
            StoryId = input.ReadInt32();
            break;
          }
          case 56: {
            IsCostTool = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            BannerIcon = input.ReadString();
            break;
          }
          case 26: {
            cost_.AddEntriesFrom(ref input, _repeated_cost_codec);
            break;
          }
          case 34: {
            costReward_.AddEntriesFrom(ref input, _repeated_costReward_codec);
            break;
          }
          case 40: {
            ShowResIcon = input.ReadInt32();
            break;
          }
          case 48: {
            StoryId = input.ReadInt32();
            break;
          }
          case 56: {
            IsCostTool = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BuildingCostMapABValue : pb::IMessage<BuildingCostMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BuildingCostMapABValue> _parser = new pb::MessageParser<BuildingCostMapABValue>(() => new BuildingCostMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BuildingCostMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.BuildingCostConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildingCostMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildingCostMapABValue(BuildingCostMapABValue other) : this() {
      buildingCostMap_ = other.buildingCostMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildingCostMapABValue Clone() {
      return new BuildingCostMapABValue(this);
    }

    /// <summary>Field number for the "BuildingCostMap" field.</summary>
    public const int BuildingCostMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.BuildingCost>.Codec _map_buildingCostMap_codec
        = new pbc::MapField<int, global::fat.rawdata.BuildingCost>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.BuildingCost.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.BuildingCost> buildingCostMap_ = new pbc::MapField<int, global::fat.rawdata.BuildingCost>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.BuildingCost> BuildingCostMap {
      get { return buildingCostMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BuildingCostMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BuildingCostMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!BuildingCostMap.Equals(other.BuildingCostMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= BuildingCostMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      buildingCostMap_.WriteTo(output, _map_buildingCostMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      buildingCostMap_.WriteTo(ref output, _map_buildingCostMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += buildingCostMap_.CalculateSize(_map_buildingCostMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BuildingCostMapABValue other) {
      if (other == null) {
        return;
      }
      buildingCostMap_.Add(other.buildingCostMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            buildingCostMap_.AddEntriesFrom(input, _map_buildingCostMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            buildingCostMap_.AddEntriesFrom(ref input, _map_buildingCostMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BuildingCostConf : pb::IMessage<BuildingCostConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BuildingCostConf> _parser = new pb::MessageParser<BuildingCostConf>(() => new BuildingCostConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BuildingCostConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.BuildingCostConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildingCostConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildingCostConf(BuildingCostConf other) : this() {
      buildingCostMap_ = other.buildingCostMap_.Clone();
      buildingCostMapAB_ = other.buildingCostMapAB_.Clone();
      buildingCostMapABPatch_ = other.buildingCostMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BuildingCostConf Clone() {
      return new BuildingCostConf(this);
    }

    /// <summary>Field number for the "BuildingCostMap" field.</summary>
    public const int BuildingCostMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.BuildingCost>.Codec _map_buildingCostMap_codec
        = new pbc::MapField<int, global::fat.rawdata.BuildingCost>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.BuildingCost.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.BuildingCost> buildingCostMap_ = new pbc::MapField<int, global::fat.rawdata.BuildingCost>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.BuildingCost> BuildingCostMap {
      get { return buildingCostMap_; }
    }

    /// <summary>Field number for the "BuildingCostMapAB" field.</summary>
    public const int BuildingCostMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.BuildingCostMapABValue>.Codec _map_buildingCostMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.BuildingCostMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.BuildingCostMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.BuildingCostMapABValue> buildingCostMapAB_ = new pbc::MapField<string, global::fat.rawdata.BuildingCostMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.BuildingCostMapABValue> BuildingCostMapAB {
      get { return buildingCostMapAB_; }
    }

    /// <summary>Field number for the "BuildingCostMapABPatch" field.</summary>
    public const int BuildingCostMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.BuildingCostMapABValue>.Codec _map_buildingCostMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.BuildingCostMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.BuildingCostMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.BuildingCostMapABValue> buildingCostMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.BuildingCostMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.BuildingCostMapABValue> BuildingCostMapABPatch {
      get { return buildingCostMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BuildingCostConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BuildingCostConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!BuildingCostMap.Equals(other.BuildingCostMap)) return false;
      if (!BuildingCostMapAB.Equals(other.BuildingCostMapAB)) return false;
      if (!BuildingCostMapABPatch.Equals(other.BuildingCostMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= BuildingCostMap.GetHashCode();
      hash ^= BuildingCostMapAB.GetHashCode();
      hash ^= BuildingCostMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      buildingCostMap_.WriteTo(output, _map_buildingCostMap_codec);
      buildingCostMapAB_.WriteTo(output, _map_buildingCostMapAB_codec);
      buildingCostMapABPatch_.WriteTo(output, _map_buildingCostMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      buildingCostMap_.WriteTo(ref output, _map_buildingCostMap_codec);
      buildingCostMapAB_.WriteTo(ref output, _map_buildingCostMapAB_codec);
      buildingCostMapABPatch_.WriteTo(ref output, _map_buildingCostMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += buildingCostMap_.CalculateSize(_map_buildingCostMap_codec);
      size += buildingCostMapAB_.CalculateSize(_map_buildingCostMapAB_codec);
      size += buildingCostMapABPatch_.CalculateSize(_map_buildingCostMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BuildingCostConf other) {
      if (other == null) {
        return;
      }
      buildingCostMap_.Add(other.buildingCostMap_);
      buildingCostMapAB_.Add(other.buildingCostMapAB_);
      buildingCostMapABPatch_.Add(other.buildingCostMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            buildingCostMap_.AddEntriesFrom(input, _map_buildingCostMap_codec);
            break;
          }
          case 18: {
            buildingCostMapAB_.AddEntriesFrom(input, _map_buildingCostMapAB_codec);
            break;
          }
          case 26: {
            buildingCostMapABPatch_.AddEntriesFrom(input, _map_buildingCostMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            buildingCostMap_.AddEntriesFrom(ref input, _map_buildingCostMap_codec);
            break;
          }
          case 18: {
            buildingCostMapAB_.AddEntriesFrom(ref input, _map_buildingCostMapAB_codec);
            break;
          }
          case 26: {
            buildingCostMapABPatch_.AddEntriesFrom(ref input, _map_buildingCostMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
