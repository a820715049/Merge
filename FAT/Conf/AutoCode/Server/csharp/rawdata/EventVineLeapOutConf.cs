// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventVineLeapOutConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventVineLeapOutConf.proto</summary>
  public static partial class EventVineLeapOutConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventVineLeapOutConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventVineLeapOutConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiJyYXdkYXRhL0V2ZW50VmluZUxlYXBPdXRDb25mLnByb3RvEgdyYXdkYXRh",
            "ImoKEEV2ZW50VmluZUxlYXBPdXQSCgoCaWQYASABKAUSDwoHb2ZmbGluZRgC",
            "IAMoBRIXCg9vZmZsaW5lT3V0Q291bnQYAyADKAUSDgoGb25saW5lGAQgAygF",
            "EhAKCG91dENvdW50GAUgAygFIs4BChpFdmVudFZpbmVMZWFwT3V0TWFwQUJW",
            "YWx1ZRJZChNFdmVudFZpbmVMZWFwT3V0TWFwGAEgAygLMjwucmF3ZGF0YS5F",
            "dmVudFZpbmVMZWFwT3V0TWFwQUJWYWx1ZS5FdmVudFZpbmVMZWFwT3V0TWFw",
            "RW50cnkaVQoYRXZlbnRWaW5lTGVhcE91dE1hcEVudHJ5EgsKA2tleRgBIAEo",
            "BRIoCgV2YWx1ZRgCIAEoCzIZLnJhd2RhdGEuRXZlbnRWaW5lTGVhcE91dDoC",
            "OAEiyQQKFEV2ZW50VmluZUxlYXBPdXRDb25mElMKE0V2ZW50VmluZUxlYXBP",
            "dXRNYXAYASADKAsyNi5yYXdkYXRhLkV2ZW50VmluZUxlYXBPdXRDb25mLkV2",
            "ZW50VmluZUxlYXBPdXRNYXBFbnRyeRJXChVFdmVudFZpbmVMZWFwT3V0TWFw",
            "QUIYAiADKAsyOC5yYXdkYXRhLkV2ZW50VmluZUxlYXBPdXRDb25mLkV2ZW50",
            "VmluZUxlYXBPdXRNYXBBQkVudHJ5EmEKGkV2ZW50VmluZUxlYXBPdXRNYXBB",
            "QlBhdGNoGAMgAygLMj0ucmF3ZGF0YS5FdmVudFZpbmVMZWFwT3V0Q29uZi5F",
            "dmVudFZpbmVMZWFwT3V0TWFwQUJQYXRjaEVudHJ5GlUKGEV2ZW50VmluZUxl",
            "YXBPdXRNYXBFbnRyeRILCgNrZXkYASABKAUSKAoFdmFsdWUYAiABKAsyGS5y",
            "YXdkYXRhLkV2ZW50VmluZUxlYXBPdXQ6AjgBGmEKGkV2ZW50VmluZUxlYXBP",
            "dXRNYXBBQkVudHJ5EgsKA2tleRgBIAEoCRIyCgV2YWx1ZRgCIAEoCzIjLnJh",
            "d2RhdGEuRXZlbnRWaW5lTGVhcE91dE1hcEFCVmFsdWU6AjgBGmYKH0V2ZW50",
            "VmluZUxlYXBPdXRNYXBBQlBhdGNoRW50cnkSCwoDa2V5GAEgASgJEjIKBXZh",
            "bHVlGAIgASgLMiMucmF3ZGF0YS5FdmVudFZpbmVMZWFwT3V0TWFwQUJWYWx1",
            "ZToCOAFCPVotZ2l0bGFiLmZ1bnBsdXMuaW8vZmF0L2NvbmYvZ2VuL2dvbGFu",
            "Zy9yYXdkYXRhqgILZmF0LnJhd2RhdGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventVineLeapOut), global::fat.rawdata.EventVineLeapOut.Parser, new[]{ "Id", "Offline", "OfflineOutCount", "Online", "OutCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventVineLeapOutMapABValue), global::fat.rawdata.EventVineLeapOutMapABValue.Parser, new[]{ "EventVineLeapOutMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventVineLeapOutConf), global::fat.rawdata.EventVineLeapOutConf.Parser, new[]{ "EventVineLeapOutMap", "EventVineLeapOutMapAB", "EventVineLeapOutMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventVineLeapOut",table="EventVineLeapOutMap",table_wrapper="EventVineLeapOutConf",map="true",map_key_type="int32",data="EventVineLeapOutConf")
  /// annotation@ab(table_ab="EventVineLeapOutMapAB",table_ab_patch="EventVineLeapOutMapABPatch",table_ab_value="EventVineLeapOutMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventVineLeapOut(id="id")
  /// </summary>
  public sealed partial class EventVineLeapOut : pb::IMessage<EventVineLeapOut>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventVineLeapOut> _parser = new pb::MessageParser<EventVineLeapOut>(() => new EventVineLeapOut());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventVineLeapOut> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventVineLeapOutConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventVineLeapOut() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventVineLeapOut(EventVineLeapOut other) : this() {
      id_ = other.id_;
      offline_ = other.offline_.Clone();
      offlineOutCount_ = other.offlineOutCount_.Clone();
      online_ = other.online_.Clone();
      outCount_ = other.outCount_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventVineLeapOut Clone() {
      return new EventVineLeapOut(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// outid
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "offline" field.</summary>
    public const int OfflineFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_offline_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> offline_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 离线刷新时间间隔s
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Offline {
      get { return offline_; }
    }

    /// <summary>Field number for the "offlineOutCount" field.</summary>
    public const int OfflineOutCountFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_offlineOutCount_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> offlineOutCount_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 离线淘汰人数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> OfflineOutCount {
      get { return offlineOutCount_; }
    }

    /// <summary>Field number for the "online" field.</summary>
    public const int OnlineFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_online_codec
        = pb::FieldCodec.ForInt32(34);
    private readonly pbc::RepeatedField<int> online_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 在线刷新时间间隔（s/100)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Online {
      get { return online_; }
    }

    /// <summary>Field number for the "outCount" field.</summary>
    public const int OutCountFieldNumber = 5;
    private static readonly pb::FieldCodec<int> _repeated_outCount_codec
        = pb::FieldCodec.ForInt32(42);
    private readonly pbc::RepeatedField<int> outCount_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 在线淘汰人数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> OutCount {
      get { return outCount_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventVineLeapOut);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventVineLeapOut other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!offline_.Equals(other.offline_)) return false;
      if(!offlineOutCount_.Equals(other.offlineOutCount_)) return false;
      if(!online_.Equals(other.online_)) return false;
      if(!outCount_.Equals(other.outCount_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      hash ^= offline_.GetHashCode();
      hash ^= offlineOutCount_.GetHashCode();
      hash ^= online_.GetHashCode();
      hash ^= outCount_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      offline_.WriteTo(output, _repeated_offline_codec);
      offlineOutCount_.WriteTo(output, _repeated_offlineOutCount_codec);
      online_.WriteTo(output, _repeated_online_codec);
      outCount_.WriteTo(output, _repeated_outCount_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      offline_.WriteTo(ref output, _repeated_offline_codec);
      offlineOutCount_.WriteTo(ref output, _repeated_offlineOutCount_codec);
      online_.WriteTo(ref output, _repeated_online_codec);
      outCount_.WriteTo(ref output, _repeated_outCount_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      size += offline_.CalculateSize(_repeated_offline_codec);
      size += offlineOutCount_.CalculateSize(_repeated_offlineOutCount_codec);
      size += online_.CalculateSize(_repeated_online_codec);
      size += outCount_.CalculateSize(_repeated_outCount_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventVineLeapOut other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      offline_.Add(other.offline_);
      offlineOutCount_.Add(other.offlineOutCount_);
      online_.Add(other.online_);
      outCount_.Add(other.outCount_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            offline_.AddEntriesFrom(input, _repeated_offline_codec);
            break;
          }
          case 26:
          case 24: {
            offlineOutCount_.AddEntriesFrom(input, _repeated_offlineOutCount_codec);
            break;
          }
          case 34:
          case 32: {
            online_.AddEntriesFrom(input, _repeated_online_codec);
            break;
          }
          case 42:
          case 40: {
            outCount_.AddEntriesFrom(input, _repeated_outCount_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            offline_.AddEntriesFrom(ref input, _repeated_offline_codec);
            break;
          }
          case 26:
          case 24: {
            offlineOutCount_.AddEntriesFrom(ref input, _repeated_offlineOutCount_codec);
            break;
          }
          case 34:
          case 32: {
            online_.AddEntriesFrom(ref input, _repeated_online_codec);
            break;
          }
          case 42:
          case 40: {
            outCount_.AddEntriesFrom(ref input, _repeated_outCount_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventVineLeapOutMapABValue : pb::IMessage<EventVineLeapOutMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventVineLeapOutMapABValue> _parser = new pb::MessageParser<EventVineLeapOutMapABValue>(() => new EventVineLeapOutMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventVineLeapOutMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventVineLeapOutConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventVineLeapOutMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventVineLeapOutMapABValue(EventVineLeapOutMapABValue other) : this() {
      eventVineLeapOutMap_ = other.eventVineLeapOutMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventVineLeapOutMapABValue Clone() {
      return new EventVineLeapOutMapABValue(this);
    }

    /// <summary>Field number for the "EventVineLeapOutMap" field.</summary>
    public const int EventVineLeapOutMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventVineLeapOut>.Codec _map_eventVineLeapOutMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventVineLeapOut>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventVineLeapOut.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventVineLeapOut> eventVineLeapOutMap_ = new pbc::MapField<int, global::fat.rawdata.EventVineLeapOut>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventVineLeapOut> EventVineLeapOutMap {
      get { return eventVineLeapOutMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventVineLeapOutMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventVineLeapOutMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventVineLeapOutMap.Equals(other.EventVineLeapOutMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventVineLeapOutMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventVineLeapOutMap_.WriteTo(output, _map_eventVineLeapOutMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventVineLeapOutMap_.WriteTo(ref output, _map_eventVineLeapOutMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventVineLeapOutMap_.CalculateSize(_map_eventVineLeapOutMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventVineLeapOutMapABValue other) {
      if (other == null) {
        return;
      }
      eventVineLeapOutMap_.Add(other.eventVineLeapOutMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventVineLeapOutMap_.AddEntriesFrom(input, _map_eventVineLeapOutMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventVineLeapOutMap_.AddEntriesFrom(ref input, _map_eventVineLeapOutMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventVineLeapOutConf : pb::IMessage<EventVineLeapOutConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventVineLeapOutConf> _parser = new pb::MessageParser<EventVineLeapOutConf>(() => new EventVineLeapOutConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventVineLeapOutConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventVineLeapOutConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventVineLeapOutConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventVineLeapOutConf(EventVineLeapOutConf other) : this() {
      eventVineLeapOutMap_ = other.eventVineLeapOutMap_.Clone();
      eventVineLeapOutMapAB_ = other.eventVineLeapOutMapAB_.Clone();
      eventVineLeapOutMapABPatch_ = other.eventVineLeapOutMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventVineLeapOutConf Clone() {
      return new EventVineLeapOutConf(this);
    }

    /// <summary>Field number for the "EventVineLeapOutMap" field.</summary>
    public const int EventVineLeapOutMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventVineLeapOut>.Codec _map_eventVineLeapOutMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventVineLeapOut>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventVineLeapOut.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventVineLeapOut> eventVineLeapOutMap_ = new pbc::MapField<int, global::fat.rawdata.EventVineLeapOut>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventVineLeapOut> EventVineLeapOutMap {
      get { return eventVineLeapOutMap_; }
    }

    /// <summary>Field number for the "EventVineLeapOutMapAB" field.</summary>
    public const int EventVineLeapOutMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventVineLeapOutMapABValue>.Codec _map_eventVineLeapOutMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventVineLeapOutMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventVineLeapOutMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventVineLeapOutMapABValue> eventVineLeapOutMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventVineLeapOutMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventVineLeapOutMapABValue> EventVineLeapOutMapAB {
      get { return eventVineLeapOutMapAB_; }
    }

    /// <summary>Field number for the "EventVineLeapOutMapABPatch" field.</summary>
    public const int EventVineLeapOutMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventVineLeapOutMapABValue>.Codec _map_eventVineLeapOutMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventVineLeapOutMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventVineLeapOutMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventVineLeapOutMapABValue> eventVineLeapOutMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventVineLeapOutMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventVineLeapOutMapABValue> EventVineLeapOutMapABPatch {
      get { return eventVineLeapOutMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventVineLeapOutConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventVineLeapOutConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventVineLeapOutMap.Equals(other.EventVineLeapOutMap)) return false;
      if (!EventVineLeapOutMapAB.Equals(other.EventVineLeapOutMapAB)) return false;
      if (!EventVineLeapOutMapABPatch.Equals(other.EventVineLeapOutMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventVineLeapOutMap.GetHashCode();
      hash ^= EventVineLeapOutMapAB.GetHashCode();
      hash ^= EventVineLeapOutMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventVineLeapOutMap_.WriteTo(output, _map_eventVineLeapOutMap_codec);
      eventVineLeapOutMapAB_.WriteTo(output, _map_eventVineLeapOutMapAB_codec);
      eventVineLeapOutMapABPatch_.WriteTo(output, _map_eventVineLeapOutMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventVineLeapOutMap_.WriteTo(ref output, _map_eventVineLeapOutMap_codec);
      eventVineLeapOutMapAB_.WriteTo(ref output, _map_eventVineLeapOutMapAB_codec);
      eventVineLeapOutMapABPatch_.WriteTo(ref output, _map_eventVineLeapOutMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventVineLeapOutMap_.CalculateSize(_map_eventVineLeapOutMap_codec);
      size += eventVineLeapOutMapAB_.CalculateSize(_map_eventVineLeapOutMapAB_codec);
      size += eventVineLeapOutMapABPatch_.CalculateSize(_map_eventVineLeapOutMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventVineLeapOutConf other) {
      if (other == null) {
        return;
      }
      eventVineLeapOutMap_.Add(other.eventVineLeapOutMap_);
      eventVineLeapOutMapAB_.Add(other.eventVineLeapOutMapAB_);
      eventVineLeapOutMapABPatch_.Add(other.eventVineLeapOutMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventVineLeapOutMap_.AddEntriesFrom(input, _map_eventVineLeapOutMap_codec);
            break;
          }
          case 18: {
            eventVineLeapOutMapAB_.AddEntriesFrom(input, _map_eventVineLeapOutMapAB_codec);
            break;
          }
          case 26: {
            eventVineLeapOutMapABPatch_.AddEntriesFrom(input, _map_eventVineLeapOutMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventVineLeapOutMap_.AddEntriesFrom(ref input, _map_eventVineLeapOutMap_codec);
            break;
          }
          case 18: {
            eventVineLeapOutMapAB_.AddEntriesFrom(ref input, _map_eventVineLeapOutMapAB_codec);
            break;
          }
          case 26: {
            eventVineLeapOutMapABPatch_.AddEntriesFrom(ref input, _map_eventVineLeapOutMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
