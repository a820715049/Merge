// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/DEGroupConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/DEGroupConf.proto</summary>
  public static partial class DEGroupConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/DEGroupConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DEGroupConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChlyYXdkYXRhL0RFR3JvdXBDb25mLnByb3RvEgdyYXdkYXRhIi0KB0RFR3Jv",
            "dXASCgoCaWQYASABKAUSFgoOaW5jbHVkZUdyb3VwSWQYAiADKAUimAEKEURF",
            "R3JvdXBNYXBBQlZhbHVlEj4KCkRFR3JvdXBNYXAYASADKAsyKi5yYXdkYXRh",
            "LkRFR3JvdXBNYXBBQlZhbHVlLkRFR3JvdXBNYXBFbnRyeRpDCg9ERUdyb3Vw",
            "TWFwRW50cnkSCwoDa2V5GAEgASgFEh8KBXZhbHVlGAIgASgLMhAucmF3ZGF0",
            "YS5ERUdyb3VwOgI4ASK5AwoLREVHcm91cENvbmYSOAoKREVHcm91cE1hcBgB",
            "IAMoCzIkLnJhd2RhdGEuREVHcm91cENvbmYuREVHcm91cE1hcEVudHJ5EjwK",
            "DERFR3JvdXBNYXBBQhgCIAMoCzImLnJhd2RhdGEuREVHcm91cENvbmYuREVH",
            "cm91cE1hcEFCRW50cnkSRgoRREVHcm91cE1hcEFCUGF0Y2gYAyADKAsyKy5y",
            "YXdkYXRhLkRFR3JvdXBDb25mLkRFR3JvdXBNYXBBQlBhdGNoRW50cnkaQwoP",
            "REVHcm91cE1hcEVudHJ5EgsKA2tleRgBIAEoBRIfCgV2YWx1ZRgCIAEoCzIQ",
            "LnJhd2RhdGEuREVHcm91cDoCOAEaTwoRREVHcm91cE1hcEFCRW50cnkSCwoD",
            "a2V5GAEgASgJEikKBXZhbHVlGAIgASgLMhoucmF3ZGF0YS5ERUdyb3VwTWFw",
            "QUJWYWx1ZToCOAEaVAoWREVHcm91cE1hcEFCUGF0Y2hFbnRyeRILCgNrZXkY",
            "ASABKAkSKQoFdmFsdWUYAiABKAsyGi5yYXdkYXRhLkRFR3JvdXBNYXBBQlZh",
            "bHVlOgI4AUI9Wi1naXRsYWIuZnVucGx1cy5pby9mYXQvY29uZi9nZW4vZ29s",
            "YW5nL3Jhd2RhdGGqAgtmYXQucmF3ZGF0YWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.DEGroup), global::fat.rawdata.DEGroup.Parser, new[]{ "Id", "IncludeGroupId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.DEGroupMapABValue), global::fat.rawdata.DEGroupMapABValue.Parser, new[]{ "DEGroupMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.DEGroupConf), global::fat.rawdata.DEGroupConf.Parser, new[]{ "DEGroupMap", "DEGroupMapAB", "DEGroupMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="DEGroup",table="DEGroupMap",table_wrapper="DEGroupConf",map="true",map_key_type="int32",data="DEGroupConf")
  /// annotation@ab(table_ab="DEGroupMapAB",table_ab_patch="DEGroupMapABPatch",table_ab_value="DEGroupMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@DEGroup(id="id")
  /// </summary>
  public sealed partial class DEGroup : pb::IMessage<DEGroup>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DEGroup> _parser = new pb::MessageParser<DEGroup>(() => new DEGroup());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DEGroup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.DEGroupConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DEGroup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DEGroup(DEGroup other) : this() {
      id_ = other.id_;
      includeGroupId_ = other.includeGroupId_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DEGroup Clone() {
      return new DEGroup(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 每日任务
    /// list包含任务组信息ID
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "includeGroupId" field.</summary>
    public const int IncludeGroupIdFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_includeGroupId_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> includeGroupId_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 包含任务组
    /// （DailyEventGroup.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> IncludeGroupId {
      get { return includeGroupId_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DEGroup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DEGroup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!includeGroupId_.Equals(other.includeGroupId_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      hash ^= includeGroupId_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      includeGroupId_.WriteTo(output, _repeated_includeGroupId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      includeGroupId_.WriteTo(ref output, _repeated_includeGroupId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      size += includeGroupId_.CalculateSize(_repeated_includeGroupId_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DEGroup other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      includeGroupId_.Add(other.includeGroupId_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            includeGroupId_.AddEntriesFrom(input, _repeated_includeGroupId_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            includeGroupId_.AddEntriesFrom(ref input, _repeated_includeGroupId_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DEGroupMapABValue : pb::IMessage<DEGroupMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DEGroupMapABValue> _parser = new pb::MessageParser<DEGroupMapABValue>(() => new DEGroupMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DEGroupMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.DEGroupConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DEGroupMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DEGroupMapABValue(DEGroupMapABValue other) : this() {
      dEGroupMap_ = other.dEGroupMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DEGroupMapABValue Clone() {
      return new DEGroupMapABValue(this);
    }

    /// <summary>Field number for the "DEGroupMap" field.</summary>
    public const int DEGroupMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.DEGroup>.Codec _map_dEGroupMap_codec
        = new pbc::MapField<int, global::fat.rawdata.DEGroup>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.DEGroup.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.DEGroup> dEGroupMap_ = new pbc::MapField<int, global::fat.rawdata.DEGroup>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.DEGroup> DEGroupMap {
      get { return dEGroupMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DEGroupMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DEGroupMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!DEGroupMap.Equals(other.DEGroupMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= DEGroupMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      dEGroupMap_.WriteTo(output, _map_dEGroupMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      dEGroupMap_.WriteTo(ref output, _map_dEGroupMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += dEGroupMap_.CalculateSize(_map_dEGroupMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DEGroupMapABValue other) {
      if (other == null) {
        return;
      }
      dEGroupMap_.Add(other.dEGroupMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            dEGroupMap_.AddEntriesFrom(input, _map_dEGroupMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            dEGroupMap_.AddEntriesFrom(ref input, _map_dEGroupMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DEGroupConf : pb::IMessage<DEGroupConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DEGroupConf> _parser = new pb::MessageParser<DEGroupConf>(() => new DEGroupConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DEGroupConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.DEGroupConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DEGroupConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DEGroupConf(DEGroupConf other) : this() {
      dEGroupMap_ = other.dEGroupMap_.Clone();
      dEGroupMapAB_ = other.dEGroupMapAB_.Clone();
      dEGroupMapABPatch_ = other.dEGroupMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DEGroupConf Clone() {
      return new DEGroupConf(this);
    }

    /// <summary>Field number for the "DEGroupMap" field.</summary>
    public const int DEGroupMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.DEGroup>.Codec _map_dEGroupMap_codec
        = new pbc::MapField<int, global::fat.rawdata.DEGroup>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.DEGroup.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.DEGroup> dEGroupMap_ = new pbc::MapField<int, global::fat.rawdata.DEGroup>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.DEGroup> DEGroupMap {
      get { return dEGroupMap_; }
    }

    /// <summary>Field number for the "DEGroupMapAB" field.</summary>
    public const int DEGroupMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.DEGroupMapABValue>.Codec _map_dEGroupMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.DEGroupMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.DEGroupMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.DEGroupMapABValue> dEGroupMapAB_ = new pbc::MapField<string, global::fat.rawdata.DEGroupMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.DEGroupMapABValue> DEGroupMapAB {
      get { return dEGroupMapAB_; }
    }

    /// <summary>Field number for the "DEGroupMapABPatch" field.</summary>
    public const int DEGroupMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.DEGroupMapABValue>.Codec _map_dEGroupMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.DEGroupMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.DEGroupMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.DEGroupMapABValue> dEGroupMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.DEGroupMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.DEGroupMapABValue> DEGroupMapABPatch {
      get { return dEGroupMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DEGroupConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DEGroupConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!DEGroupMap.Equals(other.DEGroupMap)) return false;
      if (!DEGroupMapAB.Equals(other.DEGroupMapAB)) return false;
      if (!DEGroupMapABPatch.Equals(other.DEGroupMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= DEGroupMap.GetHashCode();
      hash ^= DEGroupMapAB.GetHashCode();
      hash ^= DEGroupMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      dEGroupMap_.WriteTo(output, _map_dEGroupMap_codec);
      dEGroupMapAB_.WriteTo(output, _map_dEGroupMapAB_codec);
      dEGroupMapABPatch_.WriteTo(output, _map_dEGroupMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      dEGroupMap_.WriteTo(ref output, _map_dEGroupMap_codec);
      dEGroupMapAB_.WriteTo(ref output, _map_dEGroupMapAB_codec);
      dEGroupMapABPatch_.WriteTo(ref output, _map_dEGroupMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += dEGroupMap_.CalculateSize(_map_dEGroupMap_codec);
      size += dEGroupMapAB_.CalculateSize(_map_dEGroupMapAB_codec);
      size += dEGroupMapABPatch_.CalculateSize(_map_dEGroupMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DEGroupConf other) {
      if (other == null) {
        return;
      }
      dEGroupMap_.Add(other.dEGroupMap_);
      dEGroupMapAB_.Add(other.dEGroupMapAB_);
      dEGroupMapABPatch_.Add(other.dEGroupMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            dEGroupMap_.AddEntriesFrom(input, _map_dEGroupMap_codec);
            break;
          }
          case 18: {
            dEGroupMapAB_.AddEntriesFrom(input, _map_dEGroupMapAB_codec);
            break;
          }
          case 26: {
            dEGroupMapABPatch_.AddEntriesFrom(input, _map_dEGroupMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            dEGroupMap_.AddEntriesFrom(ref input, _map_dEGroupMap_codec);
            break;
          }
          case 18: {
            dEGroupMapAB_.AddEntriesFrom(ref input, _map_dEGroupMapAB_codec);
            break;
          }
          case 26: {
            dEGroupMapABPatch_.AddEntriesFrom(ref input, _map_dEGroupMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
