// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventMineRewardConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventMineRewardConf.proto</summary>
  public static partial class EventMineRewardConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventMineRewardConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventMineRewardConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiFyYXdkYXRhL0V2ZW50TWluZVJld2FyZENvbmYucHJvdG8SB3Jhd2RhdGEi",
            "XQoPRXZlbnRNaW5lUmV3YXJkEgoKAmlkGAEgASgFEhEKCW1pbGVzdG9uZRgC",
            "IAEoBRIXCg9taWxlc3RvbmVSZXdhcmQYAyADKAkSEgoKcmV3YXJkSWNvbhgE",
            "IAEoCSLIAQoZRXZlbnRNaW5lUmV3YXJkTWFwQUJWYWx1ZRJWChJFdmVudE1p",
            "bmVSZXdhcmRNYXAYASADKAsyOi5yYXdkYXRhLkV2ZW50TWluZVJld2FyZE1h",
            "cEFCVmFsdWUuRXZlbnRNaW5lUmV3YXJkTWFwRW50cnkaUwoXRXZlbnRNaW5l",
            "UmV3YXJkTWFwRW50cnkSCwoDa2V5GAEgASgFEicKBXZhbHVlGAIgASgLMhgu",
            "cmF3ZGF0YS5FdmVudE1pbmVSZXdhcmQ6AjgBIrkEChNFdmVudE1pbmVSZXdh",
            "cmRDb25mElAKEkV2ZW50TWluZVJld2FyZE1hcBgBIAMoCzI0LnJhd2RhdGEu",
            "RXZlbnRNaW5lUmV3YXJkQ29uZi5FdmVudE1pbmVSZXdhcmRNYXBFbnRyeRJU",
            "ChRFdmVudE1pbmVSZXdhcmRNYXBBQhgCIAMoCzI2LnJhd2RhdGEuRXZlbnRN",
            "aW5lUmV3YXJkQ29uZi5FdmVudE1pbmVSZXdhcmRNYXBBQkVudHJ5El4KGUV2",
            "ZW50TWluZVJld2FyZE1hcEFCUGF0Y2gYAyADKAsyOy5yYXdkYXRhLkV2ZW50",
            "TWluZVJld2FyZENvbmYuRXZlbnRNaW5lUmV3YXJkTWFwQUJQYXRjaEVudHJ5",
            "GlMKF0V2ZW50TWluZVJld2FyZE1hcEVudHJ5EgsKA2tleRgBIAEoBRInCgV2",
            "YWx1ZRgCIAEoCzIYLnJhd2RhdGEuRXZlbnRNaW5lUmV3YXJkOgI4ARpfChlF",
            "dmVudE1pbmVSZXdhcmRNYXBBQkVudHJ5EgsKA2tleRgBIAEoCRIxCgV2YWx1",
            "ZRgCIAEoCzIiLnJhd2RhdGEuRXZlbnRNaW5lUmV3YXJkTWFwQUJWYWx1ZToC",
            "OAEaZAoeRXZlbnRNaW5lUmV3YXJkTWFwQUJQYXRjaEVudHJ5EgsKA2tleRgB",
            "IAEoCRIxCgV2YWx1ZRgCIAEoCzIiLnJhd2RhdGEuRXZlbnRNaW5lUmV3YXJk",
            "TWFwQUJWYWx1ZToCOAFCPVotZ2l0bGFiLmZ1bnBsdXMuaW8vZmF0L2NvbmYv",
            "Z2VuL2dvbGFuZy9yYXdkYXRhqgILZmF0LnJhd2RhdGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventMineReward), global::fat.rawdata.EventMineReward.Parser, new[]{ "Id", "Milestone", "MilestoneReward", "RewardIcon" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventMineRewardMapABValue), global::fat.rawdata.EventMineRewardMapABValue.Parser, new[]{ "EventMineRewardMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventMineRewardConf), global::fat.rawdata.EventMineRewardConf.Parser, new[]{ "EventMineRewardMap", "EventMineRewardMapAB", "EventMineRewardMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventMineReward",table="EventMineRewardMap",table_wrapper="EventMineRewardConf",map="true",map_key_type="int32",data="EventMineRewardConf")
  /// annotation@ab(table_ab="EventMineRewardMapAB",table_ab_patch="EventMineRewardMapABPatch",table_ab_value="EventMineRewardMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventMineReward(id="id")
  /// </summary>
  public sealed partial class EventMineReward : pb::IMessage<EventMineReward>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventMineReward> _parser = new pb::MessageParser<EventMineReward>(() => new EventMineReward());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventMineReward> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventMineRewardConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMineReward() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMineReward(EventMineReward other) : this() {
      id_ = other.id_;
      milestone_ = other.milestone_;
      milestoneReward_ = other.milestoneReward_.Clone();
      rewardIcon_ = other.rewardIcon_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMineReward Clone() {
      return new EventMineReward(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 阶段 id
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "milestone" field.</summary>
    public const int MilestoneFieldNumber = 2;
    private int milestone_;
    /// <summary>
    /// 阶段进度值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Milestone {
      get { return milestone_; }
      set {
        milestone_ = value;
      }
    }

    /// <summary>Field number for the "milestoneReward" field.</summary>
    public const int MilestoneRewardFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_milestoneReward_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> milestoneReward_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 进度奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> MilestoneReward {
      get { return milestoneReward_; }
    }

    /// <summary>Field number for the "rewardIcon" field.</summary>
    public const int RewardIconFieldNumber = 4;
    private string rewardIcon_ = "";
    /// <summary>
    /// 进度宝箱图
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RewardIcon {
      get { return rewardIcon_; }
      set {
        rewardIcon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventMineReward);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventMineReward other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Milestone != other.Milestone) return false;
      if(!milestoneReward_.Equals(other.milestoneReward_)) return false;
      if (RewardIcon != other.RewardIcon) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Milestone != 0) hash ^= Milestone.GetHashCode();
      hash ^= milestoneReward_.GetHashCode();
      if (RewardIcon.Length != 0) hash ^= RewardIcon.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Milestone != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Milestone);
      }
      milestoneReward_.WriteTo(output, _repeated_milestoneReward_codec);
      if (RewardIcon.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(RewardIcon);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Milestone != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Milestone);
      }
      milestoneReward_.WriteTo(ref output, _repeated_milestoneReward_codec);
      if (RewardIcon.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(RewardIcon);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Milestone != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Milestone);
      }
      size += milestoneReward_.CalculateSize(_repeated_milestoneReward_codec);
      if (RewardIcon.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RewardIcon);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventMineReward other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Milestone != 0) {
        Milestone = other.Milestone;
      }
      milestoneReward_.Add(other.milestoneReward_);
      if (other.RewardIcon.Length != 0) {
        RewardIcon = other.RewardIcon;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Milestone = input.ReadInt32();
            break;
          }
          case 26: {
            milestoneReward_.AddEntriesFrom(input, _repeated_milestoneReward_codec);
            break;
          }
          case 34: {
            RewardIcon = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Milestone = input.ReadInt32();
            break;
          }
          case 26: {
            milestoneReward_.AddEntriesFrom(ref input, _repeated_milestoneReward_codec);
            break;
          }
          case 34: {
            RewardIcon = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventMineRewardMapABValue : pb::IMessage<EventMineRewardMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventMineRewardMapABValue> _parser = new pb::MessageParser<EventMineRewardMapABValue>(() => new EventMineRewardMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventMineRewardMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventMineRewardConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMineRewardMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMineRewardMapABValue(EventMineRewardMapABValue other) : this() {
      eventMineRewardMap_ = other.eventMineRewardMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMineRewardMapABValue Clone() {
      return new EventMineRewardMapABValue(this);
    }

    /// <summary>Field number for the "EventMineRewardMap" field.</summary>
    public const int EventMineRewardMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventMineReward>.Codec _map_eventMineRewardMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventMineReward>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventMineReward.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventMineReward> eventMineRewardMap_ = new pbc::MapField<int, global::fat.rawdata.EventMineReward>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventMineReward> EventMineRewardMap {
      get { return eventMineRewardMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventMineRewardMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventMineRewardMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventMineRewardMap.Equals(other.EventMineRewardMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventMineRewardMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventMineRewardMap_.WriteTo(output, _map_eventMineRewardMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventMineRewardMap_.WriteTo(ref output, _map_eventMineRewardMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventMineRewardMap_.CalculateSize(_map_eventMineRewardMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventMineRewardMapABValue other) {
      if (other == null) {
        return;
      }
      eventMineRewardMap_.Add(other.eventMineRewardMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventMineRewardMap_.AddEntriesFrom(input, _map_eventMineRewardMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventMineRewardMap_.AddEntriesFrom(ref input, _map_eventMineRewardMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventMineRewardConf : pb::IMessage<EventMineRewardConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventMineRewardConf> _parser = new pb::MessageParser<EventMineRewardConf>(() => new EventMineRewardConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventMineRewardConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventMineRewardConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMineRewardConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMineRewardConf(EventMineRewardConf other) : this() {
      eventMineRewardMap_ = other.eventMineRewardMap_.Clone();
      eventMineRewardMapAB_ = other.eventMineRewardMapAB_.Clone();
      eventMineRewardMapABPatch_ = other.eventMineRewardMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMineRewardConf Clone() {
      return new EventMineRewardConf(this);
    }

    /// <summary>Field number for the "EventMineRewardMap" field.</summary>
    public const int EventMineRewardMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventMineReward>.Codec _map_eventMineRewardMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventMineReward>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventMineReward.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventMineReward> eventMineRewardMap_ = new pbc::MapField<int, global::fat.rawdata.EventMineReward>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventMineReward> EventMineRewardMap {
      get { return eventMineRewardMap_; }
    }

    /// <summary>Field number for the "EventMineRewardMapAB" field.</summary>
    public const int EventMineRewardMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventMineRewardMapABValue>.Codec _map_eventMineRewardMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventMineRewardMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventMineRewardMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventMineRewardMapABValue> eventMineRewardMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventMineRewardMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventMineRewardMapABValue> EventMineRewardMapAB {
      get { return eventMineRewardMapAB_; }
    }

    /// <summary>Field number for the "EventMineRewardMapABPatch" field.</summary>
    public const int EventMineRewardMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventMineRewardMapABValue>.Codec _map_eventMineRewardMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventMineRewardMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventMineRewardMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventMineRewardMapABValue> eventMineRewardMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventMineRewardMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventMineRewardMapABValue> EventMineRewardMapABPatch {
      get { return eventMineRewardMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventMineRewardConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventMineRewardConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventMineRewardMap.Equals(other.EventMineRewardMap)) return false;
      if (!EventMineRewardMapAB.Equals(other.EventMineRewardMapAB)) return false;
      if (!EventMineRewardMapABPatch.Equals(other.EventMineRewardMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventMineRewardMap.GetHashCode();
      hash ^= EventMineRewardMapAB.GetHashCode();
      hash ^= EventMineRewardMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventMineRewardMap_.WriteTo(output, _map_eventMineRewardMap_codec);
      eventMineRewardMapAB_.WriteTo(output, _map_eventMineRewardMapAB_codec);
      eventMineRewardMapABPatch_.WriteTo(output, _map_eventMineRewardMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventMineRewardMap_.WriteTo(ref output, _map_eventMineRewardMap_codec);
      eventMineRewardMapAB_.WriteTo(ref output, _map_eventMineRewardMapAB_codec);
      eventMineRewardMapABPatch_.WriteTo(ref output, _map_eventMineRewardMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventMineRewardMap_.CalculateSize(_map_eventMineRewardMap_codec);
      size += eventMineRewardMapAB_.CalculateSize(_map_eventMineRewardMapAB_codec);
      size += eventMineRewardMapABPatch_.CalculateSize(_map_eventMineRewardMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventMineRewardConf other) {
      if (other == null) {
        return;
      }
      eventMineRewardMap_.Add(other.eventMineRewardMap_);
      eventMineRewardMapAB_.Add(other.eventMineRewardMapAB_);
      eventMineRewardMapABPatch_.Add(other.eventMineRewardMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventMineRewardMap_.AddEntriesFrom(input, _map_eventMineRewardMap_codec);
            break;
          }
          case 18: {
            eventMineRewardMapAB_.AddEntriesFrom(input, _map_eventMineRewardMapAB_codec);
            break;
          }
          case 26: {
            eventMineRewardMapABPatch_.AddEntriesFrom(input, _map_eventMineRewardMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventMineRewardMap_.AddEntriesFrom(ref input, _map_eventMineRewardMap_codec);
            break;
          }
          case 18: {
            eventMineRewardMapAB_.AddEntriesFrom(ref input, _map_eventMineRewardMapAB_codec);
            break;
          }
          case 26: {
            eventMineRewardMapABPatch_.AddEntriesFrom(ref input, _map_eventMineRewardMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
