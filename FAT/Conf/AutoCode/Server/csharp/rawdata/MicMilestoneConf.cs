// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/MicMilestoneConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/MicMilestoneConf.proto</summary>
  public static partial class MicMilestoneConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/MicMilestoneConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MicMilestoneConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch5yYXdkYXRhL01pY01pbGVzdG9uZUNvbmYucHJvdG8SB3Jhd2RhdGEi7QIK",
            "DE1pY01pbGVzdG9uZRIKCgJpZBgBIAEoBRIMCgRjb3N0GAMgASgFEhIKCmV2",
            "ZW50R3JvdXAYBCABKAUSFgoOZXZlbnRNYWluVGhlbWUYBSABKAUSGAoQZXZl",
            "bnRTZXR0bGVUaGVtZRgGIAEoBRI5CgpleHBpcmVJdGVtGAcgAygLMiUucmF3",
            "ZGF0YS5NaWNNaWxlc3RvbmUuRXhwaXJlSXRlbUVudHJ5EhIKCmV4dHJhU2Nv",
            "cmUYCCABKAUSOQoKZXh0cmFUb2tlbhgJIAMoCzIlLnJhd2RhdGEuTWljTWls",
            "ZXN0b25lLkV4dHJhVG9rZW5FbnRyeRINCgV0b2tlbhgKIAEoBRoxCg9FeHBp",
            "cmVJdGVtRW50cnkSCwoDa2V5GAEgASgFEg0KBXZhbHVlGAIgASgJOgI4ARox",
            "Cg9FeHRyYVRva2VuRW50cnkSCwoDa2V5GAEgASgFEg0KBXZhbHVlGAIgASgF",
            "OgI4ASK2AQoWTWljTWlsZXN0b25lTWFwQUJWYWx1ZRJNCg9NaWNNaWxlc3Rv",
            "bmVNYXAYASADKAsyNC5yYXdkYXRhLk1pY01pbGVzdG9uZU1hcEFCVmFsdWUu",
            "TWljTWlsZXN0b25lTWFwRW50cnkaTQoUTWljTWlsZXN0b25lTWFwRW50cnkS",
            "CwoDa2V5GAEgASgFEiQKBXZhbHVlGAIgASgLMhUucmF3ZGF0YS5NaWNNaWxl",
            "c3RvbmU6AjgBIokEChBNaWNNaWxlc3RvbmVDb25mEkcKD01pY01pbGVzdG9u",
            "ZU1hcBgBIAMoCzIuLnJhd2RhdGEuTWljTWlsZXN0b25lQ29uZi5NaWNNaWxl",
            "c3RvbmVNYXBFbnRyeRJLChFNaWNNaWxlc3RvbmVNYXBBQhgCIAMoCzIwLnJh",
            "d2RhdGEuTWljTWlsZXN0b25lQ29uZi5NaWNNaWxlc3RvbmVNYXBBQkVudHJ5",
            "ElUKFk1pY01pbGVzdG9uZU1hcEFCUGF0Y2gYAyADKAsyNS5yYXdkYXRhLk1p",
            "Y01pbGVzdG9uZUNvbmYuTWljTWlsZXN0b25lTWFwQUJQYXRjaEVudHJ5Gk0K",
            "FE1pY01pbGVzdG9uZU1hcEVudHJ5EgsKA2tleRgBIAEoBRIkCgV2YWx1ZRgC",
            "IAEoCzIVLnJhd2RhdGEuTWljTWlsZXN0b25lOgI4ARpZChZNaWNNaWxlc3Rv",
            "bmVNYXBBQkVudHJ5EgsKA2tleRgBIAEoCRIuCgV2YWx1ZRgCIAEoCzIfLnJh",
            "d2RhdGEuTWljTWlsZXN0b25lTWFwQUJWYWx1ZToCOAEaXgobTWljTWlsZXN0",
            "b25lTWFwQUJQYXRjaEVudHJ5EgsKA2tleRgBIAEoCRIuCgV2YWx1ZRgCIAEo",
            "CzIfLnJhd2RhdGEuTWljTWlsZXN0b25lTWFwQUJWYWx1ZToCOAFCPVotZ2l0",
            "bGFiLmZ1bnBsdXMuaW8vZmF0L2NvbmYvZ2VuL2dvbGFuZy9yYXdkYXRhqgIL",
            "ZmF0LnJhd2RhdGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.MicMilestone), global::fat.rawdata.MicMilestone.Parser, new[]{ "Id", "Cost", "EventGroup", "EventMainTheme", "EventSettleTheme", "ExpireItem", "ExtraScore", "ExtraToken", "Token" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.MicMilestoneMapABValue), global::fat.rawdata.MicMilestoneMapABValue.Parser, new[]{ "MicMilestoneMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.MicMilestoneConf), global::fat.rawdata.MicMilestoneConf.Parser, new[]{ "MicMilestoneMap", "MicMilestoneMapAB", "MicMilestoneMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="MicMilestone",table="MicMilestoneMap",table_wrapper="MicMilestoneConf",map="true",map_key_type="int32",data="MicMilestoneConf")
  /// annotation@ab(table_ab="MicMilestoneMapAB",table_ab_patch="MicMilestoneMapABPatch",table_ab_value="MicMilestoneMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@MicMilestone(id="id")
  /// </summary>
  public sealed partial class MicMilestone : pb::IMessage<MicMilestone>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MicMilestone> _parser = new pb::MessageParser<MicMilestone>(() => new MicMilestone());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MicMilestone> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.MicMilestoneConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MicMilestone() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MicMilestone(MicMilestone other) : this() {
      id_ = other.id_;
      cost_ = other.cost_;
      eventGroup_ = other.eventGroup_;
      eventMainTheme_ = other.eventMainTheme_;
      eventSettleTheme_ = other.eventSettleTheme_;
      expireItem_ = other.expireItem_.Clone();
      extraScore_ = other.extraScore_;
      extraToken_ = other.extraToken_.Clone();
      token_ = other.token_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MicMilestone Clone() {
      return new MicMilestone(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 活动模板id
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "cost" field.</summary>
    public const int CostFieldNumber = 3;
    private int cost_;
    /// <summary>
    /// 消耗内容
    /// （ObjBasic.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Cost {
      get { return cost_; }
      set {
        cost_ = value;
      }
    }

    /// <summary>Field number for the "eventGroup" field.</summary>
    public const int EventGroupFieldNumber = 4;
    private int eventGroup_;
    /// <summary>
    /// 活动用户分层
    /// （GradeIndexMapping.id）
    /// （CastleMilestoneDetail.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EventGroup {
      get { return eventGroup_; }
      set {
        eventGroup_ = value;
      }
    }

    /// <summary>Field number for the "eventMainTheme" field.</summary>
    public const int EventMainThemeFieldNumber = 5;
    private int eventMainTheme_;
    /// <summary>
    /// 活动主界面弹板ID
    /// （EventTheme.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EventMainTheme {
      get { return eventMainTheme_; }
      set {
        eventMainTheme_ = value;
      }
    }

    /// <summary>Field number for the "eventSettleTheme" field.</summary>
    public const int EventSettleThemeFieldNumber = 6;
    private int eventSettleTheme_;
    /// <summary>
    /// 活动结算弹板ID
    /// （EventTheme.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EventSettleTheme {
      get { return eventSettleTheme_; }
      set {
        eventSettleTheme_ = value;
      }
    }

    /// <summary>Field number for the "expireItem" field.</summary>
    public const int ExpireItemFieldNumber = 7;
    private static readonly pbc::MapField<int, string>.Codec _map_expireItem_codec
        = new pbc::MapField<int, string>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForString(18, ""), 58);
    private readonly pbc::MapField<int, string> expireItem_ = new pbc::MapField<int, string>();
    /// <summary>
    /// 活动结束时，通过弹板的方式一次性删除棋子
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, string> ExpireItem {
      get { return expireItem_; }
    }

    /// <summary>Field number for the "extraScore" field.</summary>
    public const int ExtraScoreFieldNumber = 8;
    private int extraScore_;
    /// <summary>
    /// 积分计算方式
    /// （EventExtraScore.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ExtraScore {
      get { return extraScore_; }
      set {
        extraScore_ = value;
      }
    }

    /// <summary>Field number for the "extraToken" field.</summary>
    public const int ExtraTokenFieldNumber = 9;
    private static readonly pbc::MapField<int, int>.Codec _map_extraToken_codec
        = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForInt32(16, 0), 74);
    private readonly pbc::MapField<int, int> extraToken_ = new pbc::MapField<int, int>();
    /// <summary>
    /// 里程碑额外货币ID和基础货币的兑换形式
    /// （ObjBasic.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, int> ExtraToken {
      get { return extraToken_; }
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 10;
    private int token_;
    /// <summary>
    /// 里程碑基础货币ID
    /// （ObjBasic.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Token {
      get { return token_; }
      set {
        token_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MicMilestone);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MicMilestone other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Cost != other.Cost) return false;
      if (EventGroup != other.EventGroup) return false;
      if (EventMainTheme != other.EventMainTheme) return false;
      if (EventSettleTheme != other.EventSettleTheme) return false;
      if (!ExpireItem.Equals(other.ExpireItem)) return false;
      if (ExtraScore != other.ExtraScore) return false;
      if (!ExtraToken.Equals(other.ExtraToken)) return false;
      if (Token != other.Token) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Cost != 0) hash ^= Cost.GetHashCode();
      if (EventGroup != 0) hash ^= EventGroup.GetHashCode();
      if (EventMainTheme != 0) hash ^= EventMainTheme.GetHashCode();
      if (EventSettleTheme != 0) hash ^= EventSettleTheme.GetHashCode();
      hash ^= ExpireItem.GetHashCode();
      if (ExtraScore != 0) hash ^= ExtraScore.GetHashCode();
      hash ^= ExtraToken.GetHashCode();
      if (Token != 0) hash ^= Token.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Cost != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Cost);
      }
      if (EventGroup != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(EventGroup);
      }
      if (EventMainTheme != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(EventMainTheme);
      }
      if (EventSettleTheme != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(EventSettleTheme);
      }
      expireItem_.WriteTo(output, _map_expireItem_codec);
      if (ExtraScore != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(ExtraScore);
      }
      extraToken_.WriteTo(output, _map_extraToken_codec);
      if (Token != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Token);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Cost != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Cost);
      }
      if (EventGroup != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(EventGroup);
      }
      if (EventMainTheme != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(EventMainTheme);
      }
      if (EventSettleTheme != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(EventSettleTheme);
      }
      expireItem_.WriteTo(ref output, _map_expireItem_codec);
      if (ExtraScore != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(ExtraScore);
      }
      extraToken_.WriteTo(ref output, _map_extraToken_codec);
      if (Token != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Token);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Cost != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Cost);
      }
      if (EventGroup != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EventGroup);
      }
      if (EventMainTheme != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EventMainTheme);
      }
      if (EventSettleTheme != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EventSettleTheme);
      }
      size += expireItem_.CalculateSize(_map_expireItem_codec);
      if (ExtraScore != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ExtraScore);
      }
      size += extraToken_.CalculateSize(_map_extraToken_codec);
      if (Token != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Token);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MicMilestone other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Cost != 0) {
        Cost = other.Cost;
      }
      if (other.EventGroup != 0) {
        EventGroup = other.EventGroup;
      }
      if (other.EventMainTheme != 0) {
        EventMainTheme = other.EventMainTheme;
      }
      if (other.EventSettleTheme != 0) {
        EventSettleTheme = other.EventSettleTheme;
      }
      expireItem_.Add(other.expireItem_);
      if (other.ExtraScore != 0) {
        ExtraScore = other.ExtraScore;
      }
      extraToken_.Add(other.extraToken_);
      if (other.Token != 0) {
        Token = other.Token;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 24: {
            Cost = input.ReadInt32();
            break;
          }
          case 32: {
            EventGroup = input.ReadInt32();
            break;
          }
          case 40: {
            EventMainTheme = input.ReadInt32();
            break;
          }
          case 48: {
            EventSettleTheme = input.ReadInt32();
            break;
          }
          case 58: {
            expireItem_.AddEntriesFrom(input, _map_expireItem_codec);
            break;
          }
          case 64: {
            ExtraScore = input.ReadInt32();
            break;
          }
          case 74: {
            extraToken_.AddEntriesFrom(input, _map_extraToken_codec);
            break;
          }
          case 80: {
            Token = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 24: {
            Cost = input.ReadInt32();
            break;
          }
          case 32: {
            EventGroup = input.ReadInt32();
            break;
          }
          case 40: {
            EventMainTheme = input.ReadInt32();
            break;
          }
          case 48: {
            EventSettleTheme = input.ReadInt32();
            break;
          }
          case 58: {
            expireItem_.AddEntriesFrom(ref input, _map_expireItem_codec);
            break;
          }
          case 64: {
            ExtraScore = input.ReadInt32();
            break;
          }
          case 74: {
            extraToken_.AddEntriesFrom(ref input, _map_extraToken_codec);
            break;
          }
          case 80: {
            Token = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MicMilestoneMapABValue : pb::IMessage<MicMilestoneMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MicMilestoneMapABValue> _parser = new pb::MessageParser<MicMilestoneMapABValue>(() => new MicMilestoneMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MicMilestoneMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.MicMilestoneConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MicMilestoneMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MicMilestoneMapABValue(MicMilestoneMapABValue other) : this() {
      micMilestoneMap_ = other.micMilestoneMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MicMilestoneMapABValue Clone() {
      return new MicMilestoneMapABValue(this);
    }

    /// <summary>Field number for the "MicMilestoneMap" field.</summary>
    public const int MicMilestoneMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.MicMilestone>.Codec _map_micMilestoneMap_codec
        = new pbc::MapField<int, global::fat.rawdata.MicMilestone>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.MicMilestone.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.MicMilestone> micMilestoneMap_ = new pbc::MapField<int, global::fat.rawdata.MicMilestone>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.MicMilestone> MicMilestoneMap {
      get { return micMilestoneMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MicMilestoneMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MicMilestoneMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!MicMilestoneMap.Equals(other.MicMilestoneMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= MicMilestoneMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      micMilestoneMap_.WriteTo(output, _map_micMilestoneMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      micMilestoneMap_.WriteTo(ref output, _map_micMilestoneMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += micMilestoneMap_.CalculateSize(_map_micMilestoneMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MicMilestoneMapABValue other) {
      if (other == null) {
        return;
      }
      micMilestoneMap_.Add(other.micMilestoneMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            micMilestoneMap_.AddEntriesFrom(input, _map_micMilestoneMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            micMilestoneMap_.AddEntriesFrom(ref input, _map_micMilestoneMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MicMilestoneConf : pb::IMessage<MicMilestoneConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MicMilestoneConf> _parser = new pb::MessageParser<MicMilestoneConf>(() => new MicMilestoneConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MicMilestoneConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.MicMilestoneConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MicMilestoneConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MicMilestoneConf(MicMilestoneConf other) : this() {
      micMilestoneMap_ = other.micMilestoneMap_.Clone();
      micMilestoneMapAB_ = other.micMilestoneMapAB_.Clone();
      micMilestoneMapABPatch_ = other.micMilestoneMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MicMilestoneConf Clone() {
      return new MicMilestoneConf(this);
    }

    /// <summary>Field number for the "MicMilestoneMap" field.</summary>
    public const int MicMilestoneMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.MicMilestone>.Codec _map_micMilestoneMap_codec
        = new pbc::MapField<int, global::fat.rawdata.MicMilestone>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.MicMilestone.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.MicMilestone> micMilestoneMap_ = new pbc::MapField<int, global::fat.rawdata.MicMilestone>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.MicMilestone> MicMilestoneMap {
      get { return micMilestoneMap_; }
    }

    /// <summary>Field number for the "MicMilestoneMapAB" field.</summary>
    public const int MicMilestoneMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.MicMilestoneMapABValue>.Codec _map_micMilestoneMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.MicMilestoneMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.MicMilestoneMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.MicMilestoneMapABValue> micMilestoneMapAB_ = new pbc::MapField<string, global::fat.rawdata.MicMilestoneMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.MicMilestoneMapABValue> MicMilestoneMapAB {
      get { return micMilestoneMapAB_; }
    }

    /// <summary>Field number for the "MicMilestoneMapABPatch" field.</summary>
    public const int MicMilestoneMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.MicMilestoneMapABValue>.Codec _map_micMilestoneMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.MicMilestoneMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.MicMilestoneMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.MicMilestoneMapABValue> micMilestoneMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.MicMilestoneMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.MicMilestoneMapABValue> MicMilestoneMapABPatch {
      get { return micMilestoneMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MicMilestoneConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MicMilestoneConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!MicMilestoneMap.Equals(other.MicMilestoneMap)) return false;
      if (!MicMilestoneMapAB.Equals(other.MicMilestoneMapAB)) return false;
      if (!MicMilestoneMapABPatch.Equals(other.MicMilestoneMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= MicMilestoneMap.GetHashCode();
      hash ^= MicMilestoneMapAB.GetHashCode();
      hash ^= MicMilestoneMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      micMilestoneMap_.WriteTo(output, _map_micMilestoneMap_codec);
      micMilestoneMapAB_.WriteTo(output, _map_micMilestoneMapAB_codec);
      micMilestoneMapABPatch_.WriteTo(output, _map_micMilestoneMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      micMilestoneMap_.WriteTo(ref output, _map_micMilestoneMap_codec);
      micMilestoneMapAB_.WriteTo(ref output, _map_micMilestoneMapAB_codec);
      micMilestoneMapABPatch_.WriteTo(ref output, _map_micMilestoneMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += micMilestoneMap_.CalculateSize(_map_micMilestoneMap_codec);
      size += micMilestoneMapAB_.CalculateSize(_map_micMilestoneMapAB_codec);
      size += micMilestoneMapABPatch_.CalculateSize(_map_micMilestoneMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MicMilestoneConf other) {
      if (other == null) {
        return;
      }
      micMilestoneMap_.Add(other.micMilestoneMap_);
      micMilestoneMapAB_.Add(other.micMilestoneMapAB_);
      micMilestoneMapABPatch_.Add(other.micMilestoneMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            micMilestoneMap_.AddEntriesFrom(input, _map_micMilestoneMap_codec);
            break;
          }
          case 18: {
            micMilestoneMapAB_.AddEntriesFrom(input, _map_micMilestoneMapAB_codec);
            break;
          }
          case 26: {
            micMilestoneMapABPatch_.AddEntriesFrom(input, _map_micMilestoneMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            micMilestoneMap_.AddEntriesFrom(ref input, _map_micMilestoneMap_codec);
            break;
          }
          case 18: {
            micMilestoneMapAB_.AddEntriesFrom(ref input, _map_micMilestoneMapAB_codec);
            break;
          }
          case 26: {
            micMilestoneMapABPatch_.AddEntriesFrom(ref input, _map_micMilestoneMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
