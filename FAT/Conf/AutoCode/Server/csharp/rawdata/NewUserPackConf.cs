// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/NewUserPackConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/NewUserPackConf.proto</summary>
  public static partial class NewUserPackConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/NewUserPackConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static NewUserPackConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch1yYXdkYXRhL05ld1VzZXJQYWNrQ29uZi5wcm90bxIHcmF3ZGF0YRoXcmF3",
            "ZGF0YS9FdmVudFR5cGUucHJvdG8isgEKC05ld1VzZXJQYWNrEgoKAmlkGAEg",
            "ASgFEiUKCUV2ZW50VHlwZRgKIAEoDjISLnJhd2RhdGEuRXZlbnRUeXBlEhMK",
            "C2FjdGl2ZWxldmVsGAMgASgFEhAKCGR1cmF0aW9uGAQgASgFEhIKCmV2ZW50",
            "VGhlbWUYDCABKAUSDgoGcGFja0lkGA0gASgFEhAKCHBheXRpbWVzGAggASgF",
            "EhMKC3JlZnJlc2h0aW1lGAYgASgFIrABChVOZXdVc2VyUGFja01hcEFCVmFs",
            "dWUSSgoOTmV3VXNlclBhY2tNYXAYASADKAsyMi5yYXdkYXRhLk5ld1VzZXJQ",
            "YWNrTWFwQUJWYWx1ZS5OZXdVc2VyUGFja01hcEVudHJ5GksKE05ld1VzZXJQ",
            "YWNrTWFwRW50cnkSCwoDa2V5GAEgASgFEiMKBXZhbHVlGAIgASgLMhQucmF3",
            "ZGF0YS5OZXdVc2VyUGFjazoCOAEi+QMKD05ld1VzZXJQYWNrQ29uZhJECg5O",
            "ZXdVc2VyUGFja01hcBgBIAMoCzIsLnJhd2RhdGEuTmV3VXNlclBhY2tDb25m",
            "Lk5ld1VzZXJQYWNrTWFwRW50cnkSSAoQTmV3VXNlclBhY2tNYXBBQhgCIAMo",
            "CzIuLnJhd2RhdGEuTmV3VXNlclBhY2tDb25mLk5ld1VzZXJQYWNrTWFwQUJF",
            "bnRyeRJSChVOZXdVc2VyUGFja01hcEFCUGF0Y2gYAyADKAsyMy5yYXdkYXRh",
            "Lk5ld1VzZXJQYWNrQ29uZi5OZXdVc2VyUGFja01hcEFCUGF0Y2hFbnRyeRpL",
            "ChNOZXdVc2VyUGFja01hcEVudHJ5EgsKA2tleRgBIAEoBRIjCgV2YWx1ZRgC",
            "IAEoCzIULnJhd2RhdGEuTmV3VXNlclBhY2s6AjgBGlcKFU5ld1VzZXJQYWNr",
            "TWFwQUJFbnRyeRILCgNrZXkYASABKAkSLQoFdmFsdWUYAiABKAsyHi5yYXdk",
            "YXRhLk5ld1VzZXJQYWNrTWFwQUJWYWx1ZToCOAEaXAoaTmV3VXNlclBhY2tN",
            "YXBBQlBhdGNoRW50cnkSCwoDa2V5GAEgASgJEi0KBXZhbHVlGAIgASgLMh4u",
            "cmF3ZGF0YS5OZXdVc2VyUGFja01hcEFCVmFsdWU6AjgBQj1aLWdpdGxhYi5m",
            "dW5wbHVzLmlvL2ZhdC9jb25mL2dlbi9nb2xhbmcvcmF3ZGF0YaoCC2ZhdC5y",
            "YXdkYXRhYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::fat.rawdata.EventTypeReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.NewUserPack), global::fat.rawdata.NewUserPack.Parser, new[]{ "Id", "EventType", "Activelevel", "Duration", "EventTheme", "PackId", "Paytimes", "Refreshtime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.NewUserPackMapABValue), global::fat.rawdata.NewUserPackMapABValue.Parser, new[]{ "NewUserPackMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.NewUserPackConf), global::fat.rawdata.NewUserPackConf.Parser, new[]{ "NewUserPackMap", "NewUserPackMapAB", "NewUserPackMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="NewUserPack",table="NewUserPackMap",table_wrapper="NewUserPackConf",map="true",map_key_type="int32",data="NewUserPackConf")
  /// annotation@ab(table_ab="NewUserPackMapAB",table_ab_patch="NewUserPackMapABPatch",table_ab_value="NewUserPackMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@NewUserPack(id="id")
  /// </summary>
  public sealed partial class NewUserPack : pb::IMessage<NewUserPack>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NewUserPack> _parser = new pb::MessageParser<NewUserPack>(() => new NewUserPack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NewUserPack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.NewUserPackConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewUserPack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewUserPack(NewUserPack other) : this() {
      id_ = other.id_;
      eventType_ = other.eventType_;
      activelevel_ = other.activelevel_;
      duration_ = other.duration_;
      eventTheme_ = other.eventTheme_;
      packId_ = other.packId_;
      paytimes_ = other.paytimes_;
      refreshtime_ = other.refreshtime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewUserPack Clone() {
      return new NewUserPack(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 新手礼包活动ID
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "EventType" field.</summary>
    public const int EventTypeFieldNumber = 10;
    private global::fat.rawdata.EventType eventType_ = global::fat.rawdata.EventType.Default;
    /// <summary>
    /// EventType类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::fat.rawdata.EventType EventType {
      get { return eventType_; }
      set {
        eventType_ = value;
      }
    }

    /// <summary>Field number for the "activelevel" field.</summary>
    public const int ActivelevelFieldNumber = 3;
    private int activelevel_;
    /// <summary>
    /// 触发等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Activelevel {
      get { return activelevel_; }
      set {
        activelevel_ = value;
      }
    }

    /// <summary>Field number for the "duration" field.</summary>
    public const int DurationFieldNumber = 4;
    private int duration_;
    /// <summary>
    /// 礼包持续时间(秒)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Duration {
      get { return duration_; }
      set {
        duration_ = value;
      }
    }

    /// <summary>Field number for the "eventTheme" field.</summary>
    public const int EventThemeFieldNumber = 12;
    private int eventTheme_;
    /// <summary>
    /// 活动弹板ID
    /// （EventTheme.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EventTheme {
      get { return eventTheme_; }
      set {
        eventTheme_ = value;
      }
    }

    /// <summary>Field number for the "packId" field.</summary>
    public const int PackIdFieldNumber = 13;
    private int packId_;
    /// <summary>
    /// 礼包ID
    /// （IAPPack.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PackId {
      get { return packId_; }
      set {
        packId_ = value;
      }
    }

    /// <summary>Field number for the "paytimes" field.</summary>
    public const int PaytimesFieldNumber = 8;
    private int paytimes_;
    /// <summary>
    /// 限购次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Paytimes {
      get { return paytimes_; }
      set {
        paytimes_ = value;
      }
    }

    /// <summary>Field number for the "refreshtime" field.</summary>
    public const int RefreshtimeFieldNumber = 6;
    private int refreshtime_;
    /// <summary>
    /// 倒计时刷新时间UTCTIME
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Refreshtime {
      get { return refreshtime_; }
      set {
        refreshtime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NewUserPack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NewUserPack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (EventType != other.EventType) return false;
      if (Activelevel != other.Activelevel) return false;
      if (Duration != other.Duration) return false;
      if (EventTheme != other.EventTheme) return false;
      if (PackId != other.PackId) return false;
      if (Paytimes != other.Paytimes) return false;
      if (Refreshtime != other.Refreshtime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (EventType != global::fat.rawdata.EventType.Default) hash ^= EventType.GetHashCode();
      if (Activelevel != 0) hash ^= Activelevel.GetHashCode();
      if (Duration != 0) hash ^= Duration.GetHashCode();
      if (EventTheme != 0) hash ^= EventTheme.GetHashCode();
      if (PackId != 0) hash ^= PackId.GetHashCode();
      if (Paytimes != 0) hash ^= Paytimes.GetHashCode();
      if (Refreshtime != 0) hash ^= Refreshtime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Activelevel != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Activelevel);
      }
      if (Duration != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Duration);
      }
      if (Refreshtime != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Refreshtime);
      }
      if (Paytimes != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Paytimes);
      }
      if (EventType != global::fat.rawdata.EventType.Default) {
        output.WriteRawTag(80);
        output.WriteEnum((int) EventType);
      }
      if (EventTheme != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(EventTheme);
      }
      if (PackId != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(PackId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Activelevel != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Activelevel);
      }
      if (Duration != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Duration);
      }
      if (Refreshtime != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Refreshtime);
      }
      if (Paytimes != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Paytimes);
      }
      if (EventType != global::fat.rawdata.EventType.Default) {
        output.WriteRawTag(80);
        output.WriteEnum((int) EventType);
      }
      if (EventTheme != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(EventTheme);
      }
      if (PackId != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(PackId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (EventType != global::fat.rawdata.EventType.Default) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EventType);
      }
      if (Activelevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Activelevel);
      }
      if (Duration != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Duration);
      }
      if (EventTheme != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EventTheme);
      }
      if (PackId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PackId);
      }
      if (Paytimes != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Paytimes);
      }
      if (Refreshtime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Refreshtime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NewUserPack other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.EventType != global::fat.rawdata.EventType.Default) {
        EventType = other.EventType;
      }
      if (other.Activelevel != 0) {
        Activelevel = other.Activelevel;
      }
      if (other.Duration != 0) {
        Duration = other.Duration;
      }
      if (other.EventTheme != 0) {
        EventTheme = other.EventTheme;
      }
      if (other.PackId != 0) {
        PackId = other.PackId;
      }
      if (other.Paytimes != 0) {
        Paytimes = other.Paytimes;
      }
      if (other.Refreshtime != 0) {
        Refreshtime = other.Refreshtime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 24: {
            Activelevel = input.ReadInt32();
            break;
          }
          case 32: {
            Duration = input.ReadInt32();
            break;
          }
          case 48: {
            Refreshtime = input.ReadInt32();
            break;
          }
          case 64: {
            Paytimes = input.ReadInt32();
            break;
          }
          case 80: {
            EventType = (global::fat.rawdata.EventType) input.ReadEnum();
            break;
          }
          case 96: {
            EventTheme = input.ReadInt32();
            break;
          }
          case 104: {
            PackId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 24: {
            Activelevel = input.ReadInt32();
            break;
          }
          case 32: {
            Duration = input.ReadInt32();
            break;
          }
          case 48: {
            Refreshtime = input.ReadInt32();
            break;
          }
          case 64: {
            Paytimes = input.ReadInt32();
            break;
          }
          case 80: {
            EventType = (global::fat.rawdata.EventType) input.ReadEnum();
            break;
          }
          case 96: {
            EventTheme = input.ReadInt32();
            break;
          }
          case 104: {
            PackId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class NewUserPackMapABValue : pb::IMessage<NewUserPackMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NewUserPackMapABValue> _parser = new pb::MessageParser<NewUserPackMapABValue>(() => new NewUserPackMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NewUserPackMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.NewUserPackConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewUserPackMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewUserPackMapABValue(NewUserPackMapABValue other) : this() {
      newUserPackMap_ = other.newUserPackMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewUserPackMapABValue Clone() {
      return new NewUserPackMapABValue(this);
    }

    /// <summary>Field number for the "NewUserPackMap" field.</summary>
    public const int NewUserPackMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.NewUserPack>.Codec _map_newUserPackMap_codec
        = new pbc::MapField<int, global::fat.rawdata.NewUserPack>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.NewUserPack.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.NewUserPack> newUserPackMap_ = new pbc::MapField<int, global::fat.rawdata.NewUserPack>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.NewUserPack> NewUserPackMap {
      get { return newUserPackMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NewUserPackMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NewUserPackMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!NewUserPackMap.Equals(other.NewUserPackMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= NewUserPackMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      newUserPackMap_.WriteTo(output, _map_newUserPackMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      newUserPackMap_.WriteTo(ref output, _map_newUserPackMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += newUserPackMap_.CalculateSize(_map_newUserPackMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NewUserPackMapABValue other) {
      if (other == null) {
        return;
      }
      newUserPackMap_.Add(other.newUserPackMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            newUserPackMap_.AddEntriesFrom(input, _map_newUserPackMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            newUserPackMap_.AddEntriesFrom(ref input, _map_newUserPackMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class NewUserPackConf : pb::IMessage<NewUserPackConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NewUserPackConf> _parser = new pb::MessageParser<NewUserPackConf>(() => new NewUserPackConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NewUserPackConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.NewUserPackConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewUserPackConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewUserPackConf(NewUserPackConf other) : this() {
      newUserPackMap_ = other.newUserPackMap_.Clone();
      newUserPackMapAB_ = other.newUserPackMapAB_.Clone();
      newUserPackMapABPatch_ = other.newUserPackMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewUserPackConf Clone() {
      return new NewUserPackConf(this);
    }

    /// <summary>Field number for the "NewUserPackMap" field.</summary>
    public const int NewUserPackMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.NewUserPack>.Codec _map_newUserPackMap_codec
        = new pbc::MapField<int, global::fat.rawdata.NewUserPack>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.NewUserPack.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.NewUserPack> newUserPackMap_ = new pbc::MapField<int, global::fat.rawdata.NewUserPack>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.NewUserPack> NewUserPackMap {
      get { return newUserPackMap_; }
    }

    /// <summary>Field number for the "NewUserPackMapAB" field.</summary>
    public const int NewUserPackMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.NewUserPackMapABValue>.Codec _map_newUserPackMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.NewUserPackMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.NewUserPackMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.NewUserPackMapABValue> newUserPackMapAB_ = new pbc::MapField<string, global::fat.rawdata.NewUserPackMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.NewUserPackMapABValue> NewUserPackMapAB {
      get { return newUserPackMapAB_; }
    }

    /// <summary>Field number for the "NewUserPackMapABPatch" field.</summary>
    public const int NewUserPackMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.NewUserPackMapABValue>.Codec _map_newUserPackMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.NewUserPackMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.NewUserPackMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.NewUserPackMapABValue> newUserPackMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.NewUserPackMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.NewUserPackMapABValue> NewUserPackMapABPatch {
      get { return newUserPackMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NewUserPackConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NewUserPackConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!NewUserPackMap.Equals(other.NewUserPackMap)) return false;
      if (!NewUserPackMapAB.Equals(other.NewUserPackMapAB)) return false;
      if (!NewUserPackMapABPatch.Equals(other.NewUserPackMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= NewUserPackMap.GetHashCode();
      hash ^= NewUserPackMapAB.GetHashCode();
      hash ^= NewUserPackMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      newUserPackMap_.WriteTo(output, _map_newUserPackMap_codec);
      newUserPackMapAB_.WriteTo(output, _map_newUserPackMapAB_codec);
      newUserPackMapABPatch_.WriteTo(output, _map_newUserPackMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      newUserPackMap_.WriteTo(ref output, _map_newUserPackMap_codec);
      newUserPackMapAB_.WriteTo(ref output, _map_newUserPackMapAB_codec);
      newUserPackMapABPatch_.WriteTo(ref output, _map_newUserPackMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += newUserPackMap_.CalculateSize(_map_newUserPackMap_codec);
      size += newUserPackMapAB_.CalculateSize(_map_newUserPackMapAB_codec);
      size += newUserPackMapABPatch_.CalculateSize(_map_newUserPackMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NewUserPackConf other) {
      if (other == null) {
        return;
      }
      newUserPackMap_.Add(other.newUserPackMap_);
      newUserPackMapAB_.Add(other.newUserPackMapAB_);
      newUserPackMapABPatch_.Add(other.newUserPackMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            newUserPackMap_.AddEntriesFrom(input, _map_newUserPackMap_codec);
            break;
          }
          case 18: {
            newUserPackMapAB_.AddEntriesFrom(input, _map_newUserPackMapAB_codec);
            break;
          }
          case 26: {
            newUserPackMapABPatch_.AddEntriesFrom(input, _map_newUserPackMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            newUserPackMap_.AddEntriesFrom(ref input, _map_newUserPackMap_codec);
            break;
          }
          case 18: {
            newUserPackMapAB_.AddEntriesFrom(ref input, _map_newUserPackMapAB_codec);
            break;
          }
          case 26: {
            newUserPackMapABPatch_.AddEntriesFrom(ref input, _map_newUserPackMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
