// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/WebshopCountryWhitelistConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/WebshopCountryWhitelistConf.proto</summary>
  public static partial class WebshopCountryWhitelistConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/WebshopCountryWhitelistConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static WebshopCountryWhitelistConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CilyYXdkYXRhL1dlYnNob3BDb3VudHJ5V2hpdGVsaXN0Q29uZi5wcm90bxIH",
            "cmF3ZGF0YSIlChdXZWJzaG9wQ291bnRyeVdoaXRlbGlzdBIKCgJpZBgBIAEo",
            "CSL4AQohV2Vic2hvcENvdW50cnlXaGl0ZWxpc3RNYXBBQlZhbHVlEm4KGldl",
            "YnNob3BDb3VudHJ5V2hpdGVsaXN0TWFwGAEgAygLMkoucmF3ZGF0YS5XZWJz",
            "aG9wQ291bnRyeVdoaXRlbGlzdE1hcEFCVmFsdWUuV2Vic2hvcENvdW50cnlX",
            "aGl0ZWxpc3RNYXBFbnRyeRpjCh9XZWJzaG9wQ291bnRyeVdoaXRlbGlzdE1h",
            "cEVudHJ5EgsKA2tleRgBIAEoCRIvCgV2YWx1ZRgCIAEoCzIgLnJhd2RhdGEu",
            "V2Vic2hvcENvdW50cnlXaGl0ZWxpc3Q6AjgBIrkFChtXZWJzaG9wQ291bnRy",
            "eVdoaXRlbGlzdENvbmYSaAoaV2Vic2hvcENvdW50cnlXaGl0ZWxpc3RNYXAY",
            "ASADKAsyRC5yYXdkYXRhLldlYnNob3BDb3VudHJ5V2hpdGVsaXN0Q29uZi5X",
            "ZWJzaG9wQ291bnRyeVdoaXRlbGlzdE1hcEVudHJ5EmwKHFdlYnNob3BDb3Vu",
            "dHJ5V2hpdGVsaXN0TWFwQUIYAiADKAsyRi5yYXdkYXRhLldlYnNob3BDb3Vu",
            "dHJ5V2hpdGVsaXN0Q29uZi5XZWJzaG9wQ291bnRyeVdoaXRlbGlzdE1hcEFC",
            "RW50cnkSdgohV2Vic2hvcENvdW50cnlXaGl0ZWxpc3RNYXBBQlBhdGNoGAMg",
            "AygLMksucmF3ZGF0YS5XZWJzaG9wQ291bnRyeVdoaXRlbGlzdENvbmYuV2Vi",
            "c2hvcENvdW50cnlXaGl0ZWxpc3RNYXBBQlBhdGNoRW50cnkaYwofV2Vic2hv",
            "cENvdW50cnlXaGl0ZWxpc3RNYXBFbnRyeRILCgNrZXkYASABKAkSLwoFdmFs",
            "dWUYAiABKAsyIC5yYXdkYXRhLldlYnNob3BDb3VudHJ5V2hpdGVsaXN0OgI4",
            "ARpvCiFXZWJzaG9wQ291bnRyeVdoaXRlbGlzdE1hcEFCRW50cnkSCwoDa2V5",
            "GAEgASgJEjkKBXZhbHVlGAIgASgLMioucmF3ZGF0YS5XZWJzaG9wQ291bnRy",
            "eVdoaXRlbGlzdE1hcEFCVmFsdWU6AjgBGnQKJldlYnNob3BDb3VudHJ5V2hp",
            "dGVsaXN0TWFwQUJQYXRjaEVudHJ5EgsKA2tleRgBIAEoCRI5CgV2YWx1ZRgC",
            "IAEoCzIqLnJhd2RhdGEuV2Vic2hvcENvdW50cnlXaGl0ZWxpc3RNYXBBQlZh",
            "bHVlOgI4AUI9Wi1naXRsYWIuZnVucGx1cy5pby9mYXQvY29uZi9nZW4vZ29s",
            "YW5nL3Jhd2RhdGGqAgtmYXQucmF3ZGF0YWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.WebshopCountryWhitelist), global::fat.rawdata.WebshopCountryWhitelist.Parser, new[]{ "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.WebshopCountryWhitelistMapABValue), global::fat.rawdata.WebshopCountryWhitelistMapABValue.Parser, new[]{ "WebshopCountryWhitelistMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.WebshopCountryWhitelistConf), global::fat.rawdata.WebshopCountryWhitelistConf.Parser, new[]{ "WebshopCountryWhitelistMap", "WebshopCountryWhitelistMapAB", "WebshopCountryWhitelistMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="WebshopCountryWhitelist",table="WebshopCountryWhitelistMap",table_wrapper="WebshopCountryWhitelistConf",map="true",map_key_type="string",data="WebshopCountryWhitelistConf")
  /// annotation@ab(table_ab="WebshopCountryWhitelistMapAB",table_ab_patch="WebshopCountryWhitelistMapABPatch",table_ab_value="WebshopCountryWhitelistMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@WebshopCountryWhitelist(id="id")
  /// </summary>
  public sealed partial class WebshopCountryWhitelist : pb::IMessage<WebshopCountryWhitelist>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WebshopCountryWhitelist> _parser = new pb::MessageParser<WebshopCountryWhitelist>(() => new WebshopCountryWhitelist());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WebshopCountryWhitelist> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.WebshopCountryWhitelistConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebshopCountryWhitelist() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebshopCountryWhitelist(WebshopCountryWhitelist other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebshopCountryWhitelist Clone() {
      return new WebshopCountryWhitelist(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// webshop跳转入口开启白名单
    /// 国家码
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WebshopCountryWhitelist);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WebshopCountryWhitelist other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WebshopCountryWhitelist other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class WebshopCountryWhitelistMapABValue : pb::IMessage<WebshopCountryWhitelistMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WebshopCountryWhitelistMapABValue> _parser = new pb::MessageParser<WebshopCountryWhitelistMapABValue>(() => new WebshopCountryWhitelistMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WebshopCountryWhitelistMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.WebshopCountryWhitelistConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebshopCountryWhitelistMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebshopCountryWhitelistMapABValue(WebshopCountryWhitelistMapABValue other) : this() {
      webshopCountryWhitelistMap_ = other.webshopCountryWhitelistMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebshopCountryWhitelistMapABValue Clone() {
      return new WebshopCountryWhitelistMapABValue(this);
    }

    /// <summary>Field number for the "WebshopCountryWhitelistMap" field.</summary>
    public const int WebshopCountryWhitelistMapFieldNumber = 1;
    private static readonly pbc::MapField<string, global::fat.rawdata.WebshopCountryWhitelist>.Codec _map_webshopCountryWhitelistMap_codec
        = new pbc::MapField<string, global::fat.rawdata.WebshopCountryWhitelist>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.WebshopCountryWhitelist.Parser), 10);
    private readonly pbc::MapField<string, global::fat.rawdata.WebshopCountryWhitelist> webshopCountryWhitelistMap_ = new pbc::MapField<string, global::fat.rawdata.WebshopCountryWhitelist>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.WebshopCountryWhitelist> WebshopCountryWhitelistMap {
      get { return webshopCountryWhitelistMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WebshopCountryWhitelistMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WebshopCountryWhitelistMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!WebshopCountryWhitelistMap.Equals(other.WebshopCountryWhitelistMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= WebshopCountryWhitelistMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      webshopCountryWhitelistMap_.WriteTo(output, _map_webshopCountryWhitelistMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      webshopCountryWhitelistMap_.WriteTo(ref output, _map_webshopCountryWhitelistMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += webshopCountryWhitelistMap_.CalculateSize(_map_webshopCountryWhitelistMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WebshopCountryWhitelistMapABValue other) {
      if (other == null) {
        return;
      }
      webshopCountryWhitelistMap_.Add(other.webshopCountryWhitelistMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            webshopCountryWhitelistMap_.AddEntriesFrom(input, _map_webshopCountryWhitelistMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            webshopCountryWhitelistMap_.AddEntriesFrom(ref input, _map_webshopCountryWhitelistMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class WebshopCountryWhitelistConf : pb::IMessage<WebshopCountryWhitelistConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WebshopCountryWhitelistConf> _parser = new pb::MessageParser<WebshopCountryWhitelistConf>(() => new WebshopCountryWhitelistConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WebshopCountryWhitelistConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.WebshopCountryWhitelistConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebshopCountryWhitelistConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebshopCountryWhitelistConf(WebshopCountryWhitelistConf other) : this() {
      webshopCountryWhitelistMap_ = other.webshopCountryWhitelistMap_.Clone();
      webshopCountryWhitelistMapAB_ = other.webshopCountryWhitelistMapAB_.Clone();
      webshopCountryWhitelistMapABPatch_ = other.webshopCountryWhitelistMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebshopCountryWhitelistConf Clone() {
      return new WebshopCountryWhitelistConf(this);
    }

    /// <summary>Field number for the "WebshopCountryWhitelistMap" field.</summary>
    public const int WebshopCountryWhitelistMapFieldNumber = 1;
    private static readonly pbc::MapField<string, global::fat.rawdata.WebshopCountryWhitelist>.Codec _map_webshopCountryWhitelistMap_codec
        = new pbc::MapField<string, global::fat.rawdata.WebshopCountryWhitelist>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.WebshopCountryWhitelist.Parser), 10);
    private readonly pbc::MapField<string, global::fat.rawdata.WebshopCountryWhitelist> webshopCountryWhitelistMap_ = new pbc::MapField<string, global::fat.rawdata.WebshopCountryWhitelist>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.WebshopCountryWhitelist> WebshopCountryWhitelistMap {
      get { return webshopCountryWhitelistMap_; }
    }

    /// <summary>Field number for the "WebshopCountryWhitelistMapAB" field.</summary>
    public const int WebshopCountryWhitelistMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.WebshopCountryWhitelistMapABValue>.Codec _map_webshopCountryWhitelistMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.WebshopCountryWhitelistMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.WebshopCountryWhitelistMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.WebshopCountryWhitelistMapABValue> webshopCountryWhitelistMapAB_ = new pbc::MapField<string, global::fat.rawdata.WebshopCountryWhitelistMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.WebshopCountryWhitelistMapABValue> WebshopCountryWhitelistMapAB {
      get { return webshopCountryWhitelistMapAB_; }
    }

    /// <summary>Field number for the "WebshopCountryWhitelistMapABPatch" field.</summary>
    public const int WebshopCountryWhitelistMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.WebshopCountryWhitelistMapABValue>.Codec _map_webshopCountryWhitelistMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.WebshopCountryWhitelistMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.WebshopCountryWhitelistMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.WebshopCountryWhitelistMapABValue> webshopCountryWhitelistMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.WebshopCountryWhitelistMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.WebshopCountryWhitelistMapABValue> WebshopCountryWhitelistMapABPatch {
      get { return webshopCountryWhitelistMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WebshopCountryWhitelistConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WebshopCountryWhitelistConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!WebshopCountryWhitelistMap.Equals(other.WebshopCountryWhitelistMap)) return false;
      if (!WebshopCountryWhitelistMapAB.Equals(other.WebshopCountryWhitelistMapAB)) return false;
      if (!WebshopCountryWhitelistMapABPatch.Equals(other.WebshopCountryWhitelistMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= WebshopCountryWhitelistMap.GetHashCode();
      hash ^= WebshopCountryWhitelistMapAB.GetHashCode();
      hash ^= WebshopCountryWhitelistMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      webshopCountryWhitelistMap_.WriteTo(output, _map_webshopCountryWhitelistMap_codec);
      webshopCountryWhitelistMapAB_.WriteTo(output, _map_webshopCountryWhitelistMapAB_codec);
      webshopCountryWhitelistMapABPatch_.WriteTo(output, _map_webshopCountryWhitelistMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      webshopCountryWhitelistMap_.WriteTo(ref output, _map_webshopCountryWhitelistMap_codec);
      webshopCountryWhitelistMapAB_.WriteTo(ref output, _map_webshopCountryWhitelistMapAB_codec);
      webshopCountryWhitelistMapABPatch_.WriteTo(ref output, _map_webshopCountryWhitelistMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += webshopCountryWhitelistMap_.CalculateSize(_map_webshopCountryWhitelistMap_codec);
      size += webshopCountryWhitelistMapAB_.CalculateSize(_map_webshopCountryWhitelistMapAB_codec);
      size += webshopCountryWhitelistMapABPatch_.CalculateSize(_map_webshopCountryWhitelistMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WebshopCountryWhitelistConf other) {
      if (other == null) {
        return;
      }
      webshopCountryWhitelistMap_.Add(other.webshopCountryWhitelistMap_);
      webshopCountryWhitelistMapAB_.Add(other.webshopCountryWhitelistMapAB_);
      webshopCountryWhitelistMapABPatch_.Add(other.webshopCountryWhitelistMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            webshopCountryWhitelistMap_.AddEntriesFrom(input, _map_webshopCountryWhitelistMap_codec);
            break;
          }
          case 18: {
            webshopCountryWhitelistMapAB_.AddEntriesFrom(input, _map_webshopCountryWhitelistMapAB_codec);
            break;
          }
          case 26: {
            webshopCountryWhitelistMapABPatch_.AddEntriesFrom(input, _map_webshopCountryWhitelistMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            webshopCountryWhitelistMap_.AddEntriesFrom(ref input, _map_webshopCountryWhitelistMap_codec);
            break;
          }
          case 18: {
            webshopCountryWhitelistMapAB_.AddEntriesFrom(ref input, _map_webshopCountryWhitelistMapAB_codec);
            break;
          }
          case 26: {
            webshopCountryWhitelistMapABPatch_.AddEntriesFrom(ref input, _map_webshopCountryWhitelistMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
