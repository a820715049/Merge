// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/MarketIncreaseConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/MarketIncreaseConf.proto</summary>
  public static partial class MarketIncreaseConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/MarketIncreaseConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MarketIncreaseConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiByYXdkYXRhL01hcmtldEluY3JlYXNlQ29uZi5wcm90bxIHcmF3ZGF0YSJa",
            "Cg5NYXJrZXRJbmNyZWFzZRIKCgJpZBgBIAEoBRIPCgdib2FyZElkGAIgASgF",
            "EhkKEWluY2x1ZGVDb21tb25kaXR5GAMgAygFEhAKCHNlcXVlbmNlGAQgASgF",
            "IsIBChhNYXJrZXRJbmNyZWFzZU1hcEFCVmFsdWUSUwoRTWFya2V0SW5jcmVh",
            "c2VNYXAYASADKAsyOC5yYXdkYXRhLk1hcmtldEluY3JlYXNlTWFwQUJWYWx1",
            "ZS5NYXJrZXRJbmNyZWFzZU1hcEVudHJ5GlEKFk1hcmtldEluY3JlYXNlTWFw",
            "RW50cnkSCwoDa2V5GAEgASgFEiYKBXZhbHVlGAIgASgLMhcucmF3ZGF0YS5N",
            "YXJrZXRJbmNyZWFzZToCOAEiqQQKEk1hcmtldEluY3JlYXNlQ29uZhJNChFN",
            "YXJrZXRJbmNyZWFzZU1hcBgBIAMoCzIyLnJhd2RhdGEuTWFya2V0SW5jcmVh",
            "c2VDb25mLk1hcmtldEluY3JlYXNlTWFwRW50cnkSUQoTTWFya2V0SW5jcmVh",
            "c2VNYXBBQhgCIAMoCzI0LnJhd2RhdGEuTWFya2V0SW5jcmVhc2VDb25mLk1h",
            "cmtldEluY3JlYXNlTWFwQUJFbnRyeRJbChhNYXJrZXRJbmNyZWFzZU1hcEFC",
            "UGF0Y2gYAyADKAsyOS5yYXdkYXRhLk1hcmtldEluY3JlYXNlQ29uZi5NYXJr",
            "ZXRJbmNyZWFzZU1hcEFCUGF0Y2hFbnRyeRpRChZNYXJrZXRJbmNyZWFzZU1h",
            "cEVudHJ5EgsKA2tleRgBIAEoBRImCgV2YWx1ZRgCIAEoCzIXLnJhd2RhdGEu",
            "TWFya2V0SW5jcmVhc2U6AjgBGl0KGE1hcmtldEluY3JlYXNlTWFwQUJFbnRy",
            "eRILCgNrZXkYASABKAkSMAoFdmFsdWUYAiABKAsyIS5yYXdkYXRhLk1hcmtl",
            "dEluY3JlYXNlTWFwQUJWYWx1ZToCOAEaYgodTWFya2V0SW5jcmVhc2VNYXBB",
            "QlBhdGNoRW50cnkSCwoDa2V5GAEgASgJEjAKBXZhbHVlGAIgASgLMiEucmF3",
            "ZGF0YS5NYXJrZXRJbmNyZWFzZU1hcEFCVmFsdWU6AjgBQj1aLWdpdGxhYi5m",
            "dW5wbHVzLmlvL2ZhdC9jb25mL2dlbi9nb2xhbmcvcmF3ZGF0YaoCC2ZhdC5y",
            "YXdkYXRhYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.MarketIncrease), global::fat.rawdata.MarketIncrease.Parser, new[]{ "Id", "BoardId", "IncludeCommondity", "Sequence" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.MarketIncreaseMapABValue), global::fat.rawdata.MarketIncreaseMapABValue.Parser, new[]{ "MarketIncreaseMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.MarketIncreaseConf), global::fat.rawdata.MarketIncreaseConf.Parser, new[]{ "MarketIncreaseMap", "MarketIncreaseMapAB", "MarketIncreaseMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="MarketIncrease",table="MarketIncreaseMap",table_wrapper="MarketIncreaseConf",map="true",map_key_type="int32",data="MarketIncreaseConf")
  /// annotation@ab(table_ab="MarketIncreaseMapAB",table_ab_patch="MarketIncreaseMapABPatch",table_ab_value="MarketIncreaseMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@MarketIncrease(id="id")
  /// </summary>
  public sealed partial class MarketIncrease : pb::IMessage<MarketIncrease>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MarketIncrease> _parser = new pb::MessageParser<MarketIncrease>(() => new MarketIncrease());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MarketIncrease> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.MarketIncreaseConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MarketIncrease() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MarketIncrease(MarketIncrease other) : this() {
      id_ = other.id_;
      boardId_ = other.boardId_;
      includeCommondity_ = other.includeCommondity_.Clone();
      sequence_ = other.sequence_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MarketIncrease Clone() {
      return new MarketIncrease(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 价格递增商品列表
    /// 格子ID
    /// （双键）
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "boardId" field.</summary>
    public const int BoardIdFieldNumber = 2;
    private int boardId_;
    /// <summary>
    /// 格子属于棋盘
    /// （MergeBoard.id）
    /// （双键）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BoardId {
      get { return boardId_; }
      set {
        boardId_ = value;
      }
    }

    /// <summary>Field number for the "includeCommondity" field.</summary>
    public const int IncludeCommondityFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_includeCommondity_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> includeCommondity_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 包含的递增商品
    /// （按照用户刷新期间购买次数决定用第几个）
    /// （超过配置的个数的话，选最后一个）
    /// （MarketCommondity.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> IncludeCommondity {
      get { return includeCommondity_; }
    }

    /// <summary>Field number for the "sequence" field.</summary>
    public const int SequenceFieldNumber = 4;
    private int sequence_;
    /// <summary>
    /// 格子的排序权重
    /// （越小越靠前）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Sequence {
      get { return sequence_; }
      set {
        sequence_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MarketIncrease);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MarketIncrease other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (BoardId != other.BoardId) return false;
      if(!includeCommondity_.Equals(other.includeCommondity_)) return false;
      if (Sequence != other.Sequence) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (BoardId != 0) hash ^= BoardId.GetHashCode();
      hash ^= includeCommondity_.GetHashCode();
      if (Sequence != 0) hash ^= Sequence.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (BoardId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BoardId);
      }
      includeCommondity_.WriteTo(output, _repeated_includeCommondity_codec);
      if (Sequence != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Sequence);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (BoardId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BoardId);
      }
      includeCommondity_.WriteTo(ref output, _repeated_includeCommondity_codec);
      if (Sequence != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Sequence);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (BoardId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BoardId);
      }
      size += includeCommondity_.CalculateSize(_repeated_includeCommondity_codec);
      if (Sequence != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Sequence);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MarketIncrease other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.BoardId != 0) {
        BoardId = other.BoardId;
      }
      includeCommondity_.Add(other.includeCommondity_);
      if (other.Sequence != 0) {
        Sequence = other.Sequence;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            BoardId = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            includeCommondity_.AddEntriesFrom(input, _repeated_includeCommondity_codec);
            break;
          }
          case 32: {
            Sequence = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            BoardId = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            includeCommondity_.AddEntriesFrom(ref input, _repeated_includeCommondity_codec);
            break;
          }
          case 32: {
            Sequence = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MarketIncreaseMapABValue : pb::IMessage<MarketIncreaseMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MarketIncreaseMapABValue> _parser = new pb::MessageParser<MarketIncreaseMapABValue>(() => new MarketIncreaseMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MarketIncreaseMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.MarketIncreaseConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MarketIncreaseMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MarketIncreaseMapABValue(MarketIncreaseMapABValue other) : this() {
      marketIncreaseMap_ = other.marketIncreaseMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MarketIncreaseMapABValue Clone() {
      return new MarketIncreaseMapABValue(this);
    }

    /// <summary>Field number for the "MarketIncreaseMap" field.</summary>
    public const int MarketIncreaseMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.MarketIncrease>.Codec _map_marketIncreaseMap_codec
        = new pbc::MapField<int, global::fat.rawdata.MarketIncrease>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.MarketIncrease.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.MarketIncrease> marketIncreaseMap_ = new pbc::MapField<int, global::fat.rawdata.MarketIncrease>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.MarketIncrease> MarketIncreaseMap {
      get { return marketIncreaseMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MarketIncreaseMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MarketIncreaseMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!MarketIncreaseMap.Equals(other.MarketIncreaseMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= MarketIncreaseMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      marketIncreaseMap_.WriteTo(output, _map_marketIncreaseMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      marketIncreaseMap_.WriteTo(ref output, _map_marketIncreaseMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += marketIncreaseMap_.CalculateSize(_map_marketIncreaseMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MarketIncreaseMapABValue other) {
      if (other == null) {
        return;
      }
      marketIncreaseMap_.Add(other.marketIncreaseMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            marketIncreaseMap_.AddEntriesFrom(input, _map_marketIncreaseMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            marketIncreaseMap_.AddEntriesFrom(ref input, _map_marketIncreaseMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MarketIncreaseConf : pb::IMessage<MarketIncreaseConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MarketIncreaseConf> _parser = new pb::MessageParser<MarketIncreaseConf>(() => new MarketIncreaseConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MarketIncreaseConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.MarketIncreaseConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MarketIncreaseConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MarketIncreaseConf(MarketIncreaseConf other) : this() {
      marketIncreaseMap_ = other.marketIncreaseMap_.Clone();
      marketIncreaseMapAB_ = other.marketIncreaseMapAB_.Clone();
      marketIncreaseMapABPatch_ = other.marketIncreaseMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MarketIncreaseConf Clone() {
      return new MarketIncreaseConf(this);
    }

    /// <summary>Field number for the "MarketIncreaseMap" field.</summary>
    public const int MarketIncreaseMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.MarketIncrease>.Codec _map_marketIncreaseMap_codec
        = new pbc::MapField<int, global::fat.rawdata.MarketIncrease>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.MarketIncrease.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.MarketIncrease> marketIncreaseMap_ = new pbc::MapField<int, global::fat.rawdata.MarketIncrease>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.MarketIncrease> MarketIncreaseMap {
      get { return marketIncreaseMap_; }
    }

    /// <summary>Field number for the "MarketIncreaseMapAB" field.</summary>
    public const int MarketIncreaseMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.MarketIncreaseMapABValue>.Codec _map_marketIncreaseMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.MarketIncreaseMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.MarketIncreaseMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.MarketIncreaseMapABValue> marketIncreaseMapAB_ = new pbc::MapField<string, global::fat.rawdata.MarketIncreaseMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.MarketIncreaseMapABValue> MarketIncreaseMapAB {
      get { return marketIncreaseMapAB_; }
    }

    /// <summary>Field number for the "MarketIncreaseMapABPatch" field.</summary>
    public const int MarketIncreaseMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.MarketIncreaseMapABValue>.Codec _map_marketIncreaseMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.MarketIncreaseMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.MarketIncreaseMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.MarketIncreaseMapABValue> marketIncreaseMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.MarketIncreaseMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.MarketIncreaseMapABValue> MarketIncreaseMapABPatch {
      get { return marketIncreaseMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MarketIncreaseConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MarketIncreaseConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!MarketIncreaseMap.Equals(other.MarketIncreaseMap)) return false;
      if (!MarketIncreaseMapAB.Equals(other.MarketIncreaseMapAB)) return false;
      if (!MarketIncreaseMapABPatch.Equals(other.MarketIncreaseMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= MarketIncreaseMap.GetHashCode();
      hash ^= MarketIncreaseMapAB.GetHashCode();
      hash ^= MarketIncreaseMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      marketIncreaseMap_.WriteTo(output, _map_marketIncreaseMap_codec);
      marketIncreaseMapAB_.WriteTo(output, _map_marketIncreaseMapAB_codec);
      marketIncreaseMapABPatch_.WriteTo(output, _map_marketIncreaseMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      marketIncreaseMap_.WriteTo(ref output, _map_marketIncreaseMap_codec);
      marketIncreaseMapAB_.WriteTo(ref output, _map_marketIncreaseMapAB_codec);
      marketIncreaseMapABPatch_.WriteTo(ref output, _map_marketIncreaseMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += marketIncreaseMap_.CalculateSize(_map_marketIncreaseMap_codec);
      size += marketIncreaseMapAB_.CalculateSize(_map_marketIncreaseMapAB_codec);
      size += marketIncreaseMapABPatch_.CalculateSize(_map_marketIncreaseMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MarketIncreaseConf other) {
      if (other == null) {
        return;
      }
      marketIncreaseMap_.Add(other.marketIncreaseMap_);
      marketIncreaseMapAB_.Add(other.marketIncreaseMapAB_);
      marketIncreaseMapABPatch_.Add(other.marketIncreaseMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            marketIncreaseMap_.AddEntriesFrom(input, _map_marketIncreaseMap_codec);
            break;
          }
          case 18: {
            marketIncreaseMapAB_.AddEntriesFrom(input, _map_marketIncreaseMapAB_codec);
            break;
          }
          case 26: {
            marketIncreaseMapABPatch_.AddEntriesFrom(input, _map_marketIncreaseMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            marketIncreaseMap_.AddEntriesFrom(ref input, _map_marketIncreaseMap_codec);
            break;
          }
          case 18: {
            marketIncreaseMapAB_.AddEntriesFrom(ref input, _map_marketIncreaseMapAB_codec);
            break;
          }
          case 26: {
            marketIncreaseMapABPatch_.AddEntriesFrom(ref input, _map_marketIncreaseMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
