// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/ComTapBonusConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/ComTapBonusConf.proto</summary>
  public static partial class ComTapBonusConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/ComTapBonusConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ComTapBonusConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch1yYXdkYXRhL0NvbVRhcEJvbnVzQ29uZi5wcm90bxIHcmF3ZGF0YRoWcmF3",
            "ZGF0YS9GdW5jVHlwZS5wcm90byJdCgtDb21UYXBCb251cxIKCgJpZBgBIAEo",
            "BRINCgVjb3VudBgCIAEoBRIjCghmdW5jVHlwZRgDIAEoDjIRLnJhd2RhdGEu",
            "RnVuY1R5cGUSDgoGaXRlbUlkGAQgASgFIrABChVDb21UYXBCb251c01hcEFC",
            "VmFsdWUSSgoOQ29tVGFwQm9udXNNYXAYASADKAsyMi5yYXdkYXRhLkNvbVRh",
            "cEJvbnVzTWFwQUJWYWx1ZS5Db21UYXBCb251c01hcEVudHJ5GksKE0NvbVRh",
            "cEJvbnVzTWFwRW50cnkSCwoDa2V5GAEgASgFEiMKBXZhbHVlGAIgASgLMhQu",
            "cmF3ZGF0YS5Db21UYXBCb251czoCOAEi+QMKD0NvbVRhcEJvbnVzQ29uZhJE",
            "Cg5Db21UYXBCb251c01hcBgBIAMoCzIsLnJhd2RhdGEuQ29tVGFwQm9udXND",
            "b25mLkNvbVRhcEJvbnVzTWFwRW50cnkSSAoQQ29tVGFwQm9udXNNYXBBQhgC",
            "IAMoCzIuLnJhd2RhdGEuQ29tVGFwQm9udXNDb25mLkNvbVRhcEJvbnVzTWFw",
            "QUJFbnRyeRJSChVDb21UYXBCb251c01hcEFCUGF0Y2gYAyADKAsyMy5yYXdk",
            "YXRhLkNvbVRhcEJvbnVzQ29uZi5Db21UYXBCb251c01hcEFCUGF0Y2hFbnRy",
            "eRpLChNDb21UYXBCb251c01hcEVudHJ5EgsKA2tleRgBIAEoBRIjCgV2YWx1",
            "ZRgCIAEoCzIULnJhd2RhdGEuQ29tVGFwQm9udXM6AjgBGlcKFUNvbVRhcEJv",
            "bnVzTWFwQUJFbnRyeRILCgNrZXkYASABKAkSLQoFdmFsdWUYAiABKAsyHi5y",
            "YXdkYXRhLkNvbVRhcEJvbnVzTWFwQUJWYWx1ZToCOAEaXAoaQ29tVGFwQm9u",
            "dXNNYXBBQlBhdGNoRW50cnkSCwoDa2V5GAEgASgJEi0KBXZhbHVlGAIgASgL",
            "Mh4ucmF3ZGF0YS5Db21UYXBCb251c01hcEFCVmFsdWU6AjgBQj1aLWdpdGxh",
            "Yi5mdW5wbHVzLmlvL2ZhdC9jb25mL2dlbi9nb2xhbmcvcmF3ZGF0YaoCC2Zh",
            "dC5yYXdkYXRhYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::fat.rawdata.FuncTypeReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.ComTapBonus), global::fat.rawdata.ComTapBonus.Parser, new[]{ "Id", "Count", "FuncType", "ItemId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.ComTapBonusMapABValue), global::fat.rawdata.ComTapBonusMapABValue.Parser, new[]{ "ComTapBonusMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.ComTapBonusConf), global::fat.rawdata.ComTapBonusConf.Parser, new[]{ "ComTapBonusMap", "ComTapBonusMapAB", "ComTapBonusMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="ComTapBonus",table="ComTapBonusMap",table_wrapper="ComTapBonusConf",map="true",map_key_type="int32",data="ComTapBonusConf")
  /// annotation@ab(table_ab="ComTapBonusMapAB",table_ab_patch="ComTapBonusMapABPatch",table_ab_value="ComTapBonusMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@ComTapBonus(id="id")
  /// </summary>
  public sealed partial class ComTapBonus : pb::IMessage<ComTapBonus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ComTapBonus> _parser = new pb::MessageParser<ComTapBonus>(() => new ComTapBonus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ComTapBonus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.ComTapBonusConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComTapBonus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComTapBonus(ComTapBonus other) : this() {
      id_ = other.id_;
      count_ = other.count_;
      funcType_ = other.funcType_;
      itemId_ = other.itemId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComTapBonus Clone() {
      return new ComTapBonus(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 合成物品id
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 2;
    private int count_;
    /// <summary>
    /// 收集后的物品数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    /// <summary>Field number for the "funcType" field.</summary>
    public const int FuncTypeFieldNumber = 3;
    private global::fat.rawdata.FuncType funcType_ = global::fat.rawdata.FuncType.None;
    /// <summary>
    /// 功能类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::fat.rawdata.FuncType FuncType {
      get { return funcType_; }
      set {
        funcType_ = value;
      }
    }

    /// <summary>Field number for the "itemId" field.</summary>
    public const int ItemIdFieldNumber = 4;
    private int itemId_;
    /// <summary>
    /// 收集后的物品id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ItemId {
      get { return itemId_; }
      set {
        itemId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ComTapBonus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ComTapBonus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Count != other.Count) return false;
      if (FuncType != other.FuncType) return false;
      if (ItemId != other.ItemId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Count != 0) hash ^= Count.GetHashCode();
      if (FuncType != global::fat.rawdata.FuncType.None) hash ^= FuncType.GetHashCode();
      if (ItemId != 0) hash ^= ItemId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Count != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Count);
      }
      if (FuncType != global::fat.rawdata.FuncType.None) {
        output.WriteRawTag(24);
        output.WriteEnum((int) FuncType);
      }
      if (ItemId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ItemId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Count != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Count);
      }
      if (FuncType != global::fat.rawdata.FuncType.None) {
        output.WriteRawTag(24);
        output.WriteEnum((int) FuncType);
      }
      if (ItemId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ItemId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      if (FuncType != global::fat.rawdata.FuncType.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) FuncType);
      }
      if (ItemId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ComTapBonus other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      if (other.FuncType != global::fat.rawdata.FuncType.None) {
        FuncType = other.FuncType;
      }
      if (other.ItemId != 0) {
        ItemId = other.ItemId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Count = input.ReadInt32();
            break;
          }
          case 24: {
            FuncType = (global::fat.rawdata.FuncType) input.ReadEnum();
            break;
          }
          case 32: {
            ItemId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Count = input.ReadInt32();
            break;
          }
          case 24: {
            FuncType = (global::fat.rawdata.FuncType) input.ReadEnum();
            break;
          }
          case 32: {
            ItemId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ComTapBonusMapABValue : pb::IMessage<ComTapBonusMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ComTapBonusMapABValue> _parser = new pb::MessageParser<ComTapBonusMapABValue>(() => new ComTapBonusMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ComTapBonusMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.ComTapBonusConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComTapBonusMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComTapBonusMapABValue(ComTapBonusMapABValue other) : this() {
      comTapBonusMap_ = other.comTapBonusMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComTapBonusMapABValue Clone() {
      return new ComTapBonusMapABValue(this);
    }

    /// <summary>Field number for the "ComTapBonusMap" field.</summary>
    public const int ComTapBonusMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.ComTapBonus>.Codec _map_comTapBonusMap_codec
        = new pbc::MapField<int, global::fat.rawdata.ComTapBonus>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ComTapBonus.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.ComTapBonus> comTapBonusMap_ = new pbc::MapField<int, global::fat.rawdata.ComTapBonus>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.ComTapBonus> ComTapBonusMap {
      get { return comTapBonusMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ComTapBonusMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ComTapBonusMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!ComTapBonusMap.Equals(other.ComTapBonusMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ComTapBonusMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      comTapBonusMap_.WriteTo(output, _map_comTapBonusMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      comTapBonusMap_.WriteTo(ref output, _map_comTapBonusMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += comTapBonusMap_.CalculateSize(_map_comTapBonusMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ComTapBonusMapABValue other) {
      if (other == null) {
        return;
      }
      comTapBonusMap_.Add(other.comTapBonusMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            comTapBonusMap_.AddEntriesFrom(input, _map_comTapBonusMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            comTapBonusMap_.AddEntriesFrom(ref input, _map_comTapBonusMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ComTapBonusConf : pb::IMessage<ComTapBonusConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ComTapBonusConf> _parser = new pb::MessageParser<ComTapBonusConf>(() => new ComTapBonusConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ComTapBonusConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.ComTapBonusConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComTapBonusConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComTapBonusConf(ComTapBonusConf other) : this() {
      comTapBonusMap_ = other.comTapBonusMap_.Clone();
      comTapBonusMapAB_ = other.comTapBonusMapAB_.Clone();
      comTapBonusMapABPatch_ = other.comTapBonusMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComTapBonusConf Clone() {
      return new ComTapBonusConf(this);
    }

    /// <summary>Field number for the "ComTapBonusMap" field.</summary>
    public const int ComTapBonusMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.ComTapBonus>.Codec _map_comTapBonusMap_codec
        = new pbc::MapField<int, global::fat.rawdata.ComTapBonus>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ComTapBonus.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.ComTapBonus> comTapBonusMap_ = new pbc::MapField<int, global::fat.rawdata.ComTapBonus>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.ComTapBonus> ComTapBonusMap {
      get { return comTapBonusMap_; }
    }

    /// <summary>Field number for the "ComTapBonusMapAB" field.</summary>
    public const int ComTapBonusMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.ComTapBonusMapABValue>.Codec _map_comTapBonusMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.ComTapBonusMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ComTapBonusMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.ComTapBonusMapABValue> comTapBonusMapAB_ = new pbc::MapField<string, global::fat.rawdata.ComTapBonusMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.ComTapBonusMapABValue> ComTapBonusMapAB {
      get { return comTapBonusMapAB_; }
    }

    /// <summary>Field number for the "ComTapBonusMapABPatch" field.</summary>
    public const int ComTapBonusMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.ComTapBonusMapABValue>.Codec _map_comTapBonusMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.ComTapBonusMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ComTapBonusMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.ComTapBonusMapABValue> comTapBonusMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.ComTapBonusMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.ComTapBonusMapABValue> ComTapBonusMapABPatch {
      get { return comTapBonusMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ComTapBonusConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ComTapBonusConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!ComTapBonusMap.Equals(other.ComTapBonusMap)) return false;
      if (!ComTapBonusMapAB.Equals(other.ComTapBonusMapAB)) return false;
      if (!ComTapBonusMapABPatch.Equals(other.ComTapBonusMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ComTapBonusMap.GetHashCode();
      hash ^= ComTapBonusMapAB.GetHashCode();
      hash ^= ComTapBonusMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      comTapBonusMap_.WriteTo(output, _map_comTapBonusMap_codec);
      comTapBonusMapAB_.WriteTo(output, _map_comTapBonusMapAB_codec);
      comTapBonusMapABPatch_.WriteTo(output, _map_comTapBonusMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      comTapBonusMap_.WriteTo(ref output, _map_comTapBonusMap_codec);
      comTapBonusMapAB_.WriteTo(ref output, _map_comTapBonusMapAB_codec);
      comTapBonusMapABPatch_.WriteTo(ref output, _map_comTapBonusMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += comTapBonusMap_.CalculateSize(_map_comTapBonusMap_codec);
      size += comTapBonusMapAB_.CalculateSize(_map_comTapBonusMapAB_codec);
      size += comTapBonusMapABPatch_.CalculateSize(_map_comTapBonusMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ComTapBonusConf other) {
      if (other == null) {
        return;
      }
      comTapBonusMap_.Add(other.comTapBonusMap_);
      comTapBonusMapAB_.Add(other.comTapBonusMapAB_);
      comTapBonusMapABPatch_.Add(other.comTapBonusMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            comTapBonusMap_.AddEntriesFrom(input, _map_comTapBonusMap_codec);
            break;
          }
          case 18: {
            comTapBonusMapAB_.AddEntriesFrom(input, _map_comTapBonusMapAB_codec);
            break;
          }
          case 26: {
            comTapBonusMapABPatch_.AddEntriesFrom(input, _map_comTapBonusMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            comTapBonusMap_.AddEntriesFrom(ref input, _map_comTapBonusMap_codec);
            break;
          }
          case 18: {
            comTapBonusMapAB_.AddEntriesFrom(ref input, _map_comTapBonusMapAB_codec);
            break;
          }
          case 26: {
            comTapBonusMapABPatch_.AddEntriesFrom(ref input, _map_comTapBonusMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
