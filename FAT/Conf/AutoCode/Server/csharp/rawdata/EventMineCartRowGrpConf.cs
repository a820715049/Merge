// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventMineCartRowGrpConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventMineCartRowGrpConf.proto</summary>
  public static partial class EventMineCartRowGrpConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventMineCartRowGrpConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventMineCartRowGrpConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiVyYXdkYXRhL0V2ZW50TWluZUNhcnRSb3dHcnBDb25mLnByb3RvEgdyYXdk",
            "YXRhImAKE0V2ZW50TWluZUNhcnRSb3dHcnASCgoCaWQYASABKAUSEgoKYm9h",
            "cmRSb3dJZBgCIAMoBRIVCg1jeWNsZVJvd1N0YXJ0GAMgASgFEhIKCnJvd1Vw",
            "Q291bnQYBCABKAUi4AEKHUV2ZW50TWluZUNhcnRSb3dHcnBNYXBBQlZhbHVl",
            "EmIKFkV2ZW50TWluZUNhcnRSb3dHcnBNYXAYASADKAsyQi5yYXdkYXRhLkV2",
            "ZW50TWluZUNhcnRSb3dHcnBNYXBBQlZhbHVlLkV2ZW50TWluZUNhcnRSb3dH",
            "cnBNYXBFbnRyeRpbChtFdmVudE1pbmVDYXJ0Um93R3JwTWFwRW50cnkSCwoD",
            "a2V5GAEgASgFEisKBXZhbHVlGAIgASgLMhwucmF3ZGF0YS5FdmVudE1pbmVD",
            "YXJ0Um93R3JwOgI4ASL5BAoXRXZlbnRNaW5lQ2FydFJvd0dycENvbmYSXAoW",
            "RXZlbnRNaW5lQ2FydFJvd0dycE1hcBgBIAMoCzI8LnJhd2RhdGEuRXZlbnRN",
            "aW5lQ2FydFJvd0dycENvbmYuRXZlbnRNaW5lQ2FydFJvd0dycE1hcEVudHJ5",
            "EmAKGEV2ZW50TWluZUNhcnRSb3dHcnBNYXBBQhgCIAMoCzI+LnJhd2RhdGEu",
            "RXZlbnRNaW5lQ2FydFJvd0dycENvbmYuRXZlbnRNaW5lQ2FydFJvd0dycE1h",
            "cEFCRW50cnkSagodRXZlbnRNaW5lQ2FydFJvd0dycE1hcEFCUGF0Y2gYAyAD",
            "KAsyQy5yYXdkYXRhLkV2ZW50TWluZUNhcnRSb3dHcnBDb25mLkV2ZW50TWlu",
            "ZUNhcnRSb3dHcnBNYXBBQlBhdGNoRW50cnkaWwobRXZlbnRNaW5lQ2FydFJv",
            "d0dycE1hcEVudHJ5EgsKA2tleRgBIAEoBRIrCgV2YWx1ZRgCIAEoCzIcLnJh",
            "d2RhdGEuRXZlbnRNaW5lQ2FydFJvd0dycDoCOAEaZwodRXZlbnRNaW5lQ2Fy",
            "dFJvd0dycE1hcEFCRW50cnkSCwoDa2V5GAEgASgJEjUKBXZhbHVlGAIgASgL",
            "MiYucmF3ZGF0YS5FdmVudE1pbmVDYXJ0Um93R3JwTWFwQUJWYWx1ZToCOAEa",
            "bAoiRXZlbnRNaW5lQ2FydFJvd0dycE1hcEFCUGF0Y2hFbnRyeRILCgNrZXkY",
            "ASABKAkSNQoFdmFsdWUYAiABKAsyJi5yYXdkYXRhLkV2ZW50TWluZUNhcnRS",
            "b3dHcnBNYXBBQlZhbHVlOgI4AUI9Wi1naXRsYWIuZnVucGx1cy5pby9mYXQv",
            "Y29uZi9nZW4vZ29sYW5nL3Jhd2RhdGGqAgtmYXQucmF3ZGF0YWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventMineCartRowGrp), global::fat.rawdata.EventMineCartRowGrp.Parser, new[]{ "Id", "BoardRowId", "CycleRowStart", "RowUpCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventMineCartRowGrpMapABValue), global::fat.rawdata.EventMineCartRowGrpMapABValue.Parser, new[]{ "EventMineCartRowGrpMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventMineCartRowGrpConf), global::fat.rawdata.EventMineCartRowGrpConf.Parser, new[]{ "EventMineCartRowGrpMap", "EventMineCartRowGrpMapAB", "EventMineCartRowGrpMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventMineCartRowGrp",table="EventMineCartRowGrpMap",table_wrapper="EventMineCartRowGrpConf",map="true",map_key_type="int32",data="EventMineCartRowGrpConf")
  /// annotation@ab(table_ab="EventMineCartRowGrpMapAB",table_ab_patch="EventMineCartRowGrpMapABPatch",table_ab_value="EventMineCartRowGrpMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventMineCartRowGrp(id="id")
  /// </summary>
  public sealed partial class EventMineCartRowGrp : pb::IMessage<EventMineCartRowGrp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventMineCartRowGrp> _parser = new pb::MessageParser<EventMineCartRowGrp>(() => new EventMineCartRowGrp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventMineCartRowGrp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventMineCartRowGrpConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMineCartRowGrp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMineCartRowGrp(EventMineCartRowGrp other) : this() {
      id_ = other.id_;
      boardRowId_ = other.boardRowId_.Clone();
      cycleRowStart_ = other.cycleRowStart_;
      rowUpCount_ = other.rowUpCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMineCartRowGrp Clone() {
      return new EventMineCartRowGrp(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 棋盘详情id
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "boardRowId" field.</summary>
    public const int BoardRowIdFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_boardRowId_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> boardRowId_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 棋盘行配置
    /// (EventMineCartRow.id)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> BoardRowId {
      get { return boardRowId_; }
    }

    /// <summary>Field number for the "cycleRowStart" field.</summary>
    public const int CycleRowStartFieldNumber = 3;
    private int cycleRowStart_;
    /// <summary>
    /// 循环起始行
    /// (EventMineCartRow.id)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CycleRowStart {
      get { return cycleRowStart_; }
      set {
        cycleRowStart_ = value;
      }
    }

    /// <summary>Field number for the "rowUpCount" field.</summary>
    public const int RowUpCountFieldNumber = 4;
    private int rowUpCount_;
    /// <summary>
    /// 升行判断：计算空行数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RowUpCount {
      get { return rowUpCount_; }
      set {
        rowUpCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventMineCartRowGrp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventMineCartRowGrp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!boardRowId_.Equals(other.boardRowId_)) return false;
      if (CycleRowStart != other.CycleRowStart) return false;
      if (RowUpCount != other.RowUpCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      hash ^= boardRowId_.GetHashCode();
      if (CycleRowStart != 0) hash ^= CycleRowStart.GetHashCode();
      if (RowUpCount != 0) hash ^= RowUpCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      boardRowId_.WriteTo(output, _repeated_boardRowId_codec);
      if (CycleRowStart != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CycleRowStart);
      }
      if (RowUpCount != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(RowUpCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      boardRowId_.WriteTo(ref output, _repeated_boardRowId_codec);
      if (CycleRowStart != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CycleRowStart);
      }
      if (RowUpCount != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(RowUpCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      size += boardRowId_.CalculateSize(_repeated_boardRowId_codec);
      if (CycleRowStart != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CycleRowStart);
      }
      if (RowUpCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RowUpCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventMineCartRowGrp other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      boardRowId_.Add(other.boardRowId_);
      if (other.CycleRowStart != 0) {
        CycleRowStart = other.CycleRowStart;
      }
      if (other.RowUpCount != 0) {
        RowUpCount = other.RowUpCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            boardRowId_.AddEntriesFrom(input, _repeated_boardRowId_codec);
            break;
          }
          case 24: {
            CycleRowStart = input.ReadInt32();
            break;
          }
          case 32: {
            RowUpCount = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            boardRowId_.AddEntriesFrom(ref input, _repeated_boardRowId_codec);
            break;
          }
          case 24: {
            CycleRowStart = input.ReadInt32();
            break;
          }
          case 32: {
            RowUpCount = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventMineCartRowGrpMapABValue : pb::IMessage<EventMineCartRowGrpMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventMineCartRowGrpMapABValue> _parser = new pb::MessageParser<EventMineCartRowGrpMapABValue>(() => new EventMineCartRowGrpMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventMineCartRowGrpMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventMineCartRowGrpConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMineCartRowGrpMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMineCartRowGrpMapABValue(EventMineCartRowGrpMapABValue other) : this() {
      eventMineCartRowGrpMap_ = other.eventMineCartRowGrpMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMineCartRowGrpMapABValue Clone() {
      return new EventMineCartRowGrpMapABValue(this);
    }

    /// <summary>Field number for the "EventMineCartRowGrpMap" field.</summary>
    public const int EventMineCartRowGrpMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventMineCartRowGrp>.Codec _map_eventMineCartRowGrpMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventMineCartRowGrp>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventMineCartRowGrp.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventMineCartRowGrp> eventMineCartRowGrpMap_ = new pbc::MapField<int, global::fat.rawdata.EventMineCartRowGrp>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventMineCartRowGrp> EventMineCartRowGrpMap {
      get { return eventMineCartRowGrpMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventMineCartRowGrpMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventMineCartRowGrpMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventMineCartRowGrpMap.Equals(other.EventMineCartRowGrpMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventMineCartRowGrpMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventMineCartRowGrpMap_.WriteTo(output, _map_eventMineCartRowGrpMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventMineCartRowGrpMap_.WriteTo(ref output, _map_eventMineCartRowGrpMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventMineCartRowGrpMap_.CalculateSize(_map_eventMineCartRowGrpMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventMineCartRowGrpMapABValue other) {
      if (other == null) {
        return;
      }
      eventMineCartRowGrpMap_.Add(other.eventMineCartRowGrpMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventMineCartRowGrpMap_.AddEntriesFrom(input, _map_eventMineCartRowGrpMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventMineCartRowGrpMap_.AddEntriesFrom(ref input, _map_eventMineCartRowGrpMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventMineCartRowGrpConf : pb::IMessage<EventMineCartRowGrpConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventMineCartRowGrpConf> _parser = new pb::MessageParser<EventMineCartRowGrpConf>(() => new EventMineCartRowGrpConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventMineCartRowGrpConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventMineCartRowGrpConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMineCartRowGrpConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMineCartRowGrpConf(EventMineCartRowGrpConf other) : this() {
      eventMineCartRowGrpMap_ = other.eventMineCartRowGrpMap_.Clone();
      eventMineCartRowGrpMapAB_ = other.eventMineCartRowGrpMapAB_.Clone();
      eventMineCartRowGrpMapABPatch_ = other.eventMineCartRowGrpMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMineCartRowGrpConf Clone() {
      return new EventMineCartRowGrpConf(this);
    }

    /// <summary>Field number for the "EventMineCartRowGrpMap" field.</summary>
    public const int EventMineCartRowGrpMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventMineCartRowGrp>.Codec _map_eventMineCartRowGrpMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventMineCartRowGrp>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventMineCartRowGrp.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventMineCartRowGrp> eventMineCartRowGrpMap_ = new pbc::MapField<int, global::fat.rawdata.EventMineCartRowGrp>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventMineCartRowGrp> EventMineCartRowGrpMap {
      get { return eventMineCartRowGrpMap_; }
    }

    /// <summary>Field number for the "EventMineCartRowGrpMapAB" field.</summary>
    public const int EventMineCartRowGrpMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventMineCartRowGrpMapABValue>.Codec _map_eventMineCartRowGrpMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventMineCartRowGrpMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventMineCartRowGrpMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventMineCartRowGrpMapABValue> eventMineCartRowGrpMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventMineCartRowGrpMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventMineCartRowGrpMapABValue> EventMineCartRowGrpMapAB {
      get { return eventMineCartRowGrpMapAB_; }
    }

    /// <summary>Field number for the "EventMineCartRowGrpMapABPatch" field.</summary>
    public const int EventMineCartRowGrpMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventMineCartRowGrpMapABValue>.Codec _map_eventMineCartRowGrpMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventMineCartRowGrpMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventMineCartRowGrpMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventMineCartRowGrpMapABValue> eventMineCartRowGrpMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventMineCartRowGrpMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventMineCartRowGrpMapABValue> EventMineCartRowGrpMapABPatch {
      get { return eventMineCartRowGrpMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventMineCartRowGrpConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventMineCartRowGrpConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventMineCartRowGrpMap.Equals(other.EventMineCartRowGrpMap)) return false;
      if (!EventMineCartRowGrpMapAB.Equals(other.EventMineCartRowGrpMapAB)) return false;
      if (!EventMineCartRowGrpMapABPatch.Equals(other.EventMineCartRowGrpMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventMineCartRowGrpMap.GetHashCode();
      hash ^= EventMineCartRowGrpMapAB.GetHashCode();
      hash ^= EventMineCartRowGrpMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventMineCartRowGrpMap_.WriteTo(output, _map_eventMineCartRowGrpMap_codec);
      eventMineCartRowGrpMapAB_.WriteTo(output, _map_eventMineCartRowGrpMapAB_codec);
      eventMineCartRowGrpMapABPatch_.WriteTo(output, _map_eventMineCartRowGrpMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventMineCartRowGrpMap_.WriteTo(ref output, _map_eventMineCartRowGrpMap_codec);
      eventMineCartRowGrpMapAB_.WriteTo(ref output, _map_eventMineCartRowGrpMapAB_codec);
      eventMineCartRowGrpMapABPatch_.WriteTo(ref output, _map_eventMineCartRowGrpMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventMineCartRowGrpMap_.CalculateSize(_map_eventMineCartRowGrpMap_codec);
      size += eventMineCartRowGrpMapAB_.CalculateSize(_map_eventMineCartRowGrpMapAB_codec);
      size += eventMineCartRowGrpMapABPatch_.CalculateSize(_map_eventMineCartRowGrpMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventMineCartRowGrpConf other) {
      if (other == null) {
        return;
      }
      eventMineCartRowGrpMap_.Add(other.eventMineCartRowGrpMap_);
      eventMineCartRowGrpMapAB_.Add(other.eventMineCartRowGrpMapAB_);
      eventMineCartRowGrpMapABPatch_.Add(other.eventMineCartRowGrpMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventMineCartRowGrpMap_.AddEntriesFrom(input, _map_eventMineCartRowGrpMap_codec);
            break;
          }
          case 18: {
            eventMineCartRowGrpMapAB_.AddEntriesFrom(input, _map_eventMineCartRowGrpMapAB_codec);
            break;
          }
          case 26: {
            eventMineCartRowGrpMapABPatch_.AddEntriesFrom(input, _map_eventMineCartRowGrpMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventMineCartRowGrpMap_.AddEntriesFrom(ref input, _map_eventMineCartRowGrpMap_codec);
            break;
          }
          case 18: {
            eventMineCartRowGrpMapAB_.AddEntriesFrom(ref input, _map_eventMineCartRowGrpMapAB_codec);
            break;
          }
          case 26: {
            eventMineCartRowGrpMapABPatch_.AddEntriesFrom(ref input, _map_eventMineCartRowGrpMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
