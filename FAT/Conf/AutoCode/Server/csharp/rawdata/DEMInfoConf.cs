// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/DEMInfoConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/DEMInfoConf.proto</summary>
  public static partial class DEMInfoConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/DEMInfoConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DEMInfoConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChlyYXdkYXRhL0RFTUluZm9Db25mLnByb3RvEgdyYXdkYXRhInAKB0RFTUlu",
            "Zm8SCgoCaWQYASABKAUSDAoEZGlmZhgFIAEoBRIaChJtaWxlc3RvbmVIaWdo",
            "bGlnaHQYAiADKAgSFwoPbWlsZXN0b25lUmV3YXJkGAMgAygJEhYKDm1pbGVz",
            "dG9uZVNjb3JlGAQgAygFIpgBChFERU1JbmZvTWFwQUJWYWx1ZRI+CgpERU1J",
            "bmZvTWFwGAEgAygLMioucmF3ZGF0YS5ERU1JbmZvTWFwQUJWYWx1ZS5ERU1J",
            "bmZvTWFwRW50cnkaQwoPREVNSW5mb01hcEVudHJ5EgsKA2tleRgBIAEoBRIf",
            "CgV2YWx1ZRgCIAEoCzIQLnJhd2RhdGEuREVNSW5mbzoCOAEiuQMKC0RFTUlu",
            "Zm9Db25mEjgKCkRFTUluZm9NYXAYASADKAsyJC5yYXdkYXRhLkRFTUluZm9D",
            "b25mLkRFTUluZm9NYXBFbnRyeRI8CgxERU1JbmZvTWFwQUIYAiADKAsyJi5y",
            "YXdkYXRhLkRFTUluZm9Db25mLkRFTUluZm9NYXBBQkVudHJ5EkYKEURFTUlu",
            "Zm9NYXBBQlBhdGNoGAMgAygLMisucmF3ZGF0YS5ERU1JbmZvQ29uZi5ERU1J",
            "bmZvTWFwQUJQYXRjaEVudHJ5GkMKD0RFTUluZm9NYXBFbnRyeRILCgNrZXkY",
            "ASABKAUSHwoFdmFsdWUYAiABKAsyEC5yYXdkYXRhLkRFTUluZm86AjgBGk8K",
            "EURFTUluZm9NYXBBQkVudHJ5EgsKA2tleRgBIAEoCRIpCgV2YWx1ZRgCIAEo",
            "CzIaLnJhd2RhdGEuREVNSW5mb01hcEFCVmFsdWU6AjgBGlQKFkRFTUluZm9N",
            "YXBBQlBhdGNoRW50cnkSCwoDa2V5GAEgASgJEikKBXZhbHVlGAIgASgLMhou",
            "cmF3ZGF0YS5ERU1JbmZvTWFwQUJWYWx1ZToCOAFCPVotZ2l0bGFiLmZ1bnBs",
            "dXMuaW8vZmF0L2NvbmYvZ2VuL2dvbGFuZy9yYXdkYXRhqgILZmF0LnJhd2Rh",
            "dGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.DEMInfo), global::fat.rawdata.DEMInfo.Parser, new[]{ "Id", "Diff", "MilestoneHighlight", "MilestoneReward", "MilestoneScore" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.DEMInfoMapABValue), global::fat.rawdata.DEMInfoMapABValue.Parser, new[]{ "DEMInfoMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.DEMInfoConf), global::fat.rawdata.DEMInfoConf.Parser, new[]{ "DEMInfoMap", "DEMInfoMapAB", "DEMInfoMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="DEMInfo",table="DEMInfoMap",table_wrapper="DEMInfoConf",map="true",map_key_type="int32",data="DEMInfoConf")
  /// annotation@ab(table_ab="DEMInfoMapAB",table_ab_patch="DEMInfoMapABPatch",table_ab_value="DEMInfoMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@DEMInfo(id="id")
  /// </summary>
  public sealed partial class DEMInfo : pb::IMessage<DEMInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DEMInfo> _parser = new pb::MessageParser<DEMInfo>(() => new DEMInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DEMInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.DEMInfoConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DEMInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DEMInfo(DEMInfo other) : this() {
      id_ = other.id_;
      diff_ = other.diff_;
      milestoneHighlight_ = other.milestoneHighlight_.Clone();
      milestoneReward_ = other.milestoneReward_.Clone();
      milestoneScore_ = other.milestoneScore_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DEMInfo Clone() {
      return new DEMInfo(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 每日任务里程碑
    /// 包含里程碑信息ID
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "diff" field.</summary>
    public const int DiffFieldNumber = 5;
    private int diff_;
    /// <summary>
    /// 预设难度值
    /// （TGA事件属性）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Diff {
      get { return diff_; }
      set {
        diff_ = value;
      }
    }

    /// <summary>Field number for the "milestoneHighlight" field.</summary>
    public const int MilestoneHighlightFieldNumber = 2;
    private static readonly pb::FieldCodec<bool> _repeated_milestoneHighlight_codec
        = pb::FieldCodec.ForBool(18);
    private readonly pbc::RepeatedField<bool> milestoneHighlight_ = new pbc::RepeatedField<bool>();
    /// <summary>
    /// 里程碑奖励身后是否带特效
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<bool> MilestoneHighlight {
      get { return milestoneHighlight_; }
    }

    /// <summary>Field number for the "milestoneReward" field.</summary>
    public const int MilestoneRewardFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_milestoneReward_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> milestoneReward_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 里程碑分数对应奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> MilestoneReward {
      get { return milestoneReward_; }
    }

    /// <summary>Field number for the "milestoneScore" field.</summary>
    public const int MilestoneScoreFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_milestoneScore_codec
        = pb::FieldCodec.ForInt32(34);
    private readonly pbc::RepeatedField<int> milestoneScore_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 里程碑分数要求
    /// 每一级所需的分数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> MilestoneScore {
      get { return milestoneScore_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DEMInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DEMInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Diff != other.Diff) return false;
      if(!milestoneHighlight_.Equals(other.milestoneHighlight_)) return false;
      if(!milestoneReward_.Equals(other.milestoneReward_)) return false;
      if(!milestoneScore_.Equals(other.milestoneScore_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Diff != 0) hash ^= Diff.GetHashCode();
      hash ^= milestoneHighlight_.GetHashCode();
      hash ^= milestoneReward_.GetHashCode();
      hash ^= milestoneScore_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      milestoneHighlight_.WriteTo(output, _repeated_milestoneHighlight_codec);
      milestoneReward_.WriteTo(output, _repeated_milestoneReward_codec);
      milestoneScore_.WriteTo(output, _repeated_milestoneScore_codec);
      if (Diff != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Diff);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      milestoneHighlight_.WriteTo(ref output, _repeated_milestoneHighlight_codec);
      milestoneReward_.WriteTo(ref output, _repeated_milestoneReward_codec);
      milestoneScore_.WriteTo(ref output, _repeated_milestoneScore_codec);
      if (Diff != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Diff);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Diff != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Diff);
      }
      size += milestoneHighlight_.CalculateSize(_repeated_milestoneHighlight_codec);
      size += milestoneReward_.CalculateSize(_repeated_milestoneReward_codec);
      size += milestoneScore_.CalculateSize(_repeated_milestoneScore_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DEMInfo other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Diff != 0) {
        Diff = other.Diff;
      }
      milestoneHighlight_.Add(other.milestoneHighlight_);
      milestoneReward_.Add(other.milestoneReward_);
      milestoneScore_.Add(other.milestoneScore_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            milestoneHighlight_.AddEntriesFrom(input, _repeated_milestoneHighlight_codec);
            break;
          }
          case 26: {
            milestoneReward_.AddEntriesFrom(input, _repeated_milestoneReward_codec);
            break;
          }
          case 34:
          case 32: {
            milestoneScore_.AddEntriesFrom(input, _repeated_milestoneScore_codec);
            break;
          }
          case 40: {
            Diff = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            milestoneHighlight_.AddEntriesFrom(ref input, _repeated_milestoneHighlight_codec);
            break;
          }
          case 26: {
            milestoneReward_.AddEntriesFrom(ref input, _repeated_milestoneReward_codec);
            break;
          }
          case 34:
          case 32: {
            milestoneScore_.AddEntriesFrom(ref input, _repeated_milestoneScore_codec);
            break;
          }
          case 40: {
            Diff = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DEMInfoMapABValue : pb::IMessage<DEMInfoMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DEMInfoMapABValue> _parser = new pb::MessageParser<DEMInfoMapABValue>(() => new DEMInfoMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DEMInfoMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.DEMInfoConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DEMInfoMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DEMInfoMapABValue(DEMInfoMapABValue other) : this() {
      dEMInfoMap_ = other.dEMInfoMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DEMInfoMapABValue Clone() {
      return new DEMInfoMapABValue(this);
    }

    /// <summary>Field number for the "DEMInfoMap" field.</summary>
    public const int DEMInfoMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.DEMInfo>.Codec _map_dEMInfoMap_codec
        = new pbc::MapField<int, global::fat.rawdata.DEMInfo>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.DEMInfo.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.DEMInfo> dEMInfoMap_ = new pbc::MapField<int, global::fat.rawdata.DEMInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.DEMInfo> DEMInfoMap {
      get { return dEMInfoMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DEMInfoMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DEMInfoMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!DEMInfoMap.Equals(other.DEMInfoMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= DEMInfoMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      dEMInfoMap_.WriteTo(output, _map_dEMInfoMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      dEMInfoMap_.WriteTo(ref output, _map_dEMInfoMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += dEMInfoMap_.CalculateSize(_map_dEMInfoMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DEMInfoMapABValue other) {
      if (other == null) {
        return;
      }
      dEMInfoMap_.Add(other.dEMInfoMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            dEMInfoMap_.AddEntriesFrom(input, _map_dEMInfoMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            dEMInfoMap_.AddEntriesFrom(ref input, _map_dEMInfoMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DEMInfoConf : pb::IMessage<DEMInfoConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DEMInfoConf> _parser = new pb::MessageParser<DEMInfoConf>(() => new DEMInfoConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DEMInfoConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.DEMInfoConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DEMInfoConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DEMInfoConf(DEMInfoConf other) : this() {
      dEMInfoMap_ = other.dEMInfoMap_.Clone();
      dEMInfoMapAB_ = other.dEMInfoMapAB_.Clone();
      dEMInfoMapABPatch_ = other.dEMInfoMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DEMInfoConf Clone() {
      return new DEMInfoConf(this);
    }

    /// <summary>Field number for the "DEMInfoMap" field.</summary>
    public const int DEMInfoMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.DEMInfo>.Codec _map_dEMInfoMap_codec
        = new pbc::MapField<int, global::fat.rawdata.DEMInfo>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.DEMInfo.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.DEMInfo> dEMInfoMap_ = new pbc::MapField<int, global::fat.rawdata.DEMInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.DEMInfo> DEMInfoMap {
      get { return dEMInfoMap_; }
    }

    /// <summary>Field number for the "DEMInfoMapAB" field.</summary>
    public const int DEMInfoMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.DEMInfoMapABValue>.Codec _map_dEMInfoMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.DEMInfoMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.DEMInfoMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.DEMInfoMapABValue> dEMInfoMapAB_ = new pbc::MapField<string, global::fat.rawdata.DEMInfoMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.DEMInfoMapABValue> DEMInfoMapAB {
      get { return dEMInfoMapAB_; }
    }

    /// <summary>Field number for the "DEMInfoMapABPatch" field.</summary>
    public const int DEMInfoMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.DEMInfoMapABValue>.Codec _map_dEMInfoMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.DEMInfoMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.DEMInfoMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.DEMInfoMapABValue> dEMInfoMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.DEMInfoMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.DEMInfoMapABValue> DEMInfoMapABPatch {
      get { return dEMInfoMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DEMInfoConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DEMInfoConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!DEMInfoMap.Equals(other.DEMInfoMap)) return false;
      if (!DEMInfoMapAB.Equals(other.DEMInfoMapAB)) return false;
      if (!DEMInfoMapABPatch.Equals(other.DEMInfoMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= DEMInfoMap.GetHashCode();
      hash ^= DEMInfoMapAB.GetHashCode();
      hash ^= DEMInfoMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      dEMInfoMap_.WriteTo(output, _map_dEMInfoMap_codec);
      dEMInfoMapAB_.WriteTo(output, _map_dEMInfoMapAB_codec);
      dEMInfoMapABPatch_.WriteTo(output, _map_dEMInfoMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      dEMInfoMap_.WriteTo(ref output, _map_dEMInfoMap_codec);
      dEMInfoMapAB_.WriteTo(ref output, _map_dEMInfoMapAB_codec);
      dEMInfoMapABPatch_.WriteTo(ref output, _map_dEMInfoMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += dEMInfoMap_.CalculateSize(_map_dEMInfoMap_codec);
      size += dEMInfoMapAB_.CalculateSize(_map_dEMInfoMapAB_codec);
      size += dEMInfoMapABPatch_.CalculateSize(_map_dEMInfoMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DEMInfoConf other) {
      if (other == null) {
        return;
      }
      dEMInfoMap_.Add(other.dEMInfoMap_);
      dEMInfoMapAB_.Add(other.dEMInfoMapAB_);
      dEMInfoMapABPatch_.Add(other.dEMInfoMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            dEMInfoMap_.AddEntriesFrom(input, _map_dEMInfoMap_codec);
            break;
          }
          case 18: {
            dEMInfoMapAB_.AddEntriesFrom(input, _map_dEMInfoMapAB_codec);
            break;
          }
          case 26: {
            dEMInfoMapABPatch_.AddEntriesFrom(input, _map_dEMInfoMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            dEMInfoMap_.AddEntriesFrom(ref input, _map_dEMInfoMap_codec);
            break;
          }
          case 18: {
            dEMInfoMapAB_.AddEntriesFrom(ref input, _map_dEMInfoMapAB_codec);
            break;
          }
          case 26: {
            dEMInfoMapABPatch_.AddEntriesFrom(ref input, _map_dEMInfoMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
