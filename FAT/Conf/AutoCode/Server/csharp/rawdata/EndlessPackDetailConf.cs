// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EndlessPackDetailConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EndlessPackDetailConf.proto</summary>
  public static partial class EndlessPackDetailConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EndlessPackDetailConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EndlessPackDetailConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiNyYXdkYXRhL0VuZGxlc3NQYWNrRGV0YWlsQ29uZi5wcm90bxIHcmF3ZGF0",
            "YSJvChFFbmRsZXNzUGFja0RldGFpbBIQCghkZXRhaWxpZBgBIAEoBRIRCglm",
            "cmVlR3JwSWQYBSABKAUSDQoFbGFiZWwYByABKAUSEQoJcGFja0dycElkGAYg",
            "ASgFEhMKC3Rva2VuUmV3YXJkGAggASgFIlsKHUVuZGxlc3NQYWNrRGV0YWls",
            "U2xpY2VBQlZhbHVlEjoKFkVuZGxlc3NQYWNrRGV0YWlsU2xpY2UYASADKAsy",
            "Gi5yYXdkYXRhLkVuZGxlc3NQYWNrRGV0YWlsIvQDChVFbmRsZXNzUGFja0Rl",
            "dGFpbENvbmYSOgoWRW5kbGVzc1BhY2tEZXRhaWxTbGljZRgBIAMoCzIaLnJh",
            "d2RhdGEuRW5kbGVzc1BhY2tEZXRhaWwSXgoYRW5kbGVzc1BhY2tEZXRhaWxT",
            "bGljZUFCGAIgAygLMjwucmF3ZGF0YS5FbmRsZXNzUGFja0RldGFpbENvbmYu",
            "RW5kbGVzc1BhY2tEZXRhaWxTbGljZUFCRW50cnkSaAodRW5kbGVzc1BhY2tE",
            "ZXRhaWxTbGljZUFCUGF0Y2gYAyADKAsyQS5yYXdkYXRhLkVuZGxlc3NQYWNr",
            "RGV0YWlsQ29uZi5FbmRsZXNzUGFja0RldGFpbFNsaWNlQUJQYXRjaEVudHJ5",
            "GmcKHUVuZGxlc3NQYWNrRGV0YWlsU2xpY2VBQkVudHJ5EgsKA2tleRgBIAEo",
            "CRI1CgV2YWx1ZRgCIAEoCzImLnJhd2RhdGEuRW5kbGVzc1BhY2tEZXRhaWxT",
            "bGljZUFCVmFsdWU6AjgBGmwKIkVuZGxlc3NQYWNrRGV0YWlsU2xpY2VBQlBh",
            "dGNoRW50cnkSCwoDa2V5GAEgASgJEjUKBXZhbHVlGAIgASgLMiYucmF3ZGF0",
            "YS5FbmRsZXNzUGFja0RldGFpbFNsaWNlQUJWYWx1ZToCOAFCPVotZ2l0bGFi",
            "LmZ1bnBsdXMuaW8vZmF0L2NvbmYvZ2VuL2dvbGFuZy9yYXdkYXRhqgILZmF0",
            "LnJhd2RhdGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EndlessPackDetail), global::fat.rawdata.EndlessPackDetail.Parser, new[]{ "Detailid", "FreeGrpId", "Label", "PackGrpId", "TokenReward" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EndlessPackDetailSliceABValue), global::fat.rawdata.EndlessPackDetailSliceABValue.Parser, new[]{ "EndlessPackDetailSlice" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EndlessPackDetailConf), global::fat.rawdata.EndlessPackDetailConf.Parser, new[]{ "EndlessPackDetailSlice", "EndlessPackDetailSliceAB", "EndlessPackDetailSliceABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EndlessPackDetail",table="EndlessPackDetailSlice",table_wrapper="EndlessPackDetailConf",map="false",map_key_type="",data="EndlessPackDetailConf")
  /// annotation@ab(table_ab="EndlessPackDetailSliceAB",table_ab_patch="EndlessPackDetailSliceABPatch",table_ab_value="EndlessPackDetailSliceABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// </summary>
  public sealed partial class EndlessPackDetail : pb::IMessage<EndlessPackDetail>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EndlessPackDetail> _parser = new pb::MessageParser<EndlessPackDetail>(() => new EndlessPackDetail());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EndlessPackDetail> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EndlessPackDetailConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndlessPackDetail() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndlessPackDetail(EndlessPackDetail other) : this() {
      detailid_ = other.detailid_;
      freeGrpId_ = other.freeGrpId_;
      label_ = other.label_;
      packGrpId_ = other.packGrpId_;
      tokenReward_ = other.tokenReward_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndlessPackDetail Clone() {
      return new EndlessPackDetail(this);
    }

    /// <summary>Field number for the "detailid" field.</summary>
    public const int DetailidFieldNumber = 1;
    private int detailid_;
    /// <summary>
    /// 礼包详情id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Detailid {
      get { return detailid_; }
      set {
        detailid_ = value;
      }
    }

    /// <summary>Field number for the "freeGrpId" field.</summary>
    public const int FreeGrpIdFieldNumber = 5;
    private int freeGrpId_;
    /// <summary>
    /// 赠品ID
    /// （受档位组控制）
    /// （GradeIndexMapping.id）
    /// （IAPFree.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FreeGrpId {
      get { return freeGrpId_; }
      set {
        freeGrpId_ = value;
      }
    }

    /// <summary>Field number for the "label" field.</summary>
    public const int LabelFieldNumber = 7;
    private int label_;
    /// <summary>
    /// 标签信息
    /// （Label.id）
    /// （为空代表不显示标签）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Label {
      get { return label_; }
      set {
        label_ = value;
      }
    }

    /// <summary>Field number for the "packGrpId" field.</summary>
    public const int PackGrpIdFieldNumber = 6;
    private int packGrpId_;
    /// <summary>
    /// 内购商品ID
    /// （受档位组控制）
    /// （GradeIndexMapping.id）
    /// （IAPPack.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PackGrpId {
      get { return packGrpId_; }
      set {
        packGrpId_ = value;
      }
    }

    /// <summary>Field number for the "tokenReward" field.</summary>
    public const int TokenRewardFieldNumber = 8;
    private int tokenReward_;
    /// <summary>
    /// token奖励
    /// （GradeIndexMapping.id）
    /// （EndlessPackToken.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TokenReward {
      get { return tokenReward_; }
      set {
        tokenReward_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EndlessPackDetail);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EndlessPackDetail other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Detailid != other.Detailid) return false;
      if (FreeGrpId != other.FreeGrpId) return false;
      if (Label != other.Label) return false;
      if (PackGrpId != other.PackGrpId) return false;
      if (TokenReward != other.TokenReward) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Detailid != 0) hash ^= Detailid.GetHashCode();
      if (FreeGrpId != 0) hash ^= FreeGrpId.GetHashCode();
      if (Label != 0) hash ^= Label.GetHashCode();
      if (PackGrpId != 0) hash ^= PackGrpId.GetHashCode();
      if (TokenReward != 0) hash ^= TokenReward.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Detailid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Detailid);
      }
      if (FreeGrpId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(FreeGrpId);
      }
      if (PackGrpId != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(PackGrpId);
      }
      if (Label != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Label);
      }
      if (TokenReward != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(TokenReward);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Detailid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Detailid);
      }
      if (FreeGrpId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(FreeGrpId);
      }
      if (PackGrpId != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(PackGrpId);
      }
      if (Label != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Label);
      }
      if (TokenReward != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(TokenReward);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Detailid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Detailid);
      }
      if (FreeGrpId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FreeGrpId);
      }
      if (Label != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Label);
      }
      if (PackGrpId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PackGrpId);
      }
      if (TokenReward != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TokenReward);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EndlessPackDetail other) {
      if (other == null) {
        return;
      }
      if (other.Detailid != 0) {
        Detailid = other.Detailid;
      }
      if (other.FreeGrpId != 0) {
        FreeGrpId = other.FreeGrpId;
      }
      if (other.Label != 0) {
        Label = other.Label;
      }
      if (other.PackGrpId != 0) {
        PackGrpId = other.PackGrpId;
      }
      if (other.TokenReward != 0) {
        TokenReward = other.TokenReward;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Detailid = input.ReadInt32();
            break;
          }
          case 40: {
            FreeGrpId = input.ReadInt32();
            break;
          }
          case 48: {
            PackGrpId = input.ReadInt32();
            break;
          }
          case 56: {
            Label = input.ReadInt32();
            break;
          }
          case 64: {
            TokenReward = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Detailid = input.ReadInt32();
            break;
          }
          case 40: {
            FreeGrpId = input.ReadInt32();
            break;
          }
          case 48: {
            PackGrpId = input.ReadInt32();
            break;
          }
          case 56: {
            Label = input.ReadInt32();
            break;
          }
          case 64: {
            TokenReward = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EndlessPackDetailSliceABValue : pb::IMessage<EndlessPackDetailSliceABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EndlessPackDetailSliceABValue> _parser = new pb::MessageParser<EndlessPackDetailSliceABValue>(() => new EndlessPackDetailSliceABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EndlessPackDetailSliceABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EndlessPackDetailConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndlessPackDetailSliceABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndlessPackDetailSliceABValue(EndlessPackDetailSliceABValue other) : this() {
      endlessPackDetailSlice_ = other.endlessPackDetailSlice_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndlessPackDetailSliceABValue Clone() {
      return new EndlessPackDetailSliceABValue(this);
    }

    /// <summary>Field number for the "EndlessPackDetailSlice" field.</summary>
    public const int EndlessPackDetailSliceFieldNumber = 1;
    private static readonly pb::FieldCodec<global::fat.rawdata.EndlessPackDetail> _repeated_endlessPackDetailSlice_codec
        = pb::FieldCodec.ForMessage(10, global::fat.rawdata.EndlessPackDetail.Parser);
    private readonly pbc::RepeatedField<global::fat.rawdata.EndlessPackDetail> endlessPackDetailSlice_ = new pbc::RepeatedField<global::fat.rawdata.EndlessPackDetail>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::fat.rawdata.EndlessPackDetail> EndlessPackDetailSlice {
      get { return endlessPackDetailSlice_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EndlessPackDetailSliceABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EndlessPackDetailSliceABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!endlessPackDetailSlice_.Equals(other.endlessPackDetailSlice_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= endlessPackDetailSlice_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      endlessPackDetailSlice_.WriteTo(output, _repeated_endlessPackDetailSlice_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      endlessPackDetailSlice_.WriteTo(ref output, _repeated_endlessPackDetailSlice_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += endlessPackDetailSlice_.CalculateSize(_repeated_endlessPackDetailSlice_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EndlessPackDetailSliceABValue other) {
      if (other == null) {
        return;
      }
      endlessPackDetailSlice_.Add(other.endlessPackDetailSlice_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            endlessPackDetailSlice_.AddEntriesFrom(input, _repeated_endlessPackDetailSlice_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            endlessPackDetailSlice_.AddEntriesFrom(ref input, _repeated_endlessPackDetailSlice_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EndlessPackDetailConf : pb::IMessage<EndlessPackDetailConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EndlessPackDetailConf> _parser = new pb::MessageParser<EndlessPackDetailConf>(() => new EndlessPackDetailConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EndlessPackDetailConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EndlessPackDetailConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndlessPackDetailConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndlessPackDetailConf(EndlessPackDetailConf other) : this() {
      endlessPackDetailSlice_ = other.endlessPackDetailSlice_.Clone();
      endlessPackDetailSliceAB_ = other.endlessPackDetailSliceAB_.Clone();
      endlessPackDetailSliceABPatch_ = other.endlessPackDetailSliceABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndlessPackDetailConf Clone() {
      return new EndlessPackDetailConf(this);
    }

    /// <summary>Field number for the "EndlessPackDetailSlice" field.</summary>
    public const int EndlessPackDetailSliceFieldNumber = 1;
    private static readonly pb::FieldCodec<global::fat.rawdata.EndlessPackDetail> _repeated_endlessPackDetailSlice_codec
        = pb::FieldCodec.ForMessage(10, global::fat.rawdata.EndlessPackDetail.Parser);
    private readonly pbc::RepeatedField<global::fat.rawdata.EndlessPackDetail> endlessPackDetailSlice_ = new pbc::RepeatedField<global::fat.rawdata.EndlessPackDetail>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::fat.rawdata.EndlessPackDetail> EndlessPackDetailSlice {
      get { return endlessPackDetailSlice_; }
    }

    /// <summary>Field number for the "EndlessPackDetailSliceAB" field.</summary>
    public const int EndlessPackDetailSliceABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EndlessPackDetailSliceABValue>.Codec _map_endlessPackDetailSliceAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EndlessPackDetailSliceABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EndlessPackDetailSliceABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EndlessPackDetailSliceABValue> endlessPackDetailSliceAB_ = new pbc::MapField<string, global::fat.rawdata.EndlessPackDetailSliceABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EndlessPackDetailSliceABValue> EndlessPackDetailSliceAB {
      get { return endlessPackDetailSliceAB_; }
    }

    /// <summary>Field number for the "EndlessPackDetailSliceABPatch" field.</summary>
    public const int EndlessPackDetailSliceABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EndlessPackDetailSliceABValue>.Codec _map_endlessPackDetailSliceABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EndlessPackDetailSliceABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EndlessPackDetailSliceABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EndlessPackDetailSliceABValue> endlessPackDetailSliceABPatch_ = new pbc::MapField<string, global::fat.rawdata.EndlessPackDetailSliceABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EndlessPackDetailSliceABValue> EndlessPackDetailSliceABPatch {
      get { return endlessPackDetailSliceABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EndlessPackDetailConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EndlessPackDetailConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!endlessPackDetailSlice_.Equals(other.endlessPackDetailSlice_)) return false;
      if (!EndlessPackDetailSliceAB.Equals(other.EndlessPackDetailSliceAB)) return false;
      if (!EndlessPackDetailSliceABPatch.Equals(other.EndlessPackDetailSliceABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= endlessPackDetailSlice_.GetHashCode();
      hash ^= EndlessPackDetailSliceAB.GetHashCode();
      hash ^= EndlessPackDetailSliceABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      endlessPackDetailSlice_.WriteTo(output, _repeated_endlessPackDetailSlice_codec);
      endlessPackDetailSliceAB_.WriteTo(output, _map_endlessPackDetailSliceAB_codec);
      endlessPackDetailSliceABPatch_.WriteTo(output, _map_endlessPackDetailSliceABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      endlessPackDetailSlice_.WriteTo(ref output, _repeated_endlessPackDetailSlice_codec);
      endlessPackDetailSliceAB_.WriteTo(ref output, _map_endlessPackDetailSliceAB_codec);
      endlessPackDetailSliceABPatch_.WriteTo(ref output, _map_endlessPackDetailSliceABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += endlessPackDetailSlice_.CalculateSize(_repeated_endlessPackDetailSlice_codec);
      size += endlessPackDetailSliceAB_.CalculateSize(_map_endlessPackDetailSliceAB_codec);
      size += endlessPackDetailSliceABPatch_.CalculateSize(_map_endlessPackDetailSliceABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EndlessPackDetailConf other) {
      if (other == null) {
        return;
      }
      endlessPackDetailSlice_.Add(other.endlessPackDetailSlice_);
      endlessPackDetailSliceAB_.Add(other.endlessPackDetailSliceAB_);
      endlessPackDetailSliceABPatch_.Add(other.endlessPackDetailSliceABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            endlessPackDetailSlice_.AddEntriesFrom(input, _repeated_endlessPackDetailSlice_codec);
            break;
          }
          case 18: {
            endlessPackDetailSliceAB_.AddEntriesFrom(input, _map_endlessPackDetailSliceAB_codec);
            break;
          }
          case 26: {
            endlessPackDetailSliceABPatch_.AddEntriesFrom(input, _map_endlessPackDetailSliceABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            endlessPackDetailSlice_.AddEntriesFrom(ref input, _repeated_endlessPackDetailSlice_codec);
            break;
          }
          case 18: {
            endlessPackDetailSliceAB_.AddEntriesFrom(ref input, _map_endlessPackDetailSliceAB_codec);
            break;
          }
          case 26: {
            endlessPackDetailSliceABPatch_.AddEntriesFrom(ref input, _map_endlessPackDetailSliceABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
