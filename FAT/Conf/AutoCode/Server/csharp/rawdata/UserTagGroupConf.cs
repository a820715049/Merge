// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/UserTagGroupConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/UserTagGroupConf.proto</summary>
  public static partial class UserTagGroupConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/UserTagGroupConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static UserTagGroupConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch5yYXdkYXRhL1VzZXJUYWdHcm91cENvbmYucHJvdG8SB3Jhd2RhdGEisAEK",
            "DFVzZXJUYWdHcm91cBIKCgJpZBgBIAEoBRJHChF1c2VyVGFnR3JvdXBWYWx1",
            "ZRgCIAMoCzIsLnJhd2RhdGEuVXNlclRhZ0dyb3VwLlVzZXJUYWdHcm91cFZh",
            "bHVlRW50cnkSEQoJdXNlclRhZ0lkGAMgAygFGjgKFlVzZXJUYWdHcm91cFZh",
            "bHVlRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgFOgI4ASK2AQoW",
            "VXNlclRhZ0dyb3VwTWFwQUJWYWx1ZRJNCg9Vc2VyVGFnR3JvdXBNYXAYASAD",
            "KAsyNC5yYXdkYXRhLlVzZXJUYWdHcm91cE1hcEFCVmFsdWUuVXNlclRhZ0dy",
            "b3VwTWFwRW50cnkaTQoUVXNlclRhZ0dyb3VwTWFwRW50cnkSCwoDa2V5GAEg",
            "ASgFEiQKBXZhbHVlGAIgASgLMhUucmF3ZGF0YS5Vc2VyVGFnR3JvdXA6AjgB",
            "IokEChBVc2VyVGFnR3JvdXBDb25mEkcKD1VzZXJUYWdHcm91cE1hcBgBIAMo",
            "CzIuLnJhd2RhdGEuVXNlclRhZ0dyb3VwQ29uZi5Vc2VyVGFnR3JvdXBNYXBF",
            "bnRyeRJLChFVc2VyVGFnR3JvdXBNYXBBQhgCIAMoCzIwLnJhd2RhdGEuVXNl",
            "clRhZ0dyb3VwQ29uZi5Vc2VyVGFnR3JvdXBNYXBBQkVudHJ5ElUKFlVzZXJU",
            "YWdHcm91cE1hcEFCUGF0Y2gYAyADKAsyNS5yYXdkYXRhLlVzZXJUYWdHcm91",
            "cENvbmYuVXNlclRhZ0dyb3VwTWFwQUJQYXRjaEVudHJ5Gk0KFFVzZXJUYWdH",
            "cm91cE1hcEVudHJ5EgsKA2tleRgBIAEoBRIkCgV2YWx1ZRgCIAEoCzIVLnJh",
            "d2RhdGEuVXNlclRhZ0dyb3VwOgI4ARpZChZVc2VyVGFnR3JvdXBNYXBBQkVu",
            "dHJ5EgsKA2tleRgBIAEoCRIuCgV2YWx1ZRgCIAEoCzIfLnJhd2RhdGEuVXNl",
            "clRhZ0dyb3VwTWFwQUJWYWx1ZToCOAEaXgobVXNlclRhZ0dyb3VwTWFwQUJQ",
            "YXRjaEVudHJ5EgsKA2tleRgBIAEoCRIuCgV2YWx1ZRgCIAEoCzIfLnJhd2Rh",
            "dGEuVXNlclRhZ0dyb3VwTWFwQUJWYWx1ZToCOAFCPVotZ2l0bGFiLmZ1bnBs",
            "dXMuaW8vZmF0L2NvbmYvZ2VuL2dvbGFuZy9yYXdkYXRhqgILZmF0LnJhd2Rh",
            "dGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.UserTagGroup), global::fat.rawdata.UserTagGroup.Parser, new[]{ "Id", "UserTagGroupValue", "UserTagId" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.UserTagGroupMapABValue), global::fat.rawdata.UserTagGroupMapABValue.Parser, new[]{ "UserTagGroupMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.UserTagGroupConf), global::fat.rawdata.UserTagGroupConf.Parser, new[]{ "UserTagGroupMap", "UserTagGroupMapAB", "UserTagGroupMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="UserTagGroup",table="UserTagGroupMap",table_wrapper="UserTagGroupConf",map="true",map_key_type="int32",data="UserTagGroupConf")
  /// annotation@ab(table_ab="UserTagGroupMapAB",table_ab_patch="UserTagGroupMapABPatch",table_ab_value="UserTagGroupMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@UserTagGroup(id="id")
  /// </summary>
  public sealed partial class UserTagGroup : pb::IMessage<UserTagGroup>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserTagGroup> _parser = new pb::MessageParser<UserTagGroup>(() => new UserTagGroup());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserTagGroup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.UserTagGroupConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserTagGroup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserTagGroup(UserTagGroup other) : this() {
      id_ = other.id_;
      userTagGroupValue_ = other.userTagGroupValue_.Clone();
      userTagId_ = other.userTagId_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserTagGroup Clone() {
      return new UserTagGroup(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 用户标签组ID
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "userTagGroupValue" field.</summary>
    public const int UserTagGroupValueFieldNumber = 2;
    private static readonly pbc::MapField<string, int>.Codec _map_userTagGroupValue_codec
        = new pbc::MapField<string, int>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForInt32(16, 0), 18);
    private readonly pbc::MapField<string, int> userTagGroupValue_ = new pbc::MapField<string, int>();
    /// <summary>
    /// 对应的用户标签组的值
    /// （userTagValue下划线拼接 : userTagGroupValue）
    /// （\d代表不需要关心的value）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, int> UserTagGroupValue {
      get { return userTagGroupValue_; }
    }

    /// <summary>Field number for the "userTagId" field.</summary>
    public const int UserTagIdFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_userTagId_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> userTagId_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 关联的用户标签
    /// （有序）
    /// （UserTag.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> UserTagId {
      get { return userTagId_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserTagGroup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserTagGroup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!UserTagGroupValue.Equals(other.UserTagGroupValue)) return false;
      if(!userTagId_.Equals(other.userTagId_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      hash ^= UserTagGroupValue.GetHashCode();
      hash ^= userTagId_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      userTagGroupValue_.WriteTo(output, _map_userTagGroupValue_codec);
      userTagId_.WriteTo(output, _repeated_userTagId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      userTagGroupValue_.WriteTo(ref output, _map_userTagGroupValue_codec);
      userTagId_.WriteTo(ref output, _repeated_userTagId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      size += userTagGroupValue_.CalculateSize(_map_userTagGroupValue_codec);
      size += userTagId_.CalculateSize(_repeated_userTagId_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserTagGroup other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      userTagGroupValue_.Add(other.userTagGroupValue_);
      userTagId_.Add(other.userTagId_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            userTagGroupValue_.AddEntriesFrom(input, _map_userTagGroupValue_codec);
            break;
          }
          case 26:
          case 24: {
            userTagId_.AddEntriesFrom(input, _repeated_userTagId_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            userTagGroupValue_.AddEntriesFrom(ref input, _map_userTagGroupValue_codec);
            break;
          }
          case 26:
          case 24: {
            userTagId_.AddEntriesFrom(ref input, _repeated_userTagId_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UserTagGroupMapABValue : pb::IMessage<UserTagGroupMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserTagGroupMapABValue> _parser = new pb::MessageParser<UserTagGroupMapABValue>(() => new UserTagGroupMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserTagGroupMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.UserTagGroupConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserTagGroupMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserTagGroupMapABValue(UserTagGroupMapABValue other) : this() {
      userTagGroupMap_ = other.userTagGroupMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserTagGroupMapABValue Clone() {
      return new UserTagGroupMapABValue(this);
    }

    /// <summary>Field number for the "UserTagGroupMap" field.</summary>
    public const int UserTagGroupMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.UserTagGroup>.Codec _map_userTagGroupMap_codec
        = new pbc::MapField<int, global::fat.rawdata.UserTagGroup>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.UserTagGroup.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.UserTagGroup> userTagGroupMap_ = new pbc::MapField<int, global::fat.rawdata.UserTagGroup>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.UserTagGroup> UserTagGroupMap {
      get { return userTagGroupMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserTagGroupMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserTagGroupMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!UserTagGroupMap.Equals(other.UserTagGroupMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= UserTagGroupMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      userTagGroupMap_.WriteTo(output, _map_userTagGroupMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      userTagGroupMap_.WriteTo(ref output, _map_userTagGroupMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += userTagGroupMap_.CalculateSize(_map_userTagGroupMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserTagGroupMapABValue other) {
      if (other == null) {
        return;
      }
      userTagGroupMap_.Add(other.userTagGroupMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            userTagGroupMap_.AddEntriesFrom(input, _map_userTagGroupMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            userTagGroupMap_.AddEntriesFrom(ref input, _map_userTagGroupMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UserTagGroupConf : pb::IMessage<UserTagGroupConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserTagGroupConf> _parser = new pb::MessageParser<UserTagGroupConf>(() => new UserTagGroupConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserTagGroupConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.UserTagGroupConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserTagGroupConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserTagGroupConf(UserTagGroupConf other) : this() {
      userTagGroupMap_ = other.userTagGroupMap_.Clone();
      userTagGroupMapAB_ = other.userTagGroupMapAB_.Clone();
      userTagGroupMapABPatch_ = other.userTagGroupMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserTagGroupConf Clone() {
      return new UserTagGroupConf(this);
    }

    /// <summary>Field number for the "UserTagGroupMap" field.</summary>
    public const int UserTagGroupMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.UserTagGroup>.Codec _map_userTagGroupMap_codec
        = new pbc::MapField<int, global::fat.rawdata.UserTagGroup>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.UserTagGroup.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.UserTagGroup> userTagGroupMap_ = new pbc::MapField<int, global::fat.rawdata.UserTagGroup>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.UserTagGroup> UserTagGroupMap {
      get { return userTagGroupMap_; }
    }

    /// <summary>Field number for the "UserTagGroupMapAB" field.</summary>
    public const int UserTagGroupMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.UserTagGroupMapABValue>.Codec _map_userTagGroupMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.UserTagGroupMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.UserTagGroupMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.UserTagGroupMapABValue> userTagGroupMapAB_ = new pbc::MapField<string, global::fat.rawdata.UserTagGroupMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.UserTagGroupMapABValue> UserTagGroupMapAB {
      get { return userTagGroupMapAB_; }
    }

    /// <summary>Field number for the "UserTagGroupMapABPatch" field.</summary>
    public const int UserTagGroupMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.UserTagGroupMapABValue>.Codec _map_userTagGroupMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.UserTagGroupMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.UserTagGroupMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.UserTagGroupMapABValue> userTagGroupMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.UserTagGroupMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.UserTagGroupMapABValue> UserTagGroupMapABPatch {
      get { return userTagGroupMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserTagGroupConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserTagGroupConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!UserTagGroupMap.Equals(other.UserTagGroupMap)) return false;
      if (!UserTagGroupMapAB.Equals(other.UserTagGroupMapAB)) return false;
      if (!UserTagGroupMapABPatch.Equals(other.UserTagGroupMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= UserTagGroupMap.GetHashCode();
      hash ^= UserTagGroupMapAB.GetHashCode();
      hash ^= UserTagGroupMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      userTagGroupMap_.WriteTo(output, _map_userTagGroupMap_codec);
      userTagGroupMapAB_.WriteTo(output, _map_userTagGroupMapAB_codec);
      userTagGroupMapABPatch_.WriteTo(output, _map_userTagGroupMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      userTagGroupMap_.WriteTo(ref output, _map_userTagGroupMap_codec);
      userTagGroupMapAB_.WriteTo(ref output, _map_userTagGroupMapAB_codec);
      userTagGroupMapABPatch_.WriteTo(ref output, _map_userTagGroupMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += userTagGroupMap_.CalculateSize(_map_userTagGroupMap_codec);
      size += userTagGroupMapAB_.CalculateSize(_map_userTagGroupMapAB_codec);
      size += userTagGroupMapABPatch_.CalculateSize(_map_userTagGroupMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserTagGroupConf other) {
      if (other == null) {
        return;
      }
      userTagGroupMap_.Add(other.userTagGroupMap_);
      userTagGroupMapAB_.Add(other.userTagGroupMapAB_);
      userTagGroupMapABPatch_.Add(other.userTagGroupMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            userTagGroupMap_.AddEntriesFrom(input, _map_userTagGroupMap_codec);
            break;
          }
          case 18: {
            userTagGroupMapAB_.AddEntriesFrom(input, _map_userTagGroupMapAB_codec);
            break;
          }
          case 26: {
            userTagGroupMapABPatch_.AddEntriesFrom(input, _map_userTagGroupMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            userTagGroupMap_.AddEntriesFrom(ref input, _map_userTagGroupMap_codec);
            break;
          }
          case 18: {
            userTagGroupMapAB_.AddEntriesFrom(ref input, _map_userTagGroupMapAB_codec);
            break;
          }
          case 26: {
            userTagGroupMapABPatch_.AddEntriesFrom(ref input, _map_userTagGroupMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
