// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/ComMergeJumpCDConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/ComMergeJumpCDConf.proto</summary>
  public static partial class ComMergeJumpCDConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/ComMergeJumpCDConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ComMergeJumpCDConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiByYXdkYXRhL0NvbU1lcmdlSnVtcENEQ29uZi5wcm90bxIHcmF3ZGF0YSI7",
            "Cg5Db21NZXJnZUp1bXBDRBIKCgJpZBgBIAEoBRIPCgdib2FyZElkGAIgASgF",
            "EgwKBHRpbWUYAyABKAUiwgEKGENvbU1lcmdlSnVtcENETWFwQUJWYWx1ZRJT",
            "ChFDb21NZXJnZUp1bXBDRE1hcBgBIAMoCzI4LnJhd2RhdGEuQ29tTWVyZ2VK",
            "dW1wQ0RNYXBBQlZhbHVlLkNvbU1lcmdlSnVtcENETWFwRW50cnkaUQoWQ29t",
            "TWVyZ2VKdW1wQ0RNYXBFbnRyeRILCgNrZXkYASABKAUSJgoFdmFsdWUYAiAB",
            "KAsyFy5yYXdkYXRhLkNvbU1lcmdlSnVtcENEOgI4ASKpBAoSQ29tTWVyZ2VK",
            "dW1wQ0RDb25mEk0KEUNvbU1lcmdlSnVtcENETWFwGAEgAygLMjIucmF3ZGF0",
            "YS5Db21NZXJnZUp1bXBDRENvbmYuQ29tTWVyZ2VKdW1wQ0RNYXBFbnRyeRJR",
            "ChNDb21NZXJnZUp1bXBDRE1hcEFCGAIgAygLMjQucmF3ZGF0YS5Db21NZXJn",
            "ZUp1bXBDRENvbmYuQ29tTWVyZ2VKdW1wQ0RNYXBBQkVudHJ5ElsKGENvbU1l",
            "cmdlSnVtcENETWFwQUJQYXRjaBgDIAMoCzI5LnJhd2RhdGEuQ29tTWVyZ2VK",
            "dW1wQ0RDb25mLkNvbU1lcmdlSnVtcENETWFwQUJQYXRjaEVudHJ5GlEKFkNv",
            "bU1lcmdlSnVtcENETWFwRW50cnkSCwoDa2V5GAEgASgFEiYKBXZhbHVlGAIg",
            "ASgLMhcucmF3ZGF0YS5Db21NZXJnZUp1bXBDRDoCOAEaXQoYQ29tTWVyZ2VK",
            "dW1wQ0RNYXBBQkVudHJ5EgsKA2tleRgBIAEoCRIwCgV2YWx1ZRgCIAEoCzIh",
            "LnJhd2RhdGEuQ29tTWVyZ2VKdW1wQ0RNYXBBQlZhbHVlOgI4ARpiCh1Db21N",
            "ZXJnZUp1bXBDRE1hcEFCUGF0Y2hFbnRyeRILCgNrZXkYASABKAkSMAoFdmFs",
            "dWUYAiABKAsyIS5yYXdkYXRhLkNvbU1lcmdlSnVtcENETWFwQUJWYWx1ZToC",
            "OAFCPVotZ2l0bGFiLmZ1bnBsdXMuaW8vZmF0L2NvbmYvZ2VuL2dvbGFuZy9y",
            "YXdkYXRhqgILZmF0LnJhd2RhdGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.ComMergeJumpCD), global::fat.rawdata.ComMergeJumpCD.Parser, new[]{ "Id", "BoardId", "Time" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.ComMergeJumpCDMapABValue), global::fat.rawdata.ComMergeJumpCDMapABValue.Parser, new[]{ "ComMergeJumpCDMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.ComMergeJumpCDConf), global::fat.rawdata.ComMergeJumpCDConf.Parser, new[]{ "ComMergeJumpCDMap", "ComMergeJumpCDMapAB", "ComMergeJumpCDMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="ComMergeJumpCD",table="ComMergeJumpCDMap",table_wrapper="ComMergeJumpCDConf",map="true",map_key_type="int32",data="ComMergeJumpCDConf")
  /// annotation@ab(table_ab="ComMergeJumpCDMapAB",table_ab_patch="ComMergeJumpCDMapABPatch",table_ab_value="ComMergeJumpCDMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@ComMergeJumpCD(id="id")
  /// </summary>
  public sealed partial class ComMergeJumpCD : pb::IMessage<ComMergeJumpCD>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ComMergeJumpCD> _parser = new pb::MessageParser<ComMergeJumpCD>(() => new ComMergeJumpCD());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ComMergeJumpCD> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.ComMergeJumpCDConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComMergeJumpCD() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComMergeJumpCD(ComMergeJumpCD other) : this() {
      id_ = other.id_;
      boardId_ = other.boardId_;
      time_ = other.time_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComMergeJumpCD Clone() {
      return new ComMergeJumpCD(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 棋子ID
    /// （ObjBasic.id）
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "boardId" field.</summary>
    public const int BoardIdFieldNumber = 2;
    private int boardId_;
    /// <summary>
    /// 激活哪个棋盘的礼盒状态
    /// （MergeBoard.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BoardId {
      get { return boardId_; }
      set {
        boardId_ = value;
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 3;
    private int time_;
    /// <summary>
    /// 持续时间
    /// （毫秒）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ComMergeJumpCD);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ComMergeJumpCD other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (BoardId != other.BoardId) return false;
      if (Time != other.Time) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (BoardId != 0) hash ^= BoardId.GetHashCode();
      if (Time != 0) hash ^= Time.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (BoardId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BoardId);
      }
      if (Time != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Time);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (BoardId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BoardId);
      }
      if (Time != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Time);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (BoardId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BoardId);
      }
      if (Time != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Time);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ComMergeJumpCD other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.BoardId != 0) {
        BoardId = other.BoardId;
      }
      if (other.Time != 0) {
        Time = other.Time;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            BoardId = input.ReadInt32();
            break;
          }
          case 24: {
            Time = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            BoardId = input.ReadInt32();
            break;
          }
          case 24: {
            Time = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ComMergeJumpCDMapABValue : pb::IMessage<ComMergeJumpCDMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ComMergeJumpCDMapABValue> _parser = new pb::MessageParser<ComMergeJumpCDMapABValue>(() => new ComMergeJumpCDMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ComMergeJumpCDMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.ComMergeJumpCDConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComMergeJumpCDMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComMergeJumpCDMapABValue(ComMergeJumpCDMapABValue other) : this() {
      comMergeJumpCDMap_ = other.comMergeJumpCDMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComMergeJumpCDMapABValue Clone() {
      return new ComMergeJumpCDMapABValue(this);
    }

    /// <summary>Field number for the "ComMergeJumpCDMap" field.</summary>
    public const int ComMergeJumpCDMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.ComMergeJumpCD>.Codec _map_comMergeJumpCDMap_codec
        = new pbc::MapField<int, global::fat.rawdata.ComMergeJumpCD>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ComMergeJumpCD.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.ComMergeJumpCD> comMergeJumpCDMap_ = new pbc::MapField<int, global::fat.rawdata.ComMergeJumpCD>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.ComMergeJumpCD> ComMergeJumpCDMap {
      get { return comMergeJumpCDMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ComMergeJumpCDMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ComMergeJumpCDMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!ComMergeJumpCDMap.Equals(other.ComMergeJumpCDMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ComMergeJumpCDMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      comMergeJumpCDMap_.WriteTo(output, _map_comMergeJumpCDMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      comMergeJumpCDMap_.WriteTo(ref output, _map_comMergeJumpCDMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += comMergeJumpCDMap_.CalculateSize(_map_comMergeJumpCDMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ComMergeJumpCDMapABValue other) {
      if (other == null) {
        return;
      }
      comMergeJumpCDMap_.Add(other.comMergeJumpCDMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            comMergeJumpCDMap_.AddEntriesFrom(input, _map_comMergeJumpCDMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            comMergeJumpCDMap_.AddEntriesFrom(ref input, _map_comMergeJumpCDMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ComMergeJumpCDConf : pb::IMessage<ComMergeJumpCDConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ComMergeJumpCDConf> _parser = new pb::MessageParser<ComMergeJumpCDConf>(() => new ComMergeJumpCDConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ComMergeJumpCDConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.ComMergeJumpCDConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComMergeJumpCDConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComMergeJumpCDConf(ComMergeJumpCDConf other) : this() {
      comMergeJumpCDMap_ = other.comMergeJumpCDMap_.Clone();
      comMergeJumpCDMapAB_ = other.comMergeJumpCDMapAB_.Clone();
      comMergeJumpCDMapABPatch_ = other.comMergeJumpCDMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComMergeJumpCDConf Clone() {
      return new ComMergeJumpCDConf(this);
    }

    /// <summary>Field number for the "ComMergeJumpCDMap" field.</summary>
    public const int ComMergeJumpCDMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.ComMergeJumpCD>.Codec _map_comMergeJumpCDMap_codec
        = new pbc::MapField<int, global::fat.rawdata.ComMergeJumpCD>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ComMergeJumpCD.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.ComMergeJumpCD> comMergeJumpCDMap_ = new pbc::MapField<int, global::fat.rawdata.ComMergeJumpCD>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.ComMergeJumpCD> ComMergeJumpCDMap {
      get { return comMergeJumpCDMap_; }
    }

    /// <summary>Field number for the "ComMergeJumpCDMapAB" field.</summary>
    public const int ComMergeJumpCDMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.ComMergeJumpCDMapABValue>.Codec _map_comMergeJumpCDMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.ComMergeJumpCDMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ComMergeJumpCDMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.ComMergeJumpCDMapABValue> comMergeJumpCDMapAB_ = new pbc::MapField<string, global::fat.rawdata.ComMergeJumpCDMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.ComMergeJumpCDMapABValue> ComMergeJumpCDMapAB {
      get { return comMergeJumpCDMapAB_; }
    }

    /// <summary>Field number for the "ComMergeJumpCDMapABPatch" field.</summary>
    public const int ComMergeJumpCDMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.ComMergeJumpCDMapABValue>.Codec _map_comMergeJumpCDMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.ComMergeJumpCDMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ComMergeJumpCDMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.ComMergeJumpCDMapABValue> comMergeJumpCDMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.ComMergeJumpCDMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.ComMergeJumpCDMapABValue> ComMergeJumpCDMapABPatch {
      get { return comMergeJumpCDMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ComMergeJumpCDConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ComMergeJumpCDConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!ComMergeJumpCDMap.Equals(other.ComMergeJumpCDMap)) return false;
      if (!ComMergeJumpCDMapAB.Equals(other.ComMergeJumpCDMapAB)) return false;
      if (!ComMergeJumpCDMapABPatch.Equals(other.ComMergeJumpCDMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ComMergeJumpCDMap.GetHashCode();
      hash ^= ComMergeJumpCDMapAB.GetHashCode();
      hash ^= ComMergeJumpCDMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      comMergeJumpCDMap_.WriteTo(output, _map_comMergeJumpCDMap_codec);
      comMergeJumpCDMapAB_.WriteTo(output, _map_comMergeJumpCDMapAB_codec);
      comMergeJumpCDMapABPatch_.WriteTo(output, _map_comMergeJumpCDMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      comMergeJumpCDMap_.WriteTo(ref output, _map_comMergeJumpCDMap_codec);
      comMergeJumpCDMapAB_.WriteTo(ref output, _map_comMergeJumpCDMapAB_codec);
      comMergeJumpCDMapABPatch_.WriteTo(ref output, _map_comMergeJumpCDMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += comMergeJumpCDMap_.CalculateSize(_map_comMergeJumpCDMap_codec);
      size += comMergeJumpCDMapAB_.CalculateSize(_map_comMergeJumpCDMapAB_codec);
      size += comMergeJumpCDMapABPatch_.CalculateSize(_map_comMergeJumpCDMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ComMergeJumpCDConf other) {
      if (other == null) {
        return;
      }
      comMergeJumpCDMap_.Add(other.comMergeJumpCDMap_);
      comMergeJumpCDMapAB_.Add(other.comMergeJumpCDMapAB_);
      comMergeJumpCDMapABPatch_.Add(other.comMergeJumpCDMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            comMergeJumpCDMap_.AddEntriesFrom(input, _map_comMergeJumpCDMap_codec);
            break;
          }
          case 18: {
            comMergeJumpCDMapAB_.AddEntriesFrom(input, _map_comMergeJumpCDMapAB_codec);
            break;
          }
          case 26: {
            comMergeJumpCDMapABPatch_.AddEntriesFrom(input, _map_comMergeJumpCDMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            comMergeJumpCDMap_.AddEntriesFrom(ref input, _map_comMergeJumpCDMap_codec);
            break;
          }
          case 18: {
            comMergeJumpCDMapAB_.AddEntriesFrom(ref input, _map_comMergeJumpCDMapAB_codec);
            break;
          }
          case 26: {
            comMergeJumpCDMapABPatch_.AddEntriesFrom(ref input, _map_comMergeJumpCDMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
