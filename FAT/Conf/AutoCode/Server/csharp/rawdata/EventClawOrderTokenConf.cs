// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventClawOrderTokenConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventClawOrderTokenConf.proto</summary>
  public static partial class EventClawOrderTokenConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventClawOrderTokenConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventClawOrderTokenConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiVyYXdkYXRhL0V2ZW50Q2xhd09yZGVyVG9rZW5Db25mLnByb3RvEgdyYXdk",
            "YXRhIlIKE0V2ZW50Q2xhd09yZGVyVG9rZW4SCgoCaWQYASABKAUSFAoMb3Jk",
            "ZXJQYXlEaWZmGAIgAygFEhkKEXRva2VuQ29sbGVjdENvdW50GAMgASgFIuAB",
            "Ch1FdmVudENsYXdPcmRlclRva2VuTWFwQUJWYWx1ZRJiChZFdmVudENsYXdP",
            "cmRlclRva2VuTWFwGAEgAygLMkIucmF3ZGF0YS5FdmVudENsYXdPcmRlclRv",
            "a2VuTWFwQUJWYWx1ZS5FdmVudENsYXdPcmRlclRva2VuTWFwRW50cnkaWwob",
            "RXZlbnRDbGF3T3JkZXJUb2tlbk1hcEVudHJ5EgsKA2tleRgBIAEoBRIrCgV2",
            "YWx1ZRgCIAEoCzIcLnJhd2RhdGEuRXZlbnRDbGF3T3JkZXJUb2tlbjoCOAEi",
            "+QQKF0V2ZW50Q2xhd09yZGVyVG9rZW5Db25mElwKFkV2ZW50Q2xhd09yZGVy",
            "VG9rZW5NYXAYASADKAsyPC5yYXdkYXRhLkV2ZW50Q2xhd09yZGVyVG9rZW5D",
            "b25mLkV2ZW50Q2xhd09yZGVyVG9rZW5NYXBFbnRyeRJgChhFdmVudENsYXdP",
            "cmRlclRva2VuTWFwQUIYAiADKAsyPi5yYXdkYXRhLkV2ZW50Q2xhd09yZGVy",
            "VG9rZW5Db25mLkV2ZW50Q2xhd09yZGVyVG9rZW5NYXBBQkVudHJ5EmoKHUV2",
            "ZW50Q2xhd09yZGVyVG9rZW5NYXBBQlBhdGNoGAMgAygLMkMucmF3ZGF0YS5F",
            "dmVudENsYXdPcmRlclRva2VuQ29uZi5FdmVudENsYXdPcmRlclRva2VuTWFw",
            "QUJQYXRjaEVudHJ5GlsKG0V2ZW50Q2xhd09yZGVyVG9rZW5NYXBFbnRyeRIL",
            "CgNrZXkYASABKAUSKwoFdmFsdWUYAiABKAsyHC5yYXdkYXRhLkV2ZW50Q2xh",
            "d09yZGVyVG9rZW46AjgBGmcKHUV2ZW50Q2xhd09yZGVyVG9rZW5NYXBBQkVu",
            "dHJ5EgsKA2tleRgBIAEoCRI1CgV2YWx1ZRgCIAEoCzImLnJhd2RhdGEuRXZl",
            "bnRDbGF3T3JkZXJUb2tlbk1hcEFCVmFsdWU6AjgBGmwKIkV2ZW50Q2xhd09y",
            "ZGVyVG9rZW5NYXBBQlBhdGNoRW50cnkSCwoDa2V5GAEgASgJEjUKBXZhbHVl",
            "GAIgASgLMiYucmF3ZGF0YS5FdmVudENsYXdPcmRlclRva2VuTWFwQUJWYWx1",
            "ZToCOAFCPVotZ2l0bGFiLmZ1bnBsdXMuaW8vZmF0L2NvbmYvZ2VuL2dvbGFu",
            "Zy9yYXdkYXRhqgILZmF0LnJhd2RhdGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventClawOrderToken), global::fat.rawdata.EventClawOrderToken.Parser, new[]{ "Id", "OrderPayDiff", "TokenCollectCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventClawOrderTokenMapABValue), global::fat.rawdata.EventClawOrderTokenMapABValue.Parser, new[]{ "EventClawOrderTokenMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventClawOrderTokenConf), global::fat.rawdata.EventClawOrderTokenConf.Parser, new[]{ "EventClawOrderTokenMap", "EventClawOrderTokenMapAB", "EventClawOrderTokenMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventClawOrderToken",table="EventClawOrderTokenMap",table_wrapper="EventClawOrderTokenConf",map="true",map_key_type="int32",data="EventClawOrderTokenConf")
  /// annotation@ab(table_ab="EventClawOrderTokenMapAB",table_ab_patch="EventClawOrderTokenMapABPatch",table_ab_value="EventClawOrderTokenMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventClawOrderToken(id="id")
  /// </summary>
  public sealed partial class EventClawOrderToken : pb::IMessage<EventClawOrderToken>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventClawOrderToken> _parser = new pb::MessageParser<EventClawOrderToken>(() => new EventClawOrderToken());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventClawOrderToken> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventClawOrderTokenConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventClawOrderToken() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventClawOrderToken(EventClawOrderToken other) : this() {
      id_ = other.id_;
      orderPayDiff_ = other.orderPayDiff_.Clone();
      tokenCollectCount_ = other.tokenCollectCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventClawOrderToken Clone() {
      return new EventClawOrderToken(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// id
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "orderPayDiff" field.</summary>
    public const int OrderPayDiffFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_orderPayDiff_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> orderPayDiff_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 付出难度[区间]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> OrderPayDiff {
      get { return orderPayDiff_; }
    }

    /// <summary>Field number for the "tokenCollectCount" field.</summary>
    public const int TokenCollectCountFieldNumber = 3;
    private int tokenCollectCount_;
    /// <summary>
    /// token收集数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TokenCollectCount {
      get { return tokenCollectCount_; }
      set {
        tokenCollectCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventClawOrderToken);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventClawOrderToken other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!orderPayDiff_.Equals(other.orderPayDiff_)) return false;
      if (TokenCollectCount != other.TokenCollectCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      hash ^= orderPayDiff_.GetHashCode();
      if (TokenCollectCount != 0) hash ^= TokenCollectCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      orderPayDiff_.WriteTo(output, _repeated_orderPayDiff_codec);
      if (TokenCollectCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(TokenCollectCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      orderPayDiff_.WriteTo(ref output, _repeated_orderPayDiff_codec);
      if (TokenCollectCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(TokenCollectCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      size += orderPayDiff_.CalculateSize(_repeated_orderPayDiff_codec);
      if (TokenCollectCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TokenCollectCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventClawOrderToken other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      orderPayDiff_.Add(other.orderPayDiff_);
      if (other.TokenCollectCount != 0) {
        TokenCollectCount = other.TokenCollectCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            orderPayDiff_.AddEntriesFrom(input, _repeated_orderPayDiff_codec);
            break;
          }
          case 24: {
            TokenCollectCount = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            orderPayDiff_.AddEntriesFrom(ref input, _repeated_orderPayDiff_codec);
            break;
          }
          case 24: {
            TokenCollectCount = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventClawOrderTokenMapABValue : pb::IMessage<EventClawOrderTokenMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventClawOrderTokenMapABValue> _parser = new pb::MessageParser<EventClawOrderTokenMapABValue>(() => new EventClawOrderTokenMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventClawOrderTokenMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventClawOrderTokenConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventClawOrderTokenMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventClawOrderTokenMapABValue(EventClawOrderTokenMapABValue other) : this() {
      eventClawOrderTokenMap_ = other.eventClawOrderTokenMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventClawOrderTokenMapABValue Clone() {
      return new EventClawOrderTokenMapABValue(this);
    }

    /// <summary>Field number for the "EventClawOrderTokenMap" field.</summary>
    public const int EventClawOrderTokenMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventClawOrderToken>.Codec _map_eventClawOrderTokenMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventClawOrderToken>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventClawOrderToken.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventClawOrderToken> eventClawOrderTokenMap_ = new pbc::MapField<int, global::fat.rawdata.EventClawOrderToken>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventClawOrderToken> EventClawOrderTokenMap {
      get { return eventClawOrderTokenMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventClawOrderTokenMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventClawOrderTokenMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventClawOrderTokenMap.Equals(other.EventClawOrderTokenMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventClawOrderTokenMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventClawOrderTokenMap_.WriteTo(output, _map_eventClawOrderTokenMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventClawOrderTokenMap_.WriteTo(ref output, _map_eventClawOrderTokenMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventClawOrderTokenMap_.CalculateSize(_map_eventClawOrderTokenMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventClawOrderTokenMapABValue other) {
      if (other == null) {
        return;
      }
      eventClawOrderTokenMap_.Add(other.eventClawOrderTokenMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventClawOrderTokenMap_.AddEntriesFrom(input, _map_eventClawOrderTokenMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventClawOrderTokenMap_.AddEntriesFrom(ref input, _map_eventClawOrderTokenMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventClawOrderTokenConf : pb::IMessage<EventClawOrderTokenConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventClawOrderTokenConf> _parser = new pb::MessageParser<EventClawOrderTokenConf>(() => new EventClawOrderTokenConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventClawOrderTokenConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventClawOrderTokenConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventClawOrderTokenConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventClawOrderTokenConf(EventClawOrderTokenConf other) : this() {
      eventClawOrderTokenMap_ = other.eventClawOrderTokenMap_.Clone();
      eventClawOrderTokenMapAB_ = other.eventClawOrderTokenMapAB_.Clone();
      eventClawOrderTokenMapABPatch_ = other.eventClawOrderTokenMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventClawOrderTokenConf Clone() {
      return new EventClawOrderTokenConf(this);
    }

    /// <summary>Field number for the "EventClawOrderTokenMap" field.</summary>
    public const int EventClawOrderTokenMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventClawOrderToken>.Codec _map_eventClawOrderTokenMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventClawOrderToken>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventClawOrderToken.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventClawOrderToken> eventClawOrderTokenMap_ = new pbc::MapField<int, global::fat.rawdata.EventClawOrderToken>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventClawOrderToken> EventClawOrderTokenMap {
      get { return eventClawOrderTokenMap_; }
    }

    /// <summary>Field number for the "EventClawOrderTokenMapAB" field.</summary>
    public const int EventClawOrderTokenMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventClawOrderTokenMapABValue>.Codec _map_eventClawOrderTokenMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventClawOrderTokenMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventClawOrderTokenMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventClawOrderTokenMapABValue> eventClawOrderTokenMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventClawOrderTokenMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventClawOrderTokenMapABValue> EventClawOrderTokenMapAB {
      get { return eventClawOrderTokenMapAB_; }
    }

    /// <summary>Field number for the "EventClawOrderTokenMapABPatch" field.</summary>
    public const int EventClawOrderTokenMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventClawOrderTokenMapABValue>.Codec _map_eventClawOrderTokenMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventClawOrderTokenMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventClawOrderTokenMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventClawOrderTokenMapABValue> eventClawOrderTokenMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventClawOrderTokenMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventClawOrderTokenMapABValue> EventClawOrderTokenMapABPatch {
      get { return eventClawOrderTokenMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventClawOrderTokenConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventClawOrderTokenConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventClawOrderTokenMap.Equals(other.EventClawOrderTokenMap)) return false;
      if (!EventClawOrderTokenMapAB.Equals(other.EventClawOrderTokenMapAB)) return false;
      if (!EventClawOrderTokenMapABPatch.Equals(other.EventClawOrderTokenMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventClawOrderTokenMap.GetHashCode();
      hash ^= EventClawOrderTokenMapAB.GetHashCode();
      hash ^= EventClawOrderTokenMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventClawOrderTokenMap_.WriteTo(output, _map_eventClawOrderTokenMap_codec);
      eventClawOrderTokenMapAB_.WriteTo(output, _map_eventClawOrderTokenMapAB_codec);
      eventClawOrderTokenMapABPatch_.WriteTo(output, _map_eventClawOrderTokenMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventClawOrderTokenMap_.WriteTo(ref output, _map_eventClawOrderTokenMap_codec);
      eventClawOrderTokenMapAB_.WriteTo(ref output, _map_eventClawOrderTokenMapAB_codec);
      eventClawOrderTokenMapABPatch_.WriteTo(ref output, _map_eventClawOrderTokenMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventClawOrderTokenMap_.CalculateSize(_map_eventClawOrderTokenMap_codec);
      size += eventClawOrderTokenMapAB_.CalculateSize(_map_eventClawOrderTokenMapAB_codec);
      size += eventClawOrderTokenMapABPatch_.CalculateSize(_map_eventClawOrderTokenMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventClawOrderTokenConf other) {
      if (other == null) {
        return;
      }
      eventClawOrderTokenMap_.Add(other.eventClawOrderTokenMap_);
      eventClawOrderTokenMapAB_.Add(other.eventClawOrderTokenMapAB_);
      eventClawOrderTokenMapABPatch_.Add(other.eventClawOrderTokenMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventClawOrderTokenMap_.AddEntriesFrom(input, _map_eventClawOrderTokenMap_codec);
            break;
          }
          case 18: {
            eventClawOrderTokenMapAB_.AddEntriesFrom(input, _map_eventClawOrderTokenMapAB_codec);
            break;
          }
          case 26: {
            eventClawOrderTokenMapABPatch_.AddEntriesFrom(input, _map_eventClawOrderTokenMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventClawOrderTokenMap_.AddEntriesFrom(ref input, _map_eventClawOrderTokenMap_codec);
            break;
          }
          case 18: {
            eventClawOrderTokenMapAB_.AddEntriesFrom(ref input, _map_eventClawOrderTokenMapAB_codec);
            break;
          }
          case 26: {
            eventClawOrderTokenMapABPatch_.AddEntriesFrom(ref input, _map_eventClawOrderTokenMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
