// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventClawOrderConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventClawOrderConf.proto</summary>
  public static partial class EventClawOrderConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventClawOrderConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventClawOrderConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiByYXdkYXRhL0V2ZW50Q2xhd09yZGVyQ29uZi5wcm90bxIHcmF3ZGF0YSJ3",
            "Cg5FdmVudENsYXdPcmRlchIKCgJpZBgBIAEoBRIQCghlbmRUaGVtZRgCIAEo",
            "BRISCgpldmVudFRoZW1lGAMgASgFEg8KB2dyYWRlSWQYBSABKAUSEQoJaGVs",
            "cFRoZW1lGAYgASgFEg8KB3Rva2VuSWQYByABKAUiwgEKGEV2ZW50Q2xhd09y",
            "ZGVyTWFwQUJWYWx1ZRJTChFFdmVudENsYXdPcmRlck1hcBgBIAMoCzI4LnJh",
            "d2RhdGEuRXZlbnRDbGF3T3JkZXJNYXBBQlZhbHVlLkV2ZW50Q2xhd09yZGVy",
            "TWFwRW50cnkaUQoWRXZlbnRDbGF3T3JkZXJNYXBFbnRyeRILCgNrZXkYASAB",
            "KAUSJgoFdmFsdWUYAiABKAsyFy5yYXdkYXRhLkV2ZW50Q2xhd09yZGVyOgI4",
            "ASKpBAoSRXZlbnRDbGF3T3JkZXJDb25mEk0KEUV2ZW50Q2xhd09yZGVyTWFw",
            "GAEgAygLMjIucmF3ZGF0YS5FdmVudENsYXdPcmRlckNvbmYuRXZlbnRDbGF3",
            "T3JkZXJNYXBFbnRyeRJRChNFdmVudENsYXdPcmRlck1hcEFCGAIgAygLMjQu",
            "cmF3ZGF0YS5FdmVudENsYXdPcmRlckNvbmYuRXZlbnRDbGF3T3JkZXJNYXBB",
            "QkVudHJ5ElsKGEV2ZW50Q2xhd09yZGVyTWFwQUJQYXRjaBgDIAMoCzI5LnJh",
            "d2RhdGEuRXZlbnRDbGF3T3JkZXJDb25mLkV2ZW50Q2xhd09yZGVyTWFwQUJQ",
            "YXRjaEVudHJ5GlEKFkV2ZW50Q2xhd09yZGVyTWFwRW50cnkSCwoDa2V5GAEg",
            "ASgFEiYKBXZhbHVlGAIgASgLMhcucmF3ZGF0YS5FdmVudENsYXdPcmRlcjoC",
            "OAEaXQoYRXZlbnRDbGF3T3JkZXJNYXBBQkVudHJ5EgsKA2tleRgBIAEoCRIw",
            "CgV2YWx1ZRgCIAEoCzIhLnJhd2RhdGEuRXZlbnRDbGF3T3JkZXJNYXBBQlZh",
            "bHVlOgI4ARpiCh1FdmVudENsYXdPcmRlck1hcEFCUGF0Y2hFbnRyeRILCgNr",
            "ZXkYASABKAkSMAoFdmFsdWUYAiABKAsyIS5yYXdkYXRhLkV2ZW50Q2xhd09y",
            "ZGVyTWFwQUJWYWx1ZToCOAFCPVotZ2l0bGFiLmZ1bnBsdXMuaW8vZmF0L2Nv",
            "bmYvZ2VuL2dvbGFuZy9yYXdkYXRhqgILZmF0LnJhd2RhdGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventClawOrder), global::fat.rawdata.EventClawOrder.Parser, new[]{ "Id", "EndTheme", "EventTheme", "GradeId", "HelpTheme", "TokenId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventClawOrderMapABValue), global::fat.rawdata.EventClawOrderMapABValue.Parser, new[]{ "EventClawOrderMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventClawOrderConf), global::fat.rawdata.EventClawOrderConf.Parser, new[]{ "EventClawOrderMap", "EventClawOrderMapAB", "EventClawOrderMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventClawOrder",table="EventClawOrderMap",table_wrapper="EventClawOrderConf",map="true",map_key_type="int32",data="EventClawOrderConf")
  /// annotation@ab(table_ab="EventClawOrderMapAB",table_ab_patch="EventClawOrderMapABPatch",table_ab_value="EventClawOrderMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventClawOrder(id="id")
  /// </summary>
  public sealed partial class EventClawOrder : pb::IMessage<EventClawOrder>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventClawOrder> _parser = new pb::MessageParser<EventClawOrder>(() => new EventClawOrder());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventClawOrder> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventClawOrderConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventClawOrder() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventClawOrder(EventClawOrder other) : this() {
      id_ = other.id_;
      endTheme_ = other.endTheme_;
      eventTheme_ = other.eventTheme_;
      gradeId_ = other.gradeId_;
      helpTheme_ = other.helpTheme_;
      tokenId_ = other.tokenId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventClawOrder Clone() {
      return new EventClawOrder(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 活动id
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "endTheme" field.</summary>
    public const int EndThemeFieldNumber = 2;
    private int endTheme_;
    /// <summary>
    /// 结束
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EndTheme {
      get { return endTheme_; }
      set {
        endTheme_ = value;
      }
    }

    /// <summary>Field number for the "eventTheme" field.</summary>
    public const int EventThemeFieldNumber = 3;
    private int eventTheme_;
    /// <summary>
    /// 活动界面
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EventTheme {
      get { return eventTheme_; }
      set {
        eventTheme_ = value;
      }
    }

    /// <summary>Field number for the "gradeId" field.</summary>
    public const int GradeIdFieldNumber = 5;
    private int gradeId_;
    /// <summary>
    /// 分层
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GradeId {
      get { return gradeId_; }
      set {
        gradeId_ = value;
      }
    }

    /// <summary>Field number for the "helpTheme" field.</summary>
    public const int HelpThemeFieldNumber = 6;
    private int helpTheme_;
    /// <summary>
    /// 玩法介绍
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int HelpTheme {
      get { return helpTheme_; }
      set {
        helpTheme_ = value;
      }
    }

    /// <summary>Field number for the "tokenId" field.</summary>
    public const int TokenIdFieldNumber = 7;
    private int tokenId_;
    /// <summary>
    /// tokenId
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TokenId {
      get { return tokenId_; }
      set {
        tokenId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventClawOrder);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventClawOrder other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (EndTheme != other.EndTheme) return false;
      if (EventTheme != other.EventTheme) return false;
      if (GradeId != other.GradeId) return false;
      if (HelpTheme != other.HelpTheme) return false;
      if (TokenId != other.TokenId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (EndTheme != 0) hash ^= EndTheme.GetHashCode();
      if (EventTheme != 0) hash ^= EventTheme.GetHashCode();
      if (GradeId != 0) hash ^= GradeId.GetHashCode();
      if (HelpTheme != 0) hash ^= HelpTheme.GetHashCode();
      if (TokenId != 0) hash ^= TokenId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (EndTheme != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(EndTheme);
      }
      if (EventTheme != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(EventTheme);
      }
      if (GradeId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(GradeId);
      }
      if (HelpTheme != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(HelpTheme);
      }
      if (TokenId != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(TokenId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (EndTheme != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(EndTheme);
      }
      if (EventTheme != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(EventTheme);
      }
      if (GradeId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(GradeId);
      }
      if (HelpTheme != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(HelpTheme);
      }
      if (TokenId != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(TokenId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (EndTheme != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EndTheme);
      }
      if (EventTheme != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EventTheme);
      }
      if (GradeId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GradeId);
      }
      if (HelpTheme != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HelpTheme);
      }
      if (TokenId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TokenId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventClawOrder other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.EndTheme != 0) {
        EndTheme = other.EndTheme;
      }
      if (other.EventTheme != 0) {
        EventTheme = other.EventTheme;
      }
      if (other.GradeId != 0) {
        GradeId = other.GradeId;
      }
      if (other.HelpTheme != 0) {
        HelpTheme = other.HelpTheme;
      }
      if (other.TokenId != 0) {
        TokenId = other.TokenId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            EndTheme = input.ReadInt32();
            break;
          }
          case 24: {
            EventTheme = input.ReadInt32();
            break;
          }
          case 40: {
            GradeId = input.ReadInt32();
            break;
          }
          case 48: {
            HelpTheme = input.ReadInt32();
            break;
          }
          case 56: {
            TokenId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            EndTheme = input.ReadInt32();
            break;
          }
          case 24: {
            EventTheme = input.ReadInt32();
            break;
          }
          case 40: {
            GradeId = input.ReadInt32();
            break;
          }
          case 48: {
            HelpTheme = input.ReadInt32();
            break;
          }
          case 56: {
            TokenId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventClawOrderMapABValue : pb::IMessage<EventClawOrderMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventClawOrderMapABValue> _parser = new pb::MessageParser<EventClawOrderMapABValue>(() => new EventClawOrderMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventClawOrderMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventClawOrderConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventClawOrderMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventClawOrderMapABValue(EventClawOrderMapABValue other) : this() {
      eventClawOrderMap_ = other.eventClawOrderMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventClawOrderMapABValue Clone() {
      return new EventClawOrderMapABValue(this);
    }

    /// <summary>Field number for the "EventClawOrderMap" field.</summary>
    public const int EventClawOrderMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventClawOrder>.Codec _map_eventClawOrderMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventClawOrder>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventClawOrder.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventClawOrder> eventClawOrderMap_ = new pbc::MapField<int, global::fat.rawdata.EventClawOrder>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventClawOrder> EventClawOrderMap {
      get { return eventClawOrderMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventClawOrderMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventClawOrderMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventClawOrderMap.Equals(other.EventClawOrderMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventClawOrderMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventClawOrderMap_.WriteTo(output, _map_eventClawOrderMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventClawOrderMap_.WriteTo(ref output, _map_eventClawOrderMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventClawOrderMap_.CalculateSize(_map_eventClawOrderMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventClawOrderMapABValue other) {
      if (other == null) {
        return;
      }
      eventClawOrderMap_.Add(other.eventClawOrderMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventClawOrderMap_.AddEntriesFrom(input, _map_eventClawOrderMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventClawOrderMap_.AddEntriesFrom(ref input, _map_eventClawOrderMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventClawOrderConf : pb::IMessage<EventClawOrderConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventClawOrderConf> _parser = new pb::MessageParser<EventClawOrderConf>(() => new EventClawOrderConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventClawOrderConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventClawOrderConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventClawOrderConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventClawOrderConf(EventClawOrderConf other) : this() {
      eventClawOrderMap_ = other.eventClawOrderMap_.Clone();
      eventClawOrderMapAB_ = other.eventClawOrderMapAB_.Clone();
      eventClawOrderMapABPatch_ = other.eventClawOrderMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventClawOrderConf Clone() {
      return new EventClawOrderConf(this);
    }

    /// <summary>Field number for the "EventClawOrderMap" field.</summary>
    public const int EventClawOrderMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventClawOrder>.Codec _map_eventClawOrderMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventClawOrder>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventClawOrder.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventClawOrder> eventClawOrderMap_ = new pbc::MapField<int, global::fat.rawdata.EventClawOrder>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventClawOrder> EventClawOrderMap {
      get { return eventClawOrderMap_; }
    }

    /// <summary>Field number for the "EventClawOrderMapAB" field.</summary>
    public const int EventClawOrderMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventClawOrderMapABValue>.Codec _map_eventClawOrderMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventClawOrderMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventClawOrderMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventClawOrderMapABValue> eventClawOrderMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventClawOrderMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventClawOrderMapABValue> EventClawOrderMapAB {
      get { return eventClawOrderMapAB_; }
    }

    /// <summary>Field number for the "EventClawOrderMapABPatch" field.</summary>
    public const int EventClawOrderMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventClawOrderMapABValue>.Codec _map_eventClawOrderMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventClawOrderMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventClawOrderMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventClawOrderMapABValue> eventClawOrderMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventClawOrderMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventClawOrderMapABValue> EventClawOrderMapABPatch {
      get { return eventClawOrderMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventClawOrderConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventClawOrderConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventClawOrderMap.Equals(other.EventClawOrderMap)) return false;
      if (!EventClawOrderMapAB.Equals(other.EventClawOrderMapAB)) return false;
      if (!EventClawOrderMapABPatch.Equals(other.EventClawOrderMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventClawOrderMap.GetHashCode();
      hash ^= EventClawOrderMapAB.GetHashCode();
      hash ^= EventClawOrderMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventClawOrderMap_.WriteTo(output, _map_eventClawOrderMap_codec);
      eventClawOrderMapAB_.WriteTo(output, _map_eventClawOrderMapAB_codec);
      eventClawOrderMapABPatch_.WriteTo(output, _map_eventClawOrderMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventClawOrderMap_.WriteTo(ref output, _map_eventClawOrderMap_codec);
      eventClawOrderMapAB_.WriteTo(ref output, _map_eventClawOrderMapAB_codec);
      eventClawOrderMapABPatch_.WriteTo(ref output, _map_eventClawOrderMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventClawOrderMap_.CalculateSize(_map_eventClawOrderMap_codec);
      size += eventClawOrderMapAB_.CalculateSize(_map_eventClawOrderMapAB_codec);
      size += eventClawOrderMapABPatch_.CalculateSize(_map_eventClawOrderMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventClawOrderConf other) {
      if (other == null) {
        return;
      }
      eventClawOrderMap_.Add(other.eventClawOrderMap_);
      eventClawOrderMapAB_.Add(other.eventClawOrderMapAB_);
      eventClawOrderMapABPatch_.Add(other.eventClawOrderMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventClawOrderMap_.AddEntriesFrom(input, _map_eventClawOrderMap_codec);
            break;
          }
          case 18: {
            eventClawOrderMapAB_.AddEntriesFrom(input, _map_eventClawOrderMapAB_codec);
            break;
          }
          case 26: {
            eventClawOrderMapABPatch_.AddEntriesFrom(input, _map_eventClawOrderMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventClawOrderMap_.AddEntriesFrom(ref input, _map_eventClawOrderMap_codec);
            break;
          }
          case 18: {
            eventClawOrderMapAB_.AddEntriesFrom(ref input, _map_eventClawOrderMapAB_codec);
            break;
          }
          case 26: {
            eventClawOrderMapABPatch_.AddEntriesFrom(ref input, _map_eventClawOrderMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
