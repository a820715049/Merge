// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/ObjSeasonItemConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/ObjSeasonItemConf.proto</summary>
  public static partial class ObjSeasonItemConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/ObjSeasonItemConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ObjSeasonItemConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch9yYXdkYXRhL09ialNlYXNvbkl0ZW1Db25mLnByb3RvEgdyYXdkYXRhIocB",
            "Cg1PYmpTZWFzb25JdGVtEgoKAmlkGAEgASgFEjgKCWluZGV4SW5mbxgCIAMo",
            "CzIlLnJhd2RhdGEuT2JqU2Vhc29uSXRlbS5JbmRleEluZm9FbnRyeRowCg5J",
            "bmRleEluZm9FbnRyeRILCgNrZXkYASABKAUSDQoFdmFsdWUYAiABKAU6AjgB",
            "IrwBChdPYmpTZWFzb25JdGVtTWFwQUJWYWx1ZRJQChBPYmpTZWFzb25JdGVt",
            "TWFwGAEgAygLMjYucmF3ZGF0YS5PYmpTZWFzb25JdGVtTWFwQUJWYWx1ZS5P",
            "YmpTZWFzb25JdGVtTWFwRW50cnkaTwoVT2JqU2Vhc29uSXRlbU1hcEVudHJ5",
            "EgsKA2tleRgBIAEoBRIlCgV2YWx1ZRgCIAEoCzIWLnJhd2RhdGEuT2JqU2Vh",
            "c29uSXRlbToCOAEimQQKEU9ialNlYXNvbkl0ZW1Db25mEkoKEE9ialNlYXNv",
            "bkl0ZW1NYXAYASADKAsyMC5yYXdkYXRhLk9ialNlYXNvbkl0ZW1Db25mLk9i",
            "alNlYXNvbkl0ZW1NYXBFbnRyeRJOChJPYmpTZWFzb25JdGVtTWFwQUIYAiAD",
            "KAsyMi5yYXdkYXRhLk9ialNlYXNvbkl0ZW1Db25mLk9ialNlYXNvbkl0ZW1N",
            "YXBBQkVudHJ5ElgKF09ialNlYXNvbkl0ZW1NYXBBQlBhdGNoGAMgAygLMjcu",
            "cmF3ZGF0YS5PYmpTZWFzb25JdGVtQ29uZi5PYmpTZWFzb25JdGVtTWFwQUJQ",
            "YXRjaEVudHJ5Gk8KFU9ialNlYXNvbkl0ZW1NYXBFbnRyeRILCgNrZXkYASAB",
            "KAUSJQoFdmFsdWUYAiABKAsyFi5yYXdkYXRhLk9ialNlYXNvbkl0ZW06AjgB",
            "GlsKF09ialNlYXNvbkl0ZW1NYXBBQkVudHJ5EgsKA2tleRgBIAEoCRIvCgV2",
            "YWx1ZRgCIAEoCzIgLnJhd2RhdGEuT2JqU2Vhc29uSXRlbU1hcEFCVmFsdWU6",
            "AjgBGmAKHE9ialNlYXNvbkl0ZW1NYXBBQlBhdGNoRW50cnkSCwoDa2V5GAEg",
            "ASgJEi8KBXZhbHVlGAIgASgLMiAucmF3ZGF0YS5PYmpTZWFzb25JdGVtTWFw",
            "QUJWYWx1ZToCOAFCPVotZ2l0bGFiLmZ1bnBsdXMuaW8vZmF0L2NvbmYvZ2Vu",
            "L2dvbGFuZy9yYXdkYXRhqgILZmF0LnJhd2RhdGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.ObjSeasonItem), global::fat.rawdata.ObjSeasonItem.Parser, new[]{ "Id", "IndexInfo" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.ObjSeasonItemMapABValue), global::fat.rawdata.ObjSeasonItemMapABValue.Parser, new[]{ "ObjSeasonItemMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.ObjSeasonItemConf), global::fat.rawdata.ObjSeasonItemConf.Parser, new[]{ "ObjSeasonItemMap", "ObjSeasonItemMapAB", "ObjSeasonItemMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="ObjSeasonItem",table="ObjSeasonItemMap",table_wrapper="ObjSeasonItemConf",map="true",map_key_type="int32",data="ObjSeasonItemConf")
  /// annotation@ab(table_ab="ObjSeasonItemMapAB",table_ab_patch="ObjSeasonItemMapABPatch",table_ab_value="ObjSeasonItemMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@ObjSeasonItem(id="id")
  /// </summary>
  public sealed partial class ObjSeasonItem : pb::IMessage<ObjSeasonItem>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ObjSeasonItem> _parser = new pb::MessageParser<ObjSeasonItem>(() => new ObjSeasonItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ObjSeasonItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.ObjSeasonItemConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjSeasonItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjSeasonItem(ObjSeasonItem other) : this() {
      id_ = other.id_;
      indexInfo_ = other.indexInfo_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjSeasonItem Clone() {
      return new ObjSeasonItem(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 映射物品id
    /// （ObjBasic.id）
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "indexInfo" field.</summary>
    public const int IndexInfoFieldNumber = 2;
    private static readonly pbc::MapField<int, int>.Codec _map_indexInfo_codec
        = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForInt32(16, 0), 18);
    private readonly pbc::MapField<int, int> indexInfo_ = new pbc::MapField<int, int>();
    /// <summary>
    /// 目标赛季值对应的数据ID
    /// （EventCardRound.id : ObjBasic.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, int> IndexInfo {
      get { return indexInfo_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ObjSeasonItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ObjSeasonItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!IndexInfo.Equals(other.IndexInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      hash ^= IndexInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      indexInfo_.WriteTo(output, _map_indexInfo_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      indexInfo_.WriteTo(ref output, _map_indexInfo_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      size += indexInfo_.CalculateSize(_map_indexInfo_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ObjSeasonItem other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      indexInfo_.Add(other.indexInfo_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            indexInfo_.AddEntriesFrom(input, _map_indexInfo_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            indexInfo_.AddEntriesFrom(ref input, _map_indexInfo_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ObjSeasonItemMapABValue : pb::IMessage<ObjSeasonItemMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ObjSeasonItemMapABValue> _parser = new pb::MessageParser<ObjSeasonItemMapABValue>(() => new ObjSeasonItemMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ObjSeasonItemMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.ObjSeasonItemConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjSeasonItemMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjSeasonItemMapABValue(ObjSeasonItemMapABValue other) : this() {
      objSeasonItemMap_ = other.objSeasonItemMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjSeasonItemMapABValue Clone() {
      return new ObjSeasonItemMapABValue(this);
    }

    /// <summary>Field number for the "ObjSeasonItemMap" field.</summary>
    public const int ObjSeasonItemMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.ObjSeasonItem>.Codec _map_objSeasonItemMap_codec
        = new pbc::MapField<int, global::fat.rawdata.ObjSeasonItem>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ObjSeasonItem.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.ObjSeasonItem> objSeasonItemMap_ = new pbc::MapField<int, global::fat.rawdata.ObjSeasonItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.ObjSeasonItem> ObjSeasonItemMap {
      get { return objSeasonItemMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ObjSeasonItemMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ObjSeasonItemMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!ObjSeasonItemMap.Equals(other.ObjSeasonItemMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ObjSeasonItemMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      objSeasonItemMap_.WriteTo(output, _map_objSeasonItemMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      objSeasonItemMap_.WriteTo(ref output, _map_objSeasonItemMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += objSeasonItemMap_.CalculateSize(_map_objSeasonItemMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ObjSeasonItemMapABValue other) {
      if (other == null) {
        return;
      }
      objSeasonItemMap_.Add(other.objSeasonItemMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            objSeasonItemMap_.AddEntriesFrom(input, _map_objSeasonItemMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            objSeasonItemMap_.AddEntriesFrom(ref input, _map_objSeasonItemMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ObjSeasonItemConf : pb::IMessage<ObjSeasonItemConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ObjSeasonItemConf> _parser = new pb::MessageParser<ObjSeasonItemConf>(() => new ObjSeasonItemConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ObjSeasonItemConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.ObjSeasonItemConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjSeasonItemConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjSeasonItemConf(ObjSeasonItemConf other) : this() {
      objSeasonItemMap_ = other.objSeasonItemMap_.Clone();
      objSeasonItemMapAB_ = other.objSeasonItemMapAB_.Clone();
      objSeasonItemMapABPatch_ = other.objSeasonItemMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjSeasonItemConf Clone() {
      return new ObjSeasonItemConf(this);
    }

    /// <summary>Field number for the "ObjSeasonItemMap" field.</summary>
    public const int ObjSeasonItemMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.ObjSeasonItem>.Codec _map_objSeasonItemMap_codec
        = new pbc::MapField<int, global::fat.rawdata.ObjSeasonItem>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ObjSeasonItem.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.ObjSeasonItem> objSeasonItemMap_ = new pbc::MapField<int, global::fat.rawdata.ObjSeasonItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.ObjSeasonItem> ObjSeasonItemMap {
      get { return objSeasonItemMap_; }
    }

    /// <summary>Field number for the "ObjSeasonItemMapAB" field.</summary>
    public const int ObjSeasonItemMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.ObjSeasonItemMapABValue>.Codec _map_objSeasonItemMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.ObjSeasonItemMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ObjSeasonItemMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.ObjSeasonItemMapABValue> objSeasonItemMapAB_ = new pbc::MapField<string, global::fat.rawdata.ObjSeasonItemMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.ObjSeasonItemMapABValue> ObjSeasonItemMapAB {
      get { return objSeasonItemMapAB_; }
    }

    /// <summary>Field number for the "ObjSeasonItemMapABPatch" field.</summary>
    public const int ObjSeasonItemMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.ObjSeasonItemMapABValue>.Codec _map_objSeasonItemMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.ObjSeasonItemMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ObjSeasonItemMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.ObjSeasonItemMapABValue> objSeasonItemMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.ObjSeasonItemMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.ObjSeasonItemMapABValue> ObjSeasonItemMapABPatch {
      get { return objSeasonItemMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ObjSeasonItemConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ObjSeasonItemConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!ObjSeasonItemMap.Equals(other.ObjSeasonItemMap)) return false;
      if (!ObjSeasonItemMapAB.Equals(other.ObjSeasonItemMapAB)) return false;
      if (!ObjSeasonItemMapABPatch.Equals(other.ObjSeasonItemMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ObjSeasonItemMap.GetHashCode();
      hash ^= ObjSeasonItemMapAB.GetHashCode();
      hash ^= ObjSeasonItemMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      objSeasonItemMap_.WriteTo(output, _map_objSeasonItemMap_codec);
      objSeasonItemMapAB_.WriteTo(output, _map_objSeasonItemMapAB_codec);
      objSeasonItemMapABPatch_.WriteTo(output, _map_objSeasonItemMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      objSeasonItemMap_.WriteTo(ref output, _map_objSeasonItemMap_codec);
      objSeasonItemMapAB_.WriteTo(ref output, _map_objSeasonItemMapAB_codec);
      objSeasonItemMapABPatch_.WriteTo(ref output, _map_objSeasonItemMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += objSeasonItemMap_.CalculateSize(_map_objSeasonItemMap_codec);
      size += objSeasonItemMapAB_.CalculateSize(_map_objSeasonItemMapAB_codec);
      size += objSeasonItemMapABPatch_.CalculateSize(_map_objSeasonItemMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ObjSeasonItemConf other) {
      if (other == null) {
        return;
      }
      objSeasonItemMap_.Add(other.objSeasonItemMap_);
      objSeasonItemMapAB_.Add(other.objSeasonItemMapAB_);
      objSeasonItemMapABPatch_.Add(other.objSeasonItemMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            objSeasonItemMap_.AddEntriesFrom(input, _map_objSeasonItemMap_codec);
            break;
          }
          case 18: {
            objSeasonItemMapAB_.AddEntriesFrom(input, _map_objSeasonItemMapAB_codec);
            break;
          }
          case 26: {
            objSeasonItemMapABPatch_.AddEntriesFrom(input, _map_objSeasonItemMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            objSeasonItemMap_.AddEntriesFrom(ref input, _map_objSeasonItemMap_codec);
            break;
          }
          case 18: {
            objSeasonItemMapAB_.AddEntriesFrom(ref input, _map_objSeasonItemMapAB_codec);
            break;
          }
          case 26: {
            objSeasonItemMapABPatch_.AddEntriesFrom(ref input, _map_objSeasonItemMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
