// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/InventoryItemConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/InventoryItemConf.proto</summary>
  public static partial class InventoryItemConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/InventoryItemConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static InventoryItemConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch9yYXdkYXRhL0ludmVudG9yeUl0ZW1Db25mLnByb3RvEgdyYXdkYXRhIi4K",
            "DUludmVudG9yeUl0ZW0SCgoCaWQYASABKAUSEQoJY29zdENvdW50GAIgASgF",
            "IrwBChdJbnZlbnRvcnlJdGVtTWFwQUJWYWx1ZRJQChBJbnZlbnRvcnlJdGVt",
            "TWFwGAEgAygLMjYucmF3ZGF0YS5JbnZlbnRvcnlJdGVtTWFwQUJWYWx1ZS5J",
            "bnZlbnRvcnlJdGVtTWFwRW50cnkaTwoVSW52ZW50b3J5SXRlbU1hcEVudHJ5",
            "EgsKA2tleRgBIAEoBRIlCgV2YWx1ZRgCIAEoCzIWLnJhd2RhdGEuSW52ZW50",
            "b3J5SXRlbToCOAEimQQKEUludmVudG9yeUl0ZW1Db25mEkoKEEludmVudG9y",
            "eUl0ZW1NYXAYASADKAsyMC5yYXdkYXRhLkludmVudG9yeUl0ZW1Db25mLklu",
            "dmVudG9yeUl0ZW1NYXBFbnRyeRJOChJJbnZlbnRvcnlJdGVtTWFwQUIYAiAD",
            "KAsyMi5yYXdkYXRhLkludmVudG9yeUl0ZW1Db25mLkludmVudG9yeUl0ZW1N",
            "YXBBQkVudHJ5ElgKF0ludmVudG9yeUl0ZW1NYXBBQlBhdGNoGAMgAygLMjcu",
            "cmF3ZGF0YS5JbnZlbnRvcnlJdGVtQ29uZi5JbnZlbnRvcnlJdGVtTWFwQUJQ",
            "YXRjaEVudHJ5Gk8KFUludmVudG9yeUl0ZW1NYXBFbnRyeRILCgNrZXkYASAB",
            "KAUSJQoFdmFsdWUYAiABKAsyFi5yYXdkYXRhLkludmVudG9yeUl0ZW06AjgB",
            "GlsKF0ludmVudG9yeUl0ZW1NYXBBQkVudHJ5EgsKA2tleRgBIAEoCRIvCgV2",
            "YWx1ZRgCIAEoCzIgLnJhd2RhdGEuSW52ZW50b3J5SXRlbU1hcEFCVmFsdWU6",
            "AjgBGmAKHEludmVudG9yeUl0ZW1NYXBBQlBhdGNoRW50cnkSCwoDa2V5GAEg",
            "ASgJEi8KBXZhbHVlGAIgASgLMiAucmF3ZGF0YS5JbnZlbnRvcnlJdGVtTWFw",
            "QUJWYWx1ZToCOAFCPVotZ2l0bGFiLmZ1bnBsdXMuaW8vZmF0L2NvbmYvZ2Vu",
            "L2dvbGFuZy9yYXdkYXRhqgILZmF0LnJhd2RhdGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.InventoryItem), global::fat.rawdata.InventoryItem.Parser, new[]{ "Id", "CostCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.InventoryItemMapABValue), global::fat.rawdata.InventoryItemMapABValue.Parser, new[]{ "InventoryItemMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.InventoryItemConf), global::fat.rawdata.InventoryItemConf.Parser, new[]{ "InventoryItemMap", "InventoryItemMapAB", "InventoryItemMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="InventoryItem",table="InventoryItemMap",table_wrapper="InventoryItemConf",map="true",map_key_type="int32",data="InventoryItemConf")
  /// annotation@ab(table_ab="InventoryItemMapAB",table_ab_patch="InventoryItemMapABPatch",table_ab_value="InventoryItemMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@InventoryItem(id="id")
  /// </summary>
  public sealed partial class InventoryItem : pb::IMessage<InventoryItem>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InventoryItem> _parser = new pb::MessageParser<InventoryItem>(() => new InventoryItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InventoryItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.InventoryItemConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InventoryItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InventoryItem(InventoryItem other) : this() {
      id_ = other.id_;
      costCount_ = other.costCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InventoryItem Clone() {
      return new InventoryItem(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 棋子仓库格子ID
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "costCount" field.</summary>
    public const int CostCountFieldNumber = 2;
    private int costCount_;
    /// <summary>
    /// 解锁消耗钻石数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CostCount {
      get { return costCount_; }
      set {
        costCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InventoryItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InventoryItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (CostCount != other.CostCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (CostCount != 0) hash ^= CostCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (CostCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CostCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (CostCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CostCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (CostCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CostCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InventoryItem other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.CostCount != 0) {
        CostCount = other.CostCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            CostCount = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            CostCount = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class InventoryItemMapABValue : pb::IMessage<InventoryItemMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InventoryItemMapABValue> _parser = new pb::MessageParser<InventoryItemMapABValue>(() => new InventoryItemMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InventoryItemMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.InventoryItemConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InventoryItemMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InventoryItemMapABValue(InventoryItemMapABValue other) : this() {
      inventoryItemMap_ = other.inventoryItemMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InventoryItemMapABValue Clone() {
      return new InventoryItemMapABValue(this);
    }

    /// <summary>Field number for the "InventoryItemMap" field.</summary>
    public const int InventoryItemMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.InventoryItem>.Codec _map_inventoryItemMap_codec
        = new pbc::MapField<int, global::fat.rawdata.InventoryItem>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.InventoryItem.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.InventoryItem> inventoryItemMap_ = new pbc::MapField<int, global::fat.rawdata.InventoryItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.InventoryItem> InventoryItemMap {
      get { return inventoryItemMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InventoryItemMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InventoryItemMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!InventoryItemMap.Equals(other.InventoryItemMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= InventoryItemMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      inventoryItemMap_.WriteTo(output, _map_inventoryItemMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      inventoryItemMap_.WriteTo(ref output, _map_inventoryItemMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += inventoryItemMap_.CalculateSize(_map_inventoryItemMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InventoryItemMapABValue other) {
      if (other == null) {
        return;
      }
      inventoryItemMap_.Add(other.inventoryItemMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            inventoryItemMap_.AddEntriesFrom(input, _map_inventoryItemMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            inventoryItemMap_.AddEntriesFrom(ref input, _map_inventoryItemMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class InventoryItemConf : pb::IMessage<InventoryItemConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InventoryItemConf> _parser = new pb::MessageParser<InventoryItemConf>(() => new InventoryItemConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InventoryItemConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.InventoryItemConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InventoryItemConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InventoryItemConf(InventoryItemConf other) : this() {
      inventoryItemMap_ = other.inventoryItemMap_.Clone();
      inventoryItemMapAB_ = other.inventoryItemMapAB_.Clone();
      inventoryItemMapABPatch_ = other.inventoryItemMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InventoryItemConf Clone() {
      return new InventoryItemConf(this);
    }

    /// <summary>Field number for the "InventoryItemMap" field.</summary>
    public const int InventoryItemMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.InventoryItem>.Codec _map_inventoryItemMap_codec
        = new pbc::MapField<int, global::fat.rawdata.InventoryItem>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.InventoryItem.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.InventoryItem> inventoryItemMap_ = new pbc::MapField<int, global::fat.rawdata.InventoryItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.InventoryItem> InventoryItemMap {
      get { return inventoryItemMap_; }
    }

    /// <summary>Field number for the "InventoryItemMapAB" field.</summary>
    public const int InventoryItemMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.InventoryItemMapABValue>.Codec _map_inventoryItemMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.InventoryItemMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.InventoryItemMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.InventoryItemMapABValue> inventoryItemMapAB_ = new pbc::MapField<string, global::fat.rawdata.InventoryItemMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.InventoryItemMapABValue> InventoryItemMapAB {
      get { return inventoryItemMapAB_; }
    }

    /// <summary>Field number for the "InventoryItemMapABPatch" field.</summary>
    public const int InventoryItemMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.InventoryItemMapABValue>.Codec _map_inventoryItemMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.InventoryItemMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.InventoryItemMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.InventoryItemMapABValue> inventoryItemMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.InventoryItemMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.InventoryItemMapABValue> InventoryItemMapABPatch {
      get { return inventoryItemMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InventoryItemConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InventoryItemConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!InventoryItemMap.Equals(other.InventoryItemMap)) return false;
      if (!InventoryItemMapAB.Equals(other.InventoryItemMapAB)) return false;
      if (!InventoryItemMapABPatch.Equals(other.InventoryItemMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= InventoryItemMap.GetHashCode();
      hash ^= InventoryItemMapAB.GetHashCode();
      hash ^= InventoryItemMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      inventoryItemMap_.WriteTo(output, _map_inventoryItemMap_codec);
      inventoryItemMapAB_.WriteTo(output, _map_inventoryItemMapAB_codec);
      inventoryItemMapABPatch_.WriteTo(output, _map_inventoryItemMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      inventoryItemMap_.WriteTo(ref output, _map_inventoryItemMap_codec);
      inventoryItemMapAB_.WriteTo(ref output, _map_inventoryItemMapAB_codec);
      inventoryItemMapABPatch_.WriteTo(ref output, _map_inventoryItemMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += inventoryItemMap_.CalculateSize(_map_inventoryItemMap_codec);
      size += inventoryItemMapAB_.CalculateSize(_map_inventoryItemMapAB_codec);
      size += inventoryItemMapABPatch_.CalculateSize(_map_inventoryItemMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InventoryItemConf other) {
      if (other == null) {
        return;
      }
      inventoryItemMap_.Add(other.inventoryItemMap_);
      inventoryItemMapAB_.Add(other.inventoryItemMapAB_);
      inventoryItemMapABPatch_.Add(other.inventoryItemMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            inventoryItemMap_.AddEntriesFrom(input, _map_inventoryItemMap_codec);
            break;
          }
          case 18: {
            inventoryItemMapAB_.AddEntriesFrom(input, _map_inventoryItemMapAB_codec);
            break;
          }
          case 26: {
            inventoryItemMapABPatch_.AddEntriesFrom(input, _map_inventoryItemMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            inventoryItemMap_.AddEntriesFrom(ref input, _map_inventoryItemMap_codec);
            break;
          }
          case 18: {
            inventoryItemMapAB_.AddEntriesFrom(ref input, _map_inventoryItemMapAB_codec);
            break;
          }
          case 26: {
            inventoryItemMapABPatch_.AddEntriesFrom(ref input, _map_inventoryItemMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
