// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/LangKoHotfixConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/LangKoHotfixConf.proto</summary>
  public static partial class LangKoHotfixConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/LangKoHotfixConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LangKoHotfixConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch5yYXdkYXRhL0xhbmdLb0hvdGZpeENvbmYucHJvdG8SB3Jhd2RhdGEiKAoM",
            "TGFuZ0tvSG90Zml4EgoKAkxLGAEgASgJEgwKBE5hbWUYAiABKAkiTAoYTGFu",
            "Z0tvSG90Zml4U2xpY2VBQlZhbHVlEjAKEUxhbmdLb0hvdGZpeFNsaWNlGAEg",
            "AygLMhUucmF3ZGF0YS5MYW5nS29Ib3RmaXgiswMKEExhbmdLb0hvdGZpeENv",
            "bmYSMAoRTGFuZ0tvSG90Zml4U2xpY2UYASADKAsyFS5yYXdkYXRhLkxhbmdL",
            "b0hvdGZpeBJPChNMYW5nS29Ib3RmaXhTbGljZUFCGAIgAygLMjIucmF3ZGF0",
            "YS5MYW5nS29Ib3RmaXhDb25mLkxhbmdLb0hvdGZpeFNsaWNlQUJFbnRyeRJZ",
            "ChhMYW5nS29Ib3RmaXhTbGljZUFCUGF0Y2gYAyADKAsyNy5yYXdkYXRhLkxh",
            "bmdLb0hvdGZpeENvbmYuTGFuZ0tvSG90Zml4U2xpY2VBQlBhdGNoRW50cnka",
            "XQoYTGFuZ0tvSG90Zml4U2xpY2VBQkVudHJ5EgsKA2tleRgBIAEoCRIwCgV2",
            "YWx1ZRgCIAEoCzIhLnJhd2RhdGEuTGFuZ0tvSG90Zml4U2xpY2VBQlZhbHVl",
            "OgI4ARpiCh1MYW5nS29Ib3RmaXhTbGljZUFCUGF0Y2hFbnRyeRILCgNrZXkY",
            "ASABKAkSMAoFdmFsdWUYAiABKAsyIS5yYXdkYXRhLkxhbmdLb0hvdGZpeFNs",
            "aWNlQUJWYWx1ZToCOAFCPVotZ2l0bGFiLmZ1bnBsdXMuaW8vZmF0L2NvbmYv",
            "Z2VuL2dvbGFuZy9yYXdkYXRhqgILZmF0LnJhd2RhdGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.LangKoHotfix), global::fat.rawdata.LangKoHotfix.Parser, new[]{ "LK", "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.LangKoHotfixSliceABValue), global::fat.rawdata.LangKoHotfixSliceABValue.Parser, new[]{ "LangKoHotfixSlice" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.LangKoHotfixConf), global::fat.rawdata.LangKoHotfixConf.Parser, new[]{ "LangKoHotfixSlice", "LangKoHotfixSliceAB", "LangKoHotfixSliceABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="LangKoHotfix",table="LangKoHotfixSlice",table_wrapper="LangKoHotfixConf",map="false",map_key_type="",data="LangKoHotfixConf")
  /// annotation@ab(table_ab="LangKoHotfixSliceAB",table_ab_patch="LangKoHotfixSliceABPatch",table_ab_value="LangKoHotfixSliceABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// </summary>
  public sealed partial class LangKoHotfix : pb::IMessage<LangKoHotfix>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LangKoHotfix> _parser = new pb::MessageParser<LangKoHotfix>(() => new LangKoHotfix());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LangKoHotfix> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.LangKoHotfixConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangKoHotfix() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangKoHotfix(LangKoHotfix other) : this() {
      lK_ = other.lK_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangKoHotfix Clone() {
      return new LangKoHotfix(this);
    }

    /// <summary>Field number for the "LK" field.</summary>
    public const int LKFieldNumber = 1;
    private string lK_ = "";
    /// <summary>
    /// key
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LK {
      get { return lK_; }
      set {
        lK_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    /// 韩语
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LangKoHotfix);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LangKoHotfix other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LK != other.LK) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LK.Length != 0) hash ^= LK.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (LK.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LK);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (LK.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LK);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LK.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LK);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LangKoHotfix other) {
      if (other == null) {
        return;
      }
      if (other.LK.Length != 0) {
        LK = other.LK;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LK = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            LK = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LangKoHotfixSliceABValue : pb::IMessage<LangKoHotfixSliceABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LangKoHotfixSliceABValue> _parser = new pb::MessageParser<LangKoHotfixSliceABValue>(() => new LangKoHotfixSliceABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LangKoHotfixSliceABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.LangKoHotfixConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangKoHotfixSliceABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangKoHotfixSliceABValue(LangKoHotfixSliceABValue other) : this() {
      langKoHotfixSlice_ = other.langKoHotfixSlice_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangKoHotfixSliceABValue Clone() {
      return new LangKoHotfixSliceABValue(this);
    }

    /// <summary>Field number for the "LangKoHotfixSlice" field.</summary>
    public const int LangKoHotfixSliceFieldNumber = 1;
    private static readonly pb::FieldCodec<global::fat.rawdata.LangKoHotfix> _repeated_langKoHotfixSlice_codec
        = pb::FieldCodec.ForMessage(10, global::fat.rawdata.LangKoHotfix.Parser);
    private readonly pbc::RepeatedField<global::fat.rawdata.LangKoHotfix> langKoHotfixSlice_ = new pbc::RepeatedField<global::fat.rawdata.LangKoHotfix>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::fat.rawdata.LangKoHotfix> LangKoHotfixSlice {
      get { return langKoHotfixSlice_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LangKoHotfixSliceABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LangKoHotfixSliceABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!langKoHotfixSlice_.Equals(other.langKoHotfixSlice_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= langKoHotfixSlice_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      langKoHotfixSlice_.WriteTo(output, _repeated_langKoHotfixSlice_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      langKoHotfixSlice_.WriteTo(ref output, _repeated_langKoHotfixSlice_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += langKoHotfixSlice_.CalculateSize(_repeated_langKoHotfixSlice_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LangKoHotfixSliceABValue other) {
      if (other == null) {
        return;
      }
      langKoHotfixSlice_.Add(other.langKoHotfixSlice_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            langKoHotfixSlice_.AddEntriesFrom(input, _repeated_langKoHotfixSlice_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            langKoHotfixSlice_.AddEntriesFrom(ref input, _repeated_langKoHotfixSlice_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LangKoHotfixConf : pb::IMessage<LangKoHotfixConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LangKoHotfixConf> _parser = new pb::MessageParser<LangKoHotfixConf>(() => new LangKoHotfixConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LangKoHotfixConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.LangKoHotfixConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangKoHotfixConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangKoHotfixConf(LangKoHotfixConf other) : this() {
      langKoHotfixSlice_ = other.langKoHotfixSlice_.Clone();
      langKoHotfixSliceAB_ = other.langKoHotfixSliceAB_.Clone();
      langKoHotfixSliceABPatch_ = other.langKoHotfixSliceABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangKoHotfixConf Clone() {
      return new LangKoHotfixConf(this);
    }

    /// <summary>Field number for the "LangKoHotfixSlice" field.</summary>
    public const int LangKoHotfixSliceFieldNumber = 1;
    private static readonly pb::FieldCodec<global::fat.rawdata.LangKoHotfix> _repeated_langKoHotfixSlice_codec
        = pb::FieldCodec.ForMessage(10, global::fat.rawdata.LangKoHotfix.Parser);
    private readonly pbc::RepeatedField<global::fat.rawdata.LangKoHotfix> langKoHotfixSlice_ = new pbc::RepeatedField<global::fat.rawdata.LangKoHotfix>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::fat.rawdata.LangKoHotfix> LangKoHotfixSlice {
      get { return langKoHotfixSlice_; }
    }

    /// <summary>Field number for the "LangKoHotfixSliceAB" field.</summary>
    public const int LangKoHotfixSliceABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.LangKoHotfixSliceABValue>.Codec _map_langKoHotfixSliceAB_codec
        = new pbc::MapField<string, global::fat.rawdata.LangKoHotfixSliceABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.LangKoHotfixSliceABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.LangKoHotfixSliceABValue> langKoHotfixSliceAB_ = new pbc::MapField<string, global::fat.rawdata.LangKoHotfixSliceABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.LangKoHotfixSliceABValue> LangKoHotfixSliceAB {
      get { return langKoHotfixSliceAB_; }
    }

    /// <summary>Field number for the "LangKoHotfixSliceABPatch" field.</summary>
    public const int LangKoHotfixSliceABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.LangKoHotfixSliceABValue>.Codec _map_langKoHotfixSliceABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.LangKoHotfixSliceABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.LangKoHotfixSliceABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.LangKoHotfixSliceABValue> langKoHotfixSliceABPatch_ = new pbc::MapField<string, global::fat.rawdata.LangKoHotfixSliceABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.LangKoHotfixSliceABValue> LangKoHotfixSliceABPatch {
      get { return langKoHotfixSliceABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LangKoHotfixConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LangKoHotfixConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!langKoHotfixSlice_.Equals(other.langKoHotfixSlice_)) return false;
      if (!LangKoHotfixSliceAB.Equals(other.LangKoHotfixSliceAB)) return false;
      if (!LangKoHotfixSliceABPatch.Equals(other.LangKoHotfixSliceABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= langKoHotfixSlice_.GetHashCode();
      hash ^= LangKoHotfixSliceAB.GetHashCode();
      hash ^= LangKoHotfixSliceABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      langKoHotfixSlice_.WriteTo(output, _repeated_langKoHotfixSlice_codec);
      langKoHotfixSliceAB_.WriteTo(output, _map_langKoHotfixSliceAB_codec);
      langKoHotfixSliceABPatch_.WriteTo(output, _map_langKoHotfixSliceABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      langKoHotfixSlice_.WriteTo(ref output, _repeated_langKoHotfixSlice_codec);
      langKoHotfixSliceAB_.WriteTo(ref output, _map_langKoHotfixSliceAB_codec);
      langKoHotfixSliceABPatch_.WriteTo(ref output, _map_langKoHotfixSliceABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += langKoHotfixSlice_.CalculateSize(_repeated_langKoHotfixSlice_codec);
      size += langKoHotfixSliceAB_.CalculateSize(_map_langKoHotfixSliceAB_codec);
      size += langKoHotfixSliceABPatch_.CalculateSize(_map_langKoHotfixSliceABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LangKoHotfixConf other) {
      if (other == null) {
        return;
      }
      langKoHotfixSlice_.Add(other.langKoHotfixSlice_);
      langKoHotfixSliceAB_.Add(other.langKoHotfixSliceAB_);
      langKoHotfixSliceABPatch_.Add(other.langKoHotfixSliceABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            langKoHotfixSlice_.AddEntriesFrom(input, _repeated_langKoHotfixSlice_codec);
            break;
          }
          case 18: {
            langKoHotfixSliceAB_.AddEntriesFrom(input, _map_langKoHotfixSliceAB_codec);
            break;
          }
          case 26: {
            langKoHotfixSliceABPatch_.AddEntriesFrom(input, _map_langKoHotfixSliceABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            langKoHotfixSlice_.AddEntriesFrom(ref input, _repeated_langKoHotfixSlice_codec);
            break;
          }
          case 18: {
            langKoHotfixSliceAB_.AddEntriesFrom(ref input, _map_langKoHotfixSliceAB_codec);
            break;
          }
          case 26: {
            langKoHotfixSliceABPatch_.AddEntriesFrom(ref input, _map_langKoHotfixSliceABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
