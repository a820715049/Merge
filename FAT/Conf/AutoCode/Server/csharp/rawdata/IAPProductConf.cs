// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/IAPProductConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/IAPProductConf.proto</summary>
  public static partial class IAPProductConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/IAPProductConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static IAPProductConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChxyYXdkYXRhL0lBUFByb2R1Y3RDb25mLnByb3RvEgdyYXdkYXRhItgBCgpJ",
            "QVBQcm9kdWN0EgoKAmlkGAEgASgFEhAKCGFuZFRva2VuGBEgASgJEgwKBGRl",
            "c2MYAiABKAkSEwoLZWRpdG9yUHJpY2UYECABKAISDwoHaWFwTmFtZRgDIAEo",
            "CRINCgVpbWFnZRgEIAEoCRIQCghpb3NUb2tlbhgSIAEoCRINCgVwcmljZRgF",
            "IAEoBRIRCglwcmljZVR5cGUYBiABKAUSEQoJcHJvZHVjdElkGAcgASgJEhMK",
            "C3RpY2tldFByaWNlGBMgASgFEg0KBXRpdGxlGAggASgJIqoBChRJQVBQcm9k",
            "dWN0TWFwQUJWYWx1ZRJHCg1JQVBQcm9kdWN0TWFwGAEgAygLMjAucmF3ZGF0",
            "YS5JQVBQcm9kdWN0TWFwQUJWYWx1ZS5JQVBQcm9kdWN0TWFwRW50cnkaSQoS",
            "SUFQUHJvZHVjdE1hcEVudHJ5EgsKA2tleRgBIAEoBRIiCgV2YWx1ZRgCIAEo",
            "CzITLnJhd2RhdGEuSUFQUHJvZHVjdDoCOAEi6QMKDklBUFByb2R1Y3RDb25m",
            "EkEKDUlBUFByb2R1Y3RNYXAYASADKAsyKi5yYXdkYXRhLklBUFByb2R1Y3RD",
            "b25mLklBUFByb2R1Y3RNYXBFbnRyeRJFCg9JQVBQcm9kdWN0TWFwQUIYAiAD",
            "KAsyLC5yYXdkYXRhLklBUFByb2R1Y3RDb25mLklBUFByb2R1Y3RNYXBBQkVu",
            "dHJ5Ek8KFElBUFByb2R1Y3RNYXBBQlBhdGNoGAMgAygLMjEucmF3ZGF0YS5J",
            "QVBQcm9kdWN0Q29uZi5JQVBQcm9kdWN0TWFwQUJQYXRjaEVudHJ5GkkKEklB",
            "UFByb2R1Y3RNYXBFbnRyeRILCgNrZXkYASABKAUSIgoFdmFsdWUYAiABKAsy",
            "Ey5yYXdkYXRhLklBUFByb2R1Y3Q6AjgBGlUKFElBUFByb2R1Y3RNYXBBQkVu",
            "dHJ5EgsKA2tleRgBIAEoCRIsCgV2YWx1ZRgCIAEoCzIdLnJhd2RhdGEuSUFQ",
            "UHJvZHVjdE1hcEFCVmFsdWU6AjgBGloKGUlBUFByb2R1Y3RNYXBBQlBhdGNo",
            "RW50cnkSCwoDa2V5GAEgASgJEiwKBXZhbHVlGAIgASgLMh0ucmF3ZGF0YS5J",
            "QVBQcm9kdWN0TWFwQUJWYWx1ZToCOAFCPVotZ2l0bGFiLmZ1bnBsdXMuaW8v",
            "ZmF0L2NvbmYvZ2VuL2dvbGFuZy9yYXdkYXRhqgILZmF0LnJhd2RhdGFiBnBy",
            "b3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.IAPProduct), global::fat.rawdata.IAPProduct.Parser, new[]{ "Id", "AndToken", "Desc", "EditorPrice", "IapName", "Image", "IosToken", "Price", "PriceType", "ProductId", "TicketPrice", "Title" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.IAPProductMapABValue), global::fat.rawdata.IAPProductMapABValue.Parser, new[]{ "IAPProductMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.IAPProductConf), global::fat.rawdata.IAPProductConf.Parser, new[]{ "IAPProductMap", "IAPProductMapAB", "IAPProductMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="IAPProduct",table="IAPProductMap",table_wrapper="IAPProductConf",map="true",map_key_type="int32",data="IAPProductConf")
  /// annotation@ab(table_ab="IAPProductMapAB",table_ab_patch="IAPProductMapABPatch",table_ab_value="IAPProductMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@IAPProduct(id="id")
  /// </summary>
  public sealed partial class IAPProduct : pb::IMessage<IAPProduct>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<IAPProduct> _parser = new pb::MessageParser<IAPProduct>(() => new IAPProduct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IAPProduct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.IAPProductConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IAPProduct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IAPProduct(IAPProduct other) : this() {
      id_ = other.id_;
      andToken_ = other.andToken_;
      desc_ = other.desc_;
      editorPrice_ = other.editorPrice_;
      iapName_ = other.iapName_;
      image_ = other.image_;
      iosToken_ = other.iosToken_;
      price_ = other.price_;
      priceType_ = other.priceType_;
      productId_ = other.productId_;
      ticketPrice_ = other.ticketPrice_;
      title_ = other.title_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IAPProduct Clone() {
      return new IAPProduct(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 唯一id
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "andToken" field.</summary>
    public const int AndTokenFieldNumber = 17;
    private string andToken_ = "";
    /// <summary>
    /// adjust回传token
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AndToken {
      get { return andToken_; }
      set {
        andToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "desc" field.</summary>
    public const int DescFieldNumber = 2;
    private string desc_ = "";
    /// <summary>
    /// 描述
    /// client side using
    /// annotation@field_desc(just_client="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Desc {
      get { return desc_; }
      set {
        desc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "editorPrice" field.</summary>
    public const int EditorPriceFieldNumber = 16;
    private float editorPrice_;
    /// <summary>
    /// 编辑器显示的价格
    /// client side using
    /// annotation@field_editorPrice(just_client="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float EditorPrice {
      get { return editorPrice_; }
      set {
        editorPrice_ = value;
      }
    }

    /// <summary>Field number for the "iapName" field.</summary>
    public const int IapNameFieldNumber = 3;
    private string iapName_ = "";
    /// <summary>
    /// 统计数据名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IapName {
      get { return iapName_; }
      set {
        iapName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "image" field.</summary>
    public const int ImageFieldNumber = 4;
    private string image_ = "";
    /// <summary>
    /// 配图
    /// client side using
    /// annotation@field_image(just_client="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Image {
      get { return image_; }
      set {
        image_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "iosToken" field.</summary>
    public const int IosTokenFieldNumber = 18;
    private string iosToken_ = "";
    /// <summary>
    /// adjust回传token
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IosToken {
      get { return iosToken_; }
      set {
        iosToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "price" field.</summary>
    public const int PriceFieldNumber = 5;
    private int price_;
    /// <summary>
    /// 价格
    /// client side using
    /// annotation@field_price(just_client="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Price {
      get { return price_; }
      set {
        price_ = value;
      }
    }

    /// <summary>Field number for the "priceType" field.</summary>
    public const int PriceTypeFieldNumber = 6;
    private int priceType_;
    /// <summary>
    /// 货币类型
    /// client side using
    /// annotation@field_priceType(just_client="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PriceType {
      get { return priceType_; }
      set {
        priceType_ = value;
      }
    }

    /// <summary>Field number for the "productId" field.</summary>
    public const int ProductIdFieldNumber = 7;
    private string productId_ = "";
    /// <summary>
    /// 产品id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProductId {
      get { return productId_; }
      set {
        productId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ticketPrice" field.</summary>
    public const int TicketPriceFieldNumber = 19;
    private int ticketPrice_;
    /// <summary>
    /// 支付代币价格
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TicketPrice {
      get { return ticketPrice_; }
      set {
        ticketPrice_ = value;
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 8;
    private string title_ = "";
    /// <summary>
    /// 标题
    /// client side using
    /// annotation@field_title(just_client="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IAPProduct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IAPProduct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (AndToken != other.AndToken) return false;
      if (Desc != other.Desc) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(EditorPrice, other.EditorPrice)) return false;
      if (IapName != other.IapName) return false;
      if (Image != other.Image) return false;
      if (IosToken != other.IosToken) return false;
      if (Price != other.Price) return false;
      if (PriceType != other.PriceType) return false;
      if (ProductId != other.ProductId) return false;
      if (TicketPrice != other.TicketPrice) return false;
      if (Title != other.Title) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (AndToken.Length != 0) hash ^= AndToken.GetHashCode();
      if (Desc.Length != 0) hash ^= Desc.GetHashCode();
      if (EditorPrice != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(EditorPrice);
      if (IapName.Length != 0) hash ^= IapName.GetHashCode();
      if (Image.Length != 0) hash ^= Image.GetHashCode();
      if (IosToken.Length != 0) hash ^= IosToken.GetHashCode();
      if (Price != 0) hash ^= Price.GetHashCode();
      if (PriceType != 0) hash ^= PriceType.GetHashCode();
      if (ProductId.Length != 0) hash ^= ProductId.GetHashCode();
      if (TicketPrice != 0) hash ^= TicketPrice.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Desc.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Desc);
      }
      if (IapName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(IapName);
      }
      if (Image.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Image);
      }
      if (Price != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Price);
      }
      if (PriceType != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(PriceType);
      }
      if (ProductId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ProductId);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Title);
      }
      if (EditorPrice != 0F) {
        output.WriteRawTag(133, 1);
        output.WriteFloat(EditorPrice);
      }
      if (AndToken.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(AndToken);
      }
      if (IosToken.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(IosToken);
      }
      if (TicketPrice != 0) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(TicketPrice);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Desc.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Desc);
      }
      if (IapName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(IapName);
      }
      if (Image.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Image);
      }
      if (Price != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Price);
      }
      if (PriceType != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(PriceType);
      }
      if (ProductId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ProductId);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Title);
      }
      if (EditorPrice != 0F) {
        output.WriteRawTag(133, 1);
        output.WriteFloat(EditorPrice);
      }
      if (AndToken.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(AndToken);
      }
      if (IosToken.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(IosToken);
      }
      if (TicketPrice != 0) {
        output.WriteRawTag(152, 1);
        output.WriteInt32(TicketPrice);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (AndToken.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AndToken);
      }
      if (Desc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Desc);
      }
      if (EditorPrice != 0F) {
        size += 2 + 4;
      }
      if (IapName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IapName);
      }
      if (Image.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Image);
      }
      if (IosToken.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(IosToken);
      }
      if (Price != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Price);
      }
      if (PriceType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PriceType);
      }
      if (ProductId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProductId);
      }
      if (TicketPrice != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(TicketPrice);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IAPProduct other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.AndToken.Length != 0) {
        AndToken = other.AndToken;
      }
      if (other.Desc.Length != 0) {
        Desc = other.Desc;
      }
      if (other.EditorPrice != 0F) {
        EditorPrice = other.EditorPrice;
      }
      if (other.IapName.Length != 0) {
        IapName = other.IapName;
      }
      if (other.Image.Length != 0) {
        Image = other.Image;
      }
      if (other.IosToken.Length != 0) {
        IosToken = other.IosToken;
      }
      if (other.Price != 0) {
        Price = other.Price;
      }
      if (other.PriceType != 0) {
        PriceType = other.PriceType;
      }
      if (other.ProductId.Length != 0) {
        ProductId = other.ProductId;
      }
      if (other.TicketPrice != 0) {
        TicketPrice = other.TicketPrice;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Desc = input.ReadString();
            break;
          }
          case 26: {
            IapName = input.ReadString();
            break;
          }
          case 34: {
            Image = input.ReadString();
            break;
          }
          case 40: {
            Price = input.ReadInt32();
            break;
          }
          case 48: {
            PriceType = input.ReadInt32();
            break;
          }
          case 58: {
            ProductId = input.ReadString();
            break;
          }
          case 66: {
            Title = input.ReadString();
            break;
          }
          case 133: {
            EditorPrice = input.ReadFloat();
            break;
          }
          case 138: {
            AndToken = input.ReadString();
            break;
          }
          case 146: {
            IosToken = input.ReadString();
            break;
          }
          case 152: {
            TicketPrice = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Desc = input.ReadString();
            break;
          }
          case 26: {
            IapName = input.ReadString();
            break;
          }
          case 34: {
            Image = input.ReadString();
            break;
          }
          case 40: {
            Price = input.ReadInt32();
            break;
          }
          case 48: {
            PriceType = input.ReadInt32();
            break;
          }
          case 58: {
            ProductId = input.ReadString();
            break;
          }
          case 66: {
            Title = input.ReadString();
            break;
          }
          case 133: {
            EditorPrice = input.ReadFloat();
            break;
          }
          case 138: {
            AndToken = input.ReadString();
            break;
          }
          case 146: {
            IosToken = input.ReadString();
            break;
          }
          case 152: {
            TicketPrice = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class IAPProductMapABValue : pb::IMessage<IAPProductMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<IAPProductMapABValue> _parser = new pb::MessageParser<IAPProductMapABValue>(() => new IAPProductMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IAPProductMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.IAPProductConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IAPProductMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IAPProductMapABValue(IAPProductMapABValue other) : this() {
      iAPProductMap_ = other.iAPProductMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IAPProductMapABValue Clone() {
      return new IAPProductMapABValue(this);
    }

    /// <summary>Field number for the "IAPProductMap" field.</summary>
    public const int IAPProductMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.IAPProduct>.Codec _map_iAPProductMap_codec
        = new pbc::MapField<int, global::fat.rawdata.IAPProduct>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.IAPProduct.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.IAPProduct> iAPProductMap_ = new pbc::MapField<int, global::fat.rawdata.IAPProduct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.IAPProduct> IAPProductMap {
      get { return iAPProductMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IAPProductMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IAPProductMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!IAPProductMap.Equals(other.IAPProductMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= IAPProductMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      iAPProductMap_.WriteTo(output, _map_iAPProductMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      iAPProductMap_.WriteTo(ref output, _map_iAPProductMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += iAPProductMap_.CalculateSize(_map_iAPProductMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IAPProductMapABValue other) {
      if (other == null) {
        return;
      }
      iAPProductMap_.Add(other.iAPProductMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            iAPProductMap_.AddEntriesFrom(input, _map_iAPProductMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            iAPProductMap_.AddEntriesFrom(ref input, _map_iAPProductMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class IAPProductConf : pb::IMessage<IAPProductConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<IAPProductConf> _parser = new pb::MessageParser<IAPProductConf>(() => new IAPProductConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IAPProductConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.IAPProductConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IAPProductConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IAPProductConf(IAPProductConf other) : this() {
      iAPProductMap_ = other.iAPProductMap_.Clone();
      iAPProductMapAB_ = other.iAPProductMapAB_.Clone();
      iAPProductMapABPatch_ = other.iAPProductMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IAPProductConf Clone() {
      return new IAPProductConf(this);
    }

    /// <summary>Field number for the "IAPProductMap" field.</summary>
    public const int IAPProductMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.IAPProduct>.Codec _map_iAPProductMap_codec
        = new pbc::MapField<int, global::fat.rawdata.IAPProduct>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.IAPProduct.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.IAPProduct> iAPProductMap_ = new pbc::MapField<int, global::fat.rawdata.IAPProduct>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.IAPProduct> IAPProductMap {
      get { return iAPProductMap_; }
    }

    /// <summary>Field number for the "IAPProductMapAB" field.</summary>
    public const int IAPProductMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.IAPProductMapABValue>.Codec _map_iAPProductMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.IAPProductMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.IAPProductMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.IAPProductMapABValue> iAPProductMapAB_ = new pbc::MapField<string, global::fat.rawdata.IAPProductMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.IAPProductMapABValue> IAPProductMapAB {
      get { return iAPProductMapAB_; }
    }

    /// <summary>Field number for the "IAPProductMapABPatch" field.</summary>
    public const int IAPProductMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.IAPProductMapABValue>.Codec _map_iAPProductMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.IAPProductMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.IAPProductMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.IAPProductMapABValue> iAPProductMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.IAPProductMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.IAPProductMapABValue> IAPProductMapABPatch {
      get { return iAPProductMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IAPProductConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IAPProductConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!IAPProductMap.Equals(other.IAPProductMap)) return false;
      if (!IAPProductMapAB.Equals(other.IAPProductMapAB)) return false;
      if (!IAPProductMapABPatch.Equals(other.IAPProductMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= IAPProductMap.GetHashCode();
      hash ^= IAPProductMapAB.GetHashCode();
      hash ^= IAPProductMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      iAPProductMap_.WriteTo(output, _map_iAPProductMap_codec);
      iAPProductMapAB_.WriteTo(output, _map_iAPProductMapAB_codec);
      iAPProductMapABPatch_.WriteTo(output, _map_iAPProductMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      iAPProductMap_.WriteTo(ref output, _map_iAPProductMap_codec);
      iAPProductMapAB_.WriteTo(ref output, _map_iAPProductMapAB_codec);
      iAPProductMapABPatch_.WriteTo(ref output, _map_iAPProductMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += iAPProductMap_.CalculateSize(_map_iAPProductMap_codec);
      size += iAPProductMapAB_.CalculateSize(_map_iAPProductMapAB_codec);
      size += iAPProductMapABPatch_.CalculateSize(_map_iAPProductMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IAPProductConf other) {
      if (other == null) {
        return;
      }
      iAPProductMap_.Add(other.iAPProductMap_);
      iAPProductMapAB_.Add(other.iAPProductMapAB_);
      iAPProductMapABPatch_.Add(other.iAPProductMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            iAPProductMap_.AddEntriesFrom(input, _map_iAPProductMap_codec);
            break;
          }
          case 18: {
            iAPProductMapAB_.AddEntriesFrom(input, _map_iAPProductMapAB_codec);
            break;
          }
          case 26: {
            iAPProductMapABPatch_.AddEntriesFrom(input, _map_iAPProductMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            iAPProductMap_.AddEntriesFrom(ref input, _map_iAPProductMap_codec);
            break;
          }
          case 18: {
            iAPProductMapAB_.AddEntriesFrom(ref input, _map_iAPProductMapAB_codec);
            break;
          }
          case 26: {
            iAPProductMapABPatch_.AddEntriesFrom(ref input, _map_iAPProductMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
