// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/LangKoConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/LangKoConf.proto</summary>
  public static partial class LangKoConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/LangKoConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LangKoConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChhyYXdkYXRhL0xhbmdLb0NvbmYucHJvdG8SB3Jhd2RhdGEiIgoGTGFuZ0tv",
            "EgoKAkxLGAEgASgJEgwKBE5hbWUYAiABKAkiOgoSTGFuZ0tvU2xpY2VBQlZh",
            "bHVlEiQKC0xhbmdLb1NsaWNlGAEgAygLMg8ucmF3ZGF0YS5MYW5nS28i5QIK",
            "CkxhbmdLb0NvbmYSJAoLTGFuZ0tvU2xpY2UYASADKAsyDy5yYXdkYXRhLkxh",
            "bmdLbxI9Cg1MYW5nS29TbGljZUFCGAIgAygLMiYucmF3ZGF0YS5MYW5nS29D",
            "b25mLkxhbmdLb1NsaWNlQUJFbnRyeRJHChJMYW5nS29TbGljZUFCUGF0Y2gY",
            "AyADKAsyKy5yYXdkYXRhLkxhbmdLb0NvbmYuTGFuZ0tvU2xpY2VBQlBhdGNo",
            "RW50cnkaUQoSTGFuZ0tvU2xpY2VBQkVudHJ5EgsKA2tleRgBIAEoCRIqCgV2",
            "YWx1ZRgCIAEoCzIbLnJhd2RhdGEuTGFuZ0tvU2xpY2VBQlZhbHVlOgI4ARpW",
            "ChdMYW5nS29TbGljZUFCUGF0Y2hFbnRyeRILCgNrZXkYASABKAkSKgoFdmFs",
            "dWUYAiABKAsyGy5yYXdkYXRhLkxhbmdLb1NsaWNlQUJWYWx1ZToCOAFCPVot",
            "Z2l0bGFiLmZ1bnBsdXMuaW8vZmF0L2NvbmYvZ2VuL2dvbGFuZy9yYXdkYXRh",
            "qgILZmF0LnJhd2RhdGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.LangKo), global::fat.rawdata.LangKo.Parser, new[]{ "LK", "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.LangKoSliceABValue), global::fat.rawdata.LangKoSliceABValue.Parser, new[]{ "LangKoSlice" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.LangKoConf), global::fat.rawdata.LangKoConf.Parser, new[]{ "LangKoSlice", "LangKoSliceAB", "LangKoSliceABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="LangKo",table="LangKoSlice",table_wrapper="LangKoConf",map="false",map_key_type="",data="LangKoConf")
  /// annotation@ab(table_ab="LangKoSliceAB",table_ab_patch="LangKoSliceABPatch",table_ab_value="LangKoSliceABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// </summary>
  public sealed partial class LangKo : pb::IMessage<LangKo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LangKo> _parser = new pb::MessageParser<LangKo>(() => new LangKo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LangKo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.LangKoConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangKo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangKo(LangKo other) : this() {
      lK_ = other.lK_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangKo Clone() {
      return new LangKo(this);
    }

    /// <summary>Field number for the "LK" field.</summary>
    public const int LKFieldNumber = 1;
    private string lK_ = "";
    /// <summary>
    /// key
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LK {
      get { return lK_; }
      set {
        lK_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    /// 韩语
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LangKo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LangKo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LK != other.LK) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LK.Length != 0) hash ^= LK.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (LK.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LK);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (LK.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LK);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LK.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LK);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LangKo other) {
      if (other == null) {
        return;
      }
      if (other.LK.Length != 0) {
        LK = other.LK;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LK = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            LK = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LangKoSliceABValue : pb::IMessage<LangKoSliceABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LangKoSliceABValue> _parser = new pb::MessageParser<LangKoSliceABValue>(() => new LangKoSliceABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LangKoSliceABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.LangKoConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangKoSliceABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangKoSliceABValue(LangKoSliceABValue other) : this() {
      langKoSlice_ = other.langKoSlice_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangKoSliceABValue Clone() {
      return new LangKoSliceABValue(this);
    }

    /// <summary>Field number for the "LangKoSlice" field.</summary>
    public const int LangKoSliceFieldNumber = 1;
    private static readonly pb::FieldCodec<global::fat.rawdata.LangKo> _repeated_langKoSlice_codec
        = pb::FieldCodec.ForMessage(10, global::fat.rawdata.LangKo.Parser);
    private readonly pbc::RepeatedField<global::fat.rawdata.LangKo> langKoSlice_ = new pbc::RepeatedField<global::fat.rawdata.LangKo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::fat.rawdata.LangKo> LangKoSlice {
      get { return langKoSlice_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LangKoSliceABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LangKoSliceABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!langKoSlice_.Equals(other.langKoSlice_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= langKoSlice_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      langKoSlice_.WriteTo(output, _repeated_langKoSlice_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      langKoSlice_.WriteTo(ref output, _repeated_langKoSlice_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += langKoSlice_.CalculateSize(_repeated_langKoSlice_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LangKoSliceABValue other) {
      if (other == null) {
        return;
      }
      langKoSlice_.Add(other.langKoSlice_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            langKoSlice_.AddEntriesFrom(input, _repeated_langKoSlice_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            langKoSlice_.AddEntriesFrom(ref input, _repeated_langKoSlice_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LangKoConf : pb::IMessage<LangKoConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LangKoConf> _parser = new pb::MessageParser<LangKoConf>(() => new LangKoConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LangKoConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.LangKoConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangKoConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangKoConf(LangKoConf other) : this() {
      langKoSlice_ = other.langKoSlice_.Clone();
      langKoSliceAB_ = other.langKoSliceAB_.Clone();
      langKoSliceABPatch_ = other.langKoSliceABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangKoConf Clone() {
      return new LangKoConf(this);
    }

    /// <summary>Field number for the "LangKoSlice" field.</summary>
    public const int LangKoSliceFieldNumber = 1;
    private static readonly pb::FieldCodec<global::fat.rawdata.LangKo> _repeated_langKoSlice_codec
        = pb::FieldCodec.ForMessage(10, global::fat.rawdata.LangKo.Parser);
    private readonly pbc::RepeatedField<global::fat.rawdata.LangKo> langKoSlice_ = new pbc::RepeatedField<global::fat.rawdata.LangKo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::fat.rawdata.LangKo> LangKoSlice {
      get { return langKoSlice_; }
    }

    /// <summary>Field number for the "LangKoSliceAB" field.</summary>
    public const int LangKoSliceABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.LangKoSliceABValue>.Codec _map_langKoSliceAB_codec
        = new pbc::MapField<string, global::fat.rawdata.LangKoSliceABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.LangKoSliceABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.LangKoSliceABValue> langKoSliceAB_ = new pbc::MapField<string, global::fat.rawdata.LangKoSliceABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.LangKoSliceABValue> LangKoSliceAB {
      get { return langKoSliceAB_; }
    }

    /// <summary>Field number for the "LangKoSliceABPatch" field.</summary>
    public const int LangKoSliceABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.LangKoSliceABValue>.Codec _map_langKoSliceABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.LangKoSliceABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.LangKoSliceABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.LangKoSliceABValue> langKoSliceABPatch_ = new pbc::MapField<string, global::fat.rawdata.LangKoSliceABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.LangKoSliceABValue> LangKoSliceABPatch {
      get { return langKoSliceABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LangKoConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LangKoConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!langKoSlice_.Equals(other.langKoSlice_)) return false;
      if (!LangKoSliceAB.Equals(other.LangKoSliceAB)) return false;
      if (!LangKoSliceABPatch.Equals(other.LangKoSliceABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= langKoSlice_.GetHashCode();
      hash ^= LangKoSliceAB.GetHashCode();
      hash ^= LangKoSliceABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      langKoSlice_.WriteTo(output, _repeated_langKoSlice_codec);
      langKoSliceAB_.WriteTo(output, _map_langKoSliceAB_codec);
      langKoSliceABPatch_.WriteTo(output, _map_langKoSliceABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      langKoSlice_.WriteTo(ref output, _repeated_langKoSlice_codec);
      langKoSliceAB_.WriteTo(ref output, _map_langKoSliceAB_codec);
      langKoSliceABPatch_.WriteTo(ref output, _map_langKoSliceABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += langKoSlice_.CalculateSize(_repeated_langKoSlice_codec);
      size += langKoSliceAB_.CalculateSize(_map_langKoSliceAB_codec);
      size += langKoSliceABPatch_.CalculateSize(_map_langKoSliceABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LangKoConf other) {
      if (other == null) {
        return;
      }
      langKoSlice_.Add(other.langKoSlice_);
      langKoSliceAB_.Add(other.langKoSliceAB_);
      langKoSliceABPatch_.Add(other.langKoSliceABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            langKoSlice_.AddEntriesFrom(input, _repeated_langKoSlice_codec);
            break;
          }
          case 18: {
            langKoSliceAB_.AddEntriesFrom(input, _map_langKoSliceAB_codec);
            break;
          }
          case 26: {
            langKoSliceABPatch_.AddEntriesFrom(input, _map_langKoSliceABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            langKoSlice_.AddEntriesFrom(ref input, _repeated_langKoSlice_codec);
            break;
          }
          case 18: {
            langKoSliceAB_.AddEntriesFrom(ref input, _map_langKoSliceAB_codec);
            break;
          }
          case 26: {
            langKoSliceABPatch_.AddEntriesFrom(ref input, _map_langKoSliceABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
