// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventWishUponConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventWishUponConf.proto</summary>
  public static partial class EventWishUponConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventWishUponConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventWishUponConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch9yYXdkYXRhL0V2ZW50V2lzaFVwb25Db25mLnByb3RvEgdyYXdkYXRhImQK",
            "DUV2ZW50V2lzaFVwb24SCgoCaWQYASABKAUSEgoKZW5kVGhlbWVJZBgCIAEo",
            "BRIRCglldmVudFRpbWUYAyABKAUSDwoHZ3JhZGVJZBgEIAEoBRIPCgd0aGVt",
            "ZUlkGAUgASgFIrwBChdFdmVudFdpc2hVcG9uTWFwQUJWYWx1ZRJQChBFdmVu",
            "dFdpc2hVcG9uTWFwGAEgAygLMjYucmF3ZGF0YS5FdmVudFdpc2hVcG9uTWFw",
            "QUJWYWx1ZS5FdmVudFdpc2hVcG9uTWFwRW50cnkaTwoVRXZlbnRXaXNoVXBv",
            "bk1hcEVudHJ5EgsKA2tleRgBIAEoBRIlCgV2YWx1ZRgCIAEoCzIWLnJhd2Rh",
            "dGEuRXZlbnRXaXNoVXBvbjoCOAEimQQKEUV2ZW50V2lzaFVwb25Db25mEkoK",
            "EEV2ZW50V2lzaFVwb25NYXAYASADKAsyMC5yYXdkYXRhLkV2ZW50V2lzaFVw",
            "b25Db25mLkV2ZW50V2lzaFVwb25NYXBFbnRyeRJOChJFdmVudFdpc2hVcG9u",
            "TWFwQUIYAiADKAsyMi5yYXdkYXRhLkV2ZW50V2lzaFVwb25Db25mLkV2ZW50",
            "V2lzaFVwb25NYXBBQkVudHJ5ElgKF0V2ZW50V2lzaFVwb25NYXBBQlBhdGNo",
            "GAMgAygLMjcucmF3ZGF0YS5FdmVudFdpc2hVcG9uQ29uZi5FdmVudFdpc2hV",
            "cG9uTWFwQUJQYXRjaEVudHJ5Gk8KFUV2ZW50V2lzaFVwb25NYXBFbnRyeRIL",
            "CgNrZXkYASABKAUSJQoFdmFsdWUYAiABKAsyFi5yYXdkYXRhLkV2ZW50V2lz",
            "aFVwb246AjgBGlsKF0V2ZW50V2lzaFVwb25NYXBBQkVudHJ5EgsKA2tleRgB",
            "IAEoCRIvCgV2YWx1ZRgCIAEoCzIgLnJhd2RhdGEuRXZlbnRXaXNoVXBvbk1h",
            "cEFCVmFsdWU6AjgBGmAKHEV2ZW50V2lzaFVwb25NYXBBQlBhdGNoRW50cnkS",
            "CwoDa2V5GAEgASgJEi8KBXZhbHVlGAIgASgLMiAucmF3ZGF0YS5FdmVudFdp",
            "c2hVcG9uTWFwQUJWYWx1ZToCOAFCPVotZ2l0bGFiLmZ1bnBsdXMuaW8vZmF0",
            "L2NvbmYvZ2VuL2dvbGFuZy9yYXdkYXRhqgILZmF0LnJhd2RhdGFiBnByb3Rv",
            "Mw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventWishUpon), global::fat.rawdata.EventWishUpon.Parser, new[]{ "Id", "EndThemeId", "EventTime", "GradeId", "ThemeId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventWishUponMapABValue), global::fat.rawdata.EventWishUponMapABValue.Parser, new[]{ "EventWishUponMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventWishUponConf), global::fat.rawdata.EventWishUponConf.Parser, new[]{ "EventWishUponMap", "EventWishUponMapAB", "EventWishUponMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventWishUpon",table="EventWishUponMap",table_wrapper="EventWishUponConf",map="true",map_key_type="int32",data="EventWishUponConf")
  /// annotation@ab(table_ab="EventWishUponMapAB",table_ab_patch="EventWishUponMapABPatch",table_ab_value="EventWishUponMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventWishUpon(id="id")
  /// </summary>
  public sealed partial class EventWishUpon : pb::IMessage<EventWishUpon>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventWishUpon> _parser = new pb::MessageParser<EventWishUpon>(() => new EventWishUpon());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventWishUpon> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventWishUponConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishUpon() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishUpon(EventWishUpon other) : this() {
      id_ = other.id_;
      endThemeId_ = other.endThemeId_;
      eventTime_ = other.eventTime_;
      gradeId_ = other.gradeId_;
      themeId_ = other.themeId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishUpon Clone() {
      return new EventWishUpon(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 活动id
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "endThemeId" field.</summary>
    public const int EndThemeIdFieldNumber = 2;
    private int endThemeId_;
    /// <summary>
    /// 结束补领界面id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EndThemeId {
      get { return endThemeId_; }
      set {
        endThemeId_ = value;
      }
    }

    /// <summary>Field number for the "eventTime" field.</summary>
    public const int EventTimeFieldNumber = 3;
    private int eventTime_;
    /// <summary>
    /// 活动持续时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EventTime {
      get { return eventTime_; }
      set {
        eventTime_ = value;
      }
    }

    /// <summary>Field number for the "gradeId" field.</summary>
    public const int GradeIdFieldNumber = 4;
    private int gradeId_;
    /// <summary>
    /// 分层
    /// （GradeIndexMapping.id）
    /// （EventWishUponDetail.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GradeId {
      get { return gradeId_; }
      set {
        gradeId_ = value;
      }
    }

    /// <summary>Field number for the "themeId" field.</summary>
    public const int ThemeIdFieldNumber = 5;
    private int themeId_;
    /// <summary>
    /// 活动界面id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ThemeId {
      get { return themeId_; }
      set {
        themeId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventWishUpon);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventWishUpon other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (EndThemeId != other.EndThemeId) return false;
      if (EventTime != other.EventTime) return false;
      if (GradeId != other.GradeId) return false;
      if (ThemeId != other.ThemeId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (EndThemeId != 0) hash ^= EndThemeId.GetHashCode();
      if (EventTime != 0) hash ^= EventTime.GetHashCode();
      if (GradeId != 0) hash ^= GradeId.GetHashCode();
      if (ThemeId != 0) hash ^= ThemeId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (EndThemeId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(EndThemeId);
      }
      if (EventTime != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(EventTime);
      }
      if (GradeId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(GradeId);
      }
      if (ThemeId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ThemeId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (EndThemeId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(EndThemeId);
      }
      if (EventTime != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(EventTime);
      }
      if (GradeId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(GradeId);
      }
      if (ThemeId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ThemeId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (EndThemeId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EndThemeId);
      }
      if (EventTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EventTime);
      }
      if (GradeId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GradeId);
      }
      if (ThemeId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ThemeId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventWishUpon other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.EndThemeId != 0) {
        EndThemeId = other.EndThemeId;
      }
      if (other.EventTime != 0) {
        EventTime = other.EventTime;
      }
      if (other.GradeId != 0) {
        GradeId = other.GradeId;
      }
      if (other.ThemeId != 0) {
        ThemeId = other.ThemeId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            EndThemeId = input.ReadInt32();
            break;
          }
          case 24: {
            EventTime = input.ReadInt32();
            break;
          }
          case 32: {
            GradeId = input.ReadInt32();
            break;
          }
          case 40: {
            ThemeId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            EndThemeId = input.ReadInt32();
            break;
          }
          case 24: {
            EventTime = input.ReadInt32();
            break;
          }
          case 32: {
            GradeId = input.ReadInt32();
            break;
          }
          case 40: {
            ThemeId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventWishUponMapABValue : pb::IMessage<EventWishUponMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventWishUponMapABValue> _parser = new pb::MessageParser<EventWishUponMapABValue>(() => new EventWishUponMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventWishUponMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventWishUponConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishUponMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishUponMapABValue(EventWishUponMapABValue other) : this() {
      eventWishUponMap_ = other.eventWishUponMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishUponMapABValue Clone() {
      return new EventWishUponMapABValue(this);
    }

    /// <summary>Field number for the "EventWishUponMap" field.</summary>
    public const int EventWishUponMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventWishUpon>.Codec _map_eventWishUponMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventWishUpon>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventWishUpon.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventWishUpon> eventWishUponMap_ = new pbc::MapField<int, global::fat.rawdata.EventWishUpon>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventWishUpon> EventWishUponMap {
      get { return eventWishUponMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventWishUponMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventWishUponMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventWishUponMap.Equals(other.EventWishUponMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventWishUponMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventWishUponMap_.WriteTo(output, _map_eventWishUponMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventWishUponMap_.WriteTo(ref output, _map_eventWishUponMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventWishUponMap_.CalculateSize(_map_eventWishUponMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventWishUponMapABValue other) {
      if (other == null) {
        return;
      }
      eventWishUponMap_.Add(other.eventWishUponMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventWishUponMap_.AddEntriesFrom(input, _map_eventWishUponMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventWishUponMap_.AddEntriesFrom(ref input, _map_eventWishUponMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventWishUponConf : pb::IMessage<EventWishUponConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventWishUponConf> _parser = new pb::MessageParser<EventWishUponConf>(() => new EventWishUponConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventWishUponConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventWishUponConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishUponConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishUponConf(EventWishUponConf other) : this() {
      eventWishUponMap_ = other.eventWishUponMap_.Clone();
      eventWishUponMapAB_ = other.eventWishUponMapAB_.Clone();
      eventWishUponMapABPatch_ = other.eventWishUponMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishUponConf Clone() {
      return new EventWishUponConf(this);
    }

    /// <summary>Field number for the "EventWishUponMap" field.</summary>
    public const int EventWishUponMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventWishUpon>.Codec _map_eventWishUponMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventWishUpon>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventWishUpon.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventWishUpon> eventWishUponMap_ = new pbc::MapField<int, global::fat.rawdata.EventWishUpon>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventWishUpon> EventWishUponMap {
      get { return eventWishUponMap_; }
    }

    /// <summary>Field number for the "EventWishUponMapAB" field.</summary>
    public const int EventWishUponMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventWishUponMapABValue>.Codec _map_eventWishUponMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventWishUponMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventWishUponMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventWishUponMapABValue> eventWishUponMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventWishUponMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventWishUponMapABValue> EventWishUponMapAB {
      get { return eventWishUponMapAB_; }
    }

    /// <summary>Field number for the "EventWishUponMapABPatch" field.</summary>
    public const int EventWishUponMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventWishUponMapABValue>.Codec _map_eventWishUponMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventWishUponMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventWishUponMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventWishUponMapABValue> eventWishUponMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventWishUponMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventWishUponMapABValue> EventWishUponMapABPatch {
      get { return eventWishUponMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventWishUponConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventWishUponConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventWishUponMap.Equals(other.EventWishUponMap)) return false;
      if (!EventWishUponMapAB.Equals(other.EventWishUponMapAB)) return false;
      if (!EventWishUponMapABPatch.Equals(other.EventWishUponMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventWishUponMap.GetHashCode();
      hash ^= EventWishUponMapAB.GetHashCode();
      hash ^= EventWishUponMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventWishUponMap_.WriteTo(output, _map_eventWishUponMap_codec);
      eventWishUponMapAB_.WriteTo(output, _map_eventWishUponMapAB_codec);
      eventWishUponMapABPatch_.WriteTo(output, _map_eventWishUponMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventWishUponMap_.WriteTo(ref output, _map_eventWishUponMap_codec);
      eventWishUponMapAB_.WriteTo(ref output, _map_eventWishUponMapAB_codec);
      eventWishUponMapABPatch_.WriteTo(ref output, _map_eventWishUponMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventWishUponMap_.CalculateSize(_map_eventWishUponMap_codec);
      size += eventWishUponMapAB_.CalculateSize(_map_eventWishUponMapAB_codec);
      size += eventWishUponMapABPatch_.CalculateSize(_map_eventWishUponMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventWishUponConf other) {
      if (other == null) {
        return;
      }
      eventWishUponMap_.Add(other.eventWishUponMap_);
      eventWishUponMapAB_.Add(other.eventWishUponMapAB_);
      eventWishUponMapABPatch_.Add(other.eventWishUponMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventWishUponMap_.AddEntriesFrom(input, _map_eventWishUponMap_codec);
            break;
          }
          case 18: {
            eventWishUponMapAB_.AddEntriesFrom(input, _map_eventWishUponMapAB_codec);
            break;
          }
          case 26: {
            eventWishUponMapABPatch_.AddEntriesFrom(input, _map_eventWishUponMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventWishUponMap_.AddEntriesFrom(ref input, _map_eventWishUponMap_codec);
            break;
          }
          case 18: {
            eventWishUponMapAB_.AddEntriesFrom(ref input, _map_eventWishUponMapAB_codec);
            break;
          }
          case 26: {
            eventWishUponMapABPatch_.AddEntriesFrom(ref input, _map_eventWishUponMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
