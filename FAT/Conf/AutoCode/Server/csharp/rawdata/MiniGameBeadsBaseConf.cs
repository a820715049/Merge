// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/MiniGameBeadsBaseConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/MiniGameBeadsBaseConf.proto</summary>
  public static partial class MiniGameBeadsBaseConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/MiniGameBeadsBaseConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MiniGameBeadsBaseConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiNyYXdkYXRhL01pbmlHYW1lQmVhZHNCYXNlQ29uZi5wcm90bxIHcmF3ZGF0",
            "YRoXcmF3ZGF0YS9CZWFkc1R5cGUucHJvdG8iWQoRTWluaUdhbWVCZWFkc0Jh",
            "c2USCgoCaWQYASABKAUSEQoJYmFzZUltYWdlGAIgASgJEiUKCWJlYWRzVHlw",
            "ZRgDIAEoDjISLnJhd2RhdGEuQmVhZHNUeXBlItQBChtNaW5pR2FtZUJlYWRz",
            "QmFzZU1hcEFCVmFsdWUSXAoUTWluaUdhbWVCZWFkc0Jhc2VNYXAYASADKAsy",
            "Pi5yYXdkYXRhLk1pbmlHYW1lQmVhZHNCYXNlTWFwQUJWYWx1ZS5NaW5pR2Ft",
            "ZUJlYWRzQmFzZU1hcEVudHJ5GlcKGU1pbmlHYW1lQmVhZHNCYXNlTWFwRW50",
            "cnkSCwoDa2V5GAEgASgFEikKBXZhbHVlGAIgASgLMhoucmF3ZGF0YS5NaW5p",
            "R2FtZUJlYWRzQmFzZToCOAEi2QQKFU1pbmlHYW1lQmVhZHNCYXNlQ29uZhJW",
            "ChRNaW5pR2FtZUJlYWRzQmFzZU1hcBgBIAMoCzI4LnJhd2RhdGEuTWluaUdh",
            "bWVCZWFkc0Jhc2VDb25mLk1pbmlHYW1lQmVhZHNCYXNlTWFwRW50cnkSWgoW",
            "TWluaUdhbWVCZWFkc0Jhc2VNYXBBQhgCIAMoCzI6LnJhd2RhdGEuTWluaUdh",
            "bWVCZWFkc0Jhc2VDb25mLk1pbmlHYW1lQmVhZHNCYXNlTWFwQUJFbnRyeRJk",
            "ChtNaW5pR2FtZUJlYWRzQmFzZU1hcEFCUGF0Y2gYAyADKAsyPy5yYXdkYXRh",
            "Lk1pbmlHYW1lQmVhZHNCYXNlQ29uZi5NaW5pR2FtZUJlYWRzQmFzZU1hcEFC",
            "UGF0Y2hFbnRyeRpXChlNaW5pR2FtZUJlYWRzQmFzZU1hcEVudHJ5EgsKA2tl",
            "eRgBIAEoBRIpCgV2YWx1ZRgCIAEoCzIaLnJhd2RhdGEuTWluaUdhbWVCZWFk",
            "c0Jhc2U6AjgBGmMKG01pbmlHYW1lQmVhZHNCYXNlTWFwQUJFbnRyeRILCgNr",
            "ZXkYASABKAkSMwoFdmFsdWUYAiABKAsyJC5yYXdkYXRhLk1pbmlHYW1lQmVh",
            "ZHNCYXNlTWFwQUJWYWx1ZToCOAEaaAogTWluaUdhbWVCZWFkc0Jhc2VNYXBB",
            "QlBhdGNoRW50cnkSCwoDa2V5GAEgASgJEjMKBXZhbHVlGAIgASgLMiQucmF3",
            "ZGF0YS5NaW5pR2FtZUJlYWRzQmFzZU1hcEFCVmFsdWU6AjgBQj1aLWdpdGxh",
            "Yi5mdW5wbHVzLmlvL2ZhdC9jb25mL2dlbi9nb2xhbmcvcmF3ZGF0YaoCC2Zh",
            "dC5yYXdkYXRhYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::fat.rawdata.BeadsTypeReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.MiniGameBeadsBase), global::fat.rawdata.MiniGameBeadsBase.Parser, new[]{ "Id", "BaseImage", "BeadsType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.MiniGameBeadsBaseMapABValue), global::fat.rawdata.MiniGameBeadsBaseMapABValue.Parser, new[]{ "MiniGameBeadsBaseMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.MiniGameBeadsBaseConf), global::fat.rawdata.MiniGameBeadsBaseConf.Parser, new[]{ "MiniGameBeadsBaseMap", "MiniGameBeadsBaseMapAB", "MiniGameBeadsBaseMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="MiniGameBeadsBase",table="MiniGameBeadsBaseMap",table_wrapper="MiniGameBeadsBaseConf",map="true",map_key_type="int32",data="MiniGameBeadsBaseConf")
  /// annotation@ab(table_ab="MiniGameBeadsBaseMapAB",table_ab_patch="MiniGameBeadsBaseMapABPatch",table_ab_value="MiniGameBeadsBaseMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@MiniGameBeadsBase(id="id")
  /// </summary>
  public sealed partial class MiniGameBeadsBase : pb::IMessage<MiniGameBeadsBase>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MiniGameBeadsBase> _parser = new pb::MessageParser<MiniGameBeadsBase>(() => new MiniGameBeadsBase());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MiniGameBeadsBase> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.MiniGameBeadsBaseConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MiniGameBeadsBase() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MiniGameBeadsBase(MiniGameBeadsBase other) : this() {
      id_ = other.id_;
      baseImage_ = other.baseImage_;
      beadsType_ = other.beadsType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MiniGameBeadsBase Clone() {
      return new MiniGameBeadsBase(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 基座ID
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "baseImage" field.</summary>
    public const int BaseImageFieldNumber = 2;
    private string baseImage_ = "";
    /// <summary>
    /// 基座图
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BaseImage {
      get { return baseImage_; }
      set {
        baseImage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "beadsType" field.</summary>
    public const int BeadsTypeFieldNumber = 3;
    private global::fat.rawdata.BeadsType beadsType_ = global::fat.rawdata.BeadsType.Default;
    /// <summary>
    /// 绑定的珠子类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::fat.rawdata.BeadsType BeadsType {
      get { return beadsType_; }
      set {
        beadsType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MiniGameBeadsBase);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MiniGameBeadsBase other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (BaseImage != other.BaseImage) return false;
      if (BeadsType != other.BeadsType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (BaseImage.Length != 0) hash ^= BaseImage.GetHashCode();
      if (BeadsType != global::fat.rawdata.BeadsType.Default) hash ^= BeadsType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (BaseImage.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(BaseImage);
      }
      if (BeadsType != global::fat.rawdata.BeadsType.Default) {
        output.WriteRawTag(24);
        output.WriteEnum((int) BeadsType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (BaseImage.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(BaseImage);
      }
      if (BeadsType != global::fat.rawdata.BeadsType.Default) {
        output.WriteRawTag(24);
        output.WriteEnum((int) BeadsType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (BaseImage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BaseImage);
      }
      if (BeadsType != global::fat.rawdata.BeadsType.Default) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BeadsType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MiniGameBeadsBase other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.BaseImage.Length != 0) {
        BaseImage = other.BaseImage;
      }
      if (other.BeadsType != global::fat.rawdata.BeadsType.Default) {
        BeadsType = other.BeadsType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            BaseImage = input.ReadString();
            break;
          }
          case 24: {
            BeadsType = (global::fat.rawdata.BeadsType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            BaseImage = input.ReadString();
            break;
          }
          case 24: {
            BeadsType = (global::fat.rawdata.BeadsType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MiniGameBeadsBaseMapABValue : pb::IMessage<MiniGameBeadsBaseMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MiniGameBeadsBaseMapABValue> _parser = new pb::MessageParser<MiniGameBeadsBaseMapABValue>(() => new MiniGameBeadsBaseMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MiniGameBeadsBaseMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.MiniGameBeadsBaseConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MiniGameBeadsBaseMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MiniGameBeadsBaseMapABValue(MiniGameBeadsBaseMapABValue other) : this() {
      miniGameBeadsBaseMap_ = other.miniGameBeadsBaseMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MiniGameBeadsBaseMapABValue Clone() {
      return new MiniGameBeadsBaseMapABValue(this);
    }

    /// <summary>Field number for the "MiniGameBeadsBaseMap" field.</summary>
    public const int MiniGameBeadsBaseMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.MiniGameBeadsBase>.Codec _map_miniGameBeadsBaseMap_codec
        = new pbc::MapField<int, global::fat.rawdata.MiniGameBeadsBase>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.MiniGameBeadsBase.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.MiniGameBeadsBase> miniGameBeadsBaseMap_ = new pbc::MapField<int, global::fat.rawdata.MiniGameBeadsBase>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.MiniGameBeadsBase> MiniGameBeadsBaseMap {
      get { return miniGameBeadsBaseMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MiniGameBeadsBaseMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MiniGameBeadsBaseMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!MiniGameBeadsBaseMap.Equals(other.MiniGameBeadsBaseMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= MiniGameBeadsBaseMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      miniGameBeadsBaseMap_.WriteTo(output, _map_miniGameBeadsBaseMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      miniGameBeadsBaseMap_.WriteTo(ref output, _map_miniGameBeadsBaseMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += miniGameBeadsBaseMap_.CalculateSize(_map_miniGameBeadsBaseMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MiniGameBeadsBaseMapABValue other) {
      if (other == null) {
        return;
      }
      miniGameBeadsBaseMap_.Add(other.miniGameBeadsBaseMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            miniGameBeadsBaseMap_.AddEntriesFrom(input, _map_miniGameBeadsBaseMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            miniGameBeadsBaseMap_.AddEntriesFrom(ref input, _map_miniGameBeadsBaseMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MiniGameBeadsBaseConf : pb::IMessage<MiniGameBeadsBaseConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MiniGameBeadsBaseConf> _parser = new pb::MessageParser<MiniGameBeadsBaseConf>(() => new MiniGameBeadsBaseConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MiniGameBeadsBaseConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.MiniGameBeadsBaseConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MiniGameBeadsBaseConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MiniGameBeadsBaseConf(MiniGameBeadsBaseConf other) : this() {
      miniGameBeadsBaseMap_ = other.miniGameBeadsBaseMap_.Clone();
      miniGameBeadsBaseMapAB_ = other.miniGameBeadsBaseMapAB_.Clone();
      miniGameBeadsBaseMapABPatch_ = other.miniGameBeadsBaseMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MiniGameBeadsBaseConf Clone() {
      return new MiniGameBeadsBaseConf(this);
    }

    /// <summary>Field number for the "MiniGameBeadsBaseMap" field.</summary>
    public const int MiniGameBeadsBaseMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.MiniGameBeadsBase>.Codec _map_miniGameBeadsBaseMap_codec
        = new pbc::MapField<int, global::fat.rawdata.MiniGameBeadsBase>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.MiniGameBeadsBase.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.MiniGameBeadsBase> miniGameBeadsBaseMap_ = new pbc::MapField<int, global::fat.rawdata.MiniGameBeadsBase>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.MiniGameBeadsBase> MiniGameBeadsBaseMap {
      get { return miniGameBeadsBaseMap_; }
    }

    /// <summary>Field number for the "MiniGameBeadsBaseMapAB" field.</summary>
    public const int MiniGameBeadsBaseMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.MiniGameBeadsBaseMapABValue>.Codec _map_miniGameBeadsBaseMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.MiniGameBeadsBaseMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.MiniGameBeadsBaseMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.MiniGameBeadsBaseMapABValue> miniGameBeadsBaseMapAB_ = new pbc::MapField<string, global::fat.rawdata.MiniGameBeadsBaseMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.MiniGameBeadsBaseMapABValue> MiniGameBeadsBaseMapAB {
      get { return miniGameBeadsBaseMapAB_; }
    }

    /// <summary>Field number for the "MiniGameBeadsBaseMapABPatch" field.</summary>
    public const int MiniGameBeadsBaseMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.MiniGameBeadsBaseMapABValue>.Codec _map_miniGameBeadsBaseMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.MiniGameBeadsBaseMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.MiniGameBeadsBaseMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.MiniGameBeadsBaseMapABValue> miniGameBeadsBaseMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.MiniGameBeadsBaseMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.MiniGameBeadsBaseMapABValue> MiniGameBeadsBaseMapABPatch {
      get { return miniGameBeadsBaseMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MiniGameBeadsBaseConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MiniGameBeadsBaseConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!MiniGameBeadsBaseMap.Equals(other.MiniGameBeadsBaseMap)) return false;
      if (!MiniGameBeadsBaseMapAB.Equals(other.MiniGameBeadsBaseMapAB)) return false;
      if (!MiniGameBeadsBaseMapABPatch.Equals(other.MiniGameBeadsBaseMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= MiniGameBeadsBaseMap.GetHashCode();
      hash ^= MiniGameBeadsBaseMapAB.GetHashCode();
      hash ^= MiniGameBeadsBaseMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      miniGameBeadsBaseMap_.WriteTo(output, _map_miniGameBeadsBaseMap_codec);
      miniGameBeadsBaseMapAB_.WriteTo(output, _map_miniGameBeadsBaseMapAB_codec);
      miniGameBeadsBaseMapABPatch_.WriteTo(output, _map_miniGameBeadsBaseMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      miniGameBeadsBaseMap_.WriteTo(ref output, _map_miniGameBeadsBaseMap_codec);
      miniGameBeadsBaseMapAB_.WriteTo(ref output, _map_miniGameBeadsBaseMapAB_codec);
      miniGameBeadsBaseMapABPatch_.WriteTo(ref output, _map_miniGameBeadsBaseMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += miniGameBeadsBaseMap_.CalculateSize(_map_miniGameBeadsBaseMap_codec);
      size += miniGameBeadsBaseMapAB_.CalculateSize(_map_miniGameBeadsBaseMapAB_codec);
      size += miniGameBeadsBaseMapABPatch_.CalculateSize(_map_miniGameBeadsBaseMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MiniGameBeadsBaseConf other) {
      if (other == null) {
        return;
      }
      miniGameBeadsBaseMap_.Add(other.miniGameBeadsBaseMap_);
      miniGameBeadsBaseMapAB_.Add(other.miniGameBeadsBaseMapAB_);
      miniGameBeadsBaseMapABPatch_.Add(other.miniGameBeadsBaseMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            miniGameBeadsBaseMap_.AddEntriesFrom(input, _map_miniGameBeadsBaseMap_codec);
            break;
          }
          case 18: {
            miniGameBeadsBaseMapAB_.AddEntriesFrom(input, _map_miniGameBeadsBaseMapAB_codec);
            break;
          }
          case 26: {
            miniGameBeadsBaseMapABPatch_.AddEntriesFrom(input, _map_miniGameBeadsBaseMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            miniGameBeadsBaseMap_.AddEntriesFrom(ref input, _map_miniGameBeadsBaseMap_codec);
            break;
          }
          case 18: {
            miniGameBeadsBaseMapAB_.AddEntriesFrom(ref input, _map_miniGameBeadsBaseMapAB_codec);
            break;
          }
          case 26: {
            miniGameBeadsBaseMapABPatch_.AddEntriesFrom(ref input, _map_miniGameBeadsBaseMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
