// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/ObjBasicConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/ObjBasicConf.proto</summary>
  public static partial class ObjBasicConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/ObjBasicConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ObjBasicConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChpyYXdkYXRhL09iakJhc2ljQ29uZi5wcm90bxIHcmF3ZGF0YRoWcmF3ZGF0",
            "YS9Db2luVHlwZS5wcm90byKnAQoIT2JqQmFzaWMSCgoCaWQYASABKAUSDgoG",
            "X3RhZ3NfGAIgAygJEhEKCWJsYWNrSWNvbhgDIAEoCRIMCgRkZXNjGAQgASgJ",
            "EgwKBGljb24YBSABKAkSDQoFaW1hZ2UYBiABKAkSDAoEbmFtZRgHIAEoCRIN",
            "CgVwcmljZRgIIAEoBRIkCglwcmljZVR5cGUYCSABKA4yES5yYXdkYXRhLkNv",
            "aW5UeXBlIp4BChJPYmpCYXNpY01hcEFCVmFsdWUSQQoLT2JqQmFzaWNNYXAY",
            "ASADKAsyLC5yYXdkYXRhLk9iakJhc2ljTWFwQUJWYWx1ZS5PYmpCYXNpY01h",
            "cEVudHJ5GkUKEE9iakJhc2ljTWFwRW50cnkSCwoDa2V5GAEgASgFEiAKBXZh",
            "bHVlGAIgASgLMhEucmF3ZGF0YS5PYmpCYXNpYzoCOAEiyQMKDE9iakJhc2lj",
            "Q29uZhI7CgtPYmpCYXNpY01hcBgBIAMoCzImLnJhd2RhdGEuT2JqQmFzaWND",
            "b25mLk9iakJhc2ljTWFwRW50cnkSPwoNT2JqQmFzaWNNYXBBQhgCIAMoCzIo",
            "LnJhd2RhdGEuT2JqQmFzaWNDb25mLk9iakJhc2ljTWFwQUJFbnRyeRJJChJP",
            "YmpCYXNpY01hcEFCUGF0Y2gYAyADKAsyLS5yYXdkYXRhLk9iakJhc2ljQ29u",
            "Zi5PYmpCYXNpY01hcEFCUGF0Y2hFbnRyeRpFChBPYmpCYXNpY01hcEVudHJ5",
            "EgsKA2tleRgBIAEoBRIgCgV2YWx1ZRgCIAEoCzIRLnJhd2RhdGEuT2JqQmFz",
            "aWM6AjgBGlEKEk9iakJhc2ljTWFwQUJFbnRyeRILCgNrZXkYASABKAkSKgoF",
            "dmFsdWUYAiABKAsyGy5yYXdkYXRhLk9iakJhc2ljTWFwQUJWYWx1ZToCOAEa",
            "VgoXT2JqQmFzaWNNYXBBQlBhdGNoRW50cnkSCwoDa2V5GAEgASgJEioKBXZh",
            "bHVlGAIgASgLMhsucmF3ZGF0YS5PYmpCYXNpY01hcEFCVmFsdWU6AjgBQj1a",
            "LWdpdGxhYi5mdW5wbHVzLmlvL2ZhdC9jb25mL2dlbi9nb2xhbmcvcmF3ZGF0",
            "YaoCC2ZhdC5yYXdkYXRhYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::fat.rawdata.CoinTypeReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.ObjBasic), global::fat.rawdata.ObjBasic.Parser, new[]{ "Id", "Tags", "BlackIcon", "Desc", "Icon", "Image", "Name", "Price", "PriceType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.ObjBasicMapABValue), global::fat.rawdata.ObjBasicMapABValue.Parser, new[]{ "ObjBasicMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.ObjBasicConf), global::fat.rawdata.ObjBasicConf.Parser, new[]{ "ObjBasicMap", "ObjBasicMapAB", "ObjBasicMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="ObjBasic",table="ObjBasicMap",table_wrapper="ObjBasicConf",map="true",map_key_type="int32",data="ObjBasicConf")
  /// annotation@ab(table_ab="ObjBasicMapAB",table_ab_patch="ObjBasicMapABPatch",table_ab_value="ObjBasicMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@ObjBasic(id="id")
  /// </summary>
  public sealed partial class ObjBasic : pb::IMessage<ObjBasic>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ObjBasic> _parser = new pb::MessageParser<ObjBasic>(() => new ObjBasic());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ObjBasic> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.ObjBasicConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjBasic() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjBasic(ObjBasic other) : this() {
      id_ = other.id_;
      Tags_ = other.Tags_.Clone();
      blackIcon_ = other.blackIcon_;
      desc_ = other.desc_;
      icon_ = other.icon_;
      image_ = other.image_;
      name_ = other.name_;
      price_ = other.price_;
      priceType_ = other.priceType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjBasic Clone() {
      return new ObjBasic(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 物品ID
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "_tags_" field.</summary>
    public const int TagsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_Tags_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> Tags_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 版本标记
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Tags {
      get { return Tags_; }
    }

    /// <summary>Field number for the "blackIcon" field.</summary>
    public const int BlackIconFieldNumber = 3;
    private string blackIcon_ = "";
    /// <summary>
    /// 剪影图标
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BlackIcon {
      get { return blackIcon_; }
      set {
        blackIcon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "desc" field.</summary>
    public const int DescFieldNumber = 4;
    private string desc_ = "";
    /// <summary>
    /// 描述
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Desc {
      get { return desc_; }
      set {
        desc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "icon" field.</summary>
    public const int IconFieldNumber = 5;
    private string icon_ = "";
    /// <summary>
    /// 物品图标
    /// （Asset）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Icon {
      get { return icon_; }
      set {
        icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "image" field.</summary>
    public const int ImageFieldNumber = 6;
    private string image_ = "";
    /// <summary>
    /// 小图
    /// （Asset）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Image {
      get { return image_; }
      set {
        image_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 7;
    private string name_ = "";
    /// <summary>
    /// 物品名字
    /// （多语言）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "price" field.</summary>
    public const int PriceFieldNumber = 8;
    private int price_;
    /// <summary>
    /// 物品价格
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Price {
      get { return price_; }
      set {
        price_ = value;
      }
    }

    /// <summary>Field number for the "priceType" field.</summary>
    public const int PriceTypeFieldNumber = 9;
    private global::fat.rawdata.CoinType priceType_ = global::fat.rawdata.CoinType.NoneCoin;
    /// <summary>
    /// 物品金币种类
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::fat.rawdata.CoinType PriceType {
      get { return priceType_; }
      set {
        priceType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ObjBasic);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ObjBasic other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!Tags_.Equals(other.Tags_)) return false;
      if (BlackIcon != other.BlackIcon) return false;
      if (Desc != other.Desc) return false;
      if (Icon != other.Icon) return false;
      if (Image != other.Image) return false;
      if (Name != other.Name) return false;
      if (Price != other.Price) return false;
      if (PriceType != other.PriceType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      hash ^= Tags_.GetHashCode();
      if (BlackIcon.Length != 0) hash ^= BlackIcon.GetHashCode();
      if (Desc.Length != 0) hash ^= Desc.GetHashCode();
      if (Icon.Length != 0) hash ^= Icon.GetHashCode();
      if (Image.Length != 0) hash ^= Image.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Price != 0) hash ^= Price.GetHashCode();
      if (PriceType != global::fat.rawdata.CoinType.NoneCoin) hash ^= PriceType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      Tags_.WriteTo(output, _repeated_Tags_codec);
      if (BlackIcon.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(BlackIcon);
      }
      if (Desc.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Desc);
      }
      if (Icon.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Icon);
      }
      if (Image.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Image);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Name);
      }
      if (Price != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Price);
      }
      if (PriceType != global::fat.rawdata.CoinType.NoneCoin) {
        output.WriteRawTag(72);
        output.WriteEnum((int) PriceType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      Tags_.WriteTo(ref output, _repeated_Tags_codec);
      if (BlackIcon.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(BlackIcon);
      }
      if (Desc.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Desc);
      }
      if (Icon.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Icon);
      }
      if (Image.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Image);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Name);
      }
      if (Price != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Price);
      }
      if (PriceType != global::fat.rawdata.CoinType.NoneCoin) {
        output.WriteRawTag(72);
        output.WriteEnum((int) PriceType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      size += Tags_.CalculateSize(_repeated_Tags_codec);
      if (BlackIcon.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BlackIcon);
      }
      if (Desc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Desc);
      }
      if (Icon.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Icon);
      }
      if (Image.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Image);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Price != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Price);
      }
      if (PriceType != global::fat.rawdata.CoinType.NoneCoin) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PriceType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ObjBasic other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      Tags_.Add(other.Tags_);
      if (other.BlackIcon.Length != 0) {
        BlackIcon = other.BlackIcon;
      }
      if (other.Desc.Length != 0) {
        Desc = other.Desc;
      }
      if (other.Icon.Length != 0) {
        Icon = other.Icon;
      }
      if (other.Image.Length != 0) {
        Image = other.Image;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Price != 0) {
        Price = other.Price;
      }
      if (other.PriceType != global::fat.rawdata.CoinType.NoneCoin) {
        PriceType = other.PriceType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Tags_.AddEntriesFrom(input, _repeated_Tags_codec);
            break;
          }
          case 26: {
            BlackIcon = input.ReadString();
            break;
          }
          case 34: {
            Desc = input.ReadString();
            break;
          }
          case 42: {
            Icon = input.ReadString();
            break;
          }
          case 50: {
            Image = input.ReadString();
            break;
          }
          case 58: {
            Name = input.ReadString();
            break;
          }
          case 64: {
            Price = input.ReadInt32();
            break;
          }
          case 72: {
            PriceType = (global::fat.rawdata.CoinType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Tags_.AddEntriesFrom(ref input, _repeated_Tags_codec);
            break;
          }
          case 26: {
            BlackIcon = input.ReadString();
            break;
          }
          case 34: {
            Desc = input.ReadString();
            break;
          }
          case 42: {
            Icon = input.ReadString();
            break;
          }
          case 50: {
            Image = input.ReadString();
            break;
          }
          case 58: {
            Name = input.ReadString();
            break;
          }
          case 64: {
            Price = input.ReadInt32();
            break;
          }
          case 72: {
            PriceType = (global::fat.rawdata.CoinType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ObjBasicMapABValue : pb::IMessage<ObjBasicMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ObjBasicMapABValue> _parser = new pb::MessageParser<ObjBasicMapABValue>(() => new ObjBasicMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ObjBasicMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.ObjBasicConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjBasicMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjBasicMapABValue(ObjBasicMapABValue other) : this() {
      objBasicMap_ = other.objBasicMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjBasicMapABValue Clone() {
      return new ObjBasicMapABValue(this);
    }

    /// <summary>Field number for the "ObjBasicMap" field.</summary>
    public const int ObjBasicMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.ObjBasic>.Codec _map_objBasicMap_codec
        = new pbc::MapField<int, global::fat.rawdata.ObjBasic>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ObjBasic.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.ObjBasic> objBasicMap_ = new pbc::MapField<int, global::fat.rawdata.ObjBasic>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.ObjBasic> ObjBasicMap {
      get { return objBasicMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ObjBasicMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ObjBasicMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!ObjBasicMap.Equals(other.ObjBasicMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ObjBasicMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      objBasicMap_.WriteTo(output, _map_objBasicMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      objBasicMap_.WriteTo(ref output, _map_objBasicMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += objBasicMap_.CalculateSize(_map_objBasicMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ObjBasicMapABValue other) {
      if (other == null) {
        return;
      }
      objBasicMap_.Add(other.objBasicMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            objBasicMap_.AddEntriesFrom(input, _map_objBasicMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            objBasicMap_.AddEntriesFrom(ref input, _map_objBasicMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ObjBasicConf : pb::IMessage<ObjBasicConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ObjBasicConf> _parser = new pb::MessageParser<ObjBasicConf>(() => new ObjBasicConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ObjBasicConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.ObjBasicConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjBasicConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjBasicConf(ObjBasicConf other) : this() {
      objBasicMap_ = other.objBasicMap_.Clone();
      objBasicMapAB_ = other.objBasicMapAB_.Clone();
      objBasicMapABPatch_ = other.objBasicMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjBasicConf Clone() {
      return new ObjBasicConf(this);
    }

    /// <summary>Field number for the "ObjBasicMap" field.</summary>
    public const int ObjBasicMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.ObjBasic>.Codec _map_objBasicMap_codec
        = new pbc::MapField<int, global::fat.rawdata.ObjBasic>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ObjBasic.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.ObjBasic> objBasicMap_ = new pbc::MapField<int, global::fat.rawdata.ObjBasic>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.ObjBasic> ObjBasicMap {
      get { return objBasicMap_; }
    }

    /// <summary>Field number for the "ObjBasicMapAB" field.</summary>
    public const int ObjBasicMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.ObjBasicMapABValue>.Codec _map_objBasicMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.ObjBasicMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ObjBasicMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.ObjBasicMapABValue> objBasicMapAB_ = new pbc::MapField<string, global::fat.rawdata.ObjBasicMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.ObjBasicMapABValue> ObjBasicMapAB {
      get { return objBasicMapAB_; }
    }

    /// <summary>Field number for the "ObjBasicMapABPatch" field.</summary>
    public const int ObjBasicMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.ObjBasicMapABValue>.Codec _map_objBasicMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.ObjBasicMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ObjBasicMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.ObjBasicMapABValue> objBasicMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.ObjBasicMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.ObjBasicMapABValue> ObjBasicMapABPatch {
      get { return objBasicMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ObjBasicConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ObjBasicConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!ObjBasicMap.Equals(other.ObjBasicMap)) return false;
      if (!ObjBasicMapAB.Equals(other.ObjBasicMapAB)) return false;
      if (!ObjBasicMapABPatch.Equals(other.ObjBasicMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ObjBasicMap.GetHashCode();
      hash ^= ObjBasicMapAB.GetHashCode();
      hash ^= ObjBasicMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      objBasicMap_.WriteTo(output, _map_objBasicMap_codec);
      objBasicMapAB_.WriteTo(output, _map_objBasicMapAB_codec);
      objBasicMapABPatch_.WriteTo(output, _map_objBasicMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      objBasicMap_.WriteTo(ref output, _map_objBasicMap_codec);
      objBasicMapAB_.WriteTo(ref output, _map_objBasicMapAB_codec);
      objBasicMapABPatch_.WriteTo(ref output, _map_objBasicMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += objBasicMap_.CalculateSize(_map_objBasicMap_codec);
      size += objBasicMapAB_.CalculateSize(_map_objBasicMapAB_codec);
      size += objBasicMapABPatch_.CalculateSize(_map_objBasicMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ObjBasicConf other) {
      if (other == null) {
        return;
      }
      objBasicMap_.Add(other.objBasicMap_);
      objBasicMapAB_.Add(other.objBasicMapAB_);
      objBasicMapABPatch_.Add(other.objBasicMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            objBasicMap_.AddEntriesFrom(input, _map_objBasicMap_codec);
            break;
          }
          case 18: {
            objBasicMapAB_.AddEntriesFrom(input, _map_objBasicMapAB_codec);
            break;
          }
          case 26: {
            objBasicMapABPatch_.AddEntriesFrom(input, _map_objBasicMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            objBasicMap_.AddEntriesFrom(ref input, _map_objBasicMap_codec);
            break;
          }
          case 18: {
            objBasicMapAB_.AddEntriesFrom(ref input, _map_objBasicMapAB_codec);
            break;
          }
          case 26: {
            objBasicMapABPatch_.AddEntriesFrom(ref input, _map_objBasicMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
