// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/RoundScoreConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/RoundScoreConf.proto</summary>
  public static partial class RoundScoreConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/RoundScoreConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RoundScoreConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChxyYXdkYXRhL1JvdW5kU2NvcmVDb25mLnByb3RvEgdyYXdkYXRhIisKClJv",
            "dW5kU2NvcmUSDAoEZnJvbRgBIAEoBRIPCgdyb3VuZEJ5GAIgASgFIkYKFlJv",
            "dW5kU2NvcmVTbGljZUFCVmFsdWUSLAoPUm91bmRTY29yZVNsaWNlGAEgAygL",
            "MhMucmF3ZGF0YS5Sb3VuZFNjb3JlIpkDCg5Sb3VuZFNjb3JlQ29uZhIsCg9S",
            "b3VuZFNjb3JlU2xpY2UYASADKAsyEy5yYXdkYXRhLlJvdW5kU2NvcmUSSQoR",
            "Um91bmRTY29yZVNsaWNlQUIYAiADKAsyLi5yYXdkYXRhLlJvdW5kU2NvcmVD",
            "b25mLlJvdW5kU2NvcmVTbGljZUFCRW50cnkSUwoWUm91bmRTY29yZVNsaWNl",
            "QUJQYXRjaBgDIAMoCzIzLnJhd2RhdGEuUm91bmRTY29yZUNvbmYuUm91bmRT",
            "Y29yZVNsaWNlQUJQYXRjaEVudHJ5GlkKFlJvdW5kU2NvcmVTbGljZUFCRW50",
            "cnkSCwoDa2V5GAEgASgJEi4KBXZhbHVlGAIgASgLMh8ucmF3ZGF0YS5Sb3Vu",
            "ZFNjb3JlU2xpY2VBQlZhbHVlOgI4ARpeChtSb3VuZFNjb3JlU2xpY2VBQlBh",
            "dGNoRW50cnkSCwoDa2V5GAEgASgJEi4KBXZhbHVlGAIgASgLMh8ucmF3ZGF0",
            "YS5Sb3VuZFNjb3JlU2xpY2VBQlZhbHVlOgI4AUI9Wi1naXRsYWIuZnVucGx1",
            "cy5pby9mYXQvY29uZi9nZW4vZ29sYW5nL3Jhd2RhdGGqAgtmYXQucmF3ZGF0",
            "YWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.RoundScore), global::fat.rawdata.RoundScore.Parser, new[]{ "From", "RoundBy" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.RoundScoreSliceABValue), global::fat.rawdata.RoundScoreSliceABValue.Parser, new[]{ "RoundScoreSlice" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.RoundScoreConf), global::fat.rawdata.RoundScoreConf.Parser, new[]{ "RoundScoreSlice", "RoundScoreSliceAB", "RoundScoreSliceABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="RoundScore",table="RoundScoreSlice",table_wrapper="RoundScoreConf",map="false",map_key_type="",data="RoundScoreConf")
  /// annotation@ab(table_ab="RoundScoreSliceAB",table_ab_patch="RoundScoreSliceABPatch",table_ab_value="RoundScoreSliceABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// </summary>
  public sealed partial class RoundScore : pb::IMessage<RoundScore>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RoundScore> _parser = new pb::MessageParser<RoundScore>(() => new RoundScore());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoundScore> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.RoundScoreConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoundScore() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoundScore(RoundScore other) : this() {
      from_ = other.from_;
      roundBy_ = other.roundBy_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoundScore Clone() {
      return new RoundScore(this);
    }

    /// <summary>Field number for the "from" field.</summary>
    public const int FromFieldNumber = 1;
    private int from_;
    /// <summary>
    /// 区间左侧值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int From {
      get { return from_; }
      set {
        from_ = value;
      }
    }

    /// <summary>Field number for the "roundBy" field.</summary>
    public const int RoundByFieldNumber = 2;
    private int roundBy_;
    /// <summary>
    /// 取整值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RoundBy {
      get { return roundBy_; }
      set {
        roundBy_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoundScore);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoundScore other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (From != other.From) return false;
      if (RoundBy != other.RoundBy) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (From != 0) hash ^= From.GetHashCode();
      if (RoundBy != 0) hash ^= RoundBy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (From != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(From);
      }
      if (RoundBy != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RoundBy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (From != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(From);
      }
      if (RoundBy != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RoundBy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (From != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(From);
      }
      if (RoundBy != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoundBy);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoundScore other) {
      if (other == null) {
        return;
      }
      if (other.From != 0) {
        From = other.From;
      }
      if (other.RoundBy != 0) {
        RoundBy = other.RoundBy;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            From = input.ReadInt32();
            break;
          }
          case 16: {
            RoundBy = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            From = input.ReadInt32();
            break;
          }
          case 16: {
            RoundBy = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RoundScoreSliceABValue : pb::IMessage<RoundScoreSliceABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RoundScoreSliceABValue> _parser = new pb::MessageParser<RoundScoreSliceABValue>(() => new RoundScoreSliceABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoundScoreSliceABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.RoundScoreConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoundScoreSliceABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoundScoreSliceABValue(RoundScoreSliceABValue other) : this() {
      roundScoreSlice_ = other.roundScoreSlice_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoundScoreSliceABValue Clone() {
      return new RoundScoreSliceABValue(this);
    }

    /// <summary>Field number for the "RoundScoreSlice" field.</summary>
    public const int RoundScoreSliceFieldNumber = 1;
    private static readonly pb::FieldCodec<global::fat.rawdata.RoundScore> _repeated_roundScoreSlice_codec
        = pb::FieldCodec.ForMessage(10, global::fat.rawdata.RoundScore.Parser);
    private readonly pbc::RepeatedField<global::fat.rawdata.RoundScore> roundScoreSlice_ = new pbc::RepeatedField<global::fat.rawdata.RoundScore>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::fat.rawdata.RoundScore> RoundScoreSlice {
      get { return roundScoreSlice_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoundScoreSliceABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoundScoreSliceABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!roundScoreSlice_.Equals(other.roundScoreSlice_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= roundScoreSlice_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      roundScoreSlice_.WriteTo(output, _repeated_roundScoreSlice_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      roundScoreSlice_.WriteTo(ref output, _repeated_roundScoreSlice_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += roundScoreSlice_.CalculateSize(_repeated_roundScoreSlice_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoundScoreSliceABValue other) {
      if (other == null) {
        return;
      }
      roundScoreSlice_.Add(other.roundScoreSlice_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            roundScoreSlice_.AddEntriesFrom(input, _repeated_roundScoreSlice_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            roundScoreSlice_.AddEntriesFrom(ref input, _repeated_roundScoreSlice_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RoundScoreConf : pb::IMessage<RoundScoreConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RoundScoreConf> _parser = new pb::MessageParser<RoundScoreConf>(() => new RoundScoreConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoundScoreConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.RoundScoreConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoundScoreConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoundScoreConf(RoundScoreConf other) : this() {
      roundScoreSlice_ = other.roundScoreSlice_.Clone();
      roundScoreSliceAB_ = other.roundScoreSliceAB_.Clone();
      roundScoreSliceABPatch_ = other.roundScoreSliceABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoundScoreConf Clone() {
      return new RoundScoreConf(this);
    }

    /// <summary>Field number for the "RoundScoreSlice" field.</summary>
    public const int RoundScoreSliceFieldNumber = 1;
    private static readonly pb::FieldCodec<global::fat.rawdata.RoundScore> _repeated_roundScoreSlice_codec
        = pb::FieldCodec.ForMessage(10, global::fat.rawdata.RoundScore.Parser);
    private readonly pbc::RepeatedField<global::fat.rawdata.RoundScore> roundScoreSlice_ = new pbc::RepeatedField<global::fat.rawdata.RoundScore>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::fat.rawdata.RoundScore> RoundScoreSlice {
      get { return roundScoreSlice_; }
    }

    /// <summary>Field number for the "RoundScoreSliceAB" field.</summary>
    public const int RoundScoreSliceABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.RoundScoreSliceABValue>.Codec _map_roundScoreSliceAB_codec
        = new pbc::MapField<string, global::fat.rawdata.RoundScoreSliceABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.RoundScoreSliceABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.RoundScoreSliceABValue> roundScoreSliceAB_ = new pbc::MapField<string, global::fat.rawdata.RoundScoreSliceABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.RoundScoreSliceABValue> RoundScoreSliceAB {
      get { return roundScoreSliceAB_; }
    }

    /// <summary>Field number for the "RoundScoreSliceABPatch" field.</summary>
    public const int RoundScoreSliceABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.RoundScoreSliceABValue>.Codec _map_roundScoreSliceABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.RoundScoreSliceABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.RoundScoreSliceABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.RoundScoreSliceABValue> roundScoreSliceABPatch_ = new pbc::MapField<string, global::fat.rawdata.RoundScoreSliceABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.RoundScoreSliceABValue> RoundScoreSliceABPatch {
      get { return roundScoreSliceABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoundScoreConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoundScoreConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!roundScoreSlice_.Equals(other.roundScoreSlice_)) return false;
      if (!RoundScoreSliceAB.Equals(other.RoundScoreSliceAB)) return false;
      if (!RoundScoreSliceABPatch.Equals(other.RoundScoreSliceABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= roundScoreSlice_.GetHashCode();
      hash ^= RoundScoreSliceAB.GetHashCode();
      hash ^= RoundScoreSliceABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      roundScoreSlice_.WriteTo(output, _repeated_roundScoreSlice_codec);
      roundScoreSliceAB_.WriteTo(output, _map_roundScoreSliceAB_codec);
      roundScoreSliceABPatch_.WriteTo(output, _map_roundScoreSliceABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      roundScoreSlice_.WriteTo(ref output, _repeated_roundScoreSlice_codec);
      roundScoreSliceAB_.WriteTo(ref output, _map_roundScoreSliceAB_codec);
      roundScoreSliceABPatch_.WriteTo(ref output, _map_roundScoreSliceABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += roundScoreSlice_.CalculateSize(_repeated_roundScoreSlice_codec);
      size += roundScoreSliceAB_.CalculateSize(_map_roundScoreSliceAB_codec);
      size += roundScoreSliceABPatch_.CalculateSize(_map_roundScoreSliceABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoundScoreConf other) {
      if (other == null) {
        return;
      }
      roundScoreSlice_.Add(other.roundScoreSlice_);
      roundScoreSliceAB_.Add(other.roundScoreSliceAB_);
      roundScoreSliceABPatch_.Add(other.roundScoreSliceABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            roundScoreSlice_.AddEntriesFrom(input, _repeated_roundScoreSlice_codec);
            break;
          }
          case 18: {
            roundScoreSliceAB_.AddEntriesFrom(input, _map_roundScoreSliceAB_codec);
            break;
          }
          case 26: {
            roundScoreSliceABPatch_.AddEntriesFrom(input, _map_roundScoreSliceABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            roundScoreSlice_.AddEntriesFrom(ref input, _repeated_roundScoreSlice_codec);
            break;
          }
          case 18: {
            roundScoreSliceAB_.AddEntriesFrom(ref input, _map_roundScoreSliceAB_codec);
            break;
          }
          case 26: {
            roundScoreSliceABPatch_.AddEntriesFrom(ref input, _map_roundScoreSliceABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
