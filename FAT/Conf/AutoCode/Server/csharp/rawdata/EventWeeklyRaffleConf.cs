// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventWeeklyRaffleConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventWeeklyRaffleConf.proto</summary>
  public static partial class EventWeeklyRaffleConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventWeeklyRaffleConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventWeeklyRaffleConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiNyYXdkYXRhL0V2ZW50V2Vla2x5UmFmZmxlQ29uZi5wcm90bxIHcmF3ZGF0",
            "YSKbAgoRRXZlbnRXZWVrbHlSYWZmbGUSCgoCaWQYASABKAUSDgoGZGV0YWls",
            "GAIgASgFEhIKCmV2ZW50VGhlbWUYAyABKAUSQAoLZXhwaXJlUG9wdXAYBCAD",
            "KAsyKy5yYXdkYXRhLkV2ZW50V2Vla2x5UmFmZmxlLkV4cGlyZVBvcHVwRW50",
            "cnkSEAoIdGhlbWVCdXkYBiABKAUSFQoNdGhlbWVFeGNoYW5nZRgHIAEoBRIR",
            "Cgl0aGVtZUluZm8YCCABKAUSEwoLdGhlbWVSYWZmbGUYCSABKAUSDwoHdG9r",
            "ZW5JZBgFIAEoBRoyChBFeHBpcmVQb3B1cEVudHJ5EgsKA2tleRgBIAEoBRIN",
            "CgV2YWx1ZRgCIAEoCToCOAEi1AEKG0V2ZW50V2Vla2x5UmFmZmxlTWFwQUJW",
            "YWx1ZRJcChRFdmVudFdlZWtseVJhZmZsZU1hcBgBIAMoCzI+LnJhd2RhdGEu",
            "RXZlbnRXZWVrbHlSYWZmbGVNYXBBQlZhbHVlLkV2ZW50V2Vla2x5UmFmZmxl",
            "TWFwRW50cnkaVwoZRXZlbnRXZWVrbHlSYWZmbGVNYXBFbnRyeRILCgNrZXkY",
            "ASABKAUSKQoFdmFsdWUYAiABKAsyGi5yYXdkYXRhLkV2ZW50V2Vla2x5UmFm",
            "ZmxlOgI4ASLZBAoVRXZlbnRXZWVrbHlSYWZmbGVDb25mElYKFEV2ZW50V2Vl",
            "a2x5UmFmZmxlTWFwGAEgAygLMjgucmF3ZGF0YS5FdmVudFdlZWtseVJhZmZs",
            "ZUNvbmYuRXZlbnRXZWVrbHlSYWZmbGVNYXBFbnRyeRJaChZFdmVudFdlZWts",
            "eVJhZmZsZU1hcEFCGAIgAygLMjoucmF3ZGF0YS5FdmVudFdlZWtseVJhZmZs",
            "ZUNvbmYuRXZlbnRXZWVrbHlSYWZmbGVNYXBBQkVudHJ5EmQKG0V2ZW50V2Vl",
            "a2x5UmFmZmxlTWFwQUJQYXRjaBgDIAMoCzI/LnJhd2RhdGEuRXZlbnRXZWVr",
            "bHlSYWZmbGVDb25mLkV2ZW50V2Vla2x5UmFmZmxlTWFwQUJQYXRjaEVudHJ5",
            "GlcKGUV2ZW50V2Vla2x5UmFmZmxlTWFwRW50cnkSCwoDa2V5GAEgASgFEikK",
            "BXZhbHVlGAIgASgLMhoucmF3ZGF0YS5FdmVudFdlZWtseVJhZmZsZToCOAEa",
            "YwobRXZlbnRXZWVrbHlSYWZmbGVNYXBBQkVudHJ5EgsKA2tleRgBIAEoCRIz",
            "CgV2YWx1ZRgCIAEoCzIkLnJhd2RhdGEuRXZlbnRXZWVrbHlSYWZmbGVNYXBB",
            "QlZhbHVlOgI4ARpoCiBFdmVudFdlZWtseVJhZmZsZU1hcEFCUGF0Y2hFbnRy",
            "eRILCgNrZXkYASABKAkSMwoFdmFsdWUYAiABKAsyJC5yYXdkYXRhLkV2ZW50",
            "V2Vla2x5UmFmZmxlTWFwQUJWYWx1ZToCOAFCPVotZ2l0bGFiLmZ1bnBsdXMu",
            "aW8vZmF0L2NvbmYvZ2VuL2dvbGFuZy9yYXdkYXRhqgILZmF0LnJhd2RhdGFi",
            "BnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventWeeklyRaffle), global::fat.rawdata.EventWeeklyRaffle.Parser, new[]{ "Id", "Detail", "EventTheme", "ExpirePopup", "ThemeBuy", "ThemeExchange", "ThemeInfo", "ThemeRaffle", "TokenId" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventWeeklyRaffleMapABValue), global::fat.rawdata.EventWeeklyRaffleMapABValue.Parser, new[]{ "EventWeeklyRaffleMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventWeeklyRaffleConf), global::fat.rawdata.EventWeeklyRaffleConf.Parser, new[]{ "EventWeeklyRaffleMap", "EventWeeklyRaffleMapAB", "EventWeeklyRaffleMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventWeeklyRaffle",table="EventWeeklyRaffleMap",table_wrapper="EventWeeklyRaffleConf",map="true",map_key_type="int32",data="EventWeeklyRaffleConf")
  /// annotation@ab(table_ab="EventWeeklyRaffleMapAB",table_ab_patch="EventWeeklyRaffleMapABPatch",table_ab_value="EventWeeklyRaffleMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventWeeklyRaffle(id="id")
  /// </summary>
  public sealed partial class EventWeeklyRaffle : pb::IMessage<EventWeeklyRaffle>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventWeeklyRaffle> _parser = new pb::MessageParser<EventWeeklyRaffle>(() => new EventWeeklyRaffle());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventWeeklyRaffle> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventWeeklyRaffleConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWeeklyRaffle() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWeeklyRaffle(EventWeeklyRaffle other) : this() {
      id_ = other.id_;
      detail_ = other.detail_;
      eventTheme_ = other.eventTheme_;
      expirePopup_ = other.expirePopup_.Clone();
      themeBuy_ = other.themeBuy_;
      themeExchange_ = other.themeExchange_;
      themeInfo_ = other.themeInfo_;
      themeRaffle_ = other.themeRaffle_;
      tokenId_ = other.tokenId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWeeklyRaffle Clone() {
      return new EventWeeklyRaffle(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 活动模版id
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "detail" field.</summary>
    public const int DetailFieldNumber = 2;
    private int detail_;
    /// <summary>
    /// 活动详情
    /// (GradeIndexMapping.id)
    /// (EventWeeklyRaffleDetail.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Detail {
      get { return detail_; }
      set {
        detail_ = value;
      }
    }

    /// <summary>Field number for the "eventTheme" field.</summary>
    public const int EventThemeFieldNumber = 3;
    private int eventTheme_;
    /// <summary>
    /// 活动开启弹窗
    /// （EventTheme.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EventTheme {
      get { return eventTheme_; }
      set {
        eventTheme_ = value;
      }
    }

    /// <summary>Field number for the "expirePopup" field.</summary>
    public const int ExpirePopupFieldNumber = 4;
    private static readonly pbc::MapField<int, string>.Codec _map_expirePopup_codec
        = new pbc::MapField<int, string>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForString(18, ""), 34);
    private readonly pbc::MapField<int, string> expirePopup_ = new pbc::MapField<int, string>();
    /// <summary>
    /// 活动结束时
    /// 通过弹板的方式进行结算(通用方法)
    /// {“被结算物品” : “结算目标物” = “转化系数”}
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, string> ExpirePopup {
      get { return expirePopup_; }
    }

    /// <summary>Field number for the "themeBuy" field.</summary>
    public const int ThemeBuyFieldNumber = 6;
    private int themeBuy_;
    /// <summary>
    /// 活动购买token弹窗
    /// （EventTheme.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ThemeBuy {
      get { return themeBuy_; }
      set {
        themeBuy_ = value;
      }
    }

    /// <summary>Field number for the "themeExchange" field.</summary>
    public const int ThemeExchangeFieldNumber = 7;
    private int themeExchange_;
    /// <summary>
    /// 活动token结算弹窗
    /// （EventTheme.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ThemeExchange {
      get { return themeExchange_; }
      set {
        themeExchange_ = value;
      }
    }

    /// <summary>Field number for the "themeInfo" field.</summary>
    public const int ThemeInfoFieldNumber = 8;
    private int themeInfo_;
    /// <summary>
    /// 活动说明弹窗
    /// （EventTheme.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ThemeInfo {
      get { return themeInfo_; }
      set {
        themeInfo_ = value;
      }
    }

    /// <summary>Field number for the "themeRaffle" field.</summary>
    public const int ThemeRaffleFieldNumber = 9;
    private int themeRaffle_;
    /// <summary>
    /// 活动抽奖弹窗
    /// （EventTheme.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ThemeRaffle {
      get { return themeRaffle_; }
      set {
        themeRaffle_ = value;
      }
    }

    /// <summary>Field number for the "tokenId" field.</summary>
    public const int TokenIdFieldNumber = 5;
    private int tokenId_;
    /// <summary>
    /// 活动兑换币id
    /// （ObjBasic.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TokenId {
      get { return tokenId_; }
      set {
        tokenId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventWeeklyRaffle);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventWeeklyRaffle other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Detail != other.Detail) return false;
      if (EventTheme != other.EventTheme) return false;
      if (!ExpirePopup.Equals(other.ExpirePopup)) return false;
      if (ThemeBuy != other.ThemeBuy) return false;
      if (ThemeExchange != other.ThemeExchange) return false;
      if (ThemeInfo != other.ThemeInfo) return false;
      if (ThemeRaffle != other.ThemeRaffle) return false;
      if (TokenId != other.TokenId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Detail != 0) hash ^= Detail.GetHashCode();
      if (EventTheme != 0) hash ^= EventTheme.GetHashCode();
      hash ^= ExpirePopup.GetHashCode();
      if (ThemeBuy != 0) hash ^= ThemeBuy.GetHashCode();
      if (ThemeExchange != 0) hash ^= ThemeExchange.GetHashCode();
      if (ThemeInfo != 0) hash ^= ThemeInfo.GetHashCode();
      if (ThemeRaffle != 0) hash ^= ThemeRaffle.GetHashCode();
      if (TokenId != 0) hash ^= TokenId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Detail != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Detail);
      }
      if (EventTheme != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(EventTheme);
      }
      expirePopup_.WriteTo(output, _map_expirePopup_codec);
      if (TokenId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(TokenId);
      }
      if (ThemeBuy != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(ThemeBuy);
      }
      if (ThemeExchange != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(ThemeExchange);
      }
      if (ThemeInfo != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(ThemeInfo);
      }
      if (ThemeRaffle != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(ThemeRaffle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Detail != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Detail);
      }
      if (EventTheme != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(EventTheme);
      }
      expirePopup_.WriteTo(ref output, _map_expirePopup_codec);
      if (TokenId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(TokenId);
      }
      if (ThemeBuy != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(ThemeBuy);
      }
      if (ThemeExchange != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(ThemeExchange);
      }
      if (ThemeInfo != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(ThemeInfo);
      }
      if (ThemeRaffle != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(ThemeRaffle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Detail != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Detail);
      }
      if (EventTheme != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EventTheme);
      }
      size += expirePopup_.CalculateSize(_map_expirePopup_codec);
      if (ThemeBuy != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ThemeBuy);
      }
      if (ThemeExchange != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ThemeExchange);
      }
      if (ThemeInfo != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ThemeInfo);
      }
      if (ThemeRaffle != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ThemeRaffle);
      }
      if (TokenId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TokenId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventWeeklyRaffle other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Detail != 0) {
        Detail = other.Detail;
      }
      if (other.EventTheme != 0) {
        EventTheme = other.EventTheme;
      }
      expirePopup_.Add(other.expirePopup_);
      if (other.ThemeBuy != 0) {
        ThemeBuy = other.ThemeBuy;
      }
      if (other.ThemeExchange != 0) {
        ThemeExchange = other.ThemeExchange;
      }
      if (other.ThemeInfo != 0) {
        ThemeInfo = other.ThemeInfo;
      }
      if (other.ThemeRaffle != 0) {
        ThemeRaffle = other.ThemeRaffle;
      }
      if (other.TokenId != 0) {
        TokenId = other.TokenId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Detail = input.ReadInt32();
            break;
          }
          case 24: {
            EventTheme = input.ReadInt32();
            break;
          }
          case 34: {
            expirePopup_.AddEntriesFrom(input, _map_expirePopup_codec);
            break;
          }
          case 40: {
            TokenId = input.ReadInt32();
            break;
          }
          case 48: {
            ThemeBuy = input.ReadInt32();
            break;
          }
          case 56: {
            ThemeExchange = input.ReadInt32();
            break;
          }
          case 64: {
            ThemeInfo = input.ReadInt32();
            break;
          }
          case 72: {
            ThemeRaffle = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Detail = input.ReadInt32();
            break;
          }
          case 24: {
            EventTheme = input.ReadInt32();
            break;
          }
          case 34: {
            expirePopup_.AddEntriesFrom(ref input, _map_expirePopup_codec);
            break;
          }
          case 40: {
            TokenId = input.ReadInt32();
            break;
          }
          case 48: {
            ThemeBuy = input.ReadInt32();
            break;
          }
          case 56: {
            ThemeExchange = input.ReadInt32();
            break;
          }
          case 64: {
            ThemeInfo = input.ReadInt32();
            break;
          }
          case 72: {
            ThemeRaffle = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventWeeklyRaffleMapABValue : pb::IMessage<EventWeeklyRaffleMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventWeeklyRaffleMapABValue> _parser = new pb::MessageParser<EventWeeklyRaffleMapABValue>(() => new EventWeeklyRaffleMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventWeeklyRaffleMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventWeeklyRaffleConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWeeklyRaffleMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWeeklyRaffleMapABValue(EventWeeklyRaffleMapABValue other) : this() {
      eventWeeklyRaffleMap_ = other.eventWeeklyRaffleMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWeeklyRaffleMapABValue Clone() {
      return new EventWeeklyRaffleMapABValue(this);
    }

    /// <summary>Field number for the "EventWeeklyRaffleMap" field.</summary>
    public const int EventWeeklyRaffleMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventWeeklyRaffle>.Codec _map_eventWeeklyRaffleMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventWeeklyRaffle>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventWeeklyRaffle.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventWeeklyRaffle> eventWeeklyRaffleMap_ = new pbc::MapField<int, global::fat.rawdata.EventWeeklyRaffle>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventWeeklyRaffle> EventWeeklyRaffleMap {
      get { return eventWeeklyRaffleMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventWeeklyRaffleMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventWeeklyRaffleMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventWeeklyRaffleMap.Equals(other.EventWeeklyRaffleMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventWeeklyRaffleMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventWeeklyRaffleMap_.WriteTo(output, _map_eventWeeklyRaffleMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventWeeklyRaffleMap_.WriteTo(ref output, _map_eventWeeklyRaffleMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventWeeklyRaffleMap_.CalculateSize(_map_eventWeeklyRaffleMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventWeeklyRaffleMapABValue other) {
      if (other == null) {
        return;
      }
      eventWeeklyRaffleMap_.Add(other.eventWeeklyRaffleMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventWeeklyRaffleMap_.AddEntriesFrom(input, _map_eventWeeklyRaffleMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventWeeklyRaffleMap_.AddEntriesFrom(ref input, _map_eventWeeklyRaffleMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventWeeklyRaffleConf : pb::IMessage<EventWeeklyRaffleConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventWeeklyRaffleConf> _parser = new pb::MessageParser<EventWeeklyRaffleConf>(() => new EventWeeklyRaffleConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventWeeklyRaffleConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventWeeklyRaffleConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWeeklyRaffleConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWeeklyRaffleConf(EventWeeklyRaffleConf other) : this() {
      eventWeeklyRaffleMap_ = other.eventWeeklyRaffleMap_.Clone();
      eventWeeklyRaffleMapAB_ = other.eventWeeklyRaffleMapAB_.Clone();
      eventWeeklyRaffleMapABPatch_ = other.eventWeeklyRaffleMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWeeklyRaffleConf Clone() {
      return new EventWeeklyRaffleConf(this);
    }

    /// <summary>Field number for the "EventWeeklyRaffleMap" field.</summary>
    public const int EventWeeklyRaffleMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventWeeklyRaffle>.Codec _map_eventWeeklyRaffleMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventWeeklyRaffle>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventWeeklyRaffle.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventWeeklyRaffle> eventWeeklyRaffleMap_ = new pbc::MapField<int, global::fat.rawdata.EventWeeklyRaffle>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventWeeklyRaffle> EventWeeklyRaffleMap {
      get { return eventWeeklyRaffleMap_; }
    }

    /// <summary>Field number for the "EventWeeklyRaffleMapAB" field.</summary>
    public const int EventWeeklyRaffleMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventWeeklyRaffleMapABValue>.Codec _map_eventWeeklyRaffleMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventWeeklyRaffleMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventWeeklyRaffleMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventWeeklyRaffleMapABValue> eventWeeklyRaffleMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventWeeklyRaffleMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventWeeklyRaffleMapABValue> EventWeeklyRaffleMapAB {
      get { return eventWeeklyRaffleMapAB_; }
    }

    /// <summary>Field number for the "EventWeeklyRaffleMapABPatch" field.</summary>
    public const int EventWeeklyRaffleMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventWeeklyRaffleMapABValue>.Codec _map_eventWeeklyRaffleMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventWeeklyRaffleMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventWeeklyRaffleMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventWeeklyRaffleMapABValue> eventWeeklyRaffleMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventWeeklyRaffleMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventWeeklyRaffleMapABValue> EventWeeklyRaffleMapABPatch {
      get { return eventWeeklyRaffleMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventWeeklyRaffleConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventWeeklyRaffleConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventWeeklyRaffleMap.Equals(other.EventWeeklyRaffleMap)) return false;
      if (!EventWeeklyRaffleMapAB.Equals(other.EventWeeklyRaffleMapAB)) return false;
      if (!EventWeeklyRaffleMapABPatch.Equals(other.EventWeeklyRaffleMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventWeeklyRaffleMap.GetHashCode();
      hash ^= EventWeeklyRaffleMapAB.GetHashCode();
      hash ^= EventWeeklyRaffleMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventWeeklyRaffleMap_.WriteTo(output, _map_eventWeeklyRaffleMap_codec);
      eventWeeklyRaffleMapAB_.WriteTo(output, _map_eventWeeklyRaffleMapAB_codec);
      eventWeeklyRaffleMapABPatch_.WriteTo(output, _map_eventWeeklyRaffleMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventWeeklyRaffleMap_.WriteTo(ref output, _map_eventWeeklyRaffleMap_codec);
      eventWeeklyRaffleMapAB_.WriteTo(ref output, _map_eventWeeklyRaffleMapAB_codec);
      eventWeeklyRaffleMapABPatch_.WriteTo(ref output, _map_eventWeeklyRaffleMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventWeeklyRaffleMap_.CalculateSize(_map_eventWeeklyRaffleMap_codec);
      size += eventWeeklyRaffleMapAB_.CalculateSize(_map_eventWeeklyRaffleMapAB_codec);
      size += eventWeeklyRaffleMapABPatch_.CalculateSize(_map_eventWeeklyRaffleMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventWeeklyRaffleConf other) {
      if (other == null) {
        return;
      }
      eventWeeklyRaffleMap_.Add(other.eventWeeklyRaffleMap_);
      eventWeeklyRaffleMapAB_.Add(other.eventWeeklyRaffleMapAB_);
      eventWeeklyRaffleMapABPatch_.Add(other.eventWeeklyRaffleMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventWeeklyRaffleMap_.AddEntriesFrom(input, _map_eventWeeklyRaffleMap_codec);
            break;
          }
          case 18: {
            eventWeeklyRaffleMapAB_.AddEntriesFrom(input, _map_eventWeeklyRaffleMapAB_codec);
            break;
          }
          case 26: {
            eventWeeklyRaffleMapABPatch_.AddEntriesFrom(input, _map_eventWeeklyRaffleMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventWeeklyRaffleMap_.AddEntriesFrom(ref input, _map_eventWeeklyRaffleMap_codec);
            break;
          }
          case 18: {
            eventWeeklyRaffleMapAB_.AddEntriesFrom(ref input, _map_eventWeeklyRaffleMapAB_codec);
            break;
          }
          case 26: {
            eventWeeklyRaffleMapABPatch_.AddEntriesFrom(ref input, _map_eventWeeklyRaffleMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
