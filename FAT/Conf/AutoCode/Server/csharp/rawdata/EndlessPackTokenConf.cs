// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EndlessPackTokenConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EndlessPackTokenConf.proto</summary>
  public static partial class EndlessPackTokenConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EndlessPackTokenConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EndlessPackTokenConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiJyYXdkYXRhL0VuZGxlc3NQYWNrVG9rZW5Db25mLnByb3RvEgdyYXdkYXRh",
            "IjEKEEVuZGxlc3NQYWNrVG9rZW4SCgoCaWQYASABKAUSEQoJdG9rZW5MaXN0",
            "GAMgAygFIs4BChpFbmRsZXNzUGFja1Rva2VuTWFwQUJWYWx1ZRJZChNFbmRs",
            "ZXNzUGFja1Rva2VuTWFwGAEgAygLMjwucmF3ZGF0YS5FbmRsZXNzUGFja1Rv",
            "a2VuTWFwQUJWYWx1ZS5FbmRsZXNzUGFja1Rva2VuTWFwRW50cnkaVQoYRW5k",
            "bGVzc1BhY2tUb2tlbk1hcEVudHJ5EgsKA2tleRgBIAEoBRIoCgV2YWx1ZRgC",
            "IAEoCzIZLnJhd2RhdGEuRW5kbGVzc1BhY2tUb2tlbjoCOAEiyQQKFEVuZGxl",
            "c3NQYWNrVG9rZW5Db25mElMKE0VuZGxlc3NQYWNrVG9rZW5NYXAYASADKAsy",
            "Ni5yYXdkYXRhLkVuZGxlc3NQYWNrVG9rZW5Db25mLkVuZGxlc3NQYWNrVG9r",
            "ZW5NYXBFbnRyeRJXChVFbmRsZXNzUGFja1Rva2VuTWFwQUIYAiADKAsyOC5y",
            "YXdkYXRhLkVuZGxlc3NQYWNrVG9rZW5Db25mLkVuZGxlc3NQYWNrVG9rZW5N",
            "YXBBQkVudHJ5EmEKGkVuZGxlc3NQYWNrVG9rZW5NYXBBQlBhdGNoGAMgAygL",
            "Mj0ucmF3ZGF0YS5FbmRsZXNzUGFja1Rva2VuQ29uZi5FbmRsZXNzUGFja1Rv",
            "a2VuTWFwQUJQYXRjaEVudHJ5GlUKGEVuZGxlc3NQYWNrVG9rZW5NYXBFbnRy",
            "eRILCgNrZXkYASABKAUSKAoFdmFsdWUYAiABKAsyGS5yYXdkYXRhLkVuZGxl",
            "c3NQYWNrVG9rZW46AjgBGmEKGkVuZGxlc3NQYWNrVG9rZW5NYXBBQkVudHJ5",
            "EgsKA2tleRgBIAEoCRIyCgV2YWx1ZRgCIAEoCzIjLnJhd2RhdGEuRW5kbGVz",
            "c1BhY2tUb2tlbk1hcEFCVmFsdWU6AjgBGmYKH0VuZGxlc3NQYWNrVG9rZW5N",
            "YXBBQlBhdGNoRW50cnkSCwoDa2V5GAEgASgJEjIKBXZhbHVlGAIgASgLMiMu",
            "cmF3ZGF0YS5FbmRsZXNzUGFja1Rva2VuTWFwQUJWYWx1ZToCOAFCPVotZ2l0",
            "bGFiLmZ1bnBsdXMuaW8vZmF0L2NvbmYvZ2VuL2dvbGFuZy9yYXdkYXRhqgIL",
            "ZmF0LnJhd2RhdGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EndlessPackToken), global::fat.rawdata.EndlessPackToken.Parser, new[]{ "Id", "TokenList" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EndlessPackTokenMapABValue), global::fat.rawdata.EndlessPackTokenMapABValue.Parser, new[]{ "EndlessPackTokenMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EndlessPackTokenConf), global::fat.rawdata.EndlessPackTokenConf.Parser, new[]{ "EndlessPackTokenMap", "EndlessPackTokenMapAB", "EndlessPackTokenMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EndlessPackToken",table="EndlessPackTokenMap",table_wrapper="EndlessPackTokenConf",map="true",map_key_type="int32",data="EndlessPackTokenConf")
  /// annotation@ab(table_ab="EndlessPackTokenMapAB",table_ab_patch="EndlessPackTokenMapABPatch",table_ab_value="EndlessPackTokenMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EndlessPackToken(id="id")
  /// </summary>
  public sealed partial class EndlessPackToken : pb::IMessage<EndlessPackToken>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EndlessPackToken> _parser = new pb::MessageParser<EndlessPackToken>(() => new EndlessPackToken());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EndlessPackToken> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EndlessPackTokenConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndlessPackToken() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndlessPackToken(EndlessPackToken other) : this() {
      id_ = other.id_;
      tokenList_ = other.tokenList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndlessPackToken Clone() {
      return new EndlessPackToken(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 礼包token投放id
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "tokenList" field.</summary>
    public const int TokenListFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_tokenList_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> tokenList_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 投放详情
    /// （数量1,数量2,...）
    /// 按序对应礼包组内每个礼包对应的token奖励数量，配置为0则无奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> TokenList {
      get { return tokenList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EndlessPackToken);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EndlessPackToken other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!tokenList_.Equals(other.tokenList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      hash ^= tokenList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      tokenList_.WriteTo(output, _repeated_tokenList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      tokenList_.WriteTo(ref output, _repeated_tokenList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      size += tokenList_.CalculateSize(_repeated_tokenList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EndlessPackToken other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      tokenList_.Add(other.tokenList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            tokenList_.AddEntriesFrom(input, _repeated_tokenList_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            tokenList_.AddEntriesFrom(ref input, _repeated_tokenList_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EndlessPackTokenMapABValue : pb::IMessage<EndlessPackTokenMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EndlessPackTokenMapABValue> _parser = new pb::MessageParser<EndlessPackTokenMapABValue>(() => new EndlessPackTokenMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EndlessPackTokenMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EndlessPackTokenConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndlessPackTokenMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndlessPackTokenMapABValue(EndlessPackTokenMapABValue other) : this() {
      endlessPackTokenMap_ = other.endlessPackTokenMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndlessPackTokenMapABValue Clone() {
      return new EndlessPackTokenMapABValue(this);
    }

    /// <summary>Field number for the "EndlessPackTokenMap" field.</summary>
    public const int EndlessPackTokenMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EndlessPackToken>.Codec _map_endlessPackTokenMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EndlessPackToken>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EndlessPackToken.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EndlessPackToken> endlessPackTokenMap_ = new pbc::MapField<int, global::fat.rawdata.EndlessPackToken>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EndlessPackToken> EndlessPackTokenMap {
      get { return endlessPackTokenMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EndlessPackTokenMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EndlessPackTokenMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EndlessPackTokenMap.Equals(other.EndlessPackTokenMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EndlessPackTokenMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      endlessPackTokenMap_.WriteTo(output, _map_endlessPackTokenMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      endlessPackTokenMap_.WriteTo(ref output, _map_endlessPackTokenMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += endlessPackTokenMap_.CalculateSize(_map_endlessPackTokenMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EndlessPackTokenMapABValue other) {
      if (other == null) {
        return;
      }
      endlessPackTokenMap_.Add(other.endlessPackTokenMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            endlessPackTokenMap_.AddEntriesFrom(input, _map_endlessPackTokenMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            endlessPackTokenMap_.AddEntriesFrom(ref input, _map_endlessPackTokenMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EndlessPackTokenConf : pb::IMessage<EndlessPackTokenConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EndlessPackTokenConf> _parser = new pb::MessageParser<EndlessPackTokenConf>(() => new EndlessPackTokenConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EndlessPackTokenConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EndlessPackTokenConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndlessPackTokenConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndlessPackTokenConf(EndlessPackTokenConf other) : this() {
      endlessPackTokenMap_ = other.endlessPackTokenMap_.Clone();
      endlessPackTokenMapAB_ = other.endlessPackTokenMapAB_.Clone();
      endlessPackTokenMapABPatch_ = other.endlessPackTokenMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndlessPackTokenConf Clone() {
      return new EndlessPackTokenConf(this);
    }

    /// <summary>Field number for the "EndlessPackTokenMap" field.</summary>
    public const int EndlessPackTokenMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EndlessPackToken>.Codec _map_endlessPackTokenMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EndlessPackToken>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EndlessPackToken.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EndlessPackToken> endlessPackTokenMap_ = new pbc::MapField<int, global::fat.rawdata.EndlessPackToken>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EndlessPackToken> EndlessPackTokenMap {
      get { return endlessPackTokenMap_; }
    }

    /// <summary>Field number for the "EndlessPackTokenMapAB" field.</summary>
    public const int EndlessPackTokenMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EndlessPackTokenMapABValue>.Codec _map_endlessPackTokenMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EndlessPackTokenMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EndlessPackTokenMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EndlessPackTokenMapABValue> endlessPackTokenMapAB_ = new pbc::MapField<string, global::fat.rawdata.EndlessPackTokenMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EndlessPackTokenMapABValue> EndlessPackTokenMapAB {
      get { return endlessPackTokenMapAB_; }
    }

    /// <summary>Field number for the "EndlessPackTokenMapABPatch" field.</summary>
    public const int EndlessPackTokenMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EndlessPackTokenMapABValue>.Codec _map_endlessPackTokenMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EndlessPackTokenMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EndlessPackTokenMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EndlessPackTokenMapABValue> endlessPackTokenMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EndlessPackTokenMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EndlessPackTokenMapABValue> EndlessPackTokenMapABPatch {
      get { return endlessPackTokenMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EndlessPackTokenConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EndlessPackTokenConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EndlessPackTokenMap.Equals(other.EndlessPackTokenMap)) return false;
      if (!EndlessPackTokenMapAB.Equals(other.EndlessPackTokenMapAB)) return false;
      if (!EndlessPackTokenMapABPatch.Equals(other.EndlessPackTokenMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EndlessPackTokenMap.GetHashCode();
      hash ^= EndlessPackTokenMapAB.GetHashCode();
      hash ^= EndlessPackTokenMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      endlessPackTokenMap_.WriteTo(output, _map_endlessPackTokenMap_codec);
      endlessPackTokenMapAB_.WriteTo(output, _map_endlessPackTokenMapAB_codec);
      endlessPackTokenMapABPatch_.WriteTo(output, _map_endlessPackTokenMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      endlessPackTokenMap_.WriteTo(ref output, _map_endlessPackTokenMap_codec);
      endlessPackTokenMapAB_.WriteTo(ref output, _map_endlessPackTokenMapAB_codec);
      endlessPackTokenMapABPatch_.WriteTo(ref output, _map_endlessPackTokenMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += endlessPackTokenMap_.CalculateSize(_map_endlessPackTokenMap_codec);
      size += endlessPackTokenMapAB_.CalculateSize(_map_endlessPackTokenMapAB_codec);
      size += endlessPackTokenMapABPatch_.CalculateSize(_map_endlessPackTokenMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EndlessPackTokenConf other) {
      if (other == null) {
        return;
      }
      endlessPackTokenMap_.Add(other.endlessPackTokenMap_);
      endlessPackTokenMapAB_.Add(other.endlessPackTokenMapAB_);
      endlessPackTokenMapABPatch_.Add(other.endlessPackTokenMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            endlessPackTokenMap_.AddEntriesFrom(input, _map_endlessPackTokenMap_codec);
            break;
          }
          case 18: {
            endlessPackTokenMapAB_.AddEntriesFrom(input, _map_endlessPackTokenMapAB_codec);
            break;
          }
          case 26: {
            endlessPackTokenMapABPatch_.AddEntriesFrom(input, _map_endlessPackTokenMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            endlessPackTokenMap_.AddEntriesFrom(ref input, _map_endlessPackTokenMap_codec);
            break;
          }
          case 18: {
            endlessPackTokenMapAB_.AddEntriesFrom(ref input, _map_endlessPackTokenMapAB_codec);
            break;
          }
          case 26: {
            endlessPackTokenMapABPatch_.AddEntriesFrom(ref input, _map_endlessPackTokenMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
