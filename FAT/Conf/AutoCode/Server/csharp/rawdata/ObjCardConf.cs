// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/ObjCardConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/ObjCardConf.proto</summary>
  public static partial class ObjCardConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/ObjCardConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ObjCardConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChlyYXdkYXRhL09iakNhcmRDb25mLnByb3RvEgdyYXdkYXRhIloKB09iakNh",
            "cmQSCgoCaWQYASABKAUSDgoGaXNHb2xkGAMgASgIEhIKCmlzR29sZGFibGUY",
            "BCABKAgSEQoJbGltaXRJbmZvGAUgAygFEgwKBHN0YXIYBiABKAUimAEKEU9i",
            "akNhcmRNYXBBQlZhbHVlEj4KCk9iakNhcmRNYXAYASADKAsyKi5yYXdkYXRh",
            "Lk9iakNhcmRNYXBBQlZhbHVlLk9iakNhcmRNYXBFbnRyeRpDCg9PYmpDYXJk",
            "TWFwRW50cnkSCwoDa2V5GAEgASgFEh8KBXZhbHVlGAIgASgLMhAucmF3ZGF0",
            "YS5PYmpDYXJkOgI4ASK5AwoLT2JqQ2FyZENvbmYSOAoKT2JqQ2FyZE1hcBgB",
            "IAMoCzIkLnJhd2RhdGEuT2JqQ2FyZENvbmYuT2JqQ2FyZE1hcEVudHJ5EjwK",
            "DE9iakNhcmRNYXBBQhgCIAMoCzImLnJhd2RhdGEuT2JqQ2FyZENvbmYuT2Jq",
            "Q2FyZE1hcEFCRW50cnkSRgoRT2JqQ2FyZE1hcEFCUGF0Y2gYAyADKAsyKy5y",
            "YXdkYXRhLk9iakNhcmRDb25mLk9iakNhcmRNYXBBQlBhdGNoRW50cnkaQwoP",
            "T2JqQ2FyZE1hcEVudHJ5EgsKA2tleRgBIAEoBRIfCgV2YWx1ZRgCIAEoCzIQ",
            "LnJhd2RhdGEuT2JqQ2FyZDoCOAEaTwoRT2JqQ2FyZE1hcEFCRW50cnkSCwoD",
            "a2V5GAEgASgJEikKBXZhbHVlGAIgASgLMhoucmF3ZGF0YS5PYmpDYXJkTWFw",
            "QUJWYWx1ZToCOAEaVAoWT2JqQ2FyZE1hcEFCUGF0Y2hFbnRyeRILCgNrZXkY",
            "ASABKAkSKQoFdmFsdWUYAiABKAsyGi5yYXdkYXRhLk9iakNhcmRNYXBBQlZh",
            "bHVlOgI4AUI9Wi1naXRsYWIuZnVucGx1cy5pby9mYXQvY29uZi9nZW4vZ29s",
            "YW5nL3Jhd2RhdGGqAgtmYXQucmF3ZGF0YWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.ObjCard), global::fat.rawdata.ObjCard.Parser, new[]{ "Id", "IsGold", "IsGoldable", "LimitInfo", "Star" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.ObjCardMapABValue), global::fat.rawdata.ObjCardMapABValue.Parser, new[]{ "ObjCardMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.ObjCardConf), global::fat.rawdata.ObjCardConf.Parser, new[]{ "ObjCardMap", "ObjCardMapAB", "ObjCardMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="ObjCard",table="ObjCardMap",table_wrapper="ObjCardConf",map="true",map_key_type="int32",data="ObjCardConf")
  /// annotation@ab(table_ab="ObjCardMapAB",table_ab_patch="ObjCardMapABPatch",table_ab_value="ObjCardMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@ObjCard(id="id")
  /// </summary>
  public sealed partial class ObjCard : pb::IMessage<ObjCard>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ObjCard> _parser = new pb::MessageParser<ObjCard>(() => new ObjCard());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ObjCard> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.ObjCardConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjCard() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjCard(ObjCard other) : this() {
      id_ = other.id_;
      isGold_ = other.isGold_;
      isGoldable_ = other.isGoldable_;
      limitInfo_ = other.limitInfo_.Clone();
      star_ = other.star_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjCard Clone() {
      return new ObjCard(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 卡片ID
    /// （ObjBasic.id）
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "isGold" field.</summary>
    public const int IsGoldFieldNumber = 3;
    private bool isGold_;
    /// <summary>
    /// 是否是金卡
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsGold {
      get { return isGold_; }
      set {
        isGold_ = value;
      }
    }

    /// <summary>Field number for the "isGoldable" field.</summary>
    public const int IsGoldableFieldNumber = 4;
    private bool isGoldable_;
    /// <summary>
    /// 是否可以
    /// 被ObjCardPack.goldPayPass加成
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsGoldable {
      get { return isGoldable_; }
      set {
        isGoldable_ = value;
      }
    }

    /// <summary>Field number for the "limitInfo" field.</summary>
    public const int LimitInfoFieldNumber = 5;
    private static readonly pb::FieldCodec<int> _repeated_limitInfo_codec
        = pb::FieldCodec.ForInt32(42);
    private readonly pbc::RepeatedField<int> limitInfo_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 限制条件信息
    /// （CardLimit.id）
    /// 活动开始时需要先通过随机
    /// 来确定最终使用的唯一ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> LimitInfo {
      get { return limitInfo_; }
    }

    /// <summary>Field number for the "star" field.</summary>
    public const int StarFieldNumber = 6;
    private int star_;
    /// <summary>
    /// 卡片星级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Star {
      get { return star_; }
      set {
        star_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ObjCard);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ObjCard other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (IsGold != other.IsGold) return false;
      if (IsGoldable != other.IsGoldable) return false;
      if(!limitInfo_.Equals(other.limitInfo_)) return false;
      if (Star != other.Star) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (IsGold != false) hash ^= IsGold.GetHashCode();
      if (IsGoldable != false) hash ^= IsGoldable.GetHashCode();
      hash ^= limitInfo_.GetHashCode();
      if (Star != 0) hash ^= Star.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (IsGold != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsGold);
      }
      if (IsGoldable != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsGoldable);
      }
      limitInfo_.WriteTo(output, _repeated_limitInfo_codec);
      if (Star != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Star);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (IsGold != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsGold);
      }
      if (IsGoldable != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsGoldable);
      }
      limitInfo_.WriteTo(ref output, _repeated_limitInfo_codec);
      if (Star != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Star);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (IsGold != false) {
        size += 1 + 1;
      }
      if (IsGoldable != false) {
        size += 1 + 1;
      }
      size += limitInfo_.CalculateSize(_repeated_limitInfo_codec);
      if (Star != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Star);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ObjCard other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.IsGold != false) {
        IsGold = other.IsGold;
      }
      if (other.IsGoldable != false) {
        IsGoldable = other.IsGoldable;
      }
      limitInfo_.Add(other.limitInfo_);
      if (other.Star != 0) {
        Star = other.Star;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 24: {
            IsGold = input.ReadBool();
            break;
          }
          case 32: {
            IsGoldable = input.ReadBool();
            break;
          }
          case 42:
          case 40: {
            limitInfo_.AddEntriesFrom(input, _repeated_limitInfo_codec);
            break;
          }
          case 48: {
            Star = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 24: {
            IsGold = input.ReadBool();
            break;
          }
          case 32: {
            IsGoldable = input.ReadBool();
            break;
          }
          case 42:
          case 40: {
            limitInfo_.AddEntriesFrom(ref input, _repeated_limitInfo_codec);
            break;
          }
          case 48: {
            Star = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ObjCardMapABValue : pb::IMessage<ObjCardMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ObjCardMapABValue> _parser = new pb::MessageParser<ObjCardMapABValue>(() => new ObjCardMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ObjCardMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.ObjCardConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjCardMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjCardMapABValue(ObjCardMapABValue other) : this() {
      objCardMap_ = other.objCardMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjCardMapABValue Clone() {
      return new ObjCardMapABValue(this);
    }

    /// <summary>Field number for the "ObjCardMap" field.</summary>
    public const int ObjCardMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.ObjCard>.Codec _map_objCardMap_codec
        = new pbc::MapField<int, global::fat.rawdata.ObjCard>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ObjCard.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.ObjCard> objCardMap_ = new pbc::MapField<int, global::fat.rawdata.ObjCard>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.ObjCard> ObjCardMap {
      get { return objCardMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ObjCardMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ObjCardMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!ObjCardMap.Equals(other.ObjCardMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ObjCardMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      objCardMap_.WriteTo(output, _map_objCardMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      objCardMap_.WriteTo(ref output, _map_objCardMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += objCardMap_.CalculateSize(_map_objCardMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ObjCardMapABValue other) {
      if (other == null) {
        return;
      }
      objCardMap_.Add(other.objCardMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            objCardMap_.AddEntriesFrom(input, _map_objCardMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            objCardMap_.AddEntriesFrom(ref input, _map_objCardMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ObjCardConf : pb::IMessage<ObjCardConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ObjCardConf> _parser = new pb::MessageParser<ObjCardConf>(() => new ObjCardConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ObjCardConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.ObjCardConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjCardConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjCardConf(ObjCardConf other) : this() {
      objCardMap_ = other.objCardMap_.Clone();
      objCardMapAB_ = other.objCardMapAB_.Clone();
      objCardMapABPatch_ = other.objCardMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjCardConf Clone() {
      return new ObjCardConf(this);
    }

    /// <summary>Field number for the "ObjCardMap" field.</summary>
    public const int ObjCardMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.ObjCard>.Codec _map_objCardMap_codec
        = new pbc::MapField<int, global::fat.rawdata.ObjCard>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ObjCard.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.ObjCard> objCardMap_ = new pbc::MapField<int, global::fat.rawdata.ObjCard>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.ObjCard> ObjCardMap {
      get { return objCardMap_; }
    }

    /// <summary>Field number for the "ObjCardMapAB" field.</summary>
    public const int ObjCardMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.ObjCardMapABValue>.Codec _map_objCardMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.ObjCardMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ObjCardMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.ObjCardMapABValue> objCardMapAB_ = new pbc::MapField<string, global::fat.rawdata.ObjCardMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.ObjCardMapABValue> ObjCardMapAB {
      get { return objCardMapAB_; }
    }

    /// <summary>Field number for the "ObjCardMapABPatch" field.</summary>
    public const int ObjCardMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.ObjCardMapABValue>.Codec _map_objCardMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.ObjCardMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ObjCardMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.ObjCardMapABValue> objCardMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.ObjCardMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.ObjCardMapABValue> ObjCardMapABPatch {
      get { return objCardMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ObjCardConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ObjCardConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!ObjCardMap.Equals(other.ObjCardMap)) return false;
      if (!ObjCardMapAB.Equals(other.ObjCardMapAB)) return false;
      if (!ObjCardMapABPatch.Equals(other.ObjCardMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ObjCardMap.GetHashCode();
      hash ^= ObjCardMapAB.GetHashCode();
      hash ^= ObjCardMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      objCardMap_.WriteTo(output, _map_objCardMap_codec);
      objCardMapAB_.WriteTo(output, _map_objCardMapAB_codec);
      objCardMapABPatch_.WriteTo(output, _map_objCardMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      objCardMap_.WriteTo(ref output, _map_objCardMap_codec);
      objCardMapAB_.WriteTo(ref output, _map_objCardMapAB_codec);
      objCardMapABPatch_.WriteTo(ref output, _map_objCardMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += objCardMap_.CalculateSize(_map_objCardMap_codec);
      size += objCardMapAB_.CalculateSize(_map_objCardMapAB_codec);
      size += objCardMapABPatch_.CalculateSize(_map_objCardMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ObjCardConf other) {
      if (other == null) {
        return;
      }
      objCardMap_.Add(other.objCardMap_);
      objCardMapAB_.Add(other.objCardMapAB_);
      objCardMapABPatch_.Add(other.objCardMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            objCardMap_.AddEntriesFrom(input, _map_objCardMap_codec);
            break;
          }
          case 18: {
            objCardMapAB_.AddEntriesFrom(input, _map_objCardMapAB_codec);
            break;
          }
          case 26: {
            objCardMapABPatch_.AddEntriesFrom(input, _map_objCardMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            objCardMap_.AddEntriesFrom(ref input, _map_objCardMap_codec);
            break;
          }
          case 18: {
            objCardMapAB_.AddEntriesFrom(ref input, _map_objCardMapAB_codec);
            break;
          }
          case 26: {
            objCardMapABPatch_.AddEntriesFrom(ref input, _map_objCardMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
