// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventWeeklyRaffleRewardConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventWeeklyRaffleRewardConf.proto</summary>
  public static partial class EventWeeklyRaffleRewardConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventWeeklyRaffleRewardConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventWeeklyRaffleRewardConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CilyYXdkYXRhL0V2ZW50V2Vla2x5UmFmZmxlUmV3YXJkQ29uZi5wcm90bxIH",
            "cmF3ZGF0YSJYChdFdmVudFdlZWtseVJhZmZsZVJld2FyZBIKCgJpZBgBIAEo",
            "BRIRCglpc0phY2twb3QYAiABKAgSDgoGcmV3YXJkGAMgAygJEg4KBndlaWdo",
            "dBgEIAEoBSL4AQohRXZlbnRXZWVrbHlSYWZmbGVSZXdhcmRNYXBBQlZhbHVl",
            "Em4KGkV2ZW50V2Vla2x5UmFmZmxlUmV3YXJkTWFwGAEgAygLMkoucmF3ZGF0",
            "YS5FdmVudFdlZWtseVJhZmZsZVJld2FyZE1hcEFCVmFsdWUuRXZlbnRXZWVr",
            "bHlSYWZmbGVSZXdhcmRNYXBFbnRyeRpjCh9FdmVudFdlZWtseVJhZmZsZVJl",
            "d2FyZE1hcEVudHJ5EgsKA2tleRgBIAEoBRIvCgV2YWx1ZRgCIAEoCzIgLnJh",
            "d2RhdGEuRXZlbnRXZWVrbHlSYWZmbGVSZXdhcmQ6AjgBIrkFChtFdmVudFdl",
            "ZWtseVJhZmZsZVJld2FyZENvbmYSaAoaRXZlbnRXZWVrbHlSYWZmbGVSZXdh",
            "cmRNYXAYASADKAsyRC5yYXdkYXRhLkV2ZW50V2Vla2x5UmFmZmxlUmV3YXJk",
            "Q29uZi5FdmVudFdlZWtseVJhZmZsZVJld2FyZE1hcEVudHJ5EmwKHEV2ZW50",
            "V2Vla2x5UmFmZmxlUmV3YXJkTWFwQUIYAiADKAsyRi5yYXdkYXRhLkV2ZW50",
            "V2Vla2x5UmFmZmxlUmV3YXJkQ29uZi5FdmVudFdlZWtseVJhZmZsZVJld2Fy",
            "ZE1hcEFCRW50cnkSdgohRXZlbnRXZWVrbHlSYWZmbGVSZXdhcmRNYXBBQlBh",
            "dGNoGAMgAygLMksucmF3ZGF0YS5FdmVudFdlZWtseVJhZmZsZVJld2FyZENv",
            "bmYuRXZlbnRXZWVrbHlSYWZmbGVSZXdhcmRNYXBBQlBhdGNoRW50cnkaYwof",
            "RXZlbnRXZWVrbHlSYWZmbGVSZXdhcmRNYXBFbnRyeRILCgNrZXkYASABKAUS",
            "LwoFdmFsdWUYAiABKAsyIC5yYXdkYXRhLkV2ZW50V2Vla2x5UmFmZmxlUmV3",
            "YXJkOgI4ARpvCiFFdmVudFdlZWtseVJhZmZsZVJld2FyZE1hcEFCRW50cnkS",
            "CwoDa2V5GAEgASgJEjkKBXZhbHVlGAIgASgLMioucmF3ZGF0YS5FdmVudFdl",
            "ZWtseVJhZmZsZVJld2FyZE1hcEFCVmFsdWU6AjgBGnQKJkV2ZW50V2Vla2x5",
            "UmFmZmxlUmV3YXJkTWFwQUJQYXRjaEVudHJ5EgsKA2tleRgBIAEoCRI5CgV2",
            "YWx1ZRgCIAEoCzIqLnJhd2RhdGEuRXZlbnRXZWVrbHlSYWZmbGVSZXdhcmRN",
            "YXBBQlZhbHVlOgI4AUI9Wi1naXRsYWIuZnVucGx1cy5pby9mYXQvY29uZi9n",
            "ZW4vZ29sYW5nL3Jhd2RhdGGqAgtmYXQucmF3ZGF0YWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventWeeklyRaffleReward), global::fat.rawdata.EventWeeklyRaffleReward.Parser, new[]{ "Id", "IsJackpot", "Reward", "Weight" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventWeeklyRaffleRewardMapABValue), global::fat.rawdata.EventWeeklyRaffleRewardMapABValue.Parser, new[]{ "EventWeeklyRaffleRewardMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventWeeklyRaffleRewardConf), global::fat.rawdata.EventWeeklyRaffleRewardConf.Parser, new[]{ "EventWeeklyRaffleRewardMap", "EventWeeklyRaffleRewardMapAB", "EventWeeklyRaffleRewardMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventWeeklyRaffleReward",table="EventWeeklyRaffleRewardMap",table_wrapper="EventWeeklyRaffleRewardConf",map="true",map_key_type="int32",data="EventWeeklyRaffleRewardConf")
  /// annotation@ab(table_ab="EventWeeklyRaffleRewardMapAB",table_ab_patch="EventWeeklyRaffleRewardMapABPatch",table_ab_value="EventWeeklyRaffleRewardMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventWeeklyRaffleReward(id="id")
  /// </summary>
  public sealed partial class EventWeeklyRaffleReward : pb::IMessage<EventWeeklyRaffleReward>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventWeeklyRaffleReward> _parser = new pb::MessageParser<EventWeeklyRaffleReward>(() => new EventWeeklyRaffleReward());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventWeeklyRaffleReward> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventWeeklyRaffleRewardConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWeeklyRaffleReward() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWeeklyRaffleReward(EventWeeklyRaffleReward other) : this() {
      id_ = other.id_;
      isJackpot_ = other.isJackpot_;
      reward_ = other.reward_.Clone();
      weight_ = other.weight_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWeeklyRaffleReward Clone() {
      return new EventWeeklyRaffleReward(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 奖励id
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "isJackpot" field.</summary>
    public const int IsJackpotFieldNumber = 2;
    private bool isJackpot_;
    /// <summary>
    /// 是否大奖
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsJackpot {
      get { return isJackpot_; }
      set {
        isJackpot_ = value;
      }
    }

    /// <summary>Field number for the "reward" field.</summary>
    public const int RewardFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_reward_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> reward_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 奖励：    id:数量:计算方式
    /// （ObjBasic.id:数量:计算方式,ObjBasic.id:数量:计算方式）
    /// 参数3计算方式规则如下：
    /// 0 = 数量
    /// 3 = 数量*（等级系数/100）,RoundCoin取整
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Reward {
      get { return reward_; }
    }

    /// <summary>Field number for the "weight" field.</summary>
    public const int WeightFieldNumber = 4;
    private int weight_;
    /// <summary>
    /// 权重
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Weight {
      get { return weight_; }
      set {
        weight_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventWeeklyRaffleReward);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventWeeklyRaffleReward other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (IsJackpot != other.IsJackpot) return false;
      if(!reward_.Equals(other.reward_)) return false;
      if (Weight != other.Weight) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (IsJackpot != false) hash ^= IsJackpot.GetHashCode();
      hash ^= reward_.GetHashCode();
      if (Weight != 0) hash ^= Weight.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (IsJackpot != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsJackpot);
      }
      reward_.WriteTo(output, _repeated_reward_codec);
      if (Weight != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Weight);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (IsJackpot != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsJackpot);
      }
      reward_.WriteTo(ref output, _repeated_reward_codec);
      if (Weight != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Weight);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (IsJackpot != false) {
        size += 1 + 1;
      }
      size += reward_.CalculateSize(_repeated_reward_codec);
      if (Weight != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Weight);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventWeeklyRaffleReward other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.IsJackpot != false) {
        IsJackpot = other.IsJackpot;
      }
      reward_.Add(other.reward_);
      if (other.Weight != 0) {
        Weight = other.Weight;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            IsJackpot = input.ReadBool();
            break;
          }
          case 26: {
            reward_.AddEntriesFrom(input, _repeated_reward_codec);
            break;
          }
          case 32: {
            Weight = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            IsJackpot = input.ReadBool();
            break;
          }
          case 26: {
            reward_.AddEntriesFrom(ref input, _repeated_reward_codec);
            break;
          }
          case 32: {
            Weight = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventWeeklyRaffleRewardMapABValue : pb::IMessage<EventWeeklyRaffleRewardMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventWeeklyRaffleRewardMapABValue> _parser = new pb::MessageParser<EventWeeklyRaffleRewardMapABValue>(() => new EventWeeklyRaffleRewardMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventWeeklyRaffleRewardMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventWeeklyRaffleRewardConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWeeklyRaffleRewardMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWeeklyRaffleRewardMapABValue(EventWeeklyRaffleRewardMapABValue other) : this() {
      eventWeeklyRaffleRewardMap_ = other.eventWeeklyRaffleRewardMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWeeklyRaffleRewardMapABValue Clone() {
      return new EventWeeklyRaffleRewardMapABValue(this);
    }

    /// <summary>Field number for the "EventWeeklyRaffleRewardMap" field.</summary>
    public const int EventWeeklyRaffleRewardMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventWeeklyRaffleReward>.Codec _map_eventWeeklyRaffleRewardMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventWeeklyRaffleReward>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventWeeklyRaffleReward.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventWeeklyRaffleReward> eventWeeklyRaffleRewardMap_ = new pbc::MapField<int, global::fat.rawdata.EventWeeklyRaffleReward>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventWeeklyRaffleReward> EventWeeklyRaffleRewardMap {
      get { return eventWeeklyRaffleRewardMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventWeeklyRaffleRewardMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventWeeklyRaffleRewardMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventWeeklyRaffleRewardMap.Equals(other.EventWeeklyRaffleRewardMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventWeeklyRaffleRewardMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventWeeklyRaffleRewardMap_.WriteTo(output, _map_eventWeeklyRaffleRewardMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventWeeklyRaffleRewardMap_.WriteTo(ref output, _map_eventWeeklyRaffleRewardMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventWeeklyRaffleRewardMap_.CalculateSize(_map_eventWeeklyRaffleRewardMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventWeeklyRaffleRewardMapABValue other) {
      if (other == null) {
        return;
      }
      eventWeeklyRaffleRewardMap_.Add(other.eventWeeklyRaffleRewardMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventWeeklyRaffleRewardMap_.AddEntriesFrom(input, _map_eventWeeklyRaffleRewardMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventWeeklyRaffleRewardMap_.AddEntriesFrom(ref input, _map_eventWeeklyRaffleRewardMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventWeeklyRaffleRewardConf : pb::IMessage<EventWeeklyRaffleRewardConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventWeeklyRaffleRewardConf> _parser = new pb::MessageParser<EventWeeklyRaffleRewardConf>(() => new EventWeeklyRaffleRewardConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventWeeklyRaffleRewardConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventWeeklyRaffleRewardConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWeeklyRaffleRewardConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWeeklyRaffleRewardConf(EventWeeklyRaffleRewardConf other) : this() {
      eventWeeklyRaffleRewardMap_ = other.eventWeeklyRaffleRewardMap_.Clone();
      eventWeeklyRaffleRewardMapAB_ = other.eventWeeklyRaffleRewardMapAB_.Clone();
      eventWeeklyRaffleRewardMapABPatch_ = other.eventWeeklyRaffleRewardMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWeeklyRaffleRewardConf Clone() {
      return new EventWeeklyRaffleRewardConf(this);
    }

    /// <summary>Field number for the "EventWeeklyRaffleRewardMap" field.</summary>
    public const int EventWeeklyRaffleRewardMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventWeeklyRaffleReward>.Codec _map_eventWeeklyRaffleRewardMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventWeeklyRaffleReward>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventWeeklyRaffleReward.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventWeeklyRaffleReward> eventWeeklyRaffleRewardMap_ = new pbc::MapField<int, global::fat.rawdata.EventWeeklyRaffleReward>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventWeeklyRaffleReward> EventWeeklyRaffleRewardMap {
      get { return eventWeeklyRaffleRewardMap_; }
    }

    /// <summary>Field number for the "EventWeeklyRaffleRewardMapAB" field.</summary>
    public const int EventWeeklyRaffleRewardMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventWeeklyRaffleRewardMapABValue>.Codec _map_eventWeeklyRaffleRewardMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventWeeklyRaffleRewardMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventWeeklyRaffleRewardMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventWeeklyRaffleRewardMapABValue> eventWeeklyRaffleRewardMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventWeeklyRaffleRewardMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventWeeklyRaffleRewardMapABValue> EventWeeklyRaffleRewardMapAB {
      get { return eventWeeklyRaffleRewardMapAB_; }
    }

    /// <summary>Field number for the "EventWeeklyRaffleRewardMapABPatch" field.</summary>
    public const int EventWeeklyRaffleRewardMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventWeeklyRaffleRewardMapABValue>.Codec _map_eventWeeklyRaffleRewardMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventWeeklyRaffleRewardMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventWeeklyRaffleRewardMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventWeeklyRaffleRewardMapABValue> eventWeeklyRaffleRewardMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventWeeklyRaffleRewardMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventWeeklyRaffleRewardMapABValue> EventWeeklyRaffleRewardMapABPatch {
      get { return eventWeeklyRaffleRewardMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventWeeklyRaffleRewardConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventWeeklyRaffleRewardConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventWeeklyRaffleRewardMap.Equals(other.EventWeeklyRaffleRewardMap)) return false;
      if (!EventWeeklyRaffleRewardMapAB.Equals(other.EventWeeklyRaffleRewardMapAB)) return false;
      if (!EventWeeklyRaffleRewardMapABPatch.Equals(other.EventWeeklyRaffleRewardMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventWeeklyRaffleRewardMap.GetHashCode();
      hash ^= EventWeeklyRaffleRewardMapAB.GetHashCode();
      hash ^= EventWeeklyRaffleRewardMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventWeeklyRaffleRewardMap_.WriteTo(output, _map_eventWeeklyRaffleRewardMap_codec);
      eventWeeklyRaffleRewardMapAB_.WriteTo(output, _map_eventWeeklyRaffleRewardMapAB_codec);
      eventWeeklyRaffleRewardMapABPatch_.WriteTo(output, _map_eventWeeklyRaffleRewardMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventWeeklyRaffleRewardMap_.WriteTo(ref output, _map_eventWeeklyRaffleRewardMap_codec);
      eventWeeklyRaffleRewardMapAB_.WriteTo(ref output, _map_eventWeeklyRaffleRewardMapAB_codec);
      eventWeeklyRaffleRewardMapABPatch_.WriteTo(ref output, _map_eventWeeklyRaffleRewardMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventWeeklyRaffleRewardMap_.CalculateSize(_map_eventWeeklyRaffleRewardMap_codec);
      size += eventWeeklyRaffleRewardMapAB_.CalculateSize(_map_eventWeeklyRaffleRewardMapAB_codec);
      size += eventWeeklyRaffleRewardMapABPatch_.CalculateSize(_map_eventWeeklyRaffleRewardMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventWeeklyRaffleRewardConf other) {
      if (other == null) {
        return;
      }
      eventWeeklyRaffleRewardMap_.Add(other.eventWeeklyRaffleRewardMap_);
      eventWeeklyRaffleRewardMapAB_.Add(other.eventWeeklyRaffleRewardMapAB_);
      eventWeeklyRaffleRewardMapABPatch_.Add(other.eventWeeklyRaffleRewardMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventWeeklyRaffleRewardMap_.AddEntriesFrom(input, _map_eventWeeklyRaffleRewardMap_codec);
            break;
          }
          case 18: {
            eventWeeklyRaffleRewardMapAB_.AddEntriesFrom(input, _map_eventWeeklyRaffleRewardMapAB_codec);
            break;
          }
          case 26: {
            eventWeeklyRaffleRewardMapABPatch_.AddEntriesFrom(input, _map_eventWeeklyRaffleRewardMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventWeeklyRaffleRewardMap_.AddEntriesFrom(ref input, _map_eventWeeklyRaffleRewardMap_codec);
            break;
          }
          case 18: {
            eventWeeklyRaffleRewardMapAB_.AddEntriesFrom(ref input, _map_eventWeeklyRaffleRewardMapAB_codec);
            break;
          }
          case 26: {
            eventWeeklyRaffleRewardMapABPatch_.AddEntriesFrom(ref input, _map_eventWeeklyRaffleRewardMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
