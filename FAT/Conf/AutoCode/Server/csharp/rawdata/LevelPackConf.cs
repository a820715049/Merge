// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/LevelPackConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/LevelPackConf.proto</summary>
  public static partial class LevelPackConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/LevelPackConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LevelPackConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChtyYXdkYXRhL0xldmVsUGFja0NvbmYucHJvdG8SB3Jhd2RhdGEiSwoJTGV2",
            "ZWxQYWNrEgoKAmlkGAEgASgFEhIKCmV2ZW50VGhlbWUYAyABKAUSDwoHZ3Jh",
            "ZGVJZBgEIAEoBRINCgVsZXZlbBgGIAMoBSKkAQoTTGV2ZWxQYWNrTWFwQUJW",
            "YWx1ZRJECgxMZXZlbFBhY2tNYXAYASADKAsyLi5yYXdkYXRhLkxldmVsUGFj",
            "a01hcEFCVmFsdWUuTGV2ZWxQYWNrTWFwRW50cnkaRwoRTGV2ZWxQYWNrTWFw",
            "RW50cnkSCwoDa2V5GAEgASgFEiEKBXZhbHVlGAIgASgLMhIucmF3ZGF0YS5M",
            "ZXZlbFBhY2s6AjgBItkDCg1MZXZlbFBhY2tDb25mEj4KDExldmVsUGFja01h",
            "cBgBIAMoCzIoLnJhd2RhdGEuTGV2ZWxQYWNrQ29uZi5MZXZlbFBhY2tNYXBF",
            "bnRyeRJCCg5MZXZlbFBhY2tNYXBBQhgCIAMoCzIqLnJhd2RhdGEuTGV2ZWxQ",
            "YWNrQ29uZi5MZXZlbFBhY2tNYXBBQkVudHJ5EkwKE0xldmVsUGFja01hcEFC",
            "UGF0Y2gYAyADKAsyLy5yYXdkYXRhLkxldmVsUGFja0NvbmYuTGV2ZWxQYWNr",
            "TWFwQUJQYXRjaEVudHJ5GkcKEUxldmVsUGFja01hcEVudHJ5EgsKA2tleRgB",
            "IAEoBRIhCgV2YWx1ZRgCIAEoCzISLnJhd2RhdGEuTGV2ZWxQYWNrOgI4ARpT",
            "ChNMZXZlbFBhY2tNYXBBQkVudHJ5EgsKA2tleRgBIAEoCRIrCgV2YWx1ZRgC",
            "IAEoCzIcLnJhd2RhdGEuTGV2ZWxQYWNrTWFwQUJWYWx1ZToCOAEaWAoYTGV2",
            "ZWxQYWNrTWFwQUJQYXRjaEVudHJ5EgsKA2tleRgBIAEoCRIrCgV2YWx1ZRgC",
            "IAEoCzIcLnJhd2RhdGEuTGV2ZWxQYWNrTWFwQUJWYWx1ZToCOAFCPVotZ2l0",
            "bGFiLmZ1bnBsdXMuaW8vZmF0L2NvbmYvZ2VuL2dvbGFuZy9yYXdkYXRhqgIL",
            "ZmF0LnJhd2RhdGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.LevelPack), global::fat.rawdata.LevelPack.Parser, new[]{ "Id", "EventTheme", "GradeId", "Level" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.LevelPackMapABValue), global::fat.rawdata.LevelPackMapABValue.Parser, new[]{ "LevelPackMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.LevelPackConf), global::fat.rawdata.LevelPackConf.Parser, new[]{ "LevelPackMap", "LevelPackMapAB", "LevelPackMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="LevelPack",table="LevelPackMap",table_wrapper="LevelPackConf",map="true",map_key_type="int32",data="LevelPackConf")
  /// annotation@ab(table_ab="LevelPackMapAB",table_ab_patch="LevelPackMapABPatch",table_ab_value="LevelPackMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@LevelPack(id="id")
  /// </summary>
  public sealed partial class LevelPack : pb::IMessage<LevelPack>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LevelPack> _parser = new pb::MessageParser<LevelPack>(() => new LevelPack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LevelPack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.LevelPackConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LevelPack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LevelPack(LevelPack other) : this() {
      id_ = other.id_;
      eventTheme_ = other.eventTheme_;
      gradeId_ = other.gradeId_;
      level_ = other.level_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LevelPack Clone() {
      return new LevelPack(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 活动 id
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "eventTheme" field.</summary>
    public const int EventThemeFieldNumber = 3;
    private int eventTheme_;
    /// <summary>
    /// 弹板
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EventTheme {
      get { return eventTheme_; }
      set {
        eventTheme_ = value;
      }
    }

    /// <summary>Field number for the "gradeId" field.</summary>
    public const int GradeIdFieldNumber = 4;
    private int gradeId_;
    /// <summary>
    /// 分层后 Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GradeId {
      get { return gradeId_; }
      set {
        gradeId_ = value;
      }
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 6;
    private static readonly pb::FieldCodec<int> _repeated_level_codec
        = pb::FieldCodec.ForInt32(50);
    private readonly pbc::RepeatedField<int> level_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 预设目标等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Level {
      get { return level_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LevelPack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LevelPack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (EventTheme != other.EventTheme) return false;
      if (GradeId != other.GradeId) return false;
      if(!level_.Equals(other.level_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (EventTheme != 0) hash ^= EventTheme.GetHashCode();
      if (GradeId != 0) hash ^= GradeId.GetHashCode();
      hash ^= level_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (EventTheme != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(EventTheme);
      }
      if (GradeId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(GradeId);
      }
      level_.WriteTo(output, _repeated_level_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (EventTheme != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(EventTheme);
      }
      if (GradeId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(GradeId);
      }
      level_.WriteTo(ref output, _repeated_level_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (EventTheme != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EventTheme);
      }
      if (GradeId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GradeId);
      }
      size += level_.CalculateSize(_repeated_level_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LevelPack other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.EventTheme != 0) {
        EventTheme = other.EventTheme;
      }
      if (other.GradeId != 0) {
        GradeId = other.GradeId;
      }
      level_.Add(other.level_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 24: {
            EventTheme = input.ReadInt32();
            break;
          }
          case 32: {
            GradeId = input.ReadInt32();
            break;
          }
          case 50:
          case 48: {
            level_.AddEntriesFrom(input, _repeated_level_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 24: {
            EventTheme = input.ReadInt32();
            break;
          }
          case 32: {
            GradeId = input.ReadInt32();
            break;
          }
          case 50:
          case 48: {
            level_.AddEntriesFrom(ref input, _repeated_level_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LevelPackMapABValue : pb::IMessage<LevelPackMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LevelPackMapABValue> _parser = new pb::MessageParser<LevelPackMapABValue>(() => new LevelPackMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LevelPackMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.LevelPackConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LevelPackMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LevelPackMapABValue(LevelPackMapABValue other) : this() {
      levelPackMap_ = other.levelPackMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LevelPackMapABValue Clone() {
      return new LevelPackMapABValue(this);
    }

    /// <summary>Field number for the "LevelPackMap" field.</summary>
    public const int LevelPackMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.LevelPack>.Codec _map_levelPackMap_codec
        = new pbc::MapField<int, global::fat.rawdata.LevelPack>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.LevelPack.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.LevelPack> levelPackMap_ = new pbc::MapField<int, global::fat.rawdata.LevelPack>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.LevelPack> LevelPackMap {
      get { return levelPackMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LevelPackMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LevelPackMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!LevelPackMap.Equals(other.LevelPackMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= LevelPackMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      levelPackMap_.WriteTo(output, _map_levelPackMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      levelPackMap_.WriteTo(ref output, _map_levelPackMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += levelPackMap_.CalculateSize(_map_levelPackMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LevelPackMapABValue other) {
      if (other == null) {
        return;
      }
      levelPackMap_.Add(other.levelPackMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            levelPackMap_.AddEntriesFrom(input, _map_levelPackMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            levelPackMap_.AddEntriesFrom(ref input, _map_levelPackMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LevelPackConf : pb::IMessage<LevelPackConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LevelPackConf> _parser = new pb::MessageParser<LevelPackConf>(() => new LevelPackConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LevelPackConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.LevelPackConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LevelPackConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LevelPackConf(LevelPackConf other) : this() {
      levelPackMap_ = other.levelPackMap_.Clone();
      levelPackMapAB_ = other.levelPackMapAB_.Clone();
      levelPackMapABPatch_ = other.levelPackMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LevelPackConf Clone() {
      return new LevelPackConf(this);
    }

    /// <summary>Field number for the "LevelPackMap" field.</summary>
    public const int LevelPackMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.LevelPack>.Codec _map_levelPackMap_codec
        = new pbc::MapField<int, global::fat.rawdata.LevelPack>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.LevelPack.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.LevelPack> levelPackMap_ = new pbc::MapField<int, global::fat.rawdata.LevelPack>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.LevelPack> LevelPackMap {
      get { return levelPackMap_; }
    }

    /// <summary>Field number for the "LevelPackMapAB" field.</summary>
    public const int LevelPackMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.LevelPackMapABValue>.Codec _map_levelPackMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.LevelPackMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.LevelPackMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.LevelPackMapABValue> levelPackMapAB_ = new pbc::MapField<string, global::fat.rawdata.LevelPackMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.LevelPackMapABValue> LevelPackMapAB {
      get { return levelPackMapAB_; }
    }

    /// <summary>Field number for the "LevelPackMapABPatch" field.</summary>
    public const int LevelPackMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.LevelPackMapABValue>.Codec _map_levelPackMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.LevelPackMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.LevelPackMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.LevelPackMapABValue> levelPackMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.LevelPackMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.LevelPackMapABValue> LevelPackMapABPatch {
      get { return levelPackMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LevelPackConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LevelPackConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!LevelPackMap.Equals(other.LevelPackMap)) return false;
      if (!LevelPackMapAB.Equals(other.LevelPackMapAB)) return false;
      if (!LevelPackMapABPatch.Equals(other.LevelPackMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= LevelPackMap.GetHashCode();
      hash ^= LevelPackMapAB.GetHashCode();
      hash ^= LevelPackMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      levelPackMap_.WriteTo(output, _map_levelPackMap_codec);
      levelPackMapAB_.WriteTo(output, _map_levelPackMapAB_codec);
      levelPackMapABPatch_.WriteTo(output, _map_levelPackMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      levelPackMap_.WriteTo(ref output, _map_levelPackMap_codec);
      levelPackMapAB_.WriteTo(ref output, _map_levelPackMapAB_codec);
      levelPackMapABPatch_.WriteTo(ref output, _map_levelPackMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += levelPackMap_.CalculateSize(_map_levelPackMap_codec);
      size += levelPackMapAB_.CalculateSize(_map_levelPackMapAB_codec);
      size += levelPackMapABPatch_.CalculateSize(_map_levelPackMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LevelPackConf other) {
      if (other == null) {
        return;
      }
      levelPackMap_.Add(other.levelPackMap_);
      levelPackMapAB_.Add(other.levelPackMapAB_);
      levelPackMapABPatch_.Add(other.levelPackMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            levelPackMap_.AddEntriesFrom(input, _map_levelPackMap_codec);
            break;
          }
          case 18: {
            levelPackMapAB_.AddEntriesFrom(input, _map_levelPackMapAB_codec);
            break;
          }
          case 26: {
            levelPackMapABPatch_.AddEntriesFrom(input, _map_levelPackMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            levelPackMap_.AddEntriesFrom(ref input, _map_levelPackMap_codec);
            break;
          }
          case 18: {
            levelPackMapAB_.AddEntriesFrom(ref input, _map_levelPackMapAB_codec);
            break;
          }
          case 26: {
            levelPackMapABPatch_.AddEntriesFrom(ref input, _map_levelPackMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
