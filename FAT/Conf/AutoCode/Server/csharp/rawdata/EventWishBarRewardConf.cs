// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventWishBarRewardConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventWishBarRewardConf.proto</summary>
  public static partial class EventWishBarRewardConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventWishBarRewardConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventWishBarRewardConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiRyYXdkYXRhL0V2ZW50V2lzaEJhclJld2FyZENvbmYucHJvdG8SB3Jhd2Rh",
            "dGEibQoSRXZlbnRXaXNoQmFyUmV3YXJkEgoKAmlkGAEgASgFEg4KBmJhck51",
            "bRgCIAEoBRIRCgliYXJSZXdhcmQYAyADKAkSEwoLcmV3YXJkSWNvbjEYBSAB",
            "KAkSEwoLcmV3YXJkSWNvbjIYBiABKAki2gEKHEV2ZW50V2lzaEJhclJld2Fy",
            "ZE1hcEFCVmFsdWUSXwoVRXZlbnRXaXNoQmFyUmV3YXJkTWFwGAEgAygLMkAu",
            "cmF3ZGF0YS5FdmVudFdpc2hCYXJSZXdhcmRNYXBBQlZhbHVlLkV2ZW50V2lz",
            "aEJhclJld2FyZE1hcEVudHJ5GlkKGkV2ZW50V2lzaEJhclJld2FyZE1hcEVu",
            "dHJ5EgsKA2tleRgBIAEoBRIqCgV2YWx1ZRgCIAEoCzIbLnJhd2RhdGEuRXZl",
            "bnRXaXNoQmFyUmV3YXJkOgI4ASLpBAoWRXZlbnRXaXNoQmFyUmV3YXJkQ29u",
            "ZhJZChVFdmVudFdpc2hCYXJSZXdhcmRNYXAYASADKAsyOi5yYXdkYXRhLkV2",
            "ZW50V2lzaEJhclJld2FyZENvbmYuRXZlbnRXaXNoQmFyUmV3YXJkTWFwRW50",
            "cnkSXQoXRXZlbnRXaXNoQmFyUmV3YXJkTWFwQUIYAiADKAsyPC5yYXdkYXRh",
            "LkV2ZW50V2lzaEJhclJld2FyZENvbmYuRXZlbnRXaXNoQmFyUmV3YXJkTWFw",
            "QUJFbnRyeRJnChxFdmVudFdpc2hCYXJSZXdhcmRNYXBBQlBhdGNoGAMgAygL",
            "MkEucmF3ZGF0YS5FdmVudFdpc2hCYXJSZXdhcmRDb25mLkV2ZW50V2lzaEJh",
            "clJld2FyZE1hcEFCUGF0Y2hFbnRyeRpZChpFdmVudFdpc2hCYXJSZXdhcmRN",
            "YXBFbnRyeRILCgNrZXkYASABKAUSKgoFdmFsdWUYAiABKAsyGy5yYXdkYXRh",
            "LkV2ZW50V2lzaEJhclJld2FyZDoCOAEaZQocRXZlbnRXaXNoQmFyUmV3YXJk",
            "TWFwQUJFbnRyeRILCgNrZXkYASABKAkSNAoFdmFsdWUYAiABKAsyJS5yYXdk",
            "YXRhLkV2ZW50V2lzaEJhclJld2FyZE1hcEFCVmFsdWU6AjgBGmoKIUV2ZW50",
            "V2lzaEJhclJld2FyZE1hcEFCUGF0Y2hFbnRyeRILCgNrZXkYASABKAkSNAoF",
            "dmFsdWUYAiABKAsyJS5yYXdkYXRhLkV2ZW50V2lzaEJhclJld2FyZE1hcEFC",
            "VmFsdWU6AjgBQj1aLWdpdGxhYi5mdW5wbHVzLmlvL2ZhdC9jb25mL2dlbi9n",
            "b2xhbmcvcmF3ZGF0YaoCC2ZhdC5yYXdkYXRhYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventWishBarReward), global::fat.rawdata.EventWishBarReward.Parser, new[]{ "Id", "BarNum", "BarReward", "RewardIcon1", "RewardIcon2" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventWishBarRewardMapABValue), global::fat.rawdata.EventWishBarRewardMapABValue.Parser, new[]{ "EventWishBarRewardMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventWishBarRewardConf), global::fat.rawdata.EventWishBarRewardConf.Parser, new[]{ "EventWishBarRewardMap", "EventWishBarRewardMapAB", "EventWishBarRewardMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventWishBarReward",table="EventWishBarRewardMap",table_wrapper="EventWishBarRewardConf",map="true",map_key_type="int32",data="EventWishBarRewardConf")
  /// annotation@ab(table_ab="EventWishBarRewardMapAB",table_ab_patch="EventWishBarRewardMapABPatch",table_ab_value="EventWishBarRewardMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventWishBarReward(id="id")
  /// </summary>
  public sealed partial class EventWishBarReward : pb::IMessage<EventWishBarReward>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventWishBarReward> _parser = new pb::MessageParser<EventWishBarReward>(() => new EventWishBarReward());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventWishBarReward> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventWishBarRewardConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishBarReward() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishBarReward(EventWishBarReward other) : this() {
      id_ = other.id_;
      barNum_ = other.barNum_;
      barReward_ = other.barReward_.Clone();
      rewardIcon1_ = other.rewardIcon1_;
      rewardIcon2_ = other.rewardIcon2_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishBarReward Clone() {
      return new EventWishBarReward(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 阶段 id
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "barNum" field.</summary>
    public const int BarNumFieldNumber = 2;
    private int barNum_;
    /// <summary>
    /// 阶段进度值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BarNum {
      get { return barNum_; }
      set {
        barNum_ = value;
      }
    }

    /// <summary>Field number for the "barReward" field.</summary>
    public const int BarRewardFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_barReward_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> barReward_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 进度奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> BarReward {
      get { return barReward_; }
    }

    /// <summary>Field number for the "rewardIcon1" field.</summary>
    public const int RewardIcon1FieldNumber = 5;
    private string rewardIcon1_ = "";
    /// <summary>
    /// 进度宝箱图大
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RewardIcon1 {
      get { return rewardIcon1_; }
      set {
        rewardIcon1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "rewardIcon2" field.</summary>
    public const int RewardIcon2FieldNumber = 6;
    private string rewardIcon2_ = "";
    /// <summary>
    /// 进度宝箱图小
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RewardIcon2 {
      get { return rewardIcon2_; }
      set {
        rewardIcon2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventWishBarReward);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventWishBarReward other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (BarNum != other.BarNum) return false;
      if(!barReward_.Equals(other.barReward_)) return false;
      if (RewardIcon1 != other.RewardIcon1) return false;
      if (RewardIcon2 != other.RewardIcon2) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (BarNum != 0) hash ^= BarNum.GetHashCode();
      hash ^= barReward_.GetHashCode();
      if (RewardIcon1.Length != 0) hash ^= RewardIcon1.GetHashCode();
      if (RewardIcon2.Length != 0) hash ^= RewardIcon2.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (BarNum != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BarNum);
      }
      barReward_.WriteTo(output, _repeated_barReward_codec);
      if (RewardIcon1.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(RewardIcon1);
      }
      if (RewardIcon2.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(RewardIcon2);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (BarNum != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BarNum);
      }
      barReward_.WriteTo(ref output, _repeated_barReward_codec);
      if (RewardIcon1.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(RewardIcon1);
      }
      if (RewardIcon2.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(RewardIcon2);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (BarNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BarNum);
      }
      size += barReward_.CalculateSize(_repeated_barReward_codec);
      if (RewardIcon1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RewardIcon1);
      }
      if (RewardIcon2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RewardIcon2);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventWishBarReward other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.BarNum != 0) {
        BarNum = other.BarNum;
      }
      barReward_.Add(other.barReward_);
      if (other.RewardIcon1.Length != 0) {
        RewardIcon1 = other.RewardIcon1;
      }
      if (other.RewardIcon2.Length != 0) {
        RewardIcon2 = other.RewardIcon2;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            BarNum = input.ReadInt32();
            break;
          }
          case 26: {
            barReward_.AddEntriesFrom(input, _repeated_barReward_codec);
            break;
          }
          case 42: {
            RewardIcon1 = input.ReadString();
            break;
          }
          case 50: {
            RewardIcon2 = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            BarNum = input.ReadInt32();
            break;
          }
          case 26: {
            barReward_.AddEntriesFrom(ref input, _repeated_barReward_codec);
            break;
          }
          case 42: {
            RewardIcon1 = input.ReadString();
            break;
          }
          case 50: {
            RewardIcon2 = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventWishBarRewardMapABValue : pb::IMessage<EventWishBarRewardMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventWishBarRewardMapABValue> _parser = new pb::MessageParser<EventWishBarRewardMapABValue>(() => new EventWishBarRewardMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventWishBarRewardMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventWishBarRewardConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishBarRewardMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishBarRewardMapABValue(EventWishBarRewardMapABValue other) : this() {
      eventWishBarRewardMap_ = other.eventWishBarRewardMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishBarRewardMapABValue Clone() {
      return new EventWishBarRewardMapABValue(this);
    }

    /// <summary>Field number for the "EventWishBarRewardMap" field.</summary>
    public const int EventWishBarRewardMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventWishBarReward>.Codec _map_eventWishBarRewardMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventWishBarReward>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventWishBarReward.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventWishBarReward> eventWishBarRewardMap_ = new pbc::MapField<int, global::fat.rawdata.EventWishBarReward>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventWishBarReward> EventWishBarRewardMap {
      get { return eventWishBarRewardMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventWishBarRewardMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventWishBarRewardMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventWishBarRewardMap.Equals(other.EventWishBarRewardMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventWishBarRewardMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventWishBarRewardMap_.WriteTo(output, _map_eventWishBarRewardMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventWishBarRewardMap_.WriteTo(ref output, _map_eventWishBarRewardMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventWishBarRewardMap_.CalculateSize(_map_eventWishBarRewardMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventWishBarRewardMapABValue other) {
      if (other == null) {
        return;
      }
      eventWishBarRewardMap_.Add(other.eventWishBarRewardMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventWishBarRewardMap_.AddEntriesFrom(input, _map_eventWishBarRewardMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventWishBarRewardMap_.AddEntriesFrom(ref input, _map_eventWishBarRewardMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventWishBarRewardConf : pb::IMessage<EventWishBarRewardConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventWishBarRewardConf> _parser = new pb::MessageParser<EventWishBarRewardConf>(() => new EventWishBarRewardConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventWishBarRewardConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventWishBarRewardConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishBarRewardConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishBarRewardConf(EventWishBarRewardConf other) : this() {
      eventWishBarRewardMap_ = other.eventWishBarRewardMap_.Clone();
      eventWishBarRewardMapAB_ = other.eventWishBarRewardMapAB_.Clone();
      eventWishBarRewardMapABPatch_ = other.eventWishBarRewardMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishBarRewardConf Clone() {
      return new EventWishBarRewardConf(this);
    }

    /// <summary>Field number for the "EventWishBarRewardMap" field.</summary>
    public const int EventWishBarRewardMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventWishBarReward>.Codec _map_eventWishBarRewardMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventWishBarReward>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventWishBarReward.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventWishBarReward> eventWishBarRewardMap_ = new pbc::MapField<int, global::fat.rawdata.EventWishBarReward>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventWishBarReward> EventWishBarRewardMap {
      get { return eventWishBarRewardMap_; }
    }

    /// <summary>Field number for the "EventWishBarRewardMapAB" field.</summary>
    public const int EventWishBarRewardMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventWishBarRewardMapABValue>.Codec _map_eventWishBarRewardMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventWishBarRewardMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventWishBarRewardMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventWishBarRewardMapABValue> eventWishBarRewardMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventWishBarRewardMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventWishBarRewardMapABValue> EventWishBarRewardMapAB {
      get { return eventWishBarRewardMapAB_; }
    }

    /// <summary>Field number for the "EventWishBarRewardMapABPatch" field.</summary>
    public const int EventWishBarRewardMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventWishBarRewardMapABValue>.Codec _map_eventWishBarRewardMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventWishBarRewardMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventWishBarRewardMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventWishBarRewardMapABValue> eventWishBarRewardMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventWishBarRewardMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventWishBarRewardMapABValue> EventWishBarRewardMapABPatch {
      get { return eventWishBarRewardMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventWishBarRewardConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventWishBarRewardConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventWishBarRewardMap.Equals(other.EventWishBarRewardMap)) return false;
      if (!EventWishBarRewardMapAB.Equals(other.EventWishBarRewardMapAB)) return false;
      if (!EventWishBarRewardMapABPatch.Equals(other.EventWishBarRewardMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventWishBarRewardMap.GetHashCode();
      hash ^= EventWishBarRewardMapAB.GetHashCode();
      hash ^= EventWishBarRewardMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventWishBarRewardMap_.WriteTo(output, _map_eventWishBarRewardMap_codec);
      eventWishBarRewardMapAB_.WriteTo(output, _map_eventWishBarRewardMapAB_codec);
      eventWishBarRewardMapABPatch_.WriteTo(output, _map_eventWishBarRewardMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventWishBarRewardMap_.WriteTo(ref output, _map_eventWishBarRewardMap_codec);
      eventWishBarRewardMapAB_.WriteTo(ref output, _map_eventWishBarRewardMapAB_codec);
      eventWishBarRewardMapABPatch_.WriteTo(ref output, _map_eventWishBarRewardMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventWishBarRewardMap_.CalculateSize(_map_eventWishBarRewardMap_codec);
      size += eventWishBarRewardMapAB_.CalculateSize(_map_eventWishBarRewardMapAB_codec);
      size += eventWishBarRewardMapABPatch_.CalculateSize(_map_eventWishBarRewardMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventWishBarRewardConf other) {
      if (other == null) {
        return;
      }
      eventWishBarRewardMap_.Add(other.eventWishBarRewardMap_);
      eventWishBarRewardMapAB_.Add(other.eventWishBarRewardMapAB_);
      eventWishBarRewardMapABPatch_.Add(other.eventWishBarRewardMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventWishBarRewardMap_.AddEntriesFrom(input, _map_eventWishBarRewardMap_codec);
            break;
          }
          case 18: {
            eventWishBarRewardMapAB_.AddEntriesFrom(input, _map_eventWishBarRewardMapAB_codec);
            break;
          }
          case 26: {
            eventWishBarRewardMapABPatch_.AddEntriesFrom(input, _map_eventWishBarRewardMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventWishBarRewardMap_.AddEntriesFrom(ref input, _map_eventWishBarRewardMap_codec);
            break;
          }
          case 18: {
            eventWishBarRewardMapAB_.AddEntriesFrom(ref input, _map_eventWishBarRewardMapAB_codec);
            break;
          }
          case 26: {
            eventWishBarRewardMapABPatch_.AddEntriesFrom(ref input, _map_eventWishBarRewardMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
