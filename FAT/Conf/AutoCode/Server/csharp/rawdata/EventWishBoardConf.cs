// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventWishBoardConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventWishBoardConf.proto</summary>
  public static partial class EventWishBoardConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventWishBoardConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventWishBoardConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiByYXdkYXRhL0V2ZW50V2lzaEJvYXJkQ29uZi5wcm90bxIHcmF3ZGF0YSKn",
            "AgoORXZlbnRXaXNoQm9hcmQSCgoCaWQYASABKAUSEgoKYm9hcmRUaGVtZRgC",
            "IAEoBRIUCgxib251c0l0ZW1NYXgYAyADKAUSGQoRY29uZ3JhdHVsYXRlVGhl",
            "bWUYDCABKAUSDAoEY29zdBgEIAEoBRIWCg5lbmRSZXdhcmRUaGVtZRgFIAEo",
            "BRIQCghlbmRUaGVtZRgGIAEoBRISCgpldmVudFRoZW1lGAcgASgFEhMKC2dh",
            "bGxleVRoZW1lGA0gASgFEg8KB2dyYWRlSWQYCSABKAUSEQoJaGVscFRoZW1l",
            "GAogASgFEhQKDGxvYWRpbmdUaGVtZRgLIAEoBRIXCg9zdGVwUmV3YXJkVGhl",
            "bWUYDiABKAUSEAoIdGlwVGhlbWUYDyABKAUiwgEKGEV2ZW50V2lzaEJvYXJk",
            "TWFwQUJWYWx1ZRJTChFFdmVudFdpc2hCb2FyZE1hcBgBIAMoCzI4LnJhd2Rh",
            "dGEuRXZlbnRXaXNoQm9hcmRNYXBBQlZhbHVlLkV2ZW50V2lzaEJvYXJkTWFw",
            "RW50cnkaUQoWRXZlbnRXaXNoQm9hcmRNYXBFbnRyeRILCgNrZXkYASABKAUS",
            "JgoFdmFsdWUYAiABKAsyFy5yYXdkYXRhLkV2ZW50V2lzaEJvYXJkOgI4ASKp",
            "BAoSRXZlbnRXaXNoQm9hcmRDb25mEk0KEUV2ZW50V2lzaEJvYXJkTWFwGAEg",
            "AygLMjIucmF3ZGF0YS5FdmVudFdpc2hCb2FyZENvbmYuRXZlbnRXaXNoQm9h",
            "cmRNYXBFbnRyeRJRChNFdmVudFdpc2hCb2FyZE1hcEFCGAIgAygLMjQucmF3",
            "ZGF0YS5FdmVudFdpc2hCb2FyZENvbmYuRXZlbnRXaXNoQm9hcmRNYXBBQkVu",
            "dHJ5ElsKGEV2ZW50V2lzaEJvYXJkTWFwQUJQYXRjaBgDIAMoCzI5LnJhd2Rh",
            "dGEuRXZlbnRXaXNoQm9hcmRDb25mLkV2ZW50V2lzaEJvYXJkTWFwQUJQYXRj",
            "aEVudHJ5GlEKFkV2ZW50V2lzaEJvYXJkTWFwRW50cnkSCwoDa2V5GAEgASgF",
            "EiYKBXZhbHVlGAIgASgLMhcucmF3ZGF0YS5FdmVudFdpc2hCb2FyZDoCOAEa",
            "XQoYRXZlbnRXaXNoQm9hcmRNYXBBQkVudHJ5EgsKA2tleRgBIAEoCRIwCgV2",
            "YWx1ZRgCIAEoCzIhLnJhd2RhdGEuRXZlbnRXaXNoQm9hcmRNYXBBQlZhbHVl",
            "OgI4ARpiCh1FdmVudFdpc2hCb2FyZE1hcEFCUGF0Y2hFbnRyeRILCgNrZXkY",
            "ASABKAkSMAoFdmFsdWUYAiABKAsyIS5yYXdkYXRhLkV2ZW50V2lzaEJvYXJk",
            "TWFwQUJWYWx1ZToCOAFCPVotZ2l0bGFiLmZ1bnBsdXMuaW8vZmF0L2NvbmYv",
            "Z2VuL2dvbGFuZy9yYXdkYXRhqgILZmF0LnJhd2RhdGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventWishBoard), global::fat.rawdata.EventWishBoard.Parser, new[]{ "Id", "BoardTheme", "BonusItemMax", "CongratulateTheme", "Cost", "EndRewardTheme", "EndTheme", "EventTheme", "GalleyTheme", "GradeId", "HelpTheme", "LoadingTheme", "StepRewardTheme", "TipTheme" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventWishBoardMapABValue), global::fat.rawdata.EventWishBoardMapABValue.Parser, new[]{ "EventWishBoardMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventWishBoardConf), global::fat.rawdata.EventWishBoardConf.Parser, new[]{ "EventWishBoardMap", "EventWishBoardMapAB", "EventWishBoardMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventWishBoard",table="EventWishBoardMap",table_wrapper="EventWishBoardConf",map="true",map_key_type="int32",data="EventWishBoardConf")
  /// annotation@ab(table_ab="EventWishBoardMapAB",table_ab_patch="EventWishBoardMapABPatch",table_ab_value="EventWishBoardMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventWishBoard(id="id")
  /// </summary>
  public sealed partial class EventWishBoard : pb::IMessage<EventWishBoard>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventWishBoard> _parser = new pb::MessageParser<EventWishBoard>(() => new EventWishBoard());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventWishBoard> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventWishBoardConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishBoard() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishBoard(EventWishBoard other) : this() {
      id_ = other.id_;
      boardTheme_ = other.boardTheme_;
      bonusItemMax_ = other.bonusItemMax_.Clone();
      congratulateTheme_ = other.congratulateTheme_;
      cost_ = other.cost_;
      endRewardTheme_ = other.endRewardTheme_;
      endTheme_ = other.endTheme_;
      eventTheme_ = other.eventTheme_;
      galleyTheme_ = other.galleyTheme_;
      gradeId_ = other.gradeId_;
      helpTheme_ = other.helpTheme_;
      loadingTheme_ = other.loadingTheme_;
      stepRewardTheme_ = other.stepRewardTheme_;
      tipTheme_ = other.tipTheme_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishBoard Clone() {
      return new EventWishBoard(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// id
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "boardTheme" field.</summary>
    public const int BoardThemeFieldNumber = 2;
    private int boardTheme_;
    /// <summary>
    /// 棋盘
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BoardTheme {
      get { return boardTheme_; }
      set {
        boardTheme_ = value;
      }
    }

    /// <summary>Field number for the "bonusItemMax" field.</summary>
    public const int BonusItemMaxFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_bonusItemMax_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> bonusItemMax_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 满级进度棋子
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> BonusItemMax {
      get { return bonusItemMax_; }
    }

    /// <summary>Field number for the "congratulateTheme" field.</summary>
    public const int CongratulateThemeFieldNumber = 12;
    private int congratulateTheme_;
    /// <summary>
    /// 庆祝横幅
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CongratulateTheme {
      get { return congratulateTheme_; }
      set {
        congratulateTheme_ = value;
      }
    }

    /// <summary>Field number for the "cost" field.</summary>
    public const int CostFieldNumber = 4;
    private int cost_;
    /// <summary>
    /// 消耗内容
    /// （objbasic.id)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Cost {
      get { return cost_; }
      set {
        cost_ = value;
      }
    }

    /// <summary>Field number for the "endRewardTheme" field.</summary>
    public const int EndRewardThemeFieldNumber = 5;
    private int endRewardTheme_;
    /// <summary>
    /// 补领
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EndRewardTheme {
      get { return endRewardTheme_; }
      set {
        endRewardTheme_ = value;
      }
    }

    /// <summary>Field number for the "endTheme" field.</summary>
    public const int EndThemeFieldNumber = 6;
    private int endTheme_;
    /// <summary>
    /// 结束
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EndTheme {
      get { return endTheme_; }
      set {
        endTheme_ = value;
      }
    }

    /// <summary>Field number for the "eventTheme" field.</summary>
    public const int EventThemeFieldNumber = 7;
    private int eventTheme_;
    /// <summary>
    /// 开启
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EventTheme {
      get { return eventTheme_; }
      set {
        eventTheme_ = value;
      }
    }

    /// <summary>Field number for the "galleyTheme" field.</summary>
    public const int GalleyThemeFieldNumber = 13;
    private int galleyTheme_;
    /// <summary>
    /// 图鉴
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GalleyTheme {
      get { return galleyTheme_; }
      set {
        galleyTheme_ = value;
      }
    }

    /// <summary>Field number for the "gradeId" field.</summary>
    public const int GradeIdFieldNumber = 9;
    private int gradeId_;
    /// <summary>
    /// 分层
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GradeId {
      get { return gradeId_; }
      set {
        gradeId_ = value;
      }
    }

    /// <summary>Field number for the "helpTheme" field.</summary>
    public const int HelpThemeFieldNumber = 10;
    private int helpTheme_;
    /// <summary>
    /// 帮助
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int HelpTheme {
      get { return helpTheme_; }
      set {
        helpTheme_ = value;
      }
    }

    /// <summary>Field number for the "loadingTheme" field.</summary>
    public const int LoadingThemeFieldNumber = 11;
    private int loadingTheme_;
    /// <summary>
    /// loading
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LoadingTheme {
      get { return loadingTheme_; }
      set {
        loadingTheme_ = value;
      }
    }

    /// <summary>Field number for the "stepRewardTheme" field.</summary>
    public const int StepRewardThemeFieldNumber = 14;
    private int stepRewardTheme_;
    /// <summary>
    /// 阶段奖励界面
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StepRewardTheme {
      get { return stepRewardTheme_; }
      set {
        stepRewardTheme_ = value;
      }
    }

    /// <summary>Field number for the "tipTheme" field.</summary>
    public const int TipThemeFieldNumber = 15;
    private int tipTheme_;
    /// <summary>
    /// 提示棋子功能改变
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TipTheme {
      get { return tipTheme_; }
      set {
        tipTheme_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventWishBoard);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventWishBoard other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (BoardTheme != other.BoardTheme) return false;
      if(!bonusItemMax_.Equals(other.bonusItemMax_)) return false;
      if (CongratulateTheme != other.CongratulateTheme) return false;
      if (Cost != other.Cost) return false;
      if (EndRewardTheme != other.EndRewardTheme) return false;
      if (EndTheme != other.EndTheme) return false;
      if (EventTheme != other.EventTheme) return false;
      if (GalleyTheme != other.GalleyTheme) return false;
      if (GradeId != other.GradeId) return false;
      if (HelpTheme != other.HelpTheme) return false;
      if (LoadingTheme != other.LoadingTheme) return false;
      if (StepRewardTheme != other.StepRewardTheme) return false;
      if (TipTheme != other.TipTheme) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (BoardTheme != 0) hash ^= BoardTheme.GetHashCode();
      hash ^= bonusItemMax_.GetHashCode();
      if (CongratulateTheme != 0) hash ^= CongratulateTheme.GetHashCode();
      if (Cost != 0) hash ^= Cost.GetHashCode();
      if (EndRewardTheme != 0) hash ^= EndRewardTheme.GetHashCode();
      if (EndTheme != 0) hash ^= EndTheme.GetHashCode();
      if (EventTheme != 0) hash ^= EventTheme.GetHashCode();
      if (GalleyTheme != 0) hash ^= GalleyTheme.GetHashCode();
      if (GradeId != 0) hash ^= GradeId.GetHashCode();
      if (HelpTheme != 0) hash ^= HelpTheme.GetHashCode();
      if (LoadingTheme != 0) hash ^= LoadingTheme.GetHashCode();
      if (StepRewardTheme != 0) hash ^= StepRewardTheme.GetHashCode();
      if (TipTheme != 0) hash ^= TipTheme.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (BoardTheme != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BoardTheme);
      }
      bonusItemMax_.WriteTo(output, _repeated_bonusItemMax_codec);
      if (Cost != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Cost);
      }
      if (EndRewardTheme != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(EndRewardTheme);
      }
      if (EndTheme != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(EndTheme);
      }
      if (EventTheme != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(EventTheme);
      }
      if (GradeId != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(GradeId);
      }
      if (HelpTheme != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(HelpTheme);
      }
      if (LoadingTheme != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(LoadingTheme);
      }
      if (CongratulateTheme != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(CongratulateTheme);
      }
      if (GalleyTheme != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(GalleyTheme);
      }
      if (StepRewardTheme != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(StepRewardTheme);
      }
      if (TipTheme != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(TipTheme);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (BoardTheme != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BoardTheme);
      }
      bonusItemMax_.WriteTo(ref output, _repeated_bonusItemMax_codec);
      if (Cost != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Cost);
      }
      if (EndRewardTheme != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(EndRewardTheme);
      }
      if (EndTheme != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(EndTheme);
      }
      if (EventTheme != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(EventTheme);
      }
      if (GradeId != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(GradeId);
      }
      if (HelpTheme != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(HelpTheme);
      }
      if (LoadingTheme != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(LoadingTheme);
      }
      if (CongratulateTheme != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(CongratulateTheme);
      }
      if (GalleyTheme != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(GalleyTheme);
      }
      if (StepRewardTheme != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(StepRewardTheme);
      }
      if (TipTheme != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(TipTheme);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (BoardTheme != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BoardTheme);
      }
      size += bonusItemMax_.CalculateSize(_repeated_bonusItemMax_codec);
      if (CongratulateTheme != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CongratulateTheme);
      }
      if (Cost != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Cost);
      }
      if (EndRewardTheme != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EndRewardTheme);
      }
      if (EndTheme != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EndTheme);
      }
      if (EventTheme != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EventTheme);
      }
      if (GalleyTheme != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GalleyTheme);
      }
      if (GradeId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GradeId);
      }
      if (HelpTheme != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HelpTheme);
      }
      if (LoadingTheme != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LoadingTheme);
      }
      if (StepRewardTheme != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StepRewardTheme);
      }
      if (TipTheme != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TipTheme);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventWishBoard other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.BoardTheme != 0) {
        BoardTheme = other.BoardTheme;
      }
      bonusItemMax_.Add(other.bonusItemMax_);
      if (other.CongratulateTheme != 0) {
        CongratulateTheme = other.CongratulateTheme;
      }
      if (other.Cost != 0) {
        Cost = other.Cost;
      }
      if (other.EndRewardTheme != 0) {
        EndRewardTheme = other.EndRewardTheme;
      }
      if (other.EndTheme != 0) {
        EndTheme = other.EndTheme;
      }
      if (other.EventTheme != 0) {
        EventTheme = other.EventTheme;
      }
      if (other.GalleyTheme != 0) {
        GalleyTheme = other.GalleyTheme;
      }
      if (other.GradeId != 0) {
        GradeId = other.GradeId;
      }
      if (other.HelpTheme != 0) {
        HelpTheme = other.HelpTheme;
      }
      if (other.LoadingTheme != 0) {
        LoadingTheme = other.LoadingTheme;
      }
      if (other.StepRewardTheme != 0) {
        StepRewardTheme = other.StepRewardTheme;
      }
      if (other.TipTheme != 0) {
        TipTheme = other.TipTheme;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            BoardTheme = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            bonusItemMax_.AddEntriesFrom(input, _repeated_bonusItemMax_codec);
            break;
          }
          case 32: {
            Cost = input.ReadInt32();
            break;
          }
          case 40: {
            EndRewardTheme = input.ReadInt32();
            break;
          }
          case 48: {
            EndTheme = input.ReadInt32();
            break;
          }
          case 56: {
            EventTheme = input.ReadInt32();
            break;
          }
          case 72: {
            GradeId = input.ReadInt32();
            break;
          }
          case 80: {
            HelpTheme = input.ReadInt32();
            break;
          }
          case 88: {
            LoadingTheme = input.ReadInt32();
            break;
          }
          case 96: {
            CongratulateTheme = input.ReadInt32();
            break;
          }
          case 104: {
            GalleyTheme = input.ReadInt32();
            break;
          }
          case 112: {
            StepRewardTheme = input.ReadInt32();
            break;
          }
          case 120: {
            TipTheme = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            BoardTheme = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            bonusItemMax_.AddEntriesFrom(ref input, _repeated_bonusItemMax_codec);
            break;
          }
          case 32: {
            Cost = input.ReadInt32();
            break;
          }
          case 40: {
            EndRewardTheme = input.ReadInt32();
            break;
          }
          case 48: {
            EndTheme = input.ReadInt32();
            break;
          }
          case 56: {
            EventTheme = input.ReadInt32();
            break;
          }
          case 72: {
            GradeId = input.ReadInt32();
            break;
          }
          case 80: {
            HelpTheme = input.ReadInt32();
            break;
          }
          case 88: {
            LoadingTheme = input.ReadInt32();
            break;
          }
          case 96: {
            CongratulateTheme = input.ReadInt32();
            break;
          }
          case 104: {
            GalleyTheme = input.ReadInt32();
            break;
          }
          case 112: {
            StepRewardTheme = input.ReadInt32();
            break;
          }
          case 120: {
            TipTheme = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventWishBoardMapABValue : pb::IMessage<EventWishBoardMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventWishBoardMapABValue> _parser = new pb::MessageParser<EventWishBoardMapABValue>(() => new EventWishBoardMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventWishBoardMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventWishBoardConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishBoardMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishBoardMapABValue(EventWishBoardMapABValue other) : this() {
      eventWishBoardMap_ = other.eventWishBoardMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishBoardMapABValue Clone() {
      return new EventWishBoardMapABValue(this);
    }

    /// <summary>Field number for the "EventWishBoardMap" field.</summary>
    public const int EventWishBoardMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventWishBoard>.Codec _map_eventWishBoardMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventWishBoard>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventWishBoard.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventWishBoard> eventWishBoardMap_ = new pbc::MapField<int, global::fat.rawdata.EventWishBoard>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventWishBoard> EventWishBoardMap {
      get { return eventWishBoardMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventWishBoardMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventWishBoardMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventWishBoardMap.Equals(other.EventWishBoardMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventWishBoardMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventWishBoardMap_.WriteTo(output, _map_eventWishBoardMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventWishBoardMap_.WriteTo(ref output, _map_eventWishBoardMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventWishBoardMap_.CalculateSize(_map_eventWishBoardMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventWishBoardMapABValue other) {
      if (other == null) {
        return;
      }
      eventWishBoardMap_.Add(other.eventWishBoardMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventWishBoardMap_.AddEntriesFrom(input, _map_eventWishBoardMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventWishBoardMap_.AddEntriesFrom(ref input, _map_eventWishBoardMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventWishBoardConf : pb::IMessage<EventWishBoardConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventWishBoardConf> _parser = new pb::MessageParser<EventWishBoardConf>(() => new EventWishBoardConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventWishBoardConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventWishBoardConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishBoardConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishBoardConf(EventWishBoardConf other) : this() {
      eventWishBoardMap_ = other.eventWishBoardMap_.Clone();
      eventWishBoardMapAB_ = other.eventWishBoardMapAB_.Clone();
      eventWishBoardMapABPatch_ = other.eventWishBoardMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishBoardConf Clone() {
      return new EventWishBoardConf(this);
    }

    /// <summary>Field number for the "EventWishBoardMap" field.</summary>
    public const int EventWishBoardMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventWishBoard>.Codec _map_eventWishBoardMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventWishBoard>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventWishBoard.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventWishBoard> eventWishBoardMap_ = new pbc::MapField<int, global::fat.rawdata.EventWishBoard>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventWishBoard> EventWishBoardMap {
      get { return eventWishBoardMap_; }
    }

    /// <summary>Field number for the "EventWishBoardMapAB" field.</summary>
    public const int EventWishBoardMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventWishBoardMapABValue>.Codec _map_eventWishBoardMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventWishBoardMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventWishBoardMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventWishBoardMapABValue> eventWishBoardMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventWishBoardMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventWishBoardMapABValue> EventWishBoardMapAB {
      get { return eventWishBoardMapAB_; }
    }

    /// <summary>Field number for the "EventWishBoardMapABPatch" field.</summary>
    public const int EventWishBoardMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventWishBoardMapABValue>.Codec _map_eventWishBoardMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventWishBoardMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventWishBoardMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventWishBoardMapABValue> eventWishBoardMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventWishBoardMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventWishBoardMapABValue> EventWishBoardMapABPatch {
      get { return eventWishBoardMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventWishBoardConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventWishBoardConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventWishBoardMap.Equals(other.EventWishBoardMap)) return false;
      if (!EventWishBoardMapAB.Equals(other.EventWishBoardMapAB)) return false;
      if (!EventWishBoardMapABPatch.Equals(other.EventWishBoardMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventWishBoardMap.GetHashCode();
      hash ^= EventWishBoardMapAB.GetHashCode();
      hash ^= EventWishBoardMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventWishBoardMap_.WriteTo(output, _map_eventWishBoardMap_codec);
      eventWishBoardMapAB_.WriteTo(output, _map_eventWishBoardMapAB_codec);
      eventWishBoardMapABPatch_.WriteTo(output, _map_eventWishBoardMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventWishBoardMap_.WriteTo(ref output, _map_eventWishBoardMap_codec);
      eventWishBoardMapAB_.WriteTo(ref output, _map_eventWishBoardMapAB_codec);
      eventWishBoardMapABPatch_.WriteTo(ref output, _map_eventWishBoardMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventWishBoardMap_.CalculateSize(_map_eventWishBoardMap_codec);
      size += eventWishBoardMapAB_.CalculateSize(_map_eventWishBoardMapAB_codec);
      size += eventWishBoardMapABPatch_.CalculateSize(_map_eventWishBoardMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventWishBoardConf other) {
      if (other == null) {
        return;
      }
      eventWishBoardMap_.Add(other.eventWishBoardMap_);
      eventWishBoardMapAB_.Add(other.eventWishBoardMapAB_);
      eventWishBoardMapABPatch_.Add(other.eventWishBoardMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventWishBoardMap_.AddEntriesFrom(input, _map_eventWishBoardMap_codec);
            break;
          }
          case 18: {
            eventWishBoardMapAB_.AddEntriesFrom(input, _map_eventWishBoardMapAB_codec);
            break;
          }
          case 26: {
            eventWishBoardMapABPatch_.AddEntriesFrom(input, _map_eventWishBoardMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventWishBoardMap_.AddEntriesFrom(ref input, _map_eventWishBoardMap_codec);
            break;
          }
          case 18: {
            eventWishBoardMapAB_.AddEntriesFrom(ref input, _map_eventWishBoardMapAB_codec);
            break;
          }
          case 26: {
            eventWishBoardMapABPatch_.AddEntriesFrom(ref input, _map_eventWishBoardMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
