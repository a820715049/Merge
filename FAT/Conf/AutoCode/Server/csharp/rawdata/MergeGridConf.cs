// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/MergeGridConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/MergeGridConf.proto</summary>
  public static partial class MergeGridConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/MergeGridConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MergeGridConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChtyYXdkYXRhL01lcmdlR3JpZENvbmYucHJvdG8SB3Jhd2RhdGEiYwoJTWVy",
            "Z2VHcmlkEgoKAmlkGAEgASgFEhUKDWdmeFdvcmtCb3R0b20YAiABKAkSEgoK",
            "Z2Z4V29ya1RvcBgDIAEoCRIMCgRoaW50GAQgASgJEhEKCXNuZE1vdmVJbhgF",
            "IAEoCSKkAQoTTWVyZ2VHcmlkTWFwQUJWYWx1ZRJECgxNZXJnZUdyaWRNYXAY",
            "ASADKAsyLi5yYXdkYXRhLk1lcmdlR3JpZE1hcEFCVmFsdWUuTWVyZ2VHcmlk",
            "TWFwRW50cnkaRwoRTWVyZ2VHcmlkTWFwRW50cnkSCwoDa2V5GAEgASgFEiEK",
            "BXZhbHVlGAIgASgLMhIucmF3ZGF0YS5NZXJnZUdyaWQ6AjgBItkDCg1NZXJn",
            "ZUdyaWRDb25mEj4KDE1lcmdlR3JpZE1hcBgBIAMoCzIoLnJhd2RhdGEuTWVy",
            "Z2VHcmlkQ29uZi5NZXJnZUdyaWRNYXBFbnRyeRJCCg5NZXJnZUdyaWRNYXBB",
            "QhgCIAMoCzIqLnJhd2RhdGEuTWVyZ2VHcmlkQ29uZi5NZXJnZUdyaWRNYXBB",
            "QkVudHJ5EkwKE01lcmdlR3JpZE1hcEFCUGF0Y2gYAyADKAsyLy5yYXdkYXRh",
            "Lk1lcmdlR3JpZENvbmYuTWVyZ2VHcmlkTWFwQUJQYXRjaEVudHJ5GkcKEU1l",
            "cmdlR3JpZE1hcEVudHJ5EgsKA2tleRgBIAEoBRIhCgV2YWx1ZRgCIAEoCzIS",
            "LnJhd2RhdGEuTWVyZ2VHcmlkOgI4ARpTChNNZXJnZUdyaWRNYXBBQkVudHJ5",
            "EgsKA2tleRgBIAEoCRIrCgV2YWx1ZRgCIAEoCzIcLnJhd2RhdGEuTWVyZ2VH",
            "cmlkTWFwQUJWYWx1ZToCOAEaWAoYTWVyZ2VHcmlkTWFwQUJQYXRjaEVudHJ5",
            "EgsKA2tleRgBIAEoCRIrCgV2YWx1ZRgCIAEoCzIcLnJhd2RhdGEuTWVyZ2VH",
            "cmlkTWFwQUJWYWx1ZToCOAFCPVotZ2l0bGFiLmZ1bnBsdXMuaW8vZmF0L2Nv",
            "bmYvZ2VuL2dvbGFuZy9yYXdkYXRhqgILZmF0LnJhd2RhdGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.MergeGrid), global::fat.rawdata.MergeGrid.Parser, new[]{ "Id", "GfxWorkBottom", "GfxWorkTop", "Hint", "SndMoveIn" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.MergeGridMapABValue), global::fat.rawdata.MergeGridMapABValue.Parser, new[]{ "MergeGridMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.MergeGridConf), global::fat.rawdata.MergeGridConf.Parser, new[]{ "MergeGridMap", "MergeGridMapAB", "MergeGridMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="MergeGrid",table="MergeGridMap",table_wrapper="MergeGridConf",map="true",map_key_type="int32",data="MergeGridConf")
  /// annotation@ab(table_ab="MergeGridMapAB",table_ab_patch="MergeGridMapABPatch",table_ab_value="MergeGridMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@MergeGrid(id="id")
  /// </summary>
  public sealed partial class MergeGrid : pb::IMessage<MergeGrid>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MergeGrid> _parser = new pb::MessageParser<MergeGrid>(() => new MergeGrid());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MergeGrid> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.MergeGridConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeGrid() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeGrid(MergeGrid other) : this() {
      id_ = other.id_;
      gfxWorkBottom_ = other.gfxWorkBottom_;
      gfxWorkTop_ = other.gfxWorkTop_;
      hint_ = other.hint_;
      sndMoveIn_ = other.sndMoveIn_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeGrid Clone() {
      return new MergeGrid(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 唯一id
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "gfxWorkBottom" field.</summary>
    public const int GfxWorkBottomFieldNumber = 2;
    private string gfxWorkBottom_ = "";
    /// <summary>
    /// 棋子工作特效底部
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GfxWorkBottom {
      get { return gfxWorkBottom_; }
      set {
        gfxWorkBottom_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gfxWorkTop" field.</summary>
    public const int GfxWorkTopFieldNumber = 3;
    private string gfxWorkTop_ = "";
    /// <summary>
    /// 棋子工作特效
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GfxWorkTop {
      get { return gfxWorkTop_; }
      set {
        gfxWorkTop_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hint" field.</summary>
    public const int HintFieldNumber = 4;
    private string hint_ = "";
    /// <summary>
    /// 文字提示
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Hint {
      get { return hint_; }
      set {
        hint_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sndMoveIn" field.</summary>
    public const int SndMoveInFieldNumber = 5;
    private string sndMoveIn_ = "";
    /// <summary>
    /// 放入音效
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SndMoveIn {
      get { return sndMoveIn_; }
      set {
        sndMoveIn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MergeGrid);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MergeGrid other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (GfxWorkBottom != other.GfxWorkBottom) return false;
      if (GfxWorkTop != other.GfxWorkTop) return false;
      if (Hint != other.Hint) return false;
      if (SndMoveIn != other.SndMoveIn) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (GfxWorkBottom.Length != 0) hash ^= GfxWorkBottom.GetHashCode();
      if (GfxWorkTop.Length != 0) hash ^= GfxWorkTop.GetHashCode();
      if (Hint.Length != 0) hash ^= Hint.GetHashCode();
      if (SndMoveIn.Length != 0) hash ^= SndMoveIn.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (GfxWorkBottom.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GfxWorkBottom);
      }
      if (GfxWorkTop.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(GfxWorkTop);
      }
      if (Hint.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Hint);
      }
      if (SndMoveIn.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(SndMoveIn);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (GfxWorkBottom.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GfxWorkBottom);
      }
      if (GfxWorkTop.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(GfxWorkTop);
      }
      if (Hint.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Hint);
      }
      if (SndMoveIn.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(SndMoveIn);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (GfxWorkBottom.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GfxWorkBottom);
      }
      if (GfxWorkTop.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GfxWorkTop);
      }
      if (Hint.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Hint);
      }
      if (SndMoveIn.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SndMoveIn);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MergeGrid other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.GfxWorkBottom.Length != 0) {
        GfxWorkBottom = other.GfxWorkBottom;
      }
      if (other.GfxWorkTop.Length != 0) {
        GfxWorkTop = other.GfxWorkTop;
      }
      if (other.Hint.Length != 0) {
        Hint = other.Hint;
      }
      if (other.SndMoveIn.Length != 0) {
        SndMoveIn = other.SndMoveIn;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            GfxWorkBottom = input.ReadString();
            break;
          }
          case 26: {
            GfxWorkTop = input.ReadString();
            break;
          }
          case 34: {
            Hint = input.ReadString();
            break;
          }
          case 42: {
            SndMoveIn = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            GfxWorkBottom = input.ReadString();
            break;
          }
          case 26: {
            GfxWorkTop = input.ReadString();
            break;
          }
          case 34: {
            Hint = input.ReadString();
            break;
          }
          case 42: {
            SndMoveIn = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MergeGridMapABValue : pb::IMessage<MergeGridMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MergeGridMapABValue> _parser = new pb::MessageParser<MergeGridMapABValue>(() => new MergeGridMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MergeGridMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.MergeGridConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeGridMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeGridMapABValue(MergeGridMapABValue other) : this() {
      mergeGridMap_ = other.mergeGridMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeGridMapABValue Clone() {
      return new MergeGridMapABValue(this);
    }

    /// <summary>Field number for the "MergeGridMap" field.</summary>
    public const int MergeGridMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.MergeGrid>.Codec _map_mergeGridMap_codec
        = new pbc::MapField<int, global::fat.rawdata.MergeGrid>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.MergeGrid.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.MergeGrid> mergeGridMap_ = new pbc::MapField<int, global::fat.rawdata.MergeGrid>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.MergeGrid> MergeGridMap {
      get { return mergeGridMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MergeGridMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MergeGridMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!MergeGridMap.Equals(other.MergeGridMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= MergeGridMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      mergeGridMap_.WriteTo(output, _map_mergeGridMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      mergeGridMap_.WriteTo(ref output, _map_mergeGridMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += mergeGridMap_.CalculateSize(_map_mergeGridMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MergeGridMapABValue other) {
      if (other == null) {
        return;
      }
      mergeGridMap_.Add(other.mergeGridMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            mergeGridMap_.AddEntriesFrom(input, _map_mergeGridMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            mergeGridMap_.AddEntriesFrom(ref input, _map_mergeGridMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MergeGridConf : pb::IMessage<MergeGridConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MergeGridConf> _parser = new pb::MessageParser<MergeGridConf>(() => new MergeGridConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MergeGridConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.MergeGridConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeGridConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeGridConf(MergeGridConf other) : this() {
      mergeGridMap_ = other.mergeGridMap_.Clone();
      mergeGridMapAB_ = other.mergeGridMapAB_.Clone();
      mergeGridMapABPatch_ = other.mergeGridMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeGridConf Clone() {
      return new MergeGridConf(this);
    }

    /// <summary>Field number for the "MergeGridMap" field.</summary>
    public const int MergeGridMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.MergeGrid>.Codec _map_mergeGridMap_codec
        = new pbc::MapField<int, global::fat.rawdata.MergeGrid>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.MergeGrid.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.MergeGrid> mergeGridMap_ = new pbc::MapField<int, global::fat.rawdata.MergeGrid>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.MergeGrid> MergeGridMap {
      get { return mergeGridMap_; }
    }

    /// <summary>Field number for the "MergeGridMapAB" field.</summary>
    public const int MergeGridMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.MergeGridMapABValue>.Codec _map_mergeGridMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.MergeGridMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.MergeGridMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.MergeGridMapABValue> mergeGridMapAB_ = new pbc::MapField<string, global::fat.rawdata.MergeGridMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.MergeGridMapABValue> MergeGridMapAB {
      get { return mergeGridMapAB_; }
    }

    /// <summary>Field number for the "MergeGridMapABPatch" field.</summary>
    public const int MergeGridMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.MergeGridMapABValue>.Codec _map_mergeGridMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.MergeGridMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.MergeGridMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.MergeGridMapABValue> mergeGridMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.MergeGridMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.MergeGridMapABValue> MergeGridMapABPatch {
      get { return mergeGridMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MergeGridConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MergeGridConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!MergeGridMap.Equals(other.MergeGridMap)) return false;
      if (!MergeGridMapAB.Equals(other.MergeGridMapAB)) return false;
      if (!MergeGridMapABPatch.Equals(other.MergeGridMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= MergeGridMap.GetHashCode();
      hash ^= MergeGridMapAB.GetHashCode();
      hash ^= MergeGridMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      mergeGridMap_.WriteTo(output, _map_mergeGridMap_codec);
      mergeGridMapAB_.WriteTo(output, _map_mergeGridMapAB_codec);
      mergeGridMapABPatch_.WriteTo(output, _map_mergeGridMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      mergeGridMap_.WriteTo(ref output, _map_mergeGridMap_codec);
      mergeGridMapAB_.WriteTo(ref output, _map_mergeGridMapAB_codec);
      mergeGridMapABPatch_.WriteTo(ref output, _map_mergeGridMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += mergeGridMap_.CalculateSize(_map_mergeGridMap_codec);
      size += mergeGridMapAB_.CalculateSize(_map_mergeGridMapAB_codec);
      size += mergeGridMapABPatch_.CalculateSize(_map_mergeGridMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MergeGridConf other) {
      if (other == null) {
        return;
      }
      mergeGridMap_.Add(other.mergeGridMap_);
      mergeGridMapAB_.Add(other.mergeGridMapAB_);
      mergeGridMapABPatch_.Add(other.mergeGridMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            mergeGridMap_.AddEntriesFrom(input, _map_mergeGridMap_codec);
            break;
          }
          case 18: {
            mergeGridMapAB_.AddEntriesFrom(input, _map_mergeGridMapAB_codec);
            break;
          }
          case 26: {
            mergeGridMapABPatch_.AddEntriesFrom(input, _map_mergeGridMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            mergeGridMap_.AddEntriesFrom(ref input, _map_mergeGridMap_codec);
            break;
          }
          case 18: {
            mergeGridMapAB_.AddEntriesFrom(ref input, _map_mergeGridMapAB_codec);
            break;
          }
          case 26: {
            mergeGridMapABPatch_.AddEntriesFrom(ref input, _map_mergeGridMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
