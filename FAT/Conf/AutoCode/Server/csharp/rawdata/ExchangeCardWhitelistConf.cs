// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/ExchangeCardWhitelistConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/ExchangeCardWhitelistConf.proto</summary>
  public static partial class ExchangeCardWhitelistConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/ExchangeCardWhitelistConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ExchangeCardWhitelistConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CidyYXdkYXRhL0V4Y2hhbmdlQ2FyZFdoaXRlbGlzdENvbmYucHJvdG8SB3Jh",
            "d2RhdGEiIwoVRXhjaGFuZ2VDYXJkV2hpdGVsaXN0EgoKAmlkGAEgASgJIuwB",
            "Ch9FeGNoYW5nZUNhcmRXaGl0ZWxpc3RNYXBBQlZhbHVlEmgKGEV4Y2hhbmdl",
            "Q2FyZFdoaXRlbGlzdE1hcBgBIAMoCzJGLnJhd2RhdGEuRXhjaGFuZ2VDYXJk",
            "V2hpdGVsaXN0TWFwQUJWYWx1ZS5FeGNoYW5nZUNhcmRXaGl0ZWxpc3RNYXBF",
            "bnRyeRpfCh1FeGNoYW5nZUNhcmRXaGl0ZWxpc3RNYXBFbnRyeRILCgNrZXkY",
            "ASABKAkSLQoFdmFsdWUYAiABKAsyHi5yYXdkYXRhLkV4Y2hhbmdlQ2FyZFdo",
            "aXRlbGlzdDoCOAEimQUKGUV4Y2hhbmdlQ2FyZFdoaXRlbGlzdENvbmYSYgoY",
            "RXhjaGFuZ2VDYXJkV2hpdGVsaXN0TWFwGAEgAygLMkAucmF3ZGF0YS5FeGNo",
            "YW5nZUNhcmRXaGl0ZWxpc3RDb25mLkV4Y2hhbmdlQ2FyZFdoaXRlbGlzdE1h",
            "cEVudHJ5EmYKGkV4Y2hhbmdlQ2FyZFdoaXRlbGlzdE1hcEFCGAIgAygLMkIu",
            "cmF3ZGF0YS5FeGNoYW5nZUNhcmRXaGl0ZWxpc3RDb25mLkV4Y2hhbmdlQ2Fy",
            "ZFdoaXRlbGlzdE1hcEFCRW50cnkScAofRXhjaGFuZ2VDYXJkV2hpdGVsaXN0",
            "TWFwQUJQYXRjaBgDIAMoCzJHLnJhd2RhdGEuRXhjaGFuZ2VDYXJkV2hpdGVs",
            "aXN0Q29uZi5FeGNoYW5nZUNhcmRXaGl0ZWxpc3RNYXBBQlBhdGNoRW50cnka",
            "XwodRXhjaGFuZ2VDYXJkV2hpdGVsaXN0TWFwRW50cnkSCwoDa2V5GAEgASgJ",
            "Ei0KBXZhbHVlGAIgASgLMh4ucmF3ZGF0YS5FeGNoYW5nZUNhcmRXaGl0ZWxp",
            "c3Q6AjgBGmsKH0V4Y2hhbmdlQ2FyZFdoaXRlbGlzdE1hcEFCRW50cnkSCwoD",
            "a2V5GAEgASgJEjcKBXZhbHVlGAIgASgLMigucmF3ZGF0YS5FeGNoYW5nZUNh",
            "cmRXaGl0ZWxpc3RNYXBBQlZhbHVlOgI4ARpwCiRFeGNoYW5nZUNhcmRXaGl0",
            "ZWxpc3RNYXBBQlBhdGNoRW50cnkSCwoDa2V5GAEgASgJEjcKBXZhbHVlGAIg",
            "ASgLMigucmF3ZGF0YS5FeGNoYW5nZUNhcmRXaGl0ZWxpc3RNYXBBQlZhbHVl",
            "OgI4AUI9Wi1naXRsYWIuZnVucGx1cy5pby9mYXQvY29uZi9nZW4vZ29sYW5n",
            "L3Jhd2RhdGGqAgtmYXQucmF3ZGF0YWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.ExchangeCardWhitelist), global::fat.rawdata.ExchangeCardWhitelist.Parser, new[]{ "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.ExchangeCardWhitelistMapABValue), global::fat.rawdata.ExchangeCardWhitelistMapABValue.Parser, new[]{ "ExchangeCardWhitelistMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.ExchangeCardWhitelistConf), global::fat.rawdata.ExchangeCardWhitelistConf.Parser, new[]{ "ExchangeCardWhitelistMap", "ExchangeCardWhitelistMapAB", "ExchangeCardWhitelistMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="ExchangeCardWhitelist",table="ExchangeCardWhitelistMap",table_wrapper="ExchangeCardWhitelistConf",map="true",map_key_type="string",data="ExchangeCardWhitelistConf")
  /// annotation@ab(table_ab="ExchangeCardWhitelistMapAB",table_ab_patch="ExchangeCardWhitelistMapABPatch",table_ab_value="ExchangeCardWhitelistMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@ExchangeCardWhitelist(id="id")
  /// </summary>
  public sealed partial class ExchangeCardWhitelist : pb::IMessage<ExchangeCardWhitelist>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ExchangeCardWhitelist> _parser = new pb::MessageParser<ExchangeCardWhitelist>(() => new ExchangeCardWhitelist());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExchangeCardWhitelist> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.ExchangeCardWhitelistConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExchangeCardWhitelist() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExchangeCardWhitelist(ExchangeCardWhitelist other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExchangeCardWhitelist Clone() {
      return new ExchangeCardWhitelist(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// Facebook测试换卡功能白名单
    /// 用户账户ID
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExchangeCardWhitelist);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExchangeCardWhitelist other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExchangeCardWhitelist other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ExchangeCardWhitelistMapABValue : pb::IMessage<ExchangeCardWhitelistMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ExchangeCardWhitelistMapABValue> _parser = new pb::MessageParser<ExchangeCardWhitelistMapABValue>(() => new ExchangeCardWhitelistMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExchangeCardWhitelistMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.ExchangeCardWhitelistConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExchangeCardWhitelistMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExchangeCardWhitelistMapABValue(ExchangeCardWhitelistMapABValue other) : this() {
      exchangeCardWhitelistMap_ = other.exchangeCardWhitelistMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExchangeCardWhitelistMapABValue Clone() {
      return new ExchangeCardWhitelistMapABValue(this);
    }

    /// <summary>Field number for the "ExchangeCardWhitelistMap" field.</summary>
    public const int ExchangeCardWhitelistMapFieldNumber = 1;
    private static readonly pbc::MapField<string, global::fat.rawdata.ExchangeCardWhitelist>.Codec _map_exchangeCardWhitelistMap_codec
        = new pbc::MapField<string, global::fat.rawdata.ExchangeCardWhitelist>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ExchangeCardWhitelist.Parser), 10);
    private readonly pbc::MapField<string, global::fat.rawdata.ExchangeCardWhitelist> exchangeCardWhitelistMap_ = new pbc::MapField<string, global::fat.rawdata.ExchangeCardWhitelist>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.ExchangeCardWhitelist> ExchangeCardWhitelistMap {
      get { return exchangeCardWhitelistMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExchangeCardWhitelistMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExchangeCardWhitelistMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!ExchangeCardWhitelistMap.Equals(other.ExchangeCardWhitelistMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ExchangeCardWhitelistMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      exchangeCardWhitelistMap_.WriteTo(output, _map_exchangeCardWhitelistMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      exchangeCardWhitelistMap_.WriteTo(ref output, _map_exchangeCardWhitelistMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += exchangeCardWhitelistMap_.CalculateSize(_map_exchangeCardWhitelistMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExchangeCardWhitelistMapABValue other) {
      if (other == null) {
        return;
      }
      exchangeCardWhitelistMap_.Add(other.exchangeCardWhitelistMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            exchangeCardWhitelistMap_.AddEntriesFrom(input, _map_exchangeCardWhitelistMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            exchangeCardWhitelistMap_.AddEntriesFrom(ref input, _map_exchangeCardWhitelistMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ExchangeCardWhitelistConf : pb::IMessage<ExchangeCardWhitelistConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ExchangeCardWhitelistConf> _parser = new pb::MessageParser<ExchangeCardWhitelistConf>(() => new ExchangeCardWhitelistConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExchangeCardWhitelistConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.ExchangeCardWhitelistConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExchangeCardWhitelistConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExchangeCardWhitelistConf(ExchangeCardWhitelistConf other) : this() {
      exchangeCardWhitelistMap_ = other.exchangeCardWhitelistMap_.Clone();
      exchangeCardWhitelistMapAB_ = other.exchangeCardWhitelistMapAB_.Clone();
      exchangeCardWhitelistMapABPatch_ = other.exchangeCardWhitelistMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExchangeCardWhitelistConf Clone() {
      return new ExchangeCardWhitelistConf(this);
    }

    /// <summary>Field number for the "ExchangeCardWhitelistMap" field.</summary>
    public const int ExchangeCardWhitelistMapFieldNumber = 1;
    private static readonly pbc::MapField<string, global::fat.rawdata.ExchangeCardWhitelist>.Codec _map_exchangeCardWhitelistMap_codec
        = new pbc::MapField<string, global::fat.rawdata.ExchangeCardWhitelist>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ExchangeCardWhitelist.Parser), 10);
    private readonly pbc::MapField<string, global::fat.rawdata.ExchangeCardWhitelist> exchangeCardWhitelistMap_ = new pbc::MapField<string, global::fat.rawdata.ExchangeCardWhitelist>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.ExchangeCardWhitelist> ExchangeCardWhitelistMap {
      get { return exchangeCardWhitelistMap_; }
    }

    /// <summary>Field number for the "ExchangeCardWhitelistMapAB" field.</summary>
    public const int ExchangeCardWhitelistMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.ExchangeCardWhitelistMapABValue>.Codec _map_exchangeCardWhitelistMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.ExchangeCardWhitelistMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ExchangeCardWhitelistMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.ExchangeCardWhitelistMapABValue> exchangeCardWhitelistMapAB_ = new pbc::MapField<string, global::fat.rawdata.ExchangeCardWhitelistMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.ExchangeCardWhitelistMapABValue> ExchangeCardWhitelistMapAB {
      get { return exchangeCardWhitelistMapAB_; }
    }

    /// <summary>Field number for the "ExchangeCardWhitelistMapABPatch" field.</summary>
    public const int ExchangeCardWhitelistMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.ExchangeCardWhitelistMapABValue>.Codec _map_exchangeCardWhitelistMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.ExchangeCardWhitelistMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ExchangeCardWhitelistMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.ExchangeCardWhitelistMapABValue> exchangeCardWhitelistMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.ExchangeCardWhitelistMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.ExchangeCardWhitelistMapABValue> ExchangeCardWhitelistMapABPatch {
      get { return exchangeCardWhitelistMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExchangeCardWhitelistConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExchangeCardWhitelistConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!ExchangeCardWhitelistMap.Equals(other.ExchangeCardWhitelistMap)) return false;
      if (!ExchangeCardWhitelistMapAB.Equals(other.ExchangeCardWhitelistMapAB)) return false;
      if (!ExchangeCardWhitelistMapABPatch.Equals(other.ExchangeCardWhitelistMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ExchangeCardWhitelistMap.GetHashCode();
      hash ^= ExchangeCardWhitelistMapAB.GetHashCode();
      hash ^= ExchangeCardWhitelistMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      exchangeCardWhitelistMap_.WriteTo(output, _map_exchangeCardWhitelistMap_codec);
      exchangeCardWhitelistMapAB_.WriteTo(output, _map_exchangeCardWhitelistMapAB_codec);
      exchangeCardWhitelistMapABPatch_.WriteTo(output, _map_exchangeCardWhitelistMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      exchangeCardWhitelistMap_.WriteTo(ref output, _map_exchangeCardWhitelistMap_codec);
      exchangeCardWhitelistMapAB_.WriteTo(ref output, _map_exchangeCardWhitelistMapAB_codec);
      exchangeCardWhitelistMapABPatch_.WriteTo(ref output, _map_exchangeCardWhitelistMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += exchangeCardWhitelistMap_.CalculateSize(_map_exchangeCardWhitelistMap_codec);
      size += exchangeCardWhitelistMapAB_.CalculateSize(_map_exchangeCardWhitelistMapAB_codec);
      size += exchangeCardWhitelistMapABPatch_.CalculateSize(_map_exchangeCardWhitelistMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExchangeCardWhitelistConf other) {
      if (other == null) {
        return;
      }
      exchangeCardWhitelistMap_.Add(other.exchangeCardWhitelistMap_);
      exchangeCardWhitelistMapAB_.Add(other.exchangeCardWhitelistMapAB_);
      exchangeCardWhitelistMapABPatch_.Add(other.exchangeCardWhitelistMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            exchangeCardWhitelistMap_.AddEntriesFrom(input, _map_exchangeCardWhitelistMap_codec);
            break;
          }
          case 18: {
            exchangeCardWhitelistMapAB_.AddEntriesFrom(input, _map_exchangeCardWhitelistMapAB_codec);
            break;
          }
          case 26: {
            exchangeCardWhitelistMapABPatch_.AddEntriesFrom(input, _map_exchangeCardWhitelistMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            exchangeCardWhitelistMap_.AddEntriesFrom(ref input, _map_exchangeCardWhitelistMap_codec);
            break;
          }
          case 18: {
            exchangeCardWhitelistMapAB_.AddEntriesFrom(ref input, _map_exchangeCardWhitelistMapAB_codec);
            break;
          }
          case 26: {
            exchangeCardWhitelistMapABPatch_.AddEntriesFrom(ref input, _map_exchangeCardWhitelistMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
