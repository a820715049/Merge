// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventMineCartConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventMineCartConf.proto</summary>
  public static partial class EventMineCartConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventMineCartConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventMineCartConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch9yYXdkYXRhL0V2ZW50TWluZUNhcnRDb25mLnByb3RvEgdyYXdkYXRhIq4C",
            "Cg1FdmVudE1pbmVDYXJ0EgoKAmlkGAEgASgFEhMKC2Jhbm5lclRoZW1lGBAg",
            "ASgFEhIKCmJvYXJkVGhlbWUYAiABKAUSEQoJYm9va1RoZW1lGAwgASgFEhMK",
            "C2NoYXRDb250ZW50GAMgAygJEgwKBGNvc3QYBCABKAUSDgoGZGV0YWlsGAUg",
            "ASgFEhYKDmVuZFJld2FyZFRoZW1lGAYgASgFEhAKCGVuZFRoZW1lGAcgASgF",
            "EhIKCmV2ZW50VGhlbWUYCCABKAUSEAoIaGFuZEJvb2sYCSADKAUSEQoJaGVs",
            "cFRoZW1lGA0gASgFEhQKDGxvYWRpbmdUaGVtZRgOIAEoBRITCgtzcGVjaWFs",
            "SXRlbRgKIAMoBRIUCgxzcHJpdGVJdGVtSWQYDyABKAUivAEKF0V2ZW50TWlu",
            "ZUNhcnRNYXBBQlZhbHVlElAKEEV2ZW50TWluZUNhcnRNYXAYASADKAsyNi5y",
            "YXdkYXRhLkV2ZW50TWluZUNhcnRNYXBBQlZhbHVlLkV2ZW50TWluZUNhcnRN",
            "YXBFbnRyeRpPChVFdmVudE1pbmVDYXJ0TWFwRW50cnkSCwoDa2V5GAEgASgF",
            "EiUKBXZhbHVlGAIgASgLMhYucmF3ZGF0YS5FdmVudE1pbmVDYXJ0OgI4ASKZ",
            "BAoRRXZlbnRNaW5lQ2FydENvbmYSSgoQRXZlbnRNaW5lQ2FydE1hcBgBIAMo",
            "CzIwLnJhd2RhdGEuRXZlbnRNaW5lQ2FydENvbmYuRXZlbnRNaW5lQ2FydE1h",
            "cEVudHJ5Ek4KEkV2ZW50TWluZUNhcnRNYXBBQhgCIAMoCzIyLnJhd2RhdGEu",
            "RXZlbnRNaW5lQ2FydENvbmYuRXZlbnRNaW5lQ2FydE1hcEFCRW50cnkSWAoX",
            "RXZlbnRNaW5lQ2FydE1hcEFCUGF0Y2gYAyADKAsyNy5yYXdkYXRhLkV2ZW50",
            "TWluZUNhcnRDb25mLkV2ZW50TWluZUNhcnRNYXBBQlBhdGNoRW50cnkaTwoV",
            "RXZlbnRNaW5lQ2FydE1hcEVudHJ5EgsKA2tleRgBIAEoBRIlCgV2YWx1ZRgC",
            "IAEoCzIWLnJhd2RhdGEuRXZlbnRNaW5lQ2FydDoCOAEaWwoXRXZlbnRNaW5l",
            "Q2FydE1hcEFCRW50cnkSCwoDa2V5GAEgASgJEi8KBXZhbHVlGAIgASgLMiAu",
            "cmF3ZGF0YS5FdmVudE1pbmVDYXJ0TWFwQUJWYWx1ZToCOAEaYAocRXZlbnRN",
            "aW5lQ2FydE1hcEFCUGF0Y2hFbnRyeRILCgNrZXkYASABKAkSLwoFdmFsdWUY",
            "AiABKAsyIC5yYXdkYXRhLkV2ZW50TWluZUNhcnRNYXBBQlZhbHVlOgI4AUI9",
            "Wi1naXRsYWIuZnVucGx1cy5pby9mYXQvY29uZi9nZW4vZ29sYW5nL3Jhd2Rh",
            "dGGqAgtmYXQucmF3ZGF0YWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventMineCart), global::fat.rawdata.EventMineCart.Parser, new[]{ "Id", "BannerTheme", "BoardTheme", "BookTheme", "ChatContent", "Cost", "Detail", "EndRewardTheme", "EndTheme", "EventTheme", "HandBook", "HelpTheme", "LoadingTheme", "SpecialItem", "SpriteItemId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventMineCartMapABValue), global::fat.rawdata.EventMineCartMapABValue.Parser, new[]{ "EventMineCartMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventMineCartConf), global::fat.rawdata.EventMineCartConf.Parser, new[]{ "EventMineCartMap", "EventMineCartMapAB", "EventMineCartMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventMineCart",table="EventMineCartMap",table_wrapper="EventMineCartConf",map="true",map_key_type="int32",data="EventMineCartConf")
  /// annotation@ab(table_ab="EventMineCartMapAB",table_ab_patch="EventMineCartMapABPatch",table_ab_value="EventMineCartMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventMineCart(id="id")
  /// </summary>
  public sealed partial class EventMineCart : pb::IMessage<EventMineCart>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventMineCart> _parser = new pb::MessageParser<EventMineCart>(() => new EventMineCart());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventMineCart> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventMineCartConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMineCart() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMineCart(EventMineCart other) : this() {
      id_ = other.id_;
      bannerTheme_ = other.bannerTheme_;
      boardTheme_ = other.boardTheme_;
      bookTheme_ = other.bookTheme_;
      chatContent_ = other.chatContent_.Clone();
      cost_ = other.cost_;
      detail_ = other.detail_;
      endRewardTheme_ = other.endRewardTheme_;
      endTheme_ = other.endTheme_;
      eventTheme_ = other.eventTheme_;
      handBook_ = other.handBook_.Clone();
      helpTheme_ = other.helpTheme_;
      loadingTheme_ = other.loadingTheme_;
      specialItem_ = other.specialItem_.Clone();
      spriteItemId_ = other.spriteItemId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMineCart Clone() {
      return new EventMineCart(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 活动模版
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "bannerTheme" field.</summary>
    public const int BannerThemeFieldNumber = 16;
    private int bannerTheme_;
    /// <summary>
    /// 图鉴完成提醒界面
    /// （EventTheme.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BannerTheme {
      get { return bannerTheme_; }
      set {
        bannerTheme_ = value;
      }
    }

    /// <summary>Field number for the "boardTheme" field.</summary>
    public const int BoardThemeFieldNumber = 2;
    private int boardTheme_;
    /// <summary>
    /// 活动棋盘界面
    /// （EventTheme.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BoardTheme {
      get { return boardTheme_; }
      set {
        boardTheme_ = value;
      }
    }

    /// <summary>Field number for the "bookTheme" field.</summary>
    public const int BookThemeFieldNumber = 12;
    private int bookTheme_;
    /// <summary>
    /// 图鉴界面
    /// （EventTheme.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BookTheme {
      get { return bookTheme_; }
      set {
        bookTheme_ = value;
      }
    }

    /// <summary>Field number for the "chatContent" field.</summary>
    public const int ChatContentFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_chatContent_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> chatContent_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 说话文本
    /// 多语言key
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ChatContent {
      get { return chatContent_; }
    }

    /// <summary>Field number for the "cost" field.</summary>
    public const int CostFieldNumber = 4;
    private int cost_;
    /// <summary>
    /// 消耗内容
    /// （ObjBasic.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Cost {
      get { return cost_; }
      set {
        cost_ = value;
      }
    }

    /// <summary>Field number for the "detail" field.</summary>
    public const int DetailFieldNumber = 5;
    private int detail_;
    /// <summary>
    /// 活动详情id
    /// （GradeIndexMapping.id）
    /// （EventMineCartDetail.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Detail {
      get { return detail_; }
      set {
        detail_ = value;
      }
    }

    /// <summary>Field number for the "endRewardTheme" field.</summary>
    public const int EndRewardThemeFieldNumber = 6;
    private int endRewardTheme_;
    /// <summary>
    /// 活动结束奖励结算界面
    /// （EventTheme.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EndRewardTheme {
      get { return endRewardTheme_; }
      set {
        endRewardTheme_ = value;
      }
    }

    /// <summary>Field number for the "endTheme" field.</summary>
    public const int EndThemeFieldNumber = 7;
    private int endTheme_;
    /// <summary>
    /// 活动结束界面
    /// （EventTheme.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EndTheme {
      get { return endTheme_; }
      set {
        endTheme_ = value;
      }
    }

    /// <summary>Field number for the "eventTheme" field.</summary>
    public const int EventThemeFieldNumber = 8;
    private int eventTheme_;
    /// <summary>
    /// 活动开启界面
    /// （EventTheme.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EventTheme {
      get { return eventTheme_; }
      set {
        eventTheme_ = value;
      }
    }

    /// <summary>Field number for the "handBook" field.</summary>
    public const int HandBookFieldNumber = 9;
    private static readonly pb::FieldCodec<int> _repeated_handBook_codec
        = pb::FieldCodec.ForInt32(74);
    private readonly pbc::RepeatedField<int> handBook_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 图鉴棋子id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> HandBook {
      get { return handBook_; }
    }

    /// <summary>Field number for the "helpTheme" field.</summary>
    public const int HelpThemeFieldNumber = 13;
    private int helpTheme_;
    /// <summary>
    /// 帮助界面
    /// （EventTheme.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int HelpTheme {
      get { return helpTheme_; }
      set {
        helpTheme_ = value;
      }
    }

    /// <summary>Field number for the "loadingTheme" field.</summary>
    public const int LoadingThemeFieldNumber = 14;
    private int loadingTheme_;
    /// <summary>
    /// loading界面
    /// （EventTheme.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LoadingTheme {
      get { return loadingTheme_; }
      set {
        loadingTheme_ = value;
      }
    }

    /// <summary>Field number for the "specialItem" field.</summary>
    public const int SpecialItemFieldNumber = 10;
    private static readonly pb::FieldCodec<int> _repeated_specialItem_codec
        = pb::FieldCodec.ForInt32(82);
    private readonly pbc::RepeatedField<int> specialItem_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 活动积分棋子id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> SpecialItem {
      get { return specialItem_; }
    }

    /// <summary>Field number for the "spriteItemId" field.</summary>
    public const int SpriteItemIdFieldNumber = 15;
    private int spriteItemId_;
    /// <summary>
    /// 图文混排
    /// （ObjToken.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SpriteItemId {
      get { return spriteItemId_; }
      set {
        spriteItemId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventMineCart);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventMineCart other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (BannerTheme != other.BannerTheme) return false;
      if (BoardTheme != other.BoardTheme) return false;
      if (BookTheme != other.BookTheme) return false;
      if(!chatContent_.Equals(other.chatContent_)) return false;
      if (Cost != other.Cost) return false;
      if (Detail != other.Detail) return false;
      if (EndRewardTheme != other.EndRewardTheme) return false;
      if (EndTheme != other.EndTheme) return false;
      if (EventTheme != other.EventTheme) return false;
      if(!handBook_.Equals(other.handBook_)) return false;
      if (HelpTheme != other.HelpTheme) return false;
      if (LoadingTheme != other.LoadingTheme) return false;
      if(!specialItem_.Equals(other.specialItem_)) return false;
      if (SpriteItemId != other.SpriteItemId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (BannerTheme != 0) hash ^= BannerTheme.GetHashCode();
      if (BoardTheme != 0) hash ^= BoardTheme.GetHashCode();
      if (BookTheme != 0) hash ^= BookTheme.GetHashCode();
      hash ^= chatContent_.GetHashCode();
      if (Cost != 0) hash ^= Cost.GetHashCode();
      if (Detail != 0) hash ^= Detail.GetHashCode();
      if (EndRewardTheme != 0) hash ^= EndRewardTheme.GetHashCode();
      if (EndTheme != 0) hash ^= EndTheme.GetHashCode();
      if (EventTheme != 0) hash ^= EventTheme.GetHashCode();
      hash ^= handBook_.GetHashCode();
      if (HelpTheme != 0) hash ^= HelpTheme.GetHashCode();
      if (LoadingTheme != 0) hash ^= LoadingTheme.GetHashCode();
      hash ^= specialItem_.GetHashCode();
      if (SpriteItemId != 0) hash ^= SpriteItemId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (BoardTheme != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BoardTheme);
      }
      chatContent_.WriteTo(output, _repeated_chatContent_codec);
      if (Cost != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Cost);
      }
      if (Detail != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Detail);
      }
      if (EndRewardTheme != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(EndRewardTheme);
      }
      if (EndTheme != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(EndTheme);
      }
      if (EventTheme != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(EventTheme);
      }
      handBook_.WriteTo(output, _repeated_handBook_codec);
      specialItem_.WriteTo(output, _repeated_specialItem_codec);
      if (BookTheme != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(BookTheme);
      }
      if (HelpTheme != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(HelpTheme);
      }
      if (LoadingTheme != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(LoadingTheme);
      }
      if (SpriteItemId != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(SpriteItemId);
      }
      if (BannerTheme != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(BannerTheme);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (BoardTheme != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BoardTheme);
      }
      chatContent_.WriteTo(ref output, _repeated_chatContent_codec);
      if (Cost != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Cost);
      }
      if (Detail != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Detail);
      }
      if (EndRewardTheme != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(EndRewardTheme);
      }
      if (EndTheme != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(EndTheme);
      }
      if (EventTheme != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(EventTheme);
      }
      handBook_.WriteTo(ref output, _repeated_handBook_codec);
      specialItem_.WriteTo(ref output, _repeated_specialItem_codec);
      if (BookTheme != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(BookTheme);
      }
      if (HelpTheme != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(HelpTheme);
      }
      if (LoadingTheme != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(LoadingTheme);
      }
      if (SpriteItemId != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(SpriteItemId);
      }
      if (BannerTheme != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(BannerTheme);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (BannerTheme != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(BannerTheme);
      }
      if (BoardTheme != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BoardTheme);
      }
      if (BookTheme != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BookTheme);
      }
      size += chatContent_.CalculateSize(_repeated_chatContent_codec);
      if (Cost != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Cost);
      }
      if (Detail != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Detail);
      }
      if (EndRewardTheme != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EndRewardTheme);
      }
      if (EndTheme != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EndTheme);
      }
      if (EventTheme != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EventTheme);
      }
      size += handBook_.CalculateSize(_repeated_handBook_codec);
      if (HelpTheme != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HelpTheme);
      }
      if (LoadingTheme != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LoadingTheme);
      }
      size += specialItem_.CalculateSize(_repeated_specialItem_codec);
      if (SpriteItemId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SpriteItemId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventMineCart other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.BannerTheme != 0) {
        BannerTheme = other.BannerTheme;
      }
      if (other.BoardTheme != 0) {
        BoardTheme = other.BoardTheme;
      }
      if (other.BookTheme != 0) {
        BookTheme = other.BookTheme;
      }
      chatContent_.Add(other.chatContent_);
      if (other.Cost != 0) {
        Cost = other.Cost;
      }
      if (other.Detail != 0) {
        Detail = other.Detail;
      }
      if (other.EndRewardTheme != 0) {
        EndRewardTheme = other.EndRewardTheme;
      }
      if (other.EndTheme != 0) {
        EndTheme = other.EndTheme;
      }
      if (other.EventTheme != 0) {
        EventTheme = other.EventTheme;
      }
      handBook_.Add(other.handBook_);
      if (other.HelpTheme != 0) {
        HelpTheme = other.HelpTheme;
      }
      if (other.LoadingTheme != 0) {
        LoadingTheme = other.LoadingTheme;
      }
      specialItem_.Add(other.specialItem_);
      if (other.SpriteItemId != 0) {
        SpriteItemId = other.SpriteItemId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            BoardTheme = input.ReadInt32();
            break;
          }
          case 26: {
            chatContent_.AddEntriesFrom(input, _repeated_chatContent_codec);
            break;
          }
          case 32: {
            Cost = input.ReadInt32();
            break;
          }
          case 40: {
            Detail = input.ReadInt32();
            break;
          }
          case 48: {
            EndRewardTheme = input.ReadInt32();
            break;
          }
          case 56: {
            EndTheme = input.ReadInt32();
            break;
          }
          case 64: {
            EventTheme = input.ReadInt32();
            break;
          }
          case 74:
          case 72: {
            handBook_.AddEntriesFrom(input, _repeated_handBook_codec);
            break;
          }
          case 82:
          case 80: {
            specialItem_.AddEntriesFrom(input, _repeated_specialItem_codec);
            break;
          }
          case 96: {
            BookTheme = input.ReadInt32();
            break;
          }
          case 104: {
            HelpTheme = input.ReadInt32();
            break;
          }
          case 112: {
            LoadingTheme = input.ReadInt32();
            break;
          }
          case 120: {
            SpriteItemId = input.ReadInt32();
            break;
          }
          case 128: {
            BannerTheme = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            BoardTheme = input.ReadInt32();
            break;
          }
          case 26: {
            chatContent_.AddEntriesFrom(ref input, _repeated_chatContent_codec);
            break;
          }
          case 32: {
            Cost = input.ReadInt32();
            break;
          }
          case 40: {
            Detail = input.ReadInt32();
            break;
          }
          case 48: {
            EndRewardTheme = input.ReadInt32();
            break;
          }
          case 56: {
            EndTheme = input.ReadInt32();
            break;
          }
          case 64: {
            EventTheme = input.ReadInt32();
            break;
          }
          case 74:
          case 72: {
            handBook_.AddEntriesFrom(ref input, _repeated_handBook_codec);
            break;
          }
          case 82:
          case 80: {
            specialItem_.AddEntriesFrom(ref input, _repeated_specialItem_codec);
            break;
          }
          case 96: {
            BookTheme = input.ReadInt32();
            break;
          }
          case 104: {
            HelpTheme = input.ReadInt32();
            break;
          }
          case 112: {
            LoadingTheme = input.ReadInt32();
            break;
          }
          case 120: {
            SpriteItemId = input.ReadInt32();
            break;
          }
          case 128: {
            BannerTheme = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventMineCartMapABValue : pb::IMessage<EventMineCartMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventMineCartMapABValue> _parser = new pb::MessageParser<EventMineCartMapABValue>(() => new EventMineCartMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventMineCartMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventMineCartConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMineCartMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMineCartMapABValue(EventMineCartMapABValue other) : this() {
      eventMineCartMap_ = other.eventMineCartMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMineCartMapABValue Clone() {
      return new EventMineCartMapABValue(this);
    }

    /// <summary>Field number for the "EventMineCartMap" field.</summary>
    public const int EventMineCartMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventMineCart>.Codec _map_eventMineCartMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventMineCart>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventMineCart.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventMineCart> eventMineCartMap_ = new pbc::MapField<int, global::fat.rawdata.EventMineCart>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventMineCart> EventMineCartMap {
      get { return eventMineCartMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventMineCartMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventMineCartMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventMineCartMap.Equals(other.EventMineCartMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventMineCartMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventMineCartMap_.WriteTo(output, _map_eventMineCartMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventMineCartMap_.WriteTo(ref output, _map_eventMineCartMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventMineCartMap_.CalculateSize(_map_eventMineCartMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventMineCartMapABValue other) {
      if (other == null) {
        return;
      }
      eventMineCartMap_.Add(other.eventMineCartMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventMineCartMap_.AddEntriesFrom(input, _map_eventMineCartMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventMineCartMap_.AddEntriesFrom(ref input, _map_eventMineCartMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventMineCartConf : pb::IMessage<EventMineCartConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventMineCartConf> _parser = new pb::MessageParser<EventMineCartConf>(() => new EventMineCartConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventMineCartConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventMineCartConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMineCartConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMineCartConf(EventMineCartConf other) : this() {
      eventMineCartMap_ = other.eventMineCartMap_.Clone();
      eventMineCartMapAB_ = other.eventMineCartMapAB_.Clone();
      eventMineCartMapABPatch_ = other.eventMineCartMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMineCartConf Clone() {
      return new EventMineCartConf(this);
    }

    /// <summary>Field number for the "EventMineCartMap" field.</summary>
    public const int EventMineCartMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventMineCart>.Codec _map_eventMineCartMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventMineCart>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventMineCart.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventMineCart> eventMineCartMap_ = new pbc::MapField<int, global::fat.rawdata.EventMineCart>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventMineCart> EventMineCartMap {
      get { return eventMineCartMap_; }
    }

    /// <summary>Field number for the "EventMineCartMapAB" field.</summary>
    public const int EventMineCartMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventMineCartMapABValue>.Codec _map_eventMineCartMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventMineCartMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventMineCartMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventMineCartMapABValue> eventMineCartMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventMineCartMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventMineCartMapABValue> EventMineCartMapAB {
      get { return eventMineCartMapAB_; }
    }

    /// <summary>Field number for the "EventMineCartMapABPatch" field.</summary>
    public const int EventMineCartMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventMineCartMapABValue>.Codec _map_eventMineCartMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventMineCartMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventMineCartMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventMineCartMapABValue> eventMineCartMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventMineCartMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventMineCartMapABValue> EventMineCartMapABPatch {
      get { return eventMineCartMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventMineCartConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventMineCartConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventMineCartMap.Equals(other.EventMineCartMap)) return false;
      if (!EventMineCartMapAB.Equals(other.EventMineCartMapAB)) return false;
      if (!EventMineCartMapABPatch.Equals(other.EventMineCartMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventMineCartMap.GetHashCode();
      hash ^= EventMineCartMapAB.GetHashCode();
      hash ^= EventMineCartMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventMineCartMap_.WriteTo(output, _map_eventMineCartMap_codec);
      eventMineCartMapAB_.WriteTo(output, _map_eventMineCartMapAB_codec);
      eventMineCartMapABPatch_.WriteTo(output, _map_eventMineCartMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventMineCartMap_.WriteTo(ref output, _map_eventMineCartMap_codec);
      eventMineCartMapAB_.WriteTo(ref output, _map_eventMineCartMapAB_codec);
      eventMineCartMapABPatch_.WriteTo(ref output, _map_eventMineCartMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventMineCartMap_.CalculateSize(_map_eventMineCartMap_codec);
      size += eventMineCartMapAB_.CalculateSize(_map_eventMineCartMapAB_codec);
      size += eventMineCartMapABPatch_.CalculateSize(_map_eventMineCartMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventMineCartConf other) {
      if (other == null) {
        return;
      }
      eventMineCartMap_.Add(other.eventMineCartMap_);
      eventMineCartMapAB_.Add(other.eventMineCartMapAB_);
      eventMineCartMapABPatch_.Add(other.eventMineCartMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventMineCartMap_.AddEntriesFrom(input, _map_eventMineCartMap_codec);
            break;
          }
          case 18: {
            eventMineCartMapAB_.AddEntriesFrom(input, _map_eventMineCartMapAB_codec);
            break;
          }
          case 26: {
            eventMineCartMapABPatch_.AddEntriesFrom(input, _map_eventMineCartMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventMineCartMap_.AddEntriesFrom(ref input, _map_eventMineCartMap_codec);
            break;
          }
          case 18: {
            eventMineCartMapAB_.AddEntriesFrom(ref input, _map_eventMineCartMapAB_codec);
            break;
          }
          case 26: {
            eventMineCartMapABPatch_.AddEntriesFrom(ref input, _map_eventMineCartMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
