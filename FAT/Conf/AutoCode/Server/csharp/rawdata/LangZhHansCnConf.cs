// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/LangZhHansCnConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/LangZhHansCnConf.proto</summary>
  public static partial class LangZhHansCnConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/LangZhHansCnConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LangZhHansCnConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch5yYXdkYXRhL0xhbmdaaEhhbnNDbkNvbmYucHJvdG8SB3Jhd2RhdGEiKAoM",
            "TGFuZ1poSGFuc0NuEgoKAkxLGAEgASgJEgwKBE5hbWUYAiABKAkiTAoYTGFu",
            "Z1poSGFuc0NuU2xpY2VBQlZhbHVlEjAKEUxhbmdaaEhhbnNDblNsaWNlGAEg",
            "AygLMhUucmF3ZGF0YS5MYW5nWmhIYW5zQ24iswMKEExhbmdaaEhhbnNDbkNv",
            "bmYSMAoRTGFuZ1poSGFuc0NuU2xpY2UYASADKAsyFS5yYXdkYXRhLkxhbmda",
            "aEhhbnNDbhJPChNMYW5nWmhIYW5zQ25TbGljZUFCGAIgAygLMjIucmF3ZGF0",
            "YS5MYW5nWmhIYW5zQ25Db25mLkxhbmdaaEhhbnNDblNsaWNlQUJFbnRyeRJZ",
            "ChhMYW5nWmhIYW5zQ25TbGljZUFCUGF0Y2gYAyADKAsyNy5yYXdkYXRhLkxh",
            "bmdaaEhhbnNDbkNvbmYuTGFuZ1poSGFuc0NuU2xpY2VBQlBhdGNoRW50cnka",
            "XQoYTGFuZ1poSGFuc0NuU2xpY2VBQkVudHJ5EgsKA2tleRgBIAEoCRIwCgV2",
            "YWx1ZRgCIAEoCzIhLnJhd2RhdGEuTGFuZ1poSGFuc0NuU2xpY2VBQlZhbHVl",
            "OgI4ARpiCh1MYW5nWmhIYW5zQ25TbGljZUFCUGF0Y2hFbnRyeRILCgNrZXkY",
            "ASABKAkSMAoFdmFsdWUYAiABKAsyIS5yYXdkYXRhLkxhbmdaaEhhbnNDblNs",
            "aWNlQUJWYWx1ZToCOAFCPVotZ2l0bGFiLmZ1bnBsdXMuaW8vZmF0L2NvbmYv",
            "Z2VuL2dvbGFuZy9yYXdkYXRhqgILZmF0LnJhd2RhdGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.LangZhHansCn), global::fat.rawdata.LangZhHansCn.Parser, new[]{ "LK", "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.LangZhHansCnSliceABValue), global::fat.rawdata.LangZhHansCnSliceABValue.Parser, new[]{ "LangZhHansCnSlice" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.LangZhHansCnConf), global::fat.rawdata.LangZhHansCnConf.Parser, new[]{ "LangZhHansCnSlice", "LangZhHansCnSliceAB", "LangZhHansCnSliceABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="LangZhHansCn",table="LangZhHansCnSlice",table_wrapper="LangZhHansCnConf",map="false",map_key_type="",data="LangZhHansCnConf")
  /// annotation@ab(table_ab="LangZhHansCnSliceAB",table_ab_patch="LangZhHansCnSliceABPatch",table_ab_value="LangZhHansCnSliceABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// </summary>
  public sealed partial class LangZhHansCn : pb::IMessage<LangZhHansCn>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LangZhHansCn> _parser = new pb::MessageParser<LangZhHansCn>(() => new LangZhHansCn());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LangZhHansCn> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.LangZhHansCnConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangZhHansCn() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangZhHansCn(LangZhHansCn other) : this() {
      lK_ = other.lK_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangZhHansCn Clone() {
      return new LangZhHansCn(this);
    }

    /// <summary>Field number for the "LK" field.</summary>
    public const int LKFieldNumber = 1;
    private string lK_ = "";
    /// <summary>
    /// key
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LK {
      get { return lK_; }
      set {
        lK_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    /// 简体中文
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LangZhHansCn);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LangZhHansCn other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LK != other.LK) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LK.Length != 0) hash ^= LK.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (LK.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LK);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (LK.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LK);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LK.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LK);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LangZhHansCn other) {
      if (other == null) {
        return;
      }
      if (other.LK.Length != 0) {
        LK = other.LK;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LK = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            LK = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LangZhHansCnSliceABValue : pb::IMessage<LangZhHansCnSliceABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LangZhHansCnSliceABValue> _parser = new pb::MessageParser<LangZhHansCnSliceABValue>(() => new LangZhHansCnSliceABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LangZhHansCnSliceABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.LangZhHansCnConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangZhHansCnSliceABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangZhHansCnSliceABValue(LangZhHansCnSliceABValue other) : this() {
      langZhHansCnSlice_ = other.langZhHansCnSlice_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangZhHansCnSliceABValue Clone() {
      return new LangZhHansCnSliceABValue(this);
    }

    /// <summary>Field number for the "LangZhHansCnSlice" field.</summary>
    public const int LangZhHansCnSliceFieldNumber = 1;
    private static readonly pb::FieldCodec<global::fat.rawdata.LangZhHansCn> _repeated_langZhHansCnSlice_codec
        = pb::FieldCodec.ForMessage(10, global::fat.rawdata.LangZhHansCn.Parser);
    private readonly pbc::RepeatedField<global::fat.rawdata.LangZhHansCn> langZhHansCnSlice_ = new pbc::RepeatedField<global::fat.rawdata.LangZhHansCn>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::fat.rawdata.LangZhHansCn> LangZhHansCnSlice {
      get { return langZhHansCnSlice_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LangZhHansCnSliceABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LangZhHansCnSliceABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!langZhHansCnSlice_.Equals(other.langZhHansCnSlice_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= langZhHansCnSlice_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      langZhHansCnSlice_.WriteTo(output, _repeated_langZhHansCnSlice_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      langZhHansCnSlice_.WriteTo(ref output, _repeated_langZhHansCnSlice_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += langZhHansCnSlice_.CalculateSize(_repeated_langZhHansCnSlice_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LangZhHansCnSliceABValue other) {
      if (other == null) {
        return;
      }
      langZhHansCnSlice_.Add(other.langZhHansCnSlice_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            langZhHansCnSlice_.AddEntriesFrom(input, _repeated_langZhHansCnSlice_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            langZhHansCnSlice_.AddEntriesFrom(ref input, _repeated_langZhHansCnSlice_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LangZhHansCnConf : pb::IMessage<LangZhHansCnConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LangZhHansCnConf> _parser = new pb::MessageParser<LangZhHansCnConf>(() => new LangZhHansCnConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LangZhHansCnConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.LangZhHansCnConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangZhHansCnConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangZhHansCnConf(LangZhHansCnConf other) : this() {
      langZhHansCnSlice_ = other.langZhHansCnSlice_.Clone();
      langZhHansCnSliceAB_ = other.langZhHansCnSliceAB_.Clone();
      langZhHansCnSliceABPatch_ = other.langZhHansCnSliceABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangZhHansCnConf Clone() {
      return new LangZhHansCnConf(this);
    }

    /// <summary>Field number for the "LangZhHansCnSlice" field.</summary>
    public const int LangZhHansCnSliceFieldNumber = 1;
    private static readonly pb::FieldCodec<global::fat.rawdata.LangZhHansCn> _repeated_langZhHansCnSlice_codec
        = pb::FieldCodec.ForMessage(10, global::fat.rawdata.LangZhHansCn.Parser);
    private readonly pbc::RepeatedField<global::fat.rawdata.LangZhHansCn> langZhHansCnSlice_ = new pbc::RepeatedField<global::fat.rawdata.LangZhHansCn>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::fat.rawdata.LangZhHansCn> LangZhHansCnSlice {
      get { return langZhHansCnSlice_; }
    }

    /// <summary>Field number for the "LangZhHansCnSliceAB" field.</summary>
    public const int LangZhHansCnSliceABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.LangZhHansCnSliceABValue>.Codec _map_langZhHansCnSliceAB_codec
        = new pbc::MapField<string, global::fat.rawdata.LangZhHansCnSliceABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.LangZhHansCnSliceABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.LangZhHansCnSliceABValue> langZhHansCnSliceAB_ = new pbc::MapField<string, global::fat.rawdata.LangZhHansCnSliceABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.LangZhHansCnSliceABValue> LangZhHansCnSliceAB {
      get { return langZhHansCnSliceAB_; }
    }

    /// <summary>Field number for the "LangZhHansCnSliceABPatch" field.</summary>
    public const int LangZhHansCnSliceABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.LangZhHansCnSliceABValue>.Codec _map_langZhHansCnSliceABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.LangZhHansCnSliceABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.LangZhHansCnSliceABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.LangZhHansCnSliceABValue> langZhHansCnSliceABPatch_ = new pbc::MapField<string, global::fat.rawdata.LangZhHansCnSliceABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.LangZhHansCnSliceABValue> LangZhHansCnSliceABPatch {
      get { return langZhHansCnSliceABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LangZhHansCnConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LangZhHansCnConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!langZhHansCnSlice_.Equals(other.langZhHansCnSlice_)) return false;
      if (!LangZhHansCnSliceAB.Equals(other.LangZhHansCnSliceAB)) return false;
      if (!LangZhHansCnSliceABPatch.Equals(other.LangZhHansCnSliceABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= langZhHansCnSlice_.GetHashCode();
      hash ^= LangZhHansCnSliceAB.GetHashCode();
      hash ^= LangZhHansCnSliceABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      langZhHansCnSlice_.WriteTo(output, _repeated_langZhHansCnSlice_codec);
      langZhHansCnSliceAB_.WriteTo(output, _map_langZhHansCnSliceAB_codec);
      langZhHansCnSliceABPatch_.WriteTo(output, _map_langZhHansCnSliceABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      langZhHansCnSlice_.WriteTo(ref output, _repeated_langZhHansCnSlice_codec);
      langZhHansCnSliceAB_.WriteTo(ref output, _map_langZhHansCnSliceAB_codec);
      langZhHansCnSliceABPatch_.WriteTo(ref output, _map_langZhHansCnSliceABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += langZhHansCnSlice_.CalculateSize(_repeated_langZhHansCnSlice_codec);
      size += langZhHansCnSliceAB_.CalculateSize(_map_langZhHansCnSliceAB_codec);
      size += langZhHansCnSliceABPatch_.CalculateSize(_map_langZhHansCnSliceABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LangZhHansCnConf other) {
      if (other == null) {
        return;
      }
      langZhHansCnSlice_.Add(other.langZhHansCnSlice_);
      langZhHansCnSliceAB_.Add(other.langZhHansCnSliceAB_);
      langZhHansCnSliceABPatch_.Add(other.langZhHansCnSliceABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            langZhHansCnSlice_.AddEntriesFrom(input, _repeated_langZhHansCnSlice_codec);
            break;
          }
          case 18: {
            langZhHansCnSliceAB_.AddEntriesFrom(input, _map_langZhHansCnSliceAB_codec);
            break;
          }
          case 26: {
            langZhHansCnSliceABPatch_.AddEntriesFrom(input, _map_langZhHansCnSliceABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            langZhHansCnSlice_.AddEntriesFrom(ref input, _repeated_langZhHansCnSlice_codec);
            break;
          }
          case 18: {
            langZhHansCnSliceAB_.AddEntriesFrom(ref input, _map_langZhHansCnSliceAB_codec);
            break;
          }
          case 26: {
            langZhHansCnSliceABPatch_.AddEntriesFrom(ref input, _map_langZhHansCnSliceABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
