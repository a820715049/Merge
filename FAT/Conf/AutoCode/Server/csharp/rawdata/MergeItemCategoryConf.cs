// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/MergeItemCategoryConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/MergeItemCategoryConf.proto</summary>
  public static partial class MergeItemCategoryConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/MergeItemCategoryConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MergeItemCategoryConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiNyYXdkYXRhL01lcmdlSXRlbUNhdGVnb3J5Q29uZi5wcm90bxIHcmF3ZGF0",
            "YSL0AgoRTWVyZ2VJdGVtQ2F0ZWdvcnkSFQoNY29uZmlnVmVyc2lvbhgBIAEo",
            "BRIKCgJpZBgCIAEoBRIOCgZfdGFnc18YAyADKAkSDAoEZGVzYxgEIAEoCRIS",
            "CgpkaXJlY3RGcm9tGBAgAygFEhEKCWZyb21JdGVtcxgFIAMoBRIXCg9nYWxs",
            "ZXJ5Q2F0ZWdvcnkYBiABKAUSEwoLZ2FsbGVyeURlc2MYByABKAkSFQoNZ2Fs",
            "bGVyeVJld2FyZBgIIAEoCRIOCgZoaWRkZW4YCSABKAgSFAoMaXNBbGl2ZUNo",
            "ZWNrGBMgASgIEhIKCmlzU2hvd0Zyb20YCiABKAgSEgoKbWVyZ2VTdHlsZRgL",
            "IAEoBRIMCgRuYW1lGAwgASgJEhQKDG5ld0l0ZW1Ub2FzdBgSIAEoBRISCgpv",
            "cmlnaW5Gcm9tGBEgAygFEhAKCHByb2dyZXNzGA0gAygFEgwKBHNvcnQYDiAB",
            "KAUSDAoEdHlwZRgPIAEoBSLUAQobTWVyZ2VJdGVtQ2F0ZWdvcnlNYXBBQlZh",
            "bHVlElwKFE1lcmdlSXRlbUNhdGVnb3J5TWFwGAEgAygLMj4ucmF3ZGF0YS5N",
            "ZXJnZUl0ZW1DYXRlZ29yeU1hcEFCVmFsdWUuTWVyZ2VJdGVtQ2F0ZWdvcnlN",
            "YXBFbnRyeRpXChlNZXJnZUl0ZW1DYXRlZ29yeU1hcEVudHJ5EgsKA2tleRgB",
            "IAEoCRIpCgV2YWx1ZRgCIAEoCzIaLnJhd2RhdGEuTWVyZ2VJdGVtQ2F0ZWdv",
            "cnk6AjgBItkEChVNZXJnZUl0ZW1DYXRlZ29yeUNvbmYSVgoUTWVyZ2VJdGVt",
            "Q2F0ZWdvcnlNYXAYASADKAsyOC5yYXdkYXRhLk1lcmdlSXRlbUNhdGVnb3J5",
            "Q29uZi5NZXJnZUl0ZW1DYXRlZ29yeU1hcEVudHJ5EloKFk1lcmdlSXRlbUNh",
            "dGVnb3J5TWFwQUIYAiADKAsyOi5yYXdkYXRhLk1lcmdlSXRlbUNhdGVnb3J5",
            "Q29uZi5NZXJnZUl0ZW1DYXRlZ29yeU1hcEFCRW50cnkSZAobTWVyZ2VJdGVt",
            "Q2F0ZWdvcnlNYXBBQlBhdGNoGAMgAygLMj8ucmF3ZGF0YS5NZXJnZUl0ZW1D",
            "YXRlZ29yeUNvbmYuTWVyZ2VJdGVtQ2F0ZWdvcnlNYXBBQlBhdGNoRW50cnka",
            "VwoZTWVyZ2VJdGVtQ2F0ZWdvcnlNYXBFbnRyeRILCgNrZXkYASABKAkSKQoF",
            "dmFsdWUYAiABKAsyGi5yYXdkYXRhLk1lcmdlSXRlbUNhdGVnb3J5OgI4ARpj",
            "ChtNZXJnZUl0ZW1DYXRlZ29yeU1hcEFCRW50cnkSCwoDa2V5GAEgASgJEjMK",
            "BXZhbHVlGAIgASgLMiQucmF3ZGF0YS5NZXJnZUl0ZW1DYXRlZ29yeU1hcEFC",
            "VmFsdWU6AjgBGmgKIE1lcmdlSXRlbUNhdGVnb3J5TWFwQUJQYXRjaEVudHJ5",
            "EgsKA2tleRgBIAEoCRIzCgV2YWx1ZRgCIAEoCzIkLnJhd2RhdGEuTWVyZ2VJ",
            "dGVtQ2F0ZWdvcnlNYXBBQlZhbHVlOgI4AUI9Wi1naXRsYWIuZnVucGx1cy5p",
            "by9mYXQvY29uZi9nZW4vZ29sYW5nL3Jhd2RhdGGqAgtmYXQucmF3ZGF0YWIG",
            "cHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.MergeItemCategory), global::fat.rawdata.MergeItemCategory.Parser, new[]{ "ConfigVersion", "Id", "Tags", "Desc", "DirectFrom", "FromItems", "GalleryCategory", "GalleryDesc", "GalleryReward", "Hidden", "IsAliveCheck", "IsShowFrom", "MergeStyle", "Name", "NewItemToast", "OriginFrom", "Progress", "Sort", "Type" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.MergeItemCategoryMapABValue), global::fat.rawdata.MergeItemCategoryMapABValue.Parser, new[]{ "MergeItemCategoryMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.MergeItemCategoryConf), global::fat.rawdata.MergeItemCategoryConf.Parser, new[]{ "MergeItemCategoryMap", "MergeItemCategoryMapAB", "MergeItemCategoryMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="MergeItemCategory",table="MergeItemCategoryMap",table_wrapper="MergeItemCategoryConf",map="true",map_key_type="string",data="MergeItemCategoryConf")
  /// annotation@ab(table_ab="MergeItemCategoryMapAB",table_ab_patch="MergeItemCategoryMapABPatch",table_ab_value="MergeItemCategoryMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@MergeItemCategory(id="id,configVersion")
  /// </summary>
  public sealed partial class MergeItemCategory : pb::IMessage<MergeItemCategory>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MergeItemCategory> _parser = new pb::MessageParser<MergeItemCategory>(() => new MergeItemCategory());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MergeItemCategory> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.MergeItemCategoryConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeItemCategory() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeItemCategory(MergeItemCategory other) : this() {
      configVersion_ = other.configVersion_;
      id_ = other.id_;
      Tags_ = other.Tags_.Clone();
      desc_ = other.desc_;
      directFrom_ = other.directFrom_.Clone();
      fromItems_ = other.fromItems_.Clone();
      galleryCategory_ = other.galleryCategory_;
      galleryDesc_ = other.galleryDesc_;
      galleryReward_ = other.galleryReward_;
      hidden_ = other.hidden_;
      isAliveCheck_ = other.isAliveCheck_;
      isShowFrom_ = other.isShowFrom_;
      mergeStyle_ = other.mergeStyle_;
      name_ = other.name_;
      newItemToast_ = other.newItemToast_;
      originFrom_ = other.originFrom_.Clone();
      progress_ = other.progress_.Clone();
      sort_ = other.sort_;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeItemCategory Clone() {
      return new MergeItemCategory(this);
    }

    /// <summary>Field number for the "configVersion" field.</summary>
    public const int ConfigVersionFieldNumber = 1;
    private int configVersion_;
    /// <summary>
    /// 最低版本号
    /// （包含）
    /// annotation@field_configVersion(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ConfigVersion {
      get { return configVersion_; }
      set {
        configVersion_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private int id_;
    /// <summary>
    /// 合成链ID
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "_tags_" field.</summary>
    public const int TagsFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_Tags_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> Tags_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Tags {
      get { return Tags_; }
    }

    /// <summary>Field number for the "desc" field.</summary>
    public const int DescFieldNumber = 4;
    private string desc_ = "";
    /// <summary>
    /// 描述
    /// （废弃）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Desc {
      get { return desc_; }
      set {
        desc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "directFrom" field.</summary>
    public const int DirectFromFieldNumber = 16;
    private static readonly pb::FieldCodec<int> _repeated_directFrom_codec
        = pb::FieldCodec.ForInt32(130);
    private readonly pbc::RepeatedField<int> directFrom_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 直接来源
    /// （链ID,链内等级）
    /// 链内等级 = 0，代表这条链中任何一个等级都是来源
    /// 链内等级 > 0，代表这条链中某个特定等级才是来源
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> DirectFrom {
      get { return directFrom_; }
    }

    /// <summary>Field number for the "fromItems" field.</summary>
    public const int FromItemsFieldNumber = 5;
    private static readonly pb::FieldCodec<int> _repeated_fromItems_codec
        = pb::FieldCodec.ForInt32(42);
    private readonly pbc::RepeatedField<int> fromItems_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// from的物品的ID
    /// （留空为默认规则）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> FromItems {
      get { return fromItems_; }
    }

    /// <summary>Field number for the "galleryCategory" field.</summary>
    public const int GalleryCategoryFieldNumber = 6;
    private int galleryCategory_;
    /// <summary>
    /// 图鉴分组
    /// （独立棋盘的链，分组为空）
    /// （GalleryCategory.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GalleryCategory {
      get { return galleryCategory_; }
      set {
        galleryCategory_ = value;
      }
    }

    /// <summary>Field number for the "galleryDesc" field.</summary>
    public const int GalleryDescFieldNumber = 7;
    private string galleryDesc_ = "";
    /// <summary>
    /// 图鉴链条描述
    /// （废弃）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GalleryDesc {
      get { return galleryDesc_; }
      set {
        galleryDesc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "galleryReward" field.</summary>
    public const int GalleryRewardFieldNumber = 8;
    private string galleryReward_ = "";
    /// <summary>
    /// 图鉴功能奖励
    /// （废弃）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GalleryReward {
      get { return galleryReward_; }
      set {
        galleryReward_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hidden" field.</summary>
    public const int HiddenFieldNumber = 9;
    private bool hidden_;
    /// <summary>
    /// 是否隐藏图鉴
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Hidden {
      get { return hidden_; }
      set {
        hidden_ = value;
      }
    }

    /// <summary>Field number for the "isAliveCheck" field.</summary>
    public const int IsAliveCheckFieldNumber = 19;
    private bool isAliveCheck_;
    /// <summary>
    /// 是否需要
    /// TGA
    /// 持有状况检查
    /// missing_item
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsAliveCheck {
      get { return isAliveCheck_; }
      set {
        isAliveCheck_ = value;
      }
    }

    /// <summary>Field number for the "isShowFrom" field.</summary>
    public const int IsShowFromFieldNumber = 10;
    private bool isShowFrom_;
    /// <summary>
    /// 是否显示from
    /// （留空视作TRUE）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsShowFrom {
      get { return isShowFrom_; }
      set {
        isShowFrom_ = value;
      }
    }

    /// <summary>Field number for the "mergeStyle" field.</summary>
    public const int MergeStyleFieldNumber = 11;
    private int mergeStyle_;
    /// <summary>
    /// 合成链内合成方式
    /// 0 = 正常合成
    /// 1 = 禁止合成
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MergeStyle {
      get { return mergeStyle_; }
      set {
        mergeStyle_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 12;
    private string name_ = "";
    /// <summary>
    /// 类别名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "newItemToast" field.</summary>
    public const int NewItemToastFieldNumber = 18;
    private int newItemToast_;
    /// <summary>
    /// 是否隐藏newitem飘字，默认填0显示，填1隐藏
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NewItemToast {
      get { return newItemToast_; }
      set {
        newItemToast_ = value;
      }
    }

    /// <summary>Field number for the "originFrom" field.</summary>
    public const int OriginFromFieldNumber = 17;
    private static readonly pb::FieldCodec<int> _repeated_originFrom_codec
        = pb::FieldCodec.ForInt32(138);
    private readonly pbc::RepeatedField<int> originFrom_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 初始来源
    /// （链ID,链内等级）
    /// 链内等级 = 0，代表这条链中任何一个等级都是来源
    /// 链内等级 > 0，代表这条链中某从某个等级开始后都是来源
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> OriginFrom {
      get { return originFrom_; }
    }

    /// <summary>Field number for the "progress" field.</summary>
    public const int ProgressFieldNumber = 13;
    private static readonly pb::FieldCodec<int> _repeated_progress_codec
        = pb::FieldCodec.ForInt32(106);
    private readonly pbc::RepeatedField<int> progress_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 包含的物品
    /// （ObjBasic.id）
    /// （有序）
    /// （不超过256个）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Progress {
      get { return progress_; }
    }

    /// <summary>Field number for the "sort" field.</summary>
    public const int SortFieldNumber = 14;
    private int sort_;
    /// <summary>
    /// 排序
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Sort {
      get { return sort_; }
      set {
        sort_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 15;
    private int type_;
    /// <summary>
    /// 图鉴类型
    /// （废弃）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MergeItemCategory);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MergeItemCategory other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ConfigVersion != other.ConfigVersion) return false;
      if (Id != other.Id) return false;
      if(!Tags_.Equals(other.Tags_)) return false;
      if (Desc != other.Desc) return false;
      if(!directFrom_.Equals(other.directFrom_)) return false;
      if(!fromItems_.Equals(other.fromItems_)) return false;
      if (GalleryCategory != other.GalleryCategory) return false;
      if (GalleryDesc != other.GalleryDesc) return false;
      if (GalleryReward != other.GalleryReward) return false;
      if (Hidden != other.Hidden) return false;
      if (IsAliveCheck != other.IsAliveCheck) return false;
      if (IsShowFrom != other.IsShowFrom) return false;
      if (MergeStyle != other.MergeStyle) return false;
      if (Name != other.Name) return false;
      if (NewItemToast != other.NewItemToast) return false;
      if(!originFrom_.Equals(other.originFrom_)) return false;
      if(!progress_.Equals(other.progress_)) return false;
      if (Sort != other.Sort) return false;
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ConfigVersion != 0) hash ^= ConfigVersion.GetHashCode();
      if (Id != 0) hash ^= Id.GetHashCode();
      hash ^= Tags_.GetHashCode();
      if (Desc.Length != 0) hash ^= Desc.GetHashCode();
      hash ^= directFrom_.GetHashCode();
      hash ^= fromItems_.GetHashCode();
      if (GalleryCategory != 0) hash ^= GalleryCategory.GetHashCode();
      if (GalleryDesc.Length != 0) hash ^= GalleryDesc.GetHashCode();
      if (GalleryReward.Length != 0) hash ^= GalleryReward.GetHashCode();
      if (Hidden != false) hash ^= Hidden.GetHashCode();
      if (IsAliveCheck != false) hash ^= IsAliveCheck.GetHashCode();
      if (IsShowFrom != false) hash ^= IsShowFrom.GetHashCode();
      if (MergeStyle != 0) hash ^= MergeStyle.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (NewItemToast != 0) hash ^= NewItemToast.GetHashCode();
      hash ^= originFrom_.GetHashCode();
      hash ^= progress_.GetHashCode();
      if (Sort != 0) hash ^= Sort.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ConfigVersion != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ConfigVersion);
      }
      if (Id != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Id);
      }
      Tags_.WriteTo(output, _repeated_Tags_codec);
      if (Desc.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Desc);
      }
      fromItems_.WriteTo(output, _repeated_fromItems_codec);
      if (GalleryCategory != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(GalleryCategory);
      }
      if (GalleryDesc.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(GalleryDesc);
      }
      if (GalleryReward.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(GalleryReward);
      }
      if (Hidden != false) {
        output.WriteRawTag(72);
        output.WriteBool(Hidden);
      }
      if (IsShowFrom != false) {
        output.WriteRawTag(80);
        output.WriteBool(IsShowFrom);
      }
      if (MergeStyle != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(MergeStyle);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Name);
      }
      progress_.WriteTo(output, _repeated_progress_codec);
      if (Sort != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(Sort);
      }
      if (Type != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(Type);
      }
      directFrom_.WriteTo(output, _repeated_directFrom_codec);
      originFrom_.WriteTo(output, _repeated_originFrom_codec);
      if (NewItemToast != 0) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(NewItemToast);
      }
      if (IsAliveCheck != false) {
        output.WriteRawTag(152, 1);
        output.WriteBool(IsAliveCheck);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ConfigVersion != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ConfigVersion);
      }
      if (Id != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Id);
      }
      Tags_.WriteTo(ref output, _repeated_Tags_codec);
      if (Desc.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Desc);
      }
      fromItems_.WriteTo(ref output, _repeated_fromItems_codec);
      if (GalleryCategory != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(GalleryCategory);
      }
      if (GalleryDesc.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(GalleryDesc);
      }
      if (GalleryReward.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(GalleryReward);
      }
      if (Hidden != false) {
        output.WriteRawTag(72);
        output.WriteBool(Hidden);
      }
      if (IsShowFrom != false) {
        output.WriteRawTag(80);
        output.WriteBool(IsShowFrom);
      }
      if (MergeStyle != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(MergeStyle);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Name);
      }
      progress_.WriteTo(ref output, _repeated_progress_codec);
      if (Sort != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(Sort);
      }
      if (Type != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(Type);
      }
      directFrom_.WriteTo(ref output, _repeated_directFrom_codec);
      originFrom_.WriteTo(ref output, _repeated_originFrom_codec);
      if (NewItemToast != 0) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(NewItemToast);
      }
      if (IsAliveCheck != false) {
        output.WriteRawTag(152, 1);
        output.WriteBool(IsAliveCheck);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ConfigVersion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ConfigVersion);
      }
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      size += Tags_.CalculateSize(_repeated_Tags_codec);
      if (Desc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Desc);
      }
      size += directFrom_.CalculateSize(_repeated_directFrom_codec);
      size += fromItems_.CalculateSize(_repeated_fromItems_codec);
      if (GalleryCategory != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GalleryCategory);
      }
      if (GalleryDesc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GalleryDesc);
      }
      if (GalleryReward.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GalleryReward);
      }
      if (Hidden != false) {
        size += 1 + 1;
      }
      if (IsAliveCheck != false) {
        size += 2 + 1;
      }
      if (IsShowFrom != false) {
        size += 1 + 1;
      }
      if (MergeStyle != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MergeStyle);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (NewItemToast != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(NewItemToast);
      }
      size += originFrom_.CalculateSize(_repeated_originFrom_codec);
      size += progress_.CalculateSize(_repeated_progress_codec);
      if (Sort != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Sort);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MergeItemCategory other) {
      if (other == null) {
        return;
      }
      if (other.ConfigVersion != 0) {
        ConfigVersion = other.ConfigVersion;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      Tags_.Add(other.Tags_);
      if (other.Desc.Length != 0) {
        Desc = other.Desc;
      }
      directFrom_.Add(other.directFrom_);
      fromItems_.Add(other.fromItems_);
      if (other.GalleryCategory != 0) {
        GalleryCategory = other.GalleryCategory;
      }
      if (other.GalleryDesc.Length != 0) {
        GalleryDesc = other.GalleryDesc;
      }
      if (other.GalleryReward.Length != 0) {
        GalleryReward = other.GalleryReward;
      }
      if (other.Hidden != false) {
        Hidden = other.Hidden;
      }
      if (other.IsAliveCheck != false) {
        IsAliveCheck = other.IsAliveCheck;
      }
      if (other.IsShowFrom != false) {
        IsShowFrom = other.IsShowFrom;
      }
      if (other.MergeStyle != 0) {
        MergeStyle = other.MergeStyle;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.NewItemToast != 0) {
        NewItemToast = other.NewItemToast;
      }
      originFrom_.Add(other.originFrom_);
      progress_.Add(other.progress_);
      if (other.Sort != 0) {
        Sort = other.Sort;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ConfigVersion = input.ReadInt32();
            break;
          }
          case 16: {
            Id = input.ReadInt32();
            break;
          }
          case 26: {
            Tags_.AddEntriesFrom(input, _repeated_Tags_codec);
            break;
          }
          case 34: {
            Desc = input.ReadString();
            break;
          }
          case 42:
          case 40: {
            fromItems_.AddEntriesFrom(input, _repeated_fromItems_codec);
            break;
          }
          case 48: {
            GalleryCategory = input.ReadInt32();
            break;
          }
          case 58: {
            GalleryDesc = input.ReadString();
            break;
          }
          case 66: {
            GalleryReward = input.ReadString();
            break;
          }
          case 72: {
            Hidden = input.ReadBool();
            break;
          }
          case 80: {
            IsShowFrom = input.ReadBool();
            break;
          }
          case 88: {
            MergeStyle = input.ReadInt32();
            break;
          }
          case 98: {
            Name = input.ReadString();
            break;
          }
          case 106:
          case 104: {
            progress_.AddEntriesFrom(input, _repeated_progress_codec);
            break;
          }
          case 112: {
            Sort = input.ReadInt32();
            break;
          }
          case 120: {
            Type = input.ReadInt32();
            break;
          }
          case 130:
          case 128: {
            directFrom_.AddEntriesFrom(input, _repeated_directFrom_codec);
            break;
          }
          case 138:
          case 136: {
            originFrom_.AddEntriesFrom(input, _repeated_originFrom_codec);
            break;
          }
          case 144: {
            NewItemToast = input.ReadInt32();
            break;
          }
          case 152: {
            IsAliveCheck = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ConfigVersion = input.ReadInt32();
            break;
          }
          case 16: {
            Id = input.ReadInt32();
            break;
          }
          case 26: {
            Tags_.AddEntriesFrom(ref input, _repeated_Tags_codec);
            break;
          }
          case 34: {
            Desc = input.ReadString();
            break;
          }
          case 42:
          case 40: {
            fromItems_.AddEntriesFrom(ref input, _repeated_fromItems_codec);
            break;
          }
          case 48: {
            GalleryCategory = input.ReadInt32();
            break;
          }
          case 58: {
            GalleryDesc = input.ReadString();
            break;
          }
          case 66: {
            GalleryReward = input.ReadString();
            break;
          }
          case 72: {
            Hidden = input.ReadBool();
            break;
          }
          case 80: {
            IsShowFrom = input.ReadBool();
            break;
          }
          case 88: {
            MergeStyle = input.ReadInt32();
            break;
          }
          case 98: {
            Name = input.ReadString();
            break;
          }
          case 106:
          case 104: {
            progress_.AddEntriesFrom(ref input, _repeated_progress_codec);
            break;
          }
          case 112: {
            Sort = input.ReadInt32();
            break;
          }
          case 120: {
            Type = input.ReadInt32();
            break;
          }
          case 130:
          case 128: {
            directFrom_.AddEntriesFrom(ref input, _repeated_directFrom_codec);
            break;
          }
          case 138:
          case 136: {
            originFrom_.AddEntriesFrom(ref input, _repeated_originFrom_codec);
            break;
          }
          case 144: {
            NewItemToast = input.ReadInt32();
            break;
          }
          case 152: {
            IsAliveCheck = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MergeItemCategoryMapABValue : pb::IMessage<MergeItemCategoryMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MergeItemCategoryMapABValue> _parser = new pb::MessageParser<MergeItemCategoryMapABValue>(() => new MergeItemCategoryMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MergeItemCategoryMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.MergeItemCategoryConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeItemCategoryMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeItemCategoryMapABValue(MergeItemCategoryMapABValue other) : this() {
      mergeItemCategoryMap_ = other.mergeItemCategoryMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeItemCategoryMapABValue Clone() {
      return new MergeItemCategoryMapABValue(this);
    }

    /// <summary>Field number for the "MergeItemCategoryMap" field.</summary>
    public const int MergeItemCategoryMapFieldNumber = 1;
    private static readonly pbc::MapField<string, global::fat.rawdata.MergeItemCategory>.Codec _map_mergeItemCategoryMap_codec
        = new pbc::MapField<string, global::fat.rawdata.MergeItemCategory>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.MergeItemCategory.Parser), 10);
    private readonly pbc::MapField<string, global::fat.rawdata.MergeItemCategory> mergeItemCategoryMap_ = new pbc::MapField<string, global::fat.rawdata.MergeItemCategory>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.MergeItemCategory> MergeItemCategoryMap {
      get { return mergeItemCategoryMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MergeItemCategoryMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MergeItemCategoryMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!MergeItemCategoryMap.Equals(other.MergeItemCategoryMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= MergeItemCategoryMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      mergeItemCategoryMap_.WriteTo(output, _map_mergeItemCategoryMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      mergeItemCategoryMap_.WriteTo(ref output, _map_mergeItemCategoryMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += mergeItemCategoryMap_.CalculateSize(_map_mergeItemCategoryMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MergeItemCategoryMapABValue other) {
      if (other == null) {
        return;
      }
      mergeItemCategoryMap_.Add(other.mergeItemCategoryMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            mergeItemCategoryMap_.AddEntriesFrom(input, _map_mergeItemCategoryMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            mergeItemCategoryMap_.AddEntriesFrom(ref input, _map_mergeItemCategoryMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MergeItemCategoryConf : pb::IMessage<MergeItemCategoryConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MergeItemCategoryConf> _parser = new pb::MessageParser<MergeItemCategoryConf>(() => new MergeItemCategoryConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MergeItemCategoryConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.MergeItemCategoryConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeItemCategoryConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeItemCategoryConf(MergeItemCategoryConf other) : this() {
      mergeItemCategoryMap_ = other.mergeItemCategoryMap_.Clone();
      mergeItemCategoryMapAB_ = other.mergeItemCategoryMapAB_.Clone();
      mergeItemCategoryMapABPatch_ = other.mergeItemCategoryMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeItemCategoryConf Clone() {
      return new MergeItemCategoryConf(this);
    }

    /// <summary>Field number for the "MergeItemCategoryMap" field.</summary>
    public const int MergeItemCategoryMapFieldNumber = 1;
    private static readonly pbc::MapField<string, global::fat.rawdata.MergeItemCategory>.Codec _map_mergeItemCategoryMap_codec
        = new pbc::MapField<string, global::fat.rawdata.MergeItemCategory>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.MergeItemCategory.Parser), 10);
    private readonly pbc::MapField<string, global::fat.rawdata.MergeItemCategory> mergeItemCategoryMap_ = new pbc::MapField<string, global::fat.rawdata.MergeItemCategory>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.MergeItemCategory> MergeItemCategoryMap {
      get { return mergeItemCategoryMap_; }
    }

    /// <summary>Field number for the "MergeItemCategoryMapAB" field.</summary>
    public const int MergeItemCategoryMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.MergeItemCategoryMapABValue>.Codec _map_mergeItemCategoryMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.MergeItemCategoryMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.MergeItemCategoryMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.MergeItemCategoryMapABValue> mergeItemCategoryMapAB_ = new pbc::MapField<string, global::fat.rawdata.MergeItemCategoryMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.MergeItemCategoryMapABValue> MergeItemCategoryMapAB {
      get { return mergeItemCategoryMapAB_; }
    }

    /// <summary>Field number for the "MergeItemCategoryMapABPatch" field.</summary>
    public const int MergeItemCategoryMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.MergeItemCategoryMapABValue>.Codec _map_mergeItemCategoryMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.MergeItemCategoryMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.MergeItemCategoryMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.MergeItemCategoryMapABValue> mergeItemCategoryMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.MergeItemCategoryMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.MergeItemCategoryMapABValue> MergeItemCategoryMapABPatch {
      get { return mergeItemCategoryMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MergeItemCategoryConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MergeItemCategoryConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!MergeItemCategoryMap.Equals(other.MergeItemCategoryMap)) return false;
      if (!MergeItemCategoryMapAB.Equals(other.MergeItemCategoryMapAB)) return false;
      if (!MergeItemCategoryMapABPatch.Equals(other.MergeItemCategoryMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= MergeItemCategoryMap.GetHashCode();
      hash ^= MergeItemCategoryMapAB.GetHashCode();
      hash ^= MergeItemCategoryMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      mergeItemCategoryMap_.WriteTo(output, _map_mergeItemCategoryMap_codec);
      mergeItemCategoryMapAB_.WriteTo(output, _map_mergeItemCategoryMapAB_codec);
      mergeItemCategoryMapABPatch_.WriteTo(output, _map_mergeItemCategoryMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      mergeItemCategoryMap_.WriteTo(ref output, _map_mergeItemCategoryMap_codec);
      mergeItemCategoryMapAB_.WriteTo(ref output, _map_mergeItemCategoryMapAB_codec);
      mergeItemCategoryMapABPatch_.WriteTo(ref output, _map_mergeItemCategoryMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += mergeItemCategoryMap_.CalculateSize(_map_mergeItemCategoryMap_codec);
      size += mergeItemCategoryMapAB_.CalculateSize(_map_mergeItemCategoryMapAB_codec);
      size += mergeItemCategoryMapABPatch_.CalculateSize(_map_mergeItemCategoryMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MergeItemCategoryConf other) {
      if (other == null) {
        return;
      }
      mergeItemCategoryMap_.Add(other.mergeItemCategoryMap_);
      mergeItemCategoryMapAB_.Add(other.mergeItemCategoryMapAB_);
      mergeItemCategoryMapABPatch_.Add(other.mergeItemCategoryMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            mergeItemCategoryMap_.AddEntriesFrom(input, _map_mergeItemCategoryMap_codec);
            break;
          }
          case 18: {
            mergeItemCategoryMapAB_.AddEntriesFrom(input, _map_mergeItemCategoryMapAB_codec);
            break;
          }
          case 26: {
            mergeItemCategoryMapABPatch_.AddEntriesFrom(input, _map_mergeItemCategoryMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            mergeItemCategoryMap_.AddEntriesFrom(ref input, _map_mergeItemCategoryMap_codec);
            break;
          }
          case 18: {
            mergeItemCategoryMapAB_.AddEntriesFrom(ref input, _map_mergeItemCategoryMapAB_codec);
            break;
          }
          case 26: {
            mergeItemCategoryMapABPatch_.AddEntriesFrom(ref input, _map_mergeItemCategoryMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
