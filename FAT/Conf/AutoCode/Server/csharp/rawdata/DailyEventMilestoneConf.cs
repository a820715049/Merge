// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/DailyEventMilestoneConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/DailyEventMilestoneConf.proto</summary>
  public static partial class DailyEventMilestoneConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/DailyEventMilestoneConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DailyEventMilestoneConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiVyYXdkYXRhL0RhaWx5RXZlbnRNaWxlc3RvbmVDb25mLnByb3RvEgdyYXdk",
            "YXRhItsBChNEYWlseUV2ZW50TWlsZXN0b25lEgoKAmlkGAEgASgFEhQKDGlz",
            "Rm9yTmV3VXNlchgFIAEoCBIWCg5taWxlc3RvbmVHcnBJZBgGIAEoBRIXCg9t",
            "aWxlc3RvbmVSZXdhcmQYAiADKAkSFgoObWlsZXN0b25lU2NvcmUYAyADKAUS",
            "FQoNcG9wdXBBY3RpdmVMdhgHIAEoBRIXCg9wb3B1cFNodXRkb3duTHYYCCAB",
            "KAUSEgoKcG9wdXBUaGVtZRgJIAEoBRIVCg1yZXF1aXJlQ29pbklkGAQgASgF",
            "IuABCh1EYWlseUV2ZW50TWlsZXN0b25lTWFwQUJWYWx1ZRJiChZEYWlseUV2",
            "ZW50TWlsZXN0b25lTWFwGAEgAygLMkIucmF3ZGF0YS5EYWlseUV2ZW50TWls",
            "ZXN0b25lTWFwQUJWYWx1ZS5EYWlseUV2ZW50TWlsZXN0b25lTWFwRW50cnka",
            "WwobRGFpbHlFdmVudE1pbGVzdG9uZU1hcEVudHJ5EgsKA2tleRgBIAEoBRIr",
            "CgV2YWx1ZRgCIAEoCzIcLnJhd2RhdGEuRGFpbHlFdmVudE1pbGVzdG9uZToC",
            "OAEi+QQKF0RhaWx5RXZlbnRNaWxlc3RvbmVDb25mElwKFkRhaWx5RXZlbnRN",
            "aWxlc3RvbmVNYXAYASADKAsyPC5yYXdkYXRhLkRhaWx5RXZlbnRNaWxlc3Rv",
            "bmVDb25mLkRhaWx5RXZlbnRNaWxlc3RvbmVNYXBFbnRyeRJgChhEYWlseUV2",
            "ZW50TWlsZXN0b25lTWFwQUIYAiADKAsyPi5yYXdkYXRhLkRhaWx5RXZlbnRN",
            "aWxlc3RvbmVDb25mLkRhaWx5RXZlbnRNaWxlc3RvbmVNYXBBQkVudHJ5EmoK",
            "HURhaWx5RXZlbnRNaWxlc3RvbmVNYXBBQlBhdGNoGAMgAygLMkMucmF3ZGF0",
            "YS5EYWlseUV2ZW50TWlsZXN0b25lQ29uZi5EYWlseUV2ZW50TWlsZXN0b25l",
            "TWFwQUJQYXRjaEVudHJ5GlsKG0RhaWx5RXZlbnRNaWxlc3RvbmVNYXBFbnRy",
            "eRILCgNrZXkYASABKAUSKwoFdmFsdWUYAiABKAsyHC5yYXdkYXRhLkRhaWx5",
            "RXZlbnRNaWxlc3RvbmU6AjgBGmcKHURhaWx5RXZlbnRNaWxlc3RvbmVNYXBB",
            "QkVudHJ5EgsKA2tleRgBIAEoCRI1CgV2YWx1ZRgCIAEoCzImLnJhd2RhdGEu",
            "RGFpbHlFdmVudE1pbGVzdG9uZU1hcEFCVmFsdWU6AjgBGmwKIkRhaWx5RXZl",
            "bnRNaWxlc3RvbmVNYXBBQlBhdGNoRW50cnkSCwoDa2V5GAEgASgJEjUKBXZh",
            "bHVlGAIgASgLMiYucmF3ZGF0YS5EYWlseUV2ZW50TWlsZXN0b25lTWFwQUJW",
            "YWx1ZToCOAFCPVotZ2l0bGFiLmZ1bnBsdXMuaW8vZmF0L2NvbmYvZ2VuL2dv",
            "bGFuZy9yYXdkYXRhqgILZmF0LnJhd2RhdGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.DailyEventMilestone), global::fat.rawdata.DailyEventMilestone.Parser, new[]{ "Id", "IsForNewUser", "MilestoneGrpId", "MilestoneReward", "MilestoneScore", "PopupActiveLv", "PopupShutdownLv", "PopupTheme", "RequireCoinId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.DailyEventMilestoneMapABValue), global::fat.rawdata.DailyEventMilestoneMapABValue.Parser, new[]{ "DailyEventMilestoneMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.DailyEventMilestoneConf), global::fat.rawdata.DailyEventMilestoneConf.Parser, new[]{ "DailyEventMilestoneMap", "DailyEventMilestoneMapAB", "DailyEventMilestoneMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="DailyEventMilestone",table="DailyEventMilestoneMap",table_wrapper="DailyEventMilestoneConf",map="true",map_key_type="int32",data="DailyEventMilestoneConf")
  /// annotation@ab(table_ab="DailyEventMilestoneMapAB",table_ab_patch="DailyEventMilestoneMapABPatch",table_ab_value="DailyEventMilestoneMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@DailyEventMilestone(id="id")
  /// </summary>
  public sealed partial class DailyEventMilestone : pb::IMessage<DailyEventMilestone>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DailyEventMilestone> _parser = new pb::MessageParser<DailyEventMilestone>(() => new DailyEventMilestone());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DailyEventMilestone> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.DailyEventMilestoneConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DailyEventMilestone() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DailyEventMilestone(DailyEventMilestone other) : this() {
      id_ = other.id_;
      isForNewUser_ = other.isForNewUser_;
      milestoneGrpId_ = other.milestoneGrpId_;
      milestoneReward_ = other.milestoneReward_.Clone();
      milestoneScore_ = other.milestoneScore_.Clone();
      popupActiveLv_ = other.popupActiveLv_;
      popupShutdownLv_ = other.popupShutdownLv_;
      popupTheme_ = other.popupTheme_;
      requireCoinId_ = other.requireCoinId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DailyEventMilestone Clone() {
      return new DailyEventMilestone(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 每日任务里程碑ID
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "isForNewUser" field.</summary>
    public const int IsForNewUserFieldNumber = 5;
    private bool isForNewUser_;
    /// <summary>
    /// TRUE == 面向新手期用户
    /// FALSE == 面向非新手期用户
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsForNewUser {
      get { return isForNewUser_; }
      set {
        isForNewUser_ = value;
      }
    }

    /// <summary>Field number for the "milestoneGrpId" field.</summary>
    public const int MilestoneGrpIdFieldNumber = 6;
    private int milestoneGrpId_;
    /// <summary>
    /// 里程碑信息ID
    /// （GradeIndexMapping.id）
    /// （DEMInfo.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MilestoneGrpId {
      get { return milestoneGrpId_; }
      set {
        milestoneGrpId_ = value;
      }
    }

    /// <summary>Field number for the "milestoneReward" field.</summary>
    public const int MilestoneRewardFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_milestoneReward_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> milestoneReward_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 里程碑分数对应奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> MilestoneReward {
      get { return milestoneReward_; }
    }

    /// <summary>Field number for the "milestoneScore" field.</summary>
    public const int MilestoneScoreFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_milestoneScore_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> milestoneScore_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 里程碑分数要求
    /// 每一级所需的分数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> MilestoneScore {
      get { return milestoneScore_; }
    }

    /// <summary>Field number for the "popupActiveLv" field.</summary>
    public const int PopupActiveLvFieldNumber = 7;
    private int popupActiveLv_;
    /// <summary>
    /// 玩法教学弹窗
    /// 开启等级
    /// （含）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PopupActiveLv {
      get { return popupActiveLv_; }
      set {
        popupActiveLv_ = value;
      }
    }

    /// <summary>Field number for the "popupShutdownLv" field.</summary>
    public const int PopupShutdownLvFieldNumber = 8;
    private int popupShutdownLv_;
    /// <summary>
    /// 玩法教学弹窗
    /// 关闭等级
    /// （含）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PopupShutdownLv {
      get { return popupShutdownLv_; }
      set {
        popupShutdownLv_ = value;
      }
    }

    /// <summary>Field number for the "popupTheme" field.</summary>
    public const int PopupThemeFieldNumber = 9;
    private int popupTheme_;
    /// <summary>
    /// 玩法教学弹窗ID
    /// （EventTheme.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PopupTheme {
      get { return popupTheme_; }
      set {
        popupTheme_ = value;
      }
    }

    /// <summary>Field number for the "requireCoinId" field.</summary>
    public const int RequireCoinIdFieldNumber = 4;
    private int requireCoinId_;
    /// <summary>
    /// 里程碑所需货币ID
    /// （ObjBasic.id)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RequireCoinId {
      get { return requireCoinId_; }
      set {
        requireCoinId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DailyEventMilestone);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DailyEventMilestone other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (IsForNewUser != other.IsForNewUser) return false;
      if (MilestoneGrpId != other.MilestoneGrpId) return false;
      if(!milestoneReward_.Equals(other.milestoneReward_)) return false;
      if(!milestoneScore_.Equals(other.milestoneScore_)) return false;
      if (PopupActiveLv != other.PopupActiveLv) return false;
      if (PopupShutdownLv != other.PopupShutdownLv) return false;
      if (PopupTheme != other.PopupTheme) return false;
      if (RequireCoinId != other.RequireCoinId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (IsForNewUser != false) hash ^= IsForNewUser.GetHashCode();
      if (MilestoneGrpId != 0) hash ^= MilestoneGrpId.GetHashCode();
      hash ^= milestoneReward_.GetHashCode();
      hash ^= milestoneScore_.GetHashCode();
      if (PopupActiveLv != 0) hash ^= PopupActiveLv.GetHashCode();
      if (PopupShutdownLv != 0) hash ^= PopupShutdownLv.GetHashCode();
      if (PopupTheme != 0) hash ^= PopupTheme.GetHashCode();
      if (RequireCoinId != 0) hash ^= RequireCoinId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      milestoneReward_.WriteTo(output, _repeated_milestoneReward_codec);
      milestoneScore_.WriteTo(output, _repeated_milestoneScore_codec);
      if (RequireCoinId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(RequireCoinId);
      }
      if (IsForNewUser != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsForNewUser);
      }
      if (MilestoneGrpId != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(MilestoneGrpId);
      }
      if (PopupActiveLv != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(PopupActiveLv);
      }
      if (PopupShutdownLv != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(PopupShutdownLv);
      }
      if (PopupTheme != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(PopupTheme);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      milestoneReward_.WriteTo(ref output, _repeated_milestoneReward_codec);
      milestoneScore_.WriteTo(ref output, _repeated_milestoneScore_codec);
      if (RequireCoinId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(RequireCoinId);
      }
      if (IsForNewUser != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsForNewUser);
      }
      if (MilestoneGrpId != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(MilestoneGrpId);
      }
      if (PopupActiveLv != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(PopupActiveLv);
      }
      if (PopupShutdownLv != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(PopupShutdownLv);
      }
      if (PopupTheme != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(PopupTheme);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (IsForNewUser != false) {
        size += 1 + 1;
      }
      if (MilestoneGrpId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MilestoneGrpId);
      }
      size += milestoneReward_.CalculateSize(_repeated_milestoneReward_codec);
      size += milestoneScore_.CalculateSize(_repeated_milestoneScore_codec);
      if (PopupActiveLv != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PopupActiveLv);
      }
      if (PopupShutdownLv != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PopupShutdownLv);
      }
      if (PopupTheme != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PopupTheme);
      }
      if (RequireCoinId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RequireCoinId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DailyEventMilestone other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.IsForNewUser != false) {
        IsForNewUser = other.IsForNewUser;
      }
      if (other.MilestoneGrpId != 0) {
        MilestoneGrpId = other.MilestoneGrpId;
      }
      milestoneReward_.Add(other.milestoneReward_);
      milestoneScore_.Add(other.milestoneScore_);
      if (other.PopupActiveLv != 0) {
        PopupActiveLv = other.PopupActiveLv;
      }
      if (other.PopupShutdownLv != 0) {
        PopupShutdownLv = other.PopupShutdownLv;
      }
      if (other.PopupTheme != 0) {
        PopupTheme = other.PopupTheme;
      }
      if (other.RequireCoinId != 0) {
        RequireCoinId = other.RequireCoinId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            milestoneReward_.AddEntriesFrom(input, _repeated_milestoneReward_codec);
            break;
          }
          case 26:
          case 24: {
            milestoneScore_.AddEntriesFrom(input, _repeated_milestoneScore_codec);
            break;
          }
          case 32: {
            RequireCoinId = input.ReadInt32();
            break;
          }
          case 40: {
            IsForNewUser = input.ReadBool();
            break;
          }
          case 48: {
            MilestoneGrpId = input.ReadInt32();
            break;
          }
          case 56: {
            PopupActiveLv = input.ReadInt32();
            break;
          }
          case 64: {
            PopupShutdownLv = input.ReadInt32();
            break;
          }
          case 72: {
            PopupTheme = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            milestoneReward_.AddEntriesFrom(ref input, _repeated_milestoneReward_codec);
            break;
          }
          case 26:
          case 24: {
            milestoneScore_.AddEntriesFrom(ref input, _repeated_milestoneScore_codec);
            break;
          }
          case 32: {
            RequireCoinId = input.ReadInt32();
            break;
          }
          case 40: {
            IsForNewUser = input.ReadBool();
            break;
          }
          case 48: {
            MilestoneGrpId = input.ReadInt32();
            break;
          }
          case 56: {
            PopupActiveLv = input.ReadInt32();
            break;
          }
          case 64: {
            PopupShutdownLv = input.ReadInt32();
            break;
          }
          case 72: {
            PopupTheme = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DailyEventMilestoneMapABValue : pb::IMessage<DailyEventMilestoneMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DailyEventMilestoneMapABValue> _parser = new pb::MessageParser<DailyEventMilestoneMapABValue>(() => new DailyEventMilestoneMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DailyEventMilestoneMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.DailyEventMilestoneConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DailyEventMilestoneMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DailyEventMilestoneMapABValue(DailyEventMilestoneMapABValue other) : this() {
      dailyEventMilestoneMap_ = other.dailyEventMilestoneMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DailyEventMilestoneMapABValue Clone() {
      return new DailyEventMilestoneMapABValue(this);
    }

    /// <summary>Field number for the "DailyEventMilestoneMap" field.</summary>
    public const int DailyEventMilestoneMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.DailyEventMilestone>.Codec _map_dailyEventMilestoneMap_codec
        = new pbc::MapField<int, global::fat.rawdata.DailyEventMilestone>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.DailyEventMilestone.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.DailyEventMilestone> dailyEventMilestoneMap_ = new pbc::MapField<int, global::fat.rawdata.DailyEventMilestone>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.DailyEventMilestone> DailyEventMilestoneMap {
      get { return dailyEventMilestoneMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DailyEventMilestoneMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DailyEventMilestoneMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!DailyEventMilestoneMap.Equals(other.DailyEventMilestoneMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= DailyEventMilestoneMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      dailyEventMilestoneMap_.WriteTo(output, _map_dailyEventMilestoneMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      dailyEventMilestoneMap_.WriteTo(ref output, _map_dailyEventMilestoneMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += dailyEventMilestoneMap_.CalculateSize(_map_dailyEventMilestoneMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DailyEventMilestoneMapABValue other) {
      if (other == null) {
        return;
      }
      dailyEventMilestoneMap_.Add(other.dailyEventMilestoneMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            dailyEventMilestoneMap_.AddEntriesFrom(input, _map_dailyEventMilestoneMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            dailyEventMilestoneMap_.AddEntriesFrom(ref input, _map_dailyEventMilestoneMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DailyEventMilestoneConf : pb::IMessage<DailyEventMilestoneConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DailyEventMilestoneConf> _parser = new pb::MessageParser<DailyEventMilestoneConf>(() => new DailyEventMilestoneConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DailyEventMilestoneConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.DailyEventMilestoneConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DailyEventMilestoneConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DailyEventMilestoneConf(DailyEventMilestoneConf other) : this() {
      dailyEventMilestoneMap_ = other.dailyEventMilestoneMap_.Clone();
      dailyEventMilestoneMapAB_ = other.dailyEventMilestoneMapAB_.Clone();
      dailyEventMilestoneMapABPatch_ = other.dailyEventMilestoneMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DailyEventMilestoneConf Clone() {
      return new DailyEventMilestoneConf(this);
    }

    /// <summary>Field number for the "DailyEventMilestoneMap" field.</summary>
    public const int DailyEventMilestoneMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.DailyEventMilestone>.Codec _map_dailyEventMilestoneMap_codec
        = new pbc::MapField<int, global::fat.rawdata.DailyEventMilestone>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.DailyEventMilestone.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.DailyEventMilestone> dailyEventMilestoneMap_ = new pbc::MapField<int, global::fat.rawdata.DailyEventMilestone>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.DailyEventMilestone> DailyEventMilestoneMap {
      get { return dailyEventMilestoneMap_; }
    }

    /// <summary>Field number for the "DailyEventMilestoneMapAB" field.</summary>
    public const int DailyEventMilestoneMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.DailyEventMilestoneMapABValue>.Codec _map_dailyEventMilestoneMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.DailyEventMilestoneMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.DailyEventMilestoneMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.DailyEventMilestoneMapABValue> dailyEventMilestoneMapAB_ = new pbc::MapField<string, global::fat.rawdata.DailyEventMilestoneMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.DailyEventMilestoneMapABValue> DailyEventMilestoneMapAB {
      get { return dailyEventMilestoneMapAB_; }
    }

    /// <summary>Field number for the "DailyEventMilestoneMapABPatch" field.</summary>
    public const int DailyEventMilestoneMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.DailyEventMilestoneMapABValue>.Codec _map_dailyEventMilestoneMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.DailyEventMilestoneMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.DailyEventMilestoneMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.DailyEventMilestoneMapABValue> dailyEventMilestoneMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.DailyEventMilestoneMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.DailyEventMilestoneMapABValue> DailyEventMilestoneMapABPatch {
      get { return dailyEventMilestoneMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DailyEventMilestoneConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DailyEventMilestoneConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!DailyEventMilestoneMap.Equals(other.DailyEventMilestoneMap)) return false;
      if (!DailyEventMilestoneMapAB.Equals(other.DailyEventMilestoneMapAB)) return false;
      if (!DailyEventMilestoneMapABPatch.Equals(other.DailyEventMilestoneMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= DailyEventMilestoneMap.GetHashCode();
      hash ^= DailyEventMilestoneMapAB.GetHashCode();
      hash ^= DailyEventMilestoneMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      dailyEventMilestoneMap_.WriteTo(output, _map_dailyEventMilestoneMap_codec);
      dailyEventMilestoneMapAB_.WriteTo(output, _map_dailyEventMilestoneMapAB_codec);
      dailyEventMilestoneMapABPatch_.WriteTo(output, _map_dailyEventMilestoneMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      dailyEventMilestoneMap_.WriteTo(ref output, _map_dailyEventMilestoneMap_codec);
      dailyEventMilestoneMapAB_.WriteTo(ref output, _map_dailyEventMilestoneMapAB_codec);
      dailyEventMilestoneMapABPatch_.WriteTo(ref output, _map_dailyEventMilestoneMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += dailyEventMilestoneMap_.CalculateSize(_map_dailyEventMilestoneMap_codec);
      size += dailyEventMilestoneMapAB_.CalculateSize(_map_dailyEventMilestoneMapAB_codec);
      size += dailyEventMilestoneMapABPatch_.CalculateSize(_map_dailyEventMilestoneMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DailyEventMilestoneConf other) {
      if (other == null) {
        return;
      }
      dailyEventMilestoneMap_.Add(other.dailyEventMilestoneMap_);
      dailyEventMilestoneMapAB_.Add(other.dailyEventMilestoneMapAB_);
      dailyEventMilestoneMapABPatch_.Add(other.dailyEventMilestoneMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            dailyEventMilestoneMap_.AddEntriesFrom(input, _map_dailyEventMilestoneMap_codec);
            break;
          }
          case 18: {
            dailyEventMilestoneMapAB_.AddEntriesFrom(input, _map_dailyEventMilestoneMapAB_codec);
            break;
          }
          case 26: {
            dailyEventMilestoneMapABPatch_.AddEntriesFrom(input, _map_dailyEventMilestoneMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            dailyEventMilestoneMap_.AddEntriesFrom(ref input, _map_dailyEventMilestoneMap_codec);
            break;
          }
          case 18: {
            dailyEventMilestoneMapAB_.AddEntriesFrom(ref input, _map_dailyEventMilestoneMapAB_codec);
            break;
          }
          case 26: {
            dailyEventMilestoneMapABPatch_.AddEntriesFrom(ref input, _map_dailyEventMilestoneMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
