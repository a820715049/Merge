// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventWishBoardGroupConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventWishBoardGroupConf.proto</summary>
  public static partial class EventWishBoardGroupConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventWishBoardGroupConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventWishBoardGroupConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiVyYXdkYXRhL0V2ZW50V2lzaEJvYXJkR3JvdXBDb25mLnByb3RvEgdyYXdk",
            "YXRhIsMBChNFdmVudFdpc2hCb2FyZEdyb3VwEgoKAmlkGAEgASgFEhMKC2Jh",
            "clJld2FyZElkGAIgAygFEg8KB2JvYXJkSWQYAyABKAUSEAoIY3ljbGVib3gY",
            "CyABKAUSDAoEZGlmZhgEIAEoBRIOCgZkcm9wSWQYBSADKAUSDQoFa2V5SWQY",
            "ByADKAUSEwoLbWlsZXN0b25lSWQYCCADKAUSEwoLb3JkZXJJdGVtSWQYCSAD",
            "KAUSEQoJc3RhcnRpdGVtGAogASgJIuABCh1FdmVudFdpc2hCb2FyZEdyb3Vw",
            "TWFwQUJWYWx1ZRJiChZFdmVudFdpc2hCb2FyZEdyb3VwTWFwGAEgAygLMkIu",
            "cmF3ZGF0YS5FdmVudFdpc2hCb2FyZEdyb3VwTWFwQUJWYWx1ZS5FdmVudFdp",
            "c2hCb2FyZEdyb3VwTWFwRW50cnkaWwobRXZlbnRXaXNoQm9hcmRHcm91cE1h",
            "cEVudHJ5EgsKA2tleRgBIAEoBRIrCgV2YWx1ZRgCIAEoCzIcLnJhd2RhdGEu",
            "RXZlbnRXaXNoQm9hcmRHcm91cDoCOAEi+QQKF0V2ZW50V2lzaEJvYXJkR3Jv",
            "dXBDb25mElwKFkV2ZW50V2lzaEJvYXJkR3JvdXBNYXAYASADKAsyPC5yYXdk",
            "YXRhLkV2ZW50V2lzaEJvYXJkR3JvdXBDb25mLkV2ZW50V2lzaEJvYXJkR3Jv",
            "dXBNYXBFbnRyeRJgChhFdmVudFdpc2hCb2FyZEdyb3VwTWFwQUIYAiADKAsy",
            "Pi5yYXdkYXRhLkV2ZW50V2lzaEJvYXJkR3JvdXBDb25mLkV2ZW50V2lzaEJv",
            "YXJkR3JvdXBNYXBBQkVudHJ5EmoKHUV2ZW50V2lzaEJvYXJkR3JvdXBNYXBB",
            "QlBhdGNoGAMgAygLMkMucmF3ZGF0YS5FdmVudFdpc2hCb2FyZEdyb3VwQ29u",
            "Zi5FdmVudFdpc2hCb2FyZEdyb3VwTWFwQUJQYXRjaEVudHJ5GlsKG0V2ZW50",
            "V2lzaEJvYXJkR3JvdXBNYXBFbnRyeRILCgNrZXkYASABKAUSKwoFdmFsdWUY",
            "AiABKAsyHC5yYXdkYXRhLkV2ZW50V2lzaEJvYXJkR3JvdXA6AjgBGmcKHUV2",
            "ZW50V2lzaEJvYXJkR3JvdXBNYXBBQkVudHJ5EgsKA2tleRgBIAEoCRI1CgV2",
            "YWx1ZRgCIAEoCzImLnJhd2RhdGEuRXZlbnRXaXNoQm9hcmRHcm91cE1hcEFC",
            "VmFsdWU6AjgBGmwKIkV2ZW50V2lzaEJvYXJkR3JvdXBNYXBBQlBhdGNoRW50",
            "cnkSCwoDa2V5GAEgASgJEjUKBXZhbHVlGAIgASgLMiYucmF3ZGF0YS5FdmVu",
            "dFdpc2hCb2FyZEdyb3VwTWFwQUJWYWx1ZToCOAFCPVotZ2l0bGFiLmZ1bnBs",
            "dXMuaW8vZmF0L2NvbmYvZ2VuL2dvbGFuZy9yYXdkYXRhqgILZmF0LnJhd2Rh",
            "dGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventWishBoardGroup), global::fat.rawdata.EventWishBoardGroup.Parser, new[]{ "Id", "BarRewardId", "BoardId", "Cyclebox", "Diff", "DropId", "KeyId", "MilestoneId", "OrderItemId", "Startitem" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventWishBoardGroupMapABValue), global::fat.rawdata.EventWishBoardGroupMapABValue.Parser, new[]{ "EventWishBoardGroupMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventWishBoardGroupConf), global::fat.rawdata.EventWishBoardGroupConf.Parser, new[]{ "EventWishBoardGroupMap", "EventWishBoardGroupMapAB", "EventWishBoardGroupMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventWishBoardGroup",table="EventWishBoardGroupMap",table_wrapper="EventWishBoardGroupConf",map="true",map_key_type="int32",data="EventWishBoardGroupConf")
  /// annotation@ab(table_ab="EventWishBoardGroupMapAB",table_ab_patch="EventWishBoardGroupMapABPatch",table_ab_value="EventWishBoardGroupMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventWishBoardGroup(id="id")
  /// </summary>
  public sealed partial class EventWishBoardGroup : pb::IMessage<EventWishBoardGroup>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventWishBoardGroup> _parser = new pb::MessageParser<EventWishBoardGroup>(() => new EventWishBoardGroup());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventWishBoardGroup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventWishBoardGroupConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishBoardGroup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishBoardGroup(EventWishBoardGroup other) : this() {
      id_ = other.id_;
      barRewardId_ = other.barRewardId_.Clone();
      boardId_ = other.boardId_;
      cyclebox_ = other.cyclebox_;
      diff_ = other.diff_;
      dropId_ = other.dropId_.Clone();
      keyId_ = other.keyId_.Clone();
      milestoneId_ = other.milestoneId_.Clone();
      orderItemId_ = other.orderItemId_.Clone();
      startitem_ = other.startitem_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishBoardGroup Clone() {
      return new EventWishBoardGroup(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 分层前 id
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "barRewardId" field.</summary>
    public const int BarRewardIdFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_barRewardId_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> barRewardId_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 阶段进度值id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> BarRewardId {
      get { return barRewardId_; }
    }

    /// <summary>Field number for the "boardId" field.</summary>
    public const int BoardIdFieldNumber = 3;
    private int boardId_;
    /// <summary>
    /// boardId
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BoardId {
      get { return boardId_; }
      set {
        boardId_ = value;
      }
    }

    /// <summary>Field number for the "cyclebox" field.</summary>
    public const int CycleboxFieldNumber = 11;
    private int cyclebox_;
    /// <summary>
    /// 循环宝箱 id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Cyclebox {
      get { return cyclebox_; }
      set {
        cyclebox_ = value;
      }
    }

    /// <summary>Field number for the "diff" field.</summary>
    public const int DiffFieldNumber = 4;
    private int diff_;
    /// <summary>
    /// 难度
    /// （仅TGA使用）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Diff {
      get { return diff_; }
      set {
        diff_ = value;
      }
    }

    /// <summary>Field number for the "dropId" field.</summary>
    public const int DropIdFieldNumber = 5;
    private static readonly pb::FieldCodec<int> _repeated_dropId_codec
        = pb::FieldCodec.ForInt32(42);
    private readonly pbc::RepeatedField<int> dropId_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 活动棋子-点击掉落 （需注意超出）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> DropId {
      get { return dropId_; }
    }

    /// <summary>Field number for the "keyId" field.</summary>
    public const int KeyIdFieldNumber = 7;
    private static readonly pb::FieldCodec<int> _repeated_keyId_codec
        = pb::FieldCodec.ForInt32(58);
    private readonly pbc::RepeatedField<int> keyId_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 随机文本
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> KeyId {
      get { return keyId_; }
    }

    /// <summary>Field number for the "milestoneId" field.</summary>
    public const int MilestoneIdFieldNumber = 8;
    private static readonly pb::FieldCodec<int> _repeated_milestoneId_codec
        = pb::FieldCodec.ForInt32(66);
    private readonly pbc::RepeatedField<int> milestoneId_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 里程碑
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> MilestoneId {
      get { return milestoneId_; }
    }

    /// <summary>Field number for the "orderItemId" field.</summary>
    public const int OrderItemIdFieldNumber = 9;
    private static readonly pb::FieldCodec<int> _repeated_orderItemId_codec
        = pb::FieldCodec.ForInt32(74);
    private readonly pbc::RepeatedField<int> orderItemId_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 活动棋子-订单
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> OrderItemId {
      get { return orderItemId_; }
    }

    /// <summary>Field number for the "startitem" field.</summary>
    public const int StartitemFieldNumber = 10;
    private string startitem_ = "";
    /// <summary>
    /// 初始棋子+num
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Startitem {
      get { return startitem_; }
      set {
        startitem_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventWishBoardGroup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventWishBoardGroup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!barRewardId_.Equals(other.barRewardId_)) return false;
      if (BoardId != other.BoardId) return false;
      if (Cyclebox != other.Cyclebox) return false;
      if (Diff != other.Diff) return false;
      if(!dropId_.Equals(other.dropId_)) return false;
      if(!keyId_.Equals(other.keyId_)) return false;
      if(!milestoneId_.Equals(other.milestoneId_)) return false;
      if(!orderItemId_.Equals(other.orderItemId_)) return false;
      if (Startitem != other.Startitem) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      hash ^= barRewardId_.GetHashCode();
      if (BoardId != 0) hash ^= BoardId.GetHashCode();
      if (Cyclebox != 0) hash ^= Cyclebox.GetHashCode();
      if (Diff != 0) hash ^= Diff.GetHashCode();
      hash ^= dropId_.GetHashCode();
      hash ^= keyId_.GetHashCode();
      hash ^= milestoneId_.GetHashCode();
      hash ^= orderItemId_.GetHashCode();
      if (Startitem.Length != 0) hash ^= Startitem.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      barRewardId_.WriteTo(output, _repeated_barRewardId_codec);
      if (BoardId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(BoardId);
      }
      if (Diff != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Diff);
      }
      dropId_.WriteTo(output, _repeated_dropId_codec);
      keyId_.WriteTo(output, _repeated_keyId_codec);
      milestoneId_.WriteTo(output, _repeated_milestoneId_codec);
      orderItemId_.WriteTo(output, _repeated_orderItemId_codec);
      if (Startitem.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Startitem);
      }
      if (Cyclebox != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(Cyclebox);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      barRewardId_.WriteTo(ref output, _repeated_barRewardId_codec);
      if (BoardId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(BoardId);
      }
      if (Diff != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Diff);
      }
      dropId_.WriteTo(ref output, _repeated_dropId_codec);
      keyId_.WriteTo(ref output, _repeated_keyId_codec);
      milestoneId_.WriteTo(ref output, _repeated_milestoneId_codec);
      orderItemId_.WriteTo(ref output, _repeated_orderItemId_codec);
      if (Startitem.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Startitem);
      }
      if (Cyclebox != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(Cyclebox);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      size += barRewardId_.CalculateSize(_repeated_barRewardId_codec);
      if (BoardId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BoardId);
      }
      if (Cyclebox != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Cyclebox);
      }
      if (Diff != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Diff);
      }
      size += dropId_.CalculateSize(_repeated_dropId_codec);
      size += keyId_.CalculateSize(_repeated_keyId_codec);
      size += milestoneId_.CalculateSize(_repeated_milestoneId_codec);
      size += orderItemId_.CalculateSize(_repeated_orderItemId_codec);
      if (Startitem.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Startitem);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventWishBoardGroup other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      barRewardId_.Add(other.barRewardId_);
      if (other.BoardId != 0) {
        BoardId = other.BoardId;
      }
      if (other.Cyclebox != 0) {
        Cyclebox = other.Cyclebox;
      }
      if (other.Diff != 0) {
        Diff = other.Diff;
      }
      dropId_.Add(other.dropId_);
      keyId_.Add(other.keyId_);
      milestoneId_.Add(other.milestoneId_);
      orderItemId_.Add(other.orderItemId_);
      if (other.Startitem.Length != 0) {
        Startitem = other.Startitem;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            barRewardId_.AddEntriesFrom(input, _repeated_barRewardId_codec);
            break;
          }
          case 24: {
            BoardId = input.ReadInt32();
            break;
          }
          case 32: {
            Diff = input.ReadInt32();
            break;
          }
          case 42:
          case 40: {
            dropId_.AddEntriesFrom(input, _repeated_dropId_codec);
            break;
          }
          case 58:
          case 56: {
            keyId_.AddEntriesFrom(input, _repeated_keyId_codec);
            break;
          }
          case 66:
          case 64: {
            milestoneId_.AddEntriesFrom(input, _repeated_milestoneId_codec);
            break;
          }
          case 74:
          case 72: {
            orderItemId_.AddEntriesFrom(input, _repeated_orderItemId_codec);
            break;
          }
          case 82: {
            Startitem = input.ReadString();
            break;
          }
          case 88: {
            Cyclebox = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            barRewardId_.AddEntriesFrom(ref input, _repeated_barRewardId_codec);
            break;
          }
          case 24: {
            BoardId = input.ReadInt32();
            break;
          }
          case 32: {
            Diff = input.ReadInt32();
            break;
          }
          case 42:
          case 40: {
            dropId_.AddEntriesFrom(ref input, _repeated_dropId_codec);
            break;
          }
          case 58:
          case 56: {
            keyId_.AddEntriesFrom(ref input, _repeated_keyId_codec);
            break;
          }
          case 66:
          case 64: {
            milestoneId_.AddEntriesFrom(ref input, _repeated_milestoneId_codec);
            break;
          }
          case 74:
          case 72: {
            orderItemId_.AddEntriesFrom(ref input, _repeated_orderItemId_codec);
            break;
          }
          case 82: {
            Startitem = input.ReadString();
            break;
          }
          case 88: {
            Cyclebox = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventWishBoardGroupMapABValue : pb::IMessage<EventWishBoardGroupMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventWishBoardGroupMapABValue> _parser = new pb::MessageParser<EventWishBoardGroupMapABValue>(() => new EventWishBoardGroupMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventWishBoardGroupMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventWishBoardGroupConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishBoardGroupMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishBoardGroupMapABValue(EventWishBoardGroupMapABValue other) : this() {
      eventWishBoardGroupMap_ = other.eventWishBoardGroupMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishBoardGroupMapABValue Clone() {
      return new EventWishBoardGroupMapABValue(this);
    }

    /// <summary>Field number for the "EventWishBoardGroupMap" field.</summary>
    public const int EventWishBoardGroupMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventWishBoardGroup>.Codec _map_eventWishBoardGroupMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventWishBoardGroup>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventWishBoardGroup.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventWishBoardGroup> eventWishBoardGroupMap_ = new pbc::MapField<int, global::fat.rawdata.EventWishBoardGroup>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventWishBoardGroup> EventWishBoardGroupMap {
      get { return eventWishBoardGroupMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventWishBoardGroupMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventWishBoardGroupMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventWishBoardGroupMap.Equals(other.EventWishBoardGroupMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventWishBoardGroupMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventWishBoardGroupMap_.WriteTo(output, _map_eventWishBoardGroupMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventWishBoardGroupMap_.WriteTo(ref output, _map_eventWishBoardGroupMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventWishBoardGroupMap_.CalculateSize(_map_eventWishBoardGroupMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventWishBoardGroupMapABValue other) {
      if (other == null) {
        return;
      }
      eventWishBoardGroupMap_.Add(other.eventWishBoardGroupMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventWishBoardGroupMap_.AddEntriesFrom(input, _map_eventWishBoardGroupMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventWishBoardGroupMap_.AddEntriesFrom(ref input, _map_eventWishBoardGroupMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventWishBoardGroupConf : pb::IMessage<EventWishBoardGroupConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventWishBoardGroupConf> _parser = new pb::MessageParser<EventWishBoardGroupConf>(() => new EventWishBoardGroupConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventWishBoardGroupConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventWishBoardGroupConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishBoardGroupConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishBoardGroupConf(EventWishBoardGroupConf other) : this() {
      eventWishBoardGroupMap_ = other.eventWishBoardGroupMap_.Clone();
      eventWishBoardGroupMapAB_ = other.eventWishBoardGroupMapAB_.Clone();
      eventWishBoardGroupMapABPatch_ = other.eventWishBoardGroupMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishBoardGroupConf Clone() {
      return new EventWishBoardGroupConf(this);
    }

    /// <summary>Field number for the "EventWishBoardGroupMap" field.</summary>
    public const int EventWishBoardGroupMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventWishBoardGroup>.Codec _map_eventWishBoardGroupMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventWishBoardGroup>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventWishBoardGroup.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventWishBoardGroup> eventWishBoardGroupMap_ = new pbc::MapField<int, global::fat.rawdata.EventWishBoardGroup>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventWishBoardGroup> EventWishBoardGroupMap {
      get { return eventWishBoardGroupMap_; }
    }

    /// <summary>Field number for the "EventWishBoardGroupMapAB" field.</summary>
    public const int EventWishBoardGroupMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventWishBoardGroupMapABValue>.Codec _map_eventWishBoardGroupMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventWishBoardGroupMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventWishBoardGroupMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventWishBoardGroupMapABValue> eventWishBoardGroupMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventWishBoardGroupMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventWishBoardGroupMapABValue> EventWishBoardGroupMapAB {
      get { return eventWishBoardGroupMapAB_; }
    }

    /// <summary>Field number for the "EventWishBoardGroupMapABPatch" field.</summary>
    public const int EventWishBoardGroupMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventWishBoardGroupMapABValue>.Codec _map_eventWishBoardGroupMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventWishBoardGroupMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventWishBoardGroupMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventWishBoardGroupMapABValue> eventWishBoardGroupMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventWishBoardGroupMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventWishBoardGroupMapABValue> EventWishBoardGroupMapABPatch {
      get { return eventWishBoardGroupMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventWishBoardGroupConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventWishBoardGroupConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventWishBoardGroupMap.Equals(other.EventWishBoardGroupMap)) return false;
      if (!EventWishBoardGroupMapAB.Equals(other.EventWishBoardGroupMapAB)) return false;
      if (!EventWishBoardGroupMapABPatch.Equals(other.EventWishBoardGroupMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventWishBoardGroupMap.GetHashCode();
      hash ^= EventWishBoardGroupMapAB.GetHashCode();
      hash ^= EventWishBoardGroupMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventWishBoardGroupMap_.WriteTo(output, _map_eventWishBoardGroupMap_codec);
      eventWishBoardGroupMapAB_.WriteTo(output, _map_eventWishBoardGroupMapAB_codec);
      eventWishBoardGroupMapABPatch_.WriteTo(output, _map_eventWishBoardGroupMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventWishBoardGroupMap_.WriteTo(ref output, _map_eventWishBoardGroupMap_codec);
      eventWishBoardGroupMapAB_.WriteTo(ref output, _map_eventWishBoardGroupMapAB_codec);
      eventWishBoardGroupMapABPatch_.WriteTo(ref output, _map_eventWishBoardGroupMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventWishBoardGroupMap_.CalculateSize(_map_eventWishBoardGroupMap_codec);
      size += eventWishBoardGroupMapAB_.CalculateSize(_map_eventWishBoardGroupMapAB_codec);
      size += eventWishBoardGroupMapABPatch_.CalculateSize(_map_eventWishBoardGroupMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventWishBoardGroupConf other) {
      if (other == null) {
        return;
      }
      eventWishBoardGroupMap_.Add(other.eventWishBoardGroupMap_);
      eventWishBoardGroupMapAB_.Add(other.eventWishBoardGroupMapAB_);
      eventWishBoardGroupMapABPatch_.Add(other.eventWishBoardGroupMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventWishBoardGroupMap_.AddEntriesFrom(input, _map_eventWishBoardGroupMap_codec);
            break;
          }
          case 18: {
            eventWishBoardGroupMapAB_.AddEntriesFrom(input, _map_eventWishBoardGroupMapAB_codec);
            break;
          }
          case 26: {
            eventWishBoardGroupMapABPatch_.AddEntriesFrom(input, _map_eventWishBoardGroupMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventWishBoardGroupMap_.AddEntriesFrom(ref input, _map_eventWishBoardGroupMap_codec);
            break;
          }
          case 18: {
            eventWishBoardGroupMapAB_.AddEntriesFrom(ref input, _map_eventWishBoardGroupMapAB_codec);
            break;
          }
          case 26: {
            eventWishBoardGroupMapABPatch_.AddEntriesFrom(ref input, _map_eventWishBoardGroupMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
