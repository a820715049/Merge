// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/UserTagConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/UserTagConf.proto</summary>
  public static partial class UserTagConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/UserTagConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static UserTagConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChlyYXdkYXRhL1VzZXJUYWdDb25mLnByb3RvEgdyYXdkYXRhGhhyYXdkYXRh",
            "L1VzZXJNZXRyaWMucHJvdG8imwEKB1VzZXJUYWcSCgoCaWQYASABKAUSFAoM",
            "ZGVmYXVsdFZhbHVlGAUgASgFEhIKCmRpdmlkZUluZm8YAiADKAUSJwoKdXNl",
            "ck1ldHJpYxgDIAEoDjITLnJhd2RhdGEuVXNlck1ldHJpYxIXCg91c2VyTWV0",
            "cmljUGFyYW0YBCABKAUSGAoQdXNlck1ldHJpY1BhcmFtcxgGIAMoBSKYAQoR",
            "VXNlclRhZ01hcEFCVmFsdWUSPgoKVXNlclRhZ01hcBgBIAMoCzIqLnJhd2Rh",
            "dGEuVXNlclRhZ01hcEFCVmFsdWUuVXNlclRhZ01hcEVudHJ5GkMKD1VzZXJU",
            "YWdNYXBFbnRyeRILCgNrZXkYASABKAUSHwoFdmFsdWUYAiABKAsyEC5yYXdk",
            "YXRhLlVzZXJUYWc6AjgBIrkDCgtVc2VyVGFnQ29uZhI4CgpVc2VyVGFnTWFw",
            "GAEgAygLMiQucmF3ZGF0YS5Vc2VyVGFnQ29uZi5Vc2VyVGFnTWFwRW50cnkS",
            "PAoMVXNlclRhZ01hcEFCGAIgAygLMiYucmF3ZGF0YS5Vc2VyVGFnQ29uZi5V",
            "c2VyVGFnTWFwQUJFbnRyeRJGChFVc2VyVGFnTWFwQUJQYXRjaBgDIAMoCzIr",
            "LnJhd2RhdGEuVXNlclRhZ0NvbmYuVXNlclRhZ01hcEFCUGF0Y2hFbnRyeRpD",
            "Cg9Vc2VyVGFnTWFwRW50cnkSCwoDa2V5GAEgASgFEh8KBXZhbHVlGAIgASgL",
            "MhAucmF3ZGF0YS5Vc2VyVGFnOgI4ARpPChFVc2VyVGFnTWFwQUJFbnRyeRIL",
            "CgNrZXkYASABKAkSKQoFdmFsdWUYAiABKAsyGi5yYXdkYXRhLlVzZXJUYWdN",
            "YXBBQlZhbHVlOgI4ARpUChZVc2VyVGFnTWFwQUJQYXRjaEVudHJ5EgsKA2tl",
            "eRgBIAEoCRIpCgV2YWx1ZRgCIAEoCzIaLnJhd2RhdGEuVXNlclRhZ01hcEFC",
            "VmFsdWU6AjgBQj1aLWdpdGxhYi5mdW5wbHVzLmlvL2ZhdC9jb25mL2dlbi9n",
            "b2xhbmcvcmF3ZGF0YaoCC2ZhdC5yYXdkYXRhYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::fat.rawdata.UserMetricReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.UserTag), global::fat.rawdata.UserTag.Parser, new[]{ "Id", "DefaultValue", "DivideInfo", "UserMetric", "UserMetricParam", "UserMetricParams" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.UserTagMapABValue), global::fat.rawdata.UserTagMapABValue.Parser, new[]{ "UserTagMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.UserTagConf), global::fat.rawdata.UserTagConf.Parser, new[]{ "UserTagMap", "UserTagMapAB", "UserTagMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="UserTag",table="UserTagMap",table_wrapper="UserTagConf",map="true",map_key_type="int32",data="UserTagConf")
  /// annotation@ab(table_ab="UserTagMapAB",table_ab_patch="UserTagMapABPatch",table_ab_value="UserTagMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@UserTag(id="id")
  /// </summary>
  public sealed partial class UserTag : pb::IMessage<UserTag>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserTag> _parser = new pb::MessageParser<UserTag>(() => new UserTag());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserTag> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.UserTagConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserTag() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserTag(UserTag other) : this() {
      id_ = other.id_;
      defaultValue_ = other.defaultValue_;
      divideInfo_ = other.divideInfo_.Clone();
      userMetric_ = other.userMetric_;
      userMetricParam_ = other.userMetricParam_;
      userMetricParams_ = other.userMetricParams_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserTag Clone() {
      return new UserTag(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 用户标签ID
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "defaultValue" field.</summary>
    public const int DefaultValueFieldNumber = 5;
    private int defaultValue_;
    /// <summary>
    /// 指标默认值
    /// 指的是userMetric的默认值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DefaultValue {
      get { return defaultValue_; }
      set {
        defaultValue_ = value;
      }
    }

    /// <summary>Field number for the "divideInfo" field.</summary>
    public const int DivideInfoFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_divideInfo_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> divideInfo_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 标签值拆分信息
    /// （有序）
    /// （三个一组，左闭右开）
    /// start1,end1,value1,start2,end2,value2...
    /// 当end为0时，代表无穷大
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> DivideInfo {
      get { return divideInfo_; }
    }

    /// <summary>Field number for the "userMetric" field.</summary>
    public const int UserMetricFieldNumber = 3;
    private global::fat.rawdata.UserMetric userMetric_ = global::fat.rawdata.UserMetric.LatestLogin;
    /// <summary>
    /// 使用的用户指标
    /// （用户指标可以复用）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::fat.rawdata.UserMetric UserMetric {
      get { return userMetric_; }
      set {
        userMetric_ = value;
      }
    }

    /// <summary>Field number for the "userMetricParam" field.</summary>
    public const int UserMetricParamFieldNumber = 4;
    private int userMetricParam_;
    /// <summary>
    /// 用户指标参数
    /// （参数N）
    /// （被userMetricParams替代）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UserMetricParam {
      get { return userMetricParam_; }
      set {
        userMetricParam_ = value;
      }
    }

    /// <summary>Field number for the "userMetricParams" field.</summary>
    public const int UserMetricParamsFieldNumber = 6;
    private static readonly pb::FieldCodec<int> _repeated_userMetricParams_codec
        = pb::FieldCodec.ForInt32(50);
    private readonly pbc::RepeatedField<int> userMetricParams_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 用户指标参数
    /// （多参数）
    /// （M,N）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> UserMetricParams {
      get { return userMetricParams_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserTag);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserTag other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (DefaultValue != other.DefaultValue) return false;
      if(!divideInfo_.Equals(other.divideInfo_)) return false;
      if (UserMetric != other.UserMetric) return false;
      if (UserMetricParam != other.UserMetricParam) return false;
      if(!userMetricParams_.Equals(other.userMetricParams_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (DefaultValue != 0) hash ^= DefaultValue.GetHashCode();
      hash ^= divideInfo_.GetHashCode();
      if (UserMetric != global::fat.rawdata.UserMetric.LatestLogin) hash ^= UserMetric.GetHashCode();
      if (UserMetricParam != 0) hash ^= UserMetricParam.GetHashCode();
      hash ^= userMetricParams_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      divideInfo_.WriteTo(output, _repeated_divideInfo_codec);
      if (UserMetric != global::fat.rawdata.UserMetric.LatestLogin) {
        output.WriteRawTag(24);
        output.WriteEnum((int) UserMetric);
      }
      if (UserMetricParam != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(UserMetricParam);
      }
      if (DefaultValue != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(DefaultValue);
      }
      userMetricParams_.WriteTo(output, _repeated_userMetricParams_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      divideInfo_.WriteTo(ref output, _repeated_divideInfo_codec);
      if (UserMetric != global::fat.rawdata.UserMetric.LatestLogin) {
        output.WriteRawTag(24);
        output.WriteEnum((int) UserMetric);
      }
      if (UserMetricParam != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(UserMetricParam);
      }
      if (DefaultValue != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(DefaultValue);
      }
      userMetricParams_.WriteTo(ref output, _repeated_userMetricParams_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (DefaultValue != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DefaultValue);
      }
      size += divideInfo_.CalculateSize(_repeated_divideInfo_codec);
      if (UserMetric != global::fat.rawdata.UserMetric.LatestLogin) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) UserMetric);
      }
      if (UserMetricParam != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserMetricParam);
      }
      size += userMetricParams_.CalculateSize(_repeated_userMetricParams_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserTag other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.DefaultValue != 0) {
        DefaultValue = other.DefaultValue;
      }
      divideInfo_.Add(other.divideInfo_);
      if (other.UserMetric != global::fat.rawdata.UserMetric.LatestLogin) {
        UserMetric = other.UserMetric;
      }
      if (other.UserMetricParam != 0) {
        UserMetricParam = other.UserMetricParam;
      }
      userMetricParams_.Add(other.userMetricParams_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            divideInfo_.AddEntriesFrom(input, _repeated_divideInfo_codec);
            break;
          }
          case 24: {
            UserMetric = (global::fat.rawdata.UserMetric) input.ReadEnum();
            break;
          }
          case 32: {
            UserMetricParam = input.ReadInt32();
            break;
          }
          case 40: {
            DefaultValue = input.ReadInt32();
            break;
          }
          case 50:
          case 48: {
            userMetricParams_.AddEntriesFrom(input, _repeated_userMetricParams_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            divideInfo_.AddEntriesFrom(ref input, _repeated_divideInfo_codec);
            break;
          }
          case 24: {
            UserMetric = (global::fat.rawdata.UserMetric) input.ReadEnum();
            break;
          }
          case 32: {
            UserMetricParam = input.ReadInt32();
            break;
          }
          case 40: {
            DefaultValue = input.ReadInt32();
            break;
          }
          case 50:
          case 48: {
            userMetricParams_.AddEntriesFrom(ref input, _repeated_userMetricParams_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UserTagMapABValue : pb::IMessage<UserTagMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserTagMapABValue> _parser = new pb::MessageParser<UserTagMapABValue>(() => new UserTagMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserTagMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.UserTagConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserTagMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserTagMapABValue(UserTagMapABValue other) : this() {
      userTagMap_ = other.userTagMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserTagMapABValue Clone() {
      return new UserTagMapABValue(this);
    }

    /// <summary>Field number for the "UserTagMap" field.</summary>
    public const int UserTagMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.UserTag>.Codec _map_userTagMap_codec
        = new pbc::MapField<int, global::fat.rawdata.UserTag>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.UserTag.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.UserTag> userTagMap_ = new pbc::MapField<int, global::fat.rawdata.UserTag>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.UserTag> UserTagMap {
      get { return userTagMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserTagMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserTagMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!UserTagMap.Equals(other.UserTagMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= UserTagMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      userTagMap_.WriteTo(output, _map_userTagMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      userTagMap_.WriteTo(ref output, _map_userTagMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += userTagMap_.CalculateSize(_map_userTagMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserTagMapABValue other) {
      if (other == null) {
        return;
      }
      userTagMap_.Add(other.userTagMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            userTagMap_.AddEntriesFrom(input, _map_userTagMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            userTagMap_.AddEntriesFrom(ref input, _map_userTagMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UserTagConf : pb::IMessage<UserTagConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserTagConf> _parser = new pb::MessageParser<UserTagConf>(() => new UserTagConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserTagConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.UserTagConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserTagConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserTagConf(UserTagConf other) : this() {
      userTagMap_ = other.userTagMap_.Clone();
      userTagMapAB_ = other.userTagMapAB_.Clone();
      userTagMapABPatch_ = other.userTagMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserTagConf Clone() {
      return new UserTagConf(this);
    }

    /// <summary>Field number for the "UserTagMap" field.</summary>
    public const int UserTagMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.UserTag>.Codec _map_userTagMap_codec
        = new pbc::MapField<int, global::fat.rawdata.UserTag>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.UserTag.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.UserTag> userTagMap_ = new pbc::MapField<int, global::fat.rawdata.UserTag>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.UserTag> UserTagMap {
      get { return userTagMap_; }
    }

    /// <summary>Field number for the "UserTagMapAB" field.</summary>
    public const int UserTagMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.UserTagMapABValue>.Codec _map_userTagMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.UserTagMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.UserTagMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.UserTagMapABValue> userTagMapAB_ = new pbc::MapField<string, global::fat.rawdata.UserTagMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.UserTagMapABValue> UserTagMapAB {
      get { return userTagMapAB_; }
    }

    /// <summary>Field number for the "UserTagMapABPatch" field.</summary>
    public const int UserTagMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.UserTagMapABValue>.Codec _map_userTagMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.UserTagMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.UserTagMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.UserTagMapABValue> userTagMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.UserTagMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.UserTagMapABValue> UserTagMapABPatch {
      get { return userTagMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserTagConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserTagConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!UserTagMap.Equals(other.UserTagMap)) return false;
      if (!UserTagMapAB.Equals(other.UserTagMapAB)) return false;
      if (!UserTagMapABPatch.Equals(other.UserTagMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= UserTagMap.GetHashCode();
      hash ^= UserTagMapAB.GetHashCode();
      hash ^= UserTagMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      userTagMap_.WriteTo(output, _map_userTagMap_codec);
      userTagMapAB_.WriteTo(output, _map_userTagMapAB_codec);
      userTagMapABPatch_.WriteTo(output, _map_userTagMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      userTagMap_.WriteTo(ref output, _map_userTagMap_codec);
      userTagMapAB_.WriteTo(ref output, _map_userTagMapAB_codec);
      userTagMapABPatch_.WriteTo(ref output, _map_userTagMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += userTagMap_.CalculateSize(_map_userTagMap_codec);
      size += userTagMapAB_.CalculateSize(_map_userTagMapAB_codec);
      size += userTagMapABPatch_.CalculateSize(_map_userTagMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserTagConf other) {
      if (other == null) {
        return;
      }
      userTagMap_.Add(other.userTagMap_);
      userTagMapAB_.Add(other.userTagMapAB_);
      userTagMapABPatch_.Add(other.userTagMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            userTagMap_.AddEntriesFrom(input, _map_userTagMap_codec);
            break;
          }
          case 18: {
            userTagMapAB_.AddEntriesFrom(input, _map_userTagMapAB_codec);
            break;
          }
          case 26: {
            userTagMapABPatch_.AddEntriesFrom(input, _map_userTagMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            userTagMap_.AddEntriesFrom(ref input, _map_userTagMap_codec);
            break;
          }
          case 18: {
            userTagMapAB_.AddEntriesFrom(ref input, _map_userTagMapAB_codec);
            break;
          }
          case 26: {
            userTagMapABPatch_.AddEntriesFrom(ref input, _map_userTagMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
