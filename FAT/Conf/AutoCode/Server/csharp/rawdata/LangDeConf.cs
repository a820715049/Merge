// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/LangDeConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/LangDeConf.proto</summary>
  public static partial class LangDeConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/LangDeConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LangDeConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChhyYXdkYXRhL0xhbmdEZUNvbmYucHJvdG8SB3Jhd2RhdGEiIgoGTGFuZ0Rl",
            "EgoKAkxLGAEgASgJEgwKBE5hbWUYAiABKAkiOgoSTGFuZ0RlU2xpY2VBQlZh",
            "bHVlEiQKC0xhbmdEZVNsaWNlGAEgAygLMg8ucmF3ZGF0YS5MYW5nRGUi5QIK",
            "CkxhbmdEZUNvbmYSJAoLTGFuZ0RlU2xpY2UYASADKAsyDy5yYXdkYXRhLkxh",
            "bmdEZRI9Cg1MYW5nRGVTbGljZUFCGAIgAygLMiYucmF3ZGF0YS5MYW5nRGVD",
            "b25mLkxhbmdEZVNsaWNlQUJFbnRyeRJHChJMYW5nRGVTbGljZUFCUGF0Y2gY",
            "AyADKAsyKy5yYXdkYXRhLkxhbmdEZUNvbmYuTGFuZ0RlU2xpY2VBQlBhdGNo",
            "RW50cnkaUQoSTGFuZ0RlU2xpY2VBQkVudHJ5EgsKA2tleRgBIAEoCRIqCgV2",
            "YWx1ZRgCIAEoCzIbLnJhd2RhdGEuTGFuZ0RlU2xpY2VBQlZhbHVlOgI4ARpW",
            "ChdMYW5nRGVTbGljZUFCUGF0Y2hFbnRyeRILCgNrZXkYASABKAkSKgoFdmFs",
            "dWUYAiABKAsyGy5yYXdkYXRhLkxhbmdEZVNsaWNlQUJWYWx1ZToCOAFCPVot",
            "Z2l0bGFiLmZ1bnBsdXMuaW8vZmF0L2NvbmYvZ2VuL2dvbGFuZy9yYXdkYXRh",
            "qgILZmF0LnJhd2RhdGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.LangDe), global::fat.rawdata.LangDe.Parser, new[]{ "LK", "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.LangDeSliceABValue), global::fat.rawdata.LangDeSliceABValue.Parser, new[]{ "LangDeSlice" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.LangDeConf), global::fat.rawdata.LangDeConf.Parser, new[]{ "LangDeSlice", "LangDeSliceAB", "LangDeSliceABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="LangDe",table="LangDeSlice",table_wrapper="LangDeConf",map="false",map_key_type="",data="LangDeConf")
  /// annotation@ab(table_ab="LangDeSliceAB",table_ab_patch="LangDeSliceABPatch",table_ab_value="LangDeSliceABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// </summary>
  public sealed partial class LangDe : pb::IMessage<LangDe>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LangDe> _parser = new pb::MessageParser<LangDe>(() => new LangDe());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LangDe> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.LangDeConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangDe() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangDe(LangDe other) : this() {
      lK_ = other.lK_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangDe Clone() {
      return new LangDe(this);
    }

    /// <summary>Field number for the "LK" field.</summary>
    public const int LKFieldNumber = 1;
    private string lK_ = "";
    /// <summary>
    /// key
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LK {
      get { return lK_; }
      set {
        lK_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    /// 德语
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LangDe);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LangDe other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LK != other.LK) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LK.Length != 0) hash ^= LK.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (LK.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LK);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (LK.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LK);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LK.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LK);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LangDe other) {
      if (other == null) {
        return;
      }
      if (other.LK.Length != 0) {
        LK = other.LK;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LK = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            LK = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LangDeSliceABValue : pb::IMessage<LangDeSliceABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LangDeSliceABValue> _parser = new pb::MessageParser<LangDeSliceABValue>(() => new LangDeSliceABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LangDeSliceABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.LangDeConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangDeSliceABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangDeSliceABValue(LangDeSliceABValue other) : this() {
      langDeSlice_ = other.langDeSlice_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangDeSliceABValue Clone() {
      return new LangDeSliceABValue(this);
    }

    /// <summary>Field number for the "LangDeSlice" field.</summary>
    public const int LangDeSliceFieldNumber = 1;
    private static readonly pb::FieldCodec<global::fat.rawdata.LangDe> _repeated_langDeSlice_codec
        = pb::FieldCodec.ForMessage(10, global::fat.rawdata.LangDe.Parser);
    private readonly pbc::RepeatedField<global::fat.rawdata.LangDe> langDeSlice_ = new pbc::RepeatedField<global::fat.rawdata.LangDe>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::fat.rawdata.LangDe> LangDeSlice {
      get { return langDeSlice_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LangDeSliceABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LangDeSliceABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!langDeSlice_.Equals(other.langDeSlice_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= langDeSlice_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      langDeSlice_.WriteTo(output, _repeated_langDeSlice_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      langDeSlice_.WriteTo(ref output, _repeated_langDeSlice_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += langDeSlice_.CalculateSize(_repeated_langDeSlice_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LangDeSliceABValue other) {
      if (other == null) {
        return;
      }
      langDeSlice_.Add(other.langDeSlice_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            langDeSlice_.AddEntriesFrom(input, _repeated_langDeSlice_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            langDeSlice_.AddEntriesFrom(ref input, _repeated_langDeSlice_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LangDeConf : pb::IMessage<LangDeConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LangDeConf> _parser = new pb::MessageParser<LangDeConf>(() => new LangDeConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LangDeConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.LangDeConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangDeConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangDeConf(LangDeConf other) : this() {
      langDeSlice_ = other.langDeSlice_.Clone();
      langDeSliceAB_ = other.langDeSliceAB_.Clone();
      langDeSliceABPatch_ = other.langDeSliceABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangDeConf Clone() {
      return new LangDeConf(this);
    }

    /// <summary>Field number for the "LangDeSlice" field.</summary>
    public const int LangDeSliceFieldNumber = 1;
    private static readonly pb::FieldCodec<global::fat.rawdata.LangDe> _repeated_langDeSlice_codec
        = pb::FieldCodec.ForMessage(10, global::fat.rawdata.LangDe.Parser);
    private readonly pbc::RepeatedField<global::fat.rawdata.LangDe> langDeSlice_ = new pbc::RepeatedField<global::fat.rawdata.LangDe>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::fat.rawdata.LangDe> LangDeSlice {
      get { return langDeSlice_; }
    }

    /// <summary>Field number for the "LangDeSliceAB" field.</summary>
    public const int LangDeSliceABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.LangDeSliceABValue>.Codec _map_langDeSliceAB_codec
        = new pbc::MapField<string, global::fat.rawdata.LangDeSliceABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.LangDeSliceABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.LangDeSliceABValue> langDeSliceAB_ = new pbc::MapField<string, global::fat.rawdata.LangDeSliceABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.LangDeSliceABValue> LangDeSliceAB {
      get { return langDeSliceAB_; }
    }

    /// <summary>Field number for the "LangDeSliceABPatch" field.</summary>
    public const int LangDeSliceABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.LangDeSliceABValue>.Codec _map_langDeSliceABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.LangDeSliceABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.LangDeSliceABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.LangDeSliceABValue> langDeSliceABPatch_ = new pbc::MapField<string, global::fat.rawdata.LangDeSliceABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.LangDeSliceABValue> LangDeSliceABPatch {
      get { return langDeSliceABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LangDeConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LangDeConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!langDeSlice_.Equals(other.langDeSlice_)) return false;
      if (!LangDeSliceAB.Equals(other.LangDeSliceAB)) return false;
      if (!LangDeSliceABPatch.Equals(other.LangDeSliceABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= langDeSlice_.GetHashCode();
      hash ^= LangDeSliceAB.GetHashCode();
      hash ^= LangDeSliceABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      langDeSlice_.WriteTo(output, _repeated_langDeSlice_codec);
      langDeSliceAB_.WriteTo(output, _map_langDeSliceAB_codec);
      langDeSliceABPatch_.WriteTo(output, _map_langDeSliceABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      langDeSlice_.WriteTo(ref output, _repeated_langDeSlice_codec);
      langDeSliceAB_.WriteTo(ref output, _map_langDeSliceAB_codec);
      langDeSliceABPatch_.WriteTo(ref output, _map_langDeSliceABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += langDeSlice_.CalculateSize(_repeated_langDeSlice_codec);
      size += langDeSliceAB_.CalculateSize(_map_langDeSliceAB_codec);
      size += langDeSliceABPatch_.CalculateSize(_map_langDeSliceABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LangDeConf other) {
      if (other == null) {
        return;
      }
      langDeSlice_.Add(other.langDeSlice_);
      langDeSliceAB_.Add(other.langDeSliceAB_);
      langDeSliceABPatch_.Add(other.langDeSliceABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            langDeSlice_.AddEntriesFrom(input, _repeated_langDeSlice_codec);
            break;
          }
          case 18: {
            langDeSliceAB_.AddEntriesFrom(input, _map_langDeSliceAB_codec);
            break;
          }
          case 26: {
            langDeSliceABPatch_.AddEntriesFrom(input, _map_langDeSliceABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            langDeSlice_.AddEntriesFrom(ref input, _repeated_langDeSlice_codec);
            break;
          }
          case 18: {
            langDeSliceAB_.AddEntriesFrom(ref input, _map_langDeSliceAB_codec);
            break;
          }
          case 26: {
            langDeSliceABPatch_.AddEntriesFrom(ref input, _map_langDeSliceABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
