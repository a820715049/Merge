// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/LangFrHotfixConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/LangFrHotfixConf.proto</summary>
  public static partial class LangFrHotfixConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/LangFrHotfixConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LangFrHotfixConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch5yYXdkYXRhL0xhbmdGckhvdGZpeENvbmYucHJvdG8SB3Jhd2RhdGEiKAoM",
            "TGFuZ0ZySG90Zml4EgoKAkxLGAEgASgJEgwKBE5hbWUYAiABKAkiTAoYTGFu",
            "Z0ZySG90Zml4U2xpY2VBQlZhbHVlEjAKEUxhbmdGckhvdGZpeFNsaWNlGAEg",
            "AygLMhUucmF3ZGF0YS5MYW5nRnJIb3RmaXgiswMKEExhbmdGckhvdGZpeENv",
            "bmYSMAoRTGFuZ0ZySG90Zml4U2xpY2UYASADKAsyFS5yYXdkYXRhLkxhbmdG",
            "ckhvdGZpeBJPChNMYW5nRnJIb3RmaXhTbGljZUFCGAIgAygLMjIucmF3ZGF0",
            "YS5MYW5nRnJIb3RmaXhDb25mLkxhbmdGckhvdGZpeFNsaWNlQUJFbnRyeRJZ",
            "ChhMYW5nRnJIb3RmaXhTbGljZUFCUGF0Y2gYAyADKAsyNy5yYXdkYXRhLkxh",
            "bmdGckhvdGZpeENvbmYuTGFuZ0ZySG90Zml4U2xpY2VBQlBhdGNoRW50cnka",
            "XQoYTGFuZ0ZySG90Zml4U2xpY2VBQkVudHJ5EgsKA2tleRgBIAEoCRIwCgV2",
            "YWx1ZRgCIAEoCzIhLnJhd2RhdGEuTGFuZ0ZySG90Zml4U2xpY2VBQlZhbHVl",
            "OgI4ARpiCh1MYW5nRnJIb3RmaXhTbGljZUFCUGF0Y2hFbnRyeRILCgNrZXkY",
            "ASABKAkSMAoFdmFsdWUYAiABKAsyIS5yYXdkYXRhLkxhbmdGckhvdGZpeFNs",
            "aWNlQUJWYWx1ZToCOAFCPVotZ2l0bGFiLmZ1bnBsdXMuaW8vZmF0L2NvbmYv",
            "Z2VuL2dvbGFuZy9yYXdkYXRhqgILZmF0LnJhd2RhdGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.LangFrHotfix), global::fat.rawdata.LangFrHotfix.Parser, new[]{ "LK", "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.LangFrHotfixSliceABValue), global::fat.rawdata.LangFrHotfixSliceABValue.Parser, new[]{ "LangFrHotfixSlice" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.LangFrHotfixConf), global::fat.rawdata.LangFrHotfixConf.Parser, new[]{ "LangFrHotfixSlice", "LangFrHotfixSliceAB", "LangFrHotfixSliceABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="LangFrHotfix",table="LangFrHotfixSlice",table_wrapper="LangFrHotfixConf",map="false",map_key_type="",data="LangFrHotfixConf")
  /// annotation@ab(table_ab="LangFrHotfixSliceAB",table_ab_patch="LangFrHotfixSliceABPatch",table_ab_value="LangFrHotfixSliceABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// </summary>
  public sealed partial class LangFrHotfix : pb::IMessage<LangFrHotfix>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LangFrHotfix> _parser = new pb::MessageParser<LangFrHotfix>(() => new LangFrHotfix());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LangFrHotfix> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.LangFrHotfixConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangFrHotfix() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangFrHotfix(LangFrHotfix other) : this() {
      lK_ = other.lK_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangFrHotfix Clone() {
      return new LangFrHotfix(this);
    }

    /// <summary>Field number for the "LK" field.</summary>
    public const int LKFieldNumber = 1;
    private string lK_ = "";
    /// <summary>
    /// key
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LK {
      get { return lK_; }
      set {
        lK_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    /// 法语
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LangFrHotfix);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LangFrHotfix other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LK != other.LK) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LK.Length != 0) hash ^= LK.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (LK.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LK);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (LK.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LK);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LK.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LK);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LangFrHotfix other) {
      if (other == null) {
        return;
      }
      if (other.LK.Length != 0) {
        LK = other.LK;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LK = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            LK = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LangFrHotfixSliceABValue : pb::IMessage<LangFrHotfixSliceABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LangFrHotfixSliceABValue> _parser = new pb::MessageParser<LangFrHotfixSliceABValue>(() => new LangFrHotfixSliceABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LangFrHotfixSliceABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.LangFrHotfixConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangFrHotfixSliceABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangFrHotfixSliceABValue(LangFrHotfixSliceABValue other) : this() {
      langFrHotfixSlice_ = other.langFrHotfixSlice_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangFrHotfixSliceABValue Clone() {
      return new LangFrHotfixSliceABValue(this);
    }

    /// <summary>Field number for the "LangFrHotfixSlice" field.</summary>
    public const int LangFrHotfixSliceFieldNumber = 1;
    private static readonly pb::FieldCodec<global::fat.rawdata.LangFrHotfix> _repeated_langFrHotfixSlice_codec
        = pb::FieldCodec.ForMessage(10, global::fat.rawdata.LangFrHotfix.Parser);
    private readonly pbc::RepeatedField<global::fat.rawdata.LangFrHotfix> langFrHotfixSlice_ = new pbc::RepeatedField<global::fat.rawdata.LangFrHotfix>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::fat.rawdata.LangFrHotfix> LangFrHotfixSlice {
      get { return langFrHotfixSlice_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LangFrHotfixSliceABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LangFrHotfixSliceABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!langFrHotfixSlice_.Equals(other.langFrHotfixSlice_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= langFrHotfixSlice_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      langFrHotfixSlice_.WriteTo(output, _repeated_langFrHotfixSlice_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      langFrHotfixSlice_.WriteTo(ref output, _repeated_langFrHotfixSlice_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += langFrHotfixSlice_.CalculateSize(_repeated_langFrHotfixSlice_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LangFrHotfixSliceABValue other) {
      if (other == null) {
        return;
      }
      langFrHotfixSlice_.Add(other.langFrHotfixSlice_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            langFrHotfixSlice_.AddEntriesFrom(input, _repeated_langFrHotfixSlice_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            langFrHotfixSlice_.AddEntriesFrom(ref input, _repeated_langFrHotfixSlice_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LangFrHotfixConf : pb::IMessage<LangFrHotfixConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LangFrHotfixConf> _parser = new pb::MessageParser<LangFrHotfixConf>(() => new LangFrHotfixConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LangFrHotfixConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.LangFrHotfixConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangFrHotfixConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangFrHotfixConf(LangFrHotfixConf other) : this() {
      langFrHotfixSlice_ = other.langFrHotfixSlice_.Clone();
      langFrHotfixSliceAB_ = other.langFrHotfixSliceAB_.Clone();
      langFrHotfixSliceABPatch_ = other.langFrHotfixSliceABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangFrHotfixConf Clone() {
      return new LangFrHotfixConf(this);
    }

    /// <summary>Field number for the "LangFrHotfixSlice" field.</summary>
    public const int LangFrHotfixSliceFieldNumber = 1;
    private static readonly pb::FieldCodec<global::fat.rawdata.LangFrHotfix> _repeated_langFrHotfixSlice_codec
        = pb::FieldCodec.ForMessage(10, global::fat.rawdata.LangFrHotfix.Parser);
    private readonly pbc::RepeatedField<global::fat.rawdata.LangFrHotfix> langFrHotfixSlice_ = new pbc::RepeatedField<global::fat.rawdata.LangFrHotfix>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::fat.rawdata.LangFrHotfix> LangFrHotfixSlice {
      get { return langFrHotfixSlice_; }
    }

    /// <summary>Field number for the "LangFrHotfixSliceAB" field.</summary>
    public const int LangFrHotfixSliceABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.LangFrHotfixSliceABValue>.Codec _map_langFrHotfixSliceAB_codec
        = new pbc::MapField<string, global::fat.rawdata.LangFrHotfixSliceABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.LangFrHotfixSliceABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.LangFrHotfixSliceABValue> langFrHotfixSliceAB_ = new pbc::MapField<string, global::fat.rawdata.LangFrHotfixSliceABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.LangFrHotfixSliceABValue> LangFrHotfixSliceAB {
      get { return langFrHotfixSliceAB_; }
    }

    /// <summary>Field number for the "LangFrHotfixSliceABPatch" field.</summary>
    public const int LangFrHotfixSliceABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.LangFrHotfixSliceABValue>.Codec _map_langFrHotfixSliceABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.LangFrHotfixSliceABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.LangFrHotfixSliceABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.LangFrHotfixSliceABValue> langFrHotfixSliceABPatch_ = new pbc::MapField<string, global::fat.rawdata.LangFrHotfixSliceABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.LangFrHotfixSliceABValue> LangFrHotfixSliceABPatch {
      get { return langFrHotfixSliceABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LangFrHotfixConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LangFrHotfixConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!langFrHotfixSlice_.Equals(other.langFrHotfixSlice_)) return false;
      if (!LangFrHotfixSliceAB.Equals(other.LangFrHotfixSliceAB)) return false;
      if (!LangFrHotfixSliceABPatch.Equals(other.LangFrHotfixSliceABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= langFrHotfixSlice_.GetHashCode();
      hash ^= LangFrHotfixSliceAB.GetHashCode();
      hash ^= LangFrHotfixSliceABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      langFrHotfixSlice_.WriteTo(output, _repeated_langFrHotfixSlice_codec);
      langFrHotfixSliceAB_.WriteTo(output, _map_langFrHotfixSliceAB_codec);
      langFrHotfixSliceABPatch_.WriteTo(output, _map_langFrHotfixSliceABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      langFrHotfixSlice_.WriteTo(ref output, _repeated_langFrHotfixSlice_codec);
      langFrHotfixSliceAB_.WriteTo(ref output, _map_langFrHotfixSliceAB_codec);
      langFrHotfixSliceABPatch_.WriteTo(ref output, _map_langFrHotfixSliceABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += langFrHotfixSlice_.CalculateSize(_repeated_langFrHotfixSlice_codec);
      size += langFrHotfixSliceAB_.CalculateSize(_map_langFrHotfixSliceAB_codec);
      size += langFrHotfixSliceABPatch_.CalculateSize(_map_langFrHotfixSliceABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LangFrHotfixConf other) {
      if (other == null) {
        return;
      }
      langFrHotfixSlice_.Add(other.langFrHotfixSlice_);
      langFrHotfixSliceAB_.Add(other.langFrHotfixSliceAB_);
      langFrHotfixSliceABPatch_.Add(other.langFrHotfixSliceABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            langFrHotfixSlice_.AddEntriesFrom(input, _repeated_langFrHotfixSlice_codec);
            break;
          }
          case 18: {
            langFrHotfixSliceAB_.AddEntriesFrom(input, _map_langFrHotfixSliceAB_codec);
            break;
          }
          case 26: {
            langFrHotfixSliceABPatch_.AddEntriesFrom(input, _map_langFrHotfixSliceABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            langFrHotfixSlice_.AddEntriesFrom(ref input, _repeated_langFrHotfixSlice_codec);
            break;
          }
          case 18: {
            langFrHotfixSliceAB_.AddEntriesFrom(ref input, _map_langFrHotfixSliceAB_codec);
            break;
          }
          case 26: {
            langFrHotfixSliceABPatch_.AddEntriesFrom(ref input, _map_langFrHotfixSliceABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
