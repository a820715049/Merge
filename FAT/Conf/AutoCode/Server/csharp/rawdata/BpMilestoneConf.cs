// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/BpMilestoneConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/BpMilestoneConf.proto</summary>
  public static partial class BpMilestoneConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/BpMilestoneConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BpMilestoneConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch1yYXdkYXRhL0JwTWlsZXN0b25lQ29uZi5wcm90bxIHcmF3ZGF0YSK0AQoL",
            "QnBNaWxlc3RvbmUSCgoCaWQYASABKAUSEwoLY2lyY2xlTGltaXQYCiABKAUS",
            "FAoMY2lyY2xlUmV3YXJkGAMgAygJEhMKC2luR3JhbmRMaXN0GAggASgIEhIK",
            "CmlzUG9wTGV2ZWwYCSABKAgSEgoKcmV3YXJkRnJlZRgEIAMoCRIRCglyZXdh",
            "cmRQYXkYBSADKAkSDQoFc2NvcmUYBiABKAUSDwoHc2hvd051bRgHIAEoBSKw",
            "AQoVQnBNaWxlc3RvbmVNYXBBQlZhbHVlEkoKDkJwTWlsZXN0b25lTWFwGAEg",
            "AygLMjIucmF3ZGF0YS5CcE1pbGVzdG9uZU1hcEFCVmFsdWUuQnBNaWxlc3Rv",
            "bmVNYXBFbnRyeRpLChNCcE1pbGVzdG9uZU1hcEVudHJ5EgsKA2tleRgBIAEo",
            "BRIjCgV2YWx1ZRgCIAEoCzIULnJhd2RhdGEuQnBNaWxlc3RvbmU6AjgBIvkD",
            "Cg9CcE1pbGVzdG9uZUNvbmYSRAoOQnBNaWxlc3RvbmVNYXAYASADKAsyLC5y",
            "YXdkYXRhLkJwTWlsZXN0b25lQ29uZi5CcE1pbGVzdG9uZU1hcEVudHJ5EkgK",
            "EEJwTWlsZXN0b25lTWFwQUIYAiADKAsyLi5yYXdkYXRhLkJwTWlsZXN0b25l",
            "Q29uZi5CcE1pbGVzdG9uZU1hcEFCRW50cnkSUgoVQnBNaWxlc3RvbmVNYXBB",
            "QlBhdGNoGAMgAygLMjMucmF3ZGF0YS5CcE1pbGVzdG9uZUNvbmYuQnBNaWxl",
            "c3RvbmVNYXBBQlBhdGNoRW50cnkaSwoTQnBNaWxlc3RvbmVNYXBFbnRyeRIL",
            "CgNrZXkYASABKAUSIwoFdmFsdWUYAiABKAsyFC5yYXdkYXRhLkJwTWlsZXN0",
            "b25lOgI4ARpXChVCcE1pbGVzdG9uZU1hcEFCRW50cnkSCwoDa2V5GAEgASgJ",
            "Ei0KBXZhbHVlGAIgASgLMh4ucmF3ZGF0YS5CcE1pbGVzdG9uZU1hcEFCVmFs",
            "dWU6AjgBGlwKGkJwTWlsZXN0b25lTWFwQUJQYXRjaEVudHJ5EgsKA2tleRgB",
            "IAEoCRItCgV2YWx1ZRgCIAEoCzIeLnJhd2RhdGEuQnBNaWxlc3RvbmVNYXBB",
            "QlZhbHVlOgI4AUI9Wi1naXRsYWIuZnVucGx1cy5pby9mYXQvY29uZi9nZW4v",
            "Z29sYW5nL3Jhd2RhdGGqAgtmYXQucmF3ZGF0YWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.BpMilestone), global::fat.rawdata.BpMilestone.Parser, new[]{ "Id", "CircleLimit", "CircleReward", "InGrandList", "IsPopLevel", "RewardFree", "RewardPay", "Score", "ShowNum" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.BpMilestoneMapABValue), global::fat.rawdata.BpMilestoneMapABValue.Parser, new[]{ "BpMilestoneMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.BpMilestoneConf), global::fat.rawdata.BpMilestoneConf.Parser, new[]{ "BpMilestoneMap", "BpMilestoneMapAB", "BpMilestoneMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="BpMilestone",table="BpMilestoneMap",table_wrapper="BpMilestoneConf",map="true",map_key_type="int32",data="BpMilestoneConf")
  /// annotation@ab(table_ab="BpMilestoneMapAB",table_ab_patch="BpMilestoneMapABPatch",table_ab_value="BpMilestoneMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@BpMilestone(id="id")
  /// </summary>
  public sealed partial class BpMilestone : pb::IMessage<BpMilestone>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BpMilestone> _parser = new pb::MessageParser<BpMilestone>(() => new BpMilestone());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BpMilestone> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.BpMilestoneConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BpMilestone() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BpMilestone(BpMilestone other) : this() {
      id_ = other.id_;
      circleLimit_ = other.circleLimit_;
      circleReward_ = other.circleReward_.Clone();
      inGrandList_ = other.inGrandList_;
      isPopLevel_ = other.isPopLevel_;
      rewardFree_ = other.rewardFree_.Clone();
      rewardPay_ = other.rewardPay_.Clone();
      score_ = other.score_;
      showNum_ = other.showNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BpMilestone Clone() {
      return new BpMilestone(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 里程碑id
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "circleLimit" field.</summary>
    public const int CircleLimitFieldNumber = 10;
    private int circleLimit_;
    /// <summary>
    /// 循环奖励领取上限
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CircleLimit {
      get { return circleLimit_; }
      set {
        circleLimit_ = value;
      }
    }

    /// <summary>Field number for the "circleReward" field.</summary>
    public const int CircleRewardFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_circleReward_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> circleReward_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 奖励id:奖励数量:权重,
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> CircleReward {
      get { return circleReward_; }
    }

    /// <summary>Field number for the "inGrandList" field.</summary>
    public const int InGrandListFieldNumber = 8;
    private bool inGrandList_;
    /// <summary>
    /// 是否显示在大奖列表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool InGrandList {
      get { return inGrandList_; }
      set {
        inGrandList_ = value;
      }
    }

    /// <summary>Field number for the "isPopLevel" field.</summary>
    public const int IsPopLevelFieldNumber = 9;
    private bool isPopLevel_;
    /// <summary>
    /// 达到该级是否弹出购买弹窗
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsPopLevel {
      get { return isPopLevel_; }
      set {
        isPopLevel_ = value;
      }
    }

    /// <summary>Field number for the "rewardFree" field.</summary>
    public const int RewardFreeFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_rewardFree_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> rewardFree_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 免费奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> RewardFree {
      get { return rewardFree_; }
    }

    /// <summary>Field number for the "rewardPay" field.</summary>
    public const int RewardPayFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_rewardPay_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> rewardPay_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 付费奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> RewardPay {
      get { return rewardPay_; }
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 6;
    private int score_;
    /// <summary>
    /// 升到下一级
    /// 需要的经验值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    /// <summary>Field number for the "showNum" field.</summary>
    public const int ShowNumFieldNumber = 7;
    private int showNum_;
    /// <summary>
    /// 里程碑序号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ShowNum {
      get { return showNum_; }
      set {
        showNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BpMilestone);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BpMilestone other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (CircleLimit != other.CircleLimit) return false;
      if(!circleReward_.Equals(other.circleReward_)) return false;
      if (InGrandList != other.InGrandList) return false;
      if (IsPopLevel != other.IsPopLevel) return false;
      if(!rewardFree_.Equals(other.rewardFree_)) return false;
      if(!rewardPay_.Equals(other.rewardPay_)) return false;
      if (Score != other.Score) return false;
      if (ShowNum != other.ShowNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (CircleLimit != 0) hash ^= CircleLimit.GetHashCode();
      hash ^= circleReward_.GetHashCode();
      if (InGrandList != false) hash ^= InGrandList.GetHashCode();
      if (IsPopLevel != false) hash ^= IsPopLevel.GetHashCode();
      hash ^= rewardFree_.GetHashCode();
      hash ^= rewardPay_.GetHashCode();
      if (Score != 0) hash ^= Score.GetHashCode();
      if (ShowNum != 0) hash ^= ShowNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      circleReward_.WriteTo(output, _repeated_circleReward_codec);
      rewardFree_.WriteTo(output, _repeated_rewardFree_codec);
      rewardPay_.WriteTo(output, _repeated_rewardPay_codec);
      if (Score != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Score);
      }
      if (ShowNum != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(ShowNum);
      }
      if (InGrandList != false) {
        output.WriteRawTag(64);
        output.WriteBool(InGrandList);
      }
      if (IsPopLevel != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsPopLevel);
      }
      if (CircleLimit != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(CircleLimit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      circleReward_.WriteTo(ref output, _repeated_circleReward_codec);
      rewardFree_.WriteTo(ref output, _repeated_rewardFree_codec);
      rewardPay_.WriteTo(ref output, _repeated_rewardPay_codec);
      if (Score != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Score);
      }
      if (ShowNum != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(ShowNum);
      }
      if (InGrandList != false) {
        output.WriteRawTag(64);
        output.WriteBool(InGrandList);
      }
      if (IsPopLevel != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsPopLevel);
      }
      if (CircleLimit != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(CircleLimit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (CircleLimit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CircleLimit);
      }
      size += circleReward_.CalculateSize(_repeated_circleReward_codec);
      if (InGrandList != false) {
        size += 1 + 1;
      }
      if (IsPopLevel != false) {
        size += 1 + 1;
      }
      size += rewardFree_.CalculateSize(_repeated_rewardFree_codec);
      size += rewardPay_.CalculateSize(_repeated_rewardPay_codec);
      if (Score != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Score);
      }
      if (ShowNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ShowNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BpMilestone other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.CircleLimit != 0) {
        CircleLimit = other.CircleLimit;
      }
      circleReward_.Add(other.circleReward_);
      if (other.InGrandList != false) {
        InGrandList = other.InGrandList;
      }
      if (other.IsPopLevel != false) {
        IsPopLevel = other.IsPopLevel;
      }
      rewardFree_.Add(other.rewardFree_);
      rewardPay_.Add(other.rewardPay_);
      if (other.Score != 0) {
        Score = other.Score;
      }
      if (other.ShowNum != 0) {
        ShowNum = other.ShowNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 26: {
            circleReward_.AddEntriesFrom(input, _repeated_circleReward_codec);
            break;
          }
          case 34: {
            rewardFree_.AddEntriesFrom(input, _repeated_rewardFree_codec);
            break;
          }
          case 42: {
            rewardPay_.AddEntriesFrom(input, _repeated_rewardPay_codec);
            break;
          }
          case 48: {
            Score = input.ReadInt32();
            break;
          }
          case 56: {
            ShowNum = input.ReadInt32();
            break;
          }
          case 64: {
            InGrandList = input.ReadBool();
            break;
          }
          case 72: {
            IsPopLevel = input.ReadBool();
            break;
          }
          case 80: {
            CircleLimit = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 26: {
            circleReward_.AddEntriesFrom(ref input, _repeated_circleReward_codec);
            break;
          }
          case 34: {
            rewardFree_.AddEntriesFrom(ref input, _repeated_rewardFree_codec);
            break;
          }
          case 42: {
            rewardPay_.AddEntriesFrom(ref input, _repeated_rewardPay_codec);
            break;
          }
          case 48: {
            Score = input.ReadInt32();
            break;
          }
          case 56: {
            ShowNum = input.ReadInt32();
            break;
          }
          case 64: {
            InGrandList = input.ReadBool();
            break;
          }
          case 72: {
            IsPopLevel = input.ReadBool();
            break;
          }
          case 80: {
            CircleLimit = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BpMilestoneMapABValue : pb::IMessage<BpMilestoneMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BpMilestoneMapABValue> _parser = new pb::MessageParser<BpMilestoneMapABValue>(() => new BpMilestoneMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BpMilestoneMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.BpMilestoneConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BpMilestoneMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BpMilestoneMapABValue(BpMilestoneMapABValue other) : this() {
      bpMilestoneMap_ = other.bpMilestoneMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BpMilestoneMapABValue Clone() {
      return new BpMilestoneMapABValue(this);
    }

    /// <summary>Field number for the "BpMilestoneMap" field.</summary>
    public const int BpMilestoneMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.BpMilestone>.Codec _map_bpMilestoneMap_codec
        = new pbc::MapField<int, global::fat.rawdata.BpMilestone>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.BpMilestone.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.BpMilestone> bpMilestoneMap_ = new pbc::MapField<int, global::fat.rawdata.BpMilestone>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.BpMilestone> BpMilestoneMap {
      get { return bpMilestoneMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BpMilestoneMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BpMilestoneMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!BpMilestoneMap.Equals(other.BpMilestoneMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= BpMilestoneMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      bpMilestoneMap_.WriteTo(output, _map_bpMilestoneMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      bpMilestoneMap_.WriteTo(ref output, _map_bpMilestoneMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += bpMilestoneMap_.CalculateSize(_map_bpMilestoneMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BpMilestoneMapABValue other) {
      if (other == null) {
        return;
      }
      bpMilestoneMap_.Add(other.bpMilestoneMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            bpMilestoneMap_.AddEntriesFrom(input, _map_bpMilestoneMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            bpMilestoneMap_.AddEntriesFrom(ref input, _map_bpMilestoneMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BpMilestoneConf : pb::IMessage<BpMilestoneConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BpMilestoneConf> _parser = new pb::MessageParser<BpMilestoneConf>(() => new BpMilestoneConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BpMilestoneConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.BpMilestoneConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BpMilestoneConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BpMilestoneConf(BpMilestoneConf other) : this() {
      bpMilestoneMap_ = other.bpMilestoneMap_.Clone();
      bpMilestoneMapAB_ = other.bpMilestoneMapAB_.Clone();
      bpMilestoneMapABPatch_ = other.bpMilestoneMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BpMilestoneConf Clone() {
      return new BpMilestoneConf(this);
    }

    /// <summary>Field number for the "BpMilestoneMap" field.</summary>
    public const int BpMilestoneMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.BpMilestone>.Codec _map_bpMilestoneMap_codec
        = new pbc::MapField<int, global::fat.rawdata.BpMilestone>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.BpMilestone.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.BpMilestone> bpMilestoneMap_ = new pbc::MapField<int, global::fat.rawdata.BpMilestone>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.BpMilestone> BpMilestoneMap {
      get { return bpMilestoneMap_; }
    }

    /// <summary>Field number for the "BpMilestoneMapAB" field.</summary>
    public const int BpMilestoneMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.BpMilestoneMapABValue>.Codec _map_bpMilestoneMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.BpMilestoneMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.BpMilestoneMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.BpMilestoneMapABValue> bpMilestoneMapAB_ = new pbc::MapField<string, global::fat.rawdata.BpMilestoneMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.BpMilestoneMapABValue> BpMilestoneMapAB {
      get { return bpMilestoneMapAB_; }
    }

    /// <summary>Field number for the "BpMilestoneMapABPatch" field.</summary>
    public const int BpMilestoneMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.BpMilestoneMapABValue>.Codec _map_bpMilestoneMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.BpMilestoneMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.BpMilestoneMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.BpMilestoneMapABValue> bpMilestoneMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.BpMilestoneMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.BpMilestoneMapABValue> BpMilestoneMapABPatch {
      get { return bpMilestoneMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BpMilestoneConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BpMilestoneConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!BpMilestoneMap.Equals(other.BpMilestoneMap)) return false;
      if (!BpMilestoneMapAB.Equals(other.BpMilestoneMapAB)) return false;
      if (!BpMilestoneMapABPatch.Equals(other.BpMilestoneMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= BpMilestoneMap.GetHashCode();
      hash ^= BpMilestoneMapAB.GetHashCode();
      hash ^= BpMilestoneMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      bpMilestoneMap_.WriteTo(output, _map_bpMilestoneMap_codec);
      bpMilestoneMapAB_.WriteTo(output, _map_bpMilestoneMapAB_codec);
      bpMilestoneMapABPatch_.WriteTo(output, _map_bpMilestoneMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      bpMilestoneMap_.WriteTo(ref output, _map_bpMilestoneMap_codec);
      bpMilestoneMapAB_.WriteTo(ref output, _map_bpMilestoneMapAB_codec);
      bpMilestoneMapABPatch_.WriteTo(ref output, _map_bpMilestoneMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += bpMilestoneMap_.CalculateSize(_map_bpMilestoneMap_codec);
      size += bpMilestoneMapAB_.CalculateSize(_map_bpMilestoneMapAB_codec);
      size += bpMilestoneMapABPatch_.CalculateSize(_map_bpMilestoneMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BpMilestoneConf other) {
      if (other == null) {
        return;
      }
      bpMilestoneMap_.Add(other.bpMilestoneMap_);
      bpMilestoneMapAB_.Add(other.bpMilestoneMapAB_);
      bpMilestoneMapABPatch_.Add(other.bpMilestoneMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            bpMilestoneMap_.AddEntriesFrom(input, _map_bpMilestoneMap_codec);
            break;
          }
          case 18: {
            bpMilestoneMapAB_.AddEntriesFrom(input, _map_bpMilestoneMapAB_codec);
            break;
          }
          case 26: {
            bpMilestoneMapABPatch_.AddEntriesFrom(input, _map_bpMilestoneMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            bpMilestoneMap_.AddEntriesFrom(ref input, _map_bpMilestoneMap_codec);
            break;
          }
          case 18: {
            bpMilestoneMapAB_.AddEntriesFrom(ref input, _map_bpMilestoneMapAB_codec);
            break;
          }
          case 26: {
            bpMilestoneMapABPatch_.AddEntriesFrom(ref input, _map_bpMilestoneMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
