// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventTrainMissionRoundConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventTrainMissionRoundConf.proto</summary>
  public static partial class EventTrainMissionRoundConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventTrainMissionRoundConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventTrainMissionRoundConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CihyYXdkYXRhL0V2ZW50VHJhaW5NaXNzaW9uUm91bmRDb25mLnByb3RvEgdy",
            "YXdkYXRhIjwKFkV2ZW50VHJhaW5NaXNzaW9uUm91bmQSCgoCaWQYASABKAUS",
            "FgoOaW5jbHVkZVRyYWluSWQYAiADKAUi8gEKIEV2ZW50VHJhaW5NaXNzaW9u",
            "Um91bmRNYXBBQlZhbHVlEmsKGUV2ZW50VHJhaW5NaXNzaW9uUm91bmRNYXAY",
            "ASADKAsySC5yYXdkYXRhLkV2ZW50VHJhaW5NaXNzaW9uUm91bmRNYXBBQlZh",
            "bHVlLkV2ZW50VHJhaW5NaXNzaW9uUm91bmRNYXBFbnRyeRphCh5FdmVudFRy",
            "YWluTWlzc2lvblJvdW5kTWFwRW50cnkSCwoDa2V5GAEgASgFEi4KBXZhbHVl",
            "GAIgASgLMh8ucmF3ZGF0YS5FdmVudFRyYWluTWlzc2lvblJvdW5kOgI4ASKp",
            "BQoaRXZlbnRUcmFpbk1pc3Npb25Sb3VuZENvbmYSZQoZRXZlbnRUcmFpbk1p",
            "c3Npb25Sb3VuZE1hcBgBIAMoCzJCLnJhd2RhdGEuRXZlbnRUcmFpbk1pc3Np",
            "b25Sb3VuZENvbmYuRXZlbnRUcmFpbk1pc3Npb25Sb3VuZE1hcEVudHJ5EmkK",
            "G0V2ZW50VHJhaW5NaXNzaW9uUm91bmRNYXBBQhgCIAMoCzJELnJhd2RhdGEu",
            "RXZlbnRUcmFpbk1pc3Npb25Sb3VuZENvbmYuRXZlbnRUcmFpbk1pc3Npb25S",
            "b3VuZE1hcEFCRW50cnkScwogRXZlbnRUcmFpbk1pc3Npb25Sb3VuZE1hcEFC",
            "UGF0Y2gYAyADKAsySS5yYXdkYXRhLkV2ZW50VHJhaW5NaXNzaW9uUm91bmRD",
            "b25mLkV2ZW50VHJhaW5NaXNzaW9uUm91bmRNYXBBQlBhdGNoRW50cnkaYQoe",
            "RXZlbnRUcmFpbk1pc3Npb25Sb3VuZE1hcEVudHJ5EgsKA2tleRgBIAEoBRIu",
            "CgV2YWx1ZRgCIAEoCzIfLnJhd2RhdGEuRXZlbnRUcmFpbk1pc3Npb25Sb3Vu",
            "ZDoCOAEabQogRXZlbnRUcmFpbk1pc3Npb25Sb3VuZE1hcEFCRW50cnkSCwoD",
            "a2V5GAEgASgJEjgKBXZhbHVlGAIgASgLMikucmF3ZGF0YS5FdmVudFRyYWlu",
            "TWlzc2lvblJvdW5kTWFwQUJWYWx1ZToCOAEacgolRXZlbnRUcmFpbk1pc3Np",
            "b25Sb3VuZE1hcEFCUGF0Y2hFbnRyeRILCgNrZXkYASABKAkSOAoFdmFsdWUY",
            "AiABKAsyKS5yYXdkYXRhLkV2ZW50VHJhaW5NaXNzaW9uUm91bmRNYXBBQlZh",
            "bHVlOgI4AUI9Wi1naXRsYWIuZnVucGx1cy5pby9mYXQvY29uZi9nZW4vZ29s",
            "YW5nL3Jhd2RhdGGqAgtmYXQucmF3ZGF0YWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventTrainMissionRound), global::fat.rawdata.EventTrainMissionRound.Parser, new[]{ "Id", "IncludeTrainId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventTrainMissionRoundMapABValue), global::fat.rawdata.EventTrainMissionRoundMapABValue.Parser, new[]{ "EventTrainMissionRoundMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventTrainMissionRoundConf), global::fat.rawdata.EventTrainMissionRoundConf.Parser, new[]{ "EventTrainMissionRoundMap", "EventTrainMissionRoundMapAB", "EventTrainMissionRoundMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventTrainMissionRound",table="EventTrainMissionRoundMap",table_wrapper="EventTrainMissionRoundConf",map="true",map_key_type="int32",data="EventTrainMissionRoundConf")
  /// annotation@ab(table_ab="EventTrainMissionRoundMapAB",table_ab_patch="EventTrainMissionRoundMapABPatch",table_ab_value="EventTrainMissionRoundMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventTrainMissionRound(id="id")
  /// </summary>
  public sealed partial class EventTrainMissionRound : pb::IMessage<EventTrainMissionRound>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventTrainMissionRound> _parser = new pb::MessageParser<EventTrainMissionRound>(() => new EventTrainMissionRound());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventTrainMissionRound> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventTrainMissionRoundConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventTrainMissionRound() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventTrainMissionRound(EventTrainMissionRound other) : this() {
      id_ = other.id_;
      includeTrainId_ = other.includeTrainId_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventTrainMissionRound Clone() {
      return new EventTrainMissionRound(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 活动模板ID
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "includeTrainId" field.</summary>
    public const int IncludeTrainIdFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_includeTrainId_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> includeTrainId_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 活动包含哪几轮活动
    /// （EventItemBingo.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> IncludeTrainId {
      get { return includeTrainId_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventTrainMissionRound);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventTrainMissionRound other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!includeTrainId_.Equals(other.includeTrainId_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      hash ^= includeTrainId_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      includeTrainId_.WriteTo(output, _repeated_includeTrainId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      includeTrainId_.WriteTo(ref output, _repeated_includeTrainId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      size += includeTrainId_.CalculateSize(_repeated_includeTrainId_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventTrainMissionRound other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      includeTrainId_.Add(other.includeTrainId_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            includeTrainId_.AddEntriesFrom(input, _repeated_includeTrainId_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            includeTrainId_.AddEntriesFrom(ref input, _repeated_includeTrainId_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventTrainMissionRoundMapABValue : pb::IMessage<EventTrainMissionRoundMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventTrainMissionRoundMapABValue> _parser = new pb::MessageParser<EventTrainMissionRoundMapABValue>(() => new EventTrainMissionRoundMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventTrainMissionRoundMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventTrainMissionRoundConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventTrainMissionRoundMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventTrainMissionRoundMapABValue(EventTrainMissionRoundMapABValue other) : this() {
      eventTrainMissionRoundMap_ = other.eventTrainMissionRoundMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventTrainMissionRoundMapABValue Clone() {
      return new EventTrainMissionRoundMapABValue(this);
    }

    /// <summary>Field number for the "EventTrainMissionRoundMap" field.</summary>
    public const int EventTrainMissionRoundMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventTrainMissionRound>.Codec _map_eventTrainMissionRoundMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventTrainMissionRound>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventTrainMissionRound.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventTrainMissionRound> eventTrainMissionRoundMap_ = new pbc::MapField<int, global::fat.rawdata.EventTrainMissionRound>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventTrainMissionRound> EventTrainMissionRoundMap {
      get { return eventTrainMissionRoundMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventTrainMissionRoundMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventTrainMissionRoundMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventTrainMissionRoundMap.Equals(other.EventTrainMissionRoundMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventTrainMissionRoundMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventTrainMissionRoundMap_.WriteTo(output, _map_eventTrainMissionRoundMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventTrainMissionRoundMap_.WriteTo(ref output, _map_eventTrainMissionRoundMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventTrainMissionRoundMap_.CalculateSize(_map_eventTrainMissionRoundMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventTrainMissionRoundMapABValue other) {
      if (other == null) {
        return;
      }
      eventTrainMissionRoundMap_.Add(other.eventTrainMissionRoundMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventTrainMissionRoundMap_.AddEntriesFrom(input, _map_eventTrainMissionRoundMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventTrainMissionRoundMap_.AddEntriesFrom(ref input, _map_eventTrainMissionRoundMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventTrainMissionRoundConf : pb::IMessage<EventTrainMissionRoundConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventTrainMissionRoundConf> _parser = new pb::MessageParser<EventTrainMissionRoundConf>(() => new EventTrainMissionRoundConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventTrainMissionRoundConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventTrainMissionRoundConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventTrainMissionRoundConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventTrainMissionRoundConf(EventTrainMissionRoundConf other) : this() {
      eventTrainMissionRoundMap_ = other.eventTrainMissionRoundMap_.Clone();
      eventTrainMissionRoundMapAB_ = other.eventTrainMissionRoundMapAB_.Clone();
      eventTrainMissionRoundMapABPatch_ = other.eventTrainMissionRoundMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventTrainMissionRoundConf Clone() {
      return new EventTrainMissionRoundConf(this);
    }

    /// <summary>Field number for the "EventTrainMissionRoundMap" field.</summary>
    public const int EventTrainMissionRoundMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventTrainMissionRound>.Codec _map_eventTrainMissionRoundMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventTrainMissionRound>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventTrainMissionRound.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventTrainMissionRound> eventTrainMissionRoundMap_ = new pbc::MapField<int, global::fat.rawdata.EventTrainMissionRound>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventTrainMissionRound> EventTrainMissionRoundMap {
      get { return eventTrainMissionRoundMap_; }
    }

    /// <summary>Field number for the "EventTrainMissionRoundMapAB" field.</summary>
    public const int EventTrainMissionRoundMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventTrainMissionRoundMapABValue>.Codec _map_eventTrainMissionRoundMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventTrainMissionRoundMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventTrainMissionRoundMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventTrainMissionRoundMapABValue> eventTrainMissionRoundMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventTrainMissionRoundMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventTrainMissionRoundMapABValue> EventTrainMissionRoundMapAB {
      get { return eventTrainMissionRoundMapAB_; }
    }

    /// <summary>Field number for the "EventTrainMissionRoundMapABPatch" field.</summary>
    public const int EventTrainMissionRoundMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventTrainMissionRoundMapABValue>.Codec _map_eventTrainMissionRoundMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventTrainMissionRoundMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventTrainMissionRoundMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventTrainMissionRoundMapABValue> eventTrainMissionRoundMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventTrainMissionRoundMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventTrainMissionRoundMapABValue> EventTrainMissionRoundMapABPatch {
      get { return eventTrainMissionRoundMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventTrainMissionRoundConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventTrainMissionRoundConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventTrainMissionRoundMap.Equals(other.EventTrainMissionRoundMap)) return false;
      if (!EventTrainMissionRoundMapAB.Equals(other.EventTrainMissionRoundMapAB)) return false;
      if (!EventTrainMissionRoundMapABPatch.Equals(other.EventTrainMissionRoundMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventTrainMissionRoundMap.GetHashCode();
      hash ^= EventTrainMissionRoundMapAB.GetHashCode();
      hash ^= EventTrainMissionRoundMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventTrainMissionRoundMap_.WriteTo(output, _map_eventTrainMissionRoundMap_codec);
      eventTrainMissionRoundMapAB_.WriteTo(output, _map_eventTrainMissionRoundMapAB_codec);
      eventTrainMissionRoundMapABPatch_.WriteTo(output, _map_eventTrainMissionRoundMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventTrainMissionRoundMap_.WriteTo(ref output, _map_eventTrainMissionRoundMap_codec);
      eventTrainMissionRoundMapAB_.WriteTo(ref output, _map_eventTrainMissionRoundMapAB_codec);
      eventTrainMissionRoundMapABPatch_.WriteTo(ref output, _map_eventTrainMissionRoundMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventTrainMissionRoundMap_.CalculateSize(_map_eventTrainMissionRoundMap_codec);
      size += eventTrainMissionRoundMapAB_.CalculateSize(_map_eventTrainMissionRoundMapAB_codec);
      size += eventTrainMissionRoundMapABPatch_.CalculateSize(_map_eventTrainMissionRoundMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventTrainMissionRoundConf other) {
      if (other == null) {
        return;
      }
      eventTrainMissionRoundMap_.Add(other.eventTrainMissionRoundMap_);
      eventTrainMissionRoundMapAB_.Add(other.eventTrainMissionRoundMapAB_);
      eventTrainMissionRoundMapABPatch_.Add(other.eventTrainMissionRoundMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventTrainMissionRoundMap_.AddEntriesFrom(input, _map_eventTrainMissionRoundMap_codec);
            break;
          }
          case 18: {
            eventTrainMissionRoundMapAB_.AddEntriesFrom(input, _map_eventTrainMissionRoundMapAB_codec);
            break;
          }
          case 26: {
            eventTrainMissionRoundMapABPatch_.AddEntriesFrom(input, _map_eventTrainMissionRoundMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventTrainMissionRoundMap_.AddEntriesFrom(ref input, _map_eventTrainMissionRoundMap_codec);
            break;
          }
          case 18: {
            eventTrainMissionRoundMapAB_.AddEntriesFrom(ref input, _map_eventTrainMissionRoundMapAB_codec);
            break;
          }
          case 26: {
            eventTrainMissionRoundMapABPatch_.AddEntriesFrom(ref input, _map_eventTrainMissionRoundMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
