// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/RaceExtendRewardConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/RaceExtendRewardConf.proto</summary>
  public static partial class RaceExtendRewardConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/RaceExtendRewardConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RaceExtendRewardConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiJyYXdkYXRhL1JhY2VFeHRlbmRSZXdhcmRDb25mLnByb3RvEgdyYXdkYXRh",
            "Ii4KEFJhY2VFeHRlbmRSZXdhcmQSCgoCaWQYASABKAUSDgoGcmV3YXJkGAIg",
            "AygJIs4BChpSYWNlRXh0ZW5kUmV3YXJkTWFwQUJWYWx1ZRJZChNSYWNlRXh0",
            "ZW5kUmV3YXJkTWFwGAEgAygLMjwucmF3ZGF0YS5SYWNlRXh0ZW5kUmV3YXJk",
            "TWFwQUJWYWx1ZS5SYWNlRXh0ZW5kUmV3YXJkTWFwRW50cnkaVQoYUmFjZUV4",
            "dGVuZFJld2FyZE1hcEVudHJ5EgsKA2tleRgBIAEoBRIoCgV2YWx1ZRgCIAEo",
            "CzIZLnJhd2RhdGEuUmFjZUV4dGVuZFJld2FyZDoCOAEiyQQKFFJhY2VFeHRl",
            "bmRSZXdhcmRDb25mElMKE1JhY2VFeHRlbmRSZXdhcmRNYXAYASADKAsyNi5y",
            "YXdkYXRhLlJhY2VFeHRlbmRSZXdhcmRDb25mLlJhY2VFeHRlbmRSZXdhcmRN",
            "YXBFbnRyeRJXChVSYWNlRXh0ZW5kUmV3YXJkTWFwQUIYAiADKAsyOC5yYXdk",
            "YXRhLlJhY2VFeHRlbmRSZXdhcmRDb25mLlJhY2VFeHRlbmRSZXdhcmRNYXBB",
            "QkVudHJ5EmEKGlJhY2VFeHRlbmRSZXdhcmRNYXBBQlBhdGNoGAMgAygLMj0u",
            "cmF3ZGF0YS5SYWNlRXh0ZW5kUmV3YXJkQ29uZi5SYWNlRXh0ZW5kUmV3YXJk",
            "TWFwQUJQYXRjaEVudHJ5GlUKGFJhY2VFeHRlbmRSZXdhcmRNYXBFbnRyeRIL",
            "CgNrZXkYASABKAUSKAoFdmFsdWUYAiABKAsyGS5yYXdkYXRhLlJhY2VFeHRl",
            "bmRSZXdhcmQ6AjgBGmEKGlJhY2VFeHRlbmRSZXdhcmRNYXBBQkVudHJ5EgsK",
            "A2tleRgBIAEoCRIyCgV2YWx1ZRgCIAEoCzIjLnJhd2RhdGEuUmFjZUV4dGVu",
            "ZFJld2FyZE1hcEFCVmFsdWU6AjgBGmYKH1JhY2VFeHRlbmRSZXdhcmRNYXBB",
            "QlBhdGNoRW50cnkSCwoDa2V5GAEgASgJEjIKBXZhbHVlGAIgASgLMiMucmF3",
            "ZGF0YS5SYWNlRXh0ZW5kUmV3YXJkTWFwQUJWYWx1ZToCOAFCPVotZ2l0bGFi",
            "LmZ1bnBsdXMuaW8vZmF0L2NvbmYvZ2VuL2dvbGFuZy9yYXdkYXRhqgILZmF0",
            "LnJhd2RhdGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.RaceExtendReward), global::fat.rawdata.RaceExtendReward.Parser, new[]{ "Id", "Reward" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.RaceExtendRewardMapABValue), global::fat.rawdata.RaceExtendRewardMapABValue.Parser, new[]{ "RaceExtendRewardMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.RaceExtendRewardConf), global::fat.rawdata.RaceExtendRewardConf.Parser, new[]{ "RaceExtendRewardMap", "RaceExtendRewardMapAB", "RaceExtendRewardMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="RaceExtendReward",table="RaceExtendRewardMap",table_wrapper="RaceExtendRewardConf",map="true",map_key_type="int32",data="RaceExtendRewardConf")
  /// annotation@ab(table_ab="RaceExtendRewardMapAB",table_ab_patch="RaceExtendRewardMapABPatch",table_ab_value="RaceExtendRewardMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@RaceExtendReward(id="id")
  /// </summary>
  public sealed partial class RaceExtendReward : pb::IMessage<RaceExtendReward>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RaceExtendReward> _parser = new pb::MessageParser<RaceExtendReward>(() => new RaceExtendReward());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RaceExtendReward> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.RaceExtendRewardConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RaceExtendReward() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RaceExtendReward(RaceExtendReward other) : this() {
      id_ = other.id_;
      reward_ = other.reward_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RaceExtendReward Clone() {
      return new RaceExtendReward(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// id
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "reward" field.</summary>
    public const int RewardFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_reward_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> reward_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 奖励：    id:数量:计算方式
    /// （ObjBasic.id:数量:计算方式,ObjBasic.id:数量:计算方式）
    /// 参数3计算方式规则如下：
    /// 0 = 数量
    /// 3 = 数量*（等级系数/100）,RoundCoin取整
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Reward {
      get { return reward_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RaceExtendReward);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RaceExtendReward other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!reward_.Equals(other.reward_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      hash ^= reward_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      reward_.WriteTo(output, _repeated_reward_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      reward_.WriteTo(ref output, _repeated_reward_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      size += reward_.CalculateSize(_repeated_reward_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RaceExtendReward other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      reward_.Add(other.reward_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            reward_.AddEntriesFrom(input, _repeated_reward_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            reward_.AddEntriesFrom(ref input, _repeated_reward_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RaceExtendRewardMapABValue : pb::IMessage<RaceExtendRewardMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RaceExtendRewardMapABValue> _parser = new pb::MessageParser<RaceExtendRewardMapABValue>(() => new RaceExtendRewardMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RaceExtendRewardMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.RaceExtendRewardConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RaceExtendRewardMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RaceExtendRewardMapABValue(RaceExtendRewardMapABValue other) : this() {
      raceExtendRewardMap_ = other.raceExtendRewardMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RaceExtendRewardMapABValue Clone() {
      return new RaceExtendRewardMapABValue(this);
    }

    /// <summary>Field number for the "RaceExtendRewardMap" field.</summary>
    public const int RaceExtendRewardMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.RaceExtendReward>.Codec _map_raceExtendRewardMap_codec
        = new pbc::MapField<int, global::fat.rawdata.RaceExtendReward>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.RaceExtendReward.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.RaceExtendReward> raceExtendRewardMap_ = new pbc::MapField<int, global::fat.rawdata.RaceExtendReward>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.RaceExtendReward> RaceExtendRewardMap {
      get { return raceExtendRewardMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RaceExtendRewardMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RaceExtendRewardMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!RaceExtendRewardMap.Equals(other.RaceExtendRewardMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= RaceExtendRewardMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      raceExtendRewardMap_.WriteTo(output, _map_raceExtendRewardMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      raceExtendRewardMap_.WriteTo(ref output, _map_raceExtendRewardMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += raceExtendRewardMap_.CalculateSize(_map_raceExtendRewardMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RaceExtendRewardMapABValue other) {
      if (other == null) {
        return;
      }
      raceExtendRewardMap_.Add(other.raceExtendRewardMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            raceExtendRewardMap_.AddEntriesFrom(input, _map_raceExtendRewardMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            raceExtendRewardMap_.AddEntriesFrom(ref input, _map_raceExtendRewardMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RaceExtendRewardConf : pb::IMessage<RaceExtendRewardConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RaceExtendRewardConf> _parser = new pb::MessageParser<RaceExtendRewardConf>(() => new RaceExtendRewardConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RaceExtendRewardConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.RaceExtendRewardConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RaceExtendRewardConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RaceExtendRewardConf(RaceExtendRewardConf other) : this() {
      raceExtendRewardMap_ = other.raceExtendRewardMap_.Clone();
      raceExtendRewardMapAB_ = other.raceExtendRewardMapAB_.Clone();
      raceExtendRewardMapABPatch_ = other.raceExtendRewardMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RaceExtendRewardConf Clone() {
      return new RaceExtendRewardConf(this);
    }

    /// <summary>Field number for the "RaceExtendRewardMap" field.</summary>
    public const int RaceExtendRewardMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.RaceExtendReward>.Codec _map_raceExtendRewardMap_codec
        = new pbc::MapField<int, global::fat.rawdata.RaceExtendReward>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.RaceExtendReward.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.RaceExtendReward> raceExtendRewardMap_ = new pbc::MapField<int, global::fat.rawdata.RaceExtendReward>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.RaceExtendReward> RaceExtendRewardMap {
      get { return raceExtendRewardMap_; }
    }

    /// <summary>Field number for the "RaceExtendRewardMapAB" field.</summary>
    public const int RaceExtendRewardMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.RaceExtendRewardMapABValue>.Codec _map_raceExtendRewardMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.RaceExtendRewardMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.RaceExtendRewardMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.RaceExtendRewardMapABValue> raceExtendRewardMapAB_ = new pbc::MapField<string, global::fat.rawdata.RaceExtendRewardMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.RaceExtendRewardMapABValue> RaceExtendRewardMapAB {
      get { return raceExtendRewardMapAB_; }
    }

    /// <summary>Field number for the "RaceExtendRewardMapABPatch" field.</summary>
    public const int RaceExtendRewardMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.RaceExtendRewardMapABValue>.Codec _map_raceExtendRewardMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.RaceExtendRewardMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.RaceExtendRewardMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.RaceExtendRewardMapABValue> raceExtendRewardMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.RaceExtendRewardMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.RaceExtendRewardMapABValue> RaceExtendRewardMapABPatch {
      get { return raceExtendRewardMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RaceExtendRewardConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RaceExtendRewardConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!RaceExtendRewardMap.Equals(other.RaceExtendRewardMap)) return false;
      if (!RaceExtendRewardMapAB.Equals(other.RaceExtendRewardMapAB)) return false;
      if (!RaceExtendRewardMapABPatch.Equals(other.RaceExtendRewardMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= RaceExtendRewardMap.GetHashCode();
      hash ^= RaceExtendRewardMapAB.GetHashCode();
      hash ^= RaceExtendRewardMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      raceExtendRewardMap_.WriteTo(output, _map_raceExtendRewardMap_codec);
      raceExtendRewardMapAB_.WriteTo(output, _map_raceExtendRewardMapAB_codec);
      raceExtendRewardMapABPatch_.WriteTo(output, _map_raceExtendRewardMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      raceExtendRewardMap_.WriteTo(ref output, _map_raceExtendRewardMap_codec);
      raceExtendRewardMapAB_.WriteTo(ref output, _map_raceExtendRewardMapAB_codec);
      raceExtendRewardMapABPatch_.WriteTo(ref output, _map_raceExtendRewardMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += raceExtendRewardMap_.CalculateSize(_map_raceExtendRewardMap_codec);
      size += raceExtendRewardMapAB_.CalculateSize(_map_raceExtendRewardMapAB_codec);
      size += raceExtendRewardMapABPatch_.CalculateSize(_map_raceExtendRewardMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RaceExtendRewardConf other) {
      if (other == null) {
        return;
      }
      raceExtendRewardMap_.Add(other.raceExtendRewardMap_);
      raceExtendRewardMapAB_.Add(other.raceExtendRewardMapAB_);
      raceExtendRewardMapABPatch_.Add(other.raceExtendRewardMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            raceExtendRewardMap_.AddEntriesFrom(input, _map_raceExtendRewardMap_codec);
            break;
          }
          case 18: {
            raceExtendRewardMapAB_.AddEntriesFrom(input, _map_raceExtendRewardMapAB_codec);
            break;
          }
          case 26: {
            raceExtendRewardMapABPatch_.AddEntriesFrom(input, _map_raceExtendRewardMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            raceExtendRewardMap_.AddEntriesFrom(ref input, _map_raceExtendRewardMap_codec);
            break;
          }
          case 18: {
            raceExtendRewardMapAB_.AddEntriesFrom(ref input, _map_raceExtendRewardMapAB_codec);
            break;
          }
          case 26: {
            raceExtendRewardMapABPatch_.AddEntriesFrom(ref input, _map_raceExtendRewardMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
