// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/MergeDifficultyConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/MergeDifficultyConf.proto</summary>
  public static partial class MergeDifficultyConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/MergeDifficultyConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MergeDifficultyConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiFyYXdkYXRhL01lcmdlRGlmZmljdWx0eUNvbmYucHJvdG8SB3Jhd2RhdGEi",
            "bgoPTWVyZ2VEaWZmaWN1bHR5EgoKAmlkGAEgASgFEhgKEGFjdHVhbERpZmZp",
            "Y3VsdHkYAiADKAkSGQoRYXZlcmFnZURpZmZpY3VsdHkYAyABKAUSGgoScHJv",
            "ZHVjZXJDYXRlZ29yeUlkGAQgASgFIsgBChlNZXJnZURpZmZpY3VsdHlNYXBB",
            "QlZhbHVlElYKEk1lcmdlRGlmZmljdWx0eU1hcBgBIAMoCzI6LnJhd2RhdGEu",
            "TWVyZ2VEaWZmaWN1bHR5TWFwQUJWYWx1ZS5NZXJnZURpZmZpY3VsdHlNYXBF",
            "bnRyeRpTChdNZXJnZURpZmZpY3VsdHlNYXBFbnRyeRILCgNrZXkYASABKAUS",
            "JwoFdmFsdWUYAiABKAsyGC5yYXdkYXRhLk1lcmdlRGlmZmljdWx0eToCOAEi",
            "uQQKE01lcmdlRGlmZmljdWx0eUNvbmYSUAoSTWVyZ2VEaWZmaWN1bHR5TWFw",
            "GAEgAygLMjQucmF3ZGF0YS5NZXJnZURpZmZpY3VsdHlDb25mLk1lcmdlRGlm",
            "ZmljdWx0eU1hcEVudHJ5ElQKFE1lcmdlRGlmZmljdWx0eU1hcEFCGAIgAygL",
            "MjYucmF3ZGF0YS5NZXJnZURpZmZpY3VsdHlDb25mLk1lcmdlRGlmZmljdWx0",
            "eU1hcEFCRW50cnkSXgoZTWVyZ2VEaWZmaWN1bHR5TWFwQUJQYXRjaBgDIAMo",
            "CzI7LnJhd2RhdGEuTWVyZ2VEaWZmaWN1bHR5Q29uZi5NZXJnZURpZmZpY3Vs",
            "dHlNYXBBQlBhdGNoRW50cnkaUwoXTWVyZ2VEaWZmaWN1bHR5TWFwRW50cnkS",
            "CwoDa2V5GAEgASgFEicKBXZhbHVlGAIgASgLMhgucmF3ZGF0YS5NZXJnZURp",
            "ZmZpY3VsdHk6AjgBGl8KGU1lcmdlRGlmZmljdWx0eU1hcEFCRW50cnkSCwoD",
            "a2V5GAEgASgJEjEKBXZhbHVlGAIgASgLMiIucmF3ZGF0YS5NZXJnZURpZmZp",
            "Y3VsdHlNYXBBQlZhbHVlOgI4ARpkCh5NZXJnZURpZmZpY3VsdHlNYXBBQlBh",
            "dGNoRW50cnkSCwoDa2V5GAEgASgJEjEKBXZhbHVlGAIgASgLMiIucmF3ZGF0",
            "YS5NZXJnZURpZmZpY3VsdHlNYXBBQlZhbHVlOgI4AUI9Wi1naXRsYWIuZnVu",
            "cGx1cy5pby9mYXQvY29uZi9nZW4vZ29sYW5nL3Jhd2RhdGGqAgtmYXQucmF3",
            "ZGF0YWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.MergeDifficulty), global::fat.rawdata.MergeDifficulty.Parser, new[]{ "Id", "ActualDifficulty", "AverageDifficulty", "ProducerCategoryId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.MergeDifficultyMapABValue), global::fat.rawdata.MergeDifficultyMapABValue.Parser, new[]{ "MergeDifficultyMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.MergeDifficultyConf), global::fat.rawdata.MergeDifficultyConf.Parser, new[]{ "MergeDifficultyMap", "MergeDifficultyMapAB", "MergeDifficultyMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="MergeDifficulty",table="MergeDifficultyMap",table_wrapper="MergeDifficultyConf",map="true",map_key_type="int32",data="MergeDifficultyConf")
  /// annotation@ab(table_ab="MergeDifficultyMapAB",table_ab_patch="MergeDifficultyMapABPatch",table_ab_value="MergeDifficultyMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@MergeDifficulty(id="id")
  /// </summary>
  public sealed partial class MergeDifficulty : pb::IMessage<MergeDifficulty>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MergeDifficulty> _parser = new pb::MessageParser<MergeDifficulty>(() => new MergeDifficulty());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MergeDifficulty> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.MergeDifficultyConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeDifficulty() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeDifficulty(MergeDifficulty other) : this() {
      id_ = other.id_;
      actualDifficulty_ = other.actualDifficulty_.Clone();
      averageDifficulty_ = other.averageDifficulty_;
      producerCategoryId_ = other.producerCategoryId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeDifficulty Clone() {
      return new MergeDifficulty(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 棋子ID
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "actualDifficulty" field.</summary>
    public const int ActualDifficultyFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_actualDifficulty_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> actualDifficulty_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 实际难度
    /// （结合生成器在合成链中的最高等级）
    /// （生成器等级:棋子难度值）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ActualDifficulty {
      get { return actualDifficulty_; }
    }

    /// <summary>Field number for the "averageDifficulty" field.</summary>
    public const int AverageDifficultyFieldNumber = 3;
    private int averageDifficulty_;
    /// <summary>
    /// 平均难度
    /// （无视生成器等级）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AverageDifficulty {
      get { return averageDifficulty_; }
      set {
        averageDifficulty_ = value;
      }
    }

    /// <summary>Field number for the "producerCategoryId" field.</summary>
    public const int ProducerCategoryIdFieldNumber = 4;
    private int producerCategoryId_;
    /// <summary>
    /// 关联生成器
    /// 合成链ID
    /// （MergeItemCategory.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ProducerCategoryId {
      get { return producerCategoryId_; }
      set {
        producerCategoryId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MergeDifficulty);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MergeDifficulty other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!actualDifficulty_.Equals(other.actualDifficulty_)) return false;
      if (AverageDifficulty != other.AverageDifficulty) return false;
      if (ProducerCategoryId != other.ProducerCategoryId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      hash ^= actualDifficulty_.GetHashCode();
      if (AverageDifficulty != 0) hash ^= AverageDifficulty.GetHashCode();
      if (ProducerCategoryId != 0) hash ^= ProducerCategoryId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      actualDifficulty_.WriteTo(output, _repeated_actualDifficulty_codec);
      if (AverageDifficulty != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(AverageDifficulty);
      }
      if (ProducerCategoryId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ProducerCategoryId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      actualDifficulty_.WriteTo(ref output, _repeated_actualDifficulty_codec);
      if (AverageDifficulty != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(AverageDifficulty);
      }
      if (ProducerCategoryId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ProducerCategoryId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      size += actualDifficulty_.CalculateSize(_repeated_actualDifficulty_codec);
      if (AverageDifficulty != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AverageDifficulty);
      }
      if (ProducerCategoryId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ProducerCategoryId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MergeDifficulty other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      actualDifficulty_.Add(other.actualDifficulty_);
      if (other.AverageDifficulty != 0) {
        AverageDifficulty = other.AverageDifficulty;
      }
      if (other.ProducerCategoryId != 0) {
        ProducerCategoryId = other.ProducerCategoryId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            actualDifficulty_.AddEntriesFrom(input, _repeated_actualDifficulty_codec);
            break;
          }
          case 24: {
            AverageDifficulty = input.ReadInt32();
            break;
          }
          case 32: {
            ProducerCategoryId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            actualDifficulty_.AddEntriesFrom(ref input, _repeated_actualDifficulty_codec);
            break;
          }
          case 24: {
            AverageDifficulty = input.ReadInt32();
            break;
          }
          case 32: {
            ProducerCategoryId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MergeDifficultyMapABValue : pb::IMessage<MergeDifficultyMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MergeDifficultyMapABValue> _parser = new pb::MessageParser<MergeDifficultyMapABValue>(() => new MergeDifficultyMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MergeDifficultyMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.MergeDifficultyConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeDifficultyMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeDifficultyMapABValue(MergeDifficultyMapABValue other) : this() {
      mergeDifficultyMap_ = other.mergeDifficultyMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeDifficultyMapABValue Clone() {
      return new MergeDifficultyMapABValue(this);
    }

    /// <summary>Field number for the "MergeDifficultyMap" field.</summary>
    public const int MergeDifficultyMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.MergeDifficulty>.Codec _map_mergeDifficultyMap_codec
        = new pbc::MapField<int, global::fat.rawdata.MergeDifficulty>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.MergeDifficulty.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.MergeDifficulty> mergeDifficultyMap_ = new pbc::MapField<int, global::fat.rawdata.MergeDifficulty>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.MergeDifficulty> MergeDifficultyMap {
      get { return mergeDifficultyMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MergeDifficultyMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MergeDifficultyMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!MergeDifficultyMap.Equals(other.MergeDifficultyMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= MergeDifficultyMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      mergeDifficultyMap_.WriteTo(output, _map_mergeDifficultyMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      mergeDifficultyMap_.WriteTo(ref output, _map_mergeDifficultyMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += mergeDifficultyMap_.CalculateSize(_map_mergeDifficultyMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MergeDifficultyMapABValue other) {
      if (other == null) {
        return;
      }
      mergeDifficultyMap_.Add(other.mergeDifficultyMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            mergeDifficultyMap_.AddEntriesFrom(input, _map_mergeDifficultyMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            mergeDifficultyMap_.AddEntriesFrom(ref input, _map_mergeDifficultyMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MergeDifficultyConf : pb::IMessage<MergeDifficultyConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MergeDifficultyConf> _parser = new pb::MessageParser<MergeDifficultyConf>(() => new MergeDifficultyConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MergeDifficultyConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.MergeDifficultyConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeDifficultyConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeDifficultyConf(MergeDifficultyConf other) : this() {
      mergeDifficultyMap_ = other.mergeDifficultyMap_.Clone();
      mergeDifficultyMapAB_ = other.mergeDifficultyMapAB_.Clone();
      mergeDifficultyMapABPatch_ = other.mergeDifficultyMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeDifficultyConf Clone() {
      return new MergeDifficultyConf(this);
    }

    /// <summary>Field number for the "MergeDifficultyMap" field.</summary>
    public const int MergeDifficultyMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.MergeDifficulty>.Codec _map_mergeDifficultyMap_codec
        = new pbc::MapField<int, global::fat.rawdata.MergeDifficulty>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.MergeDifficulty.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.MergeDifficulty> mergeDifficultyMap_ = new pbc::MapField<int, global::fat.rawdata.MergeDifficulty>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.MergeDifficulty> MergeDifficultyMap {
      get { return mergeDifficultyMap_; }
    }

    /// <summary>Field number for the "MergeDifficultyMapAB" field.</summary>
    public const int MergeDifficultyMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.MergeDifficultyMapABValue>.Codec _map_mergeDifficultyMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.MergeDifficultyMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.MergeDifficultyMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.MergeDifficultyMapABValue> mergeDifficultyMapAB_ = new pbc::MapField<string, global::fat.rawdata.MergeDifficultyMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.MergeDifficultyMapABValue> MergeDifficultyMapAB {
      get { return mergeDifficultyMapAB_; }
    }

    /// <summary>Field number for the "MergeDifficultyMapABPatch" field.</summary>
    public const int MergeDifficultyMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.MergeDifficultyMapABValue>.Codec _map_mergeDifficultyMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.MergeDifficultyMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.MergeDifficultyMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.MergeDifficultyMapABValue> mergeDifficultyMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.MergeDifficultyMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.MergeDifficultyMapABValue> MergeDifficultyMapABPatch {
      get { return mergeDifficultyMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MergeDifficultyConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MergeDifficultyConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!MergeDifficultyMap.Equals(other.MergeDifficultyMap)) return false;
      if (!MergeDifficultyMapAB.Equals(other.MergeDifficultyMapAB)) return false;
      if (!MergeDifficultyMapABPatch.Equals(other.MergeDifficultyMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= MergeDifficultyMap.GetHashCode();
      hash ^= MergeDifficultyMapAB.GetHashCode();
      hash ^= MergeDifficultyMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      mergeDifficultyMap_.WriteTo(output, _map_mergeDifficultyMap_codec);
      mergeDifficultyMapAB_.WriteTo(output, _map_mergeDifficultyMapAB_codec);
      mergeDifficultyMapABPatch_.WriteTo(output, _map_mergeDifficultyMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      mergeDifficultyMap_.WriteTo(ref output, _map_mergeDifficultyMap_codec);
      mergeDifficultyMapAB_.WriteTo(ref output, _map_mergeDifficultyMapAB_codec);
      mergeDifficultyMapABPatch_.WriteTo(ref output, _map_mergeDifficultyMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += mergeDifficultyMap_.CalculateSize(_map_mergeDifficultyMap_codec);
      size += mergeDifficultyMapAB_.CalculateSize(_map_mergeDifficultyMapAB_codec);
      size += mergeDifficultyMapABPatch_.CalculateSize(_map_mergeDifficultyMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MergeDifficultyConf other) {
      if (other == null) {
        return;
      }
      mergeDifficultyMap_.Add(other.mergeDifficultyMap_);
      mergeDifficultyMapAB_.Add(other.mergeDifficultyMapAB_);
      mergeDifficultyMapABPatch_.Add(other.mergeDifficultyMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            mergeDifficultyMap_.AddEntriesFrom(input, _map_mergeDifficultyMap_codec);
            break;
          }
          case 18: {
            mergeDifficultyMapAB_.AddEntriesFrom(input, _map_mergeDifficultyMapAB_codec);
            break;
          }
          case 26: {
            mergeDifficultyMapABPatch_.AddEntriesFrom(input, _map_mergeDifficultyMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            mergeDifficultyMap_.AddEntriesFrom(ref input, _map_mergeDifficultyMap_codec);
            break;
          }
          case 18: {
            mergeDifficultyMapAB_.AddEntriesFrom(ref input, _map_mergeDifficultyMapAB_codec);
            break;
          }
          case 26: {
            mergeDifficultyMapABPatch_.AddEntriesFrom(ref input, _map_mergeDifficultyMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
