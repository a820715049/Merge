// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventWeeklyTaskInfoConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventWeeklyTaskInfoConf.proto</summary>
  public static partial class EventWeeklyTaskInfoConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventWeeklyTaskInfoConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventWeeklyTaskInfoConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiVyYXdkYXRhL0V2ZW50V2Vla2x5VGFza0luZm9Db25mLnByb3RvEgdyYXdk",
            "YXRhIpwBChNFdmVudFdlZWtseVRhc2tJbmZvEgoKAmlkGAEgASgFEgwKBGRl",
            "c2MYAiABKAkSEAoIaWNvblNob3cYAyABKAkSFAoMcmVxdWlyZVBhcmFtGAQg",
            "ASgJEgwKBHNvcnQYBSABKAUSEgoKdGFza1Jld2FyZBgGIAEoCRIQCgh0YXNr",
            "VHlwZRgHIAEoBRIPCgd0b2tlbklkGAggASgFIuABCh1FdmVudFdlZWtseVRh",
            "c2tJbmZvTWFwQUJWYWx1ZRJiChZFdmVudFdlZWtseVRhc2tJbmZvTWFwGAEg",
            "AygLMkIucmF3ZGF0YS5FdmVudFdlZWtseVRhc2tJbmZvTWFwQUJWYWx1ZS5F",
            "dmVudFdlZWtseVRhc2tJbmZvTWFwRW50cnkaWwobRXZlbnRXZWVrbHlUYXNr",
            "SW5mb01hcEVudHJ5EgsKA2tleRgBIAEoBRIrCgV2YWx1ZRgCIAEoCzIcLnJh",
            "d2RhdGEuRXZlbnRXZWVrbHlUYXNrSW5mbzoCOAEi+QQKF0V2ZW50V2Vla2x5",
            "VGFza0luZm9Db25mElwKFkV2ZW50V2Vla2x5VGFza0luZm9NYXAYASADKAsy",
            "PC5yYXdkYXRhLkV2ZW50V2Vla2x5VGFza0luZm9Db25mLkV2ZW50V2Vla2x5",
            "VGFza0luZm9NYXBFbnRyeRJgChhFdmVudFdlZWtseVRhc2tJbmZvTWFwQUIY",
            "AiADKAsyPi5yYXdkYXRhLkV2ZW50V2Vla2x5VGFza0luZm9Db25mLkV2ZW50",
            "V2Vla2x5VGFza0luZm9NYXBBQkVudHJ5EmoKHUV2ZW50V2Vla2x5VGFza0lu",
            "Zm9NYXBBQlBhdGNoGAMgAygLMkMucmF3ZGF0YS5FdmVudFdlZWtseVRhc2tJ",
            "bmZvQ29uZi5FdmVudFdlZWtseVRhc2tJbmZvTWFwQUJQYXRjaEVudHJ5GlsK",
            "G0V2ZW50V2Vla2x5VGFza0luZm9NYXBFbnRyeRILCgNrZXkYASABKAUSKwoF",
            "dmFsdWUYAiABKAsyHC5yYXdkYXRhLkV2ZW50V2Vla2x5VGFza0luZm86AjgB",
            "GmcKHUV2ZW50V2Vla2x5VGFza0luZm9NYXBBQkVudHJ5EgsKA2tleRgBIAEo",
            "CRI1CgV2YWx1ZRgCIAEoCzImLnJhd2RhdGEuRXZlbnRXZWVrbHlUYXNrSW5m",
            "b01hcEFCVmFsdWU6AjgBGmwKIkV2ZW50V2Vla2x5VGFza0luZm9NYXBBQlBh",
            "dGNoRW50cnkSCwoDa2V5GAEgASgJEjUKBXZhbHVlGAIgASgLMiYucmF3ZGF0",
            "YS5FdmVudFdlZWtseVRhc2tJbmZvTWFwQUJWYWx1ZToCOAFCPVotZ2l0bGFi",
            "LmZ1bnBsdXMuaW8vZmF0L2NvbmYvZ2VuL2dvbGFuZy9yYXdkYXRhqgILZmF0",
            "LnJhd2RhdGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventWeeklyTaskInfo), global::fat.rawdata.EventWeeklyTaskInfo.Parser, new[]{ "Id", "Desc", "IconShow", "RequireParam", "Sort", "TaskReward", "TaskType", "TokenId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventWeeklyTaskInfoMapABValue), global::fat.rawdata.EventWeeklyTaskInfoMapABValue.Parser, new[]{ "EventWeeklyTaskInfoMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventWeeklyTaskInfoConf), global::fat.rawdata.EventWeeklyTaskInfoConf.Parser, new[]{ "EventWeeklyTaskInfoMap", "EventWeeklyTaskInfoMapAB", "EventWeeklyTaskInfoMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventWeeklyTaskInfo",table="EventWeeklyTaskInfoMap",table_wrapper="EventWeeklyTaskInfoConf",map="true",map_key_type="int32",data="EventWeeklyTaskInfoConf")
  /// annotation@ab(table_ab="EventWeeklyTaskInfoMapAB",table_ab_patch="EventWeeklyTaskInfoMapABPatch",table_ab_value="EventWeeklyTaskInfoMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventWeeklyTaskInfo(id="id")
  /// </summary>
  public sealed partial class EventWeeklyTaskInfo : pb::IMessage<EventWeeklyTaskInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventWeeklyTaskInfo> _parser = new pb::MessageParser<EventWeeklyTaskInfo>(() => new EventWeeklyTaskInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventWeeklyTaskInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventWeeklyTaskInfoConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWeeklyTaskInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWeeklyTaskInfo(EventWeeklyTaskInfo other) : this() {
      id_ = other.id_;
      desc_ = other.desc_;
      iconShow_ = other.iconShow_;
      requireParam_ = other.requireParam_;
      sort_ = other.sort_;
      taskReward_ = other.taskReward_;
      taskType_ = other.taskType_;
      tokenId_ = other.tokenId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWeeklyTaskInfo Clone() {
      return new EventWeeklyTaskInfo(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 任务id
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "desc" field.</summary>
    public const int DescFieldNumber = 2;
    private string desc_ = "";
    /// <summary>
    /// 任务描述
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Desc {
      get { return desc_; }
      set {
        desc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "iconShow" field.</summary>
    public const int IconShowFieldNumber = 3;
    private string iconShow_ = "";
    /// <summary>
    /// 任务icon图
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IconShow {
      get { return iconShow_; }
      set {
        iconShow_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "requireParam" field.</summary>
    public const int RequireParamFieldNumber = 4;
    private string requireParam_ = "";
    /// <summary>
    /// 任务要求数量
    /// （数量:计算方式）
    /// 参数2计算方式规则如下：
    /// 0 = 数量
    /// 3 = 数量*（等级系数/100），RoundCoin取整
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RequireParam {
      get { return requireParam_; }
      set {
        requireParam_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sort" field.</summary>
    public const int SortFieldNumber = 5;
    private int sort_;
    /// <summary>
    /// 任务排序
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Sort {
      get { return sort_; }
      set {
        sort_ = value;
      }
    }

    /// <summary>Field number for the "taskReward" field.</summary>
    public const int TaskRewardFieldNumber = 6;
    private string taskReward_ = "";
    /// <summary>
    /// 任务奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TaskReward {
      get { return taskReward_; }
      set {
        taskReward_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "taskType" field.</summary>
    public const int TaskTypeFieldNumber = 7;
    private int taskType_;
    /// <summary>
    /// 任务类型
    /// （WeeklyTaskType@enum.value）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TaskType {
      get { return taskType_; }
      set {
        taskType_ = value;
      }
    }

    /// <summary>Field number for the "tokenId" field.</summary>
    public const int TokenIdFieldNumber = 8;
    private int tokenId_;
    /// <summary>
    /// 关联具体活动
    /// 根据tokenId关联到对应活动
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TokenId {
      get { return tokenId_; }
      set {
        tokenId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventWeeklyTaskInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventWeeklyTaskInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Desc != other.Desc) return false;
      if (IconShow != other.IconShow) return false;
      if (RequireParam != other.RequireParam) return false;
      if (Sort != other.Sort) return false;
      if (TaskReward != other.TaskReward) return false;
      if (TaskType != other.TaskType) return false;
      if (TokenId != other.TokenId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Desc.Length != 0) hash ^= Desc.GetHashCode();
      if (IconShow.Length != 0) hash ^= IconShow.GetHashCode();
      if (RequireParam.Length != 0) hash ^= RequireParam.GetHashCode();
      if (Sort != 0) hash ^= Sort.GetHashCode();
      if (TaskReward.Length != 0) hash ^= TaskReward.GetHashCode();
      if (TaskType != 0) hash ^= TaskType.GetHashCode();
      if (TokenId != 0) hash ^= TokenId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Desc.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Desc);
      }
      if (IconShow.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(IconShow);
      }
      if (RequireParam.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(RequireParam);
      }
      if (Sort != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Sort);
      }
      if (TaskReward.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(TaskReward);
      }
      if (TaskType != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(TaskType);
      }
      if (TokenId != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(TokenId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Desc.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Desc);
      }
      if (IconShow.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(IconShow);
      }
      if (RequireParam.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(RequireParam);
      }
      if (Sort != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Sort);
      }
      if (TaskReward.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(TaskReward);
      }
      if (TaskType != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(TaskType);
      }
      if (TokenId != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(TokenId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Desc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Desc);
      }
      if (IconShow.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IconShow);
      }
      if (RequireParam.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RequireParam);
      }
      if (Sort != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Sort);
      }
      if (TaskReward.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TaskReward);
      }
      if (TaskType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TaskType);
      }
      if (TokenId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TokenId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventWeeklyTaskInfo other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Desc.Length != 0) {
        Desc = other.Desc;
      }
      if (other.IconShow.Length != 0) {
        IconShow = other.IconShow;
      }
      if (other.RequireParam.Length != 0) {
        RequireParam = other.RequireParam;
      }
      if (other.Sort != 0) {
        Sort = other.Sort;
      }
      if (other.TaskReward.Length != 0) {
        TaskReward = other.TaskReward;
      }
      if (other.TaskType != 0) {
        TaskType = other.TaskType;
      }
      if (other.TokenId != 0) {
        TokenId = other.TokenId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Desc = input.ReadString();
            break;
          }
          case 26: {
            IconShow = input.ReadString();
            break;
          }
          case 34: {
            RequireParam = input.ReadString();
            break;
          }
          case 40: {
            Sort = input.ReadInt32();
            break;
          }
          case 50: {
            TaskReward = input.ReadString();
            break;
          }
          case 56: {
            TaskType = input.ReadInt32();
            break;
          }
          case 64: {
            TokenId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Desc = input.ReadString();
            break;
          }
          case 26: {
            IconShow = input.ReadString();
            break;
          }
          case 34: {
            RequireParam = input.ReadString();
            break;
          }
          case 40: {
            Sort = input.ReadInt32();
            break;
          }
          case 50: {
            TaskReward = input.ReadString();
            break;
          }
          case 56: {
            TaskType = input.ReadInt32();
            break;
          }
          case 64: {
            TokenId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventWeeklyTaskInfoMapABValue : pb::IMessage<EventWeeklyTaskInfoMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventWeeklyTaskInfoMapABValue> _parser = new pb::MessageParser<EventWeeklyTaskInfoMapABValue>(() => new EventWeeklyTaskInfoMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventWeeklyTaskInfoMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventWeeklyTaskInfoConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWeeklyTaskInfoMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWeeklyTaskInfoMapABValue(EventWeeklyTaskInfoMapABValue other) : this() {
      eventWeeklyTaskInfoMap_ = other.eventWeeklyTaskInfoMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWeeklyTaskInfoMapABValue Clone() {
      return new EventWeeklyTaskInfoMapABValue(this);
    }

    /// <summary>Field number for the "EventWeeklyTaskInfoMap" field.</summary>
    public const int EventWeeklyTaskInfoMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventWeeklyTaskInfo>.Codec _map_eventWeeklyTaskInfoMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventWeeklyTaskInfo>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventWeeklyTaskInfo.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventWeeklyTaskInfo> eventWeeklyTaskInfoMap_ = new pbc::MapField<int, global::fat.rawdata.EventWeeklyTaskInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventWeeklyTaskInfo> EventWeeklyTaskInfoMap {
      get { return eventWeeklyTaskInfoMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventWeeklyTaskInfoMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventWeeklyTaskInfoMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventWeeklyTaskInfoMap.Equals(other.EventWeeklyTaskInfoMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventWeeklyTaskInfoMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventWeeklyTaskInfoMap_.WriteTo(output, _map_eventWeeklyTaskInfoMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventWeeklyTaskInfoMap_.WriteTo(ref output, _map_eventWeeklyTaskInfoMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventWeeklyTaskInfoMap_.CalculateSize(_map_eventWeeklyTaskInfoMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventWeeklyTaskInfoMapABValue other) {
      if (other == null) {
        return;
      }
      eventWeeklyTaskInfoMap_.Add(other.eventWeeklyTaskInfoMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventWeeklyTaskInfoMap_.AddEntriesFrom(input, _map_eventWeeklyTaskInfoMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventWeeklyTaskInfoMap_.AddEntriesFrom(ref input, _map_eventWeeklyTaskInfoMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventWeeklyTaskInfoConf : pb::IMessage<EventWeeklyTaskInfoConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventWeeklyTaskInfoConf> _parser = new pb::MessageParser<EventWeeklyTaskInfoConf>(() => new EventWeeklyTaskInfoConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventWeeklyTaskInfoConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventWeeklyTaskInfoConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWeeklyTaskInfoConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWeeklyTaskInfoConf(EventWeeklyTaskInfoConf other) : this() {
      eventWeeklyTaskInfoMap_ = other.eventWeeklyTaskInfoMap_.Clone();
      eventWeeklyTaskInfoMapAB_ = other.eventWeeklyTaskInfoMapAB_.Clone();
      eventWeeklyTaskInfoMapABPatch_ = other.eventWeeklyTaskInfoMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWeeklyTaskInfoConf Clone() {
      return new EventWeeklyTaskInfoConf(this);
    }

    /// <summary>Field number for the "EventWeeklyTaskInfoMap" field.</summary>
    public const int EventWeeklyTaskInfoMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventWeeklyTaskInfo>.Codec _map_eventWeeklyTaskInfoMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventWeeklyTaskInfo>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventWeeklyTaskInfo.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventWeeklyTaskInfo> eventWeeklyTaskInfoMap_ = new pbc::MapField<int, global::fat.rawdata.EventWeeklyTaskInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventWeeklyTaskInfo> EventWeeklyTaskInfoMap {
      get { return eventWeeklyTaskInfoMap_; }
    }

    /// <summary>Field number for the "EventWeeklyTaskInfoMapAB" field.</summary>
    public const int EventWeeklyTaskInfoMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventWeeklyTaskInfoMapABValue>.Codec _map_eventWeeklyTaskInfoMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventWeeklyTaskInfoMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventWeeklyTaskInfoMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventWeeklyTaskInfoMapABValue> eventWeeklyTaskInfoMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventWeeklyTaskInfoMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventWeeklyTaskInfoMapABValue> EventWeeklyTaskInfoMapAB {
      get { return eventWeeklyTaskInfoMapAB_; }
    }

    /// <summary>Field number for the "EventWeeklyTaskInfoMapABPatch" field.</summary>
    public const int EventWeeklyTaskInfoMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventWeeklyTaskInfoMapABValue>.Codec _map_eventWeeklyTaskInfoMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventWeeklyTaskInfoMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventWeeklyTaskInfoMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventWeeklyTaskInfoMapABValue> eventWeeklyTaskInfoMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventWeeklyTaskInfoMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventWeeklyTaskInfoMapABValue> EventWeeklyTaskInfoMapABPatch {
      get { return eventWeeklyTaskInfoMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventWeeklyTaskInfoConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventWeeklyTaskInfoConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventWeeklyTaskInfoMap.Equals(other.EventWeeklyTaskInfoMap)) return false;
      if (!EventWeeklyTaskInfoMapAB.Equals(other.EventWeeklyTaskInfoMapAB)) return false;
      if (!EventWeeklyTaskInfoMapABPatch.Equals(other.EventWeeklyTaskInfoMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventWeeklyTaskInfoMap.GetHashCode();
      hash ^= EventWeeklyTaskInfoMapAB.GetHashCode();
      hash ^= EventWeeklyTaskInfoMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventWeeklyTaskInfoMap_.WriteTo(output, _map_eventWeeklyTaskInfoMap_codec);
      eventWeeklyTaskInfoMapAB_.WriteTo(output, _map_eventWeeklyTaskInfoMapAB_codec);
      eventWeeklyTaskInfoMapABPatch_.WriteTo(output, _map_eventWeeklyTaskInfoMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventWeeklyTaskInfoMap_.WriteTo(ref output, _map_eventWeeklyTaskInfoMap_codec);
      eventWeeklyTaskInfoMapAB_.WriteTo(ref output, _map_eventWeeklyTaskInfoMapAB_codec);
      eventWeeklyTaskInfoMapABPatch_.WriteTo(ref output, _map_eventWeeklyTaskInfoMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventWeeklyTaskInfoMap_.CalculateSize(_map_eventWeeklyTaskInfoMap_codec);
      size += eventWeeklyTaskInfoMapAB_.CalculateSize(_map_eventWeeklyTaskInfoMapAB_codec);
      size += eventWeeklyTaskInfoMapABPatch_.CalculateSize(_map_eventWeeklyTaskInfoMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventWeeklyTaskInfoConf other) {
      if (other == null) {
        return;
      }
      eventWeeklyTaskInfoMap_.Add(other.eventWeeklyTaskInfoMap_);
      eventWeeklyTaskInfoMapAB_.Add(other.eventWeeklyTaskInfoMapAB_);
      eventWeeklyTaskInfoMapABPatch_.Add(other.eventWeeklyTaskInfoMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventWeeklyTaskInfoMap_.AddEntriesFrom(input, _map_eventWeeklyTaskInfoMap_codec);
            break;
          }
          case 18: {
            eventWeeklyTaskInfoMapAB_.AddEntriesFrom(input, _map_eventWeeklyTaskInfoMapAB_codec);
            break;
          }
          case 26: {
            eventWeeklyTaskInfoMapABPatch_.AddEntriesFrom(input, _map_eventWeeklyTaskInfoMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventWeeklyTaskInfoMap_.AddEntriesFrom(ref input, _map_eventWeeklyTaskInfoMap_codec);
            break;
          }
          case 18: {
            eventWeeklyTaskInfoMapAB_.AddEntriesFrom(ref input, _map_eventWeeklyTaskInfoMapAB_codec);
            break;
          }
          case 26: {
            eventWeeklyTaskInfoMapABPatch_.AddEntriesFrom(ref input, _map_eventWeeklyTaskInfoMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
