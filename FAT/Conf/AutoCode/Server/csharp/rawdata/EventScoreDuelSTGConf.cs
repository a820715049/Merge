// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventScoreDuelSTGConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventScoreDuelSTGConf.proto</summary>
  public static partial class EventScoreDuelSTGConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventScoreDuelSTGConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventScoreDuelSTGConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiNyYXdkYXRhL0V2ZW50U2NvcmVEdWVsU1RHQ29uZi5wcm90bxIHcmF3ZGF0",
            "YSKqAQoRRXZlbnRTY29yZUR1ZWxTVEcSCgoCaWQYASABKAUSDwoHYWRkU3Rl",
            "cBgCIAEoBRIRCgliYXNlU2NvcmUYAyADKAkSFAoMb2ZmbGluZVNjb3JlGAQg",
            "ASgJEhMKC29mZnNldFNjb3JlGAUgAygJEhMKC29mZnNldFRpbWVzGAYgASgF",
            "EhEKCXN0YXJ0VGltZRgHIAEoBRISCgp0cmlnZ2VyR2FwGAggAygFItQBChtF",
            "dmVudFNjb3JlRHVlbFNUR01hcEFCVmFsdWUSXAoURXZlbnRTY29yZUR1ZWxT",
            "VEdNYXAYASADKAsyPi5yYXdkYXRhLkV2ZW50U2NvcmVEdWVsU1RHTWFwQUJW",
            "YWx1ZS5FdmVudFNjb3JlRHVlbFNUR01hcEVudHJ5GlcKGUV2ZW50U2NvcmVE",
            "dWVsU1RHTWFwRW50cnkSCwoDa2V5GAEgASgFEikKBXZhbHVlGAIgASgLMhou",
            "cmF3ZGF0YS5FdmVudFNjb3JlRHVlbFNURzoCOAEi2QQKFUV2ZW50U2NvcmVE",
            "dWVsU1RHQ29uZhJWChRFdmVudFNjb3JlRHVlbFNUR01hcBgBIAMoCzI4LnJh",
            "d2RhdGEuRXZlbnRTY29yZUR1ZWxTVEdDb25mLkV2ZW50U2NvcmVEdWVsU1RH",
            "TWFwRW50cnkSWgoWRXZlbnRTY29yZUR1ZWxTVEdNYXBBQhgCIAMoCzI6LnJh",
            "d2RhdGEuRXZlbnRTY29yZUR1ZWxTVEdDb25mLkV2ZW50U2NvcmVEdWVsU1RH",
            "TWFwQUJFbnRyeRJkChtFdmVudFNjb3JlRHVlbFNUR01hcEFCUGF0Y2gYAyAD",
            "KAsyPy5yYXdkYXRhLkV2ZW50U2NvcmVEdWVsU1RHQ29uZi5FdmVudFNjb3Jl",
            "RHVlbFNUR01hcEFCUGF0Y2hFbnRyeRpXChlFdmVudFNjb3JlRHVlbFNUR01h",
            "cEVudHJ5EgsKA2tleRgBIAEoBRIpCgV2YWx1ZRgCIAEoCzIaLnJhd2RhdGEu",
            "RXZlbnRTY29yZUR1ZWxTVEc6AjgBGmMKG0V2ZW50U2NvcmVEdWVsU1RHTWFw",
            "QUJFbnRyeRILCgNrZXkYASABKAkSMwoFdmFsdWUYAiABKAsyJC5yYXdkYXRh",
            "LkV2ZW50U2NvcmVEdWVsU1RHTWFwQUJWYWx1ZToCOAEaaAogRXZlbnRTY29y",
            "ZUR1ZWxTVEdNYXBBQlBhdGNoRW50cnkSCwoDa2V5GAEgASgJEjMKBXZhbHVl",
            "GAIgASgLMiQucmF3ZGF0YS5FdmVudFNjb3JlRHVlbFNUR01hcEFCVmFsdWU6",
            "AjgBQj1aLWdpdGxhYi5mdW5wbHVzLmlvL2ZhdC9jb25mL2dlbi9nb2xhbmcv",
            "cmF3ZGF0YaoCC2ZhdC5yYXdkYXRhYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventScoreDuelSTG), global::fat.rawdata.EventScoreDuelSTG.Parser, new[]{ "Id", "AddStep", "BaseScore", "OfflineScore", "OffsetScore", "OffsetTimes", "StartTime", "TriggerGap" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventScoreDuelSTGMapABValue), global::fat.rawdata.EventScoreDuelSTGMapABValue.Parser, new[]{ "EventScoreDuelSTGMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventScoreDuelSTGConf), global::fat.rawdata.EventScoreDuelSTGConf.Parser, new[]{ "EventScoreDuelSTGMap", "EventScoreDuelSTGMapAB", "EventScoreDuelSTGMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventScoreDuelSTG",table="EventScoreDuelSTGMap",table_wrapper="EventScoreDuelSTGConf",map="true",map_key_type="int32",data="EventScoreDuelSTGConf")
  /// annotation@ab(table_ab="EventScoreDuelSTGMapAB",table_ab_patch="EventScoreDuelSTGMapABPatch",table_ab_value="EventScoreDuelSTGMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventScoreDuelSTG(id="id")
  /// </summary>
  public sealed partial class EventScoreDuelSTG : pb::IMessage<EventScoreDuelSTG>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventScoreDuelSTG> _parser = new pb::MessageParser<EventScoreDuelSTG>(() => new EventScoreDuelSTG());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventScoreDuelSTG> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventScoreDuelSTGConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventScoreDuelSTG() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventScoreDuelSTG(EventScoreDuelSTG other) : this() {
      id_ = other.id_;
      addStep_ = other.addStep_;
      baseScore_ = other.baseScore_.Clone();
      offlineScore_ = other.offlineScore_;
      offsetScore_ = other.offsetScore_.Clone();
      offsetTimes_ = other.offsetTimes_;
      startTime_ = other.startTime_;
      triggerGap_ = other.triggerGap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventScoreDuelSTG Clone() {
      return new EventScoreDuelSTG(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 策略id
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "addStep" field.</summary>
    public const int AddStepFieldNumber = 2;
    private int addStep_;
    /// <summary>
    /// 加分时间间隔
    /// 单位:分钟
    /// 机器人会在间隔期间的随机时间点进行加分。
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AddStep {
      get { return addStep_; }
      set {
        addStep_ = value;
      }
    }

    /// <summary>Field number for the "baseScore" field.</summary>
    public const int BaseScoreFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_baseScore_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> baseScore_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// {区间1左:区间1右:权重1,区间2左:区间2右:权重2..}；区间左闭右开
    /// 先根据权重随出加分区间，再从区间内等概率随出最终值（整数）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> BaseScore {
      get { return baseScore_; }
    }

    /// <summary>Field number for the "offlineScore" field.</summary>
    public const int OfflineScoreFieldNumber = 4;
    private string offlineScore_ = "";
    /// <summary>
    /// {间隔时长：加分值}；
    /// 间隔时长单位为“s”
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OfflineScore {
      get { return offlineScore_; }
      set {
        offlineScore_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "offsetScore" field.</summary>
    public const int OffsetScoreFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_offsetScore_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> offsetScore_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// {区间1左:区间1右,区间2左:区间2右,...}
    /// 按序对应每个策略的偏移分数区间；需要支持负整数。
    /// 获取到加分策略后从对应的区间内随出本次加分的偏移分数。
    /// 0表示不加分且本次不计入offset次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> OffsetScore {
      get { return offsetScore_; }
    }

    /// <summary>Field number for the "offsetTimes" field.</summary>
    public const int OffsetTimesFieldNumber = 6;
    private int offsetTimes_;
    /// <summary>
    /// 回合期间触发偏移策略的最大次数，超过后不再走 triggerGap 的判断
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int OffsetTimes {
      get { return offsetTimes_; }
      set {
        offsetTimes_ = value;
      }
    }

    /// <summary>Field number for the "startTime" field.</summary>
    public const int StartTimeFieldNumber = 7;
    private int startTime_;
    /// <summary>
    /// 默认开始加分时刻
    /// 单位:分钟
    /// 第{0}分钟时开始加分
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "triggerGap" field.</summary>
    public const int TriggerGapFieldNumber = 8;
    private static readonly pb::FieldCodec<int> _repeated_triggerGap_codec
        = pb::FieldCodec.ForInt32(66);
    private readonly pbc::RepeatedField<int> triggerGap_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// {范围1,范围2,范围3,..}
    /// 配置需要支持负整数
    /// 每次加分时判断 dt 落在的区间，并使用对应的策略 offsetScore
    /// dt=玩家积分-机器人积分
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> TriggerGap {
      get { return triggerGap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventScoreDuelSTG);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventScoreDuelSTG other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (AddStep != other.AddStep) return false;
      if(!baseScore_.Equals(other.baseScore_)) return false;
      if (OfflineScore != other.OfflineScore) return false;
      if(!offsetScore_.Equals(other.offsetScore_)) return false;
      if (OffsetTimes != other.OffsetTimes) return false;
      if (StartTime != other.StartTime) return false;
      if(!triggerGap_.Equals(other.triggerGap_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (AddStep != 0) hash ^= AddStep.GetHashCode();
      hash ^= baseScore_.GetHashCode();
      if (OfflineScore.Length != 0) hash ^= OfflineScore.GetHashCode();
      hash ^= offsetScore_.GetHashCode();
      if (OffsetTimes != 0) hash ^= OffsetTimes.GetHashCode();
      if (StartTime != 0) hash ^= StartTime.GetHashCode();
      hash ^= triggerGap_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (AddStep != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(AddStep);
      }
      baseScore_.WriteTo(output, _repeated_baseScore_codec);
      if (OfflineScore.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(OfflineScore);
      }
      offsetScore_.WriteTo(output, _repeated_offsetScore_codec);
      if (OffsetTimes != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(OffsetTimes);
      }
      if (StartTime != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(StartTime);
      }
      triggerGap_.WriteTo(output, _repeated_triggerGap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (AddStep != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(AddStep);
      }
      baseScore_.WriteTo(ref output, _repeated_baseScore_codec);
      if (OfflineScore.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(OfflineScore);
      }
      offsetScore_.WriteTo(ref output, _repeated_offsetScore_codec);
      if (OffsetTimes != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(OffsetTimes);
      }
      if (StartTime != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(StartTime);
      }
      triggerGap_.WriteTo(ref output, _repeated_triggerGap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (AddStep != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AddStep);
      }
      size += baseScore_.CalculateSize(_repeated_baseScore_codec);
      if (OfflineScore.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OfflineScore);
      }
      size += offsetScore_.CalculateSize(_repeated_offsetScore_codec);
      if (OffsetTimes != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OffsetTimes);
      }
      if (StartTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartTime);
      }
      size += triggerGap_.CalculateSize(_repeated_triggerGap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventScoreDuelSTG other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.AddStep != 0) {
        AddStep = other.AddStep;
      }
      baseScore_.Add(other.baseScore_);
      if (other.OfflineScore.Length != 0) {
        OfflineScore = other.OfflineScore;
      }
      offsetScore_.Add(other.offsetScore_);
      if (other.OffsetTimes != 0) {
        OffsetTimes = other.OffsetTimes;
      }
      if (other.StartTime != 0) {
        StartTime = other.StartTime;
      }
      triggerGap_.Add(other.triggerGap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            AddStep = input.ReadInt32();
            break;
          }
          case 26: {
            baseScore_.AddEntriesFrom(input, _repeated_baseScore_codec);
            break;
          }
          case 34: {
            OfflineScore = input.ReadString();
            break;
          }
          case 42: {
            offsetScore_.AddEntriesFrom(input, _repeated_offsetScore_codec);
            break;
          }
          case 48: {
            OffsetTimes = input.ReadInt32();
            break;
          }
          case 56: {
            StartTime = input.ReadInt32();
            break;
          }
          case 66:
          case 64: {
            triggerGap_.AddEntriesFrom(input, _repeated_triggerGap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            AddStep = input.ReadInt32();
            break;
          }
          case 26: {
            baseScore_.AddEntriesFrom(ref input, _repeated_baseScore_codec);
            break;
          }
          case 34: {
            OfflineScore = input.ReadString();
            break;
          }
          case 42: {
            offsetScore_.AddEntriesFrom(ref input, _repeated_offsetScore_codec);
            break;
          }
          case 48: {
            OffsetTimes = input.ReadInt32();
            break;
          }
          case 56: {
            StartTime = input.ReadInt32();
            break;
          }
          case 66:
          case 64: {
            triggerGap_.AddEntriesFrom(ref input, _repeated_triggerGap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventScoreDuelSTGMapABValue : pb::IMessage<EventScoreDuelSTGMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventScoreDuelSTGMapABValue> _parser = new pb::MessageParser<EventScoreDuelSTGMapABValue>(() => new EventScoreDuelSTGMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventScoreDuelSTGMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventScoreDuelSTGConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventScoreDuelSTGMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventScoreDuelSTGMapABValue(EventScoreDuelSTGMapABValue other) : this() {
      eventScoreDuelSTGMap_ = other.eventScoreDuelSTGMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventScoreDuelSTGMapABValue Clone() {
      return new EventScoreDuelSTGMapABValue(this);
    }

    /// <summary>Field number for the "EventScoreDuelSTGMap" field.</summary>
    public const int EventScoreDuelSTGMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventScoreDuelSTG>.Codec _map_eventScoreDuelSTGMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventScoreDuelSTG>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventScoreDuelSTG.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventScoreDuelSTG> eventScoreDuelSTGMap_ = new pbc::MapField<int, global::fat.rawdata.EventScoreDuelSTG>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventScoreDuelSTG> EventScoreDuelSTGMap {
      get { return eventScoreDuelSTGMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventScoreDuelSTGMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventScoreDuelSTGMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventScoreDuelSTGMap.Equals(other.EventScoreDuelSTGMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventScoreDuelSTGMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventScoreDuelSTGMap_.WriteTo(output, _map_eventScoreDuelSTGMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventScoreDuelSTGMap_.WriteTo(ref output, _map_eventScoreDuelSTGMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventScoreDuelSTGMap_.CalculateSize(_map_eventScoreDuelSTGMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventScoreDuelSTGMapABValue other) {
      if (other == null) {
        return;
      }
      eventScoreDuelSTGMap_.Add(other.eventScoreDuelSTGMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventScoreDuelSTGMap_.AddEntriesFrom(input, _map_eventScoreDuelSTGMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventScoreDuelSTGMap_.AddEntriesFrom(ref input, _map_eventScoreDuelSTGMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventScoreDuelSTGConf : pb::IMessage<EventScoreDuelSTGConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventScoreDuelSTGConf> _parser = new pb::MessageParser<EventScoreDuelSTGConf>(() => new EventScoreDuelSTGConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventScoreDuelSTGConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventScoreDuelSTGConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventScoreDuelSTGConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventScoreDuelSTGConf(EventScoreDuelSTGConf other) : this() {
      eventScoreDuelSTGMap_ = other.eventScoreDuelSTGMap_.Clone();
      eventScoreDuelSTGMapAB_ = other.eventScoreDuelSTGMapAB_.Clone();
      eventScoreDuelSTGMapABPatch_ = other.eventScoreDuelSTGMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventScoreDuelSTGConf Clone() {
      return new EventScoreDuelSTGConf(this);
    }

    /// <summary>Field number for the "EventScoreDuelSTGMap" field.</summary>
    public const int EventScoreDuelSTGMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventScoreDuelSTG>.Codec _map_eventScoreDuelSTGMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventScoreDuelSTG>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventScoreDuelSTG.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventScoreDuelSTG> eventScoreDuelSTGMap_ = new pbc::MapField<int, global::fat.rawdata.EventScoreDuelSTG>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventScoreDuelSTG> EventScoreDuelSTGMap {
      get { return eventScoreDuelSTGMap_; }
    }

    /// <summary>Field number for the "EventScoreDuelSTGMapAB" field.</summary>
    public const int EventScoreDuelSTGMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventScoreDuelSTGMapABValue>.Codec _map_eventScoreDuelSTGMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventScoreDuelSTGMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventScoreDuelSTGMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventScoreDuelSTGMapABValue> eventScoreDuelSTGMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventScoreDuelSTGMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventScoreDuelSTGMapABValue> EventScoreDuelSTGMapAB {
      get { return eventScoreDuelSTGMapAB_; }
    }

    /// <summary>Field number for the "EventScoreDuelSTGMapABPatch" field.</summary>
    public const int EventScoreDuelSTGMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventScoreDuelSTGMapABValue>.Codec _map_eventScoreDuelSTGMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventScoreDuelSTGMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventScoreDuelSTGMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventScoreDuelSTGMapABValue> eventScoreDuelSTGMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventScoreDuelSTGMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventScoreDuelSTGMapABValue> EventScoreDuelSTGMapABPatch {
      get { return eventScoreDuelSTGMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventScoreDuelSTGConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventScoreDuelSTGConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventScoreDuelSTGMap.Equals(other.EventScoreDuelSTGMap)) return false;
      if (!EventScoreDuelSTGMapAB.Equals(other.EventScoreDuelSTGMapAB)) return false;
      if (!EventScoreDuelSTGMapABPatch.Equals(other.EventScoreDuelSTGMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventScoreDuelSTGMap.GetHashCode();
      hash ^= EventScoreDuelSTGMapAB.GetHashCode();
      hash ^= EventScoreDuelSTGMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventScoreDuelSTGMap_.WriteTo(output, _map_eventScoreDuelSTGMap_codec);
      eventScoreDuelSTGMapAB_.WriteTo(output, _map_eventScoreDuelSTGMapAB_codec);
      eventScoreDuelSTGMapABPatch_.WriteTo(output, _map_eventScoreDuelSTGMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventScoreDuelSTGMap_.WriteTo(ref output, _map_eventScoreDuelSTGMap_codec);
      eventScoreDuelSTGMapAB_.WriteTo(ref output, _map_eventScoreDuelSTGMapAB_codec);
      eventScoreDuelSTGMapABPatch_.WriteTo(ref output, _map_eventScoreDuelSTGMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventScoreDuelSTGMap_.CalculateSize(_map_eventScoreDuelSTGMap_codec);
      size += eventScoreDuelSTGMapAB_.CalculateSize(_map_eventScoreDuelSTGMapAB_codec);
      size += eventScoreDuelSTGMapABPatch_.CalculateSize(_map_eventScoreDuelSTGMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventScoreDuelSTGConf other) {
      if (other == null) {
        return;
      }
      eventScoreDuelSTGMap_.Add(other.eventScoreDuelSTGMap_);
      eventScoreDuelSTGMapAB_.Add(other.eventScoreDuelSTGMapAB_);
      eventScoreDuelSTGMapABPatch_.Add(other.eventScoreDuelSTGMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventScoreDuelSTGMap_.AddEntriesFrom(input, _map_eventScoreDuelSTGMap_codec);
            break;
          }
          case 18: {
            eventScoreDuelSTGMapAB_.AddEntriesFrom(input, _map_eventScoreDuelSTGMapAB_codec);
            break;
          }
          case 26: {
            eventScoreDuelSTGMapABPatch_.AddEntriesFrom(input, _map_eventScoreDuelSTGMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventScoreDuelSTGMap_.AddEntriesFrom(ref input, _map_eventScoreDuelSTGMap_codec);
            break;
          }
          case 18: {
            eventScoreDuelSTGMapAB_.AddEntriesFrom(ref input, _map_eventScoreDuelSTGMapAB_codec);
            break;
          }
          case 26: {
            eventScoreDuelSTGMapABPatch_.AddEntriesFrom(ref input, _map_eventScoreDuelSTGMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
