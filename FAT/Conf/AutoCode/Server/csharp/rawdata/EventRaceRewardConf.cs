// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventRaceRewardConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventRaceRewardConf.proto</summary>
  public static partial class EventRaceRewardConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventRaceRewardConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventRaceRewardConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiFyYXdkYXRhL0V2ZW50UmFjZVJld2FyZENvbmYucHJvdG8SB3Jhd2RhdGEi",
            "LQoPRXZlbnRSYWNlUmV3YXJkEgoKAmlkGAEgASgFEg4KBnJld2FyZBgCIAMo",
            "CSLIAQoZRXZlbnRSYWNlUmV3YXJkTWFwQUJWYWx1ZRJWChJFdmVudFJhY2VS",
            "ZXdhcmRNYXAYASADKAsyOi5yYXdkYXRhLkV2ZW50UmFjZVJld2FyZE1hcEFC",
            "VmFsdWUuRXZlbnRSYWNlUmV3YXJkTWFwRW50cnkaUwoXRXZlbnRSYWNlUmV3",
            "YXJkTWFwRW50cnkSCwoDa2V5GAEgASgFEicKBXZhbHVlGAIgASgLMhgucmF3",
            "ZGF0YS5FdmVudFJhY2VSZXdhcmQ6AjgBIrkEChNFdmVudFJhY2VSZXdhcmRD",
            "b25mElAKEkV2ZW50UmFjZVJld2FyZE1hcBgBIAMoCzI0LnJhd2RhdGEuRXZl",
            "bnRSYWNlUmV3YXJkQ29uZi5FdmVudFJhY2VSZXdhcmRNYXBFbnRyeRJUChRF",
            "dmVudFJhY2VSZXdhcmRNYXBBQhgCIAMoCzI2LnJhd2RhdGEuRXZlbnRSYWNl",
            "UmV3YXJkQ29uZi5FdmVudFJhY2VSZXdhcmRNYXBBQkVudHJ5El4KGUV2ZW50",
            "UmFjZVJld2FyZE1hcEFCUGF0Y2gYAyADKAsyOy5yYXdkYXRhLkV2ZW50UmFj",
            "ZVJld2FyZENvbmYuRXZlbnRSYWNlUmV3YXJkTWFwQUJQYXRjaEVudHJ5GlMK",
            "F0V2ZW50UmFjZVJld2FyZE1hcEVudHJ5EgsKA2tleRgBIAEoBRInCgV2YWx1",
            "ZRgCIAEoCzIYLnJhd2RhdGEuRXZlbnRSYWNlUmV3YXJkOgI4ARpfChlFdmVu",
            "dFJhY2VSZXdhcmRNYXBBQkVudHJ5EgsKA2tleRgBIAEoCRIxCgV2YWx1ZRgC",
            "IAEoCzIiLnJhd2RhdGEuRXZlbnRSYWNlUmV3YXJkTWFwQUJWYWx1ZToCOAEa",
            "ZAoeRXZlbnRSYWNlUmV3YXJkTWFwQUJQYXRjaEVudHJ5EgsKA2tleRgBIAEo",
            "CRIxCgV2YWx1ZRgCIAEoCzIiLnJhd2RhdGEuRXZlbnRSYWNlUmV3YXJkTWFw",
            "QUJWYWx1ZToCOAFCPVotZ2l0bGFiLmZ1bnBsdXMuaW8vZmF0L2NvbmYvZ2Vu",
            "L2dvbGFuZy9yYXdkYXRhqgILZmF0LnJhd2RhdGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventRaceReward), global::fat.rawdata.EventRaceReward.Parser, new[]{ "Id", "Reward" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventRaceRewardMapABValue), global::fat.rawdata.EventRaceRewardMapABValue.Parser, new[]{ "EventRaceRewardMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventRaceRewardConf), global::fat.rawdata.EventRaceRewardConf.Parser, new[]{ "EventRaceRewardMap", "EventRaceRewardMapAB", "EventRaceRewardMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventRaceReward",table="EventRaceRewardMap",table_wrapper="EventRaceRewardConf",map="true",map_key_type="int32",data="EventRaceRewardConf")
  /// annotation@ab(table_ab="EventRaceRewardMapAB",table_ab_patch="EventRaceRewardMapABPatch",table_ab_value="EventRaceRewardMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventRaceReward(id="id")
  /// </summary>
  public sealed partial class EventRaceReward : pb::IMessage<EventRaceReward>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventRaceReward> _parser = new pb::MessageParser<EventRaceReward>(() => new EventRaceReward());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventRaceReward> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventRaceRewardConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventRaceReward() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventRaceReward(EventRaceReward other) : this() {
      id_ = other.id_;
      reward_ = other.reward_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventRaceReward Clone() {
      return new EventRaceReward(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// id
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "reward" field.</summary>
    public const int RewardFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_reward_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> reward_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 奖励：    id:数量:计算方式
    /// （ObjBasic.id:数量:计算方式,ObjBasic.id:数量:计算方式）
    /// 参数3计算方式规则如下：
    /// 0 = 数量
    /// 3 = 数量*（等级系数/100）,RoundCoin取整
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Reward {
      get { return reward_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventRaceReward);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventRaceReward other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!reward_.Equals(other.reward_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      hash ^= reward_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      reward_.WriteTo(output, _repeated_reward_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      reward_.WriteTo(ref output, _repeated_reward_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      size += reward_.CalculateSize(_repeated_reward_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventRaceReward other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      reward_.Add(other.reward_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            reward_.AddEntriesFrom(input, _repeated_reward_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            reward_.AddEntriesFrom(ref input, _repeated_reward_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventRaceRewardMapABValue : pb::IMessage<EventRaceRewardMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventRaceRewardMapABValue> _parser = new pb::MessageParser<EventRaceRewardMapABValue>(() => new EventRaceRewardMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventRaceRewardMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventRaceRewardConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventRaceRewardMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventRaceRewardMapABValue(EventRaceRewardMapABValue other) : this() {
      eventRaceRewardMap_ = other.eventRaceRewardMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventRaceRewardMapABValue Clone() {
      return new EventRaceRewardMapABValue(this);
    }

    /// <summary>Field number for the "EventRaceRewardMap" field.</summary>
    public const int EventRaceRewardMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventRaceReward>.Codec _map_eventRaceRewardMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventRaceReward>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventRaceReward.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventRaceReward> eventRaceRewardMap_ = new pbc::MapField<int, global::fat.rawdata.EventRaceReward>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventRaceReward> EventRaceRewardMap {
      get { return eventRaceRewardMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventRaceRewardMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventRaceRewardMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventRaceRewardMap.Equals(other.EventRaceRewardMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventRaceRewardMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventRaceRewardMap_.WriteTo(output, _map_eventRaceRewardMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventRaceRewardMap_.WriteTo(ref output, _map_eventRaceRewardMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventRaceRewardMap_.CalculateSize(_map_eventRaceRewardMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventRaceRewardMapABValue other) {
      if (other == null) {
        return;
      }
      eventRaceRewardMap_.Add(other.eventRaceRewardMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventRaceRewardMap_.AddEntriesFrom(input, _map_eventRaceRewardMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventRaceRewardMap_.AddEntriesFrom(ref input, _map_eventRaceRewardMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventRaceRewardConf : pb::IMessage<EventRaceRewardConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventRaceRewardConf> _parser = new pb::MessageParser<EventRaceRewardConf>(() => new EventRaceRewardConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventRaceRewardConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventRaceRewardConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventRaceRewardConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventRaceRewardConf(EventRaceRewardConf other) : this() {
      eventRaceRewardMap_ = other.eventRaceRewardMap_.Clone();
      eventRaceRewardMapAB_ = other.eventRaceRewardMapAB_.Clone();
      eventRaceRewardMapABPatch_ = other.eventRaceRewardMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventRaceRewardConf Clone() {
      return new EventRaceRewardConf(this);
    }

    /// <summary>Field number for the "EventRaceRewardMap" field.</summary>
    public const int EventRaceRewardMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventRaceReward>.Codec _map_eventRaceRewardMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventRaceReward>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventRaceReward.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventRaceReward> eventRaceRewardMap_ = new pbc::MapField<int, global::fat.rawdata.EventRaceReward>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventRaceReward> EventRaceRewardMap {
      get { return eventRaceRewardMap_; }
    }

    /// <summary>Field number for the "EventRaceRewardMapAB" field.</summary>
    public const int EventRaceRewardMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventRaceRewardMapABValue>.Codec _map_eventRaceRewardMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventRaceRewardMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventRaceRewardMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventRaceRewardMapABValue> eventRaceRewardMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventRaceRewardMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventRaceRewardMapABValue> EventRaceRewardMapAB {
      get { return eventRaceRewardMapAB_; }
    }

    /// <summary>Field number for the "EventRaceRewardMapABPatch" field.</summary>
    public const int EventRaceRewardMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventRaceRewardMapABValue>.Codec _map_eventRaceRewardMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventRaceRewardMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventRaceRewardMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventRaceRewardMapABValue> eventRaceRewardMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventRaceRewardMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventRaceRewardMapABValue> EventRaceRewardMapABPatch {
      get { return eventRaceRewardMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventRaceRewardConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventRaceRewardConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventRaceRewardMap.Equals(other.EventRaceRewardMap)) return false;
      if (!EventRaceRewardMapAB.Equals(other.EventRaceRewardMapAB)) return false;
      if (!EventRaceRewardMapABPatch.Equals(other.EventRaceRewardMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventRaceRewardMap.GetHashCode();
      hash ^= EventRaceRewardMapAB.GetHashCode();
      hash ^= EventRaceRewardMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventRaceRewardMap_.WriteTo(output, _map_eventRaceRewardMap_codec);
      eventRaceRewardMapAB_.WriteTo(output, _map_eventRaceRewardMapAB_codec);
      eventRaceRewardMapABPatch_.WriteTo(output, _map_eventRaceRewardMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventRaceRewardMap_.WriteTo(ref output, _map_eventRaceRewardMap_codec);
      eventRaceRewardMapAB_.WriteTo(ref output, _map_eventRaceRewardMapAB_codec);
      eventRaceRewardMapABPatch_.WriteTo(ref output, _map_eventRaceRewardMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventRaceRewardMap_.CalculateSize(_map_eventRaceRewardMap_codec);
      size += eventRaceRewardMapAB_.CalculateSize(_map_eventRaceRewardMapAB_codec);
      size += eventRaceRewardMapABPatch_.CalculateSize(_map_eventRaceRewardMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventRaceRewardConf other) {
      if (other == null) {
        return;
      }
      eventRaceRewardMap_.Add(other.eventRaceRewardMap_);
      eventRaceRewardMapAB_.Add(other.eventRaceRewardMapAB_);
      eventRaceRewardMapABPatch_.Add(other.eventRaceRewardMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventRaceRewardMap_.AddEntriesFrom(input, _map_eventRaceRewardMap_codec);
            break;
          }
          case 18: {
            eventRaceRewardMapAB_.AddEntriesFrom(input, _map_eventRaceRewardMapAB_codec);
            break;
          }
          case 26: {
            eventRaceRewardMapABPatch_.AddEntriesFrom(input, _map_eventRaceRewardMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventRaceRewardMap_.AddEntriesFrom(ref input, _map_eventRaceRewardMap_codec);
            break;
          }
          case 18: {
            eventRaceRewardMapAB_.AddEntriesFrom(ref input, _map_eventRaceRewardMapAB_codec);
            break;
          }
          case 26: {
            eventRaceRewardMapABPatch_.AddEntriesFrom(ref input, _map_eventRaceRewardMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
