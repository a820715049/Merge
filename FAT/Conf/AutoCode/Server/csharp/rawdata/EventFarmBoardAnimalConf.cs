// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventFarmBoardAnimalConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventFarmBoardAnimalConf.proto</summary>
  public static partial class EventFarmBoardAnimalConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventFarmBoardAnimalConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventFarmBoardAnimalConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiZyYXdkYXRhL0V2ZW50RmFybUJvYXJkQW5pbWFsQ29uZi5wcm90bxIHcmF3",
            "ZGF0YSJCChRFdmVudEZhcm1Cb2FyZEFuaW1hbBIKCgJpZBgBIAEoBRIOCgZp",
            "dGVtSWQYAyABKAUSDgoGb3V0cHV0GAIgAygFIuYBCh5FdmVudEZhcm1Cb2Fy",
            "ZEFuaW1hbE1hcEFCVmFsdWUSZQoXRXZlbnRGYXJtQm9hcmRBbmltYWxNYXAY",
            "ASADKAsyRC5yYXdkYXRhLkV2ZW50RmFybUJvYXJkQW5pbWFsTWFwQUJWYWx1",
            "ZS5FdmVudEZhcm1Cb2FyZEFuaW1hbE1hcEVudHJ5Gl0KHEV2ZW50RmFybUJv",
            "YXJkQW5pbWFsTWFwRW50cnkSCwoDa2V5GAEgASgFEiwKBXZhbHVlGAIgASgL",
            "Mh0ucmF3ZGF0YS5FdmVudEZhcm1Cb2FyZEFuaW1hbDoCOAEiiQUKGEV2ZW50",
            "RmFybUJvYXJkQW5pbWFsQ29uZhJfChdFdmVudEZhcm1Cb2FyZEFuaW1hbE1h",
            "cBgBIAMoCzI+LnJhd2RhdGEuRXZlbnRGYXJtQm9hcmRBbmltYWxDb25mLkV2",
            "ZW50RmFybUJvYXJkQW5pbWFsTWFwRW50cnkSYwoZRXZlbnRGYXJtQm9hcmRB",
            "bmltYWxNYXBBQhgCIAMoCzJALnJhd2RhdGEuRXZlbnRGYXJtQm9hcmRBbmlt",
            "YWxDb25mLkV2ZW50RmFybUJvYXJkQW5pbWFsTWFwQUJFbnRyeRJtCh5FdmVu",
            "dEZhcm1Cb2FyZEFuaW1hbE1hcEFCUGF0Y2gYAyADKAsyRS5yYXdkYXRhLkV2",
            "ZW50RmFybUJvYXJkQW5pbWFsQ29uZi5FdmVudEZhcm1Cb2FyZEFuaW1hbE1h",
            "cEFCUGF0Y2hFbnRyeRpdChxFdmVudEZhcm1Cb2FyZEFuaW1hbE1hcEVudHJ5",
            "EgsKA2tleRgBIAEoBRIsCgV2YWx1ZRgCIAEoCzIdLnJhd2RhdGEuRXZlbnRG",
            "YXJtQm9hcmRBbmltYWw6AjgBGmkKHkV2ZW50RmFybUJvYXJkQW5pbWFsTWFw",
            "QUJFbnRyeRILCgNrZXkYASABKAkSNgoFdmFsdWUYAiABKAsyJy5yYXdkYXRh",
            "LkV2ZW50RmFybUJvYXJkQW5pbWFsTWFwQUJWYWx1ZToCOAEabgojRXZlbnRG",
            "YXJtQm9hcmRBbmltYWxNYXBBQlBhdGNoRW50cnkSCwoDa2V5GAEgASgJEjYK",
            "BXZhbHVlGAIgASgLMicucmF3ZGF0YS5FdmVudEZhcm1Cb2FyZEFuaW1hbE1h",
            "cEFCVmFsdWU6AjgBQj1aLWdpdGxhYi5mdW5wbHVzLmlvL2ZhdC9jb25mL2dl",
            "bi9nb2xhbmcvcmF3ZGF0YaoCC2ZhdC5yYXdkYXRhYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventFarmBoardAnimal), global::fat.rawdata.EventFarmBoardAnimal.Parser, new[]{ "Id", "ItemId", "Output" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventFarmBoardAnimalMapABValue), global::fat.rawdata.EventFarmBoardAnimalMapABValue.Parser, new[]{ "EventFarmBoardAnimalMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventFarmBoardAnimalConf), global::fat.rawdata.EventFarmBoardAnimalConf.Parser, new[]{ "EventFarmBoardAnimalMap", "EventFarmBoardAnimalMapAB", "EventFarmBoardAnimalMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventFarmBoardAnimal",table="EventFarmBoardAnimalMap",table_wrapper="EventFarmBoardAnimalConf",map="true",map_key_type="int32",data="EventFarmBoardAnimalConf")
  /// annotation@ab(table_ab="EventFarmBoardAnimalMapAB",table_ab_patch="EventFarmBoardAnimalMapABPatch",table_ab_value="EventFarmBoardAnimalMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventFarmBoardAnimal(id="id")
  /// </summary>
  public sealed partial class EventFarmBoardAnimal : pb::IMessage<EventFarmBoardAnimal>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventFarmBoardAnimal> _parser = new pb::MessageParser<EventFarmBoardAnimal>(() => new EventFarmBoardAnimal());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventFarmBoardAnimal> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventFarmBoardAnimalConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventFarmBoardAnimal() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventFarmBoardAnimal(EventFarmBoardAnimal other) : this() {
      id_ = other.id_;
      itemId_ = other.itemId_;
      output_ = other.output_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventFarmBoardAnimal Clone() {
      return new EventFarmBoardAnimal(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// id
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "itemId" field.</summary>
    public const int ItemIdFieldNumber = 3;
    private int itemId_;
    /// <summary>
    /// 被吃的棋子 id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ItemId {
      get { return itemId_; }
      set {
        itemId_ = value;
      }
    }

    /// <summary>Field number for the "output" field.</summary>
    public const int OutputFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_output_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> output_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// output棋子
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Output {
      get { return output_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventFarmBoardAnimal);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventFarmBoardAnimal other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ItemId != other.ItemId) return false;
      if(!output_.Equals(other.output_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (ItemId != 0) hash ^= ItemId.GetHashCode();
      hash ^= output_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      output_.WriteTo(output, _repeated_output_codec);
      if (ItemId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ItemId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      output_.WriteTo(ref output, _repeated_output_codec);
      if (ItemId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ItemId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (ItemId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemId);
      }
      size += output_.CalculateSize(_repeated_output_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventFarmBoardAnimal other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.ItemId != 0) {
        ItemId = other.ItemId;
      }
      output_.Add(other.output_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            output_.AddEntriesFrom(input, _repeated_output_codec);
            break;
          }
          case 24: {
            ItemId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            output_.AddEntriesFrom(ref input, _repeated_output_codec);
            break;
          }
          case 24: {
            ItemId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventFarmBoardAnimalMapABValue : pb::IMessage<EventFarmBoardAnimalMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventFarmBoardAnimalMapABValue> _parser = new pb::MessageParser<EventFarmBoardAnimalMapABValue>(() => new EventFarmBoardAnimalMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventFarmBoardAnimalMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventFarmBoardAnimalConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventFarmBoardAnimalMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventFarmBoardAnimalMapABValue(EventFarmBoardAnimalMapABValue other) : this() {
      eventFarmBoardAnimalMap_ = other.eventFarmBoardAnimalMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventFarmBoardAnimalMapABValue Clone() {
      return new EventFarmBoardAnimalMapABValue(this);
    }

    /// <summary>Field number for the "EventFarmBoardAnimalMap" field.</summary>
    public const int EventFarmBoardAnimalMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventFarmBoardAnimal>.Codec _map_eventFarmBoardAnimalMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventFarmBoardAnimal>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventFarmBoardAnimal.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventFarmBoardAnimal> eventFarmBoardAnimalMap_ = new pbc::MapField<int, global::fat.rawdata.EventFarmBoardAnimal>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventFarmBoardAnimal> EventFarmBoardAnimalMap {
      get { return eventFarmBoardAnimalMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventFarmBoardAnimalMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventFarmBoardAnimalMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventFarmBoardAnimalMap.Equals(other.EventFarmBoardAnimalMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventFarmBoardAnimalMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventFarmBoardAnimalMap_.WriteTo(output, _map_eventFarmBoardAnimalMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventFarmBoardAnimalMap_.WriteTo(ref output, _map_eventFarmBoardAnimalMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventFarmBoardAnimalMap_.CalculateSize(_map_eventFarmBoardAnimalMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventFarmBoardAnimalMapABValue other) {
      if (other == null) {
        return;
      }
      eventFarmBoardAnimalMap_.Add(other.eventFarmBoardAnimalMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventFarmBoardAnimalMap_.AddEntriesFrom(input, _map_eventFarmBoardAnimalMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventFarmBoardAnimalMap_.AddEntriesFrom(ref input, _map_eventFarmBoardAnimalMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventFarmBoardAnimalConf : pb::IMessage<EventFarmBoardAnimalConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventFarmBoardAnimalConf> _parser = new pb::MessageParser<EventFarmBoardAnimalConf>(() => new EventFarmBoardAnimalConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventFarmBoardAnimalConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventFarmBoardAnimalConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventFarmBoardAnimalConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventFarmBoardAnimalConf(EventFarmBoardAnimalConf other) : this() {
      eventFarmBoardAnimalMap_ = other.eventFarmBoardAnimalMap_.Clone();
      eventFarmBoardAnimalMapAB_ = other.eventFarmBoardAnimalMapAB_.Clone();
      eventFarmBoardAnimalMapABPatch_ = other.eventFarmBoardAnimalMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventFarmBoardAnimalConf Clone() {
      return new EventFarmBoardAnimalConf(this);
    }

    /// <summary>Field number for the "EventFarmBoardAnimalMap" field.</summary>
    public const int EventFarmBoardAnimalMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventFarmBoardAnimal>.Codec _map_eventFarmBoardAnimalMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventFarmBoardAnimal>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventFarmBoardAnimal.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventFarmBoardAnimal> eventFarmBoardAnimalMap_ = new pbc::MapField<int, global::fat.rawdata.EventFarmBoardAnimal>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventFarmBoardAnimal> EventFarmBoardAnimalMap {
      get { return eventFarmBoardAnimalMap_; }
    }

    /// <summary>Field number for the "EventFarmBoardAnimalMapAB" field.</summary>
    public const int EventFarmBoardAnimalMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventFarmBoardAnimalMapABValue>.Codec _map_eventFarmBoardAnimalMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventFarmBoardAnimalMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventFarmBoardAnimalMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventFarmBoardAnimalMapABValue> eventFarmBoardAnimalMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventFarmBoardAnimalMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventFarmBoardAnimalMapABValue> EventFarmBoardAnimalMapAB {
      get { return eventFarmBoardAnimalMapAB_; }
    }

    /// <summary>Field number for the "EventFarmBoardAnimalMapABPatch" field.</summary>
    public const int EventFarmBoardAnimalMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventFarmBoardAnimalMapABValue>.Codec _map_eventFarmBoardAnimalMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventFarmBoardAnimalMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventFarmBoardAnimalMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventFarmBoardAnimalMapABValue> eventFarmBoardAnimalMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventFarmBoardAnimalMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventFarmBoardAnimalMapABValue> EventFarmBoardAnimalMapABPatch {
      get { return eventFarmBoardAnimalMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventFarmBoardAnimalConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventFarmBoardAnimalConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventFarmBoardAnimalMap.Equals(other.EventFarmBoardAnimalMap)) return false;
      if (!EventFarmBoardAnimalMapAB.Equals(other.EventFarmBoardAnimalMapAB)) return false;
      if (!EventFarmBoardAnimalMapABPatch.Equals(other.EventFarmBoardAnimalMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventFarmBoardAnimalMap.GetHashCode();
      hash ^= EventFarmBoardAnimalMapAB.GetHashCode();
      hash ^= EventFarmBoardAnimalMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventFarmBoardAnimalMap_.WriteTo(output, _map_eventFarmBoardAnimalMap_codec);
      eventFarmBoardAnimalMapAB_.WriteTo(output, _map_eventFarmBoardAnimalMapAB_codec);
      eventFarmBoardAnimalMapABPatch_.WriteTo(output, _map_eventFarmBoardAnimalMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventFarmBoardAnimalMap_.WriteTo(ref output, _map_eventFarmBoardAnimalMap_codec);
      eventFarmBoardAnimalMapAB_.WriteTo(ref output, _map_eventFarmBoardAnimalMapAB_codec);
      eventFarmBoardAnimalMapABPatch_.WriteTo(ref output, _map_eventFarmBoardAnimalMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventFarmBoardAnimalMap_.CalculateSize(_map_eventFarmBoardAnimalMap_codec);
      size += eventFarmBoardAnimalMapAB_.CalculateSize(_map_eventFarmBoardAnimalMapAB_codec);
      size += eventFarmBoardAnimalMapABPatch_.CalculateSize(_map_eventFarmBoardAnimalMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventFarmBoardAnimalConf other) {
      if (other == null) {
        return;
      }
      eventFarmBoardAnimalMap_.Add(other.eventFarmBoardAnimalMap_);
      eventFarmBoardAnimalMapAB_.Add(other.eventFarmBoardAnimalMapAB_);
      eventFarmBoardAnimalMapABPatch_.Add(other.eventFarmBoardAnimalMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventFarmBoardAnimalMap_.AddEntriesFrom(input, _map_eventFarmBoardAnimalMap_codec);
            break;
          }
          case 18: {
            eventFarmBoardAnimalMapAB_.AddEntriesFrom(input, _map_eventFarmBoardAnimalMapAB_codec);
            break;
          }
          case 26: {
            eventFarmBoardAnimalMapABPatch_.AddEntriesFrom(input, _map_eventFarmBoardAnimalMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventFarmBoardAnimalMap_.AddEntriesFrom(ref input, _map_eventFarmBoardAnimalMap_codec);
            break;
          }
          case 18: {
            eventFarmBoardAnimalMapAB_.AddEntriesFrom(ref input, _map_eventFarmBoardAnimalMapAB_codec);
            break;
          }
          case 26: {
            eventFarmBoardAnimalMapABPatch_.AddEntriesFrom(ref input, _map_eventFarmBoardAnimalMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
