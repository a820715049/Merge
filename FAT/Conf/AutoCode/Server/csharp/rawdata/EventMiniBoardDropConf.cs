// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventMiniBoardDropConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventMiniBoardDropConf.proto</summary>
  public static partial class EventMiniBoardDropConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventMiniBoardDropConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventMiniBoardDropConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiRyYXdkYXRhL0V2ZW50TWluaUJvYXJkRHJvcENvbmYucHJvdG8SB3Jhd2Rh",
            "dGEiXQoSRXZlbnRNaW5pQm9hcmREcm9wEgoKAmlkGAEgASgFEhMKC291dHB1",
            "dHNGb3VyGAQgAygJEhIKCm91dHB1dHNPbmUYAiADKAkSEgoKb3V0cHV0c1R3",
            "bxgDIAMoCSLaAQocRXZlbnRNaW5pQm9hcmREcm9wTWFwQUJWYWx1ZRJfChVF",
            "dmVudE1pbmlCb2FyZERyb3BNYXAYASADKAsyQC5yYXdkYXRhLkV2ZW50TWlu",
            "aUJvYXJkRHJvcE1hcEFCVmFsdWUuRXZlbnRNaW5pQm9hcmREcm9wTWFwRW50",
            "cnkaWQoaRXZlbnRNaW5pQm9hcmREcm9wTWFwRW50cnkSCwoDa2V5GAEgASgF",
            "EioKBXZhbHVlGAIgASgLMhsucmF3ZGF0YS5FdmVudE1pbmlCb2FyZERyb3A6",
            "AjgBIukEChZFdmVudE1pbmlCb2FyZERyb3BDb25mElkKFUV2ZW50TWluaUJv",
            "YXJkRHJvcE1hcBgBIAMoCzI6LnJhd2RhdGEuRXZlbnRNaW5pQm9hcmREcm9w",
            "Q29uZi5FdmVudE1pbmlCb2FyZERyb3BNYXBFbnRyeRJdChdFdmVudE1pbmlC",
            "b2FyZERyb3BNYXBBQhgCIAMoCzI8LnJhd2RhdGEuRXZlbnRNaW5pQm9hcmRE",
            "cm9wQ29uZi5FdmVudE1pbmlCb2FyZERyb3BNYXBBQkVudHJ5EmcKHEV2ZW50",
            "TWluaUJvYXJkRHJvcE1hcEFCUGF0Y2gYAyADKAsyQS5yYXdkYXRhLkV2ZW50",
            "TWluaUJvYXJkRHJvcENvbmYuRXZlbnRNaW5pQm9hcmREcm9wTWFwQUJQYXRj",
            "aEVudHJ5GlkKGkV2ZW50TWluaUJvYXJkRHJvcE1hcEVudHJ5EgsKA2tleRgB",
            "IAEoBRIqCgV2YWx1ZRgCIAEoCzIbLnJhd2RhdGEuRXZlbnRNaW5pQm9hcmRE",
            "cm9wOgI4ARplChxFdmVudE1pbmlCb2FyZERyb3BNYXBBQkVudHJ5EgsKA2tl",
            "eRgBIAEoCRI0CgV2YWx1ZRgCIAEoCzIlLnJhd2RhdGEuRXZlbnRNaW5pQm9h",
            "cmREcm9wTWFwQUJWYWx1ZToCOAEaagohRXZlbnRNaW5pQm9hcmREcm9wTWFw",
            "QUJQYXRjaEVudHJ5EgsKA2tleRgBIAEoCRI0CgV2YWx1ZRgCIAEoCzIlLnJh",
            "d2RhdGEuRXZlbnRNaW5pQm9hcmREcm9wTWFwQUJWYWx1ZToCOAFCPVotZ2l0",
            "bGFiLmZ1bnBsdXMuaW8vZmF0L2NvbmYvZ2VuL2dvbGFuZy9yYXdkYXRhqgIL",
            "ZmF0LnJhd2RhdGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventMiniBoardDrop), global::fat.rawdata.EventMiniBoardDrop.Parser, new[]{ "Id", "OutputsFour", "OutputsOne", "OutputsTwo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventMiniBoardDropMapABValue), global::fat.rawdata.EventMiniBoardDropMapABValue.Parser, new[]{ "EventMiniBoardDropMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventMiniBoardDropConf), global::fat.rawdata.EventMiniBoardDropConf.Parser, new[]{ "EventMiniBoardDropMap", "EventMiniBoardDropMapAB", "EventMiniBoardDropMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventMiniBoardDrop",table="EventMiniBoardDropMap",table_wrapper="EventMiniBoardDropConf",map="true",map_key_type="int32",data="EventMiniBoardDropConf")
  /// annotation@ab(table_ab="EventMiniBoardDropMapAB",table_ab_patch="EventMiniBoardDropMapABPatch",table_ab_value="EventMiniBoardDropMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventMiniBoardDrop(id="id")
  /// </summary>
  public sealed partial class EventMiniBoardDrop : pb::IMessage<EventMiniBoardDrop>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventMiniBoardDrop> _parser = new pb::MessageParser<EventMiniBoardDrop>(() => new EventMiniBoardDrop());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventMiniBoardDrop> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventMiniBoardDropConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMiniBoardDrop() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMiniBoardDrop(EventMiniBoardDrop other) : this() {
      id_ = other.id_;
      outputsFour_ = other.outputsFour_.Clone();
      outputsOne_ = other.outputsOne_.Clone();
      outputsTwo_ = other.outputsTwo_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMiniBoardDrop Clone() {
      return new EventMiniBoardDrop(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// levelID
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "outputsFour" field.</summary>
    public const int OutputsFourFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_outputsFour_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> outputsFour_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 耗体4产出棋子
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> OutputsFour {
      get { return outputsFour_; }
    }

    /// <summary>Field number for the "outputsOne" field.</summary>
    public const int OutputsOneFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_outputsOne_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> outputsOne_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 耗体1产出棋子
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> OutputsOne {
      get { return outputsOne_; }
    }

    /// <summary>Field number for the "outputsTwo" field.</summary>
    public const int OutputsTwoFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_outputsTwo_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> outputsTwo_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 耗体2产出棋子
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> OutputsTwo {
      get { return outputsTwo_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventMiniBoardDrop);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventMiniBoardDrop other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!outputsFour_.Equals(other.outputsFour_)) return false;
      if(!outputsOne_.Equals(other.outputsOne_)) return false;
      if(!outputsTwo_.Equals(other.outputsTwo_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      hash ^= outputsFour_.GetHashCode();
      hash ^= outputsOne_.GetHashCode();
      hash ^= outputsTwo_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      outputsOne_.WriteTo(output, _repeated_outputsOne_codec);
      outputsTwo_.WriteTo(output, _repeated_outputsTwo_codec);
      outputsFour_.WriteTo(output, _repeated_outputsFour_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      outputsOne_.WriteTo(ref output, _repeated_outputsOne_codec);
      outputsTwo_.WriteTo(ref output, _repeated_outputsTwo_codec);
      outputsFour_.WriteTo(ref output, _repeated_outputsFour_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      size += outputsFour_.CalculateSize(_repeated_outputsFour_codec);
      size += outputsOne_.CalculateSize(_repeated_outputsOne_codec);
      size += outputsTwo_.CalculateSize(_repeated_outputsTwo_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventMiniBoardDrop other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      outputsFour_.Add(other.outputsFour_);
      outputsOne_.Add(other.outputsOne_);
      outputsTwo_.Add(other.outputsTwo_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            outputsOne_.AddEntriesFrom(input, _repeated_outputsOne_codec);
            break;
          }
          case 26: {
            outputsTwo_.AddEntriesFrom(input, _repeated_outputsTwo_codec);
            break;
          }
          case 34: {
            outputsFour_.AddEntriesFrom(input, _repeated_outputsFour_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            outputsOne_.AddEntriesFrom(ref input, _repeated_outputsOne_codec);
            break;
          }
          case 26: {
            outputsTwo_.AddEntriesFrom(ref input, _repeated_outputsTwo_codec);
            break;
          }
          case 34: {
            outputsFour_.AddEntriesFrom(ref input, _repeated_outputsFour_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventMiniBoardDropMapABValue : pb::IMessage<EventMiniBoardDropMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventMiniBoardDropMapABValue> _parser = new pb::MessageParser<EventMiniBoardDropMapABValue>(() => new EventMiniBoardDropMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventMiniBoardDropMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventMiniBoardDropConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMiniBoardDropMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMiniBoardDropMapABValue(EventMiniBoardDropMapABValue other) : this() {
      eventMiniBoardDropMap_ = other.eventMiniBoardDropMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMiniBoardDropMapABValue Clone() {
      return new EventMiniBoardDropMapABValue(this);
    }

    /// <summary>Field number for the "EventMiniBoardDropMap" field.</summary>
    public const int EventMiniBoardDropMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventMiniBoardDrop>.Codec _map_eventMiniBoardDropMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventMiniBoardDrop>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventMiniBoardDrop.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventMiniBoardDrop> eventMiniBoardDropMap_ = new pbc::MapField<int, global::fat.rawdata.EventMiniBoardDrop>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventMiniBoardDrop> EventMiniBoardDropMap {
      get { return eventMiniBoardDropMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventMiniBoardDropMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventMiniBoardDropMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventMiniBoardDropMap.Equals(other.EventMiniBoardDropMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventMiniBoardDropMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventMiniBoardDropMap_.WriteTo(output, _map_eventMiniBoardDropMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventMiniBoardDropMap_.WriteTo(ref output, _map_eventMiniBoardDropMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventMiniBoardDropMap_.CalculateSize(_map_eventMiniBoardDropMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventMiniBoardDropMapABValue other) {
      if (other == null) {
        return;
      }
      eventMiniBoardDropMap_.Add(other.eventMiniBoardDropMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventMiniBoardDropMap_.AddEntriesFrom(input, _map_eventMiniBoardDropMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventMiniBoardDropMap_.AddEntriesFrom(ref input, _map_eventMiniBoardDropMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventMiniBoardDropConf : pb::IMessage<EventMiniBoardDropConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventMiniBoardDropConf> _parser = new pb::MessageParser<EventMiniBoardDropConf>(() => new EventMiniBoardDropConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventMiniBoardDropConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventMiniBoardDropConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMiniBoardDropConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMiniBoardDropConf(EventMiniBoardDropConf other) : this() {
      eventMiniBoardDropMap_ = other.eventMiniBoardDropMap_.Clone();
      eventMiniBoardDropMapAB_ = other.eventMiniBoardDropMapAB_.Clone();
      eventMiniBoardDropMapABPatch_ = other.eventMiniBoardDropMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMiniBoardDropConf Clone() {
      return new EventMiniBoardDropConf(this);
    }

    /// <summary>Field number for the "EventMiniBoardDropMap" field.</summary>
    public const int EventMiniBoardDropMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventMiniBoardDrop>.Codec _map_eventMiniBoardDropMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventMiniBoardDrop>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventMiniBoardDrop.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventMiniBoardDrop> eventMiniBoardDropMap_ = new pbc::MapField<int, global::fat.rawdata.EventMiniBoardDrop>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventMiniBoardDrop> EventMiniBoardDropMap {
      get { return eventMiniBoardDropMap_; }
    }

    /// <summary>Field number for the "EventMiniBoardDropMapAB" field.</summary>
    public const int EventMiniBoardDropMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventMiniBoardDropMapABValue>.Codec _map_eventMiniBoardDropMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventMiniBoardDropMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventMiniBoardDropMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventMiniBoardDropMapABValue> eventMiniBoardDropMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventMiniBoardDropMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventMiniBoardDropMapABValue> EventMiniBoardDropMapAB {
      get { return eventMiniBoardDropMapAB_; }
    }

    /// <summary>Field number for the "EventMiniBoardDropMapABPatch" field.</summary>
    public const int EventMiniBoardDropMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventMiniBoardDropMapABValue>.Codec _map_eventMiniBoardDropMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventMiniBoardDropMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventMiniBoardDropMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventMiniBoardDropMapABValue> eventMiniBoardDropMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventMiniBoardDropMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventMiniBoardDropMapABValue> EventMiniBoardDropMapABPatch {
      get { return eventMiniBoardDropMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventMiniBoardDropConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventMiniBoardDropConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventMiniBoardDropMap.Equals(other.EventMiniBoardDropMap)) return false;
      if (!EventMiniBoardDropMapAB.Equals(other.EventMiniBoardDropMapAB)) return false;
      if (!EventMiniBoardDropMapABPatch.Equals(other.EventMiniBoardDropMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventMiniBoardDropMap.GetHashCode();
      hash ^= EventMiniBoardDropMapAB.GetHashCode();
      hash ^= EventMiniBoardDropMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventMiniBoardDropMap_.WriteTo(output, _map_eventMiniBoardDropMap_codec);
      eventMiniBoardDropMapAB_.WriteTo(output, _map_eventMiniBoardDropMapAB_codec);
      eventMiniBoardDropMapABPatch_.WriteTo(output, _map_eventMiniBoardDropMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventMiniBoardDropMap_.WriteTo(ref output, _map_eventMiniBoardDropMap_codec);
      eventMiniBoardDropMapAB_.WriteTo(ref output, _map_eventMiniBoardDropMapAB_codec);
      eventMiniBoardDropMapABPatch_.WriteTo(ref output, _map_eventMiniBoardDropMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventMiniBoardDropMap_.CalculateSize(_map_eventMiniBoardDropMap_codec);
      size += eventMiniBoardDropMapAB_.CalculateSize(_map_eventMiniBoardDropMapAB_codec);
      size += eventMiniBoardDropMapABPatch_.CalculateSize(_map_eventMiniBoardDropMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventMiniBoardDropConf other) {
      if (other == null) {
        return;
      }
      eventMiniBoardDropMap_.Add(other.eventMiniBoardDropMap_);
      eventMiniBoardDropMapAB_.Add(other.eventMiniBoardDropMapAB_);
      eventMiniBoardDropMapABPatch_.Add(other.eventMiniBoardDropMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventMiniBoardDropMap_.AddEntriesFrom(input, _map_eventMiniBoardDropMap_codec);
            break;
          }
          case 18: {
            eventMiniBoardDropMapAB_.AddEntriesFrom(input, _map_eventMiniBoardDropMapAB_codec);
            break;
          }
          case 26: {
            eventMiniBoardDropMapABPatch_.AddEntriesFrom(input, _map_eventMiniBoardDropMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventMiniBoardDropMap_.AddEntriesFrom(ref input, _map_eventMiniBoardDropMap_codec);
            break;
          }
          case 18: {
            eventMiniBoardDropMapAB_.AddEntriesFrom(ref input, _map_eventMiniBoardDropMapAB_codec);
            break;
          }
          case 26: {
            eventMiniBoardDropMapABPatch_.AddEntriesFrom(ref input, _map_eventMiniBoardDropMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
