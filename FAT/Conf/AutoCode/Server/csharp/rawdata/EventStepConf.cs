// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventStepConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventStepConf.proto</summary>
  public static partial class EventStepConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventStepConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventStepConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChtyYXdkYXRhL0V2ZW50U3RlcENvbmYucHJvdG8SB3Jhd2RhdGEigQMKCUV2",
            "ZW50U3RlcBIKCgJpZBgBIAEoBRIPCgdib2FyZElkGAIgASgFEhUKDWNvbXBs",
            "ZXRlVGhlbWUYDiABKAUSDAoEY29zdBgDIAEoBRIVCg1kZWNvcmF0ZVNjb3Jl",
            "GA0gASgFEhIKCmV2ZW50VGhlbWUYBCABKAUSOAoLZXhwaXJlUG9wdXAYBSAD",
            "KAsyIy5yYXdkYXRhLkV2ZW50U3RlcC5FeHBpcmVQb3B1cEVudHJ5Eg8KB2dy",
            "YWRlSWQYDyABKAUSFwoPbWlsZXN0b25lUmV3YXJkGAYgAygJEgwKBG5hbWUY",
            "ByABKAkSEwoLb3JkZXJQcmVmYWIYCCABKAkSEgoKcmFuZG9tZXJJZBgJIAEo",
            "BRIUCgxyZWN5Y2xlVGhlbWUYDCABKAUSEgoKcmV3YXJkSWNvbhgKIAEoCRIO",
            "CgZ0YXNrSWQYCyADKAUaMgoQRXhwaXJlUG9wdXBFbnRyeRILCgNrZXkYASAB",
            "KAUSDQoFdmFsdWUYAiABKAk6AjgBIqQBChNFdmVudFN0ZXBNYXBBQlZhbHVl",
            "EkQKDEV2ZW50U3RlcE1hcBgBIAMoCzIuLnJhd2RhdGEuRXZlbnRTdGVwTWFw",
            "QUJWYWx1ZS5FdmVudFN0ZXBNYXBFbnRyeRpHChFFdmVudFN0ZXBNYXBFbnRy",
            "eRILCgNrZXkYASABKAUSIQoFdmFsdWUYAiABKAsyEi5yYXdkYXRhLkV2ZW50",
            "U3RlcDoCOAEi2QMKDUV2ZW50U3RlcENvbmYSPgoMRXZlbnRTdGVwTWFwGAEg",
            "AygLMigucmF3ZGF0YS5FdmVudFN0ZXBDb25mLkV2ZW50U3RlcE1hcEVudHJ5",
            "EkIKDkV2ZW50U3RlcE1hcEFCGAIgAygLMioucmF3ZGF0YS5FdmVudFN0ZXBD",
            "b25mLkV2ZW50U3RlcE1hcEFCRW50cnkSTAoTRXZlbnRTdGVwTWFwQUJQYXRj",
            "aBgDIAMoCzIvLnJhd2RhdGEuRXZlbnRTdGVwQ29uZi5FdmVudFN0ZXBNYXBB",
            "QlBhdGNoRW50cnkaRwoRRXZlbnRTdGVwTWFwRW50cnkSCwoDa2V5GAEgASgF",
            "EiEKBXZhbHVlGAIgASgLMhIucmF3ZGF0YS5FdmVudFN0ZXA6AjgBGlMKE0V2",
            "ZW50U3RlcE1hcEFCRW50cnkSCwoDa2V5GAEgASgJEisKBXZhbHVlGAIgASgL",
            "MhwucmF3ZGF0YS5FdmVudFN0ZXBNYXBBQlZhbHVlOgI4ARpYChhFdmVudFN0",
            "ZXBNYXBBQlBhdGNoRW50cnkSCwoDa2V5GAEgASgJEisKBXZhbHVlGAIgASgL",
            "MhwucmF3ZGF0YS5FdmVudFN0ZXBNYXBBQlZhbHVlOgI4AUI9Wi1naXRsYWIu",
            "ZnVucGx1cy5pby9mYXQvY29uZi9nZW4vZ29sYW5nL3Jhd2RhdGGqAgtmYXQu",
            "cmF3ZGF0YWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventStep), global::fat.rawdata.EventStep.Parser, new[]{ "Id", "BoardId", "CompleteTheme", "Cost", "DecorateScore", "EventTheme", "ExpirePopup", "GradeId", "MilestoneReward", "Name", "OrderPrefab", "RandomerId", "RecycleTheme", "RewardIcon", "TaskId" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventStepMapABValue), global::fat.rawdata.EventStepMapABValue.Parser, new[]{ "EventStepMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventStepConf), global::fat.rawdata.EventStepConf.Parser, new[]{ "EventStepMap", "EventStepMapAB", "EventStepMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventStep",table="EventStepMap",table_wrapper="EventStepConf",map="true",map_key_type="int32",data="EventStepConf")
  /// annotation@ab(table_ab="EventStepMapAB",table_ab_patch="EventStepMapABPatch",table_ab_value="EventStepMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventStep(id="id")
  /// </summary>
  public sealed partial class EventStep : pb::IMessage<EventStep>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventStep> _parser = new pb::MessageParser<EventStep>(() => new EventStep());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventStep> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventStepConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventStep() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventStep(EventStep other) : this() {
      id_ = other.id_;
      boardId_ = other.boardId_;
      completeTheme_ = other.completeTheme_;
      cost_ = other.cost_;
      decorateScore_ = other.decorateScore_;
      eventTheme_ = other.eventTheme_;
      expirePopup_ = other.expirePopup_.Clone();
      gradeId_ = other.gradeId_;
      milestoneReward_ = other.milestoneReward_.Clone();
      name_ = other.name_;
      orderPrefab_ = other.orderPrefab_;
      randomerId_ = other.randomerId_;
      recycleTheme_ = other.recycleTheme_;
      rewardIcon_ = other.rewardIcon_;
      taskId_ = other.taskId_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventStep Clone() {
      return new EventStep(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 活动ID
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "boardId" field.</summary>
    public const int BoardIdFieldNumber = 2;
    private int boardId_;
    /// <summary>
    /// 适用棋盘
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BoardId {
      get { return boardId_; }
      set {
        boardId_ = value;
      }
    }

    /// <summary>Field number for the "completeTheme" field.</summary>
    public const int CompleteThemeFieldNumber = 14;
    private int completeTheme_;
    /// <summary>
    /// 完成
    /// 活动弹板ID
    /// （EventTheme.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CompleteTheme {
      get { return completeTheme_; }
      set {
        completeTheme_ = value;
      }
    }

    /// <summary>Field number for the "cost" field.</summary>
    public const int CostFieldNumber = 3;
    private int cost_;
    /// <summary>
    /// 消耗内容
    /// （ObjBasic.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Cost {
      get { return cost_; }
      set {
        cost_ = value;
      }
    }

    /// <summary>Field number for the "decorateScore" field.</summary>
    public const int DecorateScoreFieldNumber = 13;
    private int decorateScore_;
    /// <summary>
    /// 装饰币数量
    /// （被gradeId替代）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DecorateScore {
      get { return decorateScore_; }
      set {
        decorateScore_ = value;
      }
    }

    /// <summary>Field number for the "eventTheme" field.</summary>
    public const int EventThemeFieldNumber = 4;
    private int eventTheme_;
    /// <summary>
    /// 主面板
    /// 活动弹板ID
    /// （EventTheme.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EventTheme {
      get { return eventTheme_; }
      set {
        eventTheme_ = value;
      }
    }

    /// <summary>Field number for the "expirePopup" field.</summary>
    public const int ExpirePopupFieldNumber = 5;
    private static readonly pbc::MapField<int, string>.Codec _map_expirePopup_codec
        = new pbc::MapField<int, string>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForString(18, ""), 42);
    private readonly pbc::MapField<int, string> expirePopup_ = new pbc::MapField<int, string>();
    /// <summary>
    /// 活动结束时
    /// 通过弹板的方式一次性删除棋子
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, string> ExpirePopup {
      get { return expirePopup_; }
    }

    /// <summary>Field number for the "gradeId" field.</summary>
    public const int GradeIdFieldNumber = 15;
    private int gradeId_;
    /// <summary>
    /// 关卡信息
    /// （受档位组控制）
    /// （GradeIndexMapping.id）
    /// （EventStepDetail.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GradeId {
      get { return gradeId_; }
      set {
        gradeId_ = value;
      }
    }

    /// <summary>Field number for the "milestoneReward" field.</summary>
    public const int MilestoneRewardFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _repeated_milestoneReward_codec
        = pb::FieldCodec.ForString(50);
    private readonly pbc::RepeatedField<string> milestoneReward_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 完成里程碑任务奖励
    /// （被gradeId替代）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> MilestoneReward {
      get { return milestoneReward_; }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 7;
    private string name_ = "";
    /// <summary>
    /// 名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "orderPrefab" field.</summary>
    public const int OrderPrefabFieldNumber = 8;
    private string orderPrefab_ = "";
    /// <summary>
    /// 订单样式替换
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrderPrefab {
      get { return orderPrefab_; }
      set {
        orderPrefab_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "randomerId" field.</summary>
    public const int RandomerIdFieldNumber = 9;
    private int randomerId_;
    /// <summary>
    /// 随机订单id
    /// （OrderRandomer.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RandomerId {
      get { return randomerId_; }
      set {
        randomerId_ = value;
      }
    }

    /// <summary>Field number for the "recycleTheme" field.</summary>
    public const int RecycleThemeFieldNumber = 12;
    private int recycleTheme_;
    /// <summary>
    /// 回收清算
    /// 活动弹板ID
    /// （EventTheme.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RecycleTheme {
      get { return recycleTheme_; }
      set {
        recycleTheme_ = value;
      }
    }

    /// <summary>Field number for the "rewardIcon" field.</summary>
    public const int RewardIconFieldNumber = 10;
    private string rewardIcon_ = "";
    /// <summary>
    /// 大奖图标
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RewardIcon {
      get { return rewardIcon_; }
      set {
        rewardIcon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "taskId" field.</summary>
    public const int TaskIdFieldNumber = 11;
    private static readonly pb::FieldCodec<int> _repeated_taskId_codec
        = pb::FieldCodec.ForInt32(90);
    private readonly pbc::RepeatedField<int> taskId_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 任务ID
    /// （被gradeId替代）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> TaskId {
      get { return taskId_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventStep);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventStep other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (BoardId != other.BoardId) return false;
      if (CompleteTheme != other.CompleteTheme) return false;
      if (Cost != other.Cost) return false;
      if (DecorateScore != other.DecorateScore) return false;
      if (EventTheme != other.EventTheme) return false;
      if (!ExpirePopup.Equals(other.ExpirePopup)) return false;
      if (GradeId != other.GradeId) return false;
      if(!milestoneReward_.Equals(other.milestoneReward_)) return false;
      if (Name != other.Name) return false;
      if (OrderPrefab != other.OrderPrefab) return false;
      if (RandomerId != other.RandomerId) return false;
      if (RecycleTheme != other.RecycleTheme) return false;
      if (RewardIcon != other.RewardIcon) return false;
      if(!taskId_.Equals(other.taskId_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (BoardId != 0) hash ^= BoardId.GetHashCode();
      if (CompleteTheme != 0) hash ^= CompleteTheme.GetHashCode();
      if (Cost != 0) hash ^= Cost.GetHashCode();
      if (DecorateScore != 0) hash ^= DecorateScore.GetHashCode();
      if (EventTheme != 0) hash ^= EventTheme.GetHashCode();
      hash ^= ExpirePopup.GetHashCode();
      if (GradeId != 0) hash ^= GradeId.GetHashCode();
      hash ^= milestoneReward_.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (OrderPrefab.Length != 0) hash ^= OrderPrefab.GetHashCode();
      if (RandomerId != 0) hash ^= RandomerId.GetHashCode();
      if (RecycleTheme != 0) hash ^= RecycleTheme.GetHashCode();
      if (RewardIcon.Length != 0) hash ^= RewardIcon.GetHashCode();
      hash ^= taskId_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (BoardId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BoardId);
      }
      if (Cost != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Cost);
      }
      if (EventTheme != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(EventTheme);
      }
      expirePopup_.WriteTo(output, _map_expirePopup_codec);
      milestoneReward_.WriteTo(output, _repeated_milestoneReward_codec);
      if (Name.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Name);
      }
      if (OrderPrefab.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(OrderPrefab);
      }
      if (RandomerId != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(RandomerId);
      }
      if (RewardIcon.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(RewardIcon);
      }
      taskId_.WriteTo(output, _repeated_taskId_codec);
      if (RecycleTheme != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(RecycleTheme);
      }
      if (DecorateScore != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(DecorateScore);
      }
      if (CompleteTheme != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(CompleteTheme);
      }
      if (GradeId != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(GradeId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (BoardId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BoardId);
      }
      if (Cost != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Cost);
      }
      if (EventTheme != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(EventTheme);
      }
      expirePopup_.WriteTo(ref output, _map_expirePopup_codec);
      milestoneReward_.WriteTo(ref output, _repeated_milestoneReward_codec);
      if (Name.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Name);
      }
      if (OrderPrefab.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(OrderPrefab);
      }
      if (RandomerId != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(RandomerId);
      }
      if (RewardIcon.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(RewardIcon);
      }
      taskId_.WriteTo(ref output, _repeated_taskId_codec);
      if (RecycleTheme != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(RecycleTheme);
      }
      if (DecorateScore != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(DecorateScore);
      }
      if (CompleteTheme != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(CompleteTheme);
      }
      if (GradeId != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(GradeId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (BoardId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BoardId);
      }
      if (CompleteTheme != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CompleteTheme);
      }
      if (Cost != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Cost);
      }
      if (DecorateScore != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DecorateScore);
      }
      if (EventTheme != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EventTheme);
      }
      size += expirePopup_.CalculateSize(_map_expirePopup_codec);
      if (GradeId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GradeId);
      }
      size += milestoneReward_.CalculateSize(_repeated_milestoneReward_codec);
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (OrderPrefab.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderPrefab);
      }
      if (RandomerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RandomerId);
      }
      if (RecycleTheme != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RecycleTheme);
      }
      if (RewardIcon.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RewardIcon);
      }
      size += taskId_.CalculateSize(_repeated_taskId_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventStep other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.BoardId != 0) {
        BoardId = other.BoardId;
      }
      if (other.CompleteTheme != 0) {
        CompleteTheme = other.CompleteTheme;
      }
      if (other.Cost != 0) {
        Cost = other.Cost;
      }
      if (other.DecorateScore != 0) {
        DecorateScore = other.DecorateScore;
      }
      if (other.EventTheme != 0) {
        EventTheme = other.EventTheme;
      }
      expirePopup_.Add(other.expirePopup_);
      if (other.GradeId != 0) {
        GradeId = other.GradeId;
      }
      milestoneReward_.Add(other.milestoneReward_);
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.OrderPrefab.Length != 0) {
        OrderPrefab = other.OrderPrefab;
      }
      if (other.RandomerId != 0) {
        RandomerId = other.RandomerId;
      }
      if (other.RecycleTheme != 0) {
        RecycleTheme = other.RecycleTheme;
      }
      if (other.RewardIcon.Length != 0) {
        RewardIcon = other.RewardIcon;
      }
      taskId_.Add(other.taskId_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            BoardId = input.ReadInt32();
            break;
          }
          case 24: {
            Cost = input.ReadInt32();
            break;
          }
          case 32: {
            EventTheme = input.ReadInt32();
            break;
          }
          case 42: {
            expirePopup_.AddEntriesFrom(input, _map_expirePopup_codec);
            break;
          }
          case 50: {
            milestoneReward_.AddEntriesFrom(input, _repeated_milestoneReward_codec);
            break;
          }
          case 58: {
            Name = input.ReadString();
            break;
          }
          case 66: {
            OrderPrefab = input.ReadString();
            break;
          }
          case 72: {
            RandomerId = input.ReadInt32();
            break;
          }
          case 82: {
            RewardIcon = input.ReadString();
            break;
          }
          case 90:
          case 88: {
            taskId_.AddEntriesFrom(input, _repeated_taskId_codec);
            break;
          }
          case 96: {
            RecycleTheme = input.ReadInt32();
            break;
          }
          case 104: {
            DecorateScore = input.ReadInt32();
            break;
          }
          case 112: {
            CompleteTheme = input.ReadInt32();
            break;
          }
          case 120: {
            GradeId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            BoardId = input.ReadInt32();
            break;
          }
          case 24: {
            Cost = input.ReadInt32();
            break;
          }
          case 32: {
            EventTheme = input.ReadInt32();
            break;
          }
          case 42: {
            expirePopup_.AddEntriesFrom(ref input, _map_expirePopup_codec);
            break;
          }
          case 50: {
            milestoneReward_.AddEntriesFrom(ref input, _repeated_milestoneReward_codec);
            break;
          }
          case 58: {
            Name = input.ReadString();
            break;
          }
          case 66: {
            OrderPrefab = input.ReadString();
            break;
          }
          case 72: {
            RandomerId = input.ReadInt32();
            break;
          }
          case 82: {
            RewardIcon = input.ReadString();
            break;
          }
          case 90:
          case 88: {
            taskId_.AddEntriesFrom(ref input, _repeated_taskId_codec);
            break;
          }
          case 96: {
            RecycleTheme = input.ReadInt32();
            break;
          }
          case 104: {
            DecorateScore = input.ReadInt32();
            break;
          }
          case 112: {
            CompleteTheme = input.ReadInt32();
            break;
          }
          case 120: {
            GradeId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventStepMapABValue : pb::IMessage<EventStepMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventStepMapABValue> _parser = new pb::MessageParser<EventStepMapABValue>(() => new EventStepMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventStepMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventStepConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventStepMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventStepMapABValue(EventStepMapABValue other) : this() {
      eventStepMap_ = other.eventStepMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventStepMapABValue Clone() {
      return new EventStepMapABValue(this);
    }

    /// <summary>Field number for the "EventStepMap" field.</summary>
    public const int EventStepMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventStep>.Codec _map_eventStepMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventStep>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventStep.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventStep> eventStepMap_ = new pbc::MapField<int, global::fat.rawdata.EventStep>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventStep> EventStepMap {
      get { return eventStepMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventStepMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventStepMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventStepMap.Equals(other.EventStepMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventStepMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventStepMap_.WriteTo(output, _map_eventStepMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventStepMap_.WriteTo(ref output, _map_eventStepMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventStepMap_.CalculateSize(_map_eventStepMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventStepMapABValue other) {
      if (other == null) {
        return;
      }
      eventStepMap_.Add(other.eventStepMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventStepMap_.AddEntriesFrom(input, _map_eventStepMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventStepMap_.AddEntriesFrom(ref input, _map_eventStepMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventStepConf : pb::IMessage<EventStepConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventStepConf> _parser = new pb::MessageParser<EventStepConf>(() => new EventStepConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventStepConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventStepConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventStepConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventStepConf(EventStepConf other) : this() {
      eventStepMap_ = other.eventStepMap_.Clone();
      eventStepMapAB_ = other.eventStepMapAB_.Clone();
      eventStepMapABPatch_ = other.eventStepMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventStepConf Clone() {
      return new EventStepConf(this);
    }

    /// <summary>Field number for the "EventStepMap" field.</summary>
    public const int EventStepMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventStep>.Codec _map_eventStepMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventStep>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventStep.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventStep> eventStepMap_ = new pbc::MapField<int, global::fat.rawdata.EventStep>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventStep> EventStepMap {
      get { return eventStepMap_; }
    }

    /// <summary>Field number for the "EventStepMapAB" field.</summary>
    public const int EventStepMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventStepMapABValue>.Codec _map_eventStepMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventStepMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventStepMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventStepMapABValue> eventStepMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventStepMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventStepMapABValue> EventStepMapAB {
      get { return eventStepMapAB_; }
    }

    /// <summary>Field number for the "EventStepMapABPatch" field.</summary>
    public const int EventStepMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventStepMapABValue>.Codec _map_eventStepMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventStepMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventStepMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventStepMapABValue> eventStepMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventStepMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventStepMapABValue> EventStepMapABPatch {
      get { return eventStepMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventStepConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventStepConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventStepMap.Equals(other.EventStepMap)) return false;
      if (!EventStepMapAB.Equals(other.EventStepMapAB)) return false;
      if (!EventStepMapABPatch.Equals(other.EventStepMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventStepMap.GetHashCode();
      hash ^= EventStepMapAB.GetHashCode();
      hash ^= EventStepMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventStepMap_.WriteTo(output, _map_eventStepMap_codec);
      eventStepMapAB_.WriteTo(output, _map_eventStepMapAB_codec);
      eventStepMapABPatch_.WriteTo(output, _map_eventStepMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventStepMap_.WriteTo(ref output, _map_eventStepMap_codec);
      eventStepMapAB_.WriteTo(ref output, _map_eventStepMapAB_codec);
      eventStepMapABPatch_.WriteTo(ref output, _map_eventStepMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventStepMap_.CalculateSize(_map_eventStepMap_codec);
      size += eventStepMapAB_.CalculateSize(_map_eventStepMapAB_codec);
      size += eventStepMapABPatch_.CalculateSize(_map_eventStepMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventStepConf other) {
      if (other == null) {
        return;
      }
      eventStepMap_.Add(other.eventStepMap_);
      eventStepMapAB_.Add(other.eventStepMapAB_);
      eventStepMapABPatch_.Add(other.eventStepMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventStepMap_.AddEntriesFrom(input, _map_eventStepMap_codec);
            break;
          }
          case 18: {
            eventStepMapAB_.AddEntriesFrom(input, _map_eventStepMapAB_codec);
            break;
          }
          case 26: {
            eventStepMapABPatch_.AddEntriesFrom(input, _map_eventStepMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventStepMap_.AddEntriesFrom(ref input, _map_eventStepMap_codec);
            break;
          }
          case 18: {
            eventStepMapAB_.AddEntriesFrom(ref input, _map_eventStepMapAB_codec);
            break;
          }
          case 26: {
            eventStepMapABPatch_.AddEntriesFrom(ref input, _map_eventStepMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
