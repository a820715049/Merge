// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/SpinPackDetailConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/SpinPackDetailConf.proto</summary>
  public static partial class SpinPackDetailConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/SpinPackDetailConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SpinPackDetailConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiByYXdkYXRhL1NwaW5QYWNrRGV0YWlsQ29uZi5wcm90bxIHcmF3ZGF0YSJv",
            "Cg5TcGluUGFja0RldGFpbBIKCgJpZBgBIAEoBRIMCgRkaWZmGAIgASgFEhcK",
            "D2ZyZWVSZXdhcmRHcm91cBgDIAMoBRIWCg5wYXlSZXdhcmRHcm91cBgEIAMo",
            "BRISCgpwcmljZUdyb3VwGAUgAygFIsIBChhTcGluUGFja0RldGFpbE1hcEFC",
            "VmFsdWUSUwoRU3BpblBhY2tEZXRhaWxNYXAYASADKAsyOC5yYXdkYXRhLlNw",
            "aW5QYWNrRGV0YWlsTWFwQUJWYWx1ZS5TcGluUGFja0RldGFpbE1hcEVudHJ5",
            "GlEKFlNwaW5QYWNrRGV0YWlsTWFwRW50cnkSCwoDa2V5GAEgASgFEiYKBXZh",
            "bHVlGAIgASgLMhcucmF3ZGF0YS5TcGluUGFja0RldGFpbDoCOAEiqQQKElNw",
            "aW5QYWNrRGV0YWlsQ29uZhJNChFTcGluUGFja0RldGFpbE1hcBgBIAMoCzIy",
            "LnJhd2RhdGEuU3BpblBhY2tEZXRhaWxDb25mLlNwaW5QYWNrRGV0YWlsTWFw",
            "RW50cnkSUQoTU3BpblBhY2tEZXRhaWxNYXBBQhgCIAMoCzI0LnJhd2RhdGEu",
            "U3BpblBhY2tEZXRhaWxDb25mLlNwaW5QYWNrRGV0YWlsTWFwQUJFbnRyeRJb",
            "ChhTcGluUGFja0RldGFpbE1hcEFCUGF0Y2gYAyADKAsyOS5yYXdkYXRhLlNw",
            "aW5QYWNrRGV0YWlsQ29uZi5TcGluUGFja0RldGFpbE1hcEFCUGF0Y2hFbnRy",
            "eRpRChZTcGluUGFja0RldGFpbE1hcEVudHJ5EgsKA2tleRgBIAEoBRImCgV2",
            "YWx1ZRgCIAEoCzIXLnJhd2RhdGEuU3BpblBhY2tEZXRhaWw6AjgBGl0KGFNw",
            "aW5QYWNrRGV0YWlsTWFwQUJFbnRyeRILCgNrZXkYASABKAkSMAoFdmFsdWUY",
            "AiABKAsyIS5yYXdkYXRhLlNwaW5QYWNrRGV0YWlsTWFwQUJWYWx1ZToCOAEa",
            "YgodU3BpblBhY2tEZXRhaWxNYXBBQlBhdGNoRW50cnkSCwoDa2V5GAEgASgJ",
            "EjAKBXZhbHVlGAIgASgLMiEucmF3ZGF0YS5TcGluUGFja0RldGFpbE1hcEFC",
            "VmFsdWU6AjgBQj1aLWdpdGxhYi5mdW5wbHVzLmlvL2ZhdC9jb25mL2dlbi9n",
            "b2xhbmcvcmF3ZGF0YaoCC2ZhdC5yYXdkYXRhYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.SpinPackDetail), global::fat.rawdata.SpinPackDetail.Parser, new[]{ "Id", "Diff", "FreeRewardGroup", "PayRewardGroup", "PriceGroup" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.SpinPackDetailMapABValue), global::fat.rawdata.SpinPackDetailMapABValue.Parser, new[]{ "SpinPackDetailMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.SpinPackDetailConf), global::fat.rawdata.SpinPackDetailConf.Parser, new[]{ "SpinPackDetailMap", "SpinPackDetailMapAB", "SpinPackDetailMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="SpinPackDetail",table="SpinPackDetailMap",table_wrapper="SpinPackDetailConf",map="true",map_key_type="int32",data="SpinPackDetailConf")
  /// annotation@ab(table_ab="SpinPackDetailMapAB",table_ab_patch="SpinPackDetailMapABPatch",table_ab_value="SpinPackDetailMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@SpinPackDetail(id="id")
  /// </summary>
  public sealed partial class SpinPackDetail : pb::IMessage<SpinPackDetail>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpinPackDetail> _parser = new pb::MessageParser<SpinPackDetail>(() => new SpinPackDetail());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SpinPackDetail> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.SpinPackDetailConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpinPackDetail() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpinPackDetail(SpinPackDetail other) : this() {
      id_ = other.id_;
      diff_ = other.diff_;
      freeRewardGroup_ = other.freeRewardGroup_.Clone();
      payRewardGroup_ = other.payRewardGroup_.Clone();
      priceGroup_ = other.priceGroup_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpinPackDetail Clone() {
      return new SpinPackDetail(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 活动详情id
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "diff" field.</summary>
    public const int DiffFieldNumber = 2;
    private int diff_;
    /// <summary>
    /// 难度
    /// （仅用作TGA）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Diff {
      get { return diff_; }
      set {
        diff_ = value;
      }
    }

    /// <summary>Field number for the "freeRewardGroup" field.</summary>
    public const int FreeRewardGroupFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_freeRewardGroup_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> freeRewardGroup_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 活动免费奖励序列
    /// （SpinPackRewardPool.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> FreeRewardGroup {
      get { return freeRewardGroup_; }
    }

    /// <summary>Field number for the "payRewardGroup" field.</summary>
    public const int PayRewardGroupFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_payRewardGroup_codec
        = pb::FieldCodec.ForInt32(34);
    private readonly pbc::RepeatedField<int> payRewardGroup_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 活动付费奖励序列
    /// （SpinPackRewardPool.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> PayRewardGroup {
      get { return payRewardGroup_; }
    }

    /// <summary>Field number for the "priceGroup" field.</summary>
    public const int PriceGroupFieldNumber = 5;
    private static readonly pb::FieldCodec<int> _repeated_priceGroup_codec
        = pb::FieldCodec.ForInt32(42);
    private readonly pbc::RepeatedField<int> priceGroup_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 活动价格序列
    /// （IAPPack.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> PriceGroup {
      get { return priceGroup_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SpinPackDetail);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SpinPackDetail other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Diff != other.Diff) return false;
      if(!freeRewardGroup_.Equals(other.freeRewardGroup_)) return false;
      if(!payRewardGroup_.Equals(other.payRewardGroup_)) return false;
      if(!priceGroup_.Equals(other.priceGroup_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Diff != 0) hash ^= Diff.GetHashCode();
      hash ^= freeRewardGroup_.GetHashCode();
      hash ^= payRewardGroup_.GetHashCode();
      hash ^= priceGroup_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Diff != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Diff);
      }
      freeRewardGroup_.WriteTo(output, _repeated_freeRewardGroup_codec);
      payRewardGroup_.WriteTo(output, _repeated_payRewardGroup_codec);
      priceGroup_.WriteTo(output, _repeated_priceGroup_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Diff != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Diff);
      }
      freeRewardGroup_.WriteTo(ref output, _repeated_freeRewardGroup_codec);
      payRewardGroup_.WriteTo(ref output, _repeated_payRewardGroup_codec);
      priceGroup_.WriteTo(ref output, _repeated_priceGroup_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Diff != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Diff);
      }
      size += freeRewardGroup_.CalculateSize(_repeated_freeRewardGroup_codec);
      size += payRewardGroup_.CalculateSize(_repeated_payRewardGroup_codec);
      size += priceGroup_.CalculateSize(_repeated_priceGroup_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SpinPackDetail other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Diff != 0) {
        Diff = other.Diff;
      }
      freeRewardGroup_.Add(other.freeRewardGroup_);
      payRewardGroup_.Add(other.payRewardGroup_);
      priceGroup_.Add(other.priceGroup_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Diff = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            freeRewardGroup_.AddEntriesFrom(input, _repeated_freeRewardGroup_codec);
            break;
          }
          case 34:
          case 32: {
            payRewardGroup_.AddEntriesFrom(input, _repeated_payRewardGroup_codec);
            break;
          }
          case 42:
          case 40: {
            priceGroup_.AddEntriesFrom(input, _repeated_priceGroup_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Diff = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            freeRewardGroup_.AddEntriesFrom(ref input, _repeated_freeRewardGroup_codec);
            break;
          }
          case 34:
          case 32: {
            payRewardGroup_.AddEntriesFrom(ref input, _repeated_payRewardGroup_codec);
            break;
          }
          case 42:
          case 40: {
            priceGroup_.AddEntriesFrom(ref input, _repeated_priceGroup_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SpinPackDetailMapABValue : pb::IMessage<SpinPackDetailMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpinPackDetailMapABValue> _parser = new pb::MessageParser<SpinPackDetailMapABValue>(() => new SpinPackDetailMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SpinPackDetailMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.SpinPackDetailConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpinPackDetailMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpinPackDetailMapABValue(SpinPackDetailMapABValue other) : this() {
      spinPackDetailMap_ = other.spinPackDetailMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpinPackDetailMapABValue Clone() {
      return new SpinPackDetailMapABValue(this);
    }

    /// <summary>Field number for the "SpinPackDetailMap" field.</summary>
    public const int SpinPackDetailMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.SpinPackDetail>.Codec _map_spinPackDetailMap_codec
        = new pbc::MapField<int, global::fat.rawdata.SpinPackDetail>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.SpinPackDetail.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.SpinPackDetail> spinPackDetailMap_ = new pbc::MapField<int, global::fat.rawdata.SpinPackDetail>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.SpinPackDetail> SpinPackDetailMap {
      get { return spinPackDetailMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SpinPackDetailMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SpinPackDetailMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!SpinPackDetailMap.Equals(other.SpinPackDetailMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= SpinPackDetailMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      spinPackDetailMap_.WriteTo(output, _map_spinPackDetailMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      spinPackDetailMap_.WriteTo(ref output, _map_spinPackDetailMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += spinPackDetailMap_.CalculateSize(_map_spinPackDetailMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SpinPackDetailMapABValue other) {
      if (other == null) {
        return;
      }
      spinPackDetailMap_.Add(other.spinPackDetailMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            spinPackDetailMap_.AddEntriesFrom(input, _map_spinPackDetailMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            spinPackDetailMap_.AddEntriesFrom(ref input, _map_spinPackDetailMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SpinPackDetailConf : pb::IMessage<SpinPackDetailConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpinPackDetailConf> _parser = new pb::MessageParser<SpinPackDetailConf>(() => new SpinPackDetailConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SpinPackDetailConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.SpinPackDetailConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpinPackDetailConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpinPackDetailConf(SpinPackDetailConf other) : this() {
      spinPackDetailMap_ = other.spinPackDetailMap_.Clone();
      spinPackDetailMapAB_ = other.spinPackDetailMapAB_.Clone();
      spinPackDetailMapABPatch_ = other.spinPackDetailMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpinPackDetailConf Clone() {
      return new SpinPackDetailConf(this);
    }

    /// <summary>Field number for the "SpinPackDetailMap" field.</summary>
    public const int SpinPackDetailMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.SpinPackDetail>.Codec _map_spinPackDetailMap_codec
        = new pbc::MapField<int, global::fat.rawdata.SpinPackDetail>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.SpinPackDetail.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.SpinPackDetail> spinPackDetailMap_ = new pbc::MapField<int, global::fat.rawdata.SpinPackDetail>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.SpinPackDetail> SpinPackDetailMap {
      get { return spinPackDetailMap_; }
    }

    /// <summary>Field number for the "SpinPackDetailMapAB" field.</summary>
    public const int SpinPackDetailMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.SpinPackDetailMapABValue>.Codec _map_spinPackDetailMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.SpinPackDetailMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.SpinPackDetailMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.SpinPackDetailMapABValue> spinPackDetailMapAB_ = new pbc::MapField<string, global::fat.rawdata.SpinPackDetailMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.SpinPackDetailMapABValue> SpinPackDetailMapAB {
      get { return spinPackDetailMapAB_; }
    }

    /// <summary>Field number for the "SpinPackDetailMapABPatch" field.</summary>
    public const int SpinPackDetailMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.SpinPackDetailMapABValue>.Codec _map_spinPackDetailMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.SpinPackDetailMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.SpinPackDetailMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.SpinPackDetailMapABValue> spinPackDetailMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.SpinPackDetailMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.SpinPackDetailMapABValue> SpinPackDetailMapABPatch {
      get { return spinPackDetailMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SpinPackDetailConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SpinPackDetailConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!SpinPackDetailMap.Equals(other.SpinPackDetailMap)) return false;
      if (!SpinPackDetailMapAB.Equals(other.SpinPackDetailMapAB)) return false;
      if (!SpinPackDetailMapABPatch.Equals(other.SpinPackDetailMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= SpinPackDetailMap.GetHashCode();
      hash ^= SpinPackDetailMapAB.GetHashCode();
      hash ^= SpinPackDetailMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      spinPackDetailMap_.WriteTo(output, _map_spinPackDetailMap_codec);
      spinPackDetailMapAB_.WriteTo(output, _map_spinPackDetailMapAB_codec);
      spinPackDetailMapABPatch_.WriteTo(output, _map_spinPackDetailMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      spinPackDetailMap_.WriteTo(ref output, _map_spinPackDetailMap_codec);
      spinPackDetailMapAB_.WriteTo(ref output, _map_spinPackDetailMapAB_codec);
      spinPackDetailMapABPatch_.WriteTo(ref output, _map_spinPackDetailMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += spinPackDetailMap_.CalculateSize(_map_spinPackDetailMap_codec);
      size += spinPackDetailMapAB_.CalculateSize(_map_spinPackDetailMapAB_codec);
      size += spinPackDetailMapABPatch_.CalculateSize(_map_spinPackDetailMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SpinPackDetailConf other) {
      if (other == null) {
        return;
      }
      spinPackDetailMap_.Add(other.spinPackDetailMap_);
      spinPackDetailMapAB_.Add(other.spinPackDetailMapAB_);
      spinPackDetailMapABPatch_.Add(other.spinPackDetailMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            spinPackDetailMap_.AddEntriesFrom(input, _map_spinPackDetailMap_codec);
            break;
          }
          case 18: {
            spinPackDetailMapAB_.AddEntriesFrom(input, _map_spinPackDetailMapAB_codec);
            break;
          }
          case 26: {
            spinPackDetailMapABPatch_.AddEntriesFrom(input, _map_spinPackDetailMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            spinPackDetailMap_.AddEntriesFrom(ref input, _map_spinPackDetailMap_codec);
            break;
          }
          case 18: {
            spinPackDetailMapAB_.AddEntriesFrom(ref input, _map_spinPackDetailMapAB_codec);
            break;
          }
          case 26: {
            spinPackDetailMapABPatch_.AddEntriesFrom(ref input, _map_spinPackDetailMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
