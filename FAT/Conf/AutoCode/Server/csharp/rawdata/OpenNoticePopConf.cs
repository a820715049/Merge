// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/OpenNoticePopConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/OpenNoticePopConf.proto</summary>
  public static partial class OpenNoticePopConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/OpenNoticePopConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static OpenNoticePopConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch9yYXdkYXRhL09wZW5Ob3RpY2VQb3BDb25mLnByb3RvEgdyYXdkYXRhGh9y",
            "YXdkYXRhL09wZW5Ob3RpZmlQb3BUeXBlLnByb3RvIl4KDU9wZW5Ob3RpY2VQ",
            "b3ASLwoLbm90aWNlUG9wSWQYASABKA4yGi5yYXdkYXRhLk9wZW5Ob3RpZmlQ",
            "b3BUeXBlEg0KBXBvcENkGAIgASgFEg0KBXRoZW1lGAMgASgFIk8KGU9wZW5O",
            "b3RpY2VQb3BTbGljZUFCVmFsdWUSMgoST3Blbk5vdGljZVBvcFNsaWNlGAEg",
            "AygLMhYucmF3ZGF0YS5PcGVuTm90aWNlUG9wIsADChFPcGVuTm90aWNlUG9w",
            "Q29uZhIyChJPcGVuTm90aWNlUG9wU2xpY2UYASADKAsyFi5yYXdkYXRhLk9w",
            "ZW5Ob3RpY2VQb3ASUgoUT3Blbk5vdGljZVBvcFNsaWNlQUIYAiADKAsyNC5y",
            "YXdkYXRhLk9wZW5Ob3RpY2VQb3BDb25mLk9wZW5Ob3RpY2VQb3BTbGljZUFC",
            "RW50cnkSXAoZT3Blbk5vdGljZVBvcFNsaWNlQUJQYXRjaBgDIAMoCzI5LnJh",
            "d2RhdGEuT3Blbk5vdGljZVBvcENvbmYuT3Blbk5vdGljZVBvcFNsaWNlQUJQ",
            "YXRjaEVudHJ5Gl8KGU9wZW5Ob3RpY2VQb3BTbGljZUFCRW50cnkSCwoDa2V5",
            "GAEgASgJEjEKBXZhbHVlGAIgASgLMiIucmF3ZGF0YS5PcGVuTm90aWNlUG9w",
            "U2xpY2VBQlZhbHVlOgI4ARpkCh5PcGVuTm90aWNlUG9wU2xpY2VBQlBhdGNo",
            "RW50cnkSCwoDa2V5GAEgASgJEjEKBXZhbHVlGAIgASgLMiIucmF3ZGF0YS5P",
            "cGVuTm90aWNlUG9wU2xpY2VBQlZhbHVlOgI4AUI9Wi1naXRsYWIuZnVucGx1",
            "cy5pby9mYXQvY29uZi9nZW4vZ29sYW5nL3Jhd2RhdGGqAgtmYXQucmF3ZGF0",
            "YWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::fat.rawdata.OpenNotifiPopTypeReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.OpenNoticePop), global::fat.rawdata.OpenNoticePop.Parser, new[]{ "NoticePopId", "PopCd", "Theme" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.OpenNoticePopSliceABValue), global::fat.rawdata.OpenNoticePopSliceABValue.Parser, new[]{ "OpenNoticePopSlice" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.OpenNoticePopConf), global::fat.rawdata.OpenNoticePopConf.Parser, new[]{ "OpenNoticePopSlice", "OpenNoticePopSliceAB", "OpenNoticePopSliceABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="OpenNoticePop",table="OpenNoticePopSlice",table_wrapper="OpenNoticePopConf",map="false",map_key_type="",data="OpenNoticePopConf")
  /// annotation@ab(table_ab="OpenNoticePopSliceAB",table_ab_patch="OpenNoticePopSliceABPatch",table_ab_value="OpenNoticePopSliceABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// </summary>
  public sealed partial class OpenNoticePop : pb::IMessage<OpenNoticePop>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OpenNoticePop> _parser = new pb::MessageParser<OpenNoticePop>(() => new OpenNoticePop());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OpenNoticePop> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.OpenNoticePopConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OpenNoticePop() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OpenNoticePop(OpenNoticePop other) : this() {
      noticePopId_ = other.noticePopId_;
      popCd_ = other.popCd_;
      theme_ = other.theme_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OpenNoticePop Clone() {
      return new OpenNoticePop(this);
    }

    /// <summary>Field number for the "noticePopId" field.</summary>
    public const int NoticePopIdFieldNumber = 1;
    private global::fat.rawdata.OpenNotifiPopType noticePopId_ = global::fat.rawdata.OpenNotifiPopType.Energy;
    /// <summary>
    /// 定时推送ID
    /// （OpenNotifiPopType@enum）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::fat.rawdata.OpenNotifiPopType NoticePopId {
      get { return noticePopId_; }
      set {
        noticePopId_ = value;
      }
    }

    /// <summary>Field number for the "popCd" field.</summary>
    public const int PopCdFieldNumber = 2;
    private int popCd_;
    /// <summary>
    /// 弹窗cd-秒
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PopCd {
      get { return popCd_; }
      set {
        popCd_ = value;
      }
    }

    /// <summary>Field number for the "theme" field.</summary>
    public const int ThemeFieldNumber = 3;
    private int theme_;
    /// <summary>
    /// theme.Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Theme {
      get { return theme_; }
      set {
        theme_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OpenNoticePop);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OpenNoticePop other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NoticePopId != other.NoticePopId) return false;
      if (PopCd != other.PopCd) return false;
      if (Theme != other.Theme) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NoticePopId != global::fat.rawdata.OpenNotifiPopType.Energy) hash ^= NoticePopId.GetHashCode();
      if (PopCd != 0) hash ^= PopCd.GetHashCode();
      if (Theme != 0) hash ^= Theme.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (NoticePopId != global::fat.rawdata.OpenNotifiPopType.Energy) {
        output.WriteRawTag(8);
        output.WriteEnum((int) NoticePopId);
      }
      if (PopCd != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PopCd);
      }
      if (Theme != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Theme);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (NoticePopId != global::fat.rawdata.OpenNotifiPopType.Energy) {
        output.WriteRawTag(8);
        output.WriteEnum((int) NoticePopId);
      }
      if (PopCd != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PopCd);
      }
      if (Theme != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Theme);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NoticePopId != global::fat.rawdata.OpenNotifiPopType.Energy) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) NoticePopId);
      }
      if (PopCd != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PopCd);
      }
      if (Theme != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Theme);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OpenNoticePop other) {
      if (other == null) {
        return;
      }
      if (other.NoticePopId != global::fat.rawdata.OpenNotifiPopType.Energy) {
        NoticePopId = other.NoticePopId;
      }
      if (other.PopCd != 0) {
        PopCd = other.PopCd;
      }
      if (other.Theme != 0) {
        Theme = other.Theme;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            NoticePopId = (global::fat.rawdata.OpenNotifiPopType) input.ReadEnum();
            break;
          }
          case 16: {
            PopCd = input.ReadInt32();
            break;
          }
          case 24: {
            Theme = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            NoticePopId = (global::fat.rawdata.OpenNotifiPopType) input.ReadEnum();
            break;
          }
          case 16: {
            PopCd = input.ReadInt32();
            break;
          }
          case 24: {
            Theme = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class OpenNoticePopSliceABValue : pb::IMessage<OpenNoticePopSliceABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OpenNoticePopSliceABValue> _parser = new pb::MessageParser<OpenNoticePopSliceABValue>(() => new OpenNoticePopSliceABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OpenNoticePopSliceABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.OpenNoticePopConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OpenNoticePopSliceABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OpenNoticePopSliceABValue(OpenNoticePopSliceABValue other) : this() {
      openNoticePopSlice_ = other.openNoticePopSlice_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OpenNoticePopSliceABValue Clone() {
      return new OpenNoticePopSliceABValue(this);
    }

    /// <summary>Field number for the "OpenNoticePopSlice" field.</summary>
    public const int OpenNoticePopSliceFieldNumber = 1;
    private static readonly pb::FieldCodec<global::fat.rawdata.OpenNoticePop> _repeated_openNoticePopSlice_codec
        = pb::FieldCodec.ForMessage(10, global::fat.rawdata.OpenNoticePop.Parser);
    private readonly pbc::RepeatedField<global::fat.rawdata.OpenNoticePop> openNoticePopSlice_ = new pbc::RepeatedField<global::fat.rawdata.OpenNoticePop>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::fat.rawdata.OpenNoticePop> OpenNoticePopSlice {
      get { return openNoticePopSlice_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OpenNoticePopSliceABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OpenNoticePopSliceABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!openNoticePopSlice_.Equals(other.openNoticePopSlice_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= openNoticePopSlice_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      openNoticePopSlice_.WriteTo(output, _repeated_openNoticePopSlice_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      openNoticePopSlice_.WriteTo(ref output, _repeated_openNoticePopSlice_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += openNoticePopSlice_.CalculateSize(_repeated_openNoticePopSlice_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OpenNoticePopSliceABValue other) {
      if (other == null) {
        return;
      }
      openNoticePopSlice_.Add(other.openNoticePopSlice_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            openNoticePopSlice_.AddEntriesFrom(input, _repeated_openNoticePopSlice_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            openNoticePopSlice_.AddEntriesFrom(ref input, _repeated_openNoticePopSlice_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class OpenNoticePopConf : pb::IMessage<OpenNoticePopConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OpenNoticePopConf> _parser = new pb::MessageParser<OpenNoticePopConf>(() => new OpenNoticePopConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OpenNoticePopConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.OpenNoticePopConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OpenNoticePopConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OpenNoticePopConf(OpenNoticePopConf other) : this() {
      openNoticePopSlice_ = other.openNoticePopSlice_.Clone();
      openNoticePopSliceAB_ = other.openNoticePopSliceAB_.Clone();
      openNoticePopSliceABPatch_ = other.openNoticePopSliceABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OpenNoticePopConf Clone() {
      return new OpenNoticePopConf(this);
    }

    /// <summary>Field number for the "OpenNoticePopSlice" field.</summary>
    public const int OpenNoticePopSliceFieldNumber = 1;
    private static readonly pb::FieldCodec<global::fat.rawdata.OpenNoticePop> _repeated_openNoticePopSlice_codec
        = pb::FieldCodec.ForMessage(10, global::fat.rawdata.OpenNoticePop.Parser);
    private readonly pbc::RepeatedField<global::fat.rawdata.OpenNoticePop> openNoticePopSlice_ = new pbc::RepeatedField<global::fat.rawdata.OpenNoticePop>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::fat.rawdata.OpenNoticePop> OpenNoticePopSlice {
      get { return openNoticePopSlice_; }
    }

    /// <summary>Field number for the "OpenNoticePopSliceAB" field.</summary>
    public const int OpenNoticePopSliceABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.OpenNoticePopSliceABValue>.Codec _map_openNoticePopSliceAB_codec
        = new pbc::MapField<string, global::fat.rawdata.OpenNoticePopSliceABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.OpenNoticePopSliceABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.OpenNoticePopSliceABValue> openNoticePopSliceAB_ = new pbc::MapField<string, global::fat.rawdata.OpenNoticePopSliceABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.OpenNoticePopSliceABValue> OpenNoticePopSliceAB {
      get { return openNoticePopSliceAB_; }
    }

    /// <summary>Field number for the "OpenNoticePopSliceABPatch" field.</summary>
    public const int OpenNoticePopSliceABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.OpenNoticePopSliceABValue>.Codec _map_openNoticePopSliceABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.OpenNoticePopSliceABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.OpenNoticePopSliceABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.OpenNoticePopSliceABValue> openNoticePopSliceABPatch_ = new pbc::MapField<string, global::fat.rawdata.OpenNoticePopSliceABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.OpenNoticePopSliceABValue> OpenNoticePopSliceABPatch {
      get { return openNoticePopSliceABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OpenNoticePopConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OpenNoticePopConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!openNoticePopSlice_.Equals(other.openNoticePopSlice_)) return false;
      if (!OpenNoticePopSliceAB.Equals(other.OpenNoticePopSliceAB)) return false;
      if (!OpenNoticePopSliceABPatch.Equals(other.OpenNoticePopSliceABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= openNoticePopSlice_.GetHashCode();
      hash ^= OpenNoticePopSliceAB.GetHashCode();
      hash ^= OpenNoticePopSliceABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      openNoticePopSlice_.WriteTo(output, _repeated_openNoticePopSlice_codec);
      openNoticePopSliceAB_.WriteTo(output, _map_openNoticePopSliceAB_codec);
      openNoticePopSliceABPatch_.WriteTo(output, _map_openNoticePopSliceABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      openNoticePopSlice_.WriteTo(ref output, _repeated_openNoticePopSlice_codec);
      openNoticePopSliceAB_.WriteTo(ref output, _map_openNoticePopSliceAB_codec);
      openNoticePopSliceABPatch_.WriteTo(ref output, _map_openNoticePopSliceABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += openNoticePopSlice_.CalculateSize(_repeated_openNoticePopSlice_codec);
      size += openNoticePopSliceAB_.CalculateSize(_map_openNoticePopSliceAB_codec);
      size += openNoticePopSliceABPatch_.CalculateSize(_map_openNoticePopSliceABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OpenNoticePopConf other) {
      if (other == null) {
        return;
      }
      openNoticePopSlice_.Add(other.openNoticePopSlice_);
      openNoticePopSliceAB_.Add(other.openNoticePopSliceAB_);
      openNoticePopSliceABPatch_.Add(other.openNoticePopSliceABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            openNoticePopSlice_.AddEntriesFrom(input, _repeated_openNoticePopSlice_codec);
            break;
          }
          case 18: {
            openNoticePopSliceAB_.AddEntriesFrom(input, _map_openNoticePopSliceAB_codec);
            break;
          }
          case 26: {
            openNoticePopSliceABPatch_.AddEntriesFrom(input, _map_openNoticePopSliceABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            openNoticePopSlice_.AddEntriesFrom(ref input, _repeated_openNoticePopSlice_codec);
            break;
          }
          case 18: {
            openNoticePopSliceAB_.AddEntriesFrom(ref input, _map_openNoticePopSliceAB_codec);
            break;
          }
          case 26: {
            openNoticePopSliceABPatch_.AddEntriesFrom(ref input, _map_openNoticePopSliceABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
