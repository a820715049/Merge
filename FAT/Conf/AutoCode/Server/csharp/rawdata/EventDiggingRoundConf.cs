// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventDiggingRoundConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventDiggingRoundConf.proto</summary>
  public static partial class EventDiggingRoundConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventDiggingRoundConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventDiggingRoundConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiNyYXdkYXRhL0V2ZW50RGlnZ2luZ1JvdW5kQ29uZi5wcm90bxIHcmF3ZGF0",
            "YSI5ChFFdmVudERpZ2dpbmdSb3VuZBIKCgJpZBgBIAEoBRIYChBpbmNsdWRl",
            "RGlnZ2luZ0lkGAIgAygFItQBChtFdmVudERpZ2dpbmdSb3VuZE1hcEFCVmFs",
            "dWUSXAoURXZlbnREaWdnaW5nUm91bmRNYXAYASADKAsyPi5yYXdkYXRhLkV2",
            "ZW50RGlnZ2luZ1JvdW5kTWFwQUJWYWx1ZS5FdmVudERpZ2dpbmdSb3VuZE1h",
            "cEVudHJ5GlcKGUV2ZW50RGlnZ2luZ1JvdW5kTWFwRW50cnkSCwoDa2V5GAEg",
            "ASgFEikKBXZhbHVlGAIgASgLMhoucmF3ZGF0YS5FdmVudERpZ2dpbmdSb3Vu",
            "ZDoCOAEi2QQKFUV2ZW50RGlnZ2luZ1JvdW5kQ29uZhJWChRFdmVudERpZ2dp",
            "bmdSb3VuZE1hcBgBIAMoCzI4LnJhd2RhdGEuRXZlbnREaWdnaW5nUm91bmRD",
            "b25mLkV2ZW50RGlnZ2luZ1JvdW5kTWFwRW50cnkSWgoWRXZlbnREaWdnaW5n",
            "Um91bmRNYXBBQhgCIAMoCzI6LnJhd2RhdGEuRXZlbnREaWdnaW5nUm91bmRD",
            "b25mLkV2ZW50RGlnZ2luZ1JvdW5kTWFwQUJFbnRyeRJkChtFdmVudERpZ2dp",
            "bmdSb3VuZE1hcEFCUGF0Y2gYAyADKAsyPy5yYXdkYXRhLkV2ZW50RGlnZ2lu",
            "Z1JvdW5kQ29uZi5FdmVudERpZ2dpbmdSb3VuZE1hcEFCUGF0Y2hFbnRyeRpX",
            "ChlFdmVudERpZ2dpbmdSb3VuZE1hcEVudHJ5EgsKA2tleRgBIAEoBRIpCgV2",
            "YWx1ZRgCIAEoCzIaLnJhd2RhdGEuRXZlbnREaWdnaW5nUm91bmQ6AjgBGmMK",
            "G0V2ZW50RGlnZ2luZ1JvdW5kTWFwQUJFbnRyeRILCgNrZXkYASABKAkSMwoF",
            "dmFsdWUYAiABKAsyJC5yYXdkYXRhLkV2ZW50RGlnZ2luZ1JvdW5kTWFwQUJW",
            "YWx1ZToCOAEaaAogRXZlbnREaWdnaW5nUm91bmRNYXBBQlBhdGNoRW50cnkS",
            "CwoDa2V5GAEgASgJEjMKBXZhbHVlGAIgASgLMiQucmF3ZGF0YS5FdmVudERp",
            "Z2dpbmdSb3VuZE1hcEFCVmFsdWU6AjgBQj1aLWdpdGxhYi5mdW5wbHVzLmlv",
            "L2ZhdC9jb25mL2dlbi9nb2xhbmcvcmF3ZGF0YaoCC2ZhdC5yYXdkYXRhYgZw",
            "cm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventDiggingRound), global::fat.rawdata.EventDiggingRound.Parser, new[]{ "Id", "IncludeDiggingId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventDiggingRoundMapABValue), global::fat.rawdata.EventDiggingRoundMapABValue.Parser, new[]{ "EventDiggingRoundMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventDiggingRoundConf), global::fat.rawdata.EventDiggingRoundConf.Parser, new[]{ "EventDiggingRoundMap", "EventDiggingRoundMapAB", "EventDiggingRoundMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventDiggingRound",table="EventDiggingRoundMap",table_wrapper="EventDiggingRoundConf",map="true",map_key_type="int32",data="EventDiggingRoundConf")
  /// annotation@ab(table_ab="EventDiggingRoundMapAB",table_ab_patch="EventDiggingRoundMapABPatch",table_ab_value="EventDiggingRoundMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventDiggingRound(id="id")
  /// </summary>
  public sealed partial class EventDiggingRound : pb::IMessage<EventDiggingRound>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventDiggingRound> _parser = new pb::MessageParser<EventDiggingRound>(() => new EventDiggingRound());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventDiggingRound> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventDiggingRoundConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventDiggingRound() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventDiggingRound(EventDiggingRound other) : this() {
      id_ = other.id_;
      includeDiggingId_ = other.includeDiggingId_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventDiggingRound Clone() {
      return new EventDiggingRound(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 挖沙活动模板ID
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "includeDiggingId" field.</summary>
    public const int IncludeDiggingIdFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_includeDiggingId_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> includeDiggingId_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 挖沙活动包含哪几轮活动
    /// （EventDigging.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> IncludeDiggingId {
      get { return includeDiggingId_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventDiggingRound);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventDiggingRound other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!includeDiggingId_.Equals(other.includeDiggingId_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      hash ^= includeDiggingId_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      includeDiggingId_.WriteTo(output, _repeated_includeDiggingId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      includeDiggingId_.WriteTo(ref output, _repeated_includeDiggingId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      size += includeDiggingId_.CalculateSize(_repeated_includeDiggingId_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventDiggingRound other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      includeDiggingId_.Add(other.includeDiggingId_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            includeDiggingId_.AddEntriesFrom(input, _repeated_includeDiggingId_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            includeDiggingId_.AddEntriesFrom(ref input, _repeated_includeDiggingId_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventDiggingRoundMapABValue : pb::IMessage<EventDiggingRoundMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventDiggingRoundMapABValue> _parser = new pb::MessageParser<EventDiggingRoundMapABValue>(() => new EventDiggingRoundMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventDiggingRoundMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventDiggingRoundConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventDiggingRoundMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventDiggingRoundMapABValue(EventDiggingRoundMapABValue other) : this() {
      eventDiggingRoundMap_ = other.eventDiggingRoundMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventDiggingRoundMapABValue Clone() {
      return new EventDiggingRoundMapABValue(this);
    }

    /// <summary>Field number for the "EventDiggingRoundMap" field.</summary>
    public const int EventDiggingRoundMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventDiggingRound>.Codec _map_eventDiggingRoundMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventDiggingRound>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventDiggingRound.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventDiggingRound> eventDiggingRoundMap_ = new pbc::MapField<int, global::fat.rawdata.EventDiggingRound>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventDiggingRound> EventDiggingRoundMap {
      get { return eventDiggingRoundMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventDiggingRoundMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventDiggingRoundMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventDiggingRoundMap.Equals(other.EventDiggingRoundMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventDiggingRoundMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventDiggingRoundMap_.WriteTo(output, _map_eventDiggingRoundMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventDiggingRoundMap_.WriteTo(ref output, _map_eventDiggingRoundMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventDiggingRoundMap_.CalculateSize(_map_eventDiggingRoundMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventDiggingRoundMapABValue other) {
      if (other == null) {
        return;
      }
      eventDiggingRoundMap_.Add(other.eventDiggingRoundMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventDiggingRoundMap_.AddEntriesFrom(input, _map_eventDiggingRoundMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventDiggingRoundMap_.AddEntriesFrom(ref input, _map_eventDiggingRoundMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventDiggingRoundConf : pb::IMessage<EventDiggingRoundConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventDiggingRoundConf> _parser = new pb::MessageParser<EventDiggingRoundConf>(() => new EventDiggingRoundConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventDiggingRoundConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventDiggingRoundConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventDiggingRoundConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventDiggingRoundConf(EventDiggingRoundConf other) : this() {
      eventDiggingRoundMap_ = other.eventDiggingRoundMap_.Clone();
      eventDiggingRoundMapAB_ = other.eventDiggingRoundMapAB_.Clone();
      eventDiggingRoundMapABPatch_ = other.eventDiggingRoundMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventDiggingRoundConf Clone() {
      return new EventDiggingRoundConf(this);
    }

    /// <summary>Field number for the "EventDiggingRoundMap" field.</summary>
    public const int EventDiggingRoundMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventDiggingRound>.Codec _map_eventDiggingRoundMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventDiggingRound>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventDiggingRound.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventDiggingRound> eventDiggingRoundMap_ = new pbc::MapField<int, global::fat.rawdata.EventDiggingRound>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventDiggingRound> EventDiggingRoundMap {
      get { return eventDiggingRoundMap_; }
    }

    /// <summary>Field number for the "EventDiggingRoundMapAB" field.</summary>
    public const int EventDiggingRoundMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventDiggingRoundMapABValue>.Codec _map_eventDiggingRoundMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventDiggingRoundMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventDiggingRoundMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventDiggingRoundMapABValue> eventDiggingRoundMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventDiggingRoundMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventDiggingRoundMapABValue> EventDiggingRoundMapAB {
      get { return eventDiggingRoundMapAB_; }
    }

    /// <summary>Field number for the "EventDiggingRoundMapABPatch" field.</summary>
    public const int EventDiggingRoundMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventDiggingRoundMapABValue>.Codec _map_eventDiggingRoundMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventDiggingRoundMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventDiggingRoundMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventDiggingRoundMapABValue> eventDiggingRoundMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventDiggingRoundMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventDiggingRoundMapABValue> EventDiggingRoundMapABPatch {
      get { return eventDiggingRoundMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventDiggingRoundConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventDiggingRoundConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventDiggingRoundMap.Equals(other.EventDiggingRoundMap)) return false;
      if (!EventDiggingRoundMapAB.Equals(other.EventDiggingRoundMapAB)) return false;
      if (!EventDiggingRoundMapABPatch.Equals(other.EventDiggingRoundMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventDiggingRoundMap.GetHashCode();
      hash ^= EventDiggingRoundMapAB.GetHashCode();
      hash ^= EventDiggingRoundMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventDiggingRoundMap_.WriteTo(output, _map_eventDiggingRoundMap_codec);
      eventDiggingRoundMapAB_.WriteTo(output, _map_eventDiggingRoundMapAB_codec);
      eventDiggingRoundMapABPatch_.WriteTo(output, _map_eventDiggingRoundMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventDiggingRoundMap_.WriteTo(ref output, _map_eventDiggingRoundMap_codec);
      eventDiggingRoundMapAB_.WriteTo(ref output, _map_eventDiggingRoundMapAB_codec);
      eventDiggingRoundMapABPatch_.WriteTo(ref output, _map_eventDiggingRoundMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventDiggingRoundMap_.CalculateSize(_map_eventDiggingRoundMap_codec);
      size += eventDiggingRoundMapAB_.CalculateSize(_map_eventDiggingRoundMapAB_codec);
      size += eventDiggingRoundMapABPatch_.CalculateSize(_map_eventDiggingRoundMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventDiggingRoundConf other) {
      if (other == null) {
        return;
      }
      eventDiggingRoundMap_.Add(other.eventDiggingRoundMap_);
      eventDiggingRoundMapAB_.Add(other.eventDiggingRoundMapAB_);
      eventDiggingRoundMapABPatch_.Add(other.eventDiggingRoundMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventDiggingRoundMap_.AddEntriesFrom(input, _map_eventDiggingRoundMap_codec);
            break;
          }
          case 18: {
            eventDiggingRoundMapAB_.AddEntriesFrom(input, _map_eventDiggingRoundMapAB_codec);
            break;
          }
          case 26: {
            eventDiggingRoundMapABPatch_.AddEntriesFrom(input, _map_eventDiggingRoundMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventDiggingRoundMap_.AddEntriesFrom(ref input, _map_eventDiggingRoundMap_codec);
            break;
          }
          case 18: {
            eventDiggingRoundMapAB_.AddEntriesFrom(ref input, _map_eventDiggingRoundMapAB_codec);
            break;
          }
          case 26: {
            eventDiggingRoundMapABPatch_.AddEntriesFrom(ref input, _map_eventDiggingRoundMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
