// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/NewSessionPackConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/NewSessionPackConf.proto</summary>
  public static partial class NewSessionPackConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/NewSessionPackConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static NewSessionPackConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiByYXdkYXRhL05ld1Nlc3Npb25QYWNrQ29uZi5wcm90bxIHcmF3ZGF0YSKB",
            "AQoOTmV3U2Vzc2lvblBhY2sSCgoCaWQYASABKAUSEwoLYWN0aXZlTGV2ZWwY",
            "AiABKAUSEgoKZXZlbnRUaGVtZRgDIAEoBRIRCglwYWNrR3JwSWQYBCABKAUS",
            "EAoIcGF5dGltZXMYBSABKAUSFQoNc2h1dGRvd25MZXZlbBgGIAEoBSLCAQoY",
            "TmV3U2Vzc2lvblBhY2tNYXBBQlZhbHVlElMKEU5ld1Nlc3Npb25QYWNrTWFw",
            "GAEgAygLMjgucmF3ZGF0YS5OZXdTZXNzaW9uUGFja01hcEFCVmFsdWUuTmV3",
            "U2Vzc2lvblBhY2tNYXBFbnRyeRpRChZOZXdTZXNzaW9uUGFja01hcEVudHJ5",
            "EgsKA2tleRgBIAEoBRImCgV2YWx1ZRgCIAEoCzIXLnJhd2RhdGEuTmV3U2Vz",
            "c2lvblBhY2s6AjgBIqkEChJOZXdTZXNzaW9uUGFja0NvbmYSTQoRTmV3U2Vz",
            "c2lvblBhY2tNYXAYASADKAsyMi5yYXdkYXRhLk5ld1Nlc3Npb25QYWNrQ29u",
            "Zi5OZXdTZXNzaW9uUGFja01hcEVudHJ5ElEKE05ld1Nlc3Npb25QYWNrTWFw",
            "QUIYAiADKAsyNC5yYXdkYXRhLk5ld1Nlc3Npb25QYWNrQ29uZi5OZXdTZXNz",
            "aW9uUGFja01hcEFCRW50cnkSWwoYTmV3U2Vzc2lvblBhY2tNYXBBQlBhdGNo",
            "GAMgAygLMjkucmF3ZGF0YS5OZXdTZXNzaW9uUGFja0NvbmYuTmV3U2Vzc2lv",
            "blBhY2tNYXBBQlBhdGNoRW50cnkaUQoWTmV3U2Vzc2lvblBhY2tNYXBFbnRy",
            "eRILCgNrZXkYASABKAUSJgoFdmFsdWUYAiABKAsyFy5yYXdkYXRhLk5ld1Nl",
            "c3Npb25QYWNrOgI4ARpdChhOZXdTZXNzaW9uUGFja01hcEFCRW50cnkSCwoD",
            "a2V5GAEgASgJEjAKBXZhbHVlGAIgASgLMiEucmF3ZGF0YS5OZXdTZXNzaW9u",
            "UGFja01hcEFCVmFsdWU6AjgBGmIKHU5ld1Nlc3Npb25QYWNrTWFwQUJQYXRj",
            "aEVudHJ5EgsKA2tleRgBIAEoCRIwCgV2YWx1ZRgCIAEoCzIhLnJhd2RhdGEu",
            "TmV3U2Vzc2lvblBhY2tNYXBBQlZhbHVlOgI4AUI9Wi1naXRsYWIuZnVucGx1",
            "cy5pby9mYXQvY29uZi9nZW4vZ29sYW5nL3Jhd2RhdGGqAgtmYXQucmF3ZGF0",
            "YWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.NewSessionPack), global::fat.rawdata.NewSessionPack.Parser, new[]{ "Id", "ActiveLevel", "EventTheme", "PackGrpId", "Paytimes", "ShutdownLevel" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.NewSessionPackMapABValue), global::fat.rawdata.NewSessionPackMapABValue.Parser, new[]{ "NewSessionPackMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.NewSessionPackConf), global::fat.rawdata.NewSessionPackConf.Parser, new[]{ "NewSessionPackMap", "NewSessionPackMapAB", "NewSessionPackMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="NewSessionPack",table="NewSessionPackMap",table_wrapper="NewSessionPackConf",map="true",map_key_type="int32",data="NewSessionPackConf")
  /// annotation@ab(table_ab="NewSessionPackMapAB",table_ab_patch="NewSessionPackMapABPatch",table_ab_value="NewSessionPackMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@NewSessionPack(id="id")
  /// </summary>
  public sealed partial class NewSessionPack : pb::IMessage<NewSessionPack>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NewSessionPack> _parser = new pb::MessageParser<NewSessionPack>(() => new NewSessionPack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NewSessionPack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.NewSessionPackConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewSessionPack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewSessionPack(NewSessionPack other) : this() {
      id_ = other.id_;
      activeLevel_ = other.activeLevel_;
      eventTheme_ = other.eventTheme_;
      packGrpId_ = other.packGrpId_;
      paytimes_ = other.paytimes_;
      shutdownLevel_ = other.shutdownLevel_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewSessionPack Clone() {
      return new NewSessionPack(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 每日推送礼包
    /// 模板ID
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "activeLevel" field.</summary>
    public const int ActiveLevelFieldNumber = 2;
    private int activeLevel_;
    /// <summary>
    /// 激活等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ActiveLevel {
      get { return activeLevel_; }
      set {
        activeLevel_ = value;
      }
    }

    /// <summary>Field number for the "eventTheme" field.</summary>
    public const int EventThemeFieldNumber = 3;
    private int eventTheme_;
    /// <summary>
    /// 活动弹板ID
    /// （EventTheme.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EventTheme {
      get { return eventTheme_; }
      set {
        eventTheme_ = value;
      }
    }

    /// <summary>Field number for the "packGrpId" field.</summary>
    public const int PackGrpIdFieldNumber = 4;
    private int packGrpId_;
    /// <summary>
    /// 内购商品ID
    /// （受档位组控制）
    /// （GradeIndexMapping.id）
    /// （IAPPack.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PackGrpId {
      get { return packGrpId_; }
      set {
        packGrpId_ = value;
      }
    }

    /// <summary>Field number for the "paytimes" field.</summary>
    public const int PaytimesFieldNumber = 5;
    private int paytimes_;
    /// <summary>
    /// 限购次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Paytimes {
      get { return paytimes_; }
      set {
        paytimes_ = value;
      }
    }

    /// <summary>Field number for the "shutdownLevel" field.</summary>
    public const int ShutdownLevelFieldNumber = 6;
    private int shutdownLevel_;
    /// <summary>
    /// 关闭等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ShutdownLevel {
      get { return shutdownLevel_; }
      set {
        shutdownLevel_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NewSessionPack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NewSessionPack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ActiveLevel != other.ActiveLevel) return false;
      if (EventTheme != other.EventTheme) return false;
      if (PackGrpId != other.PackGrpId) return false;
      if (Paytimes != other.Paytimes) return false;
      if (ShutdownLevel != other.ShutdownLevel) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (ActiveLevel != 0) hash ^= ActiveLevel.GetHashCode();
      if (EventTheme != 0) hash ^= EventTheme.GetHashCode();
      if (PackGrpId != 0) hash ^= PackGrpId.GetHashCode();
      if (Paytimes != 0) hash ^= Paytimes.GetHashCode();
      if (ShutdownLevel != 0) hash ^= ShutdownLevel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (ActiveLevel != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ActiveLevel);
      }
      if (EventTheme != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(EventTheme);
      }
      if (PackGrpId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(PackGrpId);
      }
      if (Paytimes != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Paytimes);
      }
      if (ShutdownLevel != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(ShutdownLevel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (ActiveLevel != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ActiveLevel);
      }
      if (EventTheme != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(EventTheme);
      }
      if (PackGrpId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(PackGrpId);
      }
      if (Paytimes != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Paytimes);
      }
      if (ShutdownLevel != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(ShutdownLevel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (ActiveLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ActiveLevel);
      }
      if (EventTheme != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EventTheme);
      }
      if (PackGrpId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PackGrpId);
      }
      if (Paytimes != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Paytimes);
      }
      if (ShutdownLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ShutdownLevel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NewSessionPack other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.ActiveLevel != 0) {
        ActiveLevel = other.ActiveLevel;
      }
      if (other.EventTheme != 0) {
        EventTheme = other.EventTheme;
      }
      if (other.PackGrpId != 0) {
        PackGrpId = other.PackGrpId;
      }
      if (other.Paytimes != 0) {
        Paytimes = other.Paytimes;
      }
      if (other.ShutdownLevel != 0) {
        ShutdownLevel = other.ShutdownLevel;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            ActiveLevel = input.ReadInt32();
            break;
          }
          case 24: {
            EventTheme = input.ReadInt32();
            break;
          }
          case 32: {
            PackGrpId = input.ReadInt32();
            break;
          }
          case 40: {
            Paytimes = input.ReadInt32();
            break;
          }
          case 48: {
            ShutdownLevel = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            ActiveLevel = input.ReadInt32();
            break;
          }
          case 24: {
            EventTheme = input.ReadInt32();
            break;
          }
          case 32: {
            PackGrpId = input.ReadInt32();
            break;
          }
          case 40: {
            Paytimes = input.ReadInt32();
            break;
          }
          case 48: {
            ShutdownLevel = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class NewSessionPackMapABValue : pb::IMessage<NewSessionPackMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NewSessionPackMapABValue> _parser = new pb::MessageParser<NewSessionPackMapABValue>(() => new NewSessionPackMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NewSessionPackMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.NewSessionPackConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewSessionPackMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewSessionPackMapABValue(NewSessionPackMapABValue other) : this() {
      newSessionPackMap_ = other.newSessionPackMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewSessionPackMapABValue Clone() {
      return new NewSessionPackMapABValue(this);
    }

    /// <summary>Field number for the "NewSessionPackMap" field.</summary>
    public const int NewSessionPackMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.NewSessionPack>.Codec _map_newSessionPackMap_codec
        = new pbc::MapField<int, global::fat.rawdata.NewSessionPack>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.NewSessionPack.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.NewSessionPack> newSessionPackMap_ = new pbc::MapField<int, global::fat.rawdata.NewSessionPack>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.NewSessionPack> NewSessionPackMap {
      get { return newSessionPackMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NewSessionPackMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NewSessionPackMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!NewSessionPackMap.Equals(other.NewSessionPackMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= NewSessionPackMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      newSessionPackMap_.WriteTo(output, _map_newSessionPackMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      newSessionPackMap_.WriteTo(ref output, _map_newSessionPackMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += newSessionPackMap_.CalculateSize(_map_newSessionPackMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NewSessionPackMapABValue other) {
      if (other == null) {
        return;
      }
      newSessionPackMap_.Add(other.newSessionPackMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            newSessionPackMap_.AddEntriesFrom(input, _map_newSessionPackMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            newSessionPackMap_.AddEntriesFrom(ref input, _map_newSessionPackMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class NewSessionPackConf : pb::IMessage<NewSessionPackConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NewSessionPackConf> _parser = new pb::MessageParser<NewSessionPackConf>(() => new NewSessionPackConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NewSessionPackConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.NewSessionPackConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewSessionPackConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewSessionPackConf(NewSessionPackConf other) : this() {
      newSessionPackMap_ = other.newSessionPackMap_.Clone();
      newSessionPackMapAB_ = other.newSessionPackMapAB_.Clone();
      newSessionPackMapABPatch_ = other.newSessionPackMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewSessionPackConf Clone() {
      return new NewSessionPackConf(this);
    }

    /// <summary>Field number for the "NewSessionPackMap" field.</summary>
    public const int NewSessionPackMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.NewSessionPack>.Codec _map_newSessionPackMap_codec
        = new pbc::MapField<int, global::fat.rawdata.NewSessionPack>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.NewSessionPack.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.NewSessionPack> newSessionPackMap_ = new pbc::MapField<int, global::fat.rawdata.NewSessionPack>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.NewSessionPack> NewSessionPackMap {
      get { return newSessionPackMap_; }
    }

    /// <summary>Field number for the "NewSessionPackMapAB" field.</summary>
    public const int NewSessionPackMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.NewSessionPackMapABValue>.Codec _map_newSessionPackMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.NewSessionPackMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.NewSessionPackMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.NewSessionPackMapABValue> newSessionPackMapAB_ = new pbc::MapField<string, global::fat.rawdata.NewSessionPackMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.NewSessionPackMapABValue> NewSessionPackMapAB {
      get { return newSessionPackMapAB_; }
    }

    /// <summary>Field number for the "NewSessionPackMapABPatch" field.</summary>
    public const int NewSessionPackMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.NewSessionPackMapABValue>.Codec _map_newSessionPackMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.NewSessionPackMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.NewSessionPackMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.NewSessionPackMapABValue> newSessionPackMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.NewSessionPackMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.NewSessionPackMapABValue> NewSessionPackMapABPatch {
      get { return newSessionPackMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NewSessionPackConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NewSessionPackConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!NewSessionPackMap.Equals(other.NewSessionPackMap)) return false;
      if (!NewSessionPackMapAB.Equals(other.NewSessionPackMapAB)) return false;
      if (!NewSessionPackMapABPatch.Equals(other.NewSessionPackMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= NewSessionPackMap.GetHashCode();
      hash ^= NewSessionPackMapAB.GetHashCode();
      hash ^= NewSessionPackMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      newSessionPackMap_.WriteTo(output, _map_newSessionPackMap_codec);
      newSessionPackMapAB_.WriteTo(output, _map_newSessionPackMapAB_codec);
      newSessionPackMapABPatch_.WriteTo(output, _map_newSessionPackMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      newSessionPackMap_.WriteTo(ref output, _map_newSessionPackMap_codec);
      newSessionPackMapAB_.WriteTo(ref output, _map_newSessionPackMapAB_codec);
      newSessionPackMapABPatch_.WriteTo(ref output, _map_newSessionPackMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += newSessionPackMap_.CalculateSize(_map_newSessionPackMap_codec);
      size += newSessionPackMapAB_.CalculateSize(_map_newSessionPackMapAB_codec);
      size += newSessionPackMapABPatch_.CalculateSize(_map_newSessionPackMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NewSessionPackConf other) {
      if (other == null) {
        return;
      }
      newSessionPackMap_.Add(other.newSessionPackMap_);
      newSessionPackMapAB_.Add(other.newSessionPackMapAB_);
      newSessionPackMapABPatch_.Add(other.newSessionPackMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            newSessionPackMap_.AddEntriesFrom(input, _map_newSessionPackMap_codec);
            break;
          }
          case 18: {
            newSessionPackMapAB_.AddEntriesFrom(input, _map_newSessionPackMapAB_codec);
            break;
          }
          case 26: {
            newSessionPackMapABPatch_.AddEntriesFrom(input, _map_newSessionPackMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            newSessionPackMap_.AddEntriesFrom(ref input, _map_newSessionPackMap_codec);
            break;
          }
          case 18: {
            newSessionPackMapAB_.AddEntriesFrom(ref input, _map_newSessionPackMapAB_codec);
            break;
          }
          case 26: {
            newSessionPackMapABPatch_.AddEntriesFrom(ref input, _map_newSessionPackMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
