// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventMiniBoardMultiGroupConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventMiniBoardMultiGroupConf.proto</summary>
  public static partial class EventMiniBoardMultiGroupConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventMiniBoardMultiGroupConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventMiniBoardMultiGroupConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CipyYXdkYXRhL0V2ZW50TWluaUJvYXJkTXVsdGlHcm91cENvbmYucHJvdG8S",
            "B3Jhd2RhdGEiVwoYRXZlbnRNaW5pQm9hcmRNdWx0aUdyb3VwEgoKAmlkGAEg",
            "ASgFEgwKBGRpZmYYBCABKAUSDgoGaW5mb0lkGAIgAygFEhEKCW1pbGVzdG9u",
            "ZRgDIAEoBSL+AQoiRXZlbnRNaW5pQm9hcmRNdWx0aUdyb3VwTWFwQUJWYWx1",
            "ZRJxChtFdmVudE1pbmlCb2FyZE11bHRpR3JvdXBNYXAYASADKAsyTC5yYXdk",
            "YXRhLkV2ZW50TWluaUJvYXJkTXVsdGlHcm91cE1hcEFCVmFsdWUuRXZlbnRN",
            "aW5pQm9hcmRNdWx0aUdyb3VwTWFwRW50cnkaZQogRXZlbnRNaW5pQm9hcmRN",
            "dWx0aUdyb3VwTWFwRW50cnkSCwoDa2V5GAEgASgFEjAKBXZhbHVlGAIgASgL",
            "MiEucmF3ZGF0YS5FdmVudE1pbmlCb2FyZE11bHRpR3JvdXA6AjgBIskFChxF",
            "dmVudE1pbmlCb2FyZE11bHRpR3JvdXBDb25mEmsKG0V2ZW50TWluaUJvYXJk",
            "TXVsdGlHcm91cE1hcBgBIAMoCzJGLnJhd2RhdGEuRXZlbnRNaW5pQm9hcmRN",
            "dWx0aUdyb3VwQ29uZi5FdmVudE1pbmlCb2FyZE11bHRpR3JvdXBNYXBFbnRy",
            "eRJvCh1FdmVudE1pbmlCb2FyZE11bHRpR3JvdXBNYXBBQhgCIAMoCzJILnJh",
            "d2RhdGEuRXZlbnRNaW5pQm9hcmRNdWx0aUdyb3VwQ29uZi5FdmVudE1pbmlC",
            "b2FyZE11bHRpR3JvdXBNYXBBQkVudHJ5EnkKIkV2ZW50TWluaUJvYXJkTXVs",
            "dGlHcm91cE1hcEFCUGF0Y2gYAyADKAsyTS5yYXdkYXRhLkV2ZW50TWluaUJv",
            "YXJkTXVsdGlHcm91cENvbmYuRXZlbnRNaW5pQm9hcmRNdWx0aUdyb3VwTWFw",
            "QUJQYXRjaEVudHJ5GmUKIEV2ZW50TWluaUJvYXJkTXVsdGlHcm91cE1hcEVu",
            "dHJ5EgsKA2tleRgBIAEoBRIwCgV2YWx1ZRgCIAEoCzIhLnJhd2RhdGEuRXZl",
            "bnRNaW5pQm9hcmRNdWx0aUdyb3VwOgI4ARpxCiJFdmVudE1pbmlCb2FyZE11",
            "bHRpR3JvdXBNYXBBQkVudHJ5EgsKA2tleRgBIAEoCRI6CgV2YWx1ZRgCIAEo",
            "CzIrLnJhd2RhdGEuRXZlbnRNaW5pQm9hcmRNdWx0aUdyb3VwTWFwQUJWYWx1",
            "ZToCOAEadgonRXZlbnRNaW5pQm9hcmRNdWx0aUdyb3VwTWFwQUJQYXRjaEVu",
            "dHJ5EgsKA2tleRgBIAEoCRI6CgV2YWx1ZRgCIAEoCzIrLnJhd2RhdGEuRXZl",
            "bnRNaW5pQm9hcmRNdWx0aUdyb3VwTWFwQUJWYWx1ZToCOAFCPVotZ2l0bGFi",
            "LmZ1bnBsdXMuaW8vZmF0L2NvbmYvZ2VuL2dvbGFuZy9yYXdkYXRhqgILZmF0",
            "LnJhd2RhdGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventMiniBoardMultiGroup), global::fat.rawdata.EventMiniBoardMultiGroup.Parser, new[]{ "Id", "Diff", "InfoId", "Milestone" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventMiniBoardMultiGroupMapABValue), global::fat.rawdata.EventMiniBoardMultiGroupMapABValue.Parser, new[]{ "EventMiniBoardMultiGroupMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventMiniBoardMultiGroupConf), global::fat.rawdata.EventMiniBoardMultiGroupConf.Parser, new[]{ "EventMiniBoardMultiGroupMap", "EventMiniBoardMultiGroupMapAB", "EventMiniBoardMultiGroupMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventMiniBoardMultiGroup",table="EventMiniBoardMultiGroupMap",table_wrapper="EventMiniBoardMultiGroupConf",map="true",map_key_type="int32",data="EventMiniBoardMultiGroupConf")
  /// annotation@ab(table_ab="EventMiniBoardMultiGroupMapAB",table_ab_patch="EventMiniBoardMultiGroupMapABPatch",table_ab_value="EventMiniBoardMultiGroupMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventMiniBoardMultiGroup(id="id")
  /// </summary>
  public sealed partial class EventMiniBoardMultiGroup : pb::IMessage<EventMiniBoardMultiGroup>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventMiniBoardMultiGroup> _parser = new pb::MessageParser<EventMiniBoardMultiGroup>(() => new EventMiniBoardMultiGroup());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventMiniBoardMultiGroup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventMiniBoardMultiGroupConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMiniBoardMultiGroup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMiniBoardMultiGroup(EventMiniBoardMultiGroup other) : this() {
      id_ = other.id_;
      diff_ = other.diff_;
      infoId_ = other.infoId_.Clone();
      milestone_ = other.milestone_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMiniBoardMultiGroup Clone() {
      return new EventMiniBoardMultiGroup(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// ID
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "diff" field.</summary>
    public const int DiffFieldNumber = 4;
    private int diff_;
    /// <summary>
    /// 难度
    /// （仅TGA使用）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Diff {
      get { return diff_; }
      set {
        diff_ = value;
      }
    }

    /// <summary>Field number for the "infoId" field.</summary>
    public const int InfoIdFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_infoId_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> infoId_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// infoId
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> InfoId {
      get { return infoId_; }
    }

    /// <summary>Field number for the "milestone" field.</summary>
    public const int MilestoneFieldNumber = 3;
    private int milestone_;
    /// <summary>
    /// 总阶段数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Milestone {
      get { return milestone_; }
      set {
        milestone_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventMiniBoardMultiGroup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventMiniBoardMultiGroup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Diff != other.Diff) return false;
      if(!infoId_.Equals(other.infoId_)) return false;
      if (Milestone != other.Milestone) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Diff != 0) hash ^= Diff.GetHashCode();
      hash ^= infoId_.GetHashCode();
      if (Milestone != 0) hash ^= Milestone.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      infoId_.WriteTo(output, _repeated_infoId_codec);
      if (Milestone != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Milestone);
      }
      if (Diff != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Diff);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      infoId_.WriteTo(ref output, _repeated_infoId_codec);
      if (Milestone != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Milestone);
      }
      if (Diff != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Diff);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Diff != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Diff);
      }
      size += infoId_.CalculateSize(_repeated_infoId_codec);
      if (Milestone != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Milestone);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventMiniBoardMultiGroup other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Diff != 0) {
        Diff = other.Diff;
      }
      infoId_.Add(other.infoId_);
      if (other.Milestone != 0) {
        Milestone = other.Milestone;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            infoId_.AddEntriesFrom(input, _repeated_infoId_codec);
            break;
          }
          case 24: {
            Milestone = input.ReadInt32();
            break;
          }
          case 32: {
            Diff = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            infoId_.AddEntriesFrom(ref input, _repeated_infoId_codec);
            break;
          }
          case 24: {
            Milestone = input.ReadInt32();
            break;
          }
          case 32: {
            Diff = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventMiniBoardMultiGroupMapABValue : pb::IMessage<EventMiniBoardMultiGroupMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventMiniBoardMultiGroupMapABValue> _parser = new pb::MessageParser<EventMiniBoardMultiGroupMapABValue>(() => new EventMiniBoardMultiGroupMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventMiniBoardMultiGroupMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventMiniBoardMultiGroupConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMiniBoardMultiGroupMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMiniBoardMultiGroupMapABValue(EventMiniBoardMultiGroupMapABValue other) : this() {
      eventMiniBoardMultiGroupMap_ = other.eventMiniBoardMultiGroupMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMiniBoardMultiGroupMapABValue Clone() {
      return new EventMiniBoardMultiGroupMapABValue(this);
    }

    /// <summary>Field number for the "EventMiniBoardMultiGroupMap" field.</summary>
    public const int EventMiniBoardMultiGroupMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventMiniBoardMultiGroup>.Codec _map_eventMiniBoardMultiGroupMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventMiniBoardMultiGroup>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventMiniBoardMultiGroup.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventMiniBoardMultiGroup> eventMiniBoardMultiGroupMap_ = new pbc::MapField<int, global::fat.rawdata.EventMiniBoardMultiGroup>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventMiniBoardMultiGroup> EventMiniBoardMultiGroupMap {
      get { return eventMiniBoardMultiGroupMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventMiniBoardMultiGroupMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventMiniBoardMultiGroupMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventMiniBoardMultiGroupMap.Equals(other.EventMiniBoardMultiGroupMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventMiniBoardMultiGroupMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventMiniBoardMultiGroupMap_.WriteTo(output, _map_eventMiniBoardMultiGroupMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventMiniBoardMultiGroupMap_.WriteTo(ref output, _map_eventMiniBoardMultiGroupMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventMiniBoardMultiGroupMap_.CalculateSize(_map_eventMiniBoardMultiGroupMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventMiniBoardMultiGroupMapABValue other) {
      if (other == null) {
        return;
      }
      eventMiniBoardMultiGroupMap_.Add(other.eventMiniBoardMultiGroupMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventMiniBoardMultiGroupMap_.AddEntriesFrom(input, _map_eventMiniBoardMultiGroupMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventMiniBoardMultiGroupMap_.AddEntriesFrom(ref input, _map_eventMiniBoardMultiGroupMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventMiniBoardMultiGroupConf : pb::IMessage<EventMiniBoardMultiGroupConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventMiniBoardMultiGroupConf> _parser = new pb::MessageParser<EventMiniBoardMultiGroupConf>(() => new EventMiniBoardMultiGroupConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventMiniBoardMultiGroupConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventMiniBoardMultiGroupConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMiniBoardMultiGroupConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMiniBoardMultiGroupConf(EventMiniBoardMultiGroupConf other) : this() {
      eventMiniBoardMultiGroupMap_ = other.eventMiniBoardMultiGroupMap_.Clone();
      eventMiniBoardMultiGroupMapAB_ = other.eventMiniBoardMultiGroupMapAB_.Clone();
      eventMiniBoardMultiGroupMapABPatch_ = other.eventMiniBoardMultiGroupMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMiniBoardMultiGroupConf Clone() {
      return new EventMiniBoardMultiGroupConf(this);
    }

    /// <summary>Field number for the "EventMiniBoardMultiGroupMap" field.</summary>
    public const int EventMiniBoardMultiGroupMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventMiniBoardMultiGroup>.Codec _map_eventMiniBoardMultiGroupMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventMiniBoardMultiGroup>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventMiniBoardMultiGroup.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventMiniBoardMultiGroup> eventMiniBoardMultiGroupMap_ = new pbc::MapField<int, global::fat.rawdata.EventMiniBoardMultiGroup>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventMiniBoardMultiGroup> EventMiniBoardMultiGroupMap {
      get { return eventMiniBoardMultiGroupMap_; }
    }

    /// <summary>Field number for the "EventMiniBoardMultiGroupMapAB" field.</summary>
    public const int EventMiniBoardMultiGroupMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventMiniBoardMultiGroupMapABValue>.Codec _map_eventMiniBoardMultiGroupMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventMiniBoardMultiGroupMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventMiniBoardMultiGroupMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventMiniBoardMultiGroupMapABValue> eventMiniBoardMultiGroupMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventMiniBoardMultiGroupMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventMiniBoardMultiGroupMapABValue> EventMiniBoardMultiGroupMapAB {
      get { return eventMiniBoardMultiGroupMapAB_; }
    }

    /// <summary>Field number for the "EventMiniBoardMultiGroupMapABPatch" field.</summary>
    public const int EventMiniBoardMultiGroupMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventMiniBoardMultiGroupMapABValue>.Codec _map_eventMiniBoardMultiGroupMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventMiniBoardMultiGroupMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventMiniBoardMultiGroupMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventMiniBoardMultiGroupMapABValue> eventMiniBoardMultiGroupMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventMiniBoardMultiGroupMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventMiniBoardMultiGroupMapABValue> EventMiniBoardMultiGroupMapABPatch {
      get { return eventMiniBoardMultiGroupMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventMiniBoardMultiGroupConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventMiniBoardMultiGroupConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventMiniBoardMultiGroupMap.Equals(other.EventMiniBoardMultiGroupMap)) return false;
      if (!EventMiniBoardMultiGroupMapAB.Equals(other.EventMiniBoardMultiGroupMapAB)) return false;
      if (!EventMiniBoardMultiGroupMapABPatch.Equals(other.EventMiniBoardMultiGroupMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventMiniBoardMultiGroupMap.GetHashCode();
      hash ^= EventMiniBoardMultiGroupMapAB.GetHashCode();
      hash ^= EventMiniBoardMultiGroupMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventMiniBoardMultiGroupMap_.WriteTo(output, _map_eventMiniBoardMultiGroupMap_codec);
      eventMiniBoardMultiGroupMapAB_.WriteTo(output, _map_eventMiniBoardMultiGroupMapAB_codec);
      eventMiniBoardMultiGroupMapABPatch_.WriteTo(output, _map_eventMiniBoardMultiGroupMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventMiniBoardMultiGroupMap_.WriteTo(ref output, _map_eventMiniBoardMultiGroupMap_codec);
      eventMiniBoardMultiGroupMapAB_.WriteTo(ref output, _map_eventMiniBoardMultiGroupMapAB_codec);
      eventMiniBoardMultiGroupMapABPatch_.WriteTo(ref output, _map_eventMiniBoardMultiGroupMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventMiniBoardMultiGroupMap_.CalculateSize(_map_eventMiniBoardMultiGroupMap_codec);
      size += eventMiniBoardMultiGroupMapAB_.CalculateSize(_map_eventMiniBoardMultiGroupMapAB_codec);
      size += eventMiniBoardMultiGroupMapABPatch_.CalculateSize(_map_eventMiniBoardMultiGroupMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventMiniBoardMultiGroupConf other) {
      if (other == null) {
        return;
      }
      eventMiniBoardMultiGroupMap_.Add(other.eventMiniBoardMultiGroupMap_);
      eventMiniBoardMultiGroupMapAB_.Add(other.eventMiniBoardMultiGroupMapAB_);
      eventMiniBoardMultiGroupMapABPatch_.Add(other.eventMiniBoardMultiGroupMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventMiniBoardMultiGroupMap_.AddEntriesFrom(input, _map_eventMiniBoardMultiGroupMap_codec);
            break;
          }
          case 18: {
            eventMiniBoardMultiGroupMapAB_.AddEntriesFrom(input, _map_eventMiniBoardMultiGroupMapAB_codec);
            break;
          }
          case 26: {
            eventMiniBoardMultiGroupMapABPatch_.AddEntriesFrom(input, _map_eventMiniBoardMultiGroupMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventMiniBoardMultiGroupMap_.AddEntriesFrom(ref input, _map_eventMiniBoardMultiGroupMap_codec);
            break;
          }
          case 18: {
            eventMiniBoardMultiGroupMapAB_.AddEntriesFrom(ref input, _map_eventMiniBoardMultiGroupMapAB_codec);
            break;
          }
          case 26: {
            eventMiniBoardMultiGroupMapABPatch_.AddEntriesFrom(ref input, _map_eventMiniBoardMultiGroupMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
