// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/FeatureUnlockConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/FeatureUnlockConf.proto</summary>
  public static partial class FeatureUnlockConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/FeatureUnlockConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FeatureUnlockConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch9yYXdkYXRhL0ZlYXR1cmVVbmxvY2tDb25mLnByb3RvEgdyYXdkYXRhGhpy",
            "YXdkYXRhL0ZlYXR1cmVFbnRyeS5wcm90byKtAgoNRmVhdHVyZVVubG9jaxIO",
            "CgZfdGFnc18YASADKAkSDAoEZGVzYxgCIAEoCRIVCg1kaXNwbGF5X2xldmVs",
            "GAMgASgFEhcKD2Rpc3BsYXlfb3JkZXJJZBgOIAMoBRIWCg5kaXNwbGF5X3N0",
            "YXJpZBgEIAMoBRIkCgVlbnRyeRgGIAEoDjIVLnJhd2RhdGEuRmVhdHVyZUVu",
            "dHJ5EhcKD2ZlYXR1cmVNYWludGFpbhgHIAEoBRINCgVndWlkZRgQIAEoBRIR",
            "CglndWlkZURlc2MYCCABKAkSDAoEaWNvbhgJIAEoCRILCgNpbWcYCiABKAkS",
            "CwoDa2V5GBEgASgFEg0KBWxldmVsGAsgASgFEg8KB29yZGVySWQYDyADKAUS",
            "DQoFdGl0bGUYDSABKAkiTwoZRmVhdHVyZVVubG9ja1NsaWNlQUJWYWx1ZRIy",
            "ChJGZWF0dXJlVW5sb2NrU2xpY2UYASADKAsyFi5yYXdkYXRhLkZlYXR1cmVV",
            "bmxvY2siwAMKEUZlYXR1cmVVbmxvY2tDb25mEjIKEkZlYXR1cmVVbmxvY2tT",
            "bGljZRgBIAMoCzIWLnJhd2RhdGEuRmVhdHVyZVVubG9jaxJSChRGZWF0dXJl",
            "VW5sb2NrU2xpY2VBQhgCIAMoCzI0LnJhd2RhdGEuRmVhdHVyZVVubG9ja0Nv",
            "bmYuRmVhdHVyZVVubG9ja1NsaWNlQUJFbnRyeRJcChlGZWF0dXJlVW5sb2Nr",
            "U2xpY2VBQlBhdGNoGAMgAygLMjkucmF3ZGF0YS5GZWF0dXJlVW5sb2NrQ29u",
            "Zi5GZWF0dXJlVW5sb2NrU2xpY2VBQlBhdGNoRW50cnkaXwoZRmVhdHVyZVVu",
            "bG9ja1NsaWNlQUJFbnRyeRILCgNrZXkYASABKAkSMQoFdmFsdWUYAiABKAsy",
            "Ii5yYXdkYXRhLkZlYXR1cmVVbmxvY2tTbGljZUFCVmFsdWU6AjgBGmQKHkZl",
            "YXR1cmVVbmxvY2tTbGljZUFCUGF0Y2hFbnRyeRILCgNrZXkYASABKAkSMQoF",
            "dmFsdWUYAiABKAsyIi5yYXdkYXRhLkZlYXR1cmVVbmxvY2tTbGljZUFCVmFs",
            "dWU6AjgBQj1aLWdpdGxhYi5mdW5wbHVzLmlvL2ZhdC9jb25mL2dlbi9nb2xh",
            "bmcvcmF3ZGF0YaoCC2ZhdC5yYXdkYXRhYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::fat.rawdata.FeatureEntryReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.FeatureUnlock), global::fat.rawdata.FeatureUnlock.Parser, new[]{ "Tags", "Desc", "DisplayLevel", "DisplayOrderId", "DisplayStarid", "Entry", "FeatureMaintain", "Guide", "GuideDesc", "Icon", "Img", "Key", "Level", "OrderId", "Title" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.FeatureUnlockSliceABValue), global::fat.rawdata.FeatureUnlockSliceABValue.Parser, new[]{ "FeatureUnlockSlice" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.FeatureUnlockConf), global::fat.rawdata.FeatureUnlockConf.Parser, new[]{ "FeatureUnlockSlice", "FeatureUnlockSliceAB", "FeatureUnlockSliceABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="FeatureUnlock",table="FeatureUnlockSlice",table_wrapper="FeatureUnlockConf",map="false",map_key_type="",data="FeatureUnlockConf")
  /// annotation@ab(table_ab="FeatureUnlockSliceAB",table_ab_patch="FeatureUnlockSliceABPatch",table_ab_value="FeatureUnlockSliceABValue",ab_patch="true")
  /// annotation@filter(just_server="false",just_client="false")
  /// </summary>
  public sealed partial class FeatureUnlock : pb::IMessage<FeatureUnlock>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FeatureUnlock> _parser = new pb::MessageParser<FeatureUnlock>(() => new FeatureUnlock());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FeatureUnlock> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.FeatureUnlockConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeatureUnlock() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeatureUnlock(FeatureUnlock other) : this() {
      Tags_ = other.Tags_.Clone();
      desc_ = other.desc_;
      displayLevel_ = other.displayLevel_;
      displayOrderId_ = other.displayOrderId_.Clone();
      displayStarid_ = other.displayStarid_.Clone();
      entry_ = other.entry_;
      featureMaintain_ = other.featureMaintain_;
      guide_ = other.guide_;
      guideDesc_ = other.guideDesc_;
      icon_ = other.icon_;
      img_ = other.img_;
      key_ = other.key_;
      level_ = other.level_;
      orderId_ = other.orderId_.Clone();
      title_ = other.title_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeatureUnlock Clone() {
      return new FeatureUnlock(this);
    }

    /// <summary>Field number for the "_tags_" field.</summary>
    public const int TagsFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_Tags_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> Tags_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Tags {
      get { return Tags_; }
    }

    /// <summary>Field number for the "desc" field.</summary>
    public const int DescFieldNumber = 2;
    private string desc_ = "";
    /// <summary>
    /// 描述
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Desc {
      get { return desc_; }
      set {
        desc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "display_level" field.</summary>
    public const int DisplayLevelFieldNumber = 3;
    private int displayLevel_;
    /// <summary>
    /// 显示等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DisplayLevel {
      get { return displayLevel_; }
      set {
        displayLevel_ = value;
      }
    }

    /// <summary>Field number for the "display_orderId" field.</summary>
    public const int DisplayOrderIdFieldNumber = 14;
    private static readonly pb::FieldCodec<int> _repeated_displayOrderId_codec
        = pb::FieldCodec.ForInt32(114);
    private readonly pbc::RepeatedField<int> displayOrderId_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 显示订单ID
    /// （或）
    /// （OrderCommon.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> DisplayOrderId {
      get { return displayOrderId_; }
    }

    /// <summary>Field number for the "display_starid" field.</summary>
    public const int DisplayStaridFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_displayStarid_codec
        = pb::FieldCodec.ForInt32(34);
    private readonly pbc::RepeatedField<int> displayStarid_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 任务ID
    /// （或）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> DisplayStarid {
      get { return displayStarid_; }
    }

    /// <summary>Field number for the "entry" field.</summary>
    public const int EntryFieldNumber = 6;
    private global::fat.rawdata.FeatureEntry entry_ = global::fat.rawdata.FeatureEntry.FeatureNone;
    /// <summary>
    /// 唯一ID
    /// （FeatureEntry@enum）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::fat.rawdata.FeatureEntry Entry {
      get { return entry_; }
      set {
        entry_ = value;
      }
    }

    /// <summary>Field number for the "featureMaintain" field.</summary>
    public const int FeatureMaintainFieldNumber = 7;
    private int featureMaintain_;
    /// <summary>
    /// 1代表维护
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FeatureMaintain {
      get { return featureMaintain_; }
      set {
        featureMaintain_ = value;
      }
    }

    /// <summary>Field number for the "guide" field.</summary>
    public const int GuideFieldNumber = 16;
    private int guide_;
    /// <summary>
    /// 激活引导步骤
    /// （或）
    /// （GuideMerge.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Guide {
      get { return guide_; }
      set {
        guide_ = value;
      }
    }

    /// <summary>Field number for the "guideDesc" field.</summary>
    public const int GuideDescFieldNumber = 8;
    private string guideDesc_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GuideDesc {
      get { return guideDesc_; }
      set {
        guideDesc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "icon" field.</summary>
    public const int IconFieldNumber = 9;
    private string icon_ = "";
    /// <summary>
    /// 图标
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Icon {
      get { return icon_; }
      set {
        icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "img" field.</summary>
    public const int ImgFieldNumber = 10;
    private string img_ = "";
    /// <summary>
    /// 预告大图
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Img {
      get { return img_; }
      set {
        img_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 17;
    private int key_;
    /// <summary>
    /// key
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Key {
      get { return key_; }
      set {
        key_ = value;
      }
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 11;
    private int level_;
    /// <summary>
    /// 激活等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "orderId" field.</summary>
    public const int OrderIdFieldNumber = 15;
    private static readonly pb::FieldCodec<int> _repeated_orderId_codec
        = pb::FieldCodec.ForInt32(122);
    private readonly pbc::RepeatedField<int> orderId_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 订单ID
    /// （或）
    /// （OrderCommon.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> OrderId {
      get { return orderId_; }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 13;
    private string title_ = "";
    /// <summary>
    /// 标题
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FeatureUnlock);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FeatureUnlock other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!Tags_.Equals(other.Tags_)) return false;
      if (Desc != other.Desc) return false;
      if (DisplayLevel != other.DisplayLevel) return false;
      if(!displayOrderId_.Equals(other.displayOrderId_)) return false;
      if(!displayStarid_.Equals(other.displayStarid_)) return false;
      if (Entry != other.Entry) return false;
      if (FeatureMaintain != other.FeatureMaintain) return false;
      if (Guide != other.Guide) return false;
      if (GuideDesc != other.GuideDesc) return false;
      if (Icon != other.Icon) return false;
      if (Img != other.Img) return false;
      if (Key != other.Key) return false;
      if (Level != other.Level) return false;
      if(!orderId_.Equals(other.orderId_)) return false;
      if (Title != other.Title) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= Tags_.GetHashCode();
      if (Desc.Length != 0) hash ^= Desc.GetHashCode();
      if (DisplayLevel != 0) hash ^= DisplayLevel.GetHashCode();
      hash ^= displayOrderId_.GetHashCode();
      hash ^= displayStarid_.GetHashCode();
      if (Entry != global::fat.rawdata.FeatureEntry.FeatureNone) hash ^= Entry.GetHashCode();
      if (FeatureMaintain != 0) hash ^= FeatureMaintain.GetHashCode();
      if (Guide != 0) hash ^= Guide.GetHashCode();
      if (GuideDesc.Length != 0) hash ^= GuideDesc.GetHashCode();
      if (Icon.Length != 0) hash ^= Icon.GetHashCode();
      if (Img.Length != 0) hash ^= Img.GetHashCode();
      if (Key != 0) hash ^= Key.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      hash ^= orderId_.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      Tags_.WriteTo(output, _repeated_Tags_codec);
      if (Desc.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Desc);
      }
      if (DisplayLevel != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(DisplayLevel);
      }
      displayStarid_.WriteTo(output, _repeated_displayStarid_codec);
      if (Entry != global::fat.rawdata.FeatureEntry.FeatureNone) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Entry);
      }
      if (FeatureMaintain != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(FeatureMaintain);
      }
      if (GuideDesc.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(GuideDesc);
      }
      if (Icon.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Icon);
      }
      if (Img.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Img);
      }
      if (Level != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(Level);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(Title);
      }
      displayOrderId_.WriteTo(output, _repeated_displayOrderId_codec);
      orderId_.WriteTo(output, _repeated_orderId_codec);
      if (Guide != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(Guide);
      }
      if (Key != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(Key);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      Tags_.WriteTo(ref output, _repeated_Tags_codec);
      if (Desc.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Desc);
      }
      if (DisplayLevel != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(DisplayLevel);
      }
      displayStarid_.WriteTo(ref output, _repeated_displayStarid_codec);
      if (Entry != global::fat.rawdata.FeatureEntry.FeatureNone) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Entry);
      }
      if (FeatureMaintain != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(FeatureMaintain);
      }
      if (GuideDesc.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(GuideDesc);
      }
      if (Icon.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Icon);
      }
      if (Img.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Img);
      }
      if (Level != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(Level);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(Title);
      }
      displayOrderId_.WriteTo(ref output, _repeated_displayOrderId_codec);
      orderId_.WriteTo(ref output, _repeated_orderId_codec);
      if (Guide != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(Guide);
      }
      if (Key != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(Key);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += Tags_.CalculateSize(_repeated_Tags_codec);
      if (Desc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Desc);
      }
      if (DisplayLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DisplayLevel);
      }
      size += displayOrderId_.CalculateSize(_repeated_displayOrderId_codec);
      size += displayStarid_.CalculateSize(_repeated_displayStarid_codec);
      if (Entry != global::fat.rawdata.FeatureEntry.FeatureNone) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Entry);
      }
      if (FeatureMaintain != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FeatureMaintain);
      }
      if (Guide != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Guide);
      }
      if (GuideDesc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GuideDesc);
      }
      if (Icon.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Icon);
      }
      if (Img.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Img);
      }
      if (Key != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Key);
      }
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      size += orderId_.CalculateSize(_repeated_orderId_codec);
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FeatureUnlock other) {
      if (other == null) {
        return;
      }
      Tags_.Add(other.Tags_);
      if (other.Desc.Length != 0) {
        Desc = other.Desc;
      }
      if (other.DisplayLevel != 0) {
        DisplayLevel = other.DisplayLevel;
      }
      displayOrderId_.Add(other.displayOrderId_);
      displayStarid_.Add(other.displayStarid_);
      if (other.Entry != global::fat.rawdata.FeatureEntry.FeatureNone) {
        Entry = other.Entry;
      }
      if (other.FeatureMaintain != 0) {
        FeatureMaintain = other.FeatureMaintain;
      }
      if (other.Guide != 0) {
        Guide = other.Guide;
      }
      if (other.GuideDesc.Length != 0) {
        GuideDesc = other.GuideDesc;
      }
      if (other.Icon.Length != 0) {
        Icon = other.Icon;
      }
      if (other.Img.Length != 0) {
        Img = other.Img;
      }
      if (other.Key != 0) {
        Key = other.Key;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      orderId_.Add(other.orderId_);
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Tags_.AddEntriesFrom(input, _repeated_Tags_codec);
            break;
          }
          case 18: {
            Desc = input.ReadString();
            break;
          }
          case 24: {
            DisplayLevel = input.ReadInt32();
            break;
          }
          case 34:
          case 32: {
            displayStarid_.AddEntriesFrom(input, _repeated_displayStarid_codec);
            break;
          }
          case 48: {
            Entry = (global::fat.rawdata.FeatureEntry) input.ReadEnum();
            break;
          }
          case 56: {
            FeatureMaintain = input.ReadInt32();
            break;
          }
          case 66: {
            GuideDesc = input.ReadString();
            break;
          }
          case 74: {
            Icon = input.ReadString();
            break;
          }
          case 82: {
            Img = input.ReadString();
            break;
          }
          case 88: {
            Level = input.ReadInt32();
            break;
          }
          case 106: {
            Title = input.ReadString();
            break;
          }
          case 114:
          case 112: {
            displayOrderId_.AddEntriesFrom(input, _repeated_displayOrderId_codec);
            break;
          }
          case 122:
          case 120: {
            orderId_.AddEntriesFrom(input, _repeated_orderId_codec);
            break;
          }
          case 128: {
            Guide = input.ReadInt32();
            break;
          }
          case 136: {
            Key = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Tags_.AddEntriesFrom(ref input, _repeated_Tags_codec);
            break;
          }
          case 18: {
            Desc = input.ReadString();
            break;
          }
          case 24: {
            DisplayLevel = input.ReadInt32();
            break;
          }
          case 34:
          case 32: {
            displayStarid_.AddEntriesFrom(ref input, _repeated_displayStarid_codec);
            break;
          }
          case 48: {
            Entry = (global::fat.rawdata.FeatureEntry) input.ReadEnum();
            break;
          }
          case 56: {
            FeatureMaintain = input.ReadInt32();
            break;
          }
          case 66: {
            GuideDesc = input.ReadString();
            break;
          }
          case 74: {
            Icon = input.ReadString();
            break;
          }
          case 82: {
            Img = input.ReadString();
            break;
          }
          case 88: {
            Level = input.ReadInt32();
            break;
          }
          case 106: {
            Title = input.ReadString();
            break;
          }
          case 114:
          case 112: {
            displayOrderId_.AddEntriesFrom(ref input, _repeated_displayOrderId_codec);
            break;
          }
          case 122:
          case 120: {
            orderId_.AddEntriesFrom(ref input, _repeated_orderId_codec);
            break;
          }
          case 128: {
            Guide = input.ReadInt32();
            break;
          }
          case 136: {
            Key = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class FeatureUnlockSliceABValue : pb::IMessage<FeatureUnlockSliceABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FeatureUnlockSliceABValue> _parser = new pb::MessageParser<FeatureUnlockSliceABValue>(() => new FeatureUnlockSliceABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FeatureUnlockSliceABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.FeatureUnlockConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeatureUnlockSliceABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeatureUnlockSliceABValue(FeatureUnlockSliceABValue other) : this() {
      featureUnlockSlice_ = other.featureUnlockSlice_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeatureUnlockSliceABValue Clone() {
      return new FeatureUnlockSliceABValue(this);
    }

    /// <summary>Field number for the "FeatureUnlockSlice" field.</summary>
    public const int FeatureUnlockSliceFieldNumber = 1;
    private static readonly pb::FieldCodec<global::fat.rawdata.FeatureUnlock> _repeated_featureUnlockSlice_codec
        = pb::FieldCodec.ForMessage(10, global::fat.rawdata.FeatureUnlock.Parser);
    private readonly pbc::RepeatedField<global::fat.rawdata.FeatureUnlock> featureUnlockSlice_ = new pbc::RepeatedField<global::fat.rawdata.FeatureUnlock>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::fat.rawdata.FeatureUnlock> FeatureUnlockSlice {
      get { return featureUnlockSlice_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FeatureUnlockSliceABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FeatureUnlockSliceABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!featureUnlockSlice_.Equals(other.featureUnlockSlice_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= featureUnlockSlice_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      featureUnlockSlice_.WriteTo(output, _repeated_featureUnlockSlice_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      featureUnlockSlice_.WriteTo(ref output, _repeated_featureUnlockSlice_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += featureUnlockSlice_.CalculateSize(_repeated_featureUnlockSlice_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FeatureUnlockSliceABValue other) {
      if (other == null) {
        return;
      }
      featureUnlockSlice_.Add(other.featureUnlockSlice_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            featureUnlockSlice_.AddEntriesFrom(input, _repeated_featureUnlockSlice_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            featureUnlockSlice_.AddEntriesFrom(ref input, _repeated_featureUnlockSlice_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class FeatureUnlockConf : pb::IMessage<FeatureUnlockConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FeatureUnlockConf> _parser = new pb::MessageParser<FeatureUnlockConf>(() => new FeatureUnlockConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FeatureUnlockConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.FeatureUnlockConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeatureUnlockConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeatureUnlockConf(FeatureUnlockConf other) : this() {
      featureUnlockSlice_ = other.featureUnlockSlice_.Clone();
      featureUnlockSliceAB_ = other.featureUnlockSliceAB_.Clone();
      featureUnlockSliceABPatch_ = other.featureUnlockSliceABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeatureUnlockConf Clone() {
      return new FeatureUnlockConf(this);
    }

    /// <summary>Field number for the "FeatureUnlockSlice" field.</summary>
    public const int FeatureUnlockSliceFieldNumber = 1;
    private static readonly pb::FieldCodec<global::fat.rawdata.FeatureUnlock> _repeated_featureUnlockSlice_codec
        = pb::FieldCodec.ForMessage(10, global::fat.rawdata.FeatureUnlock.Parser);
    private readonly pbc::RepeatedField<global::fat.rawdata.FeatureUnlock> featureUnlockSlice_ = new pbc::RepeatedField<global::fat.rawdata.FeatureUnlock>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::fat.rawdata.FeatureUnlock> FeatureUnlockSlice {
      get { return featureUnlockSlice_; }
    }

    /// <summary>Field number for the "FeatureUnlockSliceAB" field.</summary>
    public const int FeatureUnlockSliceABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.FeatureUnlockSliceABValue>.Codec _map_featureUnlockSliceAB_codec
        = new pbc::MapField<string, global::fat.rawdata.FeatureUnlockSliceABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.FeatureUnlockSliceABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.FeatureUnlockSliceABValue> featureUnlockSliceAB_ = new pbc::MapField<string, global::fat.rawdata.FeatureUnlockSliceABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.FeatureUnlockSliceABValue> FeatureUnlockSliceAB {
      get { return featureUnlockSliceAB_; }
    }

    /// <summary>Field number for the "FeatureUnlockSliceABPatch" field.</summary>
    public const int FeatureUnlockSliceABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.FeatureUnlockSliceABValue>.Codec _map_featureUnlockSliceABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.FeatureUnlockSliceABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.FeatureUnlockSliceABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.FeatureUnlockSliceABValue> featureUnlockSliceABPatch_ = new pbc::MapField<string, global::fat.rawdata.FeatureUnlockSliceABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.FeatureUnlockSliceABValue> FeatureUnlockSliceABPatch {
      get { return featureUnlockSliceABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FeatureUnlockConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FeatureUnlockConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!featureUnlockSlice_.Equals(other.featureUnlockSlice_)) return false;
      if (!FeatureUnlockSliceAB.Equals(other.FeatureUnlockSliceAB)) return false;
      if (!FeatureUnlockSliceABPatch.Equals(other.FeatureUnlockSliceABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= featureUnlockSlice_.GetHashCode();
      hash ^= FeatureUnlockSliceAB.GetHashCode();
      hash ^= FeatureUnlockSliceABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      featureUnlockSlice_.WriteTo(output, _repeated_featureUnlockSlice_codec);
      featureUnlockSliceAB_.WriteTo(output, _map_featureUnlockSliceAB_codec);
      featureUnlockSliceABPatch_.WriteTo(output, _map_featureUnlockSliceABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      featureUnlockSlice_.WriteTo(ref output, _repeated_featureUnlockSlice_codec);
      featureUnlockSliceAB_.WriteTo(ref output, _map_featureUnlockSliceAB_codec);
      featureUnlockSliceABPatch_.WriteTo(ref output, _map_featureUnlockSliceABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += featureUnlockSlice_.CalculateSize(_repeated_featureUnlockSlice_codec);
      size += featureUnlockSliceAB_.CalculateSize(_map_featureUnlockSliceAB_codec);
      size += featureUnlockSliceABPatch_.CalculateSize(_map_featureUnlockSliceABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FeatureUnlockConf other) {
      if (other == null) {
        return;
      }
      featureUnlockSlice_.Add(other.featureUnlockSlice_);
      featureUnlockSliceAB_.Add(other.featureUnlockSliceAB_);
      featureUnlockSliceABPatch_.Add(other.featureUnlockSliceABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            featureUnlockSlice_.AddEntriesFrom(input, _repeated_featureUnlockSlice_codec);
            break;
          }
          case 18: {
            featureUnlockSliceAB_.AddEntriesFrom(input, _map_featureUnlockSliceAB_codec);
            break;
          }
          case 26: {
            featureUnlockSliceABPatch_.AddEntriesFrom(input, _map_featureUnlockSliceABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            featureUnlockSlice_.AddEntriesFrom(ref input, _repeated_featureUnlockSlice_codec);
            break;
          }
          case 18: {
            featureUnlockSliceAB_.AddEntriesFrom(ref input, _map_featureUnlockSliceAB_codec);
            break;
          }
          case 26: {
            featureUnlockSliceABPatch_.AddEntriesFrom(ref input, _map_featureUnlockSliceABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
