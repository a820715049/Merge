// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventVineLeapLevelConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventVineLeapLevelConf.proto</summary>
  public static partial class EventVineLeapLevelConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventVineLeapLevelConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventVineLeapLevelConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiRyYXdkYXRhL0V2ZW50VmluZUxlYXBMZXZlbENvbmYucHJvdG8SB3Jhd2Rh",
            "dGEi4wEKEkV2ZW50VmluZUxlYXBMZXZlbBIKCgJpZBgBIAEoBRI9CglhZHZB",
            "dmF0YXIYAiADKAsyKi5yYXdkYXRhLkV2ZW50VmluZUxlYXBMZXZlbC5BZHZB",
            "dmF0YXJFbnRyeRIOCgZhdmF0YXIYAyABKAUSDQoFb3V0SWQYBCABKAUSEAoI",
            "cmV3YXJkSWQYBSABKAUSDQoFc2NvcmUYBiABKAUSEAoIdG90YWxOdW0YCCAB",
            "KAUaMAoOQWR2QXZhdGFyRW50cnkSCwoDa2V5GAEgASgFEg0KBXZhbHVlGAIg",
            "ASgJOgI4ASLaAQocRXZlbnRWaW5lTGVhcExldmVsTWFwQUJWYWx1ZRJfChVF",
            "dmVudFZpbmVMZWFwTGV2ZWxNYXAYASADKAsyQC5yYXdkYXRhLkV2ZW50Vmlu",
            "ZUxlYXBMZXZlbE1hcEFCVmFsdWUuRXZlbnRWaW5lTGVhcExldmVsTWFwRW50",
            "cnkaWQoaRXZlbnRWaW5lTGVhcExldmVsTWFwRW50cnkSCwoDa2V5GAEgASgF",
            "EioKBXZhbHVlGAIgASgLMhsucmF3ZGF0YS5FdmVudFZpbmVMZWFwTGV2ZWw6",
            "AjgBIukEChZFdmVudFZpbmVMZWFwTGV2ZWxDb25mElkKFUV2ZW50VmluZUxl",
            "YXBMZXZlbE1hcBgBIAMoCzI6LnJhd2RhdGEuRXZlbnRWaW5lTGVhcExldmVs",
            "Q29uZi5FdmVudFZpbmVMZWFwTGV2ZWxNYXBFbnRyeRJdChdFdmVudFZpbmVM",
            "ZWFwTGV2ZWxNYXBBQhgCIAMoCzI8LnJhd2RhdGEuRXZlbnRWaW5lTGVhcExl",
            "dmVsQ29uZi5FdmVudFZpbmVMZWFwTGV2ZWxNYXBBQkVudHJ5EmcKHEV2ZW50",
            "VmluZUxlYXBMZXZlbE1hcEFCUGF0Y2gYAyADKAsyQS5yYXdkYXRhLkV2ZW50",
            "VmluZUxlYXBMZXZlbENvbmYuRXZlbnRWaW5lTGVhcExldmVsTWFwQUJQYXRj",
            "aEVudHJ5GlkKGkV2ZW50VmluZUxlYXBMZXZlbE1hcEVudHJ5EgsKA2tleRgB",
            "IAEoBRIqCgV2YWx1ZRgCIAEoCzIbLnJhd2RhdGEuRXZlbnRWaW5lTGVhcExl",
            "dmVsOgI4ARplChxFdmVudFZpbmVMZWFwTGV2ZWxNYXBBQkVudHJ5EgsKA2tl",
            "eRgBIAEoCRI0CgV2YWx1ZRgCIAEoCzIlLnJhd2RhdGEuRXZlbnRWaW5lTGVh",
            "cExldmVsTWFwQUJWYWx1ZToCOAEaagohRXZlbnRWaW5lTGVhcExldmVsTWFw",
            "QUJQYXRjaEVudHJ5EgsKA2tleRgBIAEoCRI0CgV2YWx1ZRgCIAEoCzIlLnJh",
            "d2RhdGEuRXZlbnRWaW5lTGVhcExldmVsTWFwQUJWYWx1ZToCOAFCPVotZ2l0",
            "bGFiLmZ1bnBsdXMuaW8vZmF0L2NvbmYvZ2VuL2dvbGFuZy9yYXdkYXRhqgIL",
            "ZmF0LnJhd2RhdGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventVineLeapLevel), global::fat.rawdata.EventVineLeapLevel.Parser, new[]{ "Id", "AdvAvatar", "Avatar", "OutId", "RewardId", "Score", "TotalNum" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventVineLeapLevelMapABValue), global::fat.rawdata.EventVineLeapLevelMapABValue.Parser, new[]{ "EventVineLeapLevelMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventVineLeapLevelConf), global::fat.rawdata.EventVineLeapLevelConf.Parser, new[]{ "EventVineLeapLevelMap", "EventVineLeapLevelMapAB", "EventVineLeapLevelMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventVineLeapLevel",table="EventVineLeapLevelMap",table_wrapper="EventVineLeapLevelConf",map="true",map_key_type="int32",data="EventVineLeapLevelConf")
  /// annotation@ab(table_ab="EventVineLeapLevelMapAB",table_ab_patch="EventVineLeapLevelMapABPatch",table_ab_value="EventVineLeapLevelMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventVineLeapLevel(id="id")
  /// </summary>
  public sealed partial class EventVineLeapLevel : pb::IMessage<EventVineLeapLevel>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventVineLeapLevel> _parser = new pb::MessageParser<EventVineLeapLevel>(() => new EventVineLeapLevel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventVineLeapLevel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventVineLeapLevelConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventVineLeapLevel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventVineLeapLevel(EventVineLeapLevel other) : this() {
      id_ = other.id_;
      advAvatar_ = other.advAvatar_.Clone();
      avatar_ = other.avatar_;
      outId_ = other.outId_;
      rewardId_ = other.rewardId_;
      score_ = other.score_;
      totalNum_ = other.totalNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventVineLeapLevel Clone() {
      return new EventVineLeapLevel(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 关卡id
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "advAvatar" field.</summary>
    public const int AdvAvatarFieldNumber = 2;
    private static readonly pbc::MapField<int, string>.Codec _map_advAvatar_codec
        = new pbc::MapField<int, string>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForString(18, ""), 18);
    private readonly pbc::MapField<int, string> advAvatar_ = new pbc::MapField<int, string>();
    /// <summary>
    /// 展示数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, string> AdvAvatar {
      get { return advAvatar_; }
    }

    /// <summary>Field number for the "avatar" field.</summary>
    public const int AvatarFieldNumber = 3;
    private int avatar_;
    /// <summary>
    /// 初始头像数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Avatar {
      get { return avatar_; }
      set {
        avatar_ = value;
      }
    }

    /// <summary>Field number for the "outId" field.</summary>
    public const int OutIdFieldNumber = 4;
    private int outId_;
    /// <summary>
    /// 淘汰 id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int OutId {
      get { return outId_; }
      set {
        outId_ = value;
      }
    }

    /// <summary>Field number for the "rewardId" field.</summary>
    public const int RewardIdFieldNumber = 5;
    private int rewardId_;
    /// <summary>
    /// 奖励id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RewardId {
      get { return rewardId_; }
      set {
        rewardId_ = value;
      }
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 6;
    private int score_;
    /// <summary>
    /// 积分数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    /// <summary>Field number for the "totalNum" field.</summary>
    public const int TotalNumFieldNumber = 8;
    private int totalNum_;
    /// <summary>
    /// 总人数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TotalNum {
      get { return totalNum_; }
      set {
        totalNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventVineLeapLevel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventVineLeapLevel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!AdvAvatar.Equals(other.AdvAvatar)) return false;
      if (Avatar != other.Avatar) return false;
      if (OutId != other.OutId) return false;
      if (RewardId != other.RewardId) return false;
      if (Score != other.Score) return false;
      if (TotalNum != other.TotalNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      hash ^= AdvAvatar.GetHashCode();
      if (Avatar != 0) hash ^= Avatar.GetHashCode();
      if (OutId != 0) hash ^= OutId.GetHashCode();
      if (RewardId != 0) hash ^= RewardId.GetHashCode();
      if (Score != 0) hash ^= Score.GetHashCode();
      if (TotalNum != 0) hash ^= TotalNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      advAvatar_.WriteTo(output, _map_advAvatar_codec);
      if (Avatar != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Avatar);
      }
      if (OutId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(OutId);
      }
      if (RewardId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(RewardId);
      }
      if (Score != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Score);
      }
      if (TotalNum != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(TotalNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      advAvatar_.WriteTo(ref output, _map_advAvatar_codec);
      if (Avatar != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Avatar);
      }
      if (OutId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(OutId);
      }
      if (RewardId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(RewardId);
      }
      if (Score != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Score);
      }
      if (TotalNum != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(TotalNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      size += advAvatar_.CalculateSize(_map_advAvatar_codec);
      if (Avatar != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Avatar);
      }
      if (OutId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OutId);
      }
      if (RewardId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RewardId);
      }
      if (Score != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Score);
      }
      if (TotalNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventVineLeapLevel other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      advAvatar_.Add(other.advAvatar_);
      if (other.Avatar != 0) {
        Avatar = other.Avatar;
      }
      if (other.OutId != 0) {
        OutId = other.OutId;
      }
      if (other.RewardId != 0) {
        RewardId = other.RewardId;
      }
      if (other.Score != 0) {
        Score = other.Score;
      }
      if (other.TotalNum != 0) {
        TotalNum = other.TotalNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            advAvatar_.AddEntriesFrom(input, _map_advAvatar_codec);
            break;
          }
          case 24: {
            Avatar = input.ReadInt32();
            break;
          }
          case 32: {
            OutId = input.ReadInt32();
            break;
          }
          case 40: {
            RewardId = input.ReadInt32();
            break;
          }
          case 48: {
            Score = input.ReadInt32();
            break;
          }
          case 64: {
            TotalNum = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            advAvatar_.AddEntriesFrom(ref input, _map_advAvatar_codec);
            break;
          }
          case 24: {
            Avatar = input.ReadInt32();
            break;
          }
          case 32: {
            OutId = input.ReadInt32();
            break;
          }
          case 40: {
            RewardId = input.ReadInt32();
            break;
          }
          case 48: {
            Score = input.ReadInt32();
            break;
          }
          case 64: {
            TotalNum = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventVineLeapLevelMapABValue : pb::IMessage<EventVineLeapLevelMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventVineLeapLevelMapABValue> _parser = new pb::MessageParser<EventVineLeapLevelMapABValue>(() => new EventVineLeapLevelMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventVineLeapLevelMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventVineLeapLevelConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventVineLeapLevelMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventVineLeapLevelMapABValue(EventVineLeapLevelMapABValue other) : this() {
      eventVineLeapLevelMap_ = other.eventVineLeapLevelMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventVineLeapLevelMapABValue Clone() {
      return new EventVineLeapLevelMapABValue(this);
    }

    /// <summary>Field number for the "EventVineLeapLevelMap" field.</summary>
    public const int EventVineLeapLevelMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventVineLeapLevel>.Codec _map_eventVineLeapLevelMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventVineLeapLevel>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventVineLeapLevel.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventVineLeapLevel> eventVineLeapLevelMap_ = new pbc::MapField<int, global::fat.rawdata.EventVineLeapLevel>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventVineLeapLevel> EventVineLeapLevelMap {
      get { return eventVineLeapLevelMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventVineLeapLevelMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventVineLeapLevelMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventVineLeapLevelMap.Equals(other.EventVineLeapLevelMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventVineLeapLevelMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventVineLeapLevelMap_.WriteTo(output, _map_eventVineLeapLevelMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventVineLeapLevelMap_.WriteTo(ref output, _map_eventVineLeapLevelMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventVineLeapLevelMap_.CalculateSize(_map_eventVineLeapLevelMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventVineLeapLevelMapABValue other) {
      if (other == null) {
        return;
      }
      eventVineLeapLevelMap_.Add(other.eventVineLeapLevelMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventVineLeapLevelMap_.AddEntriesFrom(input, _map_eventVineLeapLevelMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventVineLeapLevelMap_.AddEntriesFrom(ref input, _map_eventVineLeapLevelMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventVineLeapLevelConf : pb::IMessage<EventVineLeapLevelConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventVineLeapLevelConf> _parser = new pb::MessageParser<EventVineLeapLevelConf>(() => new EventVineLeapLevelConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventVineLeapLevelConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventVineLeapLevelConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventVineLeapLevelConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventVineLeapLevelConf(EventVineLeapLevelConf other) : this() {
      eventVineLeapLevelMap_ = other.eventVineLeapLevelMap_.Clone();
      eventVineLeapLevelMapAB_ = other.eventVineLeapLevelMapAB_.Clone();
      eventVineLeapLevelMapABPatch_ = other.eventVineLeapLevelMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventVineLeapLevelConf Clone() {
      return new EventVineLeapLevelConf(this);
    }

    /// <summary>Field number for the "EventVineLeapLevelMap" field.</summary>
    public const int EventVineLeapLevelMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventVineLeapLevel>.Codec _map_eventVineLeapLevelMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventVineLeapLevel>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventVineLeapLevel.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventVineLeapLevel> eventVineLeapLevelMap_ = new pbc::MapField<int, global::fat.rawdata.EventVineLeapLevel>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventVineLeapLevel> EventVineLeapLevelMap {
      get { return eventVineLeapLevelMap_; }
    }

    /// <summary>Field number for the "EventVineLeapLevelMapAB" field.</summary>
    public const int EventVineLeapLevelMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventVineLeapLevelMapABValue>.Codec _map_eventVineLeapLevelMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventVineLeapLevelMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventVineLeapLevelMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventVineLeapLevelMapABValue> eventVineLeapLevelMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventVineLeapLevelMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventVineLeapLevelMapABValue> EventVineLeapLevelMapAB {
      get { return eventVineLeapLevelMapAB_; }
    }

    /// <summary>Field number for the "EventVineLeapLevelMapABPatch" field.</summary>
    public const int EventVineLeapLevelMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventVineLeapLevelMapABValue>.Codec _map_eventVineLeapLevelMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventVineLeapLevelMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventVineLeapLevelMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventVineLeapLevelMapABValue> eventVineLeapLevelMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventVineLeapLevelMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventVineLeapLevelMapABValue> EventVineLeapLevelMapABPatch {
      get { return eventVineLeapLevelMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventVineLeapLevelConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventVineLeapLevelConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventVineLeapLevelMap.Equals(other.EventVineLeapLevelMap)) return false;
      if (!EventVineLeapLevelMapAB.Equals(other.EventVineLeapLevelMapAB)) return false;
      if (!EventVineLeapLevelMapABPatch.Equals(other.EventVineLeapLevelMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventVineLeapLevelMap.GetHashCode();
      hash ^= EventVineLeapLevelMapAB.GetHashCode();
      hash ^= EventVineLeapLevelMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventVineLeapLevelMap_.WriteTo(output, _map_eventVineLeapLevelMap_codec);
      eventVineLeapLevelMapAB_.WriteTo(output, _map_eventVineLeapLevelMapAB_codec);
      eventVineLeapLevelMapABPatch_.WriteTo(output, _map_eventVineLeapLevelMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventVineLeapLevelMap_.WriteTo(ref output, _map_eventVineLeapLevelMap_codec);
      eventVineLeapLevelMapAB_.WriteTo(ref output, _map_eventVineLeapLevelMapAB_codec);
      eventVineLeapLevelMapABPatch_.WriteTo(ref output, _map_eventVineLeapLevelMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventVineLeapLevelMap_.CalculateSize(_map_eventVineLeapLevelMap_codec);
      size += eventVineLeapLevelMapAB_.CalculateSize(_map_eventVineLeapLevelMapAB_codec);
      size += eventVineLeapLevelMapABPatch_.CalculateSize(_map_eventVineLeapLevelMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventVineLeapLevelConf other) {
      if (other == null) {
        return;
      }
      eventVineLeapLevelMap_.Add(other.eventVineLeapLevelMap_);
      eventVineLeapLevelMapAB_.Add(other.eventVineLeapLevelMapAB_);
      eventVineLeapLevelMapABPatch_.Add(other.eventVineLeapLevelMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventVineLeapLevelMap_.AddEntriesFrom(input, _map_eventVineLeapLevelMap_codec);
            break;
          }
          case 18: {
            eventVineLeapLevelMapAB_.AddEntriesFrom(input, _map_eventVineLeapLevelMapAB_codec);
            break;
          }
          case 26: {
            eventVineLeapLevelMapABPatch_.AddEntriesFrom(input, _map_eventVineLeapLevelMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventVineLeapLevelMap_.AddEntriesFrom(ref input, _map_eventVineLeapLevelMap_codec);
            break;
          }
          case 18: {
            eventVineLeapLevelMapAB_.AddEntriesFrom(ref input, _map_eventVineLeapLevelMapAB_codec);
            break;
          }
          case 26: {
            eventVineLeapLevelMapABPatch_.AddEntriesFrom(ref input, _map_eventVineLeapLevelMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
