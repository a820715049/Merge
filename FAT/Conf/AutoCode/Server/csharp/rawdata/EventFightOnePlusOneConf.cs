// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventFightOnePlusOneConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventFightOnePlusOneConf.proto</summary>
  public static partial class EventFightOnePlusOneConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventFightOnePlusOneConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventFightOnePlusOneConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiZyYXdkYXRhL0V2ZW50RmlnaHRPbmVQbHVzT25lQ29uZi5wcm90bxIHcmF3",
            "ZGF0YSJcChRFdmVudEZpZ2h0T25lUGx1c09uZRIKCgJpZBgBIAEoBRISCgpl",
            "dmVudFRoZW1lGAIgASgFEhEKCWZyZWVHcnBJZBgDIAEoBRIRCglwYWNrR3Jw",
            "SWQYBCABKAUi5gEKHkV2ZW50RmlnaHRPbmVQbHVzT25lTWFwQUJWYWx1ZRJl",
            "ChdFdmVudEZpZ2h0T25lUGx1c09uZU1hcBgBIAMoCzJELnJhd2RhdGEuRXZl",
            "bnRGaWdodE9uZVBsdXNPbmVNYXBBQlZhbHVlLkV2ZW50RmlnaHRPbmVQbHVz",
            "T25lTWFwRW50cnkaXQocRXZlbnRGaWdodE9uZVBsdXNPbmVNYXBFbnRyeRIL",
            "CgNrZXkYASABKAUSLAoFdmFsdWUYAiABKAsyHS5yYXdkYXRhLkV2ZW50Rmln",
            "aHRPbmVQbHVzT25lOgI4ASKJBQoYRXZlbnRGaWdodE9uZVBsdXNPbmVDb25m",
            "El8KF0V2ZW50RmlnaHRPbmVQbHVzT25lTWFwGAEgAygLMj4ucmF3ZGF0YS5F",
            "dmVudEZpZ2h0T25lUGx1c09uZUNvbmYuRXZlbnRGaWdodE9uZVBsdXNPbmVN",
            "YXBFbnRyeRJjChlFdmVudEZpZ2h0T25lUGx1c09uZU1hcEFCGAIgAygLMkAu",
            "cmF3ZGF0YS5FdmVudEZpZ2h0T25lUGx1c09uZUNvbmYuRXZlbnRGaWdodE9u",
            "ZVBsdXNPbmVNYXBBQkVudHJ5Em0KHkV2ZW50RmlnaHRPbmVQbHVzT25lTWFw",
            "QUJQYXRjaBgDIAMoCzJFLnJhd2RhdGEuRXZlbnRGaWdodE9uZVBsdXNPbmVD",
            "b25mLkV2ZW50RmlnaHRPbmVQbHVzT25lTWFwQUJQYXRjaEVudHJ5Gl0KHEV2",
            "ZW50RmlnaHRPbmVQbHVzT25lTWFwRW50cnkSCwoDa2V5GAEgASgFEiwKBXZh",
            "bHVlGAIgASgLMh0ucmF3ZGF0YS5FdmVudEZpZ2h0T25lUGx1c09uZToCOAEa",
            "aQoeRXZlbnRGaWdodE9uZVBsdXNPbmVNYXBBQkVudHJ5EgsKA2tleRgBIAEo",
            "CRI2CgV2YWx1ZRgCIAEoCzInLnJhd2RhdGEuRXZlbnRGaWdodE9uZVBsdXNP",
            "bmVNYXBBQlZhbHVlOgI4ARpuCiNFdmVudEZpZ2h0T25lUGx1c09uZU1hcEFC",
            "UGF0Y2hFbnRyeRILCgNrZXkYASABKAkSNgoFdmFsdWUYAiABKAsyJy5yYXdk",
            "YXRhLkV2ZW50RmlnaHRPbmVQbHVzT25lTWFwQUJWYWx1ZToCOAFCPVotZ2l0",
            "bGFiLmZ1bnBsdXMuaW8vZmF0L2NvbmYvZ2VuL2dvbGFuZy9yYXdkYXRhqgIL",
            "ZmF0LnJhd2RhdGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventFightOnePlusOne), global::fat.rawdata.EventFightOnePlusOne.Parser, new[]{ "Id", "EventTheme", "FreeGrpId", "PackGrpId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventFightOnePlusOneMapABValue), global::fat.rawdata.EventFightOnePlusOneMapABValue.Parser, new[]{ "EventFightOnePlusOneMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventFightOnePlusOneConf), global::fat.rawdata.EventFightOnePlusOneConf.Parser, new[]{ "EventFightOnePlusOneMap", "EventFightOnePlusOneMapAB", "EventFightOnePlusOneMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventFightOnePlusOne",table="EventFightOnePlusOneMap",table_wrapper="EventFightOnePlusOneConf",map="true",map_key_type="int32",data="EventFightOnePlusOneConf")
  /// annotation@ab(table_ab="EventFightOnePlusOneMapAB",table_ab_patch="EventFightOnePlusOneMapABPatch",table_ab_value="EventFightOnePlusOneMapABValue",ab_patch="true")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventFightOnePlusOne(id="id")
  /// </summary>
  public sealed partial class EventFightOnePlusOne : pb::IMessage<EventFightOnePlusOne>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventFightOnePlusOne> _parser = new pb::MessageParser<EventFightOnePlusOne>(() => new EventFightOnePlusOne());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventFightOnePlusOne> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventFightOnePlusOneConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventFightOnePlusOne() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventFightOnePlusOne(EventFightOnePlusOne other) : this() {
      id_ = other.id_;
      eventTheme_ = other.eventTheme_;
      freeGrpId_ = other.freeGrpId_;
      packGrpId_ = other.packGrpId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventFightOnePlusOne Clone() {
      return new EventFightOnePlusOne(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 1+1礼包
    /// 模板ID
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "eventTheme" field.</summary>
    public const int EventThemeFieldNumber = 2;
    private int eventTheme_;
    /// <summary>
    /// 1+1礼包弹板ID
    /// （EventTheme.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EventTheme {
      get { return eventTheme_; }
      set {
        eventTheme_ = value;
      }
    }

    /// <summary>Field number for the "freeGrpId" field.</summary>
    public const int FreeGrpIdFieldNumber = 3;
    private int freeGrpId_;
    /// <summary>
    /// 赠品ID
    /// （受档位组控制）
    /// （GradeIndexMapping.id）
    /// （IAPFree.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FreeGrpId {
      get { return freeGrpId_; }
      set {
        freeGrpId_ = value;
      }
    }

    /// <summary>Field number for the "packGrpId" field.</summary>
    public const int PackGrpIdFieldNumber = 4;
    private int packGrpId_;
    /// <summary>
    /// 内购商品ID
    /// （受档位组控制）
    /// （GradeIndexMapping.id）
    /// （IAPPack.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PackGrpId {
      get { return packGrpId_; }
      set {
        packGrpId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventFightOnePlusOne);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventFightOnePlusOne other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (EventTheme != other.EventTheme) return false;
      if (FreeGrpId != other.FreeGrpId) return false;
      if (PackGrpId != other.PackGrpId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (EventTheme != 0) hash ^= EventTheme.GetHashCode();
      if (FreeGrpId != 0) hash ^= FreeGrpId.GetHashCode();
      if (PackGrpId != 0) hash ^= PackGrpId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (EventTheme != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(EventTheme);
      }
      if (FreeGrpId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(FreeGrpId);
      }
      if (PackGrpId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(PackGrpId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (EventTheme != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(EventTheme);
      }
      if (FreeGrpId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(FreeGrpId);
      }
      if (PackGrpId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(PackGrpId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (EventTheme != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EventTheme);
      }
      if (FreeGrpId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FreeGrpId);
      }
      if (PackGrpId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PackGrpId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventFightOnePlusOne other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.EventTheme != 0) {
        EventTheme = other.EventTheme;
      }
      if (other.FreeGrpId != 0) {
        FreeGrpId = other.FreeGrpId;
      }
      if (other.PackGrpId != 0) {
        PackGrpId = other.PackGrpId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            EventTheme = input.ReadInt32();
            break;
          }
          case 24: {
            FreeGrpId = input.ReadInt32();
            break;
          }
          case 32: {
            PackGrpId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            EventTheme = input.ReadInt32();
            break;
          }
          case 24: {
            FreeGrpId = input.ReadInt32();
            break;
          }
          case 32: {
            PackGrpId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventFightOnePlusOneMapABValue : pb::IMessage<EventFightOnePlusOneMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventFightOnePlusOneMapABValue> _parser = new pb::MessageParser<EventFightOnePlusOneMapABValue>(() => new EventFightOnePlusOneMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventFightOnePlusOneMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventFightOnePlusOneConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventFightOnePlusOneMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventFightOnePlusOneMapABValue(EventFightOnePlusOneMapABValue other) : this() {
      eventFightOnePlusOneMap_ = other.eventFightOnePlusOneMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventFightOnePlusOneMapABValue Clone() {
      return new EventFightOnePlusOneMapABValue(this);
    }

    /// <summary>Field number for the "EventFightOnePlusOneMap" field.</summary>
    public const int EventFightOnePlusOneMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventFightOnePlusOne>.Codec _map_eventFightOnePlusOneMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventFightOnePlusOne>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventFightOnePlusOne.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventFightOnePlusOne> eventFightOnePlusOneMap_ = new pbc::MapField<int, global::fat.rawdata.EventFightOnePlusOne>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventFightOnePlusOne> EventFightOnePlusOneMap {
      get { return eventFightOnePlusOneMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventFightOnePlusOneMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventFightOnePlusOneMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventFightOnePlusOneMap.Equals(other.EventFightOnePlusOneMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventFightOnePlusOneMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventFightOnePlusOneMap_.WriteTo(output, _map_eventFightOnePlusOneMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventFightOnePlusOneMap_.WriteTo(ref output, _map_eventFightOnePlusOneMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventFightOnePlusOneMap_.CalculateSize(_map_eventFightOnePlusOneMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventFightOnePlusOneMapABValue other) {
      if (other == null) {
        return;
      }
      eventFightOnePlusOneMap_.Add(other.eventFightOnePlusOneMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventFightOnePlusOneMap_.AddEntriesFrom(input, _map_eventFightOnePlusOneMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventFightOnePlusOneMap_.AddEntriesFrom(ref input, _map_eventFightOnePlusOneMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventFightOnePlusOneConf : pb::IMessage<EventFightOnePlusOneConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventFightOnePlusOneConf> _parser = new pb::MessageParser<EventFightOnePlusOneConf>(() => new EventFightOnePlusOneConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventFightOnePlusOneConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventFightOnePlusOneConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventFightOnePlusOneConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventFightOnePlusOneConf(EventFightOnePlusOneConf other) : this() {
      eventFightOnePlusOneMap_ = other.eventFightOnePlusOneMap_.Clone();
      eventFightOnePlusOneMapAB_ = other.eventFightOnePlusOneMapAB_.Clone();
      eventFightOnePlusOneMapABPatch_ = other.eventFightOnePlusOneMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventFightOnePlusOneConf Clone() {
      return new EventFightOnePlusOneConf(this);
    }

    /// <summary>Field number for the "EventFightOnePlusOneMap" field.</summary>
    public const int EventFightOnePlusOneMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventFightOnePlusOne>.Codec _map_eventFightOnePlusOneMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventFightOnePlusOne>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventFightOnePlusOne.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventFightOnePlusOne> eventFightOnePlusOneMap_ = new pbc::MapField<int, global::fat.rawdata.EventFightOnePlusOne>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventFightOnePlusOne> EventFightOnePlusOneMap {
      get { return eventFightOnePlusOneMap_; }
    }

    /// <summary>Field number for the "EventFightOnePlusOneMapAB" field.</summary>
    public const int EventFightOnePlusOneMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventFightOnePlusOneMapABValue>.Codec _map_eventFightOnePlusOneMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventFightOnePlusOneMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventFightOnePlusOneMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventFightOnePlusOneMapABValue> eventFightOnePlusOneMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventFightOnePlusOneMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventFightOnePlusOneMapABValue> EventFightOnePlusOneMapAB {
      get { return eventFightOnePlusOneMapAB_; }
    }

    /// <summary>Field number for the "EventFightOnePlusOneMapABPatch" field.</summary>
    public const int EventFightOnePlusOneMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventFightOnePlusOneMapABValue>.Codec _map_eventFightOnePlusOneMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventFightOnePlusOneMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventFightOnePlusOneMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventFightOnePlusOneMapABValue> eventFightOnePlusOneMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventFightOnePlusOneMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventFightOnePlusOneMapABValue> EventFightOnePlusOneMapABPatch {
      get { return eventFightOnePlusOneMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventFightOnePlusOneConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventFightOnePlusOneConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventFightOnePlusOneMap.Equals(other.EventFightOnePlusOneMap)) return false;
      if (!EventFightOnePlusOneMapAB.Equals(other.EventFightOnePlusOneMapAB)) return false;
      if (!EventFightOnePlusOneMapABPatch.Equals(other.EventFightOnePlusOneMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventFightOnePlusOneMap.GetHashCode();
      hash ^= EventFightOnePlusOneMapAB.GetHashCode();
      hash ^= EventFightOnePlusOneMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventFightOnePlusOneMap_.WriteTo(output, _map_eventFightOnePlusOneMap_codec);
      eventFightOnePlusOneMapAB_.WriteTo(output, _map_eventFightOnePlusOneMapAB_codec);
      eventFightOnePlusOneMapABPatch_.WriteTo(output, _map_eventFightOnePlusOneMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventFightOnePlusOneMap_.WriteTo(ref output, _map_eventFightOnePlusOneMap_codec);
      eventFightOnePlusOneMapAB_.WriteTo(ref output, _map_eventFightOnePlusOneMapAB_codec);
      eventFightOnePlusOneMapABPatch_.WriteTo(ref output, _map_eventFightOnePlusOneMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventFightOnePlusOneMap_.CalculateSize(_map_eventFightOnePlusOneMap_codec);
      size += eventFightOnePlusOneMapAB_.CalculateSize(_map_eventFightOnePlusOneMapAB_codec);
      size += eventFightOnePlusOneMapABPatch_.CalculateSize(_map_eventFightOnePlusOneMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventFightOnePlusOneConf other) {
      if (other == null) {
        return;
      }
      eventFightOnePlusOneMap_.Add(other.eventFightOnePlusOneMap_);
      eventFightOnePlusOneMapAB_.Add(other.eventFightOnePlusOneMapAB_);
      eventFightOnePlusOneMapABPatch_.Add(other.eventFightOnePlusOneMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventFightOnePlusOneMap_.AddEntriesFrom(input, _map_eventFightOnePlusOneMap_codec);
            break;
          }
          case 18: {
            eventFightOnePlusOneMapAB_.AddEntriesFrom(input, _map_eventFightOnePlusOneMapAB_codec);
            break;
          }
          case 26: {
            eventFightOnePlusOneMapABPatch_.AddEntriesFrom(input, _map_eventFightOnePlusOneMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventFightOnePlusOneMap_.AddEntriesFrom(ref input, _map_eventFightOnePlusOneMap_codec);
            break;
          }
          case 18: {
            eventFightOnePlusOneMapAB_.AddEntriesFrom(ref input, _map_eventFightOnePlusOneMapAB_codec);
            break;
          }
          case 26: {
            eventFightOnePlusOneMapABPatch_.AddEntriesFrom(ref input, _map_eventFightOnePlusOneMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
