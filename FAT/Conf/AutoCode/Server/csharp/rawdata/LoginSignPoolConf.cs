// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/LoginSignPoolConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/LoginSignPoolConf.proto</summary>
  public static partial class LoginSignPoolConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/LoginSignPoolConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LoginSignPoolConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch9yYXdkYXRhL0xvZ2luU2lnblBvb2xDb25mLnByb3RvEgdyYXdkYXRhIikK",
            "DUxvZ2luU2lnblBvb2wSCgoCaWQYASABKAUSDAoEcG9vbBgCIAMoCSK8AQoX",
            "TG9naW5TaWduUG9vbE1hcEFCVmFsdWUSUAoQTG9naW5TaWduUG9vbE1hcBgB",
            "IAMoCzI2LnJhd2RhdGEuTG9naW5TaWduUG9vbE1hcEFCVmFsdWUuTG9naW5T",
            "aWduUG9vbE1hcEVudHJ5Gk8KFUxvZ2luU2lnblBvb2xNYXBFbnRyeRILCgNr",
            "ZXkYASABKAUSJQoFdmFsdWUYAiABKAsyFi5yYXdkYXRhLkxvZ2luU2lnblBv",
            "b2w6AjgBIpkEChFMb2dpblNpZ25Qb29sQ29uZhJKChBMb2dpblNpZ25Qb29s",
            "TWFwGAEgAygLMjAucmF3ZGF0YS5Mb2dpblNpZ25Qb29sQ29uZi5Mb2dpblNp",
            "Z25Qb29sTWFwRW50cnkSTgoSTG9naW5TaWduUG9vbE1hcEFCGAIgAygLMjIu",
            "cmF3ZGF0YS5Mb2dpblNpZ25Qb29sQ29uZi5Mb2dpblNpZ25Qb29sTWFwQUJF",
            "bnRyeRJYChdMb2dpblNpZ25Qb29sTWFwQUJQYXRjaBgDIAMoCzI3LnJhd2Rh",
            "dGEuTG9naW5TaWduUG9vbENvbmYuTG9naW5TaWduUG9vbE1hcEFCUGF0Y2hF",
            "bnRyeRpPChVMb2dpblNpZ25Qb29sTWFwRW50cnkSCwoDa2V5GAEgASgFEiUK",
            "BXZhbHVlGAIgASgLMhYucmF3ZGF0YS5Mb2dpblNpZ25Qb29sOgI4ARpbChdM",
            "b2dpblNpZ25Qb29sTWFwQUJFbnRyeRILCgNrZXkYASABKAkSLwoFdmFsdWUY",
            "AiABKAsyIC5yYXdkYXRhLkxvZ2luU2lnblBvb2xNYXBBQlZhbHVlOgI4ARpg",
            "ChxMb2dpblNpZ25Qb29sTWFwQUJQYXRjaEVudHJ5EgsKA2tleRgBIAEoCRIv",
            "CgV2YWx1ZRgCIAEoCzIgLnJhd2RhdGEuTG9naW5TaWduUG9vbE1hcEFCVmFs",
            "dWU6AjgBQj1aLWdpdGxhYi5mdW5wbHVzLmlvL2ZhdC9jb25mL2dlbi9nb2xh",
            "bmcvcmF3ZGF0YaoCC2ZhdC5yYXdkYXRhYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.LoginSignPool), global::fat.rawdata.LoginSignPool.Parser, new[]{ "Id", "Pool" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.LoginSignPoolMapABValue), global::fat.rawdata.LoginSignPoolMapABValue.Parser, new[]{ "LoginSignPoolMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.LoginSignPoolConf), global::fat.rawdata.LoginSignPoolConf.Parser, new[]{ "LoginSignPoolMap", "LoginSignPoolMapAB", "LoginSignPoolMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="LoginSignPool",table="LoginSignPoolMap",table_wrapper="LoginSignPoolConf",map="true",map_key_type="int32",data="LoginSignPoolConf")
  /// annotation@ab(table_ab="LoginSignPoolMapAB",table_ab_patch="LoginSignPoolMapABPatch",table_ab_value="LoginSignPoolMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@LoginSignPool(id="id")
  /// </summary>
  public sealed partial class LoginSignPool : pb::IMessage<LoginSignPool>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LoginSignPool> _parser = new pb::MessageParser<LoginSignPool>(() => new LoginSignPool());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginSignPool> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.LoginSignPoolConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginSignPool() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginSignPool(LoginSignPool other) : this() {
      id_ = other.id_;
      pool_ = other.pool_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginSignPool Clone() {
      return new LoginSignPool(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// id
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "pool" field.</summary>
    public const int PoolFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_pool_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> pool_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 奖励库
    /// （ObjBasic.id:数量:权重）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Pool {
      get { return pool_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginSignPool);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginSignPool other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!pool_.Equals(other.pool_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      hash ^= pool_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      pool_.WriteTo(output, _repeated_pool_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      pool_.WriteTo(ref output, _repeated_pool_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      size += pool_.CalculateSize(_repeated_pool_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginSignPool other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      pool_.Add(other.pool_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            pool_.AddEntriesFrom(input, _repeated_pool_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            pool_.AddEntriesFrom(ref input, _repeated_pool_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LoginSignPoolMapABValue : pb::IMessage<LoginSignPoolMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LoginSignPoolMapABValue> _parser = new pb::MessageParser<LoginSignPoolMapABValue>(() => new LoginSignPoolMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginSignPoolMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.LoginSignPoolConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginSignPoolMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginSignPoolMapABValue(LoginSignPoolMapABValue other) : this() {
      loginSignPoolMap_ = other.loginSignPoolMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginSignPoolMapABValue Clone() {
      return new LoginSignPoolMapABValue(this);
    }

    /// <summary>Field number for the "LoginSignPoolMap" field.</summary>
    public const int LoginSignPoolMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.LoginSignPool>.Codec _map_loginSignPoolMap_codec
        = new pbc::MapField<int, global::fat.rawdata.LoginSignPool>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.LoginSignPool.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.LoginSignPool> loginSignPoolMap_ = new pbc::MapField<int, global::fat.rawdata.LoginSignPool>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.LoginSignPool> LoginSignPoolMap {
      get { return loginSignPoolMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginSignPoolMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginSignPoolMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!LoginSignPoolMap.Equals(other.LoginSignPoolMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= LoginSignPoolMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      loginSignPoolMap_.WriteTo(output, _map_loginSignPoolMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      loginSignPoolMap_.WriteTo(ref output, _map_loginSignPoolMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += loginSignPoolMap_.CalculateSize(_map_loginSignPoolMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginSignPoolMapABValue other) {
      if (other == null) {
        return;
      }
      loginSignPoolMap_.Add(other.loginSignPoolMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            loginSignPoolMap_.AddEntriesFrom(input, _map_loginSignPoolMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            loginSignPoolMap_.AddEntriesFrom(ref input, _map_loginSignPoolMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LoginSignPoolConf : pb::IMessage<LoginSignPoolConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LoginSignPoolConf> _parser = new pb::MessageParser<LoginSignPoolConf>(() => new LoginSignPoolConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginSignPoolConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.LoginSignPoolConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginSignPoolConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginSignPoolConf(LoginSignPoolConf other) : this() {
      loginSignPoolMap_ = other.loginSignPoolMap_.Clone();
      loginSignPoolMapAB_ = other.loginSignPoolMapAB_.Clone();
      loginSignPoolMapABPatch_ = other.loginSignPoolMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginSignPoolConf Clone() {
      return new LoginSignPoolConf(this);
    }

    /// <summary>Field number for the "LoginSignPoolMap" field.</summary>
    public const int LoginSignPoolMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.LoginSignPool>.Codec _map_loginSignPoolMap_codec
        = new pbc::MapField<int, global::fat.rawdata.LoginSignPool>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.LoginSignPool.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.LoginSignPool> loginSignPoolMap_ = new pbc::MapField<int, global::fat.rawdata.LoginSignPool>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.LoginSignPool> LoginSignPoolMap {
      get { return loginSignPoolMap_; }
    }

    /// <summary>Field number for the "LoginSignPoolMapAB" field.</summary>
    public const int LoginSignPoolMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.LoginSignPoolMapABValue>.Codec _map_loginSignPoolMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.LoginSignPoolMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.LoginSignPoolMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.LoginSignPoolMapABValue> loginSignPoolMapAB_ = new pbc::MapField<string, global::fat.rawdata.LoginSignPoolMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.LoginSignPoolMapABValue> LoginSignPoolMapAB {
      get { return loginSignPoolMapAB_; }
    }

    /// <summary>Field number for the "LoginSignPoolMapABPatch" field.</summary>
    public const int LoginSignPoolMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.LoginSignPoolMapABValue>.Codec _map_loginSignPoolMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.LoginSignPoolMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.LoginSignPoolMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.LoginSignPoolMapABValue> loginSignPoolMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.LoginSignPoolMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.LoginSignPoolMapABValue> LoginSignPoolMapABPatch {
      get { return loginSignPoolMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginSignPoolConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginSignPoolConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!LoginSignPoolMap.Equals(other.LoginSignPoolMap)) return false;
      if (!LoginSignPoolMapAB.Equals(other.LoginSignPoolMapAB)) return false;
      if (!LoginSignPoolMapABPatch.Equals(other.LoginSignPoolMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= LoginSignPoolMap.GetHashCode();
      hash ^= LoginSignPoolMapAB.GetHashCode();
      hash ^= LoginSignPoolMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      loginSignPoolMap_.WriteTo(output, _map_loginSignPoolMap_codec);
      loginSignPoolMapAB_.WriteTo(output, _map_loginSignPoolMapAB_codec);
      loginSignPoolMapABPatch_.WriteTo(output, _map_loginSignPoolMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      loginSignPoolMap_.WriteTo(ref output, _map_loginSignPoolMap_codec);
      loginSignPoolMapAB_.WriteTo(ref output, _map_loginSignPoolMapAB_codec);
      loginSignPoolMapABPatch_.WriteTo(ref output, _map_loginSignPoolMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += loginSignPoolMap_.CalculateSize(_map_loginSignPoolMap_codec);
      size += loginSignPoolMapAB_.CalculateSize(_map_loginSignPoolMapAB_codec);
      size += loginSignPoolMapABPatch_.CalculateSize(_map_loginSignPoolMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginSignPoolConf other) {
      if (other == null) {
        return;
      }
      loginSignPoolMap_.Add(other.loginSignPoolMap_);
      loginSignPoolMapAB_.Add(other.loginSignPoolMapAB_);
      loginSignPoolMapABPatch_.Add(other.loginSignPoolMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            loginSignPoolMap_.AddEntriesFrom(input, _map_loginSignPoolMap_codec);
            break;
          }
          case 18: {
            loginSignPoolMapAB_.AddEntriesFrom(input, _map_loginSignPoolMapAB_codec);
            break;
          }
          case 26: {
            loginSignPoolMapABPatch_.AddEntriesFrom(input, _map_loginSignPoolMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            loginSignPoolMap_.AddEntriesFrom(ref input, _map_loginSignPoolMap_codec);
            break;
          }
          case 18: {
            loginSignPoolMapAB_.AddEntriesFrom(ref input, _map_loginSignPoolMapAB_codec);
            break;
          }
          case 26: {
            loginSignPoolMapABPatch_.AddEntriesFrom(ref input, _map_loginSignPoolMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
