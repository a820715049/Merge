// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/MonsterTalkConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/MonsterTalkConf.proto</summary>
  public static partial class MonsterTalkConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/MonsterTalkConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MonsterTalkConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch1yYXdkYXRhL01vbnN0ZXJUYWxrQ29uZi5wcm90bxIHcmF3ZGF0YSJVCgtN",
            "b25zdGVyVGFsaxIKCgJpZBgBIAEoBRIOCgZhcHBlYXIYAiADKAkSDQoFY3Vy",
            "c2UYAyADKAkSDAoEZGllZBgEIAMoCRINCgV0cmljaxgFIAMoCSKwAQoVTW9u",
            "c3RlclRhbGtNYXBBQlZhbHVlEkoKDk1vbnN0ZXJUYWxrTWFwGAEgAygLMjIu",
            "cmF3ZGF0YS5Nb25zdGVyVGFsa01hcEFCVmFsdWUuTW9uc3RlclRhbGtNYXBF",
            "bnRyeRpLChNNb25zdGVyVGFsa01hcEVudHJ5EgsKA2tleRgBIAEoBRIjCgV2",
            "YWx1ZRgCIAEoCzIULnJhd2RhdGEuTW9uc3RlclRhbGs6AjgBIvkDCg9Nb25z",
            "dGVyVGFsa0NvbmYSRAoOTW9uc3RlclRhbGtNYXAYASADKAsyLC5yYXdkYXRh",
            "Lk1vbnN0ZXJUYWxrQ29uZi5Nb25zdGVyVGFsa01hcEVudHJ5EkgKEE1vbnN0",
            "ZXJUYWxrTWFwQUIYAiADKAsyLi5yYXdkYXRhLk1vbnN0ZXJUYWxrQ29uZi5N",
            "b25zdGVyVGFsa01hcEFCRW50cnkSUgoVTW9uc3RlclRhbGtNYXBBQlBhdGNo",
            "GAMgAygLMjMucmF3ZGF0YS5Nb25zdGVyVGFsa0NvbmYuTW9uc3RlclRhbGtN",
            "YXBBQlBhdGNoRW50cnkaSwoTTW9uc3RlclRhbGtNYXBFbnRyeRILCgNrZXkY",
            "ASABKAUSIwoFdmFsdWUYAiABKAsyFC5yYXdkYXRhLk1vbnN0ZXJUYWxrOgI4",
            "ARpXChVNb25zdGVyVGFsa01hcEFCRW50cnkSCwoDa2V5GAEgASgJEi0KBXZh",
            "bHVlGAIgASgLMh4ucmF3ZGF0YS5Nb25zdGVyVGFsa01hcEFCVmFsdWU6AjgB",
            "GlwKGk1vbnN0ZXJUYWxrTWFwQUJQYXRjaEVudHJ5EgsKA2tleRgBIAEoCRIt",
            "CgV2YWx1ZRgCIAEoCzIeLnJhd2RhdGEuTW9uc3RlclRhbGtNYXBBQlZhbHVl",
            "OgI4AUI9Wi1naXRsYWIuZnVucGx1cy5pby9mYXQvY29uZi9nZW4vZ29sYW5n",
            "L3Jhd2RhdGGqAgtmYXQucmF3ZGF0YWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.MonsterTalk), global::fat.rawdata.MonsterTalk.Parser, new[]{ "Id", "Appear", "Curse", "Died", "Trick" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.MonsterTalkMapABValue), global::fat.rawdata.MonsterTalkMapABValue.Parser, new[]{ "MonsterTalkMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.MonsterTalkConf), global::fat.rawdata.MonsterTalkConf.Parser, new[]{ "MonsterTalkMap", "MonsterTalkMapAB", "MonsterTalkMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="MonsterTalk",table="MonsterTalkMap",table_wrapper="MonsterTalkConf",map="true",map_key_type="int32",data="MonsterTalkConf")
  /// annotation@ab(table_ab="MonsterTalkMapAB",table_ab_patch="MonsterTalkMapABPatch",table_ab_value="MonsterTalkMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@MonsterTalk(id="id")
  /// </summary>
  public sealed partial class MonsterTalk : pb::IMessage<MonsterTalk>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MonsterTalk> _parser = new pb::MessageParser<MonsterTalk>(() => new MonsterTalk());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MonsterTalk> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.MonsterTalkConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MonsterTalk() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MonsterTalk(MonsterTalk other) : this() {
      id_ = other.id_;
      appear_ = other.appear_.Clone();
      curse_ = other.curse_.Clone();
      died_ = other.died_.Clone();
      trick_ = other.trick_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MonsterTalk Clone() {
      return new MonsterTalk(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 怪物语言库id
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "appear" field.</summary>
    public const int AppearFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_appear_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> appear_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 怪物刷新
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Appear {
      get { return appear_; }
    }

    /// <summary>Field number for the "curse" field.</summary>
    public const int CurseFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_curse_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> curse_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 脏话飘字
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Curse {
      get { return curse_; }
    }

    /// <summary>Field number for the "died" field.</summary>
    public const int DiedFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_died_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> died_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 怪物死亡
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Died {
      get { return died_; }
    }

    /// <summary>Field number for the "trick" field.</summary>
    public const int TrickFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_trick_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> trick_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 待机狠话
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Trick {
      get { return trick_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MonsterTalk);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MonsterTalk other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!appear_.Equals(other.appear_)) return false;
      if(!curse_.Equals(other.curse_)) return false;
      if(!died_.Equals(other.died_)) return false;
      if(!trick_.Equals(other.trick_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      hash ^= appear_.GetHashCode();
      hash ^= curse_.GetHashCode();
      hash ^= died_.GetHashCode();
      hash ^= trick_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      appear_.WriteTo(output, _repeated_appear_codec);
      curse_.WriteTo(output, _repeated_curse_codec);
      died_.WriteTo(output, _repeated_died_codec);
      trick_.WriteTo(output, _repeated_trick_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      appear_.WriteTo(ref output, _repeated_appear_codec);
      curse_.WriteTo(ref output, _repeated_curse_codec);
      died_.WriteTo(ref output, _repeated_died_codec);
      trick_.WriteTo(ref output, _repeated_trick_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      size += appear_.CalculateSize(_repeated_appear_codec);
      size += curse_.CalculateSize(_repeated_curse_codec);
      size += died_.CalculateSize(_repeated_died_codec);
      size += trick_.CalculateSize(_repeated_trick_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MonsterTalk other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      appear_.Add(other.appear_);
      curse_.Add(other.curse_);
      died_.Add(other.died_);
      trick_.Add(other.trick_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            appear_.AddEntriesFrom(input, _repeated_appear_codec);
            break;
          }
          case 26: {
            curse_.AddEntriesFrom(input, _repeated_curse_codec);
            break;
          }
          case 34: {
            died_.AddEntriesFrom(input, _repeated_died_codec);
            break;
          }
          case 42: {
            trick_.AddEntriesFrom(input, _repeated_trick_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            appear_.AddEntriesFrom(ref input, _repeated_appear_codec);
            break;
          }
          case 26: {
            curse_.AddEntriesFrom(ref input, _repeated_curse_codec);
            break;
          }
          case 34: {
            died_.AddEntriesFrom(ref input, _repeated_died_codec);
            break;
          }
          case 42: {
            trick_.AddEntriesFrom(ref input, _repeated_trick_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MonsterTalkMapABValue : pb::IMessage<MonsterTalkMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MonsterTalkMapABValue> _parser = new pb::MessageParser<MonsterTalkMapABValue>(() => new MonsterTalkMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MonsterTalkMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.MonsterTalkConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MonsterTalkMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MonsterTalkMapABValue(MonsterTalkMapABValue other) : this() {
      monsterTalkMap_ = other.monsterTalkMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MonsterTalkMapABValue Clone() {
      return new MonsterTalkMapABValue(this);
    }

    /// <summary>Field number for the "MonsterTalkMap" field.</summary>
    public const int MonsterTalkMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.MonsterTalk>.Codec _map_monsterTalkMap_codec
        = new pbc::MapField<int, global::fat.rawdata.MonsterTalk>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.MonsterTalk.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.MonsterTalk> monsterTalkMap_ = new pbc::MapField<int, global::fat.rawdata.MonsterTalk>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.MonsterTalk> MonsterTalkMap {
      get { return monsterTalkMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MonsterTalkMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MonsterTalkMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!MonsterTalkMap.Equals(other.MonsterTalkMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= MonsterTalkMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      monsterTalkMap_.WriteTo(output, _map_monsterTalkMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      monsterTalkMap_.WriteTo(ref output, _map_monsterTalkMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += monsterTalkMap_.CalculateSize(_map_monsterTalkMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MonsterTalkMapABValue other) {
      if (other == null) {
        return;
      }
      monsterTalkMap_.Add(other.monsterTalkMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            monsterTalkMap_.AddEntriesFrom(input, _map_monsterTalkMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            monsterTalkMap_.AddEntriesFrom(ref input, _map_monsterTalkMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MonsterTalkConf : pb::IMessage<MonsterTalkConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MonsterTalkConf> _parser = new pb::MessageParser<MonsterTalkConf>(() => new MonsterTalkConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MonsterTalkConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.MonsterTalkConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MonsterTalkConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MonsterTalkConf(MonsterTalkConf other) : this() {
      monsterTalkMap_ = other.monsterTalkMap_.Clone();
      monsterTalkMapAB_ = other.monsterTalkMapAB_.Clone();
      monsterTalkMapABPatch_ = other.monsterTalkMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MonsterTalkConf Clone() {
      return new MonsterTalkConf(this);
    }

    /// <summary>Field number for the "MonsterTalkMap" field.</summary>
    public const int MonsterTalkMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.MonsterTalk>.Codec _map_monsterTalkMap_codec
        = new pbc::MapField<int, global::fat.rawdata.MonsterTalk>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.MonsterTalk.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.MonsterTalk> monsterTalkMap_ = new pbc::MapField<int, global::fat.rawdata.MonsterTalk>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.MonsterTalk> MonsterTalkMap {
      get { return monsterTalkMap_; }
    }

    /// <summary>Field number for the "MonsterTalkMapAB" field.</summary>
    public const int MonsterTalkMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.MonsterTalkMapABValue>.Codec _map_monsterTalkMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.MonsterTalkMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.MonsterTalkMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.MonsterTalkMapABValue> monsterTalkMapAB_ = new pbc::MapField<string, global::fat.rawdata.MonsterTalkMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.MonsterTalkMapABValue> MonsterTalkMapAB {
      get { return monsterTalkMapAB_; }
    }

    /// <summary>Field number for the "MonsterTalkMapABPatch" field.</summary>
    public const int MonsterTalkMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.MonsterTalkMapABValue>.Codec _map_monsterTalkMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.MonsterTalkMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.MonsterTalkMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.MonsterTalkMapABValue> monsterTalkMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.MonsterTalkMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.MonsterTalkMapABValue> MonsterTalkMapABPatch {
      get { return monsterTalkMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MonsterTalkConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MonsterTalkConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!MonsterTalkMap.Equals(other.MonsterTalkMap)) return false;
      if (!MonsterTalkMapAB.Equals(other.MonsterTalkMapAB)) return false;
      if (!MonsterTalkMapABPatch.Equals(other.MonsterTalkMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= MonsterTalkMap.GetHashCode();
      hash ^= MonsterTalkMapAB.GetHashCode();
      hash ^= MonsterTalkMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      monsterTalkMap_.WriteTo(output, _map_monsterTalkMap_codec);
      monsterTalkMapAB_.WriteTo(output, _map_monsterTalkMapAB_codec);
      monsterTalkMapABPatch_.WriteTo(output, _map_monsterTalkMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      monsterTalkMap_.WriteTo(ref output, _map_monsterTalkMap_codec);
      monsterTalkMapAB_.WriteTo(ref output, _map_monsterTalkMapAB_codec);
      monsterTalkMapABPatch_.WriteTo(ref output, _map_monsterTalkMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += monsterTalkMap_.CalculateSize(_map_monsterTalkMap_codec);
      size += monsterTalkMapAB_.CalculateSize(_map_monsterTalkMapAB_codec);
      size += monsterTalkMapABPatch_.CalculateSize(_map_monsterTalkMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MonsterTalkConf other) {
      if (other == null) {
        return;
      }
      monsterTalkMap_.Add(other.monsterTalkMap_);
      monsterTalkMapAB_.Add(other.monsterTalkMapAB_);
      monsterTalkMapABPatch_.Add(other.monsterTalkMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            monsterTalkMap_.AddEntriesFrom(input, _map_monsterTalkMap_codec);
            break;
          }
          case 18: {
            monsterTalkMapAB_.AddEntriesFrom(input, _map_monsterTalkMapAB_codec);
            break;
          }
          case 26: {
            monsterTalkMapABPatch_.AddEntriesFrom(input, _map_monsterTalkMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            monsterTalkMap_.AddEntriesFrom(ref input, _map_monsterTalkMap_codec);
            break;
          }
          case 18: {
            monsterTalkMapAB_.AddEntriesFrom(ref input, _map_monsterTalkMapAB_codec);
            break;
          }
          case 26: {
            monsterTalkMapABPatch_.AddEntriesFrom(ref input, _map_monsterTalkMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
