// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventWishRowConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventWishRowConf.proto</summary>
  public static partial class EventWishRowConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventWishRowConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventWishRowConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch5yYXdkYXRhL0V2ZW50V2lzaFJvd0NvbmYucHJvdG8SB3Jhd2RhdGEiQAoM",
            "RXZlbnRXaXNoUm93EgoKAmlkGAEgASgFEhMKC2Rvd25NaW5pUm93GAIgASgJ",
            "Eg8KB2Rvd25OdW0YAyABKAUitgEKFkV2ZW50V2lzaFJvd01hcEFCVmFsdWUS",
            "TQoPRXZlbnRXaXNoUm93TWFwGAEgAygLMjQucmF3ZGF0YS5FdmVudFdpc2hS",
            "b3dNYXBBQlZhbHVlLkV2ZW50V2lzaFJvd01hcEVudHJ5Gk0KFEV2ZW50V2lz",
            "aFJvd01hcEVudHJ5EgsKA2tleRgBIAEoBRIkCgV2YWx1ZRgCIAEoCzIVLnJh",
            "d2RhdGEuRXZlbnRXaXNoUm93OgI4ASKJBAoQRXZlbnRXaXNoUm93Q29uZhJH",
            "Cg9FdmVudFdpc2hSb3dNYXAYASADKAsyLi5yYXdkYXRhLkV2ZW50V2lzaFJv",
            "d0NvbmYuRXZlbnRXaXNoUm93TWFwRW50cnkSSwoRRXZlbnRXaXNoUm93TWFw",
            "QUIYAiADKAsyMC5yYXdkYXRhLkV2ZW50V2lzaFJvd0NvbmYuRXZlbnRXaXNo",
            "Um93TWFwQUJFbnRyeRJVChZFdmVudFdpc2hSb3dNYXBBQlBhdGNoGAMgAygL",
            "MjUucmF3ZGF0YS5FdmVudFdpc2hSb3dDb25mLkV2ZW50V2lzaFJvd01hcEFC",
            "UGF0Y2hFbnRyeRpNChRFdmVudFdpc2hSb3dNYXBFbnRyeRILCgNrZXkYASAB",
            "KAUSJAoFdmFsdWUYAiABKAsyFS5yYXdkYXRhLkV2ZW50V2lzaFJvdzoCOAEa",
            "WQoWRXZlbnRXaXNoUm93TWFwQUJFbnRyeRILCgNrZXkYASABKAkSLgoFdmFs",
            "dWUYAiABKAsyHy5yYXdkYXRhLkV2ZW50V2lzaFJvd01hcEFCVmFsdWU6AjgB",
            "Gl4KG0V2ZW50V2lzaFJvd01hcEFCUGF0Y2hFbnRyeRILCgNrZXkYASABKAkS",
            "LgoFdmFsdWUYAiABKAsyHy5yYXdkYXRhLkV2ZW50V2lzaFJvd01hcEFCVmFs",
            "dWU6AjgBQj1aLWdpdGxhYi5mdW5wbHVzLmlvL2ZhdC9jb25mL2dlbi9nb2xh",
            "bmcvcmF3ZGF0YaoCC2ZhdC5yYXdkYXRhYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventWishRow), global::fat.rawdata.EventWishRow.Parser, new[]{ "Id", "DownMiniRow", "DownNum" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventWishRowMapABValue), global::fat.rawdata.EventWishRowMapABValue.Parser, new[]{ "EventWishRowMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventWishRowConf), global::fat.rawdata.EventWishRowConf.Parser, new[]{ "EventWishRowMap", "EventWishRowMapAB", "EventWishRowMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventWishRow",table="EventWishRowMap",table_wrapper="EventWishRowConf",map="true",map_key_type="int32",data="EventWishRowConf")
  /// annotation@ab(table_ab="EventWishRowMapAB",table_ab_patch="EventWishRowMapABPatch",table_ab_value="EventWishRowMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventWishRow(id="id")
  /// </summary>
  public sealed partial class EventWishRow : pb::IMessage<EventWishRow>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventWishRow> _parser = new pb::MessageParser<EventWishRow>(() => new EventWishRow());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventWishRow> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventWishRowConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishRow() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishRow(EventWishRow other) : this() {
      id_ = other.id_;
      downMiniRow_ = other.downMiniRow_;
      downNum_ = other.downNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishRow Clone() {
      return new EventWishRow(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// boardRowId
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "downMiniRow" field.</summary>
    public const int DownMiniRowFieldNumber = 2;
    private string downMiniRow_ = "";
    /// <summary>
    /// 初始盘面，一列9个格子
    /// 0 = 1.被盒子盖住，附近棋子解锁后，变为蜘蛛网，参数为0/1/2盒子样式（imgBox）。2. 新增：相邻区任意特定代币触发类棋子死亡时转变为解锁状态参数为0/1/2盒子样式（imgBox）
    /// 1 = 蜘蛛网，参数为0
    /// 2 = 默认解锁，参数为0
    /// 3=遮挡状态，遮挡状态解除：1. 相邻区任意相同棋子合成时触发解锁。2. 新增：相邻区任意特定代币触发类棋子死亡时转变为解锁状态参数为0/1/2盒子样式（imgBox）
    /// 4 = 被等级限制，参数为玩家等级值（盒子样式为imgBox第0张）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DownMiniRow {
      get { return downMiniRow_; }
      set {
        downMiniRow_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "downNum" field.</summary>
    public const int DownNumFieldNumber = 3;
    private int downNum_;
    /// <summary>
    /// 指定下降数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DownNum {
      get { return downNum_; }
      set {
        downNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventWishRow);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventWishRow other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (DownMiniRow != other.DownMiniRow) return false;
      if (DownNum != other.DownNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (DownMiniRow.Length != 0) hash ^= DownMiniRow.GetHashCode();
      if (DownNum != 0) hash ^= DownNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (DownMiniRow.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DownMiniRow);
      }
      if (DownNum != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(DownNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (DownMiniRow.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DownMiniRow);
      }
      if (DownNum != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(DownNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (DownMiniRow.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DownMiniRow);
      }
      if (DownNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DownNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventWishRow other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.DownMiniRow.Length != 0) {
        DownMiniRow = other.DownMiniRow;
      }
      if (other.DownNum != 0) {
        DownNum = other.DownNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            DownMiniRow = input.ReadString();
            break;
          }
          case 24: {
            DownNum = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            DownMiniRow = input.ReadString();
            break;
          }
          case 24: {
            DownNum = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventWishRowMapABValue : pb::IMessage<EventWishRowMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventWishRowMapABValue> _parser = new pb::MessageParser<EventWishRowMapABValue>(() => new EventWishRowMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventWishRowMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventWishRowConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishRowMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishRowMapABValue(EventWishRowMapABValue other) : this() {
      eventWishRowMap_ = other.eventWishRowMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishRowMapABValue Clone() {
      return new EventWishRowMapABValue(this);
    }

    /// <summary>Field number for the "EventWishRowMap" field.</summary>
    public const int EventWishRowMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventWishRow>.Codec _map_eventWishRowMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventWishRow>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventWishRow.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventWishRow> eventWishRowMap_ = new pbc::MapField<int, global::fat.rawdata.EventWishRow>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventWishRow> EventWishRowMap {
      get { return eventWishRowMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventWishRowMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventWishRowMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventWishRowMap.Equals(other.EventWishRowMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventWishRowMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventWishRowMap_.WriteTo(output, _map_eventWishRowMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventWishRowMap_.WriteTo(ref output, _map_eventWishRowMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventWishRowMap_.CalculateSize(_map_eventWishRowMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventWishRowMapABValue other) {
      if (other == null) {
        return;
      }
      eventWishRowMap_.Add(other.eventWishRowMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventWishRowMap_.AddEntriesFrom(input, _map_eventWishRowMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventWishRowMap_.AddEntriesFrom(ref input, _map_eventWishRowMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventWishRowConf : pb::IMessage<EventWishRowConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventWishRowConf> _parser = new pb::MessageParser<EventWishRowConf>(() => new EventWishRowConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventWishRowConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventWishRowConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishRowConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishRowConf(EventWishRowConf other) : this() {
      eventWishRowMap_ = other.eventWishRowMap_.Clone();
      eventWishRowMapAB_ = other.eventWishRowMapAB_.Clone();
      eventWishRowMapABPatch_ = other.eventWishRowMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishRowConf Clone() {
      return new EventWishRowConf(this);
    }

    /// <summary>Field number for the "EventWishRowMap" field.</summary>
    public const int EventWishRowMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventWishRow>.Codec _map_eventWishRowMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventWishRow>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventWishRow.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventWishRow> eventWishRowMap_ = new pbc::MapField<int, global::fat.rawdata.EventWishRow>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventWishRow> EventWishRowMap {
      get { return eventWishRowMap_; }
    }

    /// <summary>Field number for the "EventWishRowMapAB" field.</summary>
    public const int EventWishRowMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventWishRowMapABValue>.Codec _map_eventWishRowMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventWishRowMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventWishRowMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventWishRowMapABValue> eventWishRowMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventWishRowMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventWishRowMapABValue> EventWishRowMapAB {
      get { return eventWishRowMapAB_; }
    }

    /// <summary>Field number for the "EventWishRowMapABPatch" field.</summary>
    public const int EventWishRowMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventWishRowMapABValue>.Codec _map_eventWishRowMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventWishRowMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventWishRowMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventWishRowMapABValue> eventWishRowMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventWishRowMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventWishRowMapABValue> EventWishRowMapABPatch {
      get { return eventWishRowMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventWishRowConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventWishRowConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventWishRowMap.Equals(other.EventWishRowMap)) return false;
      if (!EventWishRowMapAB.Equals(other.EventWishRowMapAB)) return false;
      if (!EventWishRowMapABPatch.Equals(other.EventWishRowMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventWishRowMap.GetHashCode();
      hash ^= EventWishRowMapAB.GetHashCode();
      hash ^= EventWishRowMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventWishRowMap_.WriteTo(output, _map_eventWishRowMap_codec);
      eventWishRowMapAB_.WriteTo(output, _map_eventWishRowMapAB_codec);
      eventWishRowMapABPatch_.WriteTo(output, _map_eventWishRowMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventWishRowMap_.WriteTo(ref output, _map_eventWishRowMap_codec);
      eventWishRowMapAB_.WriteTo(ref output, _map_eventWishRowMapAB_codec);
      eventWishRowMapABPatch_.WriteTo(ref output, _map_eventWishRowMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventWishRowMap_.CalculateSize(_map_eventWishRowMap_codec);
      size += eventWishRowMapAB_.CalculateSize(_map_eventWishRowMapAB_codec);
      size += eventWishRowMapABPatch_.CalculateSize(_map_eventWishRowMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventWishRowConf other) {
      if (other == null) {
        return;
      }
      eventWishRowMap_.Add(other.eventWishRowMap_);
      eventWishRowMapAB_.Add(other.eventWishRowMapAB_);
      eventWishRowMapABPatch_.Add(other.eventWishRowMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventWishRowMap_.AddEntriesFrom(input, _map_eventWishRowMap_codec);
            break;
          }
          case 18: {
            eventWishRowMapAB_.AddEntriesFrom(input, _map_eventWishRowMapAB_codec);
            break;
          }
          case 26: {
            eventWishRowMapABPatch_.AddEntriesFrom(input, _map_eventWishRowMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventWishRowMap_.AddEntriesFrom(ref input, _map_eventWishRowMap_codec);
            break;
          }
          case 18: {
            eventWishRowMapAB_.AddEntriesFrom(ref input, _map_eventWishRowMapAB_codec);
            break;
          }
          case 26: {
            eventWishRowMapABPatch_.AddEntriesFrom(ref input, _map_eventWishRowMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
