// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventStampRoundConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventStampRoundConf.proto</summary>
  public static partial class EventStampRoundConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventStampRoundConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventStampRoundConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiFyYXdkYXRhL0V2ZW50U3RhbXBSb3VuZENvbmYucHJvdG8SB3Jhd2RhdGEi",
            "ZQoPRXZlbnRTdGFtcFJvdW5kEgoKAmlkGAEgASgFEgwKBGNvc3QYAyADKAUS",
            "EwoLZ2lmdFJld2FyZHMYBCADKAkSDQoFbGV2ZWwYBSABKAUSFAoMbGV2ZWxS",
            "ZXdhcmRzGAYgAygJIsgBChlFdmVudFN0YW1wUm91bmRNYXBBQlZhbHVlElYK",
            "EkV2ZW50U3RhbXBSb3VuZE1hcBgBIAMoCzI6LnJhd2RhdGEuRXZlbnRTdGFt",
            "cFJvdW5kTWFwQUJWYWx1ZS5FdmVudFN0YW1wUm91bmRNYXBFbnRyeRpTChdF",
            "dmVudFN0YW1wUm91bmRNYXBFbnRyeRILCgNrZXkYASABKAUSJwoFdmFsdWUY",
            "AiABKAsyGC5yYXdkYXRhLkV2ZW50U3RhbXBSb3VuZDoCOAEiuQQKE0V2ZW50",
            "U3RhbXBSb3VuZENvbmYSUAoSRXZlbnRTdGFtcFJvdW5kTWFwGAEgAygLMjQu",
            "cmF3ZGF0YS5FdmVudFN0YW1wUm91bmRDb25mLkV2ZW50U3RhbXBSb3VuZE1h",
            "cEVudHJ5ElQKFEV2ZW50U3RhbXBSb3VuZE1hcEFCGAIgAygLMjYucmF3ZGF0",
            "YS5FdmVudFN0YW1wUm91bmRDb25mLkV2ZW50U3RhbXBSb3VuZE1hcEFCRW50",
            "cnkSXgoZRXZlbnRTdGFtcFJvdW5kTWFwQUJQYXRjaBgDIAMoCzI7LnJhd2Rh",
            "dGEuRXZlbnRTdGFtcFJvdW5kQ29uZi5FdmVudFN0YW1wUm91bmRNYXBBQlBh",
            "dGNoRW50cnkaUwoXRXZlbnRTdGFtcFJvdW5kTWFwRW50cnkSCwoDa2V5GAEg",
            "ASgFEicKBXZhbHVlGAIgASgLMhgucmF3ZGF0YS5FdmVudFN0YW1wUm91bmQ6",
            "AjgBGl8KGUV2ZW50U3RhbXBSb3VuZE1hcEFCRW50cnkSCwoDa2V5GAEgASgJ",
            "EjEKBXZhbHVlGAIgASgLMiIucmF3ZGF0YS5FdmVudFN0YW1wUm91bmRNYXBB",
            "QlZhbHVlOgI4ARpkCh5FdmVudFN0YW1wUm91bmRNYXBBQlBhdGNoRW50cnkS",
            "CwoDa2V5GAEgASgJEjEKBXZhbHVlGAIgASgLMiIucmF3ZGF0YS5FdmVudFN0",
            "YW1wUm91bmRNYXBBQlZhbHVlOgI4AUI9Wi1naXRsYWIuZnVucGx1cy5pby9m",
            "YXQvY29uZi9nZW4vZ29sYW5nL3Jhd2RhdGGqAgtmYXQucmF3ZGF0YWIGcHJv",
            "dG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventStampRound), global::fat.rawdata.EventStampRound.Parser, new[]{ "Id", "Cost", "GiftRewards", "Level", "LevelRewards" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventStampRoundMapABValue), global::fat.rawdata.EventStampRoundMapABValue.Parser, new[]{ "EventStampRoundMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventStampRoundConf), global::fat.rawdata.EventStampRoundConf.Parser, new[]{ "EventStampRoundMap", "EventStampRoundMapAB", "EventStampRoundMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventStampRound",table="EventStampRoundMap",table_wrapper="EventStampRoundConf",map="true",map_key_type="int32",data="EventStampRoundConf")
  /// annotation@ab(table_ab="EventStampRoundMapAB",table_ab_patch="EventStampRoundMapABPatch",table_ab_value="EventStampRoundMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventStampRound(id="id")
  /// </summary>
  public sealed partial class EventStampRound : pb::IMessage<EventStampRound>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventStampRound> _parser = new pb::MessageParser<EventStampRound>(() => new EventStampRound());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventStampRound> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventStampRoundConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventStampRound() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventStampRound(EventStampRound other) : this() {
      id_ = other.id_;
      cost_ = other.cost_.Clone();
      giftRewards_ = other.giftRewards_.Clone();
      level_ = other.level_;
      levelRewards_ = other.levelRewards_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventStampRound Clone() {
      return new EventStampRound(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// roundId
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "cost" field.</summary>
    public const int CostFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_cost_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> cost_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 盖章条件
    /// （ObjBasic.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Cost {
      get { return cost_; }
    }

    /// <summary>Field number for the "giftRewards" field.</summary>
    public const int GiftRewardsFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_giftRewards_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> giftRewards_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 小奖奖励
    /// (id：数量：层数)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> GiftRewards {
      get { return giftRewards_; }
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 5;
    private int level_;
    /// <summary>
    /// 层数
    /// （可盖章的层数）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "levelRewards" field.</summary>
    public const int LevelRewardsFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _repeated_levelRewards_codec
        = pb::FieldCodec.ForString(50);
    private readonly pbc::RepeatedField<string> levelRewards_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 大奖奖励
    /// (id：数量)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> LevelRewards {
      get { return levelRewards_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventStampRound);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventStampRound other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!cost_.Equals(other.cost_)) return false;
      if(!giftRewards_.Equals(other.giftRewards_)) return false;
      if (Level != other.Level) return false;
      if(!levelRewards_.Equals(other.levelRewards_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      hash ^= cost_.GetHashCode();
      hash ^= giftRewards_.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      hash ^= levelRewards_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      cost_.WriteTo(output, _repeated_cost_codec);
      giftRewards_.WriteTo(output, _repeated_giftRewards_codec);
      if (Level != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Level);
      }
      levelRewards_.WriteTo(output, _repeated_levelRewards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      cost_.WriteTo(ref output, _repeated_cost_codec);
      giftRewards_.WriteTo(ref output, _repeated_giftRewards_codec);
      if (Level != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Level);
      }
      levelRewards_.WriteTo(ref output, _repeated_levelRewards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      size += cost_.CalculateSize(_repeated_cost_codec);
      size += giftRewards_.CalculateSize(_repeated_giftRewards_codec);
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      size += levelRewards_.CalculateSize(_repeated_levelRewards_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventStampRound other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      cost_.Add(other.cost_);
      giftRewards_.Add(other.giftRewards_);
      if (other.Level != 0) {
        Level = other.Level;
      }
      levelRewards_.Add(other.levelRewards_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            cost_.AddEntriesFrom(input, _repeated_cost_codec);
            break;
          }
          case 34: {
            giftRewards_.AddEntriesFrom(input, _repeated_giftRewards_codec);
            break;
          }
          case 40: {
            Level = input.ReadInt32();
            break;
          }
          case 50: {
            levelRewards_.AddEntriesFrom(input, _repeated_levelRewards_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            cost_.AddEntriesFrom(ref input, _repeated_cost_codec);
            break;
          }
          case 34: {
            giftRewards_.AddEntriesFrom(ref input, _repeated_giftRewards_codec);
            break;
          }
          case 40: {
            Level = input.ReadInt32();
            break;
          }
          case 50: {
            levelRewards_.AddEntriesFrom(ref input, _repeated_levelRewards_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventStampRoundMapABValue : pb::IMessage<EventStampRoundMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventStampRoundMapABValue> _parser = new pb::MessageParser<EventStampRoundMapABValue>(() => new EventStampRoundMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventStampRoundMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventStampRoundConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventStampRoundMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventStampRoundMapABValue(EventStampRoundMapABValue other) : this() {
      eventStampRoundMap_ = other.eventStampRoundMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventStampRoundMapABValue Clone() {
      return new EventStampRoundMapABValue(this);
    }

    /// <summary>Field number for the "EventStampRoundMap" field.</summary>
    public const int EventStampRoundMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventStampRound>.Codec _map_eventStampRoundMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventStampRound>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventStampRound.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventStampRound> eventStampRoundMap_ = new pbc::MapField<int, global::fat.rawdata.EventStampRound>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventStampRound> EventStampRoundMap {
      get { return eventStampRoundMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventStampRoundMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventStampRoundMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventStampRoundMap.Equals(other.EventStampRoundMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventStampRoundMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventStampRoundMap_.WriteTo(output, _map_eventStampRoundMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventStampRoundMap_.WriteTo(ref output, _map_eventStampRoundMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventStampRoundMap_.CalculateSize(_map_eventStampRoundMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventStampRoundMapABValue other) {
      if (other == null) {
        return;
      }
      eventStampRoundMap_.Add(other.eventStampRoundMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventStampRoundMap_.AddEntriesFrom(input, _map_eventStampRoundMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventStampRoundMap_.AddEntriesFrom(ref input, _map_eventStampRoundMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventStampRoundConf : pb::IMessage<EventStampRoundConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventStampRoundConf> _parser = new pb::MessageParser<EventStampRoundConf>(() => new EventStampRoundConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventStampRoundConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventStampRoundConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventStampRoundConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventStampRoundConf(EventStampRoundConf other) : this() {
      eventStampRoundMap_ = other.eventStampRoundMap_.Clone();
      eventStampRoundMapAB_ = other.eventStampRoundMapAB_.Clone();
      eventStampRoundMapABPatch_ = other.eventStampRoundMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventStampRoundConf Clone() {
      return new EventStampRoundConf(this);
    }

    /// <summary>Field number for the "EventStampRoundMap" field.</summary>
    public const int EventStampRoundMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventStampRound>.Codec _map_eventStampRoundMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventStampRound>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventStampRound.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventStampRound> eventStampRoundMap_ = new pbc::MapField<int, global::fat.rawdata.EventStampRound>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventStampRound> EventStampRoundMap {
      get { return eventStampRoundMap_; }
    }

    /// <summary>Field number for the "EventStampRoundMapAB" field.</summary>
    public const int EventStampRoundMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventStampRoundMapABValue>.Codec _map_eventStampRoundMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventStampRoundMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventStampRoundMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventStampRoundMapABValue> eventStampRoundMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventStampRoundMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventStampRoundMapABValue> EventStampRoundMapAB {
      get { return eventStampRoundMapAB_; }
    }

    /// <summary>Field number for the "EventStampRoundMapABPatch" field.</summary>
    public const int EventStampRoundMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventStampRoundMapABValue>.Codec _map_eventStampRoundMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventStampRoundMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventStampRoundMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventStampRoundMapABValue> eventStampRoundMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventStampRoundMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventStampRoundMapABValue> EventStampRoundMapABPatch {
      get { return eventStampRoundMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventStampRoundConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventStampRoundConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventStampRoundMap.Equals(other.EventStampRoundMap)) return false;
      if (!EventStampRoundMapAB.Equals(other.EventStampRoundMapAB)) return false;
      if (!EventStampRoundMapABPatch.Equals(other.EventStampRoundMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventStampRoundMap.GetHashCode();
      hash ^= EventStampRoundMapAB.GetHashCode();
      hash ^= EventStampRoundMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventStampRoundMap_.WriteTo(output, _map_eventStampRoundMap_codec);
      eventStampRoundMapAB_.WriteTo(output, _map_eventStampRoundMapAB_codec);
      eventStampRoundMapABPatch_.WriteTo(output, _map_eventStampRoundMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventStampRoundMap_.WriteTo(ref output, _map_eventStampRoundMap_codec);
      eventStampRoundMapAB_.WriteTo(ref output, _map_eventStampRoundMapAB_codec);
      eventStampRoundMapABPatch_.WriteTo(ref output, _map_eventStampRoundMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventStampRoundMap_.CalculateSize(_map_eventStampRoundMap_codec);
      size += eventStampRoundMapAB_.CalculateSize(_map_eventStampRoundMapAB_codec);
      size += eventStampRoundMapABPatch_.CalculateSize(_map_eventStampRoundMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventStampRoundConf other) {
      if (other == null) {
        return;
      }
      eventStampRoundMap_.Add(other.eventStampRoundMap_);
      eventStampRoundMapAB_.Add(other.eventStampRoundMapAB_);
      eventStampRoundMapABPatch_.Add(other.eventStampRoundMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventStampRoundMap_.AddEntriesFrom(input, _map_eventStampRoundMap_codec);
            break;
          }
          case 18: {
            eventStampRoundMapAB_.AddEntriesFrom(input, _map_eventStampRoundMapAB_codec);
            break;
          }
          case 26: {
            eventStampRoundMapABPatch_.AddEntriesFrom(input, _map_eventStampRoundMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventStampRoundMap_.AddEntriesFrom(ref input, _map_eventStampRoundMap_codec);
            break;
          }
          case 18: {
            eventStampRoundMapAB_.AddEntriesFrom(ref input, _map_eventStampRoundMapAB_codec);
            break;
          }
          case 26: {
            eventStampRoundMapABPatch_.AddEntriesFrom(ref input, _map_eventStampRoundMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
