// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventMiniBoardMultiDropConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventMiniBoardMultiDropConf.proto</summary>
  public static partial class EventMiniBoardMultiDropConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventMiniBoardMultiDropConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventMiniBoardMultiDropConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CilyYXdkYXRhL0V2ZW50TWluaUJvYXJkTXVsdGlEcm9wQ29uZi5wcm90bxIH",
            "cmF3ZGF0YSJiChdFdmVudE1pbmlCb2FyZE11bHRpRHJvcBIKCgJpZBgBIAEo",
            "BRITCgtvdXRwdXRzRm91chgCIAMoCRISCgpvdXRwdXRzT25lGAMgAygJEhIK",
            "Cm91dHB1dHNUd28YBCADKAki+AEKIUV2ZW50TWluaUJvYXJkTXVsdGlEcm9w",
            "TWFwQUJWYWx1ZRJuChpFdmVudE1pbmlCb2FyZE11bHRpRHJvcE1hcBgBIAMo",
            "CzJKLnJhd2RhdGEuRXZlbnRNaW5pQm9hcmRNdWx0aURyb3BNYXBBQlZhbHVl",
            "LkV2ZW50TWluaUJvYXJkTXVsdGlEcm9wTWFwRW50cnkaYwofRXZlbnRNaW5p",
            "Qm9hcmRNdWx0aURyb3BNYXBFbnRyeRILCgNrZXkYASABKAUSLwoFdmFsdWUY",
            "AiABKAsyIC5yYXdkYXRhLkV2ZW50TWluaUJvYXJkTXVsdGlEcm9wOgI4ASK5",
            "BQobRXZlbnRNaW5pQm9hcmRNdWx0aURyb3BDb25mEmgKGkV2ZW50TWluaUJv",
            "YXJkTXVsdGlEcm9wTWFwGAEgAygLMkQucmF3ZGF0YS5FdmVudE1pbmlCb2Fy",
            "ZE11bHRpRHJvcENvbmYuRXZlbnRNaW5pQm9hcmRNdWx0aURyb3BNYXBFbnRy",
            "eRJsChxFdmVudE1pbmlCb2FyZE11bHRpRHJvcE1hcEFCGAIgAygLMkYucmF3",
            "ZGF0YS5FdmVudE1pbmlCb2FyZE11bHRpRHJvcENvbmYuRXZlbnRNaW5pQm9h",
            "cmRNdWx0aURyb3BNYXBBQkVudHJ5EnYKIUV2ZW50TWluaUJvYXJkTXVsdGlE",
            "cm9wTWFwQUJQYXRjaBgDIAMoCzJLLnJhd2RhdGEuRXZlbnRNaW5pQm9hcmRN",
            "dWx0aURyb3BDb25mLkV2ZW50TWluaUJvYXJkTXVsdGlEcm9wTWFwQUJQYXRj",
            "aEVudHJ5GmMKH0V2ZW50TWluaUJvYXJkTXVsdGlEcm9wTWFwRW50cnkSCwoD",
            "a2V5GAEgASgFEi8KBXZhbHVlGAIgASgLMiAucmF3ZGF0YS5FdmVudE1pbmlC",
            "b2FyZE11bHRpRHJvcDoCOAEabwohRXZlbnRNaW5pQm9hcmRNdWx0aURyb3BN",
            "YXBBQkVudHJ5EgsKA2tleRgBIAEoCRI5CgV2YWx1ZRgCIAEoCzIqLnJhd2Rh",
            "dGEuRXZlbnRNaW5pQm9hcmRNdWx0aURyb3BNYXBBQlZhbHVlOgI4ARp0CiZF",
            "dmVudE1pbmlCb2FyZE11bHRpRHJvcE1hcEFCUGF0Y2hFbnRyeRILCgNrZXkY",
            "ASABKAkSOQoFdmFsdWUYAiABKAsyKi5yYXdkYXRhLkV2ZW50TWluaUJvYXJk",
            "TXVsdGlEcm9wTWFwQUJWYWx1ZToCOAFCPVotZ2l0bGFiLmZ1bnBsdXMuaW8v",
            "ZmF0L2NvbmYvZ2VuL2dvbGFuZy9yYXdkYXRhqgILZmF0LnJhd2RhdGFiBnBy",
            "b3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventMiniBoardMultiDrop), global::fat.rawdata.EventMiniBoardMultiDrop.Parser, new[]{ "Id", "OutputsFour", "OutputsOne", "OutputsTwo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventMiniBoardMultiDropMapABValue), global::fat.rawdata.EventMiniBoardMultiDropMapABValue.Parser, new[]{ "EventMiniBoardMultiDropMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventMiniBoardMultiDropConf), global::fat.rawdata.EventMiniBoardMultiDropConf.Parser, new[]{ "EventMiniBoardMultiDropMap", "EventMiniBoardMultiDropMapAB", "EventMiniBoardMultiDropMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventMiniBoardMultiDrop",table="EventMiniBoardMultiDropMap",table_wrapper="EventMiniBoardMultiDropConf",map="true",map_key_type="int32",data="EventMiniBoardMultiDropConf")
  /// annotation@ab(table_ab="EventMiniBoardMultiDropMapAB",table_ab_patch="EventMiniBoardMultiDropMapABPatch",table_ab_value="EventMiniBoardMultiDropMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventMiniBoardMultiDrop(id="id")
  /// </summary>
  public sealed partial class EventMiniBoardMultiDrop : pb::IMessage<EventMiniBoardMultiDrop>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventMiniBoardMultiDrop> _parser = new pb::MessageParser<EventMiniBoardMultiDrop>(() => new EventMiniBoardMultiDrop());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventMiniBoardMultiDrop> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventMiniBoardMultiDropConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMiniBoardMultiDrop() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMiniBoardMultiDrop(EventMiniBoardMultiDrop other) : this() {
      id_ = other.id_;
      outputsFour_ = other.outputsFour_.Clone();
      outputsOne_ = other.outputsOne_.Clone();
      outputsTwo_ = other.outputsTwo_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMiniBoardMultiDrop Clone() {
      return new EventMiniBoardMultiDrop(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// levelID
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "outputsFour" field.</summary>
    public const int OutputsFourFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_outputsFour_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> outputsFour_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 耗体4产出棋子
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> OutputsFour {
      get { return outputsFour_; }
    }

    /// <summary>Field number for the "outputsOne" field.</summary>
    public const int OutputsOneFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_outputsOne_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> outputsOne_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 耗体1产出棋子
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> OutputsOne {
      get { return outputsOne_; }
    }

    /// <summary>Field number for the "outputsTwo" field.</summary>
    public const int OutputsTwoFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_outputsTwo_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> outputsTwo_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 耗体2产出棋子
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> OutputsTwo {
      get { return outputsTwo_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventMiniBoardMultiDrop);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventMiniBoardMultiDrop other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!outputsFour_.Equals(other.outputsFour_)) return false;
      if(!outputsOne_.Equals(other.outputsOne_)) return false;
      if(!outputsTwo_.Equals(other.outputsTwo_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      hash ^= outputsFour_.GetHashCode();
      hash ^= outputsOne_.GetHashCode();
      hash ^= outputsTwo_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      outputsFour_.WriteTo(output, _repeated_outputsFour_codec);
      outputsOne_.WriteTo(output, _repeated_outputsOne_codec);
      outputsTwo_.WriteTo(output, _repeated_outputsTwo_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      outputsFour_.WriteTo(ref output, _repeated_outputsFour_codec);
      outputsOne_.WriteTo(ref output, _repeated_outputsOne_codec);
      outputsTwo_.WriteTo(ref output, _repeated_outputsTwo_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      size += outputsFour_.CalculateSize(_repeated_outputsFour_codec);
      size += outputsOne_.CalculateSize(_repeated_outputsOne_codec);
      size += outputsTwo_.CalculateSize(_repeated_outputsTwo_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventMiniBoardMultiDrop other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      outputsFour_.Add(other.outputsFour_);
      outputsOne_.Add(other.outputsOne_);
      outputsTwo_.Add(other.outputsTwo_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            outputsFour_.AddEntriesFrom(input, _repeated_outputsFour_codec);
            break;
          }
          case 26: {
            outputsOne_.AddEntriesFrom(input, _repeated_outputsOne_codec);
            break;
          }
          case 34: {
            outputsTwo_.AddEntriesFrom(input, _repeated_outputsTwo_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            outputsFour_.AddEntriesFrom(ref input, _repeated_outputsFour_codec);
            break;
          }
          case 26: {
            outputsOne_.AddEntriesFrom(ref input, _repeated_outputsOne_codec);
            break;
          }
          case 34: {
            outputsTwo_.AddEntriesFrom(ref input, _repeated_outputsTwo_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventMiniBoardMultiDropMapABValue : pb::IMessage<EventMiniBoardMultiDropMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventMiniBoardMultiDropMapABValue> _parser = new pb::MessageParser<EventMiniBoardMultiDropMapABValue>(() => new EventMiniBoardMultiDropMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventMiniBoardMultiDropMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventMiniBoardMultiDropConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMiniBoardMultiDropMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMiniBoardMultiDropMapABValue(EventMiniBoardMultiDropMapABValue other) : this() {
      eventMiniBoardMultiDropMap_ = other.eventMiniBoardMultiDropMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMiniBoardMultiDropMapABValue Clone() {
      return new EventMiniBoardMultiDropMapABValue(this);
    }

    /// <summary>Field number for the "EventMiniBoardMultiDropMap" field.</summary>
    public const int EventMiniBoardMultiDropMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventMiniBoardMultiDrop>.Codec _map_eventMiniBoardMultiDropMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventMiniBoardMultiDrop>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventMiniBoardMultiDrop.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventMiniBoardMultiDrop> eventMiniBoardMultiDropMap_ = new pbc::MapField<int, global::fat.rawdata.EventMiniBoardMultiDrop>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventMiniBoardMultiDrop> EventMiniBoardMultiDropMap {
      get { return eventMiniBoardMultiDropMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventMiniBoardMultiDropMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventMiniBoardMultiDropMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventMiniBoardMultiDropMap.Equals(other.EventMiniBoardMultiDropMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventMiniBoardMultiDropMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventMiniBoardMultiDropMap_.WriteTo(output, _map_eventMiniBoardMultiDropMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventMiniBoardMultiDropMap_.WriteTo(ref output, _map_eventMiniBoardMultiDropMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventMiniBoardMultiDropMap_.CalculateSize(_map_eventMiniBoardMultiDropMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventMiniBoardMultiDropMapABValue other) {
      if (other == null) {
        return;
      }
      eventMiniBoardMultiDropMap_.Add(other.eventMiniBoardMultiDropMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventMiniBoardMultiDropMap_.AddEntriesFrom(input, _map_eventMiniBoardMultiDropMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventMiniBoardMultiDropMap_.AddEntriesFrom(ref input, _map_eventMiniBoardMultiDropMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventMiniBoardMultiDropConf : pb::IMessage<EventMiniBoardMultiDropConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventMiniBoardMultiDropConf> _parser = new pb::MessageParser<EventMiniBoardMultiDropConf>(() => new EventMiniBoardMultiDropConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventMiniBoardMultiDropConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventMiniBoardMultiDropConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMiniBoardMultiDropConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMiniBoardMultiDropConf(EventMiniBoardMultiDropConf other) : this() {
      eventMiniBoardMultiDropMap_ = other.eventMiniBoardMultiDropMap_.Clone();
      eventMiniBoardMultiDropMapAB_ = other.eventMiniBoardMultiDropMapAB_.Clone();
      eventMiniBoardMultiDropMapABPatch_ = other.eventMiniBoardMultiDropMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMiniBoardMultiDropConf Clone() {
      return new EventMiniBoardMultiDropConf(this);
    }

    /// <summary>Field number for the "EventMiniBoardMultiDropMap" field.</summary>
    public const int EventMiniBoardMultiDropMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventMiniBoardMultiDrop>.Codec _map_eventMiniBoardMultiDropMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventMiniBoardMultiDrop>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventMiniBoardMultiDrop.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventMiniBoardMultiDrop> eventMiniBoardMultiDropMap_ = new pbc::MapField<int, global::fat.rawdata.EventMiniBoardMultiDrop>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventMiniBoardMultiDrop> EventMiniBoardMultiDropMap {
      get { return eventMiniBoardMultiDropMap_; }
    }

    /// <summary>Field number for the "EventMiniBoardMultiDropMapAB" field.</summary>
    public const int EventMiniBoardMultiDropMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventMiniBoardMultiDropMapABValue>.Codec _map_eventMiniBoardMultiDropMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventMiniBoardMultiDropMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventMiniBoardMultiDropMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventMiniBoardMultiDropMapABValue> eventMiniBoardMultiDropMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventMiniBoardMultiDropMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventMiniBoardMultiDropMapABValue> EventMiniBoardMultiDropMapAB {
      get { return eventMiniBoardMultiDropMapAB_; }
    }

    /// <summary>Field number for the "EventMiniBoardMultiDropMapABPatch" field.</summary>
    public const int EventMiniBoardMultiDropMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventMiniBoardMultiDropMapABValue>.Codec _map_eventMiniBoardMultiDropMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventMiniBoardMultiDropMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventMiniBoardMultiDropMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventMiniBoardMultiDropMapABValue> eventMiniBoardMultiDropMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventMiniBoardMultiDropMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventMiniBoardMultiDropMapABValue> EventMiniBoardMultiDropMapABPatch {
      get { return eventMiniBoardMultiDropMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventMiniBoardMultiDropConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventMiniBoardMultiDropConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventMiniBoardMultiDropMap.Equals(other.EventMiniBoardMultiDropMap)) return false;
      if (!EventMiniBoardMultiDropMapAB.Equals(other.EventMiniBoardMultiDropMapAB)) return false;
      if (!EventMiniBoardMultiDropMapABPatch.Equals(other.EventMiniBoardMultiDropMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventMiniBoardMultiDropMap.GetHashCode();
      hash ^= EventMiniBoardMultiDropMapAB.GetHashCode();
      hash ^= EventMiniBoardMultiDropMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventMiniBoardMultiDropMap_.WriteTo(output, _map_eventMiniBoardMultiDropMap_codec);
      eventMiniBoardMultiDropMapAB_.WriteTo(output, _map_eventMiniBoardMultiDropMapAB_codec);
      eventMiniBoardMultiDropMapABPatch_.WriteTo(output, _map_eventMiniBoardMultiDropMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventMiniBoardMultiDropMap_.WriteTo(ref output, _map_eventMiniBoardMultiDropMap_codec);
      eventMiniBoardMultiDropMapAB_.WriteTo(ref output, _map_eventMiniBoardMultiDropMapAB_codec);
      eventMiniBoardMultiDropMapABPatch_.WriteTo(ref output, _map_eventMiniBoardMultiDropMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventMiniBoardMultiDropMap_.CalculateSize(_map_eventMiniBoardMultiDropMap_codec);
      size += eventMiniBoardMultiDropMapAB_.CalculateSize(_map_eventMiniBoardMultiDropMapAB_codec);
      size += eventMiniBoardMultiDropMapABPatch_.CalculateSize(_map_eventMiniBoardMultiDropMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventMiniBoardMultiDropConf other) {
      if (other == null) {
        return;
      }
      eventMiniBoardMultiDropMap_.Add(other.eventMiniBoardMultiDropMap_);
      eventMiniBoardMultiDropMapAB_.Add(other.eventMiniBoardMultiDropMapAB_);
      eventMiniBoardMultiDropMapABPatch_.Add(other.eventMiniBoardMultiDropMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventMiniBoardMultiDropMap_.AddEntriesFrom(input, _map_eventMiniBoardMultiDropMap_codec);
            break;
          }
          case 18: {
            eventMiniBoardMultiDropMapAB_.AddEntriesFrom(input, _map_eventMiniBoardMultiDropMapAB_codec);
            break;
          }
          case 26: {
            eventMiniBoardMultiDropMapABPatch_.AddEntriesFrom(input, _map_eventMiniBoardMultiDropMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventMiniBoardMultiDropMap_.AddEntriesFrom(ref input, _map_eventMiniBoardMultiDropMap_codec);
            break;
          }
          case 18: {
            eventMiniBoardMultiDropMapAB_.AddEntriesFrom(ref input, _map_eventMiniBoardMultiDropMapAB_codec);
            break;
          }
          case 26: {
            eventMiniBoardMultiDropMapABPatch_.AddEntriesFrom(ref input, _map_eventMiniBoardMultiDropMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
