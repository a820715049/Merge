// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventLimitMergeOrderConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventLimitMergeOrderConf.proto</summary>
  public static partial class EventLimitMergeOrderConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventLimitMergeOrderConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventLimitMergeOrderConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiZyYXdkYXRhL0V2ZW50TGltaXRNZXJnZU9yZGVyQ29uZi5wcm90bxIHcmF3",
            "ZGF0YSJbChRFdmVudExpbWl0TWVyZ2VPcmRlchIKCgJpZBgBIAEoBRITCgtp",
            "bnRSYW5kb21lchgCIAEoBRIRCglvcmRlckl0ZW0YAyABKAUSDwoHcmV3YXJk",
            "cxgEIAEoBSLmAQoeRXZlbnRMaW1pdE1lcmdlT3JkZXJNYXBBQlZhbHVlEmUK",
            "F0V2ZW50TGltaXRNZXJnZU9yZGVyTWFwGAEgAygLMkQucmF3ZGF0YS5FdmVu",
            "dExpbWl0TWVyZ2VPcmRlck1hcEFCVmFsdWUuRXZlbnRMaW1pdE1lcmdlT3Jk",
            "ZXJNYXBFbnRyeRpdChxFdmVudExpbWl0TWVyZ2VPcmRlck1hcEVudHJ5EgsK",
            "A2tleRgBIAEoBRIsCgV2YWx1ZRgCIAEoCzIdLnJhd2RhdGEuRXZlbnRMaW1p",
            "dE1lcmdlT3JkZXI6AjgBIokFChhFdmVudExpbWl0TWVyZ2VPcmRlckNvbmYS",
            "XwoXRXZlbnRMaW1pdE1lcmdlT3JkZXJNYXAYASADKAsyPi5yYXdkYXRhLkV2",
            "ZW50TGltaXRNZXJnZU9yZGVyQ29uZi5FdmVudExpbWl0TWVyZ2VPcmRlck1h",
            "cEVudHJ5EmMKGUV2ZW50TGltaXRNZXJnZU9yZGVyTWFwQUIYAiADKAsyQC5y",
            "YXdkYXRhLkV2ZW50TGltaXRNZXJnZU9yZGVyQ29uZi5FdmVudExpbWl0TWVy",
            "Z2VPcmRlck1hcEFCRW50cnkSbQoeRXZlbnRMaW1pdE1lcmdlT3JkZXJNYXBB",
            "QlBhdGNoGAMgAygLMkUucmF3ZGF0YS5FdmVudExpbWl0TWVyZ2VPcmRlckNv",
            "bmYuRXZlbnRMaW1pdE1lcmdlT3JkZXJNYXBBQlBhdGNoRW50cnkaXQocRXZl",
            "bnRMaW1pdE1lcmdlT3JkZXJNYXBFbnRyeRILCgNrZXkYASABKAUSLAoFdmFs",
            "dWUYAiABKAsyHS5yYXdkYXRhLkV2ZW50TGltaXRNZXJnZU9yZGVyOgI4ARpp",
            "Ch5FdmVudExpbWl0TWVyZ2VPcmRlck1hcEFCRW50cnkSCwoDa2V5GAEgASgJ",
            "EjYKBXZhbHVlGAIgASgLMicucmF3ZGF0YS5FdmVudExpbWl0TWVyZ2VPcmRl",
            "ck1hcEFCVmFsdWU6AjgBGm4KI0V2ZW50TGltaXRNZXJnZU9yZGVyTWFwQUJQ",
            "YXRjaEVudHJ5EgsKA2tleRgBIAEoCRI2CgV2YWx1ZRgCIAEoCzInLnJhd2Rh",
            "dGEuRXZlbnRMaW1pdE1lcmdlT3JkZXJNYXBBQlZhbHVlOgI4AUI9Wi1naXRs",
            "YWIuZnVucGx1cy5pby9mYXQvY29uZi9nZW4vZ29sYW5nL3Jhd2RhdGGqAgtm",
            "YXQucmF3ZGF0YWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventLimitMergeOrder), global::fat.rawdata.EventLimitMergeOrder.Parser, new[]{ "Id", "IntRandomer", "OrderItem", "Rewards" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventLimitMergeOrderMapABValue), global::fat.rawdata.EventLimitMergeOrderMapABValue.Parser, new[]{ "EventLimitMergeOrderMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventLimitMergeOrderConf), global::fat.rawdata.EventLimitMergeOrderConf.Parser, new[]{ "EventLimitMergeOrderMap", "EventLimitMergeOrderMapAB", "EventLimitMergeOrderMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventLimitMergeOrder",table="EventLimitMergeOrderMap",table_wrapper="EventLimitMergeOrderConf",map="true",map_key_type="int32",data="EventLimitMergeOrderConf")
  /// annotation@ab(table_ab="EventLimitMergeOrderMapAB",table_ab_patch="EventLimitMergeOrderMapABPatch",table_ab_value="EventLimitMergeOrderMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventLimitMergeOrder(id="id")
  /// </summary>
  public sealed partial class EventLimitMergeOrder : pb::IMessage<EventLimitMergeOrder>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventLimitMergeOrder> _parser = new pb::MessageParser<EventLimitMergeOrder>(() => new EventLimitMergeOrder());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventLimitMergeOrder> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventLimitMergeOrderConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventLimitMergeOrder() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventLimitMergeOrder(EventLimitMergeOrder other) : this() {
      id_ = other.id_;
      intRandomer_ = other.intRandomer_;
      orderItem_ = other.orderItem_;
      rewards_ = other.rewards_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventLimitMergeOrder Clone() {
      return new EventLimitMergeOrder(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 订单配置id
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "intRandomer" field.</summary>
    public const int IntRandomerFieldNumber = 2;
    private int intRandomer_;
    /// <summary>
    /// 随机订单ID
    /// （OrderRandomer.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IntRandomer {
      get { return intRandomer_; }
      set {
        intRandomer_ = value;
      }
    }

    /// <summary>Field number for the "orderItem" field.</summary>
    public const int OrderItemFieldNumber = 3;
    private int orderItem_;
    /// <summary>
    /// 订单需求棋子
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int OrderItem {
      get { return orderItem_; }
      set {
        orderItem_ = value;
      }
    }

    /// <summary>Field number for the "rewards" field.</summary>
    public const int RewardsFieldNumber = 4;
    private int rewards_;
    /// <summary>
    /// 订单奖励id
    /// （OrderReward.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Rewards {
      get { return rewards_; }
      set {
        rewards_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventLimitMergeOrder);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventLimitMergeOrder other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (IntRandomer != other.IntRandomer) return false;
      if (OrderItem != other.OrderItem) return false;
      if (Rewards != other.Rewards) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (IntRandomer != 0) hash ^= IntRandomer.GetHashCode();
      if (OrderItem != 0) hash ^= OrderItem.GetHashCode();
      if (Rewards != 0) hash ^= Rewards.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (IntRandomer != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(IntRandomer);
      }
      if (OrderItem != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(OrderItem);
      }
      if (Rewards != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Rewards);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (IntRandomer != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(IntRandomer);
      }
      if (OrderItem != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(OrderItem);
      }
      if (Rewards != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Rewards);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (IntRandomer != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IntRandomer);
      }
      if (OrderItem != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OrderItem);
      }
      if (Rewards != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Rewards);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventLimitMergeOrder other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.IntRandomer != 0) {
        IntRandomer = other.IntRandomer;
      }
      if (other.OrderItem != 0) {
        OrderItem = other.OrderItem;
      }
      if (other.Rewards != 0) {
        Rewards = other.Rewards;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            IntRandomer = input.ReadInt32();
            break;
          }
          case 24: {
            OrderItem = input.ReadInt32();
            break;
          }
          case 32: {
            Rewards = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            IntRandomer = input.ReadInt32();
            break;
          }
          case 24: {
            OrderItem = input.ReadInt32();
            break;
          }
          case 32: {
            Rewards = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventLimitMergeOrderMapABValue : pb::IMessage<EventLimitMergeOrderMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventLimitMergeOrderMapABValue> _parser = new pb::MessageParser<EventLimitMergeOrderMapABValue>(() => new EventLimitMergeOrderMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventLimitMergeOrderMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventLimitMergeOrderConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventLimitMergeOrderMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventLimitMergeOrderMapABValue(EventLimitMergeOrderMapABValue other) : this() {
      eventLimitMergeOrderMap_ = other.eventLimitMergeOrderMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventLimitMergeOrderMapABValue Clone() {
      return new EventLimitMergeOrderMapABValue(this);
    }

    /// <summary>Field number for the "EventLimitMergeOrderMap" field.</summary>
    public const int EventLimitMergeOrderMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventLimitMergeOrder>.Codec _map_eventLimitMergeOrderMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventLimitMergeOrder>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventLimitMergeOrder.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventLimitMergeOrder> eventLimitMergeOrderMap_ = new pbc::MapField<int, global::fat.rawdata.EventLimitMergeOrder>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventLimitMergeOrder> EventLimitMergeOrderMap {
      get { return eventLimitMergeOrderMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventLimitMergeOrderMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventLimitMergeOrderMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventLimitMergeOrderMap.Equals(other.EventLimitMergeOrderMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventLimitMergeOrderMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventLimitMergeOrderMap_.WriteTo(output, _map_eventLimitMergeOrderMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventLimitMergeOrderMap_.WriteTo(ref output, _map_eventLimitMergeOrderMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventLimitMergeOrderMap_.CalculateSize(_map_eventLimitMergeOrderMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventLimitMergeOrderMapABValue other) {
      if (other == null) {
        return;
      }
      eventLimitMergeOrderMap_.Add(other.eventLimitMergeOrderMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventLimitMergeOrderMap_.AddEntriesFrom(input, _map_eventLimitMergeOrderMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventLimitMergeOrderMap_.AddEntriesFrom(ref input, _map_eventLimitMergeOrderMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventLimitMergeOrderConf : pb::IMessage<EventLimitMergeOrderConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventLimitMergeOrderConf> _parser = new pb::MessageParser<EventLimitMergeOrderConf>(() => new EventLimitMergeOrderConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventLimitMergeOrderConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventLimitMergeOrderConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventLimitMergeOrderConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventLimitMergeOrderConf(EventLimitMergeOrderConf other) : this() {
      eventLimitMergeOrderMap_ = other.eventLimitMergeOrderMap_.Clone();
      eventLimitMergeOrderMapAB_ = other.eventLimitMergeOrderMapAB_.Clone();
      eventLimitMergeOrderMapABPatch_ = other.eventLimitMergeOrderMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventLimitMergeOrderConf Clone() {
      return new EventLimitMergeOrderConf(this);
    }

    /// <summary>Field number for the "EventLimitMergeOrderMap" field.</summary>
    public const int EventLimitMergeOrderMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventLimitMergeOrder>.Codec _map_eventLimitMergeOrderMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventLimitMergeOrder>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventLimitMergeOrder.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventLimitMergeOrder> eventLimitMergeOrderMap_ = new pbc::MapField<int, global::fat.rawdata.EventLimitMergeOrder>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventLimitMergeOrder> EventLimitMergeOrderMap {
      get { return eventLimitMergeOrderMap_; }
    }

    /// <summary>Field number for the "EventLimitMergeOrderMapAB" field.</summary>
    public const int EventLimitMergeOrderMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventLimitMergeOrderMapABValue>.Codec _map_eventLimitMergeOrderMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventLimitMergeOrderMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventLimitMergeOrderMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventLimitMergeOrderMapABValue> eventLimitMergeOrderMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventLimitMergeOrderMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventLimitMergeOrderMapABValue> EventLimitMergeOrderMapAB {
      get { return eventLimitMergeOrderMapAB_; }
    }

    /// <summary>Field number for the "EventLimitMergeOrderMapABPatch" field.</summary>
    public const int EventLimitMergeOrderMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventLimitMergeOrderMapABValue>.Codec _map_eventLimitMergeOrderMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventLimitMergeOrderMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventLimitMergeOrderMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventLimitMergeOrderMapABValue> eventLimitMergeOrderMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventLimitMergeOrderMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventLimitMergeOrderMapABValue> EventLimitMergeOrderMapABPatch {
      get { return eventLimitMergeOrderMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventLimitMergeOrderConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventLimitMergeOrderConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventLimitMergeOrderMap.Equals(other.EventLimitMergeOrderMap)) return false;
      if (!EventLimitMergeOrderMapAB.Equals(other.EventLimitMergeOrderMapAB)) return false;
      if (!EventLimitMergeOrderMapABPatch.Equals(other.EventLimitMergeOrderMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventLimitMergeOrderMap.GetHashCode();
      hash ^= EventLimitMergeOrderMapAB.GetHashCode();
      hash ^= EventLimitMergeOrderMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventLimitMergeOrderMap_.WriteTo(output, _map_eventLimitMergeOrderMap_codec);
      eventLimitMergeOrderMapAB_.WriteTo(output, _map_eventLimitMergeOrderMapAB_codec);
      eventLimitMergeOrderMapABPatch_.WriteTo(output, _map_eventLimitMergeOrderMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventLimitMergeOrderMap_.WriteTo(ref output, _map_eventLimitMergeOrderMap_codec);
      eventLimitMergeOrderMapAB_.WriteTo(ref output, _map_eventLimitMergeOrderMapAB_codec);
      eventLimitMergeOrderMapABPatch_.WriteTo(ref output, _map_eventLimitMergeOrderMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventLimitMergeOrderMap_.CalculateSize(_map_eventLimitMergeOrderMap_codec);
      size += eventLimitMergeOrderMapAB_.CalculateSize(_map_eventLimitMergeOrderMapAB_codec);
      size += eventLimitMergeOrderMapABPatch_.CalculateSize(_map_eventLimitMergeOrderMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventLimitMergeOrderConf other) {
      if (other == null) {
        return;
      }
      eventLimitMergeOrderMap_.Add(other.eventLimitMergeOrderMap_);
      eventLimitMergeOrderMapAB_.Add(other.eventLimitMergeOrderMapAB_);
      eventLimitMergeOrderMapABPatch_.Add(other.eventLimitMergeOrderMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventLimitMergeOrderMap_.AddEntriesFrom(input, _map_eventLimitMergeOrderMap_codec);
            break;
          }
          case 18: {
            eventLimitMergeOrderMapAB_.AddEntriesFrom(input, _map_eventLimitMergeOrderMapAB_codec);
            break;
          }
          case 26: {
            eventLimitMergeOrderMapABPatch_.AddEntriesFrom(input, _map_eventLimitMergeOrderMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventLimitMergeOrderMap_.AddEntriesFrom(ref input, _map_eventLimitMergeOrderMap_codec);
            break;
          }
          case 18: {
            eventLimitMergeOrderMapAB_.AddEntriesFrom(ref input, _map_eventLimitMergeOrderMapAB_codec);
            break;
          }
          case 26: {
            eventLimitMergeOrderMapABPatch_.AddEntriesFrom(ref input, _map_eventLimitMergeOrderMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
