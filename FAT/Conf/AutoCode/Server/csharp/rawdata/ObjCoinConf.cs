// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/ObjCoinConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/ObjCoinConf.proto</summary>
  public static partial class ObjCoinConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/ObjCoinConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ObjCoinConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChlyYXdkYXRhL09iakNvaW5Db25mLnByb3RvEgdyYXdkYXRhGhZyYXdkYXRh",
            "L0NvaW5UeXBlLnByb3RvIn8KB09iakNvaW4SCgoCaWQYASABKAUSDAoEaW1n",
            "cxgCIAMoCRISCgppbWdzQW1vdW50GAMgAygFEhEKCWluaXRDb3VudBgEIAEo",
            "BRISCgpzcHJpdGVOYW1lGAYgASgJEh8KBHR5cGUYBSABKA4yES5yYXdkYXRh",
            "LkNvaW5UeXBlIpgBChFPYmpDb2luTWFwQUJWYWx1ZRI+CgpPYmpDb2luTWFw",
            "GAEgAygLMioucmF3ZGF0YS5PYmpDb2luTWFwQUJWYWx1ZS5PYmpDb2luTWFw",
            "RW50cnkaQwoPT2JqQ29pbk1hcEVudHJ5EgsKA2tleRgBIAEoBRIfCgV2YWx1",
            "ZRgCIAEoCzIQLnJhd2RhdGEuT2JqQ29pbjoCOAEiuQMKC09iakNvaW5Db25m",
            "EjgKCk9iakNvaW5NYXAYASADKAsyJC5yYXdkYXRhLk9iakNvaW5Db25mLk9i",
            "akNvaW5NYXBFbnRyeRI8CgxPYmpDb2luTWFwQUIYAiADKAsyJi5yYXdkYXRh",
            "Lk9iakNvaW5Db25mLk9iakNvaW5NYXBBQkVudHJ5EkYKEU9iakNvaW5NYXBB",
            "QlBhdGNoGAMgAygLMisucmF3ZGF0YS5PYmpDb2luQ29uZi5PYmpDb2luTWFw",
            "QUJQYXRjaEVudHJ5GkMKD09iakNvaW5NYXBFbnRyeRILCgNrZXkYASABKAUS",
            "HwoFdmFsdWUYAiABKAsyEC5yYXdkYXRhLk9iakNvaW46AjgBGk8KEU9iakNv",
            "aW5NYXBBQkVudHJ5EgsKA2tleRgBIAEoCRIpCgV2YWx1ZRgCIAEoCzIaLnJh",
            "d2RhdGEuT2JqQ29pbk1hcEFCVmFsdWU6AjgBGlQKFk9iakNvaW5NYXBBQlBh",
            "dGNoRW50cnkSCwoDa2V5GAEgASgJEikKBXZhbHVlGAIgASgLMhoucmF3ZGF0",
            "YS5PYmpDb2luTWFwQUJWYWx1ZToCOAFCPVotZ2l0bGFiLmZ1bnBsdXMuaW8v",
            "ZmF0L2NvbmYvZ2VuL2dvbGFuZy9yYXdkYXRhqgILZmF0LnJhd2RhdGFiBnBy",
            "b3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::fat.rawdata.CoinTypeReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.ObjCoin), global::fat.rawdata.ObjCoin.Parser, new[]{ "Id", "Imgs", "ImgsAmount", "InitCount", "SpriteName", "Type" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.ObjCoinMapABValue), global::fat.rawdata.ObjCoinMapABValue.Parser, new[]{ "ObjCoinMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.ObjCoinConf), global::fat.rawdata.ObjCoinConf.Parser, new[]{ "ObjCoinMap", "ObjCoinMapAB", "ObjCoinMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="ObjCoin",table="ObjCoinMap",table_wrapper="ObjCoinConf",map="true",map_key_type="int32",data="ObjCoinConf")
  /// annotation@ab(table_ab="ObjCoinMapAB",table_ab_patch="ObjCoinMapABPatch",table_ab_value="ObjCoinMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@ObjCoin(id="id")
  /// </summary>
  public sealed partial class ObjCoin : pb::IMessage<ObjCoin>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ObjCoin> _parser = new pb::MessageParser<ObjCoin>(() => new ObjCoin());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ObjCoin> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.ObjCoinConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjCoin() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjCoin(ObjCoin other) : this() {
      id_ = other.id_;
      imgs_ = other.imgs_.Clone();
      imgsAmount_ = other.imgsAmount_.Clone();
      initCount_ = other.initCount_;
      spriteName_ = other.spriteName_;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjCoin Clone() {
      return new ObjCoin(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 资源id
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "imgs" field.</summary>
    public const int ImgsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_imgs_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> imgs_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 图片
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Imgs {
      get { return imgs_; }
    }

    /// <summary>Field number for the "imgsAmount" field.</summary>
    public const int ImgsAmountFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_imgsAmount_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> imgsAmount_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 前面的imgs对应的起始数值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> ImgsAmount {
      get { return imgsAmount_; }
    }

    /// <summary>Field number for the "initCount" field.</summary>
    public const int InitCountFieldNumber = 4;
    private int initCount_;
    /// <summary>
    /// 初始数值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int InitCount {
      get { return initCount_; }
      set {
        initCount_ = value;
      }
    }

    /// <summary>Field number for the "spriteName" field.</summary>
    public const int SpriteNameFieldNumber = 6;
    private string spriteName_ = "";
    /// <summary>
    /// 图文混排key
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SpriteName {
      get { return spriteName_; }
      set {
        spriteName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 5;
    private global::fat.rawdata.CoinType type_ = global::fat.rawdata.CoinType.NoneCoin;
    /// <summary>
    /// 类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::fat.rawdata.CoinType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ObjCoin);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ObjCoin other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!imgs_.Equals(other.imgs_)) return false;
      if(!imgsAmount_.Equals(other.imgsAmount_)) return false;
      if (InitCount != other.InitCount) return false;
      if (SpriteName != other.SpriteName) return false;
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      hash ^= imgs_.GetHashCode();
      hash ^= imgsAmount_.GetHashCode();
      if (InitCount != 0) hash ^= InitCount.GetHashCode();
      if (SpriteName.Length != 0) hash ^= SpriteName.GetHashCode();
      if (Type != global::fat.rawdata.CoinType.NoneCoin) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      imgs_.WriteTo(output, _repeated_imgs_codec);
      imgsAmount_.WriteTo(output, _repeated_imgsAmount_codec);
      if (InitCount != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(InitCount);
      }
      if (Type != global::fat.rawdata.CoinType.NoneCoin) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Type);
      }
      if (SpriteName.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(SpriteName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      imgs_.WriteTo(ref output, _repeated_imgs_codec);
      imgsAmount_.WriteTo(ref output, _repeated_imgsAmount_codec);
      if (InitCount != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(InitCount);
      }
      if (Type != global::fat.rawdata.CoinType.NoneCoin) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Type);
      }
      if (SpriteName.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(SpriteName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      size += imgs_.CalculateSize(_repeated_imgs_codec);
      size += imgsAmount_.CalculateSize(_repeated_imgsAmount_codec);
      if (InitCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(InitCount);
      }
      if (SpriteName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SpriteName);
      }
      if (Type != global::fat.rawdata.CoinType.NoneCoin) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ObjCoin other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      imgs_.Add(other.imgs_);
      imgsAmount_.Add(other.imgsAmount_);
      if (other.InitCount != 0) {
        InitCount = other.InitCount;
      }
      if (other.SpriteName.Length != 0) {
        SpriteName = other.SpriteName;
      }
      if (other.Type != global::fat.rawdata.CoinType.NoneCoin) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            imgs_.AddEntriesFrom(input, _repeated_imgs_codec);
            break;
          }
          case 26:
          case 24: {
            imgsAmount_.AddEntriesFrom(input, _repeated_imgsAmount_codec);
            break;
          }
          case 32: {
            InitCount = input.ReadInt32();
            break;
          }
          case 40: {
            Type = (global::fat.rawdata.CoinType) input.ReadEnum();
            break;
          }
          case 50: {
            SpriteName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            imgs_.AddEntriesFrom(ref input, _repeated_imgs_codec);
            break;
          }
          case 26:
          case 24: {
            imgsAmount_.AddEntriesFrom(ref input, _repeated_imgsAmount_codec);
            break;
          }
          case 32: {
            InitCount = input.ReadInt32();
            break;
          }
          case 40: {
            Type = (global::fat.rawdata.CoinType) input.ReadEnum();
            break;
          }
          case 50: {
            SpriteName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ObjCoinMapABValue : pb::IMessage<ObjCoinMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ObjCoinMapABValue> _parser = new pb::MessageParser<ObjCoinMapABValue>(() => new ObjCoinMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ObjCoinMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.ObjCoinConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjCoinMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjCoinMapABValue(ObjCoinMapABValue other) : this() {
      objCoinMap_ = other.objCoinMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjCoinMapABValue Clone() {
      return new ObjCoinMapABValue(this);
    }

    /// <summary>Field number for the "ObjCoinMap" field.</summary>
    public const int ObjCoinMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.ObjCoin>.Codec _map_objCoinMap_codec
        = new pbc::MapField<int, global::fat.rawdata.ObjCoin>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ObjCoin.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.ObjCoin> objCoinMap_ = new pbc::MapField<int, global::fat.rawdata.ObjCoin>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.ObjCoin> ObjCoinMap {
      get { return objCoinMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ObjCoinMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ObjCoinMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!ObjCoinMap.Equals(other.ObjCoinMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ObjCoinMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      objCoinMap_.WriteTo(output, _map_objCoinMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      objCoinMap_.WriteTo(ref output, _map_objCoinMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += objCoinMap_.CalculateSize(_map_objCoinMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ObjCoinMapABValue other) {
      if (other == null) {
        return;
      }
      objCoinMap_.Add(other.objCoinMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            objCoinMap_.AddEntriesFrom(input, _map_objCoinMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            objCoinMap_.AddEntriesFrom(ref input, _map_objCoinMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ObjCoinConf : pb::IMessage<ObjCoinConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ObjCoinConf> _parser = new pb::MessageParser<ObjCoinConf>(() => new ObjCoinConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ObjCoinConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.ObjCoinConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjCoinConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjCoinConf(ObjCoinConf other) : this() {
      objCoinMap_ = other.objCoinMap_.Clone();
      objCoinMapAB_ = other.objCoinMapAB_.Clone();
      objCoinMapABPatch_ = other.objCoinMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjCoinConf Clone() {
      return new ObjCoinConf(this);
    }

    /// <summary>Field number for the "ObjCoinMap" field.</summary>
    public const int ObjCoinMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.ObjCoin>.Codec _map_objCoinMap_codec
        = new pbc::MapField<int, global::fat.rawdata.ObjCoin>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ObjCoin.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.ObjCoin> objCoinMap_ = new pbc::MapField<int, global::fat.rawdata.ObjCoin>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.ObjCoin> ObjCoinMap {
      get { return objCoinMap_; }
    }

    /// <summary>Field number for the "ObjCoinMapAB" field.</summary>
    public const int ObjCoinMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.ObjCoinMapABValue>.Codec _map_objCoinMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.ObjCoinMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ObjCoinMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.ObjCoinMapABValue> objCoinMapAB_ = new pbc::MapField<string, global::fat.rawdata.ObjCoinMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.ObjCoinMapABValue> ObjCoinMapAB {
      get { return objCoinMapAB_; }
    }

    /// <summary>Field number for the "ObjCoinMapABPatch" field.</summary>
    public const int ObjCoinMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.ObjCoinMapABValue>.Codec _map_objCoinMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.ObjCoinMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ObjCoinMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.ObjCoinMapABValue> objCoinMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.ObjCoinMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.ObjCoinMapABValue> ObjCoinMapABPatch {
      get { return objCoinMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ObjCoinConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ObjCoinConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!ObjCoinMap.Equals(other.ObjCoinMap)) return false;
      if (!ObjCoinMapAB.Equals(other.ObjCoinMapAB)) return false;
      if (!ObjCoinMapABPatch.Equals(other.ObjCoinMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ObjCoinMap.GetHashCode();
      hash ^= ObjCoinMapAB.GetHashCode();
      hash ^= ObjCoinMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      objCoinMap_.WriteTo(output, _map_objCoinMap_codec);
      objCoinMapAB_.WriteTo(output, _map_objCoinMapAB_codec);
      objCoinMapABPatch_.WriteTo(output, _map_objCoinMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      objCoinMap_.WriteTo(ref output, _map_objCoinMap_codec);
      objCoinMapAB_.WriteTo(ref output, _map_objCoinMapAB_codec);
      objCoinMapABPatch_.WriteTo(ref output, _map_objCoinMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += objCoinMap_.CalculateSize(_map_objCoinMap_codec);
      size += objCoinMapAB_.CalculateSize(_map_objCoinMapAB_codec);
      size += objCoinMapABPatch_.CalculateSize(_map_objCoinMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ObjCoinConf other) {
      if (other == null) {
        return;
      }
      objCoinMap_.Add(other.objCoinMap_);
      objCoinMapAB_.Add(other.objCoinMapAB_);
      objCoinMapABPatch_.Add(other.objCoinMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            objCoinMap_.AddEntriesFrom(input, _map_objCoinMap_codec);
            break;
          }
          case 18: {
            objCoinMapAB_.AddEntriesFrom(input, _map_objCoinMapAB_codec);
            break;
          }
          case 26: {
            objCoinMapABPatch_.AddEntriesFrom(input, _map_objCoinMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            objCoinMap_.AddEntriesFrom(ref input, _map_objCoinMap_codec);
            break;
          }
          case 18: {
            objCoinMapAB_.AddEntriesFrom(ref input, _map_objCoinMapAB_codec);
            break;
          }
          case 26: {
            objCoinMapABPatch_.AddEntriesFrom(ref input, _map_objCoinMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
