// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EndlessThreePackDetailConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EndlessThreePackDetailConf.proto</summary>
  public static partial class EndlessThreePackDetailConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EndlessThreePackDetailConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EndlessThreePackDetailConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CihyYXdkYXRhL0VuZGxlc3NUaHJlZVBhY2tEZXRhaWxDb25mLnByb3RvEgdy",
            "YXdkYXRhIn4KFkVuZGxlc3NUaHJlZVBhY2tEZXRhaWwSEAoIZGV0YWlsaWQY",
            "ASABKAUSFAoMZnJlZU9uZUdycElkGAIgASgFEhQKDGZyZWVUd29HcnBJZBgD",
            "IAEoBRIRCglwYWNrR3JwSWQYBCABKAUSEwoLdG9rZW5SZXdhcmQYBSABKAUi",
            "agoiRW5kbGVzc1RocmVlUGFja0RldGFpbFNsaWNlQUJWYWx1ZRJEChtFbmRs",
            "ZXNzVGhyZWVQYWNrRGV0YWlsU2xpY2UYASADKAsyHy5yYXdkYXRhLkVuZGxl",
            "c3NUaHJlZVBhY2tEZXRhaWwitQQKGkVuZGxlc3NUaHJlZVBhY2tEZXRhaWxD",
            "b25mEkQKG0VuZGxlc3NUaHJlZVBhY2tEZXRhaWxTbGljZRgBIAMoCzIfLnJh",
            "d2RhdGEuRW5kbGVzc1RocmVlUGFja0RldGFpbBJtCh1FbmRsZXNzVGhyZWVQ",
            "YWNrRGV0YWlsU2xpY2VBQhgCIAMoCzJGLnJhd2RhdGEuRW5kbGVzc1RocmVl",
            "UGFja0RldGFpbENvbmYuRW5kbGVzc1RocmVlUGFja0RldGFpbFNsaWNlQUJF",
            "bnRyeRJ3CiJFbmRsZXNzVGhyZWVQYWNrRGV0YWlsU2xpY2VBQlBhdGNoGAMg",
            "AygLMksucmF3ZGF0YS5FbmRsZXNzVGhyZWVQYWNrRGV0YWlsQ29uZi5FbmRs",
            "ZXNzVGhyZWVQYWNrRGV0YWlsU2xpY2VBQlBhdGNoRW50cnkacQoiRW5kbGVz",
            "c1RocmVlUGFja0RldGFpbFNsaWNlQUJFbnRyeRILCgNrZXkYASABKAkSOgoF",
            "dmFsdWUYAiABKAsyKy5yYXdkYXRhLkVuZGxlc3NUaHJlZVBhY2tEZXRhaWxT",
            "bGljZUFCVmFsdWU6AjgBGnYKJ0VuZGxlc3NUaHJlZVBhY2tEZXRhaWxTbGlj",
            "ZUFCUGF0Y2hFbnRyeRILCgNrZXkYASABKAkSOgoFdmFsdWUYAiABKAsyKy5y",
            "YXdkYXRhLkVuZGxlc3NUaHJlZVBhY2tEZXRhaWxTbGljZUFCVmFsdWU6AjgB",
            "Qj1aLWdpdGxhYi5mdW5wbHVzLmlvL2ZhdC9jb25mL2dlbi9nb2xhbmcvcmF3",
            "ZGF0YaoCC2ZhdC5yYXdkYXRhYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EndlessThreePackDetail), global::fat.rawdata.EndlessThreePackDetail.Parser, new[]{ "Detailid", "FreeOneGrpId", "FreeTwoGrpId", "PackGrpId", "TokenReward" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EndlessThreePackDetailSliceABValue), global::fat.rawdata.EndlessThreePackDetailSliceABValue.Parser, new[]{ "EndlessThreePackDetailSlice" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EndlessThreePackDetailConf), global::fat.rawdata.EndlessThreePackDetailConf.Parser, new[]{ "EndlessThreePackDetailSlice", "EndlessThreePackDetailSliceAB", "EndlessThreePackDetailSliceABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EndlessThreePackDetail",table="EndlessThreePackDetailSlice",table_wrapper="EndlessThreePackDetailConf",map="false",map_key_type="",data="EndlessThreePackDetailConf")
  /// annotation@ab(table_ab="EndlessThreePackDetailSliceAB",table_ab_patch="EndlessThreePackDetailSliceABPatch",table_ab_value="EndlessThreePackDetailSliceABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// </summary>
  public sealed partial class EndlessThreePackDetail : pb::IMessage<EndlessThreePackDetail>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EndlessThreePackDetail> _parser = new pb::MessageParser<EndlessThreePackDetail>(() => new EndlessThreePackDetail());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EndlessThreePackDetail> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EndlessThreePackDetailConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndlessThreePackDetail() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndlessThreePackDetail(EndlessThreePackDetail other) : this() {
      detailid_ = other.detailid_;
      freeOneGrpId_ = other.freeOneGrpId_;
      freeTwoGrpId_ = other.freeTwoGrpId_;
      packGrpId_ = other.packGrpId_;
      tokenReward_ = other.tokenReward_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndlessThreePackDetail Clone() {
      return new EndlessThreePackDetail(this);
    }

    /// <summary>Field number for the "detailid" field.</summary>
    public const int DetailidFieldNumber = 1;
    private int detailid_;
    /// <summary>
    /// 礼包详情id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Detailid {
      get { return detailid_; }
      set {
        detailid_ = value;
      }
    }

    /// <summary>Field number for the "freeOneGrpId" field.</summary>
    public const int FreeOneGrpIdFieldNumber = 2;
    private int freeOneGrpId_;
    /// <summary>
    /// 赠品ID
    /// （受档位组控制）
    /// （GradeIndexMapping.id）
    /// （IAPFree.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FreeOneGrpId {
      get { return freeOneGrpId_; }
      set {
        freeOneGrpId_ = value;
      }
    }

    /// <summary>Field number for the "freeTwoGrpId" field.</summary>
    public const int FreeTwoGrpIdFieldNumber = 3;
    private int freeTwoGrpId_;
    /// <summary>
    /// 赠品ID
    /// （受档位组控制）
    /// （GradeIndexMapping.id）
    /// （IAPFree.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FreeTwoGrpId {
      get { return freeTwoGrpId_; }
      set {
        freeTwoGrpId_ = value;
      }
    }

    /// <summary>Field number for the "packGrpId" field.</summary>
    public const int PackGrpIdFieldNumber = 4;
    private int packGrpId_;
    /// <summary>
    /// 内购商品ID
    /// （受档位组控制）
    /// （GradeIndexMapping.id）
    /// （IAPPack.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PackGrpId {
      get { return packGrpId_; }
      set {
        packGrpId_ = value;
      }
    }

    /// <summary>Field number for the "tokenReward" field.</summary>
    public const int TokenRewardFieldNumber = 5;
    private int tokenReward_;
    /// <summary>
    /// token奖励
    /// （受档位组控制）
    /// （GradeIndexMapping.id）
    /// （EndlessThreePackToken.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TokenReward {
      get { return tokenReward_; }
      set {
        tokenReward_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EndlessThreePackDetail);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EndlessThreePackDetail other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Detailid != other.Detailid) return false;
      if (FreeOneGrpId != other.FreeOneGrpId) return false;
      if (FreeTwoGrpId != other.FreeTwoGrpId) return false;
      if (PackGrpId != other.PackGrpId) return false;
      if (TokenReward != other.TokenReward) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Detailid != 0) hash ^= Detailid.GetHashCode();
      if (FreeOneGrpId != 0) hash ^= FreeOneGrpId.GetHashCode();
      if (FreeTwoGrpId != 0) hash ^= FreeTwoGrpId.GetHashCode();
      if (PackGrpId != 0) hash ^= PackGrpId.GetHashCode();
      if (TokenReward != 0) hash ^= TokenReward.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Detailid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Detailid);
      }
      if (FreeOneGrpId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(FreeOneGrpId);
      }
      if (FreeTwoGrpId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(FreeTwoGrpId);
      }
      if (PackGrpId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(PackGrpId);
      }
      if (TokenReward != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(TokenReward);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Detailid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Detailid);
      }
      if (FreeOneGrpId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(FreeOneGrpId);
      }
      if (FreeTwoGrpId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(FreeTwoGrpId);
      }
      if (PackGrpId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(PackGrpId);
      }
      if (TokenReward != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(TokenReward);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Detailid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Detailid);
      }
      if (FreeOneGrpId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FreeOneGrpId);
      }
      if (FreeTwoGrpId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FreeTwoGrpId);
      }
      if (PackGrpId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PackGrpId);
      }
      if (TokenReward != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TokenReward);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EndlessThreePackDetail other) {
      if (other == null) {
        return;
      }
      if (other.Detailid != 0) {
        Detailid = other.Detailid;
      }
      if (other.FreeOneGrpId != 0) {
        FreeOneGrpId = other.FreeOneGrpId;
      }
      if (other.FreeTwoGrpId != 0) {
        FreeTwoGrpId = other.FreeTwoGrpId;
      }
      if (other.PackGrpId != 0) {
        PackGrpId = other.PackGrpId;
      }
      if (other.TokenReward != 0) {
        TokenReward = other.TokenReward;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Detailid = input.ReadInt32();
            break;
          }
          case 16: {
            FreeOneGrpId = input.ReadInt32();
            break;
          }
          case 24: {
            FreeTwoGrpId = input.ReadInt32();
            break;
          }
          case 32: {
            PackGrpId = input.ReadInt32();
            break;
          }
          case 40: {
            TokenReward = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Detailid = input.ReadInt32();
            break;
          }
          case 16: {
            FreeOneGrpId = input.ReadInt32();
            break;
          }
          case 24: {
            FreeTwoGrpId = input.ReadInt32();
            break;
          }
          case 32: {
            PackGrpId = input.ReadInt32();
            break;
          }
          case 40: {
            TokenReward = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EndlessThreePackDetailSliceABValue : pb::IMessage<EndlessThreePackDetailSliceABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EndlessThreePackDetailSliceABValue> _parser = new pb::MessageParser<EndlessThreePackDetailSliceABValue>(() => new EndlessThreePackDetailSliceABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EndlessThreePackDetailSliceABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EndlessThreePackDetailConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndlessThreePackDetailSliceABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndlessThreePackDetailSliceABValue(EndlessThreePackDetailSliceABValue other) : this() {
      endlessThreePackDetailSlice_ = other.endlessThreePackDetailSlice_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndlessThreePackDetailSliceABValue Clone() {
      return new EndlessThreePackDetailSliceABValue(this);
    }

    /// <summary>Field number for the "EndlessThreePackDetailSlice" field.</summary>
    public const int EndlessThreePackDetailSliceFieldNumber = 1;
    private static readonly pb::FieldCodec<global::fat.rawdata.EndlessThreePackDetail> _repeated_endlessThreePackDetailSlice_codec
        = pb::FieldCodec.ForMessage(10, global::fat.rawdata.EndlessThreePackDetail.Parser);
    private readonly pbc::RepeatedField<global::fat.rawdata.EndlessThreePackDetail> endlessThreePackDetailSlice_ = new pbc::RepeatedField<global::fat.rawdata.EndlessThreePackDetail>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::fat.rawdata.EndlessThreePackDetail> EndlessThreePackDetailSlice {
      get { return endlessThreePackDetailSlice_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EndlessThreePackDetailSliceABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EndlessThreePackDetailSliceABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!endlessThreePackDetailSlice_.Equals(other.endlessThreePackDetailSlice_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= endlessThreePackDetailSlice_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      endlessThreePackDetailSlice_.WriteTo(output, _repeated_endlessThreePackDetailSlice_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      endlessThreePackDetailSlice_.WriteTo(ref output, _repeated_endlessThreePackDetailSlice_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += endlessThreePackDetailSlice_.CalculateSize(_repeated_endlessThreePackDetailSlice_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EndlessThreePackDetailSliceABValue other) {
      if (other == null) {
        return;
      }
      endlessThreePackDetailSlice_.Add(other.endlessThreePackDetailSlice_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            endlessThreePackDetailSlice_.AddEntriesFrom(input, _repeated_endlessThreePackDetailSlice_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            endlessThreePackDetailSlice_.AddEntriesFrom(ref input, _repeated_endlessThreePackDetailSlice_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EndlessThreePackDetailConf : pb::IMessage<EndlessThreePackDetailConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EndlessThreePackDetailConf> _parser = new pb::MessageParser<EndlessThreePackDetailConf>(() => new EndlessThreePackDetailConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EndlessThreePackDetailConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EndlessThreePackDetailConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndlessThreePackDetailConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndlessThreePackDetailConf(EndlessThreePackDetailConf other) : this() {
      endlessThreePackDetailSlice_ = other.endlessThreePackDetailSlice_.Clone();
      endlessThreePackDetailSliceAB_ = other.endlessThreePackDetailSliceAB_.Clone();
      endlessThreePackDetailSliceABPatch_ = other.endlessThreePackDetailSliceABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndlessThreePackDetailConf Clone() {
      return new EndlessThreePackDetailConf(this);
    }

    /// <summary>Field number for the "EndlessThreePackDetailSlice" field.</summary>
    public const int EndlessThreePackDetailSliceFieldNumber = 1;
    private static readonly pb::FieldCodec<global::fat.rawdata.EndlessThreePackDetail> _repeated_endlessThreePackDetailSlice_codec
        = pb::FieldCodec.ForMessage(10, global::fat.rawdata.EndlessThreePackDetail.Parser);
    private readonly pbc::RepeatedField<global::fat.rawdata.EndlessThreePackDetail> endlessThreePackDetailSlice_ = new pbc::RepeatedField<global::fat.rawdata.EndlessThreePackDetail>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::fat.rawdata.EndlessThreePackDetail> EndlessThreePackDetailSlice {
      get { return endlessThreePackDetailSlice_; }
    }

    /// <summary>Field number for the "EndlessThreePackDetailSliceAB" field.</summary>
    public const int EndlessThreePackDetailSliceABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EndlessThreePackDetailSliceABValue>.Codec _map_endlessThreePackDetailSliceAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EndlessThreePackDetailSliceABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EndlessThreePackDetailSliceABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EndlessThreePackDetailSliceABValue> endlessThreePackDetailSliceAB_ = new pbc::MapField<string, global::fat.rawdata.EndlessThreePackDetailSliceABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EndlessThreePackDetailSliceABValue> EndlessThreePackDetailSliceAB {
      get { return endlessThreePackDetailSliceAB_; }
    }

    /// <summary>Field number for the "EndlessThreePackDetailSliceABPatch" field.</summary>
    public const int EndlessThreePackDetailSliceABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EndlessThreePackDetailSliceABValue>.Codec _map_endlessThreePackDetailSliceABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EndlessThreePackDetailSliceABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EndlessThreePackDetailSliceABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EndlessThreePackDetailSliceABValue> endlessThreePackDetailSliceABPatch_ = new pbc::MapField<string, global::fat.rawdata.EndlessThreePackDetailSliceABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EndlessThreePackDetailSliceABValue> EndlessThreePackDetailSliceABPatch {
      get { return endlessThreePackDetailSliceABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EndlessThreePackDetailConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EndlessThreePackDetailConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!endlessThreePackDetailSlice_.Equals(other.endlessThreePackDetailSlice_)) return false;
      if (!EndlessThreePackDetailSliceAB.Equals(other.EndlessThreePackDetailSliceAB)) return false;
      if (!EndlessThreePackDetailSliceABPatch.Equals(other.EndlessThreePackDetailSliceABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= endlessThreePackDetailSlice_.GetHashCode();
      hash ^= EndlessThreePackDetailSliceAB.GetHashCode();
      hash ^= EndlessThreePackDetailSliceABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      endlessThreePackDetailSlice_.WriteTo(output, _repeated_endlessThreePackDetailSlice_codec);
      endlessThreePackDetailSliceAB_.WriteTo(output, _map_endlessThreePackDetailSliceAB_codec);
      endlessThreePackDetailSliceABPatch_.WriteTo(output, _map_endlessThreePackDetailSliceABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      endlessThreePackDetailSlice_.WriteTo(ref output, _repeated_endlessThreePackDetailSlice_codec);
      endlessThreePackDetailSliceAB_.WriteTo(ref output, _map_endlessThreePackDetailSliceAB_codec);
      endlessThreePackDetailSliceABPatch_.WriteTo(ref output, _map_endlessThreePackDetailSliceABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += endlessThreePackDetailSlice_.CalculateSize(_repeated_endlessThreePackDetailSlice_codec);
      size += endlessThreePackDetailSliceAB_.CalculateSize(_map_endlessThreePackDetailSliceAB_codec);
      size += endlessThreePackDetailSliceABPatch_.CalculateSize(_map_endlessThreePackDetailSliceABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EndlessThreePackDetailConf other) {
      if (other == null) {
        return;
      }
      endlessThreePackDetailSlice_.Add(other.endlessThreePackDetailSlice_);
      endlessThreePackDetailSliceAB_.Add(other.endlessThreePackDetailSliceAB_);
      endlessThreePackDetailSliceABPatch_.Add(other.endlessThreePackDetailSliceABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            endlessThreePackDetailSlice_.AddEntriesFrom(input, _repeated_endlessThreePackDetailSlice_codec);
            break;
          }
          case 18: {
            endlessThreePackDetailSliceAB_.AddEntriesFrom(input, _map_endlessThreePackDetailSliceAB_codec);
            break;
          }
          case 26: {
            endlessThreePackDetailSliceABPatch_.AddEntriesFrom(input, _map_endlessThreePackDetailSliceABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            endlessThreePackDetailSlice_.AddEntriesFrom(ref input, _repeated_endlessThreePackDetailSlice_codec);
            break;
          }
          case 18: {
            endlessThreePackDetailSliceAB_.AddEntriesFrom(ref input, _map_endlessThreePackDetailSliceAB_codec);
            break;
          }
          case 26: {
            endlessThreePackDetailSliceABPatch_.AddEntriesFrom(ref input, _map_endlessThreePackDetailSliceABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
