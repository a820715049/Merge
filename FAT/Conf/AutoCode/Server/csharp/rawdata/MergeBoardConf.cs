// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/MergeBoardConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/MergeBoardConf.proto</summary>
  public static partial class MergeBoardConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/MergeBoardConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MergeBoardConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChxyYXdkYXRhL01lcmdlQm9hcmRDb25mLnByb3RvEgdyYXdkYXRhGhpyYXdk",
            "YXRhL0ZlYXR1cmVFbnRyeS5wcm90byKEAwoKTWVyZ2VCb2FyZBIKCgJpZBgB",
            "IAEoBRIOCgZfdGFnc18YAiADKAkSFAoMYW1iaWVudEF1ZGlvGAMgASgJEhQK",
            "DGJhY2tHcm91bmRCRxgEIAEoCRIXCg9ib3hVbmxvY2tFZmZlY3QYBSABKAkS",
            "CwoDY29sGAYgAygJEhAKCGNvbENvdW50GAcgASgFEhMKC2RldGFpbFBhcmFt",
            "GBAgASgFEhYKDmVxdWFsTWFpbkJvYXJkGBIgASgIEiYKB2ZlYXR1cmUYESAB",
            "KA4yFS5yYXdkYXRhLkZlYXR1cmVFbnRyeRIVCg1naWZ0Qm94dW5hYmxlGBMg",
            "ASgIEg0KBWltZ0JHGAggASgJEg4KBmltZ0JveBgJIAMoCRIPCgdpbWdUaWxl",
            "GAogASgJEg4KBmltZ1RvcBgLIAEoCRIQCghpc2xhbmRJZBgMIAEoBRIQCghy",
            "b3dDb3VudBgNIAEoBRIRCglzaG93T3JkZXIYDiABKAUSEwoLd2FsbFBhcGVy",
            "SWQYDyABKAUiqgEKFE1lcmdlQm9hcmRNYXBBQlZhbHVlEkcKDU1lcmdlQm9h",
            "cmRNYXAYASADKAsyMC5yYXdkYXRhLk1lcmdlQm9hcmRNYXBBQlZhbHVlLk1l",
            "cmdlQm9hcmRNYXBFbnRyeRpJChJNZXJnZUJvYXJkTWFwRW50cnkSCwoDa2V5",
            "GAEgASgFEiIKBXZhbHVlGAIgASgLMhMucmF3ZGF0YS5NZXJnZUJvYXJkOgI4",
            "ASLpAwoOTWVyZ2VCb2FyZENvbmYSQQoNTWVyZ2VCb2FyZE1hcBgBIAMoCzIq",
            "LnJhd2RhdGEuTWVyZ2VCb2FyZENvbmYuTWVyZ2VCb2FyZE1hcEVudHJ5EkUK",
            "D01lcmdlQm9hcmRNYXBBQhgCIAMoCzIsLnJhd2RhdGEuTWVyZ2VCb2FyZENv",
            "bmYuTWVyZ2VCb2FyZE1hcEFCRW50cnkSTwoUTWVyZ2VCb2FyZE1hcEFCUGF0",
            "Y2gYAyADKAsyMS5yYXdkYXRhLk1lcmdlQm9hcmRDb25mLk1lcmdlQm9hcmRN",
            "YXBBQlBhdGNoRW50cnkaSQoSTWVyZ2VCb2FyZE1hcEVudHJ5EgsKA2tleRgB",
            "IAEoBRIiCgV2YWx1ZRgCIAEoCzITLnJhd2RhdGEuTWVyZ2VCb2FyZDoCOAEa",
            "VQoUTWVyZ2VCb2FyZE1hcEFCRW50cnkSCwoDa2V5GAEgASgJEiwKBXZhbHVl",
            "GAIgASgLMh0ucmF3ZGF0YS5NZXJnZUJvYXJkTWFwQUJWYWx1ZToCOAEaWgoZ",
            "TWVyZ2VCb2FyZE1hcEFCUGF0Y2hFbnRyeRILCgNrZXkYASABKAkSLAoFdmFs",
            "dWUYAiABKAsyHS5yYXdkYXRhLk1lcmdlQm9hcmRNYXBBQlZhbHVlOgI4AUI9",
            "Wi1naXRsYWIuZnVucGx1cy5pby9mYXQvY29uZi9nZW4vZ29sYW5nL3Jhd2Rh",
            "dGGqAgtmYXQucmF3ZGF0YWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::fat.rawdata.FeatureEntryReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.MergeBoard), global::fat.rawdata.MergeBoard.Parser, new[]{ "Id", "Tags", "AmbientAudio", "BackGroundBG", "BoxUnlockEffect", "Col", "ColCount", "DetailParam", "EqualMainBoard", "Feature", "GiftBoxunable", "ImgBG", "ImgBox", "ImgTile", "ImgTop", "IslandId", "RowCount", "ShowOrder", "WallPaperId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.MergeBoardMapABValue), global::fat.rawdata.MergeBoardMapABValue.Parser, new[]{ "MergeBoardMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.MergeBoardConf), global::fat.rawdata.MergeBoardConf.Parser, new[]{ "MergeBoardMap", "MergeBoardMapAB", "MergeBoardMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="MergeBoard",table="MergeBoardMap",table_wrapper="MergeBoardConf",map="true",map_key_type="int32",data="MergeBoardConf")
  /// annotation@ab(table_ab="MergeBoardMapAB",table_ab_patch="MergeBoardMapABPatch",table_ab_value="MergeBoardMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@MergeBoard(id="id")
  /// </summary>
  public sealed partial class MergeBoard : pb::IMessage<MergeBoard>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MergeBoard> _parser = new pb::MessageParser<MergeBoard>(() => new MergeBoard());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MergeBoard> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.MergeBoardConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeBoard() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeBoard(MergeBoard other) : this() {
      id_ = other.id_;
      Tags_ = other.Tags_.Clone();
      ambientAudio_ = other.ambientAudio_;
      backGroundBG_ = other.backGroundBG_;
      boxUnlockEffect_ = other.boxUnlockEffect_;
      col_ = other.col_.Clone();
      colCount_ = other.colCount_;
      detailParam_ = other.detailParam_;
      equalMainBoard_ = other.equalMainBoard_;
      feature_ = other.feature_;
      giftBoxunable_ = other.giftBoxunable_;
      imgBG_ = other.imgBG_;
      imgBox_ = other.imgBox_.Clone();
      imgTile_ = other.imgTile_;
      imgTop_ = other.imgTop_;
      islandId_ = other.islandId_;
      rowCount_ = other.rowCount_;
      showOrder_ = other.showOrder_;
      wallPaperId_ = other.wallPaperId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeBoard Clone() {
      return new MergeBoard(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 唯一id从1开始
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "_tags_" field.</summary>
    public const int TagsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_Tags_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> Tags_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 版本标记
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Tags {
      get { return Tags_; }
    }

    /// <summary>Field number for the "ambientAudio" field.</summary>
    public const int AmbientAudioFieldNumber = 3;
    private string ambientAudio_ = "";
    /// <summary>
    /// 背景声音
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AmbientAudio {
      get { return ambientAudio_; }
      set {
        ambientAudio_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "backGroundBG" field.</summary>
    public const int BackGroundBGFieldNumber = 4;
    private string backGroundBG_ = "";
    /// <summary>
    /// 背景版图片
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BackGroundBG {
      get { return backGroundBG_; }
      set {
        backGroundBG_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "boxUnlockEffect" field.</summary>
    public const int BoxUnlockEffectFieldNumber = 5;
    private string boxUnlockEffect_ = "";
    /// <summary>
    /// 开箱子特效
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BoxUnlockEffect {
      get { return boxUnlockEffect_; }
      set {
        boxUnlockEffect_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "col" field.</summary>
    public const int ColFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _repeated_col_codec
        = pb::FieldCodec.ForString(50);
    private readonly pbc::RepeatedField<string> col_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Col {
      get { return col_; }
    }

    /// <summary>Field number for the "colCount" field.</summary>
    public const int ColCountFieldNumber = 7;
    private int colCount_;
    /// <summary>
    /// 列数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ColCount {
      get { return colCount_; }
      set {
        colCount_ = value;
      }
    }

    /// <summary>Field number for the "detailParam" field.</summary>
    public const int DetailParamFieldNumber = 16;
    private int detailParam_;
    /// <summary>
    /// 对应功能的棋盘额外detail表ID
    /// 不填代表没有
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DetailParam {
      get { return detailParam_; }
      set {
        detailParam_ = value;
      }
    }

    /// <summary>Field number for the "equalMainBoard" field.</summary>
    public const int EqualMainBoardFieldNumber = 18;
    private bool equalMainBoard_;
    /// <summary>
    /// 【是否等价于主棋盘】
    /// 控制两个功能
    /// 1. 在活动棋盘，消耗主棋盘体力，进行合成操作，产出相关代币【火车】
    /// 2. 在活动棋盘，弹出其他活动弹窗后，点击play按钮返回本棋盘
    /// 
    /// 状态说明
    /// FALSE/空：不等价
    /// TRUE：等价于主棋盘
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool EqualMainBoard {
      get { return equalMainBoard_; }
      set {
        equalMainBoard_ = value;
      }
    }

    /// <summary>Field number for the "feature" field.</summary>
    public const int FeatureFieldNumber = 17;
    private global::fat.rawdata.FeatureEntry feature_ = global::fat.rawdata.FeatureEntry.FeatureNone;
    /// <summary>
    /// 功能类型
    /// 添加 feature
    /// 读对应活动配置
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::fat.rawdata.FeatureEntry Feature {
      get { return feature_; }
      set {
        feature_ = value;
      }
    }

    /// <summary>Field number for the "giftBoxunable" field.</summary>
    public const int GiftBoxunableFieldNumber = 19;
    private bool giftBoxunable_;
    /// <summary>
    /// 棋盘奖励箱不可用
    /// 
    /// TRUE：不可用，奖励发到主棋盘
    /// FALSE/空：可用，奖励发到对应活动棋盘
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool GiftBoxunable {
      get { return giftBoxunable_; }
      set {
        giftBoxunable_ = value;
      }
    }

    /// <summary>Field number for the "imgBG" field.</summary>
    public const int ImgBGFieldNumber = 8;
    private string imgBG_ = "";
    /// <summary>
    /// 背景图片
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ImgBG {
      get { return imgBG_; }
      set {
        imgBG_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "imgBox" field.</summary>
    public const int ImgBoxFieldNumber = 9;
    private static readonly pb::FieldCodec<string> _repeated_imgBox_codec
        = pb::FieldCodec.ForString(74);
    private readonly pbc::RepeatedField<string> imgBox_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 纸箱图片
    /// 对于类型为1或3的格子，按照后面的参数取对应的纸箱图片
    /// 0取第1个，以此类推
    /// 约定：第0张为等级限制的图片
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ImgBox {
      get { return imgBox_; }
    }

    /// <summary>Field number for the "imgTile" field.</summary>
    public const int ImgTileFieldNumber = 10;
    private string imgTile_ = "";
    /// <summary>
    /// 背景分块图片
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ImgTile {
      get { return imgTile_; }
      set {
        imgTile_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "imgTop" field.</summary>
    public const int ImgTopFieldNumber = 11;
    private string imgTop_ = "";
    /// <summary>
    /// 覆盖在pattern图上方的背景
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ImgTop {
      get { return imgTop_; }
      set {
        imgTop_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "islandId" field.</summary>
    public const int IslandIdFieldNumber = 12;
    private int islandId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IslandId {
      get { return islandId_; }
      set {
        islandId_ = value;
      }
    }

    /// <summary>Field number for the "rowCount" field.</summary>
    public const int RowCountFieldNumber = 13;
    private int rowCount_;
    /// <summary>
    /// 行数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RowCount {
      get { return rowCount_; }
      set {
        rowCount_ = value;
      }
    }

    /// <summary>Field number for the "showOrder" field.</summary>
    public const int ShowOrderFieldNumber = 14;
    private int showOrder_;
    /// <summary>
    /// 哪个订单以后可以出现npc
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ShowOrder {
      get { return showOrder_; }
      set {
        showOrder_ = value;
      }
    }

    /// <summary>Field number for the "wallPaperId" field.</summary>
    public const int WallPaperIdFieldNumber = 15;
    private int wallPaperId_;
    /// <summary>
    /// 使用的墙纸Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int WallPaperId {
      get { return wallPaperId_; }
      set {
        wallPaperId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MergeBoard);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MergeBoard other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!Tags_.Equals(other.Tags_)) return false;
      if (AmbientAudio != other.AmbientAudio) return false;
      if (BackGroundBG != other.BackGroundBG) return false;
      if (BoxUnlockEffect != other.BoxUnlockEffect) return false;
      if(!col_.Equals(other.col_)) return false;
      if (ColCount != other.ColCount) return false;
      if (DetailParam != other.DetailParam) return false;
      if (EqualMainBoard != other.EqualMainBoard) return false;
      if (Feature != other.Feature) return false;
      if (GiftBoxunable != other.GiftBoxunable) return false;
      if (ImgBG != other.ImgBG) return false;
      if(!imgBox_.Equals(other.imgBox_)) return false;
      if (ImgTile != other.ImgTile) return false;
      if (ImgTop != other.ImgTop) return false;
      if (IslandId != other.IslandId) return false;
      if (RowCount != other.RowCount) return false;
      if (ShowOrder != other.ShowOrder) return false;
      if (WallPaperId != other.WallPaperId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      hash ^= Tags_.GetHashCode();
      if (AmbientAudio.Length != 0) hash ^= AmbientAudio.GetHashCode();
      if (BackGroundBG.Length != 0) hash ^= BackGroundBG.GetHashCode();
      if (BoxUnlockEffect.Length != 0) hash ^= BoxUnlockEffect.GetHashCode();
      hash ^= col_.GetHashCode();
      if (ColCount != 0) hash ^= ColCount.GetHashCode();
      if (DetailParam != 0) hash ^= DetailParam.GetHashCode();
      if (EqualMainBoard != false) hash ^= EqualMainBoard.GetHashCode();
      if (Feature != global::fat.rawdata.FeatureEntry.FeatureNone) hash ^= Feature.GetHashCode();
      if (GiftBoxunable != false) hash ^= GiftBoxunable.GetHashCode();
      if (ImgBG.Length != 0) hash ^= ImgBG.GetHashCode();
      hash ^= imgBox_.GetHashCode();
      if (ImgTile.Length != 0) hash ^= ImgTile.GetHashCode();
      if (ImgTop.Length != 0) hash ^= ImgTop.GetHashCode();
      if (IslandId != 0) hash ^= IslandId.GetHashCode();
      if (RowCount != 0) hash ^= RowCount.GetHashCode();
      if (ShowOrder != 0) hash ^= ShowOrder.GetHashCode();
      if (WallPaperId != 0) hash ^= WallPaperId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      Tags_.WriteTo(output, _repeated_Tags_codec);
      if (AmbientAudio.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(AmbientAudio);
      }
      if (BackGroundBG.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(BackGroundBG);
      }
      if (BoxUnlockEffect.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(BoxUnlockEffect);
      }
      col_.WriteTo(output, _repeated_col_codec);
      if (ColCount != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(ColCount);
      }
      if (ImgBG.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ImgBG);
      }
      imgBox_.WriteTo(output, _repeated_imgBox_codec);
      if (ImgTile.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ImgTile);
      }
      if (ImgTop.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(ImgTop);
      }
      if (IslandId != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(IslandId);
      }
      if (RowCount != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(RowCount);
      }
      if (ShowOrder != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(ShowOrder);
      }
      if (WallPaperId != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(WallPaperId);
      }
      if (DetailParam != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(DetailParam);
      }
      if (Feature != global::fat.rawdata.FeatureEntry.FeatureNone) {
        output.WriteRawTag(136, 1);
        output.WriteEnum((int) Feature);
      }
      if (EqualMainBoard != false) {
        output.WriteRawTag(144, 1);
        output.WriteBool(EqualMainBoard);
      }
      if (GiftBoxunable != false) {
        output.WriteRawTag(152, 1);
        output.WriteBool(GiftBoxunable);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      Tags_.WriteTo(ref output, _repeated_Tags_codec);
      if (AmbientAudio.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(AmbientAudio);
      }
      if (BackGroundBG.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(BackGroundBG);
      }
      if (BoxUnlockEffect.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(BoxUnlockEffect);
      }
      col_.WriteTo(ref output, _repeated_col_codec);
      if (ColCount != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(ColCount);
      }
      if (ImgBG.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ImgBG);
      }
      imgBox_.WriteTo(ref output, _repeated_imgBox_codec);
      if (ImgTile.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ImgTile);
      }
      if (ImgTop.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(ImgTop);
      }
      if (IslandId != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(IslandId);
      }
      if (RowCount != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(RowCount);
      }
      if (ShowOrder != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(ShowOrder);
      }
      if (WallPaperId != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(WallPaperId);
      }
      if (DetailParam != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(DetailParam);
      }
      if (Feature != global::fat.rawdata.FeatureEntry.FeatureNone) {
        output.WriteRawTag(136, 1);
        output.WriteEnum((int) Feature);
      }
      if (EqualMainBoard != false) {
        output.WriteRawTag(144, 1);
        output.WriteBool(EqualMainBoard);
      }
      if (GiftBoxunable != false) {
        output.WriteRawTag(152, 1);
        output.WriteBool(GiftBoxunable);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      size += Tags_.CalculateSize(_repeated_Tags_codec);
      if (AmbientAudio.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AmbientAudio);
      }
      if (BackGroundBG.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BackGroundBG);
      }
      if (BoxUnlockEffect.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BoxUnlockEffect);
      }
      size += col_.CalculateSize(_repeated_col_codec);
      if (ColCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ColCount);
      }
      if (DetailParam != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(DetailParam);
      }
      if (EqualMainBoard != false) {
        size += 2 + 1;
      }
      if (Feature != global::fat.rawdata.FeatureEntry.FeatureNone) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) Feature);
      }
      if (GiftBoxunable != false) {
        size += 2 + 1;
      }
      if (ImgBG.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ImgBG);
      }
      size += imgBox_.CalculateSize(_repeated_imgBox_codec);
      if (ImgTile.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ImgTile);
      }
      if (ImgTop.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ImgTop);
      }
      if (IslandId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IslandId);
      }
      if (RowCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RowCount);
      }
      if (ShowOrder != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ShowOrder);
      }
      if (WallPaperId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WallPaperId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MergeBoard other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      Tags_.Add(other.Tags_);
      if (other.AmbientAudio.Length != 0) {
        AmbientAudio = other.AmbientAudio;
      }
      if (other.BackGroundBG.Length != 0) {
        BackGroundBG = other.BackGroundBG;
      }
      if (other.BoxUnlockEffect.Length != 0) {
        BoxUnlockEffect = other.BoxUnlockEffect;
      }
      col_.Add(other.col_);
      if (other.ColCount != 0) {
        ColCount = other.ColCount;
      }
      if (other.DetailParam != 0) {
        DetailParam = other.DetailParam;
      }
      if (other.EqualMainBoard != false) {
        EqualMainBoard = other.EqualMainBoard;
      }
      if (other.Feature != global::fat.rawdata.FeatureEntry.FeatureNone) {
        Feature = other.Feature;
      }
      if (other.GiftBoxunable != false) {
        GiftBoxunable = other.GiftBoxunable;
      }
      if (other.ImgBG.Length != 0) {
        ImgBG = other.ImgBG;
      }
      imgBox_.Add(other.imgBox_);
      if (other.ImgTile.Length != 0) {
        ImgTile = other.ImgTile;
      }
      if (other.ImgTop.Length != 0) {
        ImgTop = other.ImgTop;
      }
      if (other.IslandId != 0) {
        IslandId = other.IslandId;
      }
      if (other.RowCount != 0) {
        RowCount = other.RowCount;
      }
      if (other.ShowOrder != 0) {
        ShowOrder = other.ShowOrder;
      }
      if (other.WallPaperId != 0) {
        WallPaperId = other.WallPaperId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Tags_.AddEntriesFrom(input, _repeated_Tags_codec);
            break;
          }
          case 26: {
            AmbientAudio = input.ReadString();
            break;
          }
          case 34: {
            BackGroundBG = input.ReadString();
            break;
          }
          case 42: {
            BoxUnlockEffect = input.ReadString();
            break;
          }
          case 50: {
            col_.AddEntriesFrom(input, _repeated_col_codec);
            break;
          }
          case 56: {
            ColCount = input.ReadInt32();
            break;
          }
          case 66: {
            ImgBG = input.ReadString();
            break;
          }
          case 74: {
            imgBox_.AddEntriesFrom(input, _repeated_imgBox_codec);
            break;
          }
          case 82: {
            ImgTile = input.ReadString();
            break;
          }
          case 90: {
            ImgTop = input.ReadString();
            break;
          }
          case 96: {
            IslandId = input.ReadInt32();
            break;
          }
          case 104: {
            RowCount = input.ReadInt32();
            break;
          }
          case 112: {
            ShowOrder = input.ReadInt32();
            break;
          }
          case 120: {
            WallPaperId = input.ReadInt32();
            break;
          }
          case 128: {
            DetailParam = input.ReadInt32();
            break;
          }
          case 136: {
            Feature = (global::fat.rawdata.FeatureEntry) input.ReadEnum();
            break;
          }
          case 144: {
            EqualMainBoard = input.ReadBool();
            break;
          }
          case 152: {
            GiftBoxunable = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Tags_.AddEntriesFrom(ref input, _repeated_Tags_codec);
            break;
          }
          case 26: {
            AmbientAudio = input.ReadString();
            break;
          }
          case 34: {
            BackGroundBG = input.ReadString();
            break;
          }
          case 42: {
            BoxUnlockEffect = input.ReadString();
            break;
          }
          case 50: {
            col_.AddEntriesFrom(ref input, _repeated_col_codec);
            break;
          }
          case 56: {
            ColCount = input.ReadInt32();
            break;
          }
          case 66: {
            ImgBG = input.ReadString();
            break;
          }
          case 74: {
            imgBox_.AddEntriesFrom(ref input, _repeated_imgBox_codec);
            break;
          }
          case 82: {
            ImgTile = input.ReadString();
            break;
          }
          case 90: {
            ImgTop = input.ReadString();
            break;
          }
          case 96: {
            IslandId = input.ReadInt32();
            break;
          }
          case 104: {
            RowCount = input.ReadInt32();
            break;
          }
          case 112: {
            ShowOrder = input.ReadInt32();
            break;
          }
          case 120: {
            WallPaperId = input.ReadInt32();
            break;
          }
          case 128: {
            DetailParam = input.ReadInt32();
            break;
          }
          case 136: {
            Feature = (global::fat.rawdata.FeatureEntry) input.ReadEnum();
            break;
          }
          case 144: {
            EqualMainBoard = input.ReadBool();
            break;
          }
          case 152: {
            GiftBoxunable = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MergeBoardMapABValue : pb::IMessage<MergeBoardMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MergeBoardMapABValue> _parser = new pb::MessageParser<MergeBoardMapABValue>(() => new MergeBoardMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MergeBoardMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.MergeBoardConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeBoardMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeBoardMapABValue(MergeBoardMapABValue other) : this() {
      mergeBoardMap_ = other.mergeBoardMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeBoardMapABValue Clone() {
      return new MergeBoardMapABValue(this);
    }

    /// <summary>Field number for the "MergeBoardMap" field.</summary>
    public const int MergeBoardMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.MergeBoard>.Codec _map_mergeBoardMap_codec
        = new pbc::MapField<int, global::fat.rawdata.MergeBoard>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.MergeBoard.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.MergeBoard> mergeBoardMap_ = new pbc::MapField<int, global::fat.rawdata.MergeBoard>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.MergeBoard> MergeBoardMap {
      get { return mergeBoardMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MergeBoardMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MergeBoardMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!MergeBoardMap.Equals(other.MergeBoardMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= MergeBoardMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      mergeBoardMap_.WriteTo(output, _map_mergeBoardMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      mergeBoardMap_.WriteTo(ref output, _map_mergeBoardMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += mergeBoardMap_.CalculateSize(_map_mergeBoardMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MergeBoardMapABValue other) {
      if (other == null) {
        return;
      }
      mergeBoardMap_.Add(other.mergeBoardMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            mergeBoardMap_.AddEntriesFrom(input, _map_mergeBoardMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            mergeBoardMap_.AddEntriesFrom(ref input, _map_mergeBoardMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MergeBoardConf : pb::IMessage<MergeBoardConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MergeBoardConf> _parser = new pb::MessageParser<MergeBoardConf>(() => new MergeBoardConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MergeBoardConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.MergeBoardConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeBoardConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeBoardConf(MergeBoardConf other) : this() {
      mergeBoardMap_ = other.mergeBoardMap_.Clone();
      mergeBoardMapAB_ = other.mergeBoardMapAB_.Clone();
      mergeBoardMapABPatch_ = other.mergeBoardMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeBoardConf Clone() {
      return new MergeBoardConf(this);
    }

    /// <summary>Field number for the "MergeBoardMap" field.</summary>
    public const int MergeBoardMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.MergeBoard>.Codec _map_mergeBoardMap_codec
        = new pbc::MapField<int, global::fat.rawdata.MergeBoard>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.MergeBoard.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.MergeBoard> mergeBoardMap_ = new pbc::MapField<int, global::fat.rawdata.MergeBoard>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.MergeBoard> MergeBoardMap {
      get { return mergeBoardMap_; }
    }

    /// <summary>Field number for the "MergeBoardMapAB" field.</summary>
    public const int MergeBoardMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.MergeBoardMapABValue>.Codec _map_mergeBoardMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.MergeBoardMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.MergeBoardMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.MergeBoardMapABValue> mergeBoardMapAB_ = new pbc::MapField<string, global::fat.rawdata.MergeBoardMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.MergeBoardMapABValue> MergeBoardMapAB {
      get { return mergeBoardMapAB_; }
    }

    /// <summary>Field number for the "MergeBoardMapABPatch" field.</summary>
    public const int MergeBoardMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.MergeBoardMapABValue>.Codec _map_mergeBoardMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.MergeBoardMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.MergeBoardMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.MergeBoardMapABValue> mergeBoardMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.MergeBoardMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.MergeBoardMapABValue> MergeBoardMapABPatch {
      get { return mergeBoardMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MergeBoardConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MergeBoardConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!MergeBoardMap.Equals(other.MergeBoardMap)) return false;
      if (!MergeBoardMapAB.Equals(other.MergeBoardMapAB)) return false;
      if (!MergeBoardMapABPatch.Equals(other.MergeBoardMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= MergeBoardMap.GetHashCode();
      hash ^= MergeBoardMapAB.GetHashCode();
      hash ^= MergeBoardMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      mergeBoardMap_.WriteTo(output, _map_mergeBoardMap_codec);
      mergeBoardMapAB_.WriteTo(output, _map_mergeBoardMapAB_codec);
      mergeBoardMapABPatch_.WriteTo(output, _map_mergeBoardMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      mergeBoardMap_.WriteTo(ref output, _map_mergeBoardMap_codec);
      mergeBoardMapAB_.WriteTo(ref output, _map_mergeBoardMapAB_codec);
      mergeBoardMapABPatch_.WriteTo(ref output, _map_mergeBoardMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += mergeBoardMap_.CalculateSize(_map_mergeBoardMap_codec);
      size += mergeBoardMapAB_.CalculateSize(_map_mergeBoardMapAB_codec);
      size += mergeBoardMapABPatch_.CalculateSize(_map_mergeBoardMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MergeBoardConf other) {
      if (other == null) {
        return;
      }
      mergeBoardMap_.Add(other.mergeBoardMap_);
      mergeBoardMapAB_.Add(other.mergeBoardMapAB_);
      mergeBoardMapABPatch_.Add(other.mergeBoardMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            mergeBoardMap_.AddEntriesFrom(input, _map_mergeBoardMap_codec);
            break;
          }
          case 18: {
            mergeBoardMapAB_.AddEntriesFrom(input, _map_mergeBoardMapAB_codec);
            break;
          }
          case 26: {
            mergeBoardMapABPatch_.AddEntriesFrom(input, _map_mergeBoardMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            mergeBoardMap_.AddEntriesFrom(ref input, _map_mergeBoardMap_codec);
            break;
          }
          case 18: {
            mergeBoardMapAB_.AddEntriesFrom(ref input, _map_mergeBoardMapAB_codec);
            break;
          }
          case 26: {
            mergeBoardMapABPatch_.AddEntriesFrom(ref input, _map_mergeBoardMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
