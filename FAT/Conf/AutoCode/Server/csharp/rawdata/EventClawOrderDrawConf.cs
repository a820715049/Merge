// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventClawOrderDrawConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventClawOrderDrawConf.proto</summary>
  public static partial class EventClawOrderDrawConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventClawOrderDrawConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventClawOrderDrawConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiRyYXdkYXRhL0V2ZW50Q2xhd09yZGVyRHJhd0NvbmYucHJvdG8SB3Jhd2Rh",
            "dGEiXQoSRXZlbnRDbGF3T3JkZXJEcmF3EgoKAmlkGAEgASgFEhEKCWRyYXdD",
            "b3VudBgCIAEoBRIUCgxyZXdhcmRJY29uSWQYAyABKAUSEgoKdG9rZW5Db3Vu",
            "dBgEIAEoBSLaAQocRXZlbnRDbGF3T3JkZXJEcmF3TWFwQUJWYWx1ZRJfChVF",
            "dmVudENsYXdPcmRlckRyYXdNYXAYASADKAsyQC5yYXdkYXRhLkV2ZW50Q2xh",
            "d09yZGVyRHJhd01hcEFCVmFsdWUuRXZlbnRDbGF3T3JkZXJEcmF3TWFwRW50",
            "cnkaWQoaRXZlbnRDbGF3T3JkZXJEcmF3TWFwRW50cnkSCwoDa2V5GAEgASgF",
            "EioKBXZhbHVlGAIgASgLMhsucmF3ZGF0YS5FdmVudENsYXdPcmRlckRyYXc6",
            "AjgBIukEChZFdmVudENsYXdPcmRlckRyYXdDb25mElkKFUV2ZW50Q2xhd09y",
            "ZGVyRHJhd01hcBgBIAMoCzI6LnJhd2RhdGEuRXZlbnRDbGF3T3JkZXJEcmF3",
            "Q29uZi5FdmVudENsYXdPcmRlckRyYXdNYXBFbnRyeRJdChdFdmVudENsYXdP",
            "cmRlckRyYXdNYXBBQhgCIAMoCzI8LnJhd2RhdGEuRXZlbnRDbGF3T3JkZXJE",
            "cmF3Q29uZi5FdmVudENsYXdPcmRlckRyYXdNYXBBQkVudHJ5EmcKHEV2ZW50",
            "Q2xhd09yZGVyRHJhd01hcEFCUGF0Y2gYAyADKAsyQS5yYXdkYXRhLkV2ZW50",
            "Q2xhd09yZGVyRHJhd0NvbmYuRXZlbnRDbGF3T3JkZXJEcmF3TWFwQUJQYXRj",
            "aEVudHJ5GlkKGkV2ZW50Q2xhd09yZGVyRHJhd01hcEVudHJ5EgsKA2tleRgB",
            "IAEoBRIqCgV2YWx1ZRgCIAEoCzIbLnJhd2RhdGEuRXZlbnRDbGF3T3JkZXJE",
            "cmF3OgI4ARplChxFdmVudENsYXdPcmRlckRyYXdNYXBBQkVudHJ5EgsKA2tl",
            "eRgBIAEoCRI0CgV2YWx1ZRgCIAEoCzIlLnJhd2RhdGEuRXZlbnRDbGF3T3Jk",
            "ZXJEcmF3TWFwQUJWYWx1ZToCOAEaagohRXZlbnRDbGF3T3JkZXJEcmF3TWFw",
            "QUJQYXRjaEVudHJ5EgsKA2tleRgBIAEoCRI0CgV2YWx1ZRgCIAEoCzIlLnJh",
            "d2RhdGEuRXZlbnRDbGF3T3JkZXJEcmF3TWFwQUJWYWx1ZToCOAFCPVotZ2l0",
            "bGFiLmZ1bnBsdXMuaW8vZmF0L2NvbmYvZ2VuL2dvbGFuZy9yYXdkYXRhqgIL",
            "ZmF0LnJhd2RhdGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventClawOrderDraw), global::fat.rawdata.EventClawOrderDraw.Parser, new[]{ "Id", "DrawCount", "RewardIconId", "TokenCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventClawOrderDrawMapABValue), global::fat.rawdata.EventClawOrderDrawMapABValue.Parser, new[]{ "EventClawOrderDrawMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventClawOrderDrawConf), global::fat.rawdata.EventClawOrderDrawConf.Parser, new[]{ "EventClawOrderDrawMap", "EventClawOrderDrawMapAB", "EventClawOrderDrawMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventClawOrderDraw",table="EventClawOrderDrawMap",table_wrapper="EventClawOrderDrawConf",map="true",map_key_type="int32",data="EventClawOrderDrawConf")
  /// annotation@ab(table_ab="EventClawOrderDrawMapAB",table_ab_patch="EventClawOrderDrawMapABPatch",table_ab_value="EventClawOrderDrawMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventClawOrderDraw(id="id")
  /// </summary>
  public sealed partial class EventClawOrderDraw : pb::IMessage<EventClawOrderDraw>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventClawOrderDraw> _parser = new pb::MessageParser<EventClawOrderDraw>(() => new EventClawOrderDraw());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventClawOrderDraw> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventClawOrderDrawConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventClawOrderDraw() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventClawOrderDraw(EventClawOrderDraw other) : this() {
      id_ = other.id_;
      drawCount_ = other.drawCount_;
      rewardIconId_ = other.rewardIconId_;
      tokenCount_ = other.tokenCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventClawOrderDraw Clone() {
      return new EventClawOrderDraw(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// id
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "drawCount" field.</summary>
    public const int DrawCountFieldNumber = 2;
    private int drawCount_;
    /// <summary>
    /// 抽奖次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DrawCount {
      get { return drawCount_; }
      set {
        drawCount_ = value;
      }
    }

    /// <summary>Field number for the "rewardIconId" field.</summary>
    public const int RewardIconIdFieldNumber = 3;
    private int rewardIconId_;
    /// <summary>
    /// 抽奖美术资源 id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RewardIconId {
      get { return rewardIconId_; }
      set {
        rewardIconId_ = value;
      }
    }

    /// <summary>Field number for the "tokenCount" field.</summary>
    public const int TokenCountFieldNumber = 4;
    private int tokenCount_;
    /// <summary>
    /// 累计token数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TokenCount {
      get { return tokenCount_; }
      set {
        tokenCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventClawOrderDraw);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventClawOrderDraw other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (DrawCount != other.DrawCount) return false;
      if (RewardIconId != other.RewardIconId) return false;
      if (TokenCount != other.TokenCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (DrawCount != 0) hash ^= DrawCount.GetHashCode();
      if (RewardIconId != 0) hash ^= RewardIconId.GetHashCode();
      if (TokenCount != 0) hash ^= TokenCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (DrawCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(DrawCount);
      }
      if (RewardIconId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(RewardIconId);
      }
      if (TokenCount != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(TokenCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (DrawCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(DrawCount);
      }
      if (RewardIconId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(RewardIconId);
      }
      if (TokenCount != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(TokenCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (DrawCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DrawCount);
      }
      if (RewardIconId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RewardIconId);
      }
      if (TokenCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TokenCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventClawOrderDraw other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.DrawCount != 0) {
        DrawCount = other.DrawCount;
      }
      if (other.RewardIconId != 0) {
        RewardIconId = other.RewardIconId;
      }
      if (other.TokenCount != 0) {
        TokenCount = other.TokenCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            DrawCount = input.ReadInt32();
            break;
          }
          case 24: {
            RewardIconId = input.ReadInt32();
            break;
          }
          case 32: {
            TokenCount = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            DrawCount = input.ReadInt32();
            break;
          }
          case 24: {
            RewardIconId = input.ReadInt32();
            break;
          }
          case 32: {
            TokenCount = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventClawOrderDrawMapABValue : pb::IMessage<EventClawOrderDrawMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventClawOrderDrawMapABValue> _parser = new pb::MessageParser<EventClawOrderDrawMapABValue>(() => new EventClawOrderDrawMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventClawOrderDrawMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventClawOrderDrawConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventClawOrderDrawMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventClawOrderDrawMapABValue(EventClawOrderDrawMapABValue other) : this() {
      eventClawOrderDrawMap_ = other.eventClawOrderDrawMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventClawOrderDrawMapABValue Clone() {
      return new EventClawOrderDrawMapABValue(this);
    }

    /// <summary>Field number for the "EventClawOrderDrawMap" field.</summary>
    public const int EventClawOrderDrawMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventClawOrderDraw>.Codec _map_eventClawOrderDrawMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventClawOrderDraw>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventClawOrderDraw.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventClawOrderDraw> eventClawOrderDrawMap_ = new pbc::MapField<int, global::fat.rawdata.EventClawOrderDraw>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventClawOrderDraw> EventClawOrderDrawMap {
      get { return eventClawOrderDrawMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventClawOrderDrawMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventClawOrderDrawMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventClawOrderDrawMap.Equals(other.EventClawOrderDrawMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventClawOrderDrawMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventClawOrderDrawMap_.WriteTo(output, _map_eventClawOrderDrawMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventClawOrderDrawMap_.WriteTo(ref output, _map_eventClawOrderDrawMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventClawOrderDrawMap_.CalculateSize(_map_eventClawOrderDrawMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventClawOrderDrawMapABValue other) {
      if (other == null) {
        return;
      }
      eventClawOrderDrawMap_.Add(other.eventClawOrderDrawMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventClawOrderDrawMap_.AddEntriesFrom(input, _map_eventClawOrderDrawMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventClawOrderDrawMap_.AddEntriesFrom(ref input, _map_eventClawOrderDrawMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventClawOrderDrawConf : pb::IMessage<EventClawOrderDrawConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventClawOrderDrawConf> _parser = new pb::MessageParser<EventClawOrderDrawConf>(() => new EventClawOrderDrawConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventClawOrderDrawConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventClawOrderDrawConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventClawOrderDrawConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventClawOrderDrawConf(EventClawOrderDrawConf other) : this() {
      eventClawOrderDrawMap_ = other.eventClawOrderDrawMap_.Clone();
      eventClawOrderDrawMapAB_ = other.eventClawOrderDrawMapAB_.Clone();
      eventClawOrderDrawMapABPatch_ = other.eventClawOrderDrawMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventClawOrderDrawConf Clone() {
      return new EventClawOrderDrawConf(this);
    }

    /// <summary>Field number for the "EventClawOrderDrawMap" field.</summary>
    public const int EventClawOrderDrawMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventClawOrderDraw>.Codec _map_eventClawOrderDrawMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventClawOrderDraw>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventClawOrderDraw.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventClawOrderDraw> eventClawOrderDrawMap_ = new pbc::MapField<int, global::fat.rawdata.EventClawOrderDraw>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventClawOrderDraw> EventClawOrderDrawMap {
      get { return eventClawOrderDrawMap_; }
    }

    /// <summary>Field number for the "EventClawOrderDrawMapAB" field.</summary>
    public const int EventClawOrderDrawMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventClawOrderDrawMapABValue>.Codec _map_eventClawOrderDrawMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventClawOrderDrawMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventClawOrderDrawMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventClawOrderDrawMapABValue> eventClawOrderDrawMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventClawOrderDrawMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventClawOrderDrawMapABValue> EventClawOrderDrawMapAB {
      get { return eventClawOrderDrawMapAB_; }
    }

    /// <summary>Field number for the "EventClawOrderDrawMapABPatch" field.</summary>
    public const int EventClawOrderDrawMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventClawOrderDrawMapABValue>.Codec _map_eventClawOrderDrawMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventClawOrderDrawMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventClawOrderDrawMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventClawOrderDrawMapABValue> eventClawOrderDrawMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventClawOrderDrawMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventClawOrderDrawMapABValue> EventClawOrderDrawMapABPatch {
      get { return eventClawOrderDrawMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventClawOrderDrawConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventClawOrderDrawConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventClawOrderDrawMap.Equals(other.EventClawOrderDrawMap)) return false;
      if (!EventClawOrderDrawMapAB.Equals(other.EventClawOrderDrawMapAB)) return false;
      if (!EventClawOrderDrawMapABPatch.Equals(other.EventClawOrderDrawMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventClawOrderDrawMap.GetHashCode();
      hash ^= EventClawOrderDrawMapAB.GetHashCode();
      hash ^= EventClawOrderDrawMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventClawOrderDrawMap_.WriteTo(output, _map_eventClawOrderDrawMap_codec);
      eventClawOrderDrawMapAB_.WriteTo(output, _map_eventClawOrderDrawMapAB_codec);
      eventClawOrderDrawMapABPatch_.WriteTo(output, _map_eventClawOrderDrawMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventClawOrderDrawMap_.WriteTo(ref output, _map_eventClawOrderDrawMap_codec);
      eventClawOrderDrawMapAB_.WriteTo(ref output, _map_eventClawOrderDrawMapAB_codec);
      eventClawOrderDrawMapABPatch_.WriteTo(ref output, _map_eventClawOrderDrawMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventClawOrderDrawMap_.CalculateSize(_map_eventClawOrderDrawMap_codec);
      size += eventClawOrderDrawMapAB_.CalculateSize(_map_eventClawOrderDrawMapAB_codec);
      size += eventClawOrderDrawMapABPatch_.CalculateSize(_map_eventClawOrderDrawMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventClawOrderDrawConf other) {
      if (other == null) {
        return;
      }
      eventClawOrderDrawMap_.Add(other.eventClawOrderDrawMap_);
      eventClawOrderDrawMapAB_.Add(other.eventClawOrderDrawMapAB_);
      eventClawOrderDrawMapABPatch_.Add(other.eventClawOrderDrawMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventClawOrderDrawMap_.AddEntriesFrom(input, _map_eventClawOrderDrawMap_codec);
            break;
          }
          case 18: {
            eventClawOrderDrawMapAB_.AddEntriesFrom(input, _map_eventClawOrderDrawMapAB_codec);
            break;
          }
          case 26: {
            eventClawOrderDrawMapABPatch_.AddEntriesFrom(input, _map_eventClawOrderDrawMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventClawOrderDrawMap_.AddEntriesFrom(ref input, _map_eventClawOrderDrawMap_codec);
            break;
          }
          case 18: {
            eventClawOrderDrawMapAB_.AddEntriesFrom(ref input, _map_eventClawOrderDrawMapAB_codec);
            break;
          }
          case 26: {
            eventClawOrderDrawMapABPatch_.AddEntriesFrom(ref input, _map_eventClawOrderDrawMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
