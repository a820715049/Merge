// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/MergeTapCostConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/MergeTapCostConf.proto</summary>
  public static partial class MergeTapCostConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/MergeTapCostConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MergeTapCostConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch5yYXdkYXRhL01lcmdlVGFwQ29zdENvbmYucHJvdG8SB3Jhd2RhdGEijQEK",
            "DE1lcmdlVGFwQ29zdBIKCgJpZBgBIAEoBRIMCgRjb3N0GAIgASgFEjMKB291",
            "dHB1dHMYAyADKAsyIi5yYXdkYXRhLk1lcmdlVGFwQ29zdC5PdXRwdXRzRW50",
            "cnkaLgoMT3V0cHV0c0VudHJ5EgsKA2tleRgBIAEoBRINCgV2YWx1ZRgCIAEo",
            "BToCOAEitgEKFk1lcmdlVGFwQ29zdE1hcEFCVmFsdWUSTQoPTWVyZ2VUYXBD",
            "b3N0TWFwGAEgAygLMjQucmF3ZGF0YS5NZXJnZVRhcENvc3RNYXBBQlZhbHVl",
            "Lk1lcmdlVGFwQ29zdE1hcEVudHJ5Gk0KFE1lcmdlVGFwQ29zdE1hcEVudHJ5",
            "EgsKA2tleRgBIAEoBRIkCgV2YWx1ZRgCIAEoCzIVLnJhd2RhdGEuTWVyZ2VU",
            "YXBDb3N0OgI4ASKJBAoQTWVyZ2VUYXBDb3N0Q29uZhJHCg9NZXJnZVRhcENv",
            "c3RNYXAYASADKAsyLi5yYXdkYXRhLk1lcmdlVGFwQ29zdENvbmYuTWVyZ2VU",
            "YXBDb3N0TWFwRW50cnkSSwoRTWVyZ2VUYXBDb3N0TWFwQUIYAiADKAsyMC5y",
            "YXdkYXRhLk1lcmdlVGFwQ29zdENvbmYuTWVyZ2VUYXBDb3N0TWFwQUJFbnRy",
            "eRJVChZNZXJnZVRhcENvc3RNYXBBQlBhdGNoGAMgAygLMjUucmF3ZGF0YS5N",
            "ZXJnZVRhcENvc3RDb25mLk1lcmdlVGFwQ29zdE1hcEFCUGF0Y2hFbnRyeRpN",
            "ChRNZXJnZVRhcENvc3RNYXBFbnRyeRILCgNrZXkYASABKAUSJAoFdmFsdWUY",
            "AiABKAsyFS5yYXdkYXRhLk1lcmdlVGFwQ29zdDoCOAEaWQoWTWVyZ2VUYXBD",
            "b3N0TWFwQUJFbnRyeRILCgNrZXkYASABKAkSLgoFdmFsdWUYAiABKAsyHy5y",
            "YXdkYXRhLk1lcmdlVGFwQ29zdE1hcEFCVmFsdWU6AjgBGl4KG01lcmdlVGFw",
            "Q29zdE1hcEFCUGF0Y2hFbnRyeRILCgNrZXkYASABKAkSLgoFdmFsdWUYAiAB",
            "KAsyHy5yYXdkYXRhLk1lcmdlVGFwQ29zdE1hcEFCVmFsdWU6AjgBQj1aLWdp",
            "dGxhYi5mdW5wbHVzLmlvL2ZhdC9jb25mL2dlbi9nb2xhbmcvcmF3ZGF0YaoC",
            "C2ZhdC5yYXdkYXRhYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.MergeTapCost), global::fat.rawdata.MergeTapCost.Parser, new[]{ "Id", "Cost", "Outputs" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.MergeTapCostMapABValue), global::fat.rawdata.MergeTapCostMapABValue.Parser, new[]{ "MergeTapCostMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.MergeTapCostConf), global::fat.rawdata.MergeTapCostConf.Parser, new[]{ "MergeTapCostMap", "MergeTapCostMapAB", "MergeTapCostMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="MergeTapCost",table="MergeTapCostMap",table_wrapper="MergeTapCostConf",map="true",map_key_type="int32",data="MergeTapCostConf")
  /// annotation@ab(table_ab="MergeTapCostMapAB",table_ab_patch="MergeTapCostMapABPatch",table_ab_value="MergeTapCostMapABValue",ab_patch="true")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@MergeTapCost(id="id")
  /// </summary>
  public sealed partial class MergeTapCost : pb::IMessage<MergeTapCost>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MergeTapCost> _parser = new pb::MessageParser<MergeTapCost>(() => new MergeTapCost());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MergeTapCost> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.MergeTapCostConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeTapCost() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeTapCost(MergeTapCost other) : this() {
      id_ = other.id_;
      cost_ = other.cost_;
      outputs_ = other.outputs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeTapCost Clone() {
      return new MergeTapCost(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 消耗信息ID
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "cost" field.</summary>
    public const int CostFieldNumber = 2;
    private int cost_;
    /// <summary>
    /// 消耗内容
    /// （ObjBasic.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Cost {
      get { return cost_; }
      set {
        cost_ = value;
      }
    }

    /// <summary>Field number for the "outputs" field.</summary>
    public const int OutputsFieldNumber = 3;
    private static readonly pbc::MapField<int, int>.Codec _map_outputs_codec
        = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForInt32(16, 0), 26);
    private readonly pbc::MapField<int, int> outputs_ = new pbc::MapField<int, int>();
    /// <summary>
    /// 产出表
    /// {ObjBasic.id:权重}
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, int> Outputs {
      get { return outputs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MergeTapCost);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MergeTapCost other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Cost != other.Cost) return false;
      if (!Outputs.Equals(other.Outputs)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Cost != 0) hash ^= Cost.GetHashCode();
      hash ^= Outputs.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Cost != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Cost);
      }
      outputs_.WriteTo(output, _map_outputs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Cost != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Cost);
      }
      outputs_.WriteTo(ref output, _map_outputs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Cost != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Cost);
      }
      size += outputs_.CalculateSize(_map_outputs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MergeTapCost other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Cost != 0) {
        Cost = other.Cost;
      }
      outputs_.Add(other.outputs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Cost = input.ReadInt32();
            break;
          }
          case 26: {
            outputs_.AddEntriesFrom(input, _map_outputs_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Cost = input.ReadInt32();
            break;
          }
          case 26: {
            outputs_.AddEntriesFrom(ref input, _map_outputs_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MergeTapCostMapABValue : pb::IMessage<MergeTapCostMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MergeTapCostMapABValue> _parser = new pb::MessageParser<MergeTapCostMapABValue>(() => new MergeTapCostMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MergeTapCostMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.MergeTapCostConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeTapCostMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeTapCostMapABValue(MergeTapCostMapABValue other) : this() {
      mergeTapCostMap_ = other.mergeTapCostMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeTapCostMapABValue Clone() {
      return new MergeTapCostMapABValue(this);
    }

    /// <summary>Field number for the "MergeTapCostMap" field.</summary>
    public const int MergeTapCostMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.MergeTapCost>.Codec _map_mergeTapCostMap_codec
        = new pbc::MapField<int, global::fat.rawdata.MergeTapCost>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.MergeTapCost.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.MergeTapCost> mergeTapCostMap_ = new pbc::MapField<int, global::fat.rawdata.MergeTapCost>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.MergeTapCost> MergeTapCostMap {
      get { return mergeTapCostMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MergeTapCostMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MergeTapCostMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!MergeTapCostMap.Equals(other.MergeTapCostMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= MergeTapCostMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      mergeTapCostMap_.WriteTo(output, _map_mergeTapCostMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      mergeTapCostMap_.WriteTo(ref output, _map_mergeTapCostMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += mergeTapCostMap_.CalculateSize(_map_mergeTapCostMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MergeTapCostMapABValue other) {
      if (other == null) {
        return;
      }
      mergeTapCostMap_.Add(other.mergeTapCostMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            mergeTapCostMap_.AddEntriesFrom(input, _map_mergeTapCostMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            mergeTapCostMap_.AddEntriesFrom(ref input, _map_mergeTapCostMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MergeTapCostConf : pb::IMessage<MergeTapCostConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MergeTapCostConf> _parser = new pb::MessageParser<MergeTapCostConf>(() => new MergeTapCostConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MergeTapCostConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.MergeTapCostConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeTapCostConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeTapCostConf(MergeTapCostConf other) : this() {
      mergeTapCostMap_ = other.mergeTapCostMap_.Clone();
      mergeTapCostMapAB_ = other.mergeTapCostMapAB_.Clone();
      mergeTapCostMapABPatch_ = other.mergeTapCostMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeTapCostConf Clone() {
      return new MergeTapCostConf(this);
    }

    /// <summary>Field number for the "MergeTapCostMap" field.</summary>
    public const int MergeTapCostMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.MergeTapCost>.Codec _map_mergeTapCostMap_codec
        = new pbc::MapField<int, global::fat.rawdata.MergeTapCost>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.MergeTapCost.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.MergeTapCost> mergeTapCostMap_ = new pbc::MapField<int, global::fat.rawdata.MergeTapCost>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.MergeTapCost> MergeTapCostMap {
      get { return mergeTapCostMap_; }
    }

    /// <summary>Field number for the "MergeTapCostMapAB" field.</summary>
    public const int MergeTapCostMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.MergeTapCostMapABValue>.Codec _map_mergeTapCostMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.MergeTapCostMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.MergeTapCostMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.MergeTapCostMapABValue> mergeTapCostMapAB_ = new pbc::MapField<string, global::fat.rawdata.MergeTapCostMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.MergeTapCostMapABValue> MergeTapCostMapAB {
      get { return mergeTapCostMapAB_; }
    }

    /// <summary>Field number for the "MergeTapCostMapABPatch" field.</summary>
    public const int MergeTapCostMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.MergeTapCostMapABValue>.Codec _map_mergeTapCostMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.MergeTapCostMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.MergeTapCostMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.MergeTapCostMapABValue> mergeTapCostMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.MergeTapCostMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.MergeTapCostMapABValue> MergeTapCostMapABPatch {
      get { return mergeTapCostMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MergeTapCostConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MergeTapCostConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!MergeTapCostMap.Equals(other.MergeTapCostMap)) return false;
      if (!MergeTapCostMapAB.Equals(other.MergeTapCostMapAB)) return false;
      if (!MergeTapCostMapABPatch.Equals(other.MergeTapCostMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= MergeTapCostMap.GetHashCode();
      hash ^= MergeTapCostMapAB.GetHashCode();
      hash ^= MergeTapCostMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      mergeTapCostMap_.WriteTo(output, _map_mergeTapCostMap_codec);
      mergeTapCostMapAB_.WriteTo(output, _map_mergeTapCostMapAB_codec);
      mergeTapCostMapABPatch_.WriteTo(output, _map_mergeTapCostMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      mergeTapCostMap_.WriteTo(ref output, _map_mergeTapCostMap_codec);
      mergeTapCostMapAB_.WriteTo(ref output, _map_mergeTapCostMapAB_codec);
      mergeTapCostMapABPatch_.WriteTo(ref output, _map_mergeTapCostMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += mergeTapCostMap_.CalculateSize(_map_mergeTapCostMap_codec);
      size += mergeTapCostMapAB_.CalculateSize(_map_mergeTapCostMapAB_codec);
      size += mergeTapCostMapABPatch_.CalculateSize(_map_mergeTapCostMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MergeTapCostConf other) {
      if (other == null) {
        return;
      }
      mergeTapCostMap_.Add(other.mergeTapCostMap_);
      mergeTapCostMapAB_.Add(other.mergeTapCostMapAB_);
      mergeTapCostMapABPatch_.Add(other.mergeTapCostMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            mergeTapCostMap_.AddEntriesFrom(input, _map_mergeTapCostMap_codec);
            break;
          }
          case 18: {
            mergeTapCostMapAB_.AddEntriesFrom(input, _map_mergeTapCostMapAB_codec);
            break;
          }
          case 26: {
            mergeTapCostMapABPatch_.AddEntriesFrom(input, _map_mergeTapCostMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            mergeTapCostMap_.AddEntriesFrom(ref input, _map_mergeTapCostMap_codec);
            break;
          }
          case 18: {
            mergeTapCostMapAB_.AddEntriesFrom(ref input, _map_mergeTapCostMapAB_codec);
            break;
          }
          case 26: {
            mergeTapCostMapABPatch_.AddEntriesFrom(ref input, _map_mergeTapCostMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
