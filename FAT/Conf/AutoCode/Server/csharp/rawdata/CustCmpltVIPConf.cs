// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/CustCmpltVIPConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/CustCmpltVIPConf.proto</summary>
  public static partial class CustCmpltVIPConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/CustCmpltVIPConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CustCmpltVIPConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch5yYXdkYXRhL0N1c3RDbXBsdFZJUENvbmYucHJvdG8SB3Jhd2RhdGEiUAoM",
            "Q3VzdENtcGx0VklQEgoKAmlkGAEgASgFEg0KBWxldmVsGAIgASgFEhEKCXZh",
            "bHVlTGVmdBgDIAEoBRISCgp2YWx1ZVJpZ2h0GAQgASgFIrYBChZDdXN0Q21w",
            "bHRWSVBNYXBBQlZhbHVlEk0KD0N1c3RDbXBsdFZJUE1hcBgBIAMoCzI0LnJh",
            "d2RhdGEuQ3VzdENtcGx0VklQTWFwQUJWYWx1ZS5DdXN0Q21wbHRWSVBNYXBF",
            "bnRyeRpNChRDdXN0Q21wbHRWSVBNYXBFbnRyeRILCgNrZXkYASABKAUSJAoF",
            "dmFsdWUYAiABKAsyFS5yYXdkYXRhLkN1c3RDbXBsdFZJUDoCOAEiiQQKEEN1",
            "c3RDbXBsdFZJUENvbmYSRwoPQ3VzdENtcGx0VklQTWFwGAEgAygLMi4ucmF3",
            "ZGF0YS5DdXN0Q21wbHRWSVBDb25mLkN1c3RDbXBsdFZJUE1hcEVudHJ5EksK",
            "EUN1c3RDbXBsdFZJUE1hcEFCGAIgAygLMjAucmF3ZGF0YS5DdXN0Q21wbHRW",
            "SVBDb25mLkN1c3RDbXBsdFZJUE1hcEFCRW50cnkSVQoWQ3VzdENtcGx0VklQ",
            "TWFwQUJQYXRjaBgDIAMoCzI1LnJhd2RhdGEuQ3VzdENtcGx0VklQQ29uZi5D",
            "dXN0Q21wbHRWSVBNYXBBQlBhdGNoRW50cnkaTQoUQ3VzdENtcGx0VklQTWFw",
            "RW50cnkSCwoDa2V5GAEgASgFEiQKBXZhbHVlGAIgASgLMhUucmF3ZGF0YS5D",
            "dXN0Q21wbHRWSVA6AjgBGlkKFkN1c3RDbXBsdFZJUE1hcEFCRW50cnkSCwoD",
            "a2V5GAEgASgJEi4KBXZhbHVlGAIgASgLMh8ucmF3ZGF0YS5DdXN0Q21wbHRW",
            "SVBNYXBBQlZhbHVlOgI4ARpeChtDdXN0Q21wbHRWSVBNYXBBQlBhdGNoRW50",
            "cnkSCwoDa2V5GAEgASgJEi4KBXZhbHVlGAIgASgLMh8ucmF3ZGF0YS5DdXN0",
            "Q21wbHRWSVBNYXBBQlZhbHVlOgI4AUI9Wi1naXRsYWIuZnVucGx1cy5pby9m",
            "YXQvY29uZi9nZW4vZ29sYW5nL3Jhd2RhdGGqAgtmYXQucmF3ZGF0YWIGcHJv",
            "dG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.CustCmpltVIP), global::fat.rawdata.CustCmpltVIP.Parser, new[]{ "Id", "Level", "ValueLeft", "ValueRight" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.CustCmpltVIPMapABValue), global::fat.rawdata.CustCmpltVIPMapABValue.Parser, new[]{ "CustCmpltVIPMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.CustCmpltVIPConf), global::fat.rawdata.CustCmpltVIPConf.Parser, new[]{ "CustCmpltVIPMap", "CustCmpltVIPMapAB", "CustCmpltVIPMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="CustCmpltVIP",table="CustCmpltVIPMap",table_wrapper="CustCmpltVIPConf",map="true",map_key_type="int32",data="CustCmpltVIPConf")
  /// annotation@ab(table_ab="CustCmpltVIPMapAB",table_ab_patch="CustCmpltVIPMapABPatch",table_ab_value="CustCmpltVIPMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@CustCmpltVIP(id="id")
  /// </summary>
  public sealed partial class CustCmpltVIP : pb::IMessage<CustCmpltVIP>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CustCmpltVIP> _parser = new pb::MessageParser<CustCmpltVIP>(() => new CustCmpltVIP());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CustCmpltVIP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.CustCmpltVIPConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustCmpltVIP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustCmpltVIP(CustCmpltVIP other) : this() {
      id_ = other.id_;
      level_ = other.level_;
      valueLeft_ = other.valueLeft_;
      valueRight_ = other.valueRight_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustCmpltVIP Clone() {
      return new CustCmpltVIP(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 2;
    private int level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "valueLeft" field.</summary>
    public const int ValueLeftFieldNumber = 3;
    private int valueLeft_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ValueLeft {
      get { return valueLeft_; }
      set {
        valueLeft_ = value;
      }
    }

    /// <summary>Field number for the "valueRight" field.</summary>
    public const int ValueRightFieldNumber = 4;
    private int valueRight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ValueRight {
      get { return valueRight_; }
      set {
        valueRight_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CustCmpltVIP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CustCmpltVIP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Level != other.Level) return false;
      if (ValueLeft != other.ValueLeft) return false;
      if (ValueRight != other.ValueRight) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      if (ValueLeft != 0) hash ^= ValueLeft.GetHashCode();
      if (ValueRight != 0) hash ^= ValueRight.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Level != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Level);
      }
      if (ValueLeft != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ValueLeft);
      }
      if (ValueRight != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ValueRight);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Level != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Level);
      }
      if (ValueLeft != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ValueLeft);
      }
      if (ValueRight != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ValueRight);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      if (ValueLeft != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ValueLeft);
      }
      if (ValueRight != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ValueRight);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CustCmpltVIP other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      if (other.ValueLeft != 0) {
        ValueLeft = other.ValueLeft;
      }
      if (other.ValueRight != 0) {
        ValueRight = other.ValueRight;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Level = input.ReadInt32();
            break;
          }
          case 24: {
            ValueLeft = input.ReadInt32();
            break;
          }
          case 32: {
            ValueRight = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Level = input.ReadInt32();
            break;
          }
          case 24: {
            ValueLeft = input.ReadInt32();
            break;
          }
          case 32: {
            ValueRight = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CustCmpltVIPMapABValue : pb::IMessage<CustCmpltVIPMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CustCmpltVIPMapABValue> _parser = new pb::MessageParser<CustCmpltVIPMapABValue>(() => new CustCmpltVIPMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CustCmpltVIPMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.CustCmpltVIPConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustCmpltVIPMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustCmpltVIPMapABValue(CustCmpltVIPMapABValue other) : this() {
      custCmpltVIPMap_ = other.custCmpltVIPMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustCmpltVIPMapABValue Clone() {
      return new CustCmpltVIPMapABValue(this);
    }

    /// <summary>Field number for the "CustCmpltVIPMap" field.</summary>
    public const int CustCmpltVIPMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.CustCmpltVIP>.Codec _map_custCmpltVIPMap_codec
        = new pbc::MapField<int, global::fat.rawdata.CustCmpltVIP>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.CustCmpltVIP.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.CustCmpltVIP> custCmpltVIPMap_ = new pbc::MapField<int, global::fat.rawdata.CustCmpltVIP>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.CustCmpltVIP> CustCmpltVIPMap {
      get { return custCmpltVIPMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CustCmpltVIPMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CustCmpltVIPMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!CustCmpltVIPMap.Equals(other.CustCmpltVIPMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= CustCmpltVIPMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      custCmpltVIPMap_.WriteTo(output, _map_custCmpltVIPMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      custCmpltVIPMap_.WriteTo(ref output, _map_custCmpltVIPMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += custCmpltVIPMap_.CalculateSize(_map_custCmpltVIPMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CustCmpltVIPMapABValue other) {
      if (other == null) {
        return;
      }
      custCmpltVIPMap_.Add(other.custCmpltVIPMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            custCmpltVIPMap_.AddEntriesFrom(input, _map_custCmpltVIPMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            custCmpltVIPMap_.AddEntriesFrom(ref input, _map_custCmpltVIPMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CustCmpltVIPConf : pb::IMessage<CustCmpltVIPConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CustCmpltVIPConf> _parser = new pb::MessageParser<CustCmpltVIPConf>(() => new CustCmpltVIPConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CustCmpltVIPConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.CustCmpltVIPConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustCmpltVIPConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustCmpltVIPConf(CustCmpltVIPConf other) : this() {
      custCmpltVIPMap_ = other.custCmpltVIPMap_.Clone();
      custCmpltVIPMapAB_ = other.custCmpltVIPMapAB_.Clone();
      custCmpltVIPMapABPatch_ = other.custCmpltVIPMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustCmpltVIPConf Clone() {
      return new CustCmpltVIPConf(this);
    }

    /// <summary>Field number for the "CustCmpltVIPMap" field.</summary>
    public const int CustCmpltVIPMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.CustCmpltVIP>.Codec _map_custCmpltVIPMap_codec
        = new pbc::MapField<int, global::fat.rawdata.CustCmpltVIP>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.CustCmpltVIP.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.CustCmpltVIP> custCmpltVIPMap_ = new pbc::MapField<int, global::fat.rawdata.CustCmpltVIP>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.CustCmpltVIP> CustCmpltVIPMap {
      get { return custCmpltVIPMap_; }
    }

    /// <summary>Field number for the "CustCmpltVIPMapAB" field.</summary>
    public const int CustCmpltVIPMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.CustCmpltVIPMapABValue>.Codec _map_custCmpltVIPMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.CustCmpltVIPMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.CustCmpltVIPMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.CustCmpltVIPMapABValue> custCmpltVIPMapAB_ = new pbc::MapField<string, global::fat.rawdata.CustCmpltVIPMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.CustCmpltVIPMapABValue> CustCmpltVIPMapAB {
      get { return custCmpltVIPMapAB_; }
    }

    /// <summary>Field number for the "CustCmpltVIPMapABPatch" field.</summary>
    public const int CustCmpltVIPMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.CustCmpltVIPMapABValue>.Codec _map_custCmpltVIPMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.CustCmpltVIPMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.CustCmpltVIPMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.CustCmpltVIPMapABValue> custCmpltVIPMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.CustCmpltVIPMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.CustCmpltVIPMapABValue> CustCmpltVIPMapABPatch {
      get { return custCmpltVIPMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CustCmpltVIPConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CustCmpltVIPConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!CustCmpltVIPMap.Equals(other.CustCmpltVIPMap)) return false;
      if (!CustCmpltVIPMapAB.Equals(other.CustCmpltVIPMapAB)) return false;
      if (!CustCmpltVIPMapABPatch.Equals(other.CustCmpltVIPMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= CustCmpltVIPMap.GetHashCode();
      hash ^= CustCmpltVIPMapAB.GetHashCode();
      hash ^= CustCmpltVIPMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      custCmpltVIPMap_.WriteTo(output, _map_custCmpltVIPMap_codec);
      custCmpltVIPMapAB_.WriteTo(output, _map_custCmpltVIPMapAB_codec);
      custCmpltVIPMapABPatch_.WriteTo(output, _map_custCmpltVIPMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      custCmpltVIPMap_.WriteTo(ref output, _map_custCmpltVIPMap_codec);
      custCmpltVIPMapAB_.WriteTo(ref output, _map_custCmpltVIPMapAB_codec);
      custCmpltVIPMapABPatch_.WriteTo(ref output, _map_custCmpltVIPMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += custCmpltVIPMap_.CalculateSize(_map_custCmpltVIPMap_codec);
      size += custCmpltVIPMapAB_.CalculateSize(_map_custCmpltVIPMapAB_codec);
      size += custCmpltVIPMapABPatch_.CalculateSize(_map_custCmpltVIPMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CustCmpltVIPConf other) {
      if (other == null) {
        return;
      }
      custCmpltVIPMap_.Add(other.custCmpltVIPMap_);
      custCmpltVIPMapAB_.Add(other.custCmpltVIPMapAB_);
      custCmpltVIPMapABPatch_.Add(other.custCmpltVIPMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            custCmpltVIPMap_.AddEntriesFrom(input, _map_custCmpltVIPMap_codec);
            break;
          }
          case 18: {
            custCmpltVIPMapAB_.AddEntriesFrom(input, _map_custCmpltVIPMapAB_codec);
            break;
          }
          case 26: {
            custCmpltVIPMapABPatch_.AddEntriesFrom(input, _map_custCmpltVIPMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            custCmpltVIPMap_.AddEntriesFrom(ref input, _map_custCmpltVIPMap_codec);
            break;
          }
          case 18: {
            custCmpltVIPMapAB_.AddEntriesFrom(ref input, _map_custCmpltVIPMapAB_codec);
            break;
          }
          case 26: {
            custCmpltVIPMapABPatch_.AddEntriesFrom(ref input, _map_custCmpltVIPMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
