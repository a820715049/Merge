// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/OrderCategoryConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/OrderCategoryConf.proto</summary>
  public static partial class OrderCategoryConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/OrderCategoryConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static OrderCategoryConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch9yYXdkYXRhL09yZGVyQ2F0ZWdvcnlDb25mLnByb3RvEgdyYXdkYXRhIrcC",
            "Cg1PcmRlckNhdGVnb3J5EgoKAmlkGAEgASgFEhQKDGFjdGl2ZUl0ZW1JZBgC",
            "IAMoBRITCgthY3RpdmVMZXZlbBgDIAEoBRIVCg1hY3RpdmVPcmRlcklkGAQg",
            "AygFEg8KB2Jhc2ljV3QYDCABKAUSDwoHYm9hcmRJZBgFIAEoBRITCgtjYXJl",
            "R3JhcGhJZBgKIAMoBRITCgtpc0F1dG9HcmFwaBgLIAEoCBIWCg5pc0lnbm9y",
            "ZUJ5RWFzeRgPIAEoCBIVCg1vcHBvc2VHcmFwaElkGA0gAygFEhUKDW9yaWdp",
            "bkdyYXBoSWQYDiABKAUSFgoOc2h1dGRvd25JdGVtSWQYBiADKAUSFQoNc2h1",
            "dGRvd25MZXZlbBgHIAEoBRIXCg9zaHV0ZG93bk9yZGVySWQYCCADKAUivAEK",
            "F09yZGVyQ2F0ZWdvcnlNYXBBQlZhbHVlElAKEE9yZGVyQ2F0ZWdvcnlNYXAY",
            "ASADKAsyNi5yYXdkYXRhLk9yZGVyQ2F0ZWdvcnlNYXBBQlZhbHVlLk9yZGVy",
            "Q2F0ZWdvcnlNYXBFbnRyeRpPChVPcmRlckNhdGVnb3J5TWFwRW50cnkSCwoD",
            "a2V5GAEgASgFEiUKBXZhbHVlGAIgASgLMhYucmF3ZGF0YS5PcmRlckNhdGVn",
            "b3J5OgI4ASKZBAoRT3JkZXJDYXRlZ29yeUNvbmYSSgoQT3JkZXJDYXRlZ29y",
            "eU1hcBgBIAMoCzIwLnJhd2RhdGEuT3JkZXJDYXRlZ29yeUNvbmYuT3JkZXJD",
            "YXRlZ29yeU1hcEVudHJ5Ek4KEk9yZGVyQ2F0ZWdvcnlNYXBBQhgCIAMoCzIy",
            "LnJhd2RhdGEuT3JkZXJDYXRlZ29yeUNvbmYuT3JkZXJDYXRlZ29yeU1hcEFC",
            "RW50cnkSWAoXT3JkZXJDYXRlZ29yeU1hcEFCUGF0Y2gYAyADKAsyNy5yYXdk",
            "YXRhLk9yZGVyQ2F0ZWdvcnlDb25mLk9yZGVyQ2F0ZWdvcnlNYXBBQlBhdGNo",
            "RW50cnkaTwoVT3JkZXJDYXRlZ29yeU1hcEVudHJ5EgsKA2tleRgBIAEoBRIl",
            "CgV2YWx1ZRgCIAEoCzIWLnJhd2RhdGEuT3JkZXJDYXRlZ29yeToCOAEaWwoX",
            "T3JkZXJDYXRlZ29yeU1hcEFCRW50cnkSCwoDa2V5GAEgASgJEi8KBXZhbHVl",
            "GAIgASgLMiAucmF3ZGF0YS5PcmRlckNhdGVnb3J5TWFwQUJWYWx1ZToCOAEa",
            "YAocT3JkZXJDYXRlZ29yeU1hcEFCUGF0Y2hFbnRyeRILCgNrZXkYASABKAkS",
            "LwoFdmFsdWUYAiABKAsyIC5yYXdkYXRhLk9yZGVyQ2F0ZWdvcnlNYXBBQlZh",
            "bHVlOgI4AUI9Wi1naXRsYWIuZnVucGx1cy5pby9mYXQvY29uZi9nZW4vZ29s",
            "YW5nL3Jhd2RhdGGqAgtmYXQucmF3ZGF0YWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.OrderCategory), global::fat.rawdata.OrderCategory.Parser, new[]{ "Id", "ActiveItemId", "ActiveLevel", "ActiveOrderId", "BasicWt", "BoardId", "CareGraphId", "IsAutoGraph", "IsIgnoreByEasy", "OpposeGraphId", "OriginGraphId", "ShutdownItemId", "ShutdownLevel", "ShutdownOrderId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.OrderCategoryMapABValue), global::fat.rawdata.OrderCategoryMapABValue.Parser, new[]{ "OrderCategoryMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.OrderCategoryConf), global::fat.rawdata.OrderCategoryConf.Parser, new[]{ "OrderCategoryMap", "OrderCategoryMapAB", "OrderCategoryMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="OrderCategory",table="OrderCategoryMap",table_wrapper="OrderCategoryConf",map="true",map_key_type="int32",data="OrderCategoryConf")
  /// annotation@ab(table_ab="OrderCategoryMapAB",table_ab_patch="OrderCategoryMapABPatch",table_ab_value="OrderCategoryMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@OrderCategory(id="id")
  /// </summary>
  public sealed partial class OrderCategory : pb::IMessage<OrderCategory>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OrderCategory> _parser = new pb::MessageParser<OrderCategory>(() => new OrderCategory());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OrderCategory> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.OrderCategoryConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderCategory() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderCategory(OrderCategory other) : this() {
      id_ = other.id_;
      activeItemId_ = other.activeItemId_.Clone();
      activeLevel_ = other.activeLevel_;
      activeOrderId_ = other.activeOrderId_.Clone();
      basicWt_ = other.basicWt_;
      boardId_ = other.boardId_;
      careGraphId_ = other.careGraphId_.Clone();
      isAutoGraph_ = other.isAutoGraph_;
      isIgnoreByEasy_ = other.isIgnoreByEasy_;
      opposeGraphId_ = other.opposeGraphId_.Clone();
      originGraphId_ = other.originGraphId_;
      shutdownItemId_ = other.shutdownItemId_.Clone();
      shutdownLevel_ = other.shutdownLevel_;
      shutdownOrderId_ = other.shutdownOrderId_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderCategory Clone() {
      return new OrderCategory(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 备选合成链ID
    /// （MergeItemCategory.id）
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "activeItemId" field.</summary>
    public const int ActiveItemIdFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_activeItemId_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> activeItemId_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 激活棋子ID
    /// （且）
    /// （ObjBasic.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> ActiveItemId {
      get { return activeItemId_; }
    }

    /// <summary>Field number for the "activeLevel" field.</summary>
    public const int ActiveLevelFieldNumber = 3;
    private int activeLevel_;
    /// <summary>
    /// 激活等级
    /// （先激活，后关闭）
    /// （且）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ActiveLevel {
      get { return activeLevel_; }
      set {
        activeLevel_ = value;
      }
    }

    /// <summary>Field number for the "activeOrderId" field.</summary>
    public const int ActiveOrderIdFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_activeOrderId_codec
        = pb::FieldCodec.ForInt32(34);
    private readonly pbc::RepeatedField<int> activeOrderId_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 激活订单ID
    /// （且）
    /// （OrderCommon.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> ActiveOrderId {
      get { return activeOrderId_; }
    }

    /// <summary>Field number for the "basicWt" field.</summary>
    public const int BasicWtFieldNumber = 12;
    private int basicWt_;
    /// <summary>
    /// 基础权重
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BasicWt {
      get { return basicWt_; }
      set {
        basicWt_ = value;
      }
    }

    /// <summary>Field number for the "boardId" field.</summary>
    public const int BoardIdFieldNumber = 5;
    private int boardId_;
    /// <summary>
    /// 生效的棋盘ID
    /// （MergeBoard.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BoardId {
      get { return boardId_; }
      set {
        boardId_ = value;
      }
    }

    /// <summary>Field number for the "careGraphId" field.</summary>
    public const int CareGraphIdFieldNumber = 10;
    private static readonly pb::FieldCodec<int> _repeated_careGraphId_codec
        = pb::FieldCodec.ForInt32(82);
    private readonly pbc::RepeatedField<int> careGraphId_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 前置链条ID
    /// 计算payDiff时额外关注的链条ID
    /// 也用于判断链条加减分
    /// （MergeItemCategory.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> CareGraphId {
      get { return careGraphId_; }
    }

    /// <summary>Field number for the "isAutoGraph" field.</summary>
    public const int IsAutoGraphFieldNumber = 11;
    private bool isAutoGraph_;
    /// <summary>
    /// 是否是自动生成器产出的链条
    /// （选择链条时权重会被降低）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsAutoGraph {
      get { return isAutoGraph_; }
      set {
        isAutoGraph_ = value;
      }
    }

    /// <summary>Field number for the "isIgnoreByEasy" field.</summary>
    public const int IsIgnoreByEasyFieldNumber = 15;
    private bool isIgnoreByEasy_;
    /// <summary>
    /// 是否在使用easyDiff时
    /// 忽略这个链条
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsIgnoreByEasy {
      get { return isIgnoreByEasy_; }
      set {
        isIgnoreByEasy_ = value;
      }
    }

    /// <summary>Field number for the "opposeGraphId" field.</summary>
    public const int OpposeGraphIdFieldNumber = 13;
    private static readonly pb::FieldCodec<int> _repeated_opposeGraphId_codec
        = pb::FieldCodec.ForInt32(106);
    private readonly pbc::RepeatedField<int> opposeGraphId_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 对立链条ID
    /// 用于判断链条加减分
    /// （MergeItemCategory.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> OpposeGraphId {
      get { return opposeGraphId_; }
    }

    /// <summary>Field number for the "originGraphId" field.</summary>
    public const int OriginGraphIdFieldNumber = 14;
    private int originGraphId_;
    /// <summary>
    /// 源头链条ID
    /// 用于判断是否同源
    /// （MergeItemCategory.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int OriginGraphId {
      get { return originGraphId_; }
      set {
        originGraphId_ = value;
      }
    }

    /// <summary>Field number for the "shutdownItemId" field.</summary>
    public const int ShutdownItemIdFieldNumber = 6;
    private static readonly pb::FieldCodec<int> _repeated_shutdownItemId_codec
        = pb::FieldCodec.ForInt32(50);
    private readonly pbc::RepeatedField<int> shutdownItemId_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 关闭棋子ID
    /// （或）
    /// （ObjBasic.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> ShutdownItemId {
      get { return shutdownItemId_; }
    }

    /// <summary>Field number for the "shutdownLevel" field.</summary>
    public const int ShutdownLevelFieldNumber = 7;
    private int shutdownLevel_;
    /// <summary>
    /// 关闭等级
    /// （先激活，后关闭）
    /// （或）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ShutdownLevel {
      get { return shutdownLevel_; }
      set {
        shutdownLevel_ = value;
      }
    }

    /// <summary>Field number for the "shutdownOrderId" field.</summary>
    public const int ShutdownOrderIdFieldNumber = 8;
    private static readonly pb::FieldCodec<int> _repeated_shutdownOrderId_codec
        = pb::FieldCodec.ForInt32(66);
    private readonly pbc::RepeatedField<int> shutdownOrderId_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 关闭订单ID
    /// （或）
    /// （OrderCommon.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> ShutdownOrderId {
      get { return shutdownOrderId_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OrderCategory);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OrderCategory other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!activeItemId_.Equals(other.activeItemId_)) return false;
      if (ActiveLevel != other.ActiveLevel) return false;
      if(!activeOrderId_.Equals(other.activeOrderId_)) return false;
      if (BasicWt != other.BasicWt) return false;
      if (BoardId != other.BoardId) return false;
      if(!careGraphId_.Equals(other.careGraphId_)) return false;
      if (IsAutoGraph != other.IsAutoGraph) return false;
      if (IsIgnoreByEasy != other.IsIgnoreByEasy) return false;
      if(!opposeGraphId_.Equals(other.opposeGraphId_)) return false;
      if (OriginGraphId != other.OriginGraphId) return false;
      if(!shutdownItemId_.Equals(other.shutdownItemId_)) return false;
      if (ShutdownLevel != other.ShutdownLevel) return false;
      if(!shutdownOrderId_.Equals(other.shutdownOrderId_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      hash ^= activeItemId_.GetHashCode();
      if (ActiveLevel != 0) hash ^= ActiveLevel.GetHashCode();
      hash ^= activeOrderId_.GetHashCode();
      if (BasicWt != 0) hash ^= BasicWt.GetHashCode();
      if (BoardId != 0) hash ^= BoardId.GetHashCode();
      hash ^= careGraphId_.GetHashCode();
      if (IsAutoGraph != false) hash ^= IsAutoGraph.GetHashCode();
      if (IsIgnoreByEasy != false) hash ^= IsIgnoreByEasy.GetHashCode();
      hash ^= opposeGraphId_.GetHashCode();
      if (OriginGraphId != 0) hash ^= OriginGraphId.GetHashCode();
      hash ^= shutdownItemId_.GetHashCode();
      if (ShutdownLevel != 0) hash ^= ShutdownLevel.GetHashCode();
      hash ^= shutdownOrderId_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      activeItemId_.WriteTo(output, _repeated_activeItemId_codec);
      if (ActiveLevel != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ActiveLevel);
      }
      activeOrderId_.WriteTo(output, _repeated_activeOrderId_codec);
      if (BoardId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(BoardId);
      }
      shutdownItemId_.WriteTo(output, _repeated_shutdownItemId_codec);
      if (ShutdownLevel != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(ShutdownLevel);
      }
      shutdownOrderId_.WriteTo(output, _repeated_shutdownOrderId_codec);
      careGraphId_.WriteTo(output, _repeated_careGraphId_codec);
      if (IsAutoGraph != false) {
        output.WriteRawTag(88);
        output.WriteBool(IsAutoGraph);
      }
      if (BasicWt != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(BasicWt);
      }
      opposeGraphId_.WriteTo(output, _repeated_opposeGraphId_codec);
      if (OriginGraphId != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(OriginGraphId);
      }
      if (IsIgnoreByEasy != false) {
        output.WriteRawTag(120);
        output.WriteBool(IsIgnoreByEasy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      activeItemId_.WriteTo(ref output, _repeated_activeItemId_codec);
      if (ActiveLevel != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ActiveLevel);
      }
      activeOrderId_.WriteTo(ref output, _repeated_activeOrderId_codec);
      if (BoardId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(BoardId);
      }
      shutdownItemId_.WriteTo(ref output, _repeated_shutdownItemId_codec);
      if (ShutdownLevel != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(ShutdownLevel);
      }
      shutdownOrderId_.WriteTo(ref output, _repeated_shutdownOrderId_codec);
      careGraphId_.WriteTo(ref output, _repeated_careGraphId_codec);
      if (IsAutoGraph != false) {
        output.WriteRawTag(88);
        output.WriteBool(IsAutoGraph);
      }
      if (BasicWt != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(BasicWt);
      }
      opposeGraphId_.WriteTo(ref output, _repeated_opposeGraphId_codec);
      if (OriginGraphId != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(OriginGraphId);
      }
      if (IsIgnoreByEasy != false) {
        output.WriteRawTag(120);
        output.WriteBool(IsIgnoreByEasy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      size += activeItemId_.CalculateSize(_repeated_activeItemId_codec);
      if (ActiveLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ActiveLevel);
      }
      size += activeOrderId_.CalculateSize(_repeated_activeOrderId_codec);
      if (BasicWt != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BasicWt);
      }
      if (BoardId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BoardId);
      }
      size += careGraphId_.CalculateSize(_repeated_careGraphId_codec);
      if (IsAutoGraph != false) {
        size += 1 + 1;
      }
      if (IsIgnoreByEasy != false) {
        size += 1 + 1;
      }
      size += opposeGraphId_.CalculateSize(_repeated_opposeGraphId_codec);
      if (OriginGraphId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OriginGraphId);
      }
      size += shutdownItemId_.CalculateSize(_repeated_shutdownItemId_codec);
      if (ShutdownLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ShutdownLevel);
      }
      size += shutdownOrderId_.CalculateSize(_repeated_shutdownOrderId_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OrderCategory other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      activeItemId_.Add(other.activeItemId_);
      if (other.ActiveLevel != 0) {
        ActiveLevel = other.ActiveLevel;
      }
      activeOrderId_.Add(other.activeOrderId_);
      if (other.BasicWt != 0) {
        BasicWt = other.BasicWt;
      }
      if (other.BoardId != 0) {
        BoardId = other.BoardId;
      }
      careGraphId_.Add(other.careGraphId_);
      if (other.IsAutoGraph != false) {
        IsAutoGraph = other.IsAutoGraph;
      }
      if (other.IsIgnoreByEasy != false) {
        IsIgnoreByEasy = other.IsIgnoreByEasy;
      }
      opposeGraphId_.Add(other.opposeGraphId_);
      if (other.OriginGraphId != 0) {
        OriginGraphId = other.OriginGraphId;
      }
      shutdownItemId_.Add(other.shutdownItemId_);
      if (other.ShutdownLevel != 0) {
        ShutdownLevel = other.ShutdownLevel;
      }
      shutdownOrderId_.Add(other.shutdownOrderId_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            activeItemId_.AddEntriesFrom(input, _repeated_activeItemId_codec);
            break;
          }
          case 24: {
            ActiveLevel = input.ReadInt32();
            break;
          }
          case 34:
          case 32: {
            activeOrderId_.AddEntriesFrom(input, _repeated_activeOrderId_codec);
            break;
          }
          case 40: {
            BoardId = input.ReadInt32();
            break;
          }
          case 50:
          case 48: {
            shutdownItemId_.AddEntriesFrom(input, _repeated_shutdownItemId_codec);
            break;
          }
          case 56: {
            ShutdownLevel = input.ReadInt32();
            break;
          }
          case 66:
          case 64: {
            shutdownOrderId_.AddEntriesFrom(input, _repeated_shutdownOrderId_codec);
            break;
          }
          case 82:
          case 80: {
            careGraphId_.AddEntriesFrom(input, _repeated_careGraphId_codec);
            break;
          }
          case 88: {
            IsAutoGraph = input.ReadBool();
            break;
          }
          case 96: {
            BasicWt = input.ReadInt32();
            break;
          }
          case 106:
          case 104: {
            opposeGraphId_.AddEntriesFrom(input, _repeated_opposeGraphId_codec);
            break;
          }
          case 112: {
            OriginGraphId = input.ReadInt32();
            break;
          }
          case 120: {
            IsIgnoreByEasy = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            activeItemId_.AddEntriesFrom(ref input, _repeated_activeItemId_codec);
            break;
          }
          case 24: {
            ActiveLevel = input.ReadInt32();
            break;
          }
          case 34:
          case 32: {
            activeOrderId_.AddEntriesFrom(ref input, _repeated_activeOrderId_codec);
            break;
          }
          case 40: {
            BoardId = input.ReadInt32();
            break;
          }
          case 50:
          case 48: {
            shutdownItemId_.AddEntriesFrom(ref input, _repeated_shutdownItemId_codec);
            break;
          }
          case 56: {
            ShutdownLevel = input.ReadInt32();
            break;
          }
          case 66:
          case 64: {
            shutdownOrderId_.AddEntriesFrom(ref input, _repeated_shutdownOrderId_codec);
            break;
          }
          case 82:
          case 80: {
            careGraphId_.AddEntriesFrom(ref input, _repeated_careGraphId_codec);
            break;
          }
          case 88: {
            IsAutoGraph = input.ReadBool();
            break;
          }
          case 96: {
            BasicWt = input.ReadInt32();
            break;
          }
          case 106:
          case 104: {
            opposeGraphId_.AddEntriesFrom(ref input, _repeated_opposeGraphId_codec);
            break;
          }
          case 112: {
            OriginGraphId = input.ReadInt32();
            break;
          }
          case 120: {
            IsIgnoreByEasy = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class OrderCategoryMapABValue : pb::IMessage<OrderCategoryMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OrderCategoryMapABValue> _parser = new pb::MessageParser<OrderCategoryMapABValue>(() => new OrderCategoryMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OrderCategoryMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.OrderCategoryConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderCategoryMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderCategoryMapABValue(OrderCategoryMapABValue other) : this() {
      orderCategoryMap_ = other.orderCategoryMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderCategoryMapABValue Clone() {
      return new OrderCategoryMapABValue(this);
    }

    /// <summary>Field number for the "OrderCategoryMap" field.</summary>
    public const int OrderCategoryMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.OrderCategory>.Codec _map_orderCategoryMap_codec
        = new pbc::MapField<int, global::fat.rawdata.OrderCategory>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.OrderCategory.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.OrderCategory> orderCategoryMap_ = new pbc::MapField<int, global::fat.rawdata.OrderCategory>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.OrderCategory> OrderCategoryMap {
      get { return orderCategoryMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OrderCategoryMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OrderCategoryMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!OrderCategoryMap.Equals(other.OrderCategoryMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= OrderCategoryMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      orderCategoryMap_.WriteTo(output, _map_orderCategoryMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      orderCategoryMap_.WriteTo(ref output, _map_orderCategoryMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += orderCategoryMap_.CalculateSize(_map_orderCategoryMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OrderCategoryMapABValue other) {
      if (other == null) {
        return;
      }
      orderCategoryMap_.Add(other.orderCategoryMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            orderCategoryMap_.AddEntriesFrom(input, _map_orderCategoryMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            orderCategoryMap_.AddEntriesFrom(ref input, _map_orderCategoryMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class OrderCategoryConf : pb::IMessage<OrderCategoryConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OrderCategoryConf> _parser = new pb::MessageParser<OrderCategoryConf>(() => new OrderCategoryConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OrderCategoryConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.OrderCategoryConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderCategoryConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderCategoryConf(OrderCategoryConf other) : this() {
      orderCategoryMap_ = other.orderCategoryMap_.Clone();
      orderCategoryMapAB_ = other.orderCategoryMapAB_.Clone();
      orderCategoryMapABPatch_ = other.orderCategoryMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderCategoryConf Clone() {
      return new OrderCategoryConf(this);
    }

    /// <summary>Field number for the "OrderCategoryMap" field.</summary>
    public const int OrderCategoryMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.OrderCategory>.Codec _map_orderCategoryMap_codec
        = new pbc::MapField<int, global::fat.rawdata.OrderCategory>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.OrderCategory.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.OrderCategory> orderCategoryMap_ = new pbc::MapField<int, global::fat.rawdata.OrderCategory>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.OrderCategory> OrderCategoryMap {
      get { return orderCategoryMap_; }
    }

    /// <summary>Field number for the "OrderCategoryMapAB" field.</summary>
    public const int OrderCategoryMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.OrderCategoryMapABValue>.Codec _map_orderCategoryMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.OrderCategoryMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.OrderCategoryMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.OrderCategoryMapABValue> orderCategoryMapAB_ = new pbc::MapField<string, global::fat.rawdata.OrderCategoryMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.OrderCategoryMapABValue> OrderCategoryMapAB {
      get { return orderCategoryMapAB_; }
    }

    /// <summary>Field number for the "OrderCategoryMapABPatch" field.</summary>
    public const int OrderCategoryMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.OrderCategoryMapABValue>.Codec _map_orderCategoryMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.OrderCategoryMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.OrderCategoryMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.OrderCategoryMapABValue> orderCategoryMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.OrderCategoryMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.OrderCategoryMapABValue> OrderCategoryMapABPatch {
      get { return orderCategoryMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OrderCategoryConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OrderCategoryConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!OrderCategoryMap.Equals(other.OrderCategoryMap)) return false;
      if (!OrderCategoryMapAB.Equals(other.OrderCategoryMapAB)) return false;
      if (!OrderCategoryMapABPatch.Equals(other.OrderCategoryMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= OrderCategoryMap.GetHashCode();
      hash ^= OrderCategoryMapAB.GetHashCode();
      hash ^= OrderCategoryMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      orderCategoryMap_.WriteTo(output, _map_orderCategoryMap_codec);
      orderCategoryMapAB_.WriteTo(output, _map_orderCategoryMapAB_codec);
      orderCategoryMapABPatch_.WriteTo(output, _map_orderCategoryMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      orderCategoryMap_.WriteTo(ref output, _map_orderCategoryMap_codec);
      orderCategoryMapAB_.WriteTo(ref output, _map_orderCategoryMapAB_codec);
      orderCategoryMapABPatch_.WriteTo(ref output, _map_orderCategoryMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += orderCategoryMap_.CalculateSize(_map_orderCategoryMap_codec);
      size += orderCategoryMapAB_.CalculateSize(_map_orderCategoryMapAB_codec);
      size += orderCategoryMapABPatch_.CalculateSize(_map_orderCategoryMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OrderCategoryConf other) {
      if (other == null) {
        return;
      }
      orderCategoryMap_.Add(other.orderCategoryMap_);
      orderCategoryMapAB_.Add(other.orderCategoryMapAB_);
      orderCategoryMapABPatch_.Add(other.orderCategoryMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            orderCategoryMap_.AddEntriesFrom(input, _map_orderCategoryMap_codec);
            break;
          }
          case 18: {
            orderCategoryMapAB_.AddEntriesFrom(input, _map_orderCategoryMapAB_codec);
            break;
          }
          case 26: {
            orderCategoryMapABPatch_.AddEntriesFrom(input, _map_orderCategoryMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            orderCategoryMap_.AddEntriesFrom(ref input, _map_orderCategoryMap_codec);
            break;
          }
          case 18: {
            orderCategoryMapAB_.AddEntriesFrom(ref input, _map_orderCategoryMapAB_codec);
            break;
          }
          case 26: {
            orderCategoryMapABPatch_.AddEntriesFrom(ref input, _map_orderCategoryMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
