// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventSurveyConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventSurveyConf.proto</summary>
  public static partial class EventSurveyConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventSurveyConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventSurveyConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch1yYXdkYXRhL0V2ZW50U3VydmV5Q29uZi5wcm90bxIHcmF3ZGF0YSJgCgtF",
            "dmVudFN1cnZleRIKCgJpZBgBIAEoBRISCgpldmVudFRoZW1lGAIgASgFEgwK",
            "BGhhc2gYAyABKAkSDgoGcmV3YXJkGAQgASgJEhMKC3Jld2FyZFRoZW1lGAUg",
            "ASgFIrABChVFdmVudFN1cnZleU1hcEFCVmFsdWUSSgoORXZlbnRTdXJ2ZXlN",
            "YXAYASADKAsyMi5yYXdkYXRhLkV2ZW50U3VydmV5TWFwQUJWYWx1ZS5FdmVu",
            "dFN1cnZleU1hcEVudHJ5GksKE0V2ZW50U3VydmV5TWFwRW50cnkSCwoDa2V5",
            "GAEgASgFEiMKBXZhbHVlGAIgASgLMhQucmF3ZGF0YS5FdmVudFN1cnZleToC",
            "OAEi+QMKD0V2ZW50U3VydmV5Q29uZhJECg5FdmVudFN1cnZleU1hcBgBIAMo",
            "CzIsLnJhd2RhdGEuRXZlbnRTdXJ2ZXlDb25mLkV2ZW50U3VydmV5TWFwRW50",
            "cnkSSAoQRXZlbnRTdXJ2ZXlNYXBBQhgCIAMoCzIuLnJhd2RhdGEuRXZlbnRT",
            "dXJ2ZXlDb25mLkV2ZW50U3VydmV5TWFwQUJFbnRyeRJSChVFdmVudFN1cnZl",
            "eU1hcEFCUGF0Y2gYAyADKAsyMy5yYXdkYXRhLkV2ZW50U3VydmV5Q29uZi5F",
            "dmVudFN1cnZleU1hcEFCUGF0Y2hFbnRyeRpLChNFdmVudFN1cnZleU1hcEVu",
            "dHJ5EgsKA2tleRgBIAEoBRIjCgV2YWx1ZRgCIAEoCzIULnJhd2RhdGEuRXZl",
            "bnRTdXJ2ZXk6AjgBGlcKFUV2ZW50U3VydmV5TWFwQUJFbnRyeRILCgNrZXkY",
            "ASABKAkSLQoFdmFsdWUYAiABKAsyHi5yYXdkYXRhLkV2ZW50U3VydmV5TWFw",
            "QUJWYWx1ZToCOAEaXAoaRXZlbnRTdXJ2ZXlNYXBBQlBhdGNoRW50cnkSCwoD",
            "a2V5GAEgASgJEi0KBXZhbHVlGAIgASgLMh4ucmF3ZGF0YS5FdmVudFN1cnZl",
            "eU1hcEFCVmFsdWU6AjgBQj1aLWdpdGxhYi5mdW5wbHVzLmlvL2ZhdC9jb25m",
            "L2dlbi9nb2xhbmcvcmF3ZGF0YaoCC2ZhdC5yYXdkYXRhYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventSurvey), global::fat.rawdata.EventSurvey.Parser, new[]{ "Id", "EventTheme", "Hash", "Reward", "RewardTheme" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventSurveyMapABValue), global::fat.rawdata.EventSurveyMapABValue.Parser, new[]{ "EventSurveyMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventSurveyConf), global::fat.rawdata.EventSurveyConf.Parser, new[]{ "EventSurveyMap", "EventSurveyMapAB", "EventSurveyMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventSurvey",table="EventSurveyMap",table_wrapper="EventSurveyConf",map="true",map_key_type="int32",data="EventSurveyConf")
  /// annotation@ab(table_ab="EventSurveyMapAB",table_ab_patch="EventSurveyMapABPatch",table_ab_value="EventSurveyMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventSurvey(id="id")
  /// </summary>
  public sealed partial class EventSurvey : pb::IMessage<EventSurvey>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventSurvey> _parser = new pb::MessageParser<EventSurvey>(() => new EventSurvey());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventSurvey> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventSurveyConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventSurvey() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventSurvey(EventSurvey other) : this() {
      id_ = other.id_;
      eventTheme_ = other.eventTheme_;
      hash_ = other.hash_;
      reward_ = other.reward_;
      rewardTheme_ = other.rewardTheme_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventSurvey Clone() {
      return new EventSurvey(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 问卷模板ID
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "eventTheme" field.</summary>
    public const int EventThemeFieldNumber = 2;
    private int eventTheme_;
    /// <summary>
    /// 问卷主弹板
    /// （EventTheme.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EventTheme {
      get { return eventTheme_; }
      set {
        eventTheme_ = value;
      }
    }

    /// <summary>Field number for the "hash" field.</summary>
    public const int HashFieldNumber = 3;
    private string hash_ = "";
    /// <summary>
    /// 问卷内容
    /// （问卷SDK中的key）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Hash {
      get { return hash_; }
      set {
        hash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "reward" field.</summary>
    public const int RewardFieldNumber = 4;
    private string reward_ = "";
    /// <summary>
    /// 完成问卷的奖励
    /// （只能配置一种奖励）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Reward {
      get { return reward_; }
      set {
        reward_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "rewardTheme" field.</summary>
    public const int RewardThemeFieldNumber = 5;
    private int rewardTheme_;
    /// <summary>
    /// 问卷奖励弹板
    /// （EventTheme.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RewardTheme {
      get { return rewardTheme_; }
      set {
        rewardTheme_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventSurvey);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventSurvey other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (EventTheme != other.EventTheme) return false;
      if (Hash != other.Hash) return false;
      if (Reward != other.Reward) return false;
      if (RewardTheme != other.RewardTheme) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (EventTheme != 0) hash ^= EventTheme.GetHashCode();
      if (Hash.Length != 0) hash ^= Hash.GetHashCode();
      if (Reward.Length != 0) hash ^= Reward.GetHashCode();
      if (RewardTheme != 0) hash ^= RewardTheme.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (EventTheme != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(EventTheme);
      }
      if (Hash.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Hash);
      }
      if (Reward.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Reward);
      }
      if (RewardTheme != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(RewardTheme);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (EventTheme != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(EventTheme);
      }
      if (Hash.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Hash);
      }
      if (Reward.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Reward);
      }
      if (RewardTheme != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(RewardTheme);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (EventTheme != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EventTheme);
      }
      if (Hash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Hash);
      }
      if (Reward.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Reward);
      }
      if (RewardTheme != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RewardTheme);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventSurvey other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.EventTheme != 0) {
        EventTheme = other.EventTheme;
      }
      if (other.Hash.Length != 0) {
        Hash = other.Hash;
      }
      if (other.Reward.Length != 0) {
        Reward = other.Reward;
      }
      if (other.RewardTheme != 0) {
        RewardTheme = other.RewardTheme;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            EventTheme = input.ReadInt32();
            break;
          }
          case 26: {
            Hash = input.ReadString();
            break;
          }
          case 34: {
            Reward = input.ReadString();
            break;
          }
          case 40: {
            RewardTheme = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            EventTheme = input.ReadInt32();
            break;
          }
          case 26: {
            Hash = input.ReadString();
            break;
          }
          case 34: {
            Reward = input.ReadString();
            break;
          }
          case 40: {
            RewardTheme = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventSurveyMapABValue : pb::IMessage<EventSurveyMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventSurveyMapABValue> _parser = new pb::MessageParser<EventSurveyMapABValue>(() => new EventSurveyMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventSurveyMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventSurveyConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventSurveyMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventSurveyMapABValue(EventSurveyMapABValue other) : this() {
      eventSurveyMap_ = other.eventSurveyMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventSurveyMapABValue Clone() {
      return new EventSurveyMapABValue(this);
    }

    /// <summary>Field number for the "EventSurveyMap" field.</summary>
    public const int EventSurveyMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventSurvey>.Codec _map_eventSurveyMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventSurvey>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventSurvey.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventSurvey> eventSurveyMap_ = new pbc::MapField<int, global::fat.rawdata.EventSurvey>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventSurvey> EventSurveyMap {
      get { return eventSurveyMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventSurveyMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventSurveyMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventSurveyMap.Equals(other.EventSurveyMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventSurveyMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventSurveyMap_.WriteTo(output, _map_eventSurveyMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventSurveyMap_.WriteTo(ref output, _map_eventSurveyMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventSurveyMap_.CalculateSize(_map_eventSurveyMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventSurveyMapABValue other) {
      if (other == null) {
        return;
      }
      eventSurveyMap_.Add(other.eventSurveyMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventSurveyMap_.AddEntriesFrom(input, _map_eventSurveyMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventSurveyMap_.AddEntriesFrom(ref input, _map_eventSurveyMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventSurveyConf : pb::IMessage<EventSurveyConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventSurveyConf> _parser = new pb::MessageParser<EventSurveyConf>(() => new EventSurveyConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventSurveyConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventSurveyConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventSurveyConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventSurveyConf(EventSurveyConf other) : this() {
      eventSurveyMap_ = other.eventSurveyMap_.Clone();
      eventSurveyMapAB_ = other.eventSurveyMapAB_.Clone();
      eventSurveyMapABPatch_ = other.eventSurveyMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventSurveyConf Clone() {
      return new EventSurveyConf(this);
    }

    /// <summary>Field number for the "EventSurveyMap" field.</summary>
    public const int EventSurveyMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventSurvey>.Codec _map_eventSurveyMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventSurvey>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventSurvey.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventSurvey> eventSurveyMap_ = new pbc::MapField<int, global::fat.rawdata.EventSurvey>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventSurvey> EventSurveyMap {
      get { return eventSurveyMap_; }
    }

    /// <summary>Field number for the "EventSurveyMapAB" field.</summary>
    public const int EventSurveyMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventSurveyMapABValue>.Codec _map_eventSurveyMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventSurveyMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventSurveyMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventSurveyMapABValue> eventSurveyMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventSurveyMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventSurveyMapABValue> EventSurveyMapAB {
      get { return eventSurveyMapAB_; }
    }

    /// <summary>Field number for the "EventSurveyMapABPatch" field.</summary>
    public const int EventSurveyMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventSurveyMapABValue>.Codec _map_eventSurveyMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventSurveyMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventSurveyMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventSurveyMapABValue> eventSurveyMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventSurveyMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventSurveyMapABValue> EventSurveyMapABPatch {
      get { return eventSurveyMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventSurveyConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventSurveyConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventSurveyMap.Equals(other.EventSurveyMap)) return false;
      if (!EventSurveyMapAB.Equals(other.EventSurveyMapAB)) return false;
      if (!EventSurveyMapABPatch.Equals(other.EventSurveyMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventSurveyMap.GetHashCode();
      hash ^= EventSurveyMapAB.GetHashCode();
      hash ^= EventSurveyMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventSurveyMap_.WriteTo(output, _map_eventSurveyMap_codec);
      eventSurveyMapAB_.WriteTo(output, _map_eventSurveyMapAB_codec);
      eventSurveyMapABPatch_.WriteTo(output, _map_eventSurveyMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventSurveyMap_.WriteTo(ref output, _map_eventSurveyMap_codec);
      eventSurveyMapAB_.WriteTo(ref output, _map_eventSurveyMapAB_codec);
      eventSurveyMapABPatch_.WriteTo(ref output, _map_eventSurveyMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventSurveyMap_.CalculateSize(_map_eventSurveyMap_codec);
      size += eventSurveyMapAB_.CalculateSize(_map_eventSurveyMapAB_codec);
      size += eventSurveyMapABPatch_.CalculateSize(_map_eventSurveyMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventSurveyConf other) {
      if (other == null) {
        return;
      }
      eventSurveyMap_.Add(other.eventSurveyMap_);
      eventSurveyMapAB_.Add(other.eventSurveyMapAB_);
      eventSurveyMapABPatch_.Add(other.eventSurveyMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventSurveyMap_.AddEntriesFrom(input, _map_eventSurveyMap_codec);
            break;
          }
          case 18: {
            eventSurveyMapAB_.AddEntriesFrom(input, _map_eventSurveyMapAB_codec);
            break;
          }
          case 26: {
            eventSurveyMapABPatch_.AddEntriesFrom(input, _map_eventSurveyMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventSurveyMap_.AddEntriesFrom(ref input, _map_eventSurveyMap_codec);
            break;
          }
          case 18: {
            eventSurveyMapAB_.AddEntriesFrom(ref input, _map_eventSurveyMapAB_codec);
            break;
          }
          case 26: {
            eventSurveyMapABPatch_.AddEntriesFrom(ref input, _map_eventSurveyMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
