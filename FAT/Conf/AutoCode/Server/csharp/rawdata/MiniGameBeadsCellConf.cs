// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/MiniGameBeadsCellConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/MiniGameBeadsCellConf.proto</summary>
  public static partial class MiniGameBeadsCellConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/MiniGameBeadsCellConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MiniGameBeadsCellConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiNyYXdkYXRhL01pbmlHYW1lQmVhZHNDZWxsQ29uZi5wcm90bxIHcmF3ZGF0",
            "YRoXcmF3ZGF0YS9CZWFkc1R5cGUucHJvdG8iWQoRTWluaUdhbWVCZWFkc0Nl",
            "bGwSCgoCaWQYASABKAUSJQoJYmVhZHNUeXBlGAIgASgOMhIucmF3ZGF0YS5C",
            "ZWFkc1R5cGUSEQoJY2VsbEltYWdlGAMgASgJItQBChtNaW5pR2FtZUJlYWRz",
            "Q2VsbE1hcEFCVmFsdWUSXAoUTWluaUdhbWVCZWFkc0NlbGxNYXAYASADKAsy",
            "Pi5yYXdkYXRhLk1pbmlHYW1lQmVhZHNDZWxsTWFwQUJWYWx1ZS5NaW5pR2Ft",
            "ZUJlYWRzQ2VsbE1hcEVudHJ5GlcKGU1pbmlHYW1lQmVhZHNDZWxsTWFwRW50",
            "cnkSCwoDa2V5GAEgASgFEikKBXZhbHVlGAIgASgLMhoucmF3ZGF0YS5NaW5p",
            "R2FtZUJlYWRzQ2VsbDoCOAEi2QQKFU1pbmlHYW1lQmVhZHNDZWxsQ29uZhJW",
            "ChRNaW5pR2FtZUJlYWRzQ2VsbE1hcBgBIAMoCzI4LnJhd2RhdGEuTWluaUdh",
            "bWVCZWFkc0NlbGxDb25mLk1pbmlHYW1lQmVhZHNDZWxsTWFwRW50cnkSWgoW",
            "TWluaUdhbWVCZWFkc0NlbGxNYXBBQhgCIAMoCzI6LnJhd2RhdGEuTWluaUdh",
            "bWVCZWFkc0NlbGxDb25mLk1pbmlHYW1lQmVhZHNDZWxsTWFwQUJFbnRyeRJk",
            "ChtNaW5pR2FtZUJlYWRzQ2VsbE1hcEFCUGF0Y2gYAyADKAsyPy5yYXdkYXRh",
            "Lk1pbmlHYW1lQmVhZHNDZWxsQ29uZi5NaW5pR2FtZUJlYWRzQ2VsbE1hcEFC",
            "UGF0Y2hFbnRyeRpXChlNaW5pR2FtZUJlYWRzQ2VsbE1hcEVudHJ5EgsKA2tl",
            "eRgBIAEoBRIpCgV2YWx1ZRgCIAEoCzIaLnJhd2RhdGEuTWluaUdhbWVCZWFk",
            "c0NlbGw6AjgBGmMKG01pbmlHYW1lQmVhZHNDZWxsTWFwQUJFbnRyeRILCgNr",
            "ZXkYASABKAkSMwoFdmFsdWUYAiABKAsyJC5yYXdkYXRhLk1pbmlHYW1lQmVh",
            "ZHNDZWxsTWFwQUJWYWx1ZToCOAEaaAogTWluaUdhbWVCZWFkc0NlbGxNYXBB",
            "QlBhdGNoRW50cnkSCwoDa2V5GAEgASgJEjMKBXZhbHVlGAIgASgLMiQucmF3",
            "ZGF0YS5NaW5pR2FtZUJlYWRzQ2VsbE1hcEFCVmFsdWU6AjgBQj1aLWdpdGxh",
            "Yi5mdW5wbHVzLmlvL2ZhdC9jb25mL2dlbi9nb2xhbmcvcmF3ZGF0YaoCC2Zh",
            "dC5yYXdkYXRhYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::fat.rawdata.BeadsTypeReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.MiniGameBeadsCell), global::fat.rawdata.MiniGameBeadsCell.Parser, new[]{ "Id", "BeadsType", "CellImage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.MiniGameBeadsCellMapABValue), global::fat.rawdata.MiniGameBeadsCellMapABValue.Parser, new[]{ "MiniGameBeadsCellMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.MiniGameBeadsCellConf), global::fat.rawdata.MiniGameBeadsCellConf.Parser, new[]{ "MiniGameBeadsCellMap", "MiniGameBeadsCellMapAB", "MiniGameBeadsCellMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="MiniGameBeadsCell",table="MiniGameBeadsCellMap",table_wrapper="MiniGameBeadsCellConf",map="true",map_key_type="int32",data="MiniGameBeadsCellConf")
  /// annotation@ab(table_ab="MiniGameBeadsCellMapAB",table_ab_patch="MiniGameBeadsCellMapABPatch",table_ab_value="MiniGameBeadsCellMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@MiniGameBeadsCell(id="id")
  /// </summary>
  public sealed partial class MiniGameBeadsCell : pb::IMessage<MiniGameBeadsCell>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MiniGameBeadsCell> _parser = new pb::MessageParser<MiniGameBeadsCell>(() => new MiniGameBeadsCell());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MiniGameBeadsCell> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.MiniGameBeadsCellConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MiniGameBeadsCell() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MiniGameBeadsCell(MiniGameBeadsCell other) : this() {
      id_ = other.id_;
      beadsType_ = other.beadsType_;
      cellImage_ = other.cellImage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MiniGameBeadsCell Clone() {
      return new MiniGameBeadsCell(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 珠子ID
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "beadsType" field.</summary>
    public const int BeadsTypeFieldNumber = 2;
    private global::fat.rawdata.BeadsType beadsType_ = global::fat.rawdata.BeadsType.Default;
    /// <summary>
    /// 珠子类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::fat.rawdata.BeadsType BeadsType {
      get { return beadsType_; }
      set {
        beadsType_ = value;
      }
    }

    /// <summary>Field number for the "cellImage" field.</summary>
    public const int CellImageFieldNumber = 3;
    private string cellImage_ = "";
    /// <summary>
    /// 珠子图
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CellImage {
      get { return cellImage_; }
      set {
        cellImage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MiniGameBeadsCell);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MiniGameBeadsCell other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (BeadsType != other.BeadsType) return false;
      if (CellImage != other.CellImage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (BeadsType != global::fat.rawdata.BeadsType.Default) hash ^= BeadsType.GetHashCode();
      if (CellImage.Length != 0) hash ^= CellImage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (BeadsType != global::fat.rawdata.BeadsType.Default) {
        output.WriteRawTag(16);
        output.WriteEnum((int) BeadsType);
      }
      if (CellImage.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CellImage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (BeadsType != global::fat.rawdata.BeadsType.Default) {
        output.WriteRawTag(16);
        output.WriteEnum((int) BeadsType);
      }
      if (CellImage.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CellImage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (BeadsType != global::fat.rawdata.BeadsType.Default) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BeadsType);
      }
      if (CellImage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CellImage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MiniGameBeadsCell other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.BeadsType != global::fat.rawdata.BeadsType.Default) {
        BeadsType = other.BeadsType;
      }
      if (other.CellImage.Length != 0) {
        CellImage = other.CellImage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            BeadsType = (global::fat.rawdata.BeadsType) input.ReadEnum();
            break;
          }
          case 26: {
            CellImage = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            BeadsType = (global::fat.rawdata.BeadsType) input.ReadEnum();
            break;
          }
          case 26: {
            CellImage = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MiniGameBeadsCellMapABValue : pb::IMessage<MiniGameBeadsCellMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MiniGameBeadsCellMapABValue> _parser = new pb::MessageParser<MiniGameBeadsCellMapABValue>(() => new MiniGameBeadsCellMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MiniGameBeadsCellMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.MiniGameBeadsCellConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MiniGameBeadsCellMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MiniGameBeadsCellMapABValue(MiniGameBeadsCellMapABValue other) : this() {
      miniGameBeadsCellMap_ = other.miniGameBeadsCellMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MiniGameBeadsCellMapABValue Clone() {
      return new MiniGameBeadsCellMapABValue(this);
    }

    /// <summary>Field number for the "MiniGameBeadsCellMap" field.</summary>
    public const int MiniGameBeadsCellMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.MiniGameBeadsCell>.Codec _map_miniGameBeadsCellMap_codec
        = new pbc::MapField<int, global::fat.rawdata.MiniGameBeadsCell>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.MiniGameBeadsCell.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.MiniGameBeadsCell> miniGameBeadsCellMap_ = new pbc::MapField<int, global::fat.rawdata.MiniGameBeadsCell>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.MiniGameBeadsCell> MiniGameBeadsCellMap {
      get { return miniGameBeadsCellMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MiniGameBeadsCellMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MiniGameBeadsCellMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!MiniGameBeadsCellMap.Equals(other.MiniGameBeadsCellMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= MiniGameBeadsCellMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      miniGameBeadsCellMap_.WriteTo(output, _map_miniGameBeadsCellMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      miniGameBeadsCellMap_.WriteTo(ref output, _map_miniGameBeadsCellMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += miniGameBeadsCellMap_.CalculateSize(_map_miniGameBeadsCellMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MiniGameBeadsCellMapABValue other) {
      if (other == null) {
        return;
      }
      miniGameBeadsCellMap_.Add(other.miniGameBeadsCellMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            miniGameBeadsCellMap_.AddEntriesFrom(input, _map_miniGameBeadsCellMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            miniGameBeadsCellMap_.AddEntriesFrom(ref input, _map_miniGameBeadsCellMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MiniGameBeadsCellConf : pb::IMessage<MiniGameBeadsCellConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MiniGameBeadsCellConf> _parser = new pb::MessageParser<MiniGameBeadsCellConf>(() => new MiniGameBeadsCellConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MiniGameBeadsCellConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.MiniGameBeadsCellConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MiniGameBeadsCellConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MiniGameBeadsCellConf(MiniGameBeadsCellConf other) : this() {
      miniGameBeadsCellMap_ = other.miniGameBeadsCellMap_.Clone();
      miniGameBeadsCellMapAB_ = other.miniGameBeadsCellMapAB_.Clone();
      miniGameBeadsCellMapABPatch_ = other.miniGameBeadsCellMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MiniGameBeadsCellConf Clone() {
      return new MiniGameBeadsCellConf(this);
    }

    /// <summary>Field number for the "MiniGameBeadsCellMap" field.</summary>
    public const int MiniGameBeadsCellMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.MiniGameBeadsCell>.Codec _map_miniGameBeadsCellMap_codec
        = new pbc::MapField<int, global::fat.rawdata.MiniGameBeadsCell>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.MiniGameBeadsCell.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.MiniGameBeadsCell> miniGameBeadsCellMap_ = new pbc::MapField<int, global::fat.rawdata.MiniGameBeadsCell>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.MiniGameBeadsCell> MiniGameBeadsCellMap {
      get { return miniGameBeadsCellMap_; }
    }

    /// <summary>Field number for the "MiniGameBeadsCellMapAB" field.</summary>
    public const int MiniGameBeadsCellMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.MiniGameBeadsCellMapABValue>.Codec _map_miniGameBeadsCellMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.MiniGameBeadsCellMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.MiniGameBeadsCellMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.MiniGameBeadsCellMapABValue> miniGameBeadsCellMapAB_ = new pbc::MapField<string, global::fat.rawdata.MiniGameBeadsCellMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.MiniGameBeadsCellMapABValue> MiniGameBeadsCellMapAB {
      get { return miniGameBeadsCellMapAB_; }
    }

    /// <summary>Field number for the "MiniGameBeadsCellMapABPatch" field.</summary>
    public const int MiniGameBeadsCellMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.MiniGameBeadsCellMapABValue>.Codec _map_miniGameBeadsCellMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.MiniGameBeadsCellMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.MiniGameBeadsCellMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.MiniGameBeadsCellMapABValue> miniGameBeadsCellMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.MiniGameBeadsCellMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.MiniGameBeadsCellMapABValue> MiniGameBeadsCellMapABPatch {
      get { return miniGameBeadsCellMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MiniGameBeadsCellConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MiniGameBeadsCellConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!MiniGameBeadsCellMap.Equals(other.MiniGameBeadsCellMap)) return false;
      if (!MiniGameBeadsCellMapAB.Equals(other.MiniGameBeadsCellMapAB)) return false;
      if (!MiniGameBeadsCellMapABPatch.Equals(other.MiniGameBeadsCellMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= MiniGameBeadsCellMap.GetHashCode();
      hash ^= MiniGameBeadsCellMapAB.GetHashCode();
      hash ^= MiniGameBeadsCellMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      miniGameBeadsCellMap_.WriteTo(output, _map_miniGameBeadsCellMap_codec);
      miniGameBeadsCellMapAB_.WriteTo(output, _map_miniGameBeadsCellMapAB_codec);
      miniGameBeadsCellMapABPatch_.WriteTo(output, _map_miniGameBeadsCellMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      miniGameBeadsCellMap_.WriteTo(ref output, _map_miniGameBeadsCellMap_codec);
      miniGameBeadsCellMapAB_.WriteTo(ref output, _map_miniGameBeadsCellMapAB_codec);
      miniGameBeadsCellMapABPatch_.WriteTo(ref output, _map_miniGameBeadsCellMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += miniGameBeadsCellMap_.CalculateSize(_map_miniGameBeadsCellMap_codec);
      size += miniGameBeadsCellMapAB_.CalculateSize(_map_miniGameBeadsCellMapAB_codec);
      size += miniGameBeadsCellMapABPatch_.CalculateSize(_map_miniGameBeadsCellMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MiniGameBeadsCellConf other) {
      if (other == null) {
        return;
      }
      miniGameBeadsCellMap_.Add(other.miniGameBeadsCellMap_);
      miniGameBeadsCellMapAB_.Add(other.miniGameBeadsCellMapAB_);
      miniGameBeadsCellMapABPatch_.Add(other.miniGameBeadsCellMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            miniGameBeadsCellMap_.AddEntriesFrom(input, _map_miniGameBeadsCellMap_codec);
            break;
          }
          case 18: {
            miniGameBeadsCellMapAB_.AddEntriesFrom(input, _map_miniGameBeadsCellMapAB_codec);
            break;
          }
          case 26: {
            miniGameBeadsCellMapABPatch_.AddEntriesFrom(input, _map_miniGameBeadsCellMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            miniGameBeadsCellMap_.AddEntriesFrom(ref input, _map_miniGameBeadsCellMap_codec);
            break;
          }
          case 18: {
            miniGameBeadsCellMapAB_.AddEntriesFrom(ref input, _map_miniGameBeadsCellMapAB_codec);
            break;
          }
          case 26: {
            miniGameBeadsCellMapABPatch_.AddEntriesFrom(ref input, _map_miniGameBeadsCellMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
