// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/IAPPackConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/IAPPackConf.proto</summary>
  public static partial class IAPPackConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/IAPPackConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static IAPPackConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChlyYXdkYXRhL0lBUFBhY2tDb25mLnByb3RvEgdyYXdkYXRhInwKB0lBUFBh",
            "Y2sSCgoCaWQYASABKAUSDgoGZWZmZWN0GAcgASgFEg0KBWlhcElkGAIgASgF",
            "EhAKCHBhY2tOYW1lGAggASgJEg4KBnJld2FyZBgDIAMoCRITCgtyZXdhcmRB",
            "bGJ1bRgGIAMoCRIPCgd0Z2FOYW1lGAQgASgJIpgBChFJQVBQYWNrTWFwQUJW",
            "YWx1ZRI+CgpJQVBQYWNrTWFwGAEgAygLMioucmF3ZGF0YS5JQVBQYWNrTWFw",
            "QUJWYWx1ZS5JQVBQYWNrTWFwRW50cnkaQwoPSUFQUGFja01hcEVudHJ5EgsK",
            "A2tleRgBIAEoBRIfCgV2YWx1ZRgCIAEoCzIQLnJhd2RhdGEuSUFQUGFjazoC",
            "OAEiuQMKC0lBUFBhY2tDb25mEjgKCklBUFBhY2tNYXAYASADKAsyJC5yYXdk",
            "YXRhLklBUFBhY2tDb25mLklBUFBhY2tNYXBFbnRyeRI8CgxJQVBQYWNrTWFw",
            "QUIYAiADKAsyJi5yYXdkYXRhLklBUFBhY2tDb25mLklBUFBhY2tNYXBBQkVu",
            "dHJ5EkYKEUlBUFBhY2tNYXBBQlBhdGNoGAMgAygLMisucmF3ZGF0YS5JQVBQ",
            "YWNrQ29uZi5JQVBQYWNrTWFwQUJQYXRjaEVudHJ5GkMKD0lBUFBhY2tNYXBF",
            "bnRyeRILCgNrZXkYASABKAUSHwoFdmFsdWUYAiABKAsyEC5yYXdkYXRhLklB",
            "UFBhY2s6AjgBGk8KEUlBUFBhY2tNYXBBQkVudHJ5EgsKA2tleRgBIAEoCRIp",
            "CgV2YWx1ZRgCIAEoCzIaLnJhd2RhdGEuSUFQUGFja01hcEFCVmFsdWU6AjgB",
            "GlQKFklBUFBhY2tNYXBBQlBhdGNoRW50cnkSCwoDa2V5GAEgASgJEikKBXZh",
            "bHVlGAIgASgLMhoucmF3ZGF0YS5JQVBQYWNrTWFwQUJWYWx1ZToCOAFCPVot",
            "Z2l0bGFiLmZ1bnBsdXMuaW8vZmF0L2NvbmYvZ2VuL2dvbGFuZy9yYXdkYXRh",
            "qgILZmF0LnJhd2RhdGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.IAPPack), global::fat.rawdata.IAPPack.Parser, new[]{ "Id", "Effect", "IapId", "PackName", "Reward", "RewardAlbum", "TgaName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.IAPPackMapABValue), global::fat.rawdata.IAPPackMapABValue.Parser, new[]{ "IAPPackMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.IAPPackConf), global::fat.rawdata.IAPPackConf.Parser, new[]{ "IAPPackMap", "IAPPackMapAB", "IAPPackMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="IAPPack",table="IAPPackMap",table_wrapper="IAPPackConf",map="true",map_key_type="int32",data="IAPPackConf")
  /// annotation@ab(table_ab="IAPPackMapAB",table_ab_patch="IAPPackMapABPatch",table_ab_value="IAPPackMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@IAPPack(id="id")
  /// </summary>
  public sealed partial class IAPPack : pb::IMessage<IAPPack>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<IAPPack> _parser = new pb::MessageParser<IAPPack>(() => new IAPPack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IAPPack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.IAPPackConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IAPPack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IAPPack(IAPPack other) : this() {
      id_ = other.id_;
      effect_ = other.effect_;
      iapId_ = other.iapId_;
      packName_ = other.packName_;
      reward_ = other.reward_.Clone();
      rewardAlbum_ = other.rewardAlbum_.Clone();
      tgaName_ = other.tgaName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IAPPack Clone() {
      return new IAPPack(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 内购商品ID
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "effect" field.</summary>
    public const int EffectFieldNumber = 7;
    private int effect_;
    /// <summary>
    /// 换算性价比
    /// （会被价格标签用到）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Effect {
      get { return effect_; }
      set {
        effect_ = value;
      }
    }

    /// <summary>Field number for the "iapId" field.</summary>
    public const int IapIdFieldNumber = 2;
    private int iapId_;
    /// <summary>
    /// skuId
    /// （IAPProduct.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IapId {
      get { return iapId_; }
      set {
        iapId_ = value;
      }
    }

    /// <summary>Field number for the "packName" field.</summary>
    public const int PackNameFieldNumber = 8;
    private string packName_ = "";
    /// <summary>
    /// 礼包名(多语言key)
    /// 用于补单，每个礼包都需添加
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PackName {
      get { return packName_; }
      set {
        packName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "reward" field.</summary>
    public const int RewardFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_reward_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> reward_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 内购商品奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Reward {
      get { return reward_; }
    }

    /// <summary>Field number for the "rewardAlbum" field.</summary>
    public const int RewardAlbumFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _repeated_rewardAlbum_codec
        = pb::FieldCodec.ForString(50);
    private readonly pbc::RepeatedField<string> rewardAlbum_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 集卡期间内购商品奖励
    /// （通用奖励格式）
    /// （如果当前有集卡活动，用此列替换内购商品）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> RewardAlbum {
      get { return rewardAlbum_; }
    }

    /// <summary>Field number for the "tgaName" field.</summary>
    public const int TgaNameFieldNumber = 4;
    private string tgaName_ = "";
    /// <summary>
    /// TGA打点用内购项名称
    /// （游戏逻辑用不到）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TgaName {
      get { return tgaName_; }
      set {
        tgaName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IAPPack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IAPPack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Effect != other.Effect) return false;
      if (IapId != other.IapId) return false;
      if (PackName != other.PackName) return false;
      if(!reward_.Equals(other.reward_)) return false;
      if(!rewardAlbum_.Equals(other.rewardAlbum_)) return false;
      if (TgaName != other.TgaName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Effect != 0) hash ^= Effect.GetHashCode();
      if (IapId != 0) hash ^= IapId.GetHashCode();
      if (PackName.Length != 0) hash ^= PackName.GetHashCode();
      hash ^= reward_.GetHashCode();
      hash ^= rewardAlbum_.GetHashCode();
      if (TgaName.Length != 0) hash ^= TgaName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (IapId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(IapId);
      }
      reward_.WriteTo(output, _repeated_reward_codec);
      if (TgaName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(TgaName);
      }
      rewardAlbum_.WriteTo(output, _repeated_rewardAlbum_codec);
      if (Effect != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Effect);
      }
      if (PackName.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(PackName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (IapId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(IapId);
      }
      reward_.WriteTo(ref output, _repeated_reward_codec);
      if (TgaName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(TgaName);
      }
      rewardAlbum_.WriteTo(ref output, _repeated_rewardAlbum_codec);
      if (Effect != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Effect);
      }
      if (PackName.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(PackName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Effect != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Effect);
      }
      if (IapId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IapId);
      }
      if (PackName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PackName);
      }
      size += reward_.CalculateSize(_repeated_reward_codec);
      size += rewardAlbum_.CalculateSize(_repeated_rewardAlbum_codec);
      if (TgaName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TgaName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IAPPack other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Effect != 0) {
        Effect = other.Effect;
      }
      if (other.IapId != 0) {
        IapId = other.IapId;
      }
      if (other.PackName.Length != 0) {
        PackName = other.PackName;
      }
      reward_.Add(other.reward_);
      rewardAlbum_.Add(other.rewardAlbum_);
      if (other.TgaName.Length != 0) {
        TgaName = other.TgaName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            IapId = input.ReadInt32();
            break;
          }
          case 26: {
            reward_.AddEntriesFrom(input, _repeated_reward_codec);
            break;
          }
          case 34: {
            TgaName = input.ReadString();
            break;
          }
          case 50: {
            rewardAlbum_.AddEntriesFrom(input, _repeated_rewardAlbum_codec);
            break;
          }
          case 56: {
            Effect = input.ReadInt32();
            break;
          }
          case 66: {
            PackName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            IapId = input.ReadInt32();
            break;
          }
          case 26: {
            reward_.AddEntriesFrom(ref input, _repeated_reward_codec);
            break;
          }
          case 34: {
            TgaName = input.ReadString();
            break;
          }
          case 50: {
            rewardAlbum_.AddEntriesFrom(ref input, _repeated_rewardAlbum_codec);
            break;
          }
          case 56: {
            Effect = input.ReadInt32();
            break;
          }
          case 66: {
            PackName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class IAPPackMapABValue : pb::IMessage<IAPPackMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<IAPPackMapABValue> _parser = new pb::MessageParser<IAPPackMapABValue>(() => new IAPPackMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IAPPackMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.IAPPackConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IAPPackMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IAPPackMapABValue(IAPPackMapABValue other) : this() {
      iAPPackMap_ = other.iAPPackMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IAPPackMapABValue Clone() {
      return new IAPPackMapABValue(this);
    }

    /// <summary>Field number for the "IAPPackMap" field.</summary>
    public const int IAPPackMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.IAPPack>.Codec _map_iAPPackMap_codec
        = new pbc::MapField<int, global::fat.rawdata.IAPPack>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.IAPPack.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.IAPPack> iAPPackMap_ = new pbc::MapField<int, global::fat.rawdata.IAPPack>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.IAPPack> IAPPackMap {
      get { return iAPPackMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IAPPackMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IAPPackMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!IAPPackMap.Equals(other.IAPPackMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= IAPPackMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      iAPPackMap_.WriteTo(output, _map_iAPPackMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      iAPPackMap_.WriteTo(ref output, _map_iAPPackMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += iAPPackMap_.CalculateSize(_map_iAPPackMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IAPPackMapABValue other) {
      if (other == null) {
        return;
      }
      iAPPackMap_.Add(other.iAPPackMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            iAPPackMap_.AddEntriesFrom(input, _map_iAPPackMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            iAPPackMap_.AddEntriesFrom(ref input, _map_iAPPackMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class IAPPackConf : pb::IMessage<IAPPackConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<IAPPackConf> _parser = new pb::MessageParser<IAPPackConf>(() => new IAPPackConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IAPPackConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.IAPPackConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IAPPackConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IAPPackConf(IAPPackConf other) : this() {
      iAPPackMap_ = other.iAPPackMap_.Clone();
      iAPPackMapAB_ = other.iAPPackMapAB_.Clone();
      iAPPackMapABPatch_ = other.iAPPackMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IAPPackConf Clone() {
      return new IAPPackConf(this);
    }

    /// <summary>Field number for the "IAPPackMap" field.</summary>
    public const int IAPPackMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.IAPPack>.Codec _map_iAPPackMap_codec
        = new pbc::MapField<int, global::fat.rawdata.IAPPack>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.IAPPack.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.IAPPack> iAPPackMap_ = new pbc::MapField<int, global::fat.rawdata.IAPPack>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.IAPPack> IAPPackMap {
      get { return iAPPackMap_; }
    }

    /// <summary>Field number for the "IAPPackMapAB" field.</summary>
    public const int IAPPackMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.IAPPackMapABValue>.Codec _map_iAPPackMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.IAPPackMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.IAPPackMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.IAPPackMapABValue> iAPPackMapAB_ = new pbc::MapField<string, global::fat.rawdata.IAPPackMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.IAPPackMapABValue> IAPPackMapAB {
      get { return iAPPackMapAB_; }
    }

    /// <summary>Field number for the "IAPPackMapABPatch" field.</summary>
    public const int IAPPackMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.IAPPackMapABValue>.Codec _map_iAPPackMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.IAPPackMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.IAPPackMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.IAPPackMapABValue> iAPPackMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.IAPPackMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.IAPPackMapABValue> IAPPackMapABPatch {
      get { return iAPPackMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IAPPackConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IAPPackConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!IAPPackMap.Equals(other.IAPPackMap)) return false;
      if (!IAPPackMapAB.Equals(other.IAPPackMapAB)) return false;
      if (!IAPPackMapABPatch.Equals(other.IAPPackMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= IAPPackMap.GetHashCode();
      hash ^= IAPPackMapAB.GetHashCode();
      hash ^= IAPPackMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      iAPPackMap_.WriteTo(output, _map_iAPPackMap_codec);
      iAPPackMapAB_.WriteTo(output, _map_iAPPackMapAB_codec);
      iAPPackMapABPatch_.WriteTo(output, _map_iAPPackMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      iAPPackMap_.WriteTo(ref output, _map_iAPPackMap_codec);
      iAPPackMapAB_.WriteTo(ref output, _map_iAPPackMapAB_codec);
      iAPPackMapABPatch_.WriteTo(ref output, _map_iAPPackMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += iAPPackMap_.CalculateSize(_map_iAPPackMap_codec);
      size += iAPPackMapAB_.CalculateSize(_map_iAPPackMapAB_codec);
      size += iAPPackMapABPatch_.CalculateSize(_map_iAPPackMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IAPPackConf other) {
      if (other == null) {
        return;
      }
      iAPPackMap_.Add(other.iAPPackMap_);
      iAPPackMapAB_.Add(other.iAPPackMapAB_);
      iAPPackMapABPatch_.Add(other.iAPPackMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            iAPPackMap_.AddEntriesFrom(input, _map_iAPPackMap_codec);
            break;
          }
          case 18: {
            iAPPackMapAB_.AddEntriesFrom(input, _map_iAPPackMapAB_codec);
            break;
          }
          case 26: {
            iAPPackMapABPatch_.AddEntriesFrom(input, _map_iAPPackMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            iAPPackMap_.AddEntriesFrom(ref input, _map_iAPPackMap_codec);
            break;
          }
          case 18: {
            iAPPackMapAB_.AddEntriesFrom(ref input, _map_iAPPackMapAB_codec);
            break;
          }
          case 26: {
            iAPPackMapABPatch_.AddEntriesFrom(ref input, _map_iAPPackMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
