// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/ComMergeEatConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/ComMergeEatConf.proto</summary>
  public static partial class ComMergeEatConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/ComMergeEatConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ComMergeEatConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch1yYXdkYXRhL0NvbU1lcmdlRWF0Q29uZi5wcm90bxIHcmF3ZGF0YRoecmF3",
            "ZGF0YS9SYW5kb21NZXRob2RUeXBlLnByb3RvIrEBCgtDb21NZXJnZUVhdBIK",
            "CgJpZBgBIAEoBRIOCgZfdGFnc18YAiADKAkSEAoIY2hhbmdlaWQYAyADKAUS",
            "FAoMY29udHJvbGxhYmxlGAQgASgIEgsKA2VhdBgFIAMoCRIQCghmaXhlZEVh",
            "dBgGIAMoBRIvCgxyYW5kb21NZXRob2QYByABKA4yGS5yYXdkYXRhLlJhbmRv",
            "bU1ldGhvZFR5cGUSDgoGd2VpZ2h0GAggAygFIrABChVDb21NZXJnZUVhdE1h",
            "cEFCVmFsdWUSSgoOQ29tTWVyZ2VFYXRNYXAYASADKAsyMi5yYXdkYXRhLkNv",
            "bU1lcmdlRWF0TWFwQUJWYWx1ZS5Db21NZXJnZUVhdE1hcEVudHJ5GksKE0Nv",
            "bU1lcmdlRWF0TWFwRW50cnkSCwoDa2V5GAEgASgFEiMKBXZhbHVlGAIgASgL",
            "MhQucmF3ZGF0YS5Db21NZXJnZUVhdDoCOAEi+QMKD0NvbU1lcmdlRWF0Q29u",
            "ZhJECg5Db21NZXJnZUVhdE1hcBgBIAMoCzIsLnJhd2RhdGEuQ29tTWVyZ2VF",
            "YXRDb25mLkNvbU1lcmdlRWF0TWFwRW50cnkSSAoQQ29tTWVyZ2VFYXRNYXBB",
            "QhgCIAMoCzIuLnJhd2RhdGEuQ29tTWVyZ2VFYXRDb25mLkNvbU1lcmdlRWF0",
            "TWFwQUJFbnRyeRJSChVDb21NZXJnZUVhdE1hcEFCUGF0Y2gYAyADKAsyMy5y",
            "YXdkYXRhLkNvbU1lcmdlRWF0Q29uZi5Db21NZXJnZUVhdE1hcEFCUGF0Y2hF",
            "bnRyeRpLChNDb21NZXJnZUVhdE1hcEVudHJ5EgsKA2tleRgBIAEoBRIjCgV2",
            "YWx1ZRgCIAEoCzIULnJhd2RhdGEuQ29tTWVyZ2VFYXQ6AjgBGlcKFUNvbU1l",
            "cmdlRWF0TWFwQUJFbnRyeRILCgNrZXkYASABKAkSLQoFdmFsdWUYAiABKAsy",
            "Hi5yYXdkYXRhLkNvbU1lcmdlRWF0TWFwQUJWYWx1ZToCOAEaXAoaQ29tTWVy",
            "Z2VFYXRNYXBBQlBhdGNoRW50cnkSCwoDa2V5GAEgASgJEi0KBXZhbHVlGAIg",
            "ASgLMh4ucmF3ZGF0YS5Db21NZXJnZUVhdE1hcEFCVmFsdWU6AjgBQj1aLWdp",
            "dGxhYi5mdW5wbHVzLmlvL2ZhdC9jb25mL2dlbi9nb2xhbmcvcmF3ZGF0YaoC",
            "C2ZhdC5yYXdkYXRhYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::fat.rawdata.RandomMethodTypeReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.ComMergeEat), global::fat.rawdata.ComMergeEat.Parser, new[]{ "Id", "Tags", "Changeid", "Controllable", "Eat", "FixedEat", "RandomMethod", "Weight" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.ComMergeEatMapABValue), global::fat.rawdata.ComMergeEatMapABValue.Parser, new[]{ "ComMergeEatMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.ComMergeEatConf), global::fat.rawdata.ComMergeEatConf.Parser, new[]{ "ComMergeEatMap", "ComMergeEatMapAB", "ComMergeEatMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="ComMergeEat",table="ComMergeEatMap",table_wrapper="ComMergeEatConf",map="true",map_key_type="int32",data="ComMergeEatConf")
  /// annotation@ab(table_ab="ComMergeEatMapAB",table_ab_patch="ComMergeEatMapABPatch",table_ab_value="ComMergeEatMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@ComMergeEat(id="id")
  /// </summary>
  public sealed partial class ComMergeEat : pb::IMessage<ComMergeEat>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ComMergeEat> _parser = new pb::MessageParser<ComMergeEat>(() => new ComMergeEat());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ComMergeEat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.ComMergeEatConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComMergeEat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComMergeEat(ComMergeEat other) : this() {
      id_ = other.id_;
      Tags_ = other.Tags_.Clone();
      changeid_ = other.changeid_.Clone();
      controllable_ = other.controllable_;
      eat_ = other.eat_.Clone();
      fixedEat_ = other.fixedEat_.Clone();
      randomMethod_ = other.randomMethod_;
      weight_ = other.weight_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComMergeEat Clone() {
      return new ComMergeEat(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 合成物品id
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "_tags_" field.</summary>
    public const int TagsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_Tags_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> Tags_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Tags {
      get { return Tags_; }
    }

    /// <summary>Field number for the "changeid" field.</summary>
    public const int ChangeidFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_changeid_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> changeid_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 对应变化的物体
    /// (与eat种类数量一致)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Changeid {
      get { return changeid_; }
    }

    /// <summary>Field number for the "controllable" field.</summary>
    public const int ControllableFieldNumber = 4;
    private bool controllable_;
    /// <summary>
    /// 玩家是否选择，默认False
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Controllable {
      get { return controllable_; }
      set {
        controllable_ = value;
      }
    }

    /// <summary>Field number for the "eat" field.</summary>
    public const int EatFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_eat_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> eat_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 消耗的物品及数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Eat {
      get { return eat_; }
    }

    /// <summary>Field number for the "fixedEat" field.</summary>
    public const int FixedEatFieldNumber = 6;
    private static readonly pb::FieldCodec<int> _repeated_fixedEat_codec
        = pb::FieldCodec.ForInt32(50);
    private readonly pbc::RepeatedField<int> fixedEat_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 前几个固定消耗
    /// （第几种eat）
    /// （从0开始）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> FixedEat {
      get { return fixedEat_; }
    }

    /// <summary>Field number for the "randomMethod" field.</summary>
    public const int RandomMethodFieldNumber = 7;
    private global::fat.rawdata.RandomMethodType randomMethod_ = global::fat.rawdata.RandomMethodType.Simple;
    /// <summary>
    /// 使用的随机方法
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::fat.rawdata.RandomMethodType RandomMethod {
      get { return randomMethod_; }
      set {
        randomMethod_ = value;
      }
    }

    /// <summary>Field number for the "weight" field.</summary>
    public const int WeightFieldNumber = 8;
    private static readonly pb::FieldCodec<int> _repeated_weight_codec
        = pb::FieldCodec.ForInt32(66);
    private readonly pbc::RepeatedField<int> weight_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 权重
    /// （留空代表消耗方式可选）
    /// （会对应多种变化后物体）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Weight {
      get { return weight_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ComMergeEat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ComMergeEat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!Tags_.Equals(other.Tags_)) return false;
      if(!changeid_.Equals(other.changeid_)) return false;
      if (Controllable != other.Controllable) return false;
      if(!eat_.Equals(other.eat_)) return false;
      if(!fixedEat_.Equals(other.fixedEat_)) return false;
      if (RandomMethod != other.RandomMethod) return false;
      if(!weight_.Equals(other.weight_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      hash ^= Tags_.GetHashCode();
      hash ^= changeid_.GetHashCode();
      if (Controllable != false) hash ^= Controllable.GetHashCode();
      hash ^= eat_.GetHashCode();
      hash ^= fixedEat_.GetHashCode();
      if (RandomMethod != global::fat.rawdata.RandomMethodType.Simple) hash ^= RandomMethod.GetHashCode();
      hash ^= weight_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      Tags_.WriteTo(output, _repeated_Tags_codec);
      changeid_.WriteTo(output, _repeated_changeid_codec);
      if (Controllable != false) {
        output.WriteRawTag(32);
        output.WriteBool(Controllable);
      }
      eat_.WriteTo(output, _repeated_eat_codec);
      fixedEat_.WriteTo(output, _repeated_fixedEat_codec);
      if (RandomMethod != global::fat.rawdata.RandomMethodType.Simple) {
        output.WriteRawTag(56);
        output.WriteEnum((int) RandomMethod);
      }
      weight_.WriteTo(output, _repeated_weight_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      Tags_.WriteTo(ref output, _repeated_Tags_codec);
      changeid_.WriteTo(ref output, _repeated_changeid_codec);
      if (Controllable != false) {
        output.WriteRawTag(32);
        output.WriteBool(Controllable);
      }
      eat_.WriteTo(ref output, _repeated_eat_codec);
      fixedEat_.WriteTo(ref output, _repeated_fixedEat_codec);
      if (RandomMethod != global::fat.rawdata.RandomMethodType.Simple) {
        output.WriteRawTag(56);
        output.WriteEnum((int) RandomMethod);
      }
      weight_.WriteTo(ref output, _repeated_weight_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      size += Tags_.CalculateSize(_repeated_Tags_codec);
      size += changeid_.CalculateSize(_repeated_changeid_codec);
      if (Controllable != false) {
        size += 1 + 1;
      }
      size += eat_.CalculateSize(_repeated_eat_codec);
      size += fixedEat_.CalculateSize(_repeated_fixedEat_codec);
      if (RandomMethod != global::fat.rawdata.RandomMethodType.Simple) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RandomMethod);
      }
      size += weight_.CalculateSize(_repeated_weight_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ComMergeEat other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      Tags_.Add(other.Tags_);
      changeid_.Add(other.changeid_);
      if (other.Controllable != false) {
        Controllable = other.Controllable;
      }
      eat_.Add(other.eat_);
      fixedEat_.Add(other.fixedEat_);
      if (other.RandomMethod != global::fat.rawdata.RandomMethodType.Simple) {
        RandomMethod = other.RandomMethod;
      }
      weight_.Add(other.weight_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Tags_.AddEntriesFrom(input, _repeated_Tags_codec);
            break;
          }
          case 26:
          case 24: {
            changeid_.AddEntriesFrom(input, _repeated_changeid_codec);
            break;
          }
          case 32: {
            Controllable = input.ReadBool();
            break;
          }
          case 42: {
            eat_.AddEntriesFrom(input, _repeated_eat_codec);
            break;
          }
          case 50:
          case 48: {
            fixedEat_.AddEntriesFrom(input, _repeated_fixedEat_codec);
            break;
          }
          case 56: {
            RandomMethod = (global::fat.rawdata.RandomMethodType) input.ReadEnum();
            break;
          }
          case 66:
          case 64: {
            weight_.AddEntriesFrom(input, _repeated_weight_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Tags_.AddEntriesFrom(ref input, _repeated_Tags_codec);
            break;
          }
          case 26:
          case 24: {
            changeid_.AddEntriesFrom(ref input, _repeated_changeid_codec);
            break;
          }
          case 32: {
            Controllable = input.ReadBool();
            break;
          }
          case 42: {
            eat_.AddEntriesFrom(ref input, _repeated_eat_codec);
            break;
          }
          case 50:
          case 48: {
            fixedEat_.AddEntriesFrom(ref input, _repeated_fixedEat_codec);
            break;
          }
          case 56: {
            RandomMethod = (global::fat.rawdata.RandomMethodType) input.ReadEnum();
            break;
          }
          case 66:
          case 64: {
            weight_.AddEntriesFrom(ref input, _repeated_weight_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ComMergeEatMapABValue : pb::IMessage<ComMergeEatMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ComMergeEatMapABValue> _parser = new pb::MessageParser<ComMergeEatMapABValue>(() => new ComMergeEatMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ComMergeEatMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.ComMergeEatConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComMergeEatMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComMergeEatMapABValue(ComMergeEatMapABValue other) : this() {
      comMergeEatMap_ = other.comMergeEatMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComMergeEatMapABValue Clone() {
      return new ComMergeEatMapABValue(this);
    }

    /// <summary>Field number for the "ComMergeEatMap" field.</summary>
    public const int ComMergeEatMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.ComMergeEat>.Codec _map_comMergeEatMap_codec
        = new pbc::MapField<int, global::fat.rawdata.ComMergeEat>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ComMergeEat.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.ComMergeEat> comMergeEatMap_ = new pbc::MapField<int, global::fat.rawdata.ComMergeEat>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.ComMergeEat> ComMergeEatMap {
      get { return comMergeEatMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ComMergeEatMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ComMergeEatMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!ComMergeEatMap.Equals(other.ComMergeEatMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ComMergeEatMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      comMergeEatMap_.WriteTo(output, _map_comMergeEatMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      comMergeEatMap_.WriteTo(ref output, _map_comMergeEatMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += comMergeEatMap_.CalculateSize(_map_comMergeEatMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ComMergeEatMapABValue other) {
      if (other == null) {
        return;
      }
      comMergeEatMap_.Add(other.comMergeEatMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            comMergeEatMap_.AddEntriesFrom(input, _map_comMergeEatMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            comMergeEatMap_.AddEntriesFrom(ref input, _map_comMergeEatMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ComMergeEatConf : pb::IMessage<ComMergeEatConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ComMergeEatConf> _parser = new pb::MessageParser<ComMergeEatConf>(() => new ComMergeEatConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ComMergeEatConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.ComMergeEatConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComMergeEatConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComMergeEatConf(ComMergeEatConf other) : this() {
      comMergeEatMap_ = other.comMergeEatMap_.Clone();
      comMergeEatMapAB_ = other.comMergeEatMapAB_.Clone();
      comMergeEatMapABPatch_ = other.comMergeEatMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComMergeEatConf Clone() {
      return new ComMergeEatConf(this);
    }

    /// <summary>Field number for the "ComMergeEatMap" field.</summary>
    public const int ComMergeEatMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.ComMergeEat>.Codec _map_comMergeEatMap_codec
        = new pbc::MapField<int, global::fat.rawdata.ComMergeEat>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ComMergeEat.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.ComMergeEat> comMergeEatMap_ = new pbc::MapField<int, global::fat.rawdata.ComMergeEat>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.ComMergeEat> ComMergeEatMap {
      get { return comMergeEatMap_; }
    }

    /// <summary>Field number for the "ComMergeEatMapAB" field.</summary>
    public const int ComMergeEatMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.ComMergeEatMapABValue>.Codec _map_comMergeEatMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.ComMergeEatMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ComMergeEatMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.ComMergeEatMapABValue> comMergeEatMapAB_ = new pbc::MapField<string, global::fat.rawdata.ComMergeEatMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.ComMergeEatMapABValue> ComMergeEatMapAB {
      get { return comMergeEatMapAB_; }
    }

    /// <summary>Field number for the "ComMergeEatMapABPatch" field.</summary>
    public const int ComMergeEatMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.ComMergeEatMapABValue>.Codec _map_comMergeEatMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.ComMergeEatMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ComMergeEatMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.ComMergeEatMapABValue> comMergeEatMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.ComMergeEatMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.ComMergeEatMapABValue> ComMergeEatMapABPatch {
      get { return comMergeEatMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ComMergeEatConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ComMergeEatConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!ComMergeEatMap.Equals(other.ComMergeEatMap)) return false;
      if (!ComMergeEatMapAB.Equals(other.ComMergeEatMapAB)) return false;
      if (!ComMergeEatMapABPatch.Equals(other.ComMergeEatMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ComMergeEatMap.GetHashCode();
      hash ^= ComMergeEatMapAB.GetHashCode();
      hash ^= ComMergeEatMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      comMergeEatMap_.WriteTo(output, _map_comMergeEatMap_codec);
      comMergeEatMapAB_.WriteTo(output, _map_comMergeEatMapAB_codec);
      comMergeEatMapABPatch_.WriteTo(output, _map_comMergeEatMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      comMergeEatMap_.WriteTo(ref output, _map_comMergeEatMap_codec);
      comMergeEatMapAB_.WriteTo(ref output, _map_comMergeEatMapAB_codec);
      comMergeEatMapABPatch_.WriteTo(ref output, _map_comMergeEatMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += comMergeEatMap_.CalculateSize(_map_comMergeEatMap_codec);
      size += comMergeEatMapAB_.CalculateSize(_map_comMergeEatMapAB_codec);
      size += comMergeEatMapABPatch_.CalculateSize(_map_comMergeEatMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ComMergeEatConf other) {
      if (other == null) {
        return;
      }
      comMergeEatMap_.Add(other.comMergeEatMap_);
      comMergeEatMapAB_.Add(other.comMergeEatMapAB_);
      comMergeEatMapABPatch_.Add(other.comMergeEatMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            comMergeEatMap_.AddEntriesFrom(input, _map_comMergeEatMap_codec);
            break;
          }
          case 18: {
            comMergeEatMapAB_.AddEntriesFrom(input, _map_comMergeEatMapAB_codec);
            break;
          }
          case 26: {
            comMergeEatMapABPatch_.AddEntriesFrom(input, _map_comMergeEatMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            comMergeEatMap_.AddEntriesFrom(ref input, _map_comMergeEatMap_codec);
            break;
          }
          case 18: {
            comMergeEatMapAB_.AddEntriesFrom(ref input, _map_comMergeEatMapAB_codec);
            break;
          }
          case 26: {
            comMergeEatMapABPatch_.AddEntriesFrom(ref input, _map_comMergeEatMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
