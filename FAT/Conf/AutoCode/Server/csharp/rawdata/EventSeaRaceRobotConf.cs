// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventSeaRaceRobotConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventSeaRaceRobotConf.proto</summary>
  public static partial class EventSeaRaceRobotConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventSeaRaceRobotConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventSeaRaceRobotConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiNyYXdkYXRhL0V2ZW50U2VhUmFjZVJvYm90Q29uZi5wcm90bxIHcmF3ZGF0",
            "YSJrChFFdmVudFNlYVJhY2VSb2JvdBIKCgJpZBgBIAEoBRIQCghhZGRTY29y",
            "ZRgCIAMoBRIPCgdvZmZsaW5lGAMgAygFEhcKD29mZmxpbmVBZGRTY29yZRgE",
            "IAMoBRIOCgZvbmxpbmUYBSADKAUi1AEKG0V2ZW50U2VhUmFjZVJvYm90TWFw",
            "QUJWYWx1ZRJcChRFdmVudFNlYVJhY2VSb2JvdE1hcBgBIAMoCzI+LnJhd2Rh",
            "dGEuRXZlbnRTZWFSYWNlUm9ib3RNYXBBQlZhbHVlLkV2ZW50U2VhUmFjZVJv",
            "Ym90TWFwRW50cnkaVwoZRXZlbnRTZWFSYWNlUm9ib3RNYXBFbnRyeRILCgNr",
            "ZXkYASABKAUSKQoFdmFsdWUYAiABKAsyGi5yYXdkYXRhLkV2ZW50U2VhUmFj",
            "ZVJvYm90OgI4ASLZBAoVRXZlbnRTZWFSYWNlUm9ib3RDb25mElYKFEV2ZW50",
            "U2VhUmFjZVJvYm90TWFwGAEgAygLMjgucmF3ZGF0YS5FdmVudFNlYVJhY2VS",
            "b2JvdENvbmYuRXZlbnRTZWFSYWNlUm9ib3RNYXBFbnRyeRJaChZFdmVudFNl",
            "YVJhY2VSb2JvdE1hcEFCGAIgAygLMjoucmF3ZGF0YS5FdmVudFNlYVJhY2VS",
            "b2JvdENvbmYuRXZlbnRTZWFSYWNlUm9ib3RNYXBBQkVudHJ5EmQKG0V2ZW50",
            "U2VhUmFjZVJvYm90TWFwQUJQYXRjaBgDIAMoCzI/LnJhd2RhdGEuRXZlbnRT",
            "ZWFSYWNlUm9ib3RDb25mLkV2ZW50U2VhUmFjZVJvYm90TWFwQUJQYXRjaEVu",
            "dHJ5GlcKGUV2ZW50U2VhUmFjZVJvYm90TWFwRW50cnkSCwoDa2V5GAEgASgF",
            "EikKBXZhbHVlGAIgASgLMhoucmF3ZGF0YS5FdmVudFNlYVJhY2VSb2JvdDoC",
            "OAEaYwobRXZlbnRTZWFSYWNlUm9ib3RNYXBBQkVudHJ5EgsKA2tleRgBIAEo",
            "CRIzCgV2YWx1ZRgCIAEoCzIkLnJhd2RhdGEuRXZlbnRTZWFSYWNlUm9ib3RN",
            "YXBBQlZhbHVlOgI4ARpoCiBFdmVudFNlYVJhY2VSb2JvdE1hcEFCUGF0Y2hF",
            "bnRyeRILCgNrZXkYASABKAkSMwoFdmFsdWUYAiABKAsyJC5yYXdkYXRhLkV2",
            "ZW50U2VhUmFjZVJvYm90TWFwQUJWYWx1ZToCOAFCPVotZ2l0bGFiLmZ1bnBs",
            "dXMuaW8vZmF0L2NvbmYvZ2VuL2dvbGFuZy9yYXdkYXRhqgILZmF0LnJhd2Rh",
            "dGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventSeaRaceRobot), global::fat.rawdata.EventSeaRaceRobot.Parser, new[]{ "Id", "AddScore", "Offline", "OfflineAddScore", "Online" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventSeaRaceRobotMapABValue), global::fat.rawdata.EventSeaRaceRobotMapABValue.Parser, new[]{ "EventSeaRaceRobotMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventSeaRaceRobotConf), global::fat.rawdata.EventSeaRaceRobotConf.Parser, new[]{ "EventSeaRaceRobotMap", "EventSeaRaceRobotMapAB", "EventSeaRaceRobotMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventSeaRaceRobot",table="EventSeaRaceRobotMap",table_wrapper="EventSeaRaceRobotConf",map="true",map_key_type="int32",data="EventSeaRaceRobotConf")
  /// annotation@ab(table_ab="EventSeaRaceRobotMapAB",table_ab_patch="EventSeaRaceRobotMapABPatch",table_ab_value="EventSeaRaceRobotMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventSeaRaceRobot(id="id")
  /// </summary>
  public sealed partial class EventSeaRaceRobot : pb::IMessage<EventSeaRaceRobot>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventSeaRaceRobot> _parser = new pb::MessageParser<EventSeaRaceRobot>(() => new EventSeaRaceRobot());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventSeaRaceRobot> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventSeaRaceRobotConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventSeaRaceRobot() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventSeaRaceRobot(EventSeaRaceRobot other) : this() {
      id_ = other.id_;
      addScore_ = other.addScore_.Clone();
      offline_ = other.offline_.Clone();
      offlineAddScore_ = other.offlineAddScore_.Clone();
      online_ = other.online_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventSeaRaceRobot Clone() {
      return new EventSeaRaceRobot(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 机器人id
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "addScore" field.</summary>
    public const int AddScoreFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_addScore_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> addScore_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 在线加分
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> AddScore {
      get { return addScore_; }
    }

    /// <summary>Field number for the "offline" field.</summary>
    public const int OfflineFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_offline_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> offline_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 离线加分时间间隔
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Offline {
      get { return offline_; }
    }

    /// <summary>Field number for the "offlineAddScore" field.</summary>
    public const int OfflineAddScoreFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_offlineAddScore_codec
        = pb::FieldCodec.ForInt32(34);
    private readonly pbc::RepeatedField<int> offlineAddScore_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 离线加分
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> OfflineAddScore {
      get { return offlineAddScore_; }
    }

    /// <summary>Field number for the "online" field.</summary>
    public const int OnlineFieldNumber = 5;
    private static readonly pb::FieldCodec<int> _repeated_online_codec
        = pb::FieldCodec.ForInt32(42);
    private readonly pbc::RepeatedField<int> online_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 在线加分时间间隔
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Online {
      get { return online_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventSeaRaceRobot);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventSeaRaceRobot other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!addScore_.Equals(other.addScore_)) return false;
      if(!offline_.Equals(other.offline_)) return false;
      if(!offlineAddScore_.Equals(other.offlineAddScore_)) return false;
      if(!online_.Equals(other.online_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      hash ^= addScore_.GetHashCode();
      hash ^= offline_.GetHashCode();
      hash ^= offlineAddScore_.GetHashCode();
      hash ^= online_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      addScore_.WriteTo(output, _repeated_addScore_codec);
      offline_.WriteTo(output, _repeated_offline_codec);
      offlineAddScore_.WriteTo(output, _repeated_offlineAddScore_codec);
      online_.WriteTo(output, _repeated_online_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      addScore_.WriteTo(ref output, _repeated_addScore_codec);
      offline_.WriteTo(ref output, _repeated_offline_codec);
      offlineAddScore_.WriteTo(ref output, _repeated_offlineAddScore_codec);
      online_.WriteTo(ref output, _repeated_online_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      size += addScore_.CalculateSize(_repeated_addScore_codec);
      size += offline_.CalculateSize(_repeated_offline_codec);
      size += offlineAddScore_.CalculateSize(_repeated_offlineAddScore_codec);
      size += online_.CalculateSize(_repeated_online_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventSeaRaceRobot other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      addScore_.Add(other.addScore_);
      offline_.Add(other.offline_);
      offlineAddScore_.Add(other.offlineAddScore_);
      online_.Add(other.online_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            addScore_.AddEntriesFrom(input, _repeated_addScore_codec);
            break;
          }
          case 26:
          case 24: {
            offline_.AddEntriesFrom(input, _repeated_offline_codec);
            break;
          }
          case 34:
          case 32: {
            offlineAddScore_.AddEntriesFrom(input, _repeated_offlineAddScore_codec);
            break;
          }
          case 42:
          case 40: {
            online_.AddEntriesFrom(input, _repeated_online_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            addScore_.AddEntriesFrom(ref input, _repeated_addScore_codec);
            break;
          }
          case 26:
          case 24: {
            offline_.AddEntriesFrom(ref input, _repeated_offline_codec);
            break;
          }
          case 34:
          case 32: {
            offlineAddScore_.AddEntriesFrom(ref input, _repeated_offlineAddScore_codec);
            break;
          }
          case 42:
          case 40: {
            online_.AddEntriesFrom(ref input, _repeated_online_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventSeaRaceRobotMapABValue : pb::IMessage<EventSeaRaceRobotMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventSeaRaceRobotMapABValue> _parser = new pb::MessageParser<EventSeaRaceRobotMapABValue>(() => new EventSeaRaceRobotMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventSeaRaceRobotMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventSeaRaceRobotConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventSeaRaceRobotMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventSeaRaceRobotMapABValue(EventSeaRaceRobotMapABValue other) : this() {
      eventSeaRaceRobotMap_ = other.eventSeaRaceRobotMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventSeaRaceRobotMapABValue Clone() {
      return new EventSeaRaceRobotMapABValue(this);
    }

    /// <summary>Field number for the "EventSeaRaceRobotMap" field.</summary>
    public const int EventSeaRaceRobotMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventSeaRaceRobot>.Codec _map_eventSeaRaceRobotMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventSeaRaceRobot>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventSeaRaceRobot.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventSeaRaceRobot> eventSeaRaceRobotMap_ = new pbc::MapField<int, global::fat.rawdata.EventSeaRaceRobot>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventSeaRaceRobot> EventSeaRaceRobotMap {
      get { return eventSeaRaceRobotMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventSeaRaceRobotMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventSeaRaceRobotMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventSeaRaceRobotMap.Equals(other.EventSeaRaceRobotMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventSeaRaceRobotMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventSeaRaceRobotMap_.WriteTo(output, _map_eventSeaRaceRobotMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventSeaRaceRobotMap_.WriteTo(ref output, _map_eventSeaRaceRobotMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventSeaRaceRobotMap_.CalculateSize(_map_eventSeaRaceRobotMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventSeaRaceRobotMapABValue other) {
      if (other == null) {
        return;
      }
      eventSeaRaceRobotMap_.Add(other.eventSeaRaceRobotMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventSeaRaceRobotMap_.AddEntriesFrom(input, _map_eventSeaRaceRobotMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventSeaRaceRobotMap_.AddEntriesFrom(ref input, _map_eventSeaRaceRobotMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventSeaRaceRobotConf : pb::IMessage<EventSeaRaceRobotConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventSeaRaceRobotConf> _parser = new pb::MessageParser<EventSeaRaceRobotConf>(() => new EventSeaRaceRobotConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventSeaRaceRobotConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventSeaRaceRobotConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventSeaRaceRobotConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventSeaRaceRobotConf(EventSeaRaceRobotConf other) : this() {
      eventSeaRaceRobotMap_ = other.eventSeaRaceRobotMap_.Clone();
      eventSeaRaceRobotMapAB_ = other.eventSeaRaceRobotMapAB_.Clone();
      eventSeaRaceRobotMapABPatch_ = other.eventSeaRaceRobotMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventSeaRaceRobotConf Clone() {
      return new EventSeaRaceRobotConf(this);
    }

    /// <summary>Field number for the "EventSeaRaceRobotMap" field.</summary>
    public const int EventSeaRaceRobotMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventSeaRaceRobot>.Codec _map_eventSeaRaceRobotMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventSeaRaceRobot>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventSeaRaceRobot.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventSeaRaceRobot> eventSeaRaceRobotMap_ = new pbc::MapField<int, global::fat.rawdata.EventSeaRaceRobot>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventSeaRaceRobot> EventSeaRaceRobotMap {
      get { return eventSeaRaceRobotMap_; }
    }

    /// <summary>Field number for the "EventSeaRaceRobotMapAB" field.</summary>
    public const int EventSeaRaceRobotMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventSeaRaceRobotMapABValue>.Codec _map_eventSeaRaceRobotMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventSeaRaceRobotMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventSeaRaceRobotMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventSeaRaceRobotMapABValue> eventSeaRaceRobotMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventSeaRaceRobotMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventSeaRaceRobotMapABValue> EventSeaRaceRobotMapAB {
      get { return eventSeaRaceRobotMapAB_; }
    }

    /// <summary>Field number for the "EventSeaRaceRobotMapABPatch" field.</summary>
    public const int EventSeaRaceRobotMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventSeaRaceRobotMapABValue>.Codec _map_eventSeaRaceRobotMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventSeaRaceRobotMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventSeaRaceRobotMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventSeaRaceRobotMapABValue> eventSeaRaceRobotMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventSeaRaceRobotMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventSeaRaceRobotMapABValue> EventSeaRaceRobotMapABPatch {
      get { return eventSeaRaceRobotMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventSeaRaceRobotConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventSeaRaceRobotConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventSeaRaceRobotMap.Equals(other.EventSeaRaceRobotMap)) return false;
      if (!EventSeaRaceRobotMapAB.Equals(other.EventSeaRaceRobotMapAB)) return false;
      if (!EventSeaRaceRobotMapABPatch.Equals(other.EventSeaRaceRobotMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventSeaRaceRobotMap.GetHashCode();
      hash ^= EventSeaRaceRobotMapAB.GetHashCode();
      hash ^= EventSeaRaceRobotMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventSeaRaceRobotMap_.WriteTo(output, _map_eventSeaRaceRobotMap_codec);
      eventSeaRaceRobotMapAB_.WriteTo(output, _map_eventSeaRaceRobotMapAB_codec);
      eventSeaRaceRobotMapABPatch_.WriteTo(output, _map_eventSeaRaceRobotMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventSeaRaceRobotMap_.WriteTo(ref output, _map_eventSeaRaceRobotMap_codec);
      eventSeaRaceRobotMapAB_.WriteTo(ref output, _map_eventSeaRaceRobotMapAB_codec);
      eventSeaRaceRobotMapABPatch_.WriteTo(ref output, _map_eventSeaRaceRobotMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventSeaRaceRobotMap_.CalculateSize(_map_eventSeaRaceRobotMap_codec);
      size += eventSeaRaceRobotMapAB_.CalculateSize(_map_eventSeaRaceRobotMapAB_codec);
      size += eventSeaRaceRobotMapABPatch_.CalculateSize(_map_eventSeaRaceRobotMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventSeaRaceRobotConf other) {
      if (other == null) {
        return;
      }
      eventSeaRaceRobotMap_.Add(other.eventSeaRaceRobotMap_);
      eventSeaRaceRobotMapAB_.Add(other.eventSeaRaceRobotMapAB_);
      eventSeaRaceRobotMapABPatch_.Add(other.eventSeaRaceRobotMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventSeaRaceRobotMap_.AddEntriesFrom(input, _map_eventSeaRaceRobotMap_codec);
            break;
          }
          case 18: {
            eventSeaRaceRobotMapAB_.AddEntriesFrom(input, _map_eventSeaRaceRobotMapAB_codec);
            break;
          }
          case 26: {
            eventSeaRaceRobotMapABPatch_.AddEntriesFrom(input, _map_eventSeaRaceRobotMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventSeaRaceRobotMap_.AddEntriesFrom(ref input, _map_eventSeaRaceRobotMap_codec);
            break;
          }
          case 18: {
            eventSeaRaceRobotMapAB_.AddEntriesFrom(ref input, _map_eventSeaRaceRobotMapAB_codec);
            break;
          }
          case 26: {
            eventSeaRaceRobotMapABPatch_.AddEntriesFrom(ref input, _map_eventSeaRaceRobotMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
