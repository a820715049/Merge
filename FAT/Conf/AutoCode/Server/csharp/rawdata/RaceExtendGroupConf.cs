// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/RaceExtendGroupConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/RaceExtendGroupConf.proto</summary>
  public static partial class RaceExtendGroupConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/RaceExtendGroupConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RaceExtendGroupConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiFyYXdkYXRhL1JhY2VFeHRlbmRHcm91cENvbmYucHJvdG8SB3Jhd2RhdGEi",
            "OAoPUmFjZUV4dGVuZEdyb3VwEgoKAmlkGAEgASgFEhkKEWluY2x1ZGVSb3Vu",
            "ZEdycElkGAIgASgFIsgBChlSYWNlRXh0ZW5kR3JvdXBNYXBBQlZhbHVlElYK",
            "ElJhY2VFeHRlbmRHcm91cE1hcBgBIAMoCzI6LnJhd2RhdGEuUmFjZUV4dGVu",
            "ZEdyb3VwTWFwQUJWYWx1ZS5SYWNlRXh0ZW5kR3JvdXBNYXBFbnRyeRpTChdS",
            "YWNlRXh0ZW5kR3JvdXBNYXBFbnRyeRILCgNrZXkYASABKAUSJwoFdmFsdWUY",
            "AiABKAsyGC5yYXdkYXRhLlJhY2VFeHRlbmRHcm91cDoCOAEiuQQKE1JhY2VF",
            "eHRlbmRHcm91cENvbmYSUAoSUmFjZUV4dGVuZEdyb3VwTWFwGAEgAygLMjQu",
            "cmF3ZGF0YS5SYWNlRXh0ZW5kR3JvdXBDb25mLlJhY2VFeHRlbmRHcm91cE1h",
            "cEVudHJ5ElQKFFJhY2VFeHRlbmRHcm91cE1hcEFCGAIgAygLMjYucmF3ZGF0",
            "YS5SYWNlRXh0ZW5kR3JvdXBDb25mLlJhY2VFeHRlbmRHcm91cE1hcEFCRW50",
            "cnkSXgoZUmFjZUV4dGVuZEdyb3VwTWFwQUJQYXRjaBgDIAMoCzI7LnJhd2Rh",
            "dGEuUmFjZUV4dGVuZEdyb3VwQ29uZi5SYWNlRXh0ZW5kR3JvdXBNYXBBQlBh",
            "dGNoRW50cnkaUwoXUmFjZUV4dGVuZEdyb3VwTWFwRW50cnkSCwoDa2V5GAEg",
            "ASgFEicKBXZhbHVlGAIgASgLMhgucmF3ZGF0YS5SYWNlRXh0ZW5kR3JvdXA6",
            "AjgBGl8KGVJhY2VFeHRlbmRHcm91cE1hcEFCRW50cnkSCwoDa2V5GAEgASgJ",
            "EjEKBXZhbHVlGAIgASgLMiIucmF3ZGF0YS5SYWNlRXh0ZW5kR3JvdXBNYXBB",
            "QlZhbHVlOgI4ARpkCh5SYWNlRXh0ZW5kR3JvdXBNYXBBQlBhdGNoRW50cnkS",
            "CwoDa2V5GAEgASgJEjEKBXZhbHVlGAIgASgLMiIucmF3ZGF0YS5SYWNlRXh0",
            "ZW5kR3JvdXBNYXBBQlZhbHVlOgI4AUI9Wi1naXRsYWIuZnVucGx1cy5pby9m",
            "YXQvY29uZi9nZW4vZ29sYW5nL3Jhd2RhdGGqAgtmYXQucmF3ZGF0YWIGcHJv",
            "dG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.RaceExtendGroup), global::fat.rawdata.RaceExtendGroup.Parser, new[]{ "Id", "IncludeRoundGrpId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.RaceExtendGroupMapABValue), global::fat.rawdata.RaceExtendGroupMapABValue.Parser, new[]{ "RaceExtendGroupMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.RaceExtendGroupConf), global::fat.rawdata.RaceExtendGroupConf.Parser, new[]{ "RaceExtendGroupMap", "RaceExtendGroupMapAB", "RaceExtendGroupMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="RaceExtendGroup",table="RaceExtendGroupMap",table_wrapper="RaceExtendGroupConf",map="true",map_key_type="int32",data="RaceExtendGroupConf")
  /// annotation@ab(table_ab="RaceExtendGroupMapAB",table_ab_patch="RaceExtendGroupMapABPatch",table_ab_value="RaceExtendGroupMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@RaceExtendGroup(id="id")
  /// </summary>
  public sealed partial class RaceExtendGroup : pb::IMessage<RaceExtendGroup>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RaceExtendGroup> _parser = new pb::MessageParser<RaceExtendGroup>(() => new RaceExtendGroup());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RaceExtendGroup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.RaceExtendGroupConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RaceExtendGroup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RaceExtendGroup(RaceExtendGroup other) : this() {
      id_ = other.id_;
      includeRoundGrpId_ = other.includeRoundGrpId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RaceExtendGroup Clone() {
      return new RaceExtendGroup(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 回合ID
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "includeRoundGrpId" field.</summary>
    public const int IncludeRoundGrpIdFieldNumber = 2;
    private int includeRoundGrpId_;
    /// <summary>
    /// GradeIndexMapping.id
    /// EventRaceRound.id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IncludeRoundGrpId {
      get { return includeRoundGrpId_; }
      set {
        includeRoundGrpId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RaceExtendGroup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RaceExtendGroup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (IncludeRoundGrpId != other.IncludeRoundGrpId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (IncludeRoundGrpId != 0) hash ^= IncludeRoundGrpId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (IncludeRoundGrpId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(IncludeRoundGrpId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (IncludeRoundGrpId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(IncludeRoundGrpId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (IncludeRoundGrpId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IncludeRoundGrpId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RaceExtendGroup other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.IncludeRoundGrpId != 0) {
        IncludeRoundGrpId = other.IncludeRoundGrpId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            IncludeRoundGrpId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            IncludeRoundGrpId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RaceExtendGroupMapABValue : pb::IMessage<RaceExtendGroupMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RaceExtendGroupMapABValue> _parser = new pb::MessageParser<RaceExtendGroupMapABValue>(() => new RaceExtendGroupMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RaceExtendGroupMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.RaceExtendGroupConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RaceExtendGroupMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RaceExtendGroupMapABValue(RaceExtendGroupMapABValue other) : this() {
      raceExtendGroupMap_ = other.raceExtendGroupMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RaceExtendGroupMapABValue Clone() {
      return new RaceExtendGroupMapABValue(this);
    }

    /// <summary>Field number for the "RaceExtendGroupMap" field.</summary>
    public const int RaceExtendGroupMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.RaceExtendGroup>.Codec _map_raceExtendGroupMap_codec
        = new pbc::MapField<int, global::fat.rawdata.RaceExtendGroup>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.RaceExtendGroup.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.RaceExtendGroup> raceExtendGroupMap_ = new pbc::MapField<int, global::fat.rawdata.RaceExtendGroup>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.RaceExtendGroup> RaceExtendGroupMap {
      get { return raceExtendGroupMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RaceExtendGroupMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RaceExtendGroupMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!RaceExtendGroupMap.Equals(other.RaceExtendGroupMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= RaceExtendGroupMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      raceExtendGroupMap_.WriteTo(output, _map_raceExtendGroupMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      raceExtendGroupMap_.WriteTo(ref output, _map_raceExtendGroupMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += raceExtendGroupMap_.CalculateSize(_map_raceExtendGroupMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RaceExtendGroupMapABValue other) {
      if (other == null) {
        return;
      }
      raceExtendGroupMap_.Add(other.raceExtendGroupMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            raceExtendGroupMap_.AddEntriesFrom(input, _map_raceExtendGroupMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            raceExtendGroupMap_.AddEntriesFrom(ref input, _map_raceExtendGroupMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RaceExtendGroupConf : pb::IMessage<RaceExtendGroupConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RaceExtendGroupConf> _parser = new pb::MessageParser<RaceExtendGroupConf>(() => new RaceExtendGroupConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RaceExtendGroupConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.RaceExtendGroupConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RaceExtendGroupConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RaceExtendGroupConf(RaceExtendGroupConf other) : this() {
      raceExtendGroupMap_ = other.raceExtendGroupMap_.Clone();
      raceExtendGroupMapAB_ = other.raceExtendGroupMapAB_.Clone();
      raceExtendGroupMapABPatch_ = other.raceExtendGroupMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RaceExtendGroupConf Clone() {
      return new RaceExtendGroupConf(this);
    }

    /// <summary>Field number for the "RaceExtendGroupMap" field.</summary>
    public const int RaceExtendGroupMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.RaceExtendGroup>.Codec _map_raceExtendGroupMap_codec
        = new pbc::MapField<int, global::fat.rawdata.RaceExtendGroup>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.RaceExtendGroup.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.RaceExtendGroup> raceExtendGroupMap_ = new pbc::MapField<int, global::fat.rawdata.RaceExtendGroup>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.RaceExtendGroup> RaceExtendGroupMap {
      get { return raceExtendGroupMap_; }
    }

    /// <summary>Field number for the "RaceExtendGroupMapAB" field.</summary>
    public const int RaceExtendGroupMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.RaceExtendGroupMapABValue>.Codec _map_raceExtendGroupMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.RaceExtendGroupMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.RaceExtendGroupMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.RaceExtendGroupMapABValue> raceExtendGroupMapAB_ = new pbc::MapField<string, global::fat.rawdata.RaceExtendGroupMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.RaceExtendGroupMapABValue> RaceExtendGroupMapAB {
      get { return raceExtendGroupMapAB_; }
    }

    /// <summary>Field number for the "RaceExtendGroupMapABPatch" field.</summary>
    public const int RaceExtendGroupMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.RaceExtendGroupMapABValue>.Codec _map_raceExtendGroupMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.RaceExtendGroupMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.RaceExtendGroupMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.RaceExtendGroupMapABValue> raceExtendGroupMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.RaceExtendGroupMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.RaceExtendGroupMapABValue> RaceExtendGroupMapABPatch {
      get { return raceExtendGroupMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RaceExtendGroupConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RaceExtendGroupConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!RaceExtendGroupMap.Equals(other.RaceExtendGroupMap)) return false;
      if (!RaceExtendGroupMapAB.Equals(other.RaceExtendGroupMapAB)) return false;
      if (!RaceExtendGroupMapABPatch.Equals(other.RaceExtendGroupMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= RaceExtendGroupMap.GetHashCode();
      hash ^= RaceExtendGroupMapAB.GetHashCode();
      hash ^= RaceExtendGroupMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      raceExtendGroupMap_.WriteTo(output, _map_raceExtendGroupMap_codec);
      raceExtendGroupMapAB_.WriteTo(output, _map_raceExtendGroupMapAB_codec);
      raceExtendGroupMapABPatch_.WriteTo(output, _map_raceExtendGroupMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      raceExtendGroupMap_.WriteTo(ref output, _map_raceExtendGroupMap_codec);
      raceExtendGroupMapAB_.WriteTo(ref output, _map_raceExtendGroupMapAB_codec);
      raceExtendGroupMapABPatch_.WriteTo(ref output, _map_raceExtendGroupMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += raceExtendGroupMap_.CalculateSize(_map_raceExtendGroupMap_codec);
      size += raceExtendGroupMapAB_.CalculateSize(_map_raceExtendGroupMapAB_codec);
      size += raceExtendGroupMapABPatch_.CalculateSize(_map_raceExtendGroupMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RaceExtendGroupConf other) {
      if (other == null) {
        return;
      }
      raceExtendGroupMap_.Add(other.raceExtendGroupMap_);
      raceExtendGroupMapAB_.Add(other.raceExtendGroupMapAB_);
      raceExtendGroupMapABPatch_.Add(other.raceExtendGroupMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            raceExtendGroupMap_.AddEntriesFrom(input, _map_raceExtendGroupMap_codec);
            break;
          }
          case 18: {
            raceExtendGroupMapAB_.AddEntriesFrom(input, _map_raceExtendGroupMapAB_codec);
            break;
          }
          case 26: {
            raceExtendGroupMapABPatch_.AddEntriesFrom(input, _map_raceExtendGroupMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            raceExtendGroupMap_.AddEntriesFrom(ref input, _map_raceExtendGroupMap_codec);
            break;
          }
          case 18: {
            raceExtendGroupMapAB_.AddEntriesFrom(ref input, _map_raceExtendGroupMapAB_codec);
            break;
          }
          case 26: {
            raceExtendGroupMapABPatch_.AddEntriesFrom(ref input, _map_raceExtendGroupMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
