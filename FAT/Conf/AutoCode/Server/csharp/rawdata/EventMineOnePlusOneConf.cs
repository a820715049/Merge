// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventMineOnePlusOneConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventMineOnePlusOneConf.proto</summary>
  public static partial class EventMineOnePlusOneConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventMineOnePlusOneConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventMineOnePlusOneConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiVyYXdkYXRhL0V2ZW50TWluZU9uZVBsdXNPbmVDb25mLnByb3RvEgdyYXdk",
            "YXRhIlsKE0V2ZW50TWluZU9uZVBsdXNPbmUSCgoCaWQYASABKAUSEgoKZXZl",
            "bnRUaGVtZRgCIAEoBRIRCglmcmVlR3JwSWQYAyABKAUSEQoJcGFja0dycElk",
            "GAQgASgFIuABCh1FdmVudE1pbmVPbmVQbHVzT25lTWFwQUJWYWx1ZRJiChZF",
            "dmVudE1pbmVPbmVQbHVzT25lTWFwGAEgAygLMkIucmF3ZGF0YS5FdmVudE1p",
            "bmVPbmVQbHVzT25lTWFwQUJWYWx1ZS5FdmVudE1pbmVPbmVQbHVzT25lTWFw",
            "RW50cnkaWwobRXZlbnRNaW5lT25lUGx1c09uZU1hcEVudHJ5EgsKA2tleRgB",
            "IAEoBRIrCgV2YWx1ZRgCIAEoCzIcLnJhd2RhdGEuRXZlbnRNaW5lT25lUGx1",
            "c09uZToCOAEi+QQKF0V2ZW50TWluZU9uZVBsdXNPbmVDb25mElwKFkV2ZW50",
            "TWluZU9uZVBsdXNPbmVNYXAYASADKAsyPC5yYXdkYXRhLkV2ZW50TWluZU9u",
            "ZVBsdXNPbmVDb25mLkV2ZW50TWluZU9uZVBsdXNPbmVNYXBFbnRyeRJgChhF",
            "dmVudE1pbmVPbmVQbHVzT25lTWFwQUIYAiADKAsyPi5yYXdkYXRhLkV2ZW50",
            "TWluZU9uZVBsdXNPbmVDb25mLkV2ZW50TWluZU9uZVBsdXNPbmVNYXBBQkVu",
            "dHJ5EmoKHUV2ZW50TWluZU9uZVBsdXNPbmVNYXBBQlBhdGNoGAMgAygLMkMu",
            "cmF3ZGF0YS5FdmVudE1pbmVPbmVQbHVzT25lQ29uZi5FdmVudE1pbmVPbmVQ",
            "bHVzT25lTWFwQUJQYXRjaEVudHJ5GlsKG0V2ZW50TWluZU9uZVBsdXNPbmVN",
            "YXBFbnRyeRILCgNrZXkYASABKAUSKwoFdmFsdWUYAiABKAsyHC5yYXdkYXRh",
            "LkV2ZW50TWluZU9uZVBsdXNPbmU6AjgBGmcKHUV2ZW50TWluZU9uZVBsdXNP",
            "bmVNYXBBQkVudHJ5EgsKA2tleRgBIAEoCRI1CgV2YWx1ZRgCIAEoCzImLnJh",
            "d2RhdGEuRXZlbnRNaW5lT25lUGx1c09uZU1hcEFCVmFsdWU6AjgBGmwKIkV2",
            "ZW50TWluZU9uZVBsdXNPbmVNYXBBQlBhdGNoRW50cnkSCwoDa2V5GAEgASgJ",
            "EjUKBXZhbHVlGAIgASgLMiYucmF3ZGF0YS5FdmVudE1pbmVPbmVQbHVzT25l",
            "TWFwQUJWYWx1ZToCOAFCPVotZ2l0bGFiLmZ1bnBsdXMuaW8vZmF0L2NvbmYv",
            "Z2VuL2dvbGFuZy9yYXdkYXRhqgILZmF0LnJhd2RhdGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventMineOnePlusOne), global::fat.rawdata.EventMineOnePlusOne.Parser, new[]{ "Id", "EventTheme", "FreeGrpId", "PackGrpId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventMineOnePlusOneMapABValue), global::fat.rawdata.EventMineOnePlusOneMapABValue.Parser, new[]{ "EventMineOnePlusOneMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventMineOnePlusOneConf), global::fat.rawdata.EventMineOnePlusOneConf.Parser, new[]{ "EventMineOnePlusOneMap", "EventMineOnePlusOneMapAB", "EventMineOnePlusOneMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventMineOnePlusOne",table="EventMineOnePlusOneMap",table_wrapper="EventMineOnePlusOneConf",map="true",map_key_type="int32",data="EventMineOnePlusOneConf")
  /// annotation@ab(table_ab="EventMineOnePlusOneMapAB",table_ab_patch="EventMineOnePlusOneMapABPatch",table_ab_value="EventMineOnePlusOneMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventMineOnePlusOne(id="id")
  /// </summary>
  public sealed partial class EventMineOnePlusOne : pb::IMessage<EventMineOnePlusOne>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventMineOnePlusOne> _parser = new pb::MessageParser<EventMineOnePlusOne>(() => new EventMineOnePlusOne());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventMineOnePlusOne> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventMineOnePlusOneConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMineOnePlusOne() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMineOnePlusOne(EventMineOnePlusOne other) : this() {
      id_ = other.id_;
      eventTheme_ = other.eventTheme_;
      freeGrpId_ = other.freeGrpId_;
      packGrpId_ = other.packGrpId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMineOnePlusOne Clone() {
      return new EventMineOnePlusOne(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 1+1礼包
    /// 模板ID
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "eventTheme" field.</summary>
    public const int EventThemeFieldNumber = 2;
    private int eventTheme_;
    /// <summary>
    /// 活动弹板ID
    /// （EventTheme.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EventTheme {
      get { return eventTheme_; }
      set {
        eventTheme_ = value;
      }
    }

    /// <summary>Field number for the "freeGrpId" field.</summary>
    public const int FreeGrpIdFieldNumber = 3;
    private int freeGrpId_;
    /// <summary>
    /// 赠品ID
    /// （受档位组控制）
    /// （GradeIndexMapping.id）
    /// （IAPFree.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FreeGrpId {
      get { return freeGrpId_; }
      set {
        freeGrpId_ = value;
      }
    }

    /// <summary>Field number for the "packGrpId" field.</summary>
    public const int PackGrpIdFieldNumber = 4;
    private int packGrpId_;
    /// <summary>
    /// 内购商品ID
    /// （受档位组控制）
    /// （GradeIndexMapping.id）
    /// （IAPPack.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PackGrpId {
      get { return packGrpId_; }
      set {
        packGrpId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventMineOnePlusOne);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventMineOnePlusOne other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (EventTheme != other.EventTheme) return false;
      if (FreeGrpId != other.FreeGrpId) return false;
      if (PackGrpId != other.PackGrpId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (EventTheme != 0) hash ^= EventTheme.GetHashCode();
      if (FreeGrpId != 0) hash ^= FreeGrpId.GetHashCode();
      if (PackGrpId != 0) hash ^= PackGrpId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (EventTheme != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(EventTheme);
      }
      if (FreeGrpId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(FreeGrpId);
      }
      if (PackGrpId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(PackGrpId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (EventTheme != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(EventTheme);
      }
      if (FreeGrpId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(FreeGrpId);
      }
      if (PackGrpId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(PackGrpId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (EventTheme != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EventTheme);
      }
      if (FreeGrpId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FreeGrpId);
      }
      if (PackGrpId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PackGrpId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventMineOnePlusOne other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.EventTheme != 0) {
        EventTheme = other.EventTheme;
      }
      if (other.FreeGrpId != 0) {
        FreeGrpId = other.FreeGrpId;
      }
      if (other.PackGrpId != 0) {
        PackGrpId = other.PackGrpId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            EventTheme = input.ReadInt32();
            break;
          }
          case 24: {
            FreeGrpId = input.ReadInt32();
            break;
          }
          case 32: {
            PackGrpId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            EventTheme = input.ReadInt32();
            break;
          }
          case 24: {
            FreeGrpId = input.ReadInt32();
            break;
          }
          case 32: {
            PackGrpId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventMineOnePlusOneMapABValue : pb::IMessage<EventMineOnePlusOneMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventMineOnePlusOneMapABValue> _parser = new pb::MessageParser<EventMineOnePlusOneMapABValue>(() => new EventMineOnePlusOneMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventMineOnePlusOneMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventMineOnePlusOneConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMineOnePlusOneMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMineOnePlusOneMapABValue(EventMineOnePlusOneMapABValue other) : this() {
      eventMineOnePlusOneMap_ = other.eventMineOnePlusOneMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMineOnePlusOneMapABValue Clone() {
      return new EventMineOnePlusOneMapABValue(this);
    }

    /// <summary>Field number for the "EventMineOnePlusOneMap" field.</summary>
    public const int EventMineOnePlusOneMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventMineOnePlusOne>.Codec _map_eventMineOnePlusOneMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventMineOnePlusOne>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventMineOnePlusOne.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventMineOnePlusOne> eventMineOnePlusOneMap_ = new pbc::MapField<int, global::fat.rawdata.EventMineOnePlusOne>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventMineOnePlusOne> EventMineOnePlusOneMap {
      get { return eventMineOnePlusOneMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventMineOnePlusOneMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventMineOnePlusOneMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventMineOnePlusOneMap.Equals(other.EventMineOnePlusOneMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventMineOnePlusOneMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventMineOnePlusOneMap_.WriteTo(output, _map_eventMineOnePlusOneMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventMineOnePlusOneMap_.WriteTo(ref output, _map_eventMineOnePlusOneMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventMineOnePlusOneMap_.CalculateSize(_map_eventMineOnePlusOneMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventMineOnePlusOneMapABValue other) {
      if (other == null) {
        return;
      }
      eventMineOnePlusOneMap_.Add(other.eventMineOnePlusOneMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventMineOnePlusOneMap_.AddEntriesFrom(input, _map_eventMineOnePlusOneMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventMineOnePlusOneMap_.AddEntriesFrom(ref input, _map_eventMineOnePlusOneMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventMineOnePlusOneConf : pb::IMessage<EventMineOnePlusOneConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventMineOnePlusOneConf> _parser = new pb::MessageParser<EventMineOnePlusOneConf>(() => new EventMineOnePlusOneConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventMineOnePlusOneConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventMineOnePlusOneConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMineOnePlusOneConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMineOnePlusOneConf(EventMineOnePlusOneConf other) : this() {
      eventMineOnePlusOneMap_ = other.eventMineOnePlusOneMap_.Clone();
      eventMineOnePlusOneMapAB_ = other.eventMineOnePlusOneMapAB_.Clone();
      eventMineOnePlusOneMapABPatch_ = other.eventMineOnePlusOneMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMineOnePlusOneConf Clone() {
      return new EventMineOnePlusOneConf(this);
    }

    /// <summary>Field number for the "EventMineOnePlusOneMap" field.</summary>
    public const int EventMineOnePlusOneMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventMineOnePlusOne>.Codec _map_eventMineOnePlusOneMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventMineOnePlusOne>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventMineOnePlusOne.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventMineOnePlusOne> eventMineOnePlusOneMap_ = new pbc::MapField<int, global::fat.rawdata.EventMineOnePlusOne>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventMineOnePlusOne> EventMineOnePlusOneMap {
      get { return eventMineOnePlusOneMap_; }
    }

    /// <summary>Field number for the "EventMineOnePlusOneMapAB" field.</summary>
    public const int EventMineOnePlusOneMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventMineOnePlusOneMapABValue>.Codec _map_eventMineOnePlusOneMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventMineOnePlusOneMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventMineOnePlusOneMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventMineOnePlusOneMapABValue> eventMineOnePlusOneMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventMineOnePlusOneMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventMineOnePlusOneMapABValue> EventMineOnePlusOneMapAB {
      get { return eventMineOnePlusOneMapAB_; }
    }

    /// <summary>Field number for the "EventMineOnePlusOneMapABPatch" field.</summary>
    public const int EventMineOnePlusOneMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventMineOnePlusOneMapABValue>.Codec _map_eventMineOnePlusOneMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventMineOnePlusOneMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventMineOnePlusOneMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventMineOnePlusOneMapABValue> eventMineOnePlusOneMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventMineOnePlusOneMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventMineOnePlusOneMapABValue> EventMineOnePlusOneMapABPatch {
      get { return eventMineOnePlusOneMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventMineOnePlusOneConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventMineOnePlusOneConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventMineOnePlusOneMap.Equals(other.EventMineOnePlusOneMap)) return false;
      if (!EventMineOnePlusOneMapAB.Equals(other.EventMineOnePlusOneMapAB)) return false;
      if (!EventMineOnePlusOneMapABPatch.Equals(other.EventMineOnePlusOneMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventMineOnePlusOneMap.GetHashCode();
      hash ^= EventMineOnePlusOneMapAB.GetHashCode();
      hash ^= EventMineOnePlusOneMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventMineOnePlusOneMap_.WriteTo(output, _map_eventMineOnePlusOneMap_codec);
      eventMineOnePlusOneMapAB_.WriteTo(output, _map_eventMineOnePlusOneMapAB_codec);
      eventMineOnePlusOneMapABPatch_.WriteTo(output, _map_eventMineOnePlusOneMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventMineOnePlusOneMap_.WriteTo(ref output, _map_eventMineOnePlusOneMap_codec);
      eventMineOnePlusOneMapAB_.WriteTo(ref output, _map_eventMineOnePlusOneMapAB_codec);
      eventMineOnePlusOneMapABPatch_.WriteTo(ref output, _map_eventMineOnePlusOneMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventMineOnePlusOneMap_.CalculateSize(_map_eventMineOnePlusOneMap_codec);
      size += eventMineOnePlusOneMapAB_.CalculateSize(_map_eventMineOnePlusOneMapAB_codec);
      size += eventMineOnePlusOneMapABPatch_.CalculateSize(_map_eventMineOnePlusOneMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventMineOnePlusOneConf other) {
      if (other == null) {
        return;
      }
      eventMineOnePlusOneMap_.Add(other.eventMineOnePlusOneMap_);
      eventMineOnePlusOneMapAB_.Add(other.eventMineOnePlusOneMapAB_);
      eventMineOnePlusOneMapABPatch_.Add(other.eventMineOnePlusOneMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventMineOnePlusOneMap_.AddEntriesFrom(input, _map_eventMineOnePlusOneMap_codec);
            break;
          }
          case 18: {
            eventMineOnePlusOneMapAB_.AddEntriesFrom(input, _map_eventMineOnePlusOneMapAB_codec);
            break;
          }
          case 26: {
            eventMineOnePlusOneMapABPatch_.AddEntriesFrom(input, _map_eventMineOnePlusOneMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventMineOnePlusOneMap_.AddEntriesFrom(ref input, _map_eventMineOnePlusOneMap_codec);
            break;
          }
          case 18: {
            eventMineOnePlusOneMapAB_.AddEntriesFrom(ref input, _map_eventMineOnePlusOneMapAB_codec);
            break;
          }
          case 26: {
            eventMineOnePlusOneMapABPatch_.AddEntriesFrom(ref input, _map_eventMineOnePlusOneMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
