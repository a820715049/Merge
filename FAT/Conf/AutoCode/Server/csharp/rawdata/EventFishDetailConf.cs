// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventFishDetailConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventFishDetailConf.proto</summary>
  public static partial class EventFishDetailConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventFishDetailConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventFishDetailConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiFyYXdkYXRhL0V2ZW50RmlzaERldGFpbENvbmYucHJvdG8SB3Jhd2RhdGEi",
            "eQoPRXZlbnRGaXNoRGV0YWlsEgoKAmlkGAEgASgFEg8KB2JvYXJkSWQYAiAB",
            "KAUSFQoNY29sbGVjdGZpc2hJZBgDIAMoBRIMCgRkaWZmGAQgASgFEhAKCGZy",
            "ZWVJdGVtGAcgAygFEhIKCm1pbGVzdG9uZXMYCCADKAUiyAEKGUV2ZW50Rmlz",
            "aERldGFpbE1hcEFCVmFsdWUSVgoSRXZlbnRGaXNoRGV0YWlsTWFwGAEgAygL",
            "MjoucmF3ZGF0YS5FdmVudEZpc2hEZXRhaWxNYXBBQlZhbHVlLkV2ZW50Rmlz",
            "aERldGFpbE1hcEVudHJ5GlMKF0V2ZW50RmlzaERldGFpbE1hcEVudHJ5EgsK",
            "A2tleRgBIAEoBRInCgV2YWx1ZRgCIAEoCzIYLnJhd2RhdGEuRXZlbnRGaXNo",
            "RGV0YWlsOgI4ASK5BAoTRXZlbnRGaXNoRGV0YWlsQ29uZhJQChJFdmVudEZp",
            "c2hEZXRhaWxNYXAYASADKAsyNC5yYXdkYXRhLkV2ZW50RmlzaERldGFpbENv",
            "bmYuRXZlbnRGaXNoRGV0YWlsTWFwRW50cnkSVAoURXZlbnRGaXNoRGV0YWls",
            "TWFwQUIYAiADKAsyNi5yYXdkYXRhLkV2ZW50RmlzaERldGFpbENvbmYuRXZl",
            "bnRGaXNoRGV0YWlsTWFwQUJFbnRyeRJeChlFdmVudEZpc2hEZXRhaWxNYXBB",
            "QlBhdGNoGAMgAygLMjsucmF3ZGF0YS5FdmVudEZpc2hEZXRhaWxDb25mLkV2",
            "ZW50RmlzaERldGFpbE1hcEFCUGF0Y2hFbnRyeRpTChdFdmVudEZpc2hEZXRh",
            "aWxNYXBFbnRyeRILCgNrZXkYASABKAUSJwoFdmFsdWUYAiABKAsyGC5yYXdk",
            "YXRhLkV2ZW50RmlzaERldGFpbDoCOAEaXwoZRXZlbnRGaXNoRGV0YWlsTWFw",
            "QUJFbnRyeRILCgNrZXkYASABKAkSMQoFdmFsdWUYAiABKAsyIi5yYXdkYXRh",
            "LkV2ZW50RmlzaERldGFpbE1hcEFCVmFsdWU6AjgBGmQKHkV2ZW50RmlzaERl",
            "dGFpbE1hcEFCUGF0Y2hFbnRyeRILCgNrZXkYASABKAkSMQoFdmFsdWUYAiAB",
            "KAsyIi5yYXdkYXRhLkV2ZW50RmlzaERldGFpbE1hcEFCVmFsdWU6AjgBQj1a",
            "LWdpdGxhYi5mdW5wbHVzLmlvL2ZhdC9jb25mL2dlbi9nb2xhbmcvcmF3ZGF0",
            "YaoCC2ZhdC5yYXdkYXRhYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventFishDetail), global::fat.rawdata.EventFishDetail.Parser, new[]{ "Id", "BoardId", "CollectfishId", "Diff", "FreeItem", "Milestones" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventFishDetailMapABValue), global::fat.rawdata.EventFishDetailMapABValue.Parser, new[]{ "EventFishDetailMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventFishDetailConf), global::fat.rawdata.EventFishDetailConf.Parser, new[]{ "EventFishDetailMap", "EventFishDetailMapAB", "EventFishDetailMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventFishDetail",table="EventFishDetailMap",table_wrapper="EventFishDetailConf",map="true",map_key_type="int32",data="EventFishDetailConf")
  /// annotation@ab(table_ab="EventFishDetailMapAB",table_ab_patch="EventFishDetailMapABPatch",table_ab_value="EventFishDetailMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventFishDetail(id="id")
  /// </summary>
  public sealed partial class EventFishDetail : pb::IMessage<EventFishDetail>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventFishDetail> _parser = new pb::MessageParser<EventFishDetail>(() => new EventFishDetail());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventFishDetail> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventFishDetailConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventFishDetail() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventFishDetail(EventFishDetail other) : this() {
      id_ = other.id_;
      boardId_ = other.boardId_;
      collectfishId_ = other.collectfishId_.Clone();
      diff_ = other.diff_;
      freeItem_ = other.freeItem_.Clone();
      milestones_ = other.milestones_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventFishDetail Clone() {
      return new EventFishDetail(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// ID
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "boardId" field.</summary>
    public const int BoardIdFieldNumber = 2;
    private int boardId_;
    /// <summary>
    /// 棋盘ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BoardId {
      get { return boardId_; }
      set {
        boardId_ = value;
      }
    }

    /// <summary>Field number for the "collectfishId" field.</summary>
    public const int CollectfishIdFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_collectfishId_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> collectfishId_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 鱼图鉴展示
    /// （FishInfo.id)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> CollectfishId {
      get { return collectfishId_; }
    }

    /// <summary>Field number for the "diff" field.</summary>
    public const int DiffFieldNumber = 4;
    private int diff_;
    /// <summary>
    /// 难度
    /// (仅TGA打点使用）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Diff {
      get { return diff_; }
      set {
        diff_ = value;
      }
    }

    /// <summary>Field number for the "freeItem" field.</summary>
    public const int FreeItemFieldNumber = 7;
    private static readonly pb::FieldCodec<int> _repeated_freeItem_codec
        = pb::FieldCodec.ForInt32(58);
    private readonly pbc::RepeatedField<int> freeItem_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 初始值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> FreeItem {
      get { return freeItem_; }
    }

    /// <summary>Field number for the "milestones" field.</summary>
    public const int MilestonesFieldNumber = 8;
    private static readonly pb::FieldCodec<int> _repeated_milestones_codec
        = pb::FieldCodec.ForInt32(66);
    private readonly pbc::RepeatedField<int> milestones_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 包含的里程碑
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Milestones {
      get { return milestones_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventFishDetail);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventFishDetail other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (BoardId != other.BoardId) return false;
      if(!collectfishId_.Equals(other.collectfishId_)) return false;
      if (Diff != other.Diff) return false;
      if(!freeItem_.Equals(other.freeItem_)) return false;
      if(!milestones_.Equals(other.milestones_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (BoardId != 0) hash ^= BoardId.GetHashCode();
      hash ^= collectfishId_.GetHashCode();
      if (Diff != 0) hash ^= Diff.GetHashCode();
      hash ^= freeItem_.GetHashCode();
      hash ^= milestones_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (BoardId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BoardId);
      }
      collectfishId_.WriteTo(output, _repeated_collectfishId_codec);
      if (Diff != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Diff);
      }
      freeItem_.WriteTo(output, _repeated_freeItem_codec);
      milestones_.WriteTo(output, _repeated_milestones_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (BoardId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BoardId);
      }
      collectfishId_.WriteTo(ref output, _repeated_collectfishId_codec);
      if (Diff != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Diff);
      }
      freeItem_.WriteTo(ref output, _repeated_freeItem_codec);
      milestones_.WriteTo(ref output, _repeated_milestones_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (BoardId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BoardId);
      }
      size += collectfishId_.CalculateSize(_repeated_collectfishId_codec);
      if (Diff != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Diff);
      }
      size += freeItem_.CalculateSize(_repeated_freeItem_codec);
      size += milestones_.CalculateSize(_repeated_milestones_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventFishDetail other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.BoardId != 0) {
        BoardId = other.BoardId;
      }
      collectfishId_.Add(other.collectfishId_);
      if (other.Diff != 0) {
        Diff = other.Diff;
      }
      freeItem_.Add(other.freeItem_);
      milestones_.Add(other.milestones_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            BoardId = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            collectfishId_.AddEntriesFrom(input, _repeated_collectfishId_codec);
            break;
          }
          case 32: {
            Diff = input.ReadInt32();
            break;
          }
          case 58:
          case 56: {
            freeItem_.AddEntriesFrom(input, _repeated_freeItem_codec);
            break;
          }
          case 66:
          case 64: {
            milestones_.AddEntriesFrom(input, _repeated_milestones_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            BoardId = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            collectfishId_.AddEntriesFrom(ref input, _repeated_collectfishId_codec);
            break;
          }
          case 32: {
            Diff = input.ReadInt32();
            break;
          }
          case 58:
          case 56: {
            freeItem_.AddEntriesFrom(ref input, _repeated_freeItem_codec);
            break;
          }
          case 66:
          case 64: {
            milestones_.AddEntriesFrom(ref input, _repeated_milestones_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventFishDetailMapABValue : pb::IMessage<EventFishDetailMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventFishDetailMapABValue> _parser = new pb::MessageParser<EventFishDetailMapABValue>(() => new EventFishDetailMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventFishDetailMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventFishDetailConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventFishDetailMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventFishDetailMapABValue(EventFishDetailMapABValue other) : this() {
      eventFishDetailMap_ = other.eventFishDetailMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventFishDetailMapABValue Clone() {
      return new EventFishDetailMapABValue(this);
    }

    /// <summary>Field number for the "EventFishDetailMap" field.</summary>
    public const int EventFishDetailMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventFishDetail>.Codec _map_eventFishDetailMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventFishDetail>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventFishDetail.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventFishDetail> eventFishDetailMap_ = new pbc::MapField<int, global::fat.rawdata.EventFishDetail>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventFishDetail> EventFishDetailMap {
      get { return eventFishDetailMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventFishDetailMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventFishDetailMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventFishDetailMap.Equals(other.EventFishDetailMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventFishDetailMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventFishDetailMap_.WriteTo(output, _map_eventFishDetailMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventFishDetailMap_.WriteTo(ref output, _map_eventFishDetailMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventFishDetailMap_.CalculateSize(_map_eventFishDetailMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventFishDetailMapABValue other) {
      if (other == null) {
        return;
      }
      eventFishDetailMap_.Add(other.eventFishDetailMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventFishDetailMap_.AddEntriesFrom(input, _map_eventFishDetailMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventFishDetailMap_.AddEntriesFrom(ref input, _map_eventFishDetailMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventFishDetailConf : pb::IMessage<EventFishDetailConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventFishDetailConf> _parser = new pb::MessageParser<EventFishDetailConf>(() => new EventFishDetailConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventFishDetailConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventFishDetailConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventFishDetailConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventFishDetailConf(EventFishDetailConf other) : this() {
      eventFishDetailMap_ = other.eventFishDetailMap_.Clone();
      eventFishDetailMapAB_ = other.eventFishDetailMapAB_.Clone();
      eventFishDetailMapABPatch_ = other.eventFishDetailMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventFishDetailConf Clone() {
      return new EventFishDetailConf(this);
    }

    /// <summary>Field number for the "EventFishDetailMap" field.</summary>
    public const int EventFishDetailMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventFishDetail>.Codec _map_eventFishDetailMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventFishDetail>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventFishDetail.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventFishDetail> eventFishDetailMap_ = new pbc::MapField<int, global::fat.rawdata.EventFishDetail>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventFishDetail> EventFishDetailMap {
      get { return eventFishDetailMap_; }
    }

    /// <summary>Field number for the "EventFishDetailMapAB" field.</summary>
    public const int EventFishDetailMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventFishDetailMapABValue>.Codec _map_eventFishDetailMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventFishDetailMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventFishDetailMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventFishDetailMapABValue> eventFishDetailMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventFishDetailMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventFishDetailMapABValue> EventFishDetailMapAB {
      get { return eventFishDetailMapAB_; }
    }

    /// <summary>Field number for the "EventFishDetailMapABPatch" field.</summary>
    public const int EventFishDetailMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventFishDetailMapABValue>.Codec _map_eventFishDetailMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventFishDetailMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventFishDetailMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventFishDetailMapABValue> eventFishDetailMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventFishDetailMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventFishDetailMapABValue> EventFishDetailMapABPatch {
      get { return eventFishDetailMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventFishDetailConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventFishDetailConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventFishDetailMap.Equals(other.EventFishDetailMap)) return false;
      if (!EventFishDetailMapAB.Equals(other.EventFishDetailMapAB)) return false;
      if (!EventFishDetailMapABPatch.Equals(other.EventFishDetailMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventFishDetailMap.GetHashCode();
      hash ^= EventFishDetailMapAB.GetHashCode();
      hash ^= EventFishDetailMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventFishDetailMap_.WriteTo(output, _map_eventFishDetailMap_codec);
      eventFishDetailMapAB_.WriteTo(output, _map_eventFishDetailMapAB_codec);
      eventFishDetailMapABPatch_.WriteTo(output, _map_eventFishDetailMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventFishDetailMap_.WriteTo(ref output, _map_eventFishDetailMap_codec);
      eventFishDetailMapAB_.WriteTo(ref output, _map_eventFishDetailMapAB_codec);
      eventFishDetailMapABPatch_.WriteTo(ref output, _map_eventFishDetailMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventFishDetailMap_.CalculateSize(_map_eventFishDetailMap_codec);
      size += eventFishDetailMapAB_.CalculateSize(_map_eventFishDetailMapAB_codec);
      size += eventFishDetailMapABPatch_.CalculateSize(_map_eventFishDetailMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventFishDetailConf other) {
      if (other == null) {
        return;
      }
      eventFishDetailMap_.Add(other.eventFishDetailMap_);
      eventFishDetailMapAB_.Add(other.eventFishDetailMapAB_);
      eventFishDetailMapABPatch_.Add(other.eventFishDetailMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventFishDetailMap_.AddEntriesFrom(input, _map_eventFishDetailMap_codec);
            break;
          }
          case 18: {
            eventFishDetailMapAB_.AddEntriesFrom(input, _map_eventFishDetailMapAB_codec);
            break;
          }
          case 26: {
            eventFishDetailMapABPatch_.AddEntriesFrom(input, _map_eventFishDetailMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventFishDetailMap_.AddEntriesFrom(ref input, _map_eventFishDetailMap_codec);
            break;
          }
          case 18: {
            eventFishDetailMapAB_.AddEntriesFrom(ref input, _map_eventFishDetailMapAB_codec);
            break;
          }
          case 26: {
            eventFishDetailMapABPatch_.AddEntriesFrom(ref input, _map_eventFishDetailMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
