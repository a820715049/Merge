// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/CardGroupConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/CardGroupConf.proto</summary>
  public static partial class CardGroupConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/CardGroupConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CardGroupConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChtyYXdkYXRhL0NhcmRHcm91cENvbmYucHJvdG8SB3Jhd2RhdGEijQEKCUNh",
            "cmRHcm91cBIKCgJpZBgBIAEoBRIQCghjYXJkSW5mbxgCIAMoBRIMCgRpY29u",
            "GAMgASgJEhAKCG1pbmlJY29uGAYgASgJEgwKBG5hbWUYBCABKAkSEAoIb3Zl",
            "clZpZXcYCCABKAkSDgoGcmV3YXJkGAUgAygJEhIKCnRpdGxlSW1hZ2UYByAB",
            "KAkipAEKE0NhcmRHcm91cE1hcEFCVmFsdWUSRAoMQ2FyZEdyb3VwTWFwGAEg",
            "AygLMi4ucmF3ZGF0YS5DYXJkR3JvdXBNYXBBQlZhbHVlLkNhcmRHcm91cE1h",
            "cEVudHJ5GkcKEUNhcmRHcm91cE1hcEVudHJ5EgsKA2tleRgBIAEoBRIhCgV2",
            "YWx1ZRgCIAEoCzISLnJhd2RhdGEuQ2FyZEdyb3VwOgI4ASLZAwoNQ2FyZEdy",
            "b3VwQ29uZhI+CgxDYXJkR3JvdXBNYXAYASADKAsyKC5yYXdkYXRhLkNhcmRH",
            "cm91cENvbmYuQ2FyZEdyb3VwTWFwRW50cnkSQgoOQ2FyZEdyb3VwTWFwQUIY",
            "AiADKAsyKi5yYXdkYXRhLkNhcmRHcm91cENvbmYuQ2FyZEdyb3VwTWFwQUJF",
            "bnRyeRJMChNDYXJkR3JvdXBNYXBBQlBhdGNoGAMgAygLMi8ucmF3ZGF0YS5D",
            "YXJkR3JvdXBDb25mLkNhcmRHcm91cE1hcEFCUGF0Y2hFbnRyeRpHChFDYXJk",
            "R3JvdXBNYXBFbnRyeRILCgNrZXkYASABKAUSIQoFdmFsdWUYAiABKAsyEi5y",
            "YXdkYXRhLkNhcmRHcm91cDoCOAEaUwoTQ2FyZEdyb3VwTWFwQUJFbnRyeRIL",
            "CgNrZXkYASABKAkSKwoFdmFsdWUYAiABKAsyHC5yYXdkYXRhLkNhcmRHcm91",
            "cE1hcEFCVmFsdWU6AjgBGlgKGENhcmRHcm91cE1hcEFCUGF0Y2hFbnRyeRIL",
            "CgNrZXkYASABKAkSKwoFdmFsdWUYAiABKAsyHC5yYXdkYXRhLkNhcmRHcm91",
            "cE1hcEFCVmFsdWU6AjgBQj1aLWdpdGxhYi5mdW5wbHVzLmlvL2ZhdC9jb25m",
            "L2dlbi9nb2xhbmcvcmF3ZGF0YaoCC2ZhdC5yYXdkYXRhYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.CardGroup), global::fat.rawdata.CardGroup.Parser, new[]{ "Id", "CardInfo", "Icon", "MiniIcon", "Name", "OverView", "Reward", "TitleImage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.CardGroupMapABValue), global::fat.rawdata.CardGroupMapABValue.Parser, new[]{ "CardGroupMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.CardGroupConf), global::fat.rawdata.CardGroupConf.Parser, new[]{ "CardGroupMap", "CardGroupMapAB", "CardGroupMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="CardGroup",table="CardGroupMap",table_wrapper="CardGroupConf",map="true",map_key_type="int32",data="CardGroupConf")
  /// annotation@ab(table_ab="CardGroupMapAB",table_ab_patch="CardGroupMapABPatch",table_ab_value="CardGroupMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@CardGroup(id="id")
  /// </summary>
  public sealed partial class CardGroup : pb::IMessage<CardGroup>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CardGroup> _parser = new pb::MessageParser<CardGroup>(() => new CardGroup());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CardGroup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.CardGroupConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardGroup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardGroup(CardGroup other) : this() {
      id_ = other.id_;
      cardInfo_ = other.cardInfo_.Clone();
      icon_ = other.icon_;
      miniIcon_ = other.miniIcon_;
      name_ = other.name_;
      overView_ = other.overView_;
      reward_ = other.reward_.Clone();
      titleImage_ = other.titleImage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardGroup Clone() {
      return new CardGroup(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 卡组ID
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "cardInfo" field.</summary>
    public const int CardInfoFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_cardInfo_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> cardInfo_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 包含卡片信息
    /// （ObjBasic.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> CardInfo {
      get { return cardInfo_; }
    }

    /// <summary>Field number for the "icon" field.</summary>
    public const int IconFieldNumber = 3;
    private string icon_ = "";
    /// <summary>
    /// 卡组入口icon
    /// （Asset）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Icon {
      get { return icon_; }
      set {
        icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "miniIcon" field.</summary>
    public const int MiniIconFieldNumber = 6;
    private string miniIcon_ = "";
    /// <summary>
    /// 卡组入口迷你icon
    /// （Asset）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MiniIcon {
      get { return miniIcon_; }
      set {
        miniIcon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 4;
    private string name_ = "";
    /// <summary>
    /// 卡组名称
    /// （多语言）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "overView" field.</summary>
    public const int OverViewFieldNumber = 8;
    private string overView_ = "";
    /// <summary>
    /// 卡组预览图
    /// （Asset）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OverView {
      get { return overView_; }
      set {
        overView_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "reward" field.</summary>
    public const int RewardFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_reward_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> reward_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 卡组奖励
    /// （通用奖励格式）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Reward {
      get { return reward_; }
    }

    /// <summary>Field number for the "titleImage" field.</summary>
    public const int TitleImageFieldNumber = 7;
    private string titleImage_ = "";
    /// <summary>
    /// 卡组标题颜色图片
    /// （Asset）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TitleImage {
      get { return titleImage_; }
      set {
        titleImage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CardGroup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CardGroup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!cardInfo_.Equals(other.cardInfo_)) return false;
      if (Icon != other.Icon) return false;
      if (MiniIcon != other.MiniIcon) return false;
      if (Name != other.Name) return false;
      if (OverView != other.OverView) return false;
      if(!reward_.Equals(other.reward_)) return false;
      if (TitleImage != other.TitleImage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      hash ^= cardInfo_.GetHashCode();
      if (Icon.Length != 0) hash ^= Icon.GetHashCode();
      if (MiniIcon.Length != 0) hash ^= MiniIcon.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (OverView.Length != 0) hash ^= OverView.GetHashCode();
      hash ^= reward_.GetHashCode();
      if (TitleImage.Length != 0) hash ^= TitleImage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      cardInfo_.WriteTo(output, _repeated_cardInfo_codec);
      if (Icon.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Icon);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      reward_.WriteTo(output, _repeated_reward_codec);
      if (MiniIcon.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(MiniIcon);
      }
      if (TitleImage.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(TitleImage);
      }
      if (OverView.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(OverView);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      cardInfo_.WriteTo(ref output, _repeated_cardInfo_codec);
      if (Icon.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Icon);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      reward_.WriteTo(ref output, _repeated_reward_codec);
      if (MiniIcon.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(MiniIcon);
      }
      if (TitleImage.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(TitleImage);
      }
      if (OverView.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(OverView);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      size += cardInfo_.CalculateSize(_repeated_cardInfo_codec);
      if (Icon.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Icon);
      }
      if (MiniIcon.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MiniIcon);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (OverView.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OverView);
      }
      size += reward_.CalculateSize(_repeated_reward_codec);
      if (TitleImage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TitleImage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CardGroup other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      cardInfo_.Add(other.cardInfo_);
      if (other.Icon.Length != 0) {
        Icon = other.Icon;
      }
      if (other.MiniIcon.Length != 0) {
        MiniIcon = other.MiniIcon;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.OverView.Length != 0) {
        OverView = other.OverView;
      }
      reward_.Add(other.reward_);
      if (other.TitleImage.Length != 0) {
        TitleImage = other.TitleImage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            cardInfo_.AddEntriesFrom(input, _repeated_cardInfo_codec);
            break;
          }
          case 26: {
            Icon = input.ReadString();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 42: {
            reward_.AddEntriesFrom(input, _repeated_reward_codec);
            break;
          }
          case 50: {
            MiniIcon = input.ReadString();
            break;
          }
          case 58: {
            TitleImage = input.ReadString();
            break;
          }
          case 66: {
            OverView = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            cardInfo_.AddEntriesFrom(ref input, _repeated_cardInfo_codec);
            break;
          }
          case 26: {
            Icon = input.ReadString();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 42: {
            reward_.AddEntriesFrom(ref input, _repeated_reward_codec);
            break;
          }
          case 50: {
            MiniIcon = input.ReadString();
            break;
          }
          case 58: {
            TitleImage = input.ReadString();
            break;
          }
          case 66: {
            OverView = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CardGroupMapABValue : pb::IMessage<CardGroupMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CardGroupMapABValue> _parser = new pb::MessageParser<CardGroupMapABValue>(() => new CardGroupMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CardGroupMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.CardGroupConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardGroupMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardGroupMapABValue(CardGroupMapABValue other) : this() {
      cardGroupMap_ = other.cardGroupMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardGroupMapABValue Clone() {
      return new CardGroupMapABValue(this);
    }

    /// <summary>Field number for the "CardGroupMap" field.</summary>
    public const int CardGroupMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.CardGroup>.Codec _map_cardGroupMap_codec
        = new pbc::MapField<int, global::fat.rawdata.CardGroup>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.CardGroup.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.CardGroup> cardGroupMap_ = new pbc::MapField<int, global::fat.rawdata.CardGroup>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.CardGroup> CardGroupMap {
      get { return cardGroupMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CardGroupMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CardGroupMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!CardGroupMap.Equals(other.CardGroupMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= CardGroupMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      cardGroupMap_.WriteTo(output, _map_cardGroupMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      cardGroupMap_.WriteTo(ref output, _map_cardGroupMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += cardGroupMap_.CalculateSize(_map_cardGroupMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CardGroupMapABValue other) {
      if (other == null) {
        return;
      }
      cardGroupMap_.Add(other.cardGroupMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            cardGroupMap_.AddEntriesFrom(input, _map_cardGroupMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            cardGroupMap_.AddEntriesFrom(ref input, _map_cardGroupMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CardGroupConf : pb::IMessage<CardGroupConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CardGroupConf> _parser = new pb::MessageParser<CardGroupConf>(() => new CardGroupConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CardGroupConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.CardGroupConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardGroupConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardGroupConf(CardGroupConf other) : this() {
      cardGroupMap_ = other.cardGroupMap_.Clone();
      cardGroupMapAB_ = other.cardGroupMapAB_.Clone();
      cardGroupMapABPatch_ = other.cardGroupMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CardGroupConf Clone() {
      return new CardGroupConf(this);
    }

    /// <summary>Field number for the "CardGroupMap" field.</summary>
    public const int CardGroupMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.CardGroup>.Codec _map_cardGroupMap_codec
        = new pbc::MapField<int, global::fat.rawdata.CardGroup>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.CardGroup.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.CardGroup> cardGroupMap_ = new pbc::MapField<int, global::fat.rawdata.CardGroup>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.CardGroup> CardGroupMap {
      get { return cardGroupMap_; }
    }

    /// <summary>Field number for the "CardGroupMapAB" field.</summary>
    public const int CardGroupMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.CardGroupMapABValue>.Codec _map_cardGroupMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.CardGroupMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.CardGroupMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.CardGroupMapABValue> cardGroupMapAB_ = new pbc::MapField<string, global::fat.rawdata.CardGroupMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.CardGroupMapABValue> CardGroupMapAB {
      get { return cardGroupMapAB_; }
    }

    /// <summary>Field number for the "CardGroupMapABPatch" field.</summary>
    public const int CardGroupMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.CardGroupMapABValue>.Codec _map_cardGroupMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.CardGroupMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.CardGroupMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.CardGroupMapABValue> cardGroupMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.CardGroupMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.CardGroupMapABValue> CardGroupMapABPatch {
      get { return cardGroupMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CardGroupConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CardGroupConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!CardGroupMap.Equals(other.CardGroupMap)) return false;
      if (!CardGroupMapAB.Equals(other.CardGroupMapAB)) return false;
      if (!CardGroupMapABPatch.Equals(other.CardGroupMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= CardGroupMap.GetHashCode();
      hash ^= CardGroupMapAB.GetHashCode();
      hash ^= CardGroupMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      cardGroupMap_.WriteTo(output, _map_cardGroupMap_codec);
      cardGroupMapAB_.WriteTo(output, _map_cardGroupMapAB_codec);
      cardGroupMapABPatch_.WriteTo(output, _map_cardGroupMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      cardGroupMap_.WriteTo(ref output, _map_cardGroupMap_codec);
      cardGroupMapAB_.WriteTo(ref output, _map_cardGroupMapAB_codec);
      cardGroupMapABPatch_.WriteTo(ref output, _map_cardGroupMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += cardGroupMap_.CalculateSize(_map_cardGroupMap_codec);
      size += cardGroupMapAB_.CalculateSize(_map_cardGroupMapAB_codec);
      size += cardGroupMapABPatch_.CalculateSize(_map_cardGroupMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CardGroupConf other) {
      if (other == null) {
        return;
      }
      cardGroupMap_.Add(other.cardGroupMap_);
      cardGroupMapAB_.Add(other.cardGroupMapAB_);
      cardGroupMapABPatch_.Add(other.cardGroupMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            cardGroupMap_.AddEntriesFrom(input, _map_cardGroupMap_codec);
            break;
          }
          case 18: {
            cardGroupMapAB_.AddEntriesFrom(input, _map_cardGroupMapAB_codec);
            break;
          }
          case 26: {
            cardGroupMapABPatch_.AddEntriesFrom(input, _map_cardGroupMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            cardGroupMap_.AddEntriesFrom(ref input, _map_cardGroupMap_codec);
            break;
          }
          case 18: {
            cardGroupMapAB_.AddEntriesFrom(ref input, _map_cardGroupMapAB_codec);
            break;
          }
          case 26: {
            cardGroupMapABPatch_.AddEntriesFrom(ref input, _map_cardGroupMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
