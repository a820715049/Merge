// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/MergeBoardOrderConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/MergeBoardOrderConf.proto</summary>
  public static partial class MergeBoardOrderConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/MergeBoardOrderConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MergeBoardOrderConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiFyYXdkYXRhL01lcmdlQm9hcmRPcmRlckNvbmYucHJvdG8SB3Jhd2RhdGEi",
            "lwIKD01lcmdlQm9hcmRPcmRlchIKCgJpZBgBIAEoBRIOCgZjYXJlV3QYCiAB",
            "KAUSDQoFbWF4V3QYDiABKAUSDQoFbWluV3QYDyABKAUSEAoIb3Bwb3NlV3QY",
            "CyABKAUSEAoIb3JpZ2luV3QYESABKAUSEwoLcmFuZFd0T3RoZXIYAiABKAUS",
            "FwoPcmFuZFd0T3RoZXJBdXRvGAggASgFEhQKDHJhbmRXdFJlY2VudBgDIAEo",
            "BRISCgpyYW5kV3RVc2VkGAQgASgFEhYKDnJhbmRXdFVzZWRBdXRvGAkgASgF",
            "EhAKCHJlY2VudFd0GBAgASgFEhQKDHNhbWVPcmlnaW5XdBgMIAEoBRIOCgZ1",
            "c2VkV3QYDSABKAUiyAEKGU1lcmdlQm9hcmRPcmRlck1hcEFCVmFsdWUSVgoS",
            "TWVyZ2VCb2FyZE9yZGVyTWFwGAEgAygLMjoucmF3ZGF0YS5NZXJnZUJvYXJk",
            "T3JkZXJNYXBBQlZhbHVlLk1lcmdlQm9hcmRPcmRlck1hcEVudHJ5GlMKF01l",
            "cmdlQm9hcmRPcmRlck1hcEVudHJ5EgsKA2tleRgBIAEoBRInCgV2YWx1ZRgC",
            "IAEoCzIYLnJhd2RhdGEuTWVyZ2VCb2FyZE9yZGVyOgI4ASK5BAoTTWVyZ2VC",
            "b2FyZE9yZGVyQ29uZhJQChJNZXJnZUJvYXJkT3JkZXJNYXAYASADKAsyNC5y",
            "YXdkYXRhLk1lcmdlQm9hcmRPcmRlckNvbmYuTWVyZ2VCb2FyZE9yZGVyTWFw",
            "RW50cnkSVAoUTWVyZ2VCb2FyZE9yZGVyTWFwQUIYAiADKAsyNi5yYXdkYXRh",
            "Lk1lcmdlQm9hcmRPcmRlckNvbmYuTWVyZ2VCb2FyZE9yZGVyTWFwQUJFbnRy",
            "eRJeChlNZXJnZUJvYXJkT3JkZXJNYXBBQlBhdGNoGAMgAygLMjsucmF3ZGF0",
            "YS5NZXJnZUJvYXJkT3JkZXJDb25mLk1lcmdlQm9hcmRPcmRlck1hcEFCUGF0",
            "Y2hFbnRyeRpTChdNZXJnZUJvYXJkT3JkZXJNYXBFbnRyeRILCgNrZXkYASAB",
            "KAUSJwoFdmFsdWUYAiABKAsyGC5yYXdkYXRhLk1lcmdlQm9hcmRPcmRlcjoC",
            "OAEaXwoZTWVyZ2VCb2FyZE9yZGVyTWFwQUJFbnRyeRILCgNrZXkYASABKAkS",
            "MQoFdmFsdWUYAiABKAsyIi5yYXdkYXRhLk1lcmdlQm9hcmRPcmRlck1hcEFC",
            "VmFsdWU6AjgBGmQKHk1lcmdlQm9hcmRPcmRlck1hcEFCUGF0Y2hFbnRyeRIL",
            "CgNrZXkYASABKAkSMQoFdmFsdWUYAiABKAsyIi5yYXdkYXRhLk1lcmdlQm9h",
            "cmRPcmRlck1hcEFCVmFsdWU6AjgBQj1aLWdpdGxhYi5mdW5wbHVzLmlvL2Zh",
            "dC9jb25mL2dlbi9nb2xhbmcvcmF3ZGF0YaoCC2ZhdC5yYXdkYXRhYgZwcm90",
            "bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.MergeBoardOrder), global::fat.rawdata.MergeBoardOrder.Parser, new[]{ "Id", "CareWt", "MaxWt", "MinWt", "OpposeWt", "OriginWt", "RandWtOther", "RandWtOtherAuto", "RandWtRecent", "RandWtUsed", "RandWtUsedAuto", "RecentWt", "SameOriginWt", "UsedWt" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.MergeBoardOrderMapABValue), global::fat.rawdata.MergeBoardOrderMapABValue.Parser, new[]{ "MergeBoardOrderMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.MergeBoardOrderConf), global::fat.rawdata.MergeBoardOrderConf.Parser, new[]{ "MergeBoardOrderMap", "MergeBoardOrderMapAB", "MergeBoardOrderMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="MergeBoardOrder",table="MergeBoardOrderMap",table_wrapper="MergeBoardOrderConf",map="true",map_key_type="int32",data="MergeBoardOrderConf")
  /// annotation@ab(table_ab="MergeBoardOrderMapAB",table_ab_patch="MergeBoardOrderMapABPatch",table_ab_value="MergeBoardOrderMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@MergeBoardOrder(id="id")
  /// </summary>
  public sealed partial class MergeBoardOrder : pb::IMessage<MergeBoardOrder>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MergeBoardOrder> _parser = new pb::MessageParser<MergeBoardOrder>(() => new MergeBoardOrder());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MergeBoardOrder> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.MergeBoardOrderConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeBoardOrder() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeBoardOrder(MergeBoardOrder other) : this() {
      id_ = other.id_;
      careWt_ = other.careWt_;
      maxWt_ = other.maxWt_;
      minWt_ = other.minWt_;
      opposeWt_ = other.opposeWt_;
      originWt_ = other.originWt_;
      randWtOther_ = other.randWtOther_;
      randWtOtherAuto_ = other.randWtOtherAuto_;
      randWtRecent_ = other.randWtRecent_;
      randWtUsed_ = other.randWtUsed_;
      randWtUsedAuto_ = other.randWtUsedAuto_;
      recentWt_ = other.recentWt_;
      sameOriginWt_ = other.sameOriginWt_;
      usedWt_ = other.usedWt_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeBoardOrder Clone() {
      return new MergeBoardOrder(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 棋盘ID
    /// （MergeBoard.id）
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "careWt" field.</summary>
    public const int CareWtFieldNumber = 10;
    private int careWt_;
    /// <summary>
    /// 因“前置”而减分
    /// （通过配置负数来减分）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CareWt {
      get { return careWt_; }
      set {
        careWt_ = value;
      }
    }

    /// <summary>Field number for the "maxWt" field.</summary>
    public const int MaxWtFieldNumber = 14;
    private int maxWt_;
    /// <summary>
    /// 最终权重
    /// 最大值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxWt {
      get { return maxWt_; }
      set {
        maxWt_ = value;
      }
    }

    /// <summary>Field number for the "minWt" field.</summary>
    public const int MinWtFieldNumber = 15;
    private int minWt_;
    /// <summary>
    /// 最终权重
    /// 最小值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MinWt {
      get { return minWt_; }
      set {
        minWt_ = value;
      }
    }

    /// <summary>Field number for the "opposeWt" field.</summary>
    public const int OpposeWtFieldNumber = 11;
    private int opposeWt_;
    /// <summary>
    /// 因“对立”而加分
    /// （通过配置正数来加分）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int OpposeWt {
      get { return opposeWt_; }
      set {
        opposeWt_ = value;
      }
    }

    /// <summary>Field number for the "originWt" field.</summary>
    public const int OriginWtFieldNumber = 17;
    private int originWt_;
    /// <summary>
    /// 因“源头”而加分
    /// （通过配置正数来加分）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int OriginWt {
      get { return originWt_; }
      set {
        originWt_ = value;
      }
    }

    /// <summary>Field number for the "randWtOther" field.</summary>
    public const int RandWtOtherFieldNumber = 2;
    private int randWtOther_;
    /// <summary>
    /// 未被占用
    /// 且
    /// 不是自动生成器
    /// 的链条
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RandWtOther {
      get { return randWtOther_; }
      set {
        randWtOther_ = value;
      }
    }

    /// <summary>Field number for the "randWtOtherAuto" field.</summary>
    public const int RandWtOtherAutoFieldNumber = 8;
    private int randWtOtherAuto_;
    /// <summary>
    /// 未被占用
    /// 且
    /// 是自动生成器
    /// 的链条
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RandWtOtherAuto {
      get { return randWtOtherAuto_; }
      set {
        randWtOtherAuto_ = value;
      }
    }

    /// <summary>Field number for the "randWtRecent" field.</summary>
    public const int RandWtRecentFieldNumber = 3;
    private int randWtRecent_;
    /// <summary>
    /// 刚提交过的链条
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RandWtRecent {
      get { return randWtRecent_; }
      set {
        randWtRecent_ = value;
      }
    }

    /// <summary>Field number for the "randWtUsed" field.</summary>
    public const int RandWtUsedFieldNumber = 4;
    private int randWtUsed_;
    /// <summary>
    /// 已被占用
    /// 且
    /// 不是自动生成器
    /// 的链条
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RandWtUsed {
      get { return randWtUsed_; }
      set {
        randWtUsed_ = value;
      }
    }

    /// <summary>Field number for the "randWtUsedAuto" field.</summary>
    public const int RandWtUsedAutoFieldNumber = 9;
    private int randWtUsedAuto_;
    /// <summary>
    /// 已被占用
    /// 且
    /// 是自动生成器
    /// 的链条
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RandWtUsedAuto {
      get { return randWtUsedAuto_; }
      set {
        randWtUsedAuto_ = value;
      }
    }

    /// <summary>Field number for the "recentWt" field.</summary>
    public const int RecentWtFieldNumber = 16;
    private int recentWt_;
    /// <summary>
    /// 因“提交”而减分
    /// （通过配置负数来减分）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RecentWt {
      get { return recentWt_; }
      set {
        recentWt_ = value;
      }
    }

    /// <summary>Field number for the "sameOriginWt" field.</summary>
    public const int SameOriginWtFieldNumber = 12;
    private int sameOriginWt_;
    /// <summary>
    /// 同源时设定权重
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SameOriginWt {
      get { return sameOriginWt_; }
      set {
        sameOriginWt_ = value;
      }
    }

    /// <summary>Field number for the "usedWt" field.</summary>
    public const int UsedWtFieldNumber = 13;
    private int usedWt_;
    /// <summary>
    /// 因“在要”而减分
    /// （通过配置负数来减分）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UsedWt {
      get { return usedWt_; }
      set {
        usedWt_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MergeBoardOrder);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MergeBoardOrder other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (CareWt != other.CareWt) return false;
      if (MaxWt != other.MaxWt) return false;
      if (MinWt != other.MinWt) return false;
      if (OpposeWt != other.OpposeWt) return false;
      if (OriginWt != other.OriginWt) return false;
      if (RandWtOther != other.RandWtOther) return false;
      if (RandWtOtherAuto != other.RandWtOtherAuto) return false;
      if (RandWtRecent != other.RandWtRecent) return false;
      if (RandWtUsed != other.RandWtUsed) return false;
      if (RandWtUsedAuto != other.RandWtUsedAuto) return false;
      if (RecentWt != other.RecentWt) return false;
      if (SameOriginWt != other.SameOriginWt) return false;
      if (UsedWt != other.UsedWt) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (CareWt != 0) hash ^= CareWt.GetHashCode();
      if (MaxWt != 0) hash ^= MaxWt.GetHashCode();
      if (MinWt != 0) hash ^= MinWt.GetHashCode();
      if (OpposeWt != 0) hash ^= OpposeWt.GetHashCode();
      if (OriginWt != 0) hash ^= OriginWt.GetHashCode();
      if (RandWtOther != 0) hash ^= RandWtOther.GetHashCode();
      if (RandWtOtherAuto != 0) hash ^= RandWtOtherAuto.GetHashCode();
      if (RandWtRecent != 0) hash ^= RandWtRecent.GetHashCode();
      if (RandWtUsed != 0) hash ^= RandWtUsed.GetHashCode();
      if (RandWtUsedAuto != 0) hash ^= RandWtUsedAuto.GetHashCode();
      if (RecentWt != 0) hash ^= RecentWt.GetHashCode();
      if (SameOriginWt != 0) hash ^= SameOriginWt.GetHashCode();
      if (UsedWt != 0) hash ^= UsedWt.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (RandWtOther != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RandWtOther);
      }
      if (RandWtRecent != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(RandWtRecent);
      }
      if (RandWtUsed != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(RandWtUsed);
      }
      if (RandWtOtherAuto != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(RandWtOtherAuto);
      }
      if (RandWtUsedAuto != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(RandWtUsedAuto);
      }
      if (CareWt != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(CareWt);
      }
      if (OpposeWt != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(OpposeWt);
      }
      if (SameOriginWt != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(SameOriginWt);
      }
      if (UsedWt != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(UsedWt);
      }
      if (MaxWt != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(MaxWt);
      }
      if (MinWt != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(MinWt);
      }
      if (RecentWt != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(RecentWt);
      }
      if (OriginWt != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(OriginWt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (RandWtOther != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RandWtOther);
      }
      if (RandWtRecent != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(RandWtRecent);
      }
      if (RandWtUsed != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(RandWtUsed);
      }
      if (RandWtOtherAuto != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(RandWtOtherAuto);
      }
      if (RandWtUsedAuto != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(RandWtUsedAuto);
      }
      if (CareWt != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(CareWt);
      }
      if (OpposeWt != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(OpposeWt);
      }
      if (SameOriginWt != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(SameOriginWt);
      }
      if (UsedWt != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(UsedWt);
      }
      if (MaxWt != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(MaxWt);
      }
      if (MinWt != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(MinWt);
      }
      if (RecentWt != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(RecentWt);
      }
      if (OriginWt != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(OriginWt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (CareWt != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CareWt);
      }
      if (MaxWt != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxWt);
      }
      if (MinWt != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MinWt);
      }
      if (OpposeWt != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OpposeWt);
      }
      if (OriginWt != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(OriginWt);
      }
      if (RandWtOther != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RandWtOther);
      }
      if (RandWtOtherAuto != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RandWtOtherAuto);
      }
      if (RandWtRecent != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RandWtRecent);
      }
      if (RandWtUsed != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RandWtUsed);
      }
      if (RandWtUsedAuto != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RandWtUsedAuto);
      }
      if (RecentWt != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(RecentWt);
      }
      if (SameOriginWt != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SameOriginWt);
      }
      if (UsedWt != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UsedWt);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MergeBoardOrder other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.CareWt != 0) {
        CareWt = other.CareWt;
      }
      if (other.MaxWt != 0) {
        MaxWt = other.MaxWt;
      }
      if (other.MinWt != 0) {
        MinWt = other.MinWt;
      }
      if (other.OpposeWt != 0) {
        OpposeWt = other.OpposeWt;
      }
      if (other.OriginWt != 0) {
        OriginWt = other.OriginWt;
      }
      if (other.RandWtOther != 0) {
        RandWtOther = other.RandWtOther;
      }
      if (other.RandWtOtherAuto != 0) {
        RandWtOtherAuto = other.RandWtOtherAuto;
      }
      if (other.RandWtRecent != 0) {
        RandWtRecent = other.RandWtRecent;
      }
      if (other.RandWtUsed != 0) {
        RandWtUsed = other.RandWtUsed;
      }
      if (other.RandWtUsedAuto != 0) {
        RandWtUsedAuto = other.RandWtUsedAuto;
      }
      if (other.RecentWt != 0) {
        RecentWt = other.RecentWt;
      }
      if (other.SameOriginWt != 0) {
        SameOriginWt = other.SameOriginWt;
      }
      if (other.UsedWt != 0) {
        UsedWt = other.UsedWt;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            RandWtOther = input.ReadInt32();
            break;
          }
          case 24: {
            RandWtRecent = input.ReadInt32();
            break;
          }
          case 32: {
            RandWtUsed = input.ReadInt32();
            break;
          }
          case 64: {
            RandWtOtherAuto = input.ReadInt32();
            break;
          }
          case 72: {
            RandWtUsedAuto = input.ReadInt32();
            break;
          }
          case 80: {
            CareWt = input.ReadInt32();
            break;
          }
          case 88: {
            OpposeWt = input.ReadInt32();
            break;
          }
          case 96: {
            SameOriginWt = input.ReadInt32();
            break;
          }
          case 104: {
            UsedWt = input.ReadInt32();
            break;
          }
          case 112: {
            MaxWt = input.ReadInt32();
            break;
          }
          case 120: {
            MinWt = input.ReadInt32();
            break;
          }
          case 128: {
            RecentWt = input.ReadInt32();
            break;
          }
          case 136: {
            OriginWt = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            RandWtOther = input.ReadInt32();
            break;
          }
          case 24: {
            RandWtRecent = input.ReadInt32();
            break;
          }
          case 32: {
            RandWtUsed = input.ReadInt32();
            break;
          }
          case 64: {
            RandWtOtherAuto = input.ReadInt32();
            break;
          }
          case 72: {
            RandWtUsedAuto = input.ReadInt32();
            break;
          }
          case 80: {
            CareWt = input.ReadInt32();
            break;
          }
          case 88: {
            OpposeWt = input.ReadInt32();
            break;
          }
          case 96: {
            SameOriginWt = input.ReadInt32();
            break;
          }
          case 104: {
            UsedWt = input.ReadInt32();
            break;
          }
          case 112: {
            MaxWt = input.ReadInt32();
            break;
          }
          case 120: {
            MinWt = input.ReadInt32();
            break;
          }
          case 128: {
            RecentWt = input.ReadInt32();
            break;
          }
          case 136: {
            OriginWt = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MergeBoardOrderMapABValue : pb::IMessage<MergeBoardOrderMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MergeBoardOrderMapABValue> _parser = new pb::MessageParser<MergeBoardOrderMapABValue>(() => new MergeBoardOrderMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MergeBoardOrderMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.MergeBoardOrderConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeBoardOrderMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeBoardOrderMapABValue(MergeBoardOrderMapABValue other) : this() {
      mergeBoardOrderMap_ = other.mergeBoardOrderMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeBoardOrderMapABValue Clone() {
      return new MergeBoardOrderMapABValue(this);
    }

    /// <summary>Field number for the "MergeBoardOrderMap" field.</summary>
    public const int MergeBoardOrderMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.MergeBoardOrder>.Codec _map_mergeBoardOrderMap_codec
        = new pbc::MapField<int, global::fat.rawdata.MergeBoardOrder>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.MergeBoardOrder.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.MergeBoardOrder> mergeBoardOrderMap_ = new pbc::MapField<int, global::fat.rawdata.MergeBoardOrder>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.MergeBoardOrder> MergeBoardOrderMap {
      get { return mergeBoardOrderMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MergeBoardOrderMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MergeBoardOrderMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!MergeBoardOrderMap.Equals(other.MergeBoardOrderMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= MergeBoardOrderMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      mergeBoardOrderMap_.WriteTo(output, _map_mergeBoardOrderMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      mergeBoardOrderMap_.WriteTo(ref output, _map_mergeBoardOrderMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += mergeBoardOrderMap_.CalculateSize(_map_mergeBoardOrderMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MergeBoardOrderMapABValue other) {
      if (other == null) {
        return;
      }
      mergeBoardOrderMap_.Add(other.mergeBoardOrderMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            mergeBoardOrderMap_.AddEntriesFrom(input, _map_mergeBoardOrderMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            mergeBoardOrderMap_.AddEntriesFrom(ref input, _map_mergeBoardOrderMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MergeBoardOrderConf : pb::IMessage<MergeBoardOrderConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MergeBoardOrderConf> _parser = new pb::MessageParser<MergeBoardOrderConf>(() => new MergeBoardOrderConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MergeBoardOrderConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.MergeBoardOrderConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeBoardOrderConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeBoardOrderConf(MergeBoardOrderConf other) : this() {
      mergeBoardOrderMap_ = other.mergeBoardOrderMap_.Clone();
      mergeBoardOrderMapAB_ = other.mergeBoardOrderMapAB_.Clone();
      mergeBoardOrderMapABPatch_ = other.mergeBoardOrderMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MergeBoardOrderConf Clone() {
      return new MergeBoardOrderConf(this);
    }

    /// <summary>Field number for the "MergeBoardOrderMap" field.</summary>
    public const int MergeBoardOrderMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.MergeBoardOrder>.Codec _map_mergeBoardOrderMap_codec
        = new pbc::MapField<int, global::fat.rawdata.MergeBoardOrder>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.MergeBoardOrder.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.MergeBoardOrder> mergeBoardOrderMap_ = new pbc::MapField<int, global::fat.rawdata.MergeBoardOrder>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.MergeBoardOrder> MergeBoardOrderMap {
      get { return mergeBoardOrderMap_; }
    }

    /// <summary>Field number for the "MergeBoardOrderMapAB" field.</summary>
    public const int MergeBoardOrderMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.MergeBoardOrderMapABValue>.Codec _map_mergeBoardOrderMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.MergeBoardOrderMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.MergeBoardOrderMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.MergeBoardOrderMapABValue> mergeBoardOrderMapAB_ = new pbc::MapField<string, global::fat.rawdata.MergeBoardOrderMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.MergeBoardOrderMapABValue> MergeBoardOrderMapAB {
      get { return mergeBoardOrderMapAB_; }
    }

    /// <summary>Field number for the "MergeBoardOrderMapABPatch" field.</summary>
    public const int MergeBoardOrderMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.MergeBoardOrderMapABValue>.Codec _map_mergeBoardOrderMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.MergeBoardOrderMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.MergeBoardOrderMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.MergeBoardOrderMapABValue> mergeBoardOrderMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.MergeBoardOrderMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.MergeBoardOrderMapABValue> MergeBoardOrderMapABPatch {
      get { return mergeBoardOrderMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MergeBoardOrderConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MergeBoardOrderConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!MergeBoardOrderMap.Equals(other.MergeBoardOrderMap)) return false;
      if (!MergeBoardOrderMapAB.Equals(other.MergeBoardOrderMapAB)) return false;
      if (!MergeBoardOrderMapABPatch.Equals(other.MergeBoardOrderMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= MergeBoardOrderMap.GetHashCode();
      hash ^= MergeBoardOrderMapAB.GetHashCode();
      hash ^= MergeBoardOrderMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      mergeBoardOrderMap_.WriteTo(output, _map_mergeBoardOrderMap_codec);
      mergeBoardOrderMapAB_.WriteTo(output, _map_mergeBoardOrderMapAB_codec);
      mergeBoardOrderMapABPatch_.WriteTo(output, _map_mergeBoardOrderMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      mergeBoardOrderMap_.WriteTo(ref output, _map_mergeBoardOrderMap_codec);
      mergeBoardOrderMapAB_.WriteTo(ref output, _map_mergeBoardOrderMapAB_codec);
      mergeBoardOrderMapABPatch_.WriteTo(ref output, _map_mergeBoardOrderMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += mergeBoardOrderMap_.CalculateSize(_map_mergeBoardOrderMap_codec);
      size += mergeBoardOrderMapAB_.CalculateSize(_map_mergeBoardOrderMapAB_codec);
      size += mergeBoardOrderMapABPatch_.CalculateSize(_map_mergeBoardOrderMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MergeBoardOrderConf other) {
      if (other == null) {
        return;
      }
      mergeBoardOrderMap_.Add(other.mergeBoardOrderMap_);
      mergeBoardOrderMapAB_.Add(other.mergeBoardOrderMapAB_);
      mergeBoardOrderMapABPatch_.Add(other.mergeBoardOrderMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            mergeBoardOrderMap_.AddEntriesFrom(input, _map_mergeBoardOrderMap_codec);
            break;
          }
          case 18: {
            mergeBoardOrderMapAB_.AddEntriesFrom(input, _map_mergeBoardOrderMapAB_codec);
            break;
          }
          case 26: {
            mergeBoardOrderMapABPatch_.AddEntriesFrom(input, _map_mergeBoardOrderMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            mergeBoardOrderMap_.AddEntriesFrom(ref input, _map_mergeBoardOrderMap_codec);
            break;
          }
          case 18: {
            mergeBoardOrderMapAB_.AddEntriesFrom(ref input, _map_mergeBoardOrderMapAB_codec);
            break;
          }
          case 26: {
            mergeBoardOrderMapABPatch_.AddEntriesFrom(ref input, _map_mergeBoardOrderMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
