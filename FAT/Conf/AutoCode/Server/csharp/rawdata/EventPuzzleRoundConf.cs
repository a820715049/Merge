// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventPuzzleRoundConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventPuzzleRoundConf.proto</summary>
  public static partial class EventPuzzleRoundConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventPuzzleRoundConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventPuzzleRoundConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiJyYXdkYXRhL0V2ZW50UHV6emxlUm91bmRDb25mLnByb3RvEgdyYXdkYXRh",
            "IlIKEEV2ZW50UHV6emxlUm91bmQSCgoCaWQYASABKAUSDwoHYmdJbWFnZRgE",
            "IAEoCRIPCgdncmFkZUlkGAIgASgFEhAKCHByb2dyZXNzGAMgASgFIs4BChpF",
            "dmVudFB1enpsZVJvdW5kTWFwQUJWYWx1ZRJZChNFdmVudFB1enpsZVJvdW5k",
            "TWFwGAEgAygLMjwucmF3ZGF0YS5FdmVudFB1enpsZVJvdW5kTWFwQUJWYWx1",
            "ZS5FdmVudFB1enpsZVJvdW5kTWFwRW50cnkaVQoYRXZlbnRQdXp6bGVSb3Vu",
            "ZE1hcEVudHJ5EgsKA2tleRgBIAEoBRIoCgV2YWx1ZRgCIAEoCzIZLnJhd2Rh",
            "dGEuRXZlbnRQdXp6bGVSb3VuZDoCOAEiyQQKFEV2ZW50UHV6emxlUm91bmRD",
            "b25mElMKE0V2ZW50UHV6emxlUm91bmRNYXAYASADKAsyNi5yYXdkYXRhLkV2",
            "ZW50UHV6emxlUm91bmRDb25mLkV2ZW50UHV6emxlUm91bmRNYXBFbnRyeRJX",
            "ChVFdmVudFB1enpsZVJvdW5kTWFwQUIYAiADKAsyOC5yYXdkYXRhLkV2ZW50",
            "UHV6emxlUm91bmRDb25mLkV2ZW50UHV6emxlUm91bmRNYXBBQkVudHJ5EmEK",
            "GkV2ZW50UHV6emxlUm91bmRNYXBBQlBhdGNoGAMgAygLMj0ucmF3ZGF0YS5F",
            "dmVudFB1enpsZVJvdW5kQ29uZi5FdmVudFB1enpsZVJvdW5kTWFwQUJQYXRj",
            "aEVudHJ5GlUKGEV2ZW50UHV6emxlUm91bmRNYXBFbnRyeRILCgNrZXkYASAB",
            "KAUSKAoFdmFsdWUYAiABKAsyGS5yYXdkYXRhLkV2ZW50UHV6emxlUm91bmQ6",
            "AjgBGmEKGkV2ZW50UHV6emxlUm91bmRNYXBBQkVudHJ5EgsKA2tleRgBIAEo",
            "CRIyCgV2YWx1ZRgCIAEoCzIjLnJhd2RhdGEuRXZlbnRQdXp6bGVSb3VuZE1h",
            "cEFCVmFsdWU6AjgBGmYKH0V2ZW50UHV6emxlUm91bmRNYXBBQlBhdGNoRW50",
            "cnkSCwoDa2V5GAEgASgJEjIKBXZhbHVlGAIgASgLMiMucmF3ZGF0YS5FdmVu",
            "dFB1enpsZVJvdW5kTWFwQUJWYWx1ZToCOAFCPVotZ2l0bGFiLmZ1bnBsdXMu",
            "aW8vZmF0L2NvbmYvZ2VuL2dvbGFuZy9yYXdkYXRhqgILZmF0LnJhd2RhdGFi",
            "BnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventPuzzleRound), global::fat.rawdata.EventPuzzleRound.Parser, new[]{ "Id", "BgImage", "GradeId", "Progress" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventPuzzleRoundMapABValue), global::fat.rawdata.EventPuzzleRoundMapABValue.Parser, new[]{ "EventPuzzleRoundMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventPuzzleRoundConf), global::fat.rawdata.EventPuzzleRoundConf.Parser, new[]{ "EventPuzzleRoundMap", "EventPuzzleRoundMapAB", "EventPuzzleRoundMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventPuzzleRound",table="EventPuzzleRoundMap",table_wrapper="EventPuzzleRoundConf",map="true",map_key_type="int32",data="EventPuzzleRoundConf")
  /// annotation@ab(table_ab="EventPuzzleRoundMapAB",table_ab_patch="EventPuzzleRoundMapABPatch",table_ab_value="EventPuzzleRoundMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventPuzzleRound(id="id")
  /// </summary>
  public sealed partial class EventPuzzleRound : pb::IMessage<EventPuzzleRound>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventPuzzleRound> _parser = new pb::MessageParser<EventPuzzleRound>(() => new EventPuzzleRound());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventPuzzleRound> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventPuzzleRoundConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventPuzzleRound() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventPuzzleRound(EventPuzzleRound other) : this() {
      id_ = other.id_;
      bgImage_ = other.bgImage_;
      gradeId_ = other.gradeId_;
      progress_ = other.progress_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventPuzzleRound Clone() {
      return new EventPuzzleRound(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 回合id
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "bgImage" field.</summary>
    public const int BgImageFieldNumber = 4;
    private string bgImage_ = "";
    /// <summary>
    /// 每回合背景图
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BgImage {
      get { return bgImage_; }
      set {
        bgImage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gradeId" field.</summary>
    public const int GradeIdFieldNumber = 2;
    private int gradeId_;
    /// <summary>
    /// 分层
    /// （GradeIndexMapping.id）
    /// （EventPuzzleDetaile.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GradeId {
      get { return gradeId_; }
      set {
        gradeId_ = value;
      }
    }

    /// <summary>Field number for the "progress" field.</summary>
    public const int ProgressFieldNumber = 3;
    private int progress_;
    /// <summary>
    /// 进度值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Progress {
      get { return progress_; }
      set {
        progress_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventPuzzleRound);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventPuzzleRound other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (BgImage != other.BgImage) return false;
      if (GradeId != other.GradeId) return false;
      if (Progress != other.Progress) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (BgImage.Length != 0) hash ^= BgImage.GetHashCode();
      if (GradeId != 0) hash ^= GradeId.GetHashCode();
      if (Progress != 0) hash ^= Progress.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (GradeId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(GradeId);
      }
      if (Progress != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Progress);
      }
      if (BgImage.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(BgImage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (GradeId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(GradeId);
      }
      if (Progress != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Progress);
      }
      if (BgImage.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(BgImage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (BgImage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BgImage);
      }
      if (GradeId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GradeId);
      }
      if (Progress != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Progress);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventPuzzleRound other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.BgImage.Length != 0) {
        BgImage = other.BgImage;
      }
      if (other.GradeId != 0) {
        GradeId = other.GradeId;
      }
      if (other.Progress != 0) {
        Progress = other.Progress;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            GradeId = input.ReadInt32();
            break;
          }
          case 24: {
            Progress = input.ReadInt32();
            break;
          }
          case 34: {
            BgImage = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            GradeId = input.ReadInt32();
            break;
          }
          case 24: {
            Progress = input.ReadInt32();
            break;
          }
          case 34: {
            BgImage = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventPuzzleRoundMapABValue : pb::IMessage<EventPuzzleRoundMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventPuzzleRoundMapABValue> _parser = new pb::MessageParser<EventPuzzleRoundMapABValue>(() => new EventPuzzleRoundMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventPuzzleRoundMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventPuzzleRoundConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventPuzzleRoundMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventPuzzleRoundMapABValue(EventPuzzleRoundMapABValue other) : this() {
      eventPuzzleRoundMap_ = other.eventPuzzleRoundMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventPuzzleRoundMapABValue Clone() {
      return new EventPuzzleRoundMapABValue(this);
    }

    /// <summary>Field number for the "EventPuzzleRoundMap" field.</summary>
    public const int EventPuzzleRoundMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventPuzzleRound>.Codec _map_eventPuzzleRoundMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventPuzzleRound>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventPuzzleRound.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventPuzzleRound> eventPuzzleRoundMap_ = new pbc::MapField<int, global::fat.rawdata.EventPuzzleRound>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventPuzzleRound> EventPuzzleRoundMap {
      get { return eventPuzzleRoundMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventPuzzleRoundMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventPuzzleRoundMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventPuzzleRoundMap.Equals(other.EventPuzzleRoundMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventPuzzleRoundMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventPuzzleRoundMap_.WriteTo(output, _map_eventPuzzleRoundMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventPuzzleRoundMap_.WriteTo(ref output, _map_eventPuzzleRoundMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventPuzzleRoundMap_.CalculateSize(_map_eventPuzzleRoundMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventPuzzleRoundMapABValue other) {
      if (other == null) {
        return;
      }
      eventPuzzleRoundMap_.Add(other.eventPuzzleRoundMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventPuzzleRoundMap_.AddEntriesFrom(input, _map_eventPuzzleRoundMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventPuzzleRoundMap_.AddEntriesFrom(ref input, _map_eventPuzzleRoundMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventPuzzleRoundConf : pb::IMessage<EventPuzzleRoundConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventPuzzleRoundConf> _parser = new pb::MessageParser<EventPuzzleRoundConf>(() => new EventPuzzleRoundConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventPuzzleRoundConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventPuzzleRoundConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventPuzzleRoundConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventPuzzleRoundConf(EventPuzzleRoundConf other) : this() {
      eventPuzzleRoundMap_ = other.eventPuzzleRoundMap_.Clone();
      eventPuzzleRoundMapAB_ = other.eventPuzzleRoundMapAB_.Clone();
      eventPuzzleRoundMapABPatch_ = other.eventPuzzleRoundMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventPuzzleRoundConf Clone() {
      return new EventPuzzleRoundConf(this);
    }

    /// <summary>Field number for the "EventPuzzleRoundMap" field.</summary>
    public const int EventPuzzleRoundMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventPuzzleRound>.Codec _map_eventPuzzleRoundMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventPuzzleRound>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventPuzzleRound.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventPuzzleRound> eventPuzzleRoundMap_ = new pbc::MapField<int, global::fat.rawdata.EventPuzzleRound>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventPuzzleRound> EventPuzzleRoundMap {
      get { return eventPuzzleRoundMap_; }
    }

    /// <summary>Field number for the "EventPuzzleRoundMapAB" field.</summary>
    public const int EventPuzzleRoundMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventPuzzleRoundMapABValue>.Codec _map_eventPuzzleRoundMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventPuzzleRoundMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventPuzzleRoundMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventPuzzleRoundMapABValue> eventPuzzleRoundMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventPuzzleRoundMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventPuzzleRoundMapABValue> EventPuzzleRoundMapAB {
      get { return eventPuzzleRoundMapAB_; }
    }

    /// <summary>Field number for the "EventPuzzleRoundMapABPatch" field.</summary>
    public const int EventPuzzleRoundMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventPuzzleRoundMapABValue>.Codec _map_eventPuzzleRoundMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventPuzzleRoundMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventPuzzleRoundMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventPuzzleRoundMapABValue> eventPuzzleRoundMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventPuzzleRoundMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventPuzzleRoundMapABValue> EventPuzzleRoundMapABPatch {
      get { return eventPuzzleRoundMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventPuzzleRoundConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventPuzzleRoundConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventPuzzleRoundMap.Equals(other.EventPuzzleRoundMap)) return false;
      if (!EventPuzzleRoundMapAB.Equals(other.EventPuzzleRoundMapAB)) return false;
      if (!EventPuzzleRoundMapABPatch.Equals(other.EventPuzzleRoundMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventPuzzleRoundMap.GetHashCode();
      hash ^= EventPuzzleRoundMapAB.GetHashCode();
      hash ^= EventPuzzleRoundMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventPuzzleRoundMap_.WriteTo(output, _map_eventPuzzleRoundMap_codec);
      eventPuzzleRoundMapAB_.WriteTo(output, _map_eventPuzzleRoundMapAB_codec);
      eventPuzzleRoundMapABPatch_.WriteTo(output, _map_eventPuzzleRoundMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventPuzzleRoundMap_.WriteTo(ref output, _map_eventPuzzleRoundMap_codec);
      eventPuzzleRoundMapAB_.WriteTo(ref output, _map_eventPuzzleRoundMapAB_codec);
      eventPuzzleRoundMapABPatch_.WriteTo(ref output, _map_eventPuzzleRoundMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventPuzzleRoundMap_.CalculateSize(_map_eventPuzzleRoundMap_codec);
      size += eventPuzzleRoundMapAB_.CalculateSize(_map_eventPuzzleRoundMapAB_codec);
      size += eventPuzzleRoundMapABPatch_.CalculateSize(_map_eventPuzzleRoundMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventPuzzleRoundConf other) {
      if (other == null) {
        return;
      }
      eventPuzzleRoundMap_.Add(other.eventPuzzleRoundMap_);
      eventPuzzleRoundMapAB_.Add(other.eventPuzzleRoundMapAB_);
      eventPuzzleRoundMapABPatch_.Add(other.eventPuzzleRoundMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventPuzzleRoundMap_.AddEntriesFrom(input, _map_eventPuzzleRoundMap_codec);
            break;
          }
          case 18: {
            eventPuzzleRoundMapAB_.AddEntriesFrom(input, _map_eventPuzzleRoundMapAB_codec);
            break;
          }
          case 26: {
            eventPuzzleRoundMapABPatch_.AddEntriesFrom(input, _map_eventPuzzleRoundMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventPuzzleRoundMap_.AddEntriesFrom(ref input, _map_eventPuzzleRoundMap_codec);
            break;
          }
          case 18: {
            eventPuzzleRoundMapAB_.AddEntriesFrom(ref input, _map_eventPuzzleRoundMapAB_codec);
            break;
          }
          case 26: {
            eventPuzzleRoundMapABPatch_.AddEntriesFrom(ref input, _map_eventPuzzleRoundMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
