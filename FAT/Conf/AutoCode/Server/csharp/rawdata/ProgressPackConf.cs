// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/ProgressPackConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/ProgressPackConf.proto</summary>
  public static partial class ProgressPackConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/ProgressPackConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ProgressPackConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch5yYXdkYXRhL1Byb2dyZXNzUGFja0NvbmYucHJvdG8SB3Jhd2RhdGEinwEK",
            "DFByb2dyZXNzUGFjaxIKCgJpZBgBIAEoBRISCgpldmVudFRoZW1lGAIgASgF",
            "EhQKDHBhY2tPbmVHcnBJZBgDIAEoBRIWCg5wYWNrVGhyZWVHcnBJZBgEIAEo",
            "BRIUCgxwYWNrVHdvR3JwSWQYBSABKAUSDQoFc2FsZTEYBiABKAUSDQoFc2Fs",
            "ZTIYByABKAUSDQoFc2FsZTMYCCABKAUitgEKFlByb2dyZXNzUGFja01hcEFC",
            "VmFsdWUSTQoPUHJvZ3Jlc3NQYWNrTWFwGAEgAygLMjQucmF3ZGF0YS5Qcm9n",
            "cmVzc1BhY2tNYXBBQlZhbHVlLlByb2dyZXNzUGFja01hcEVudHJ5Gk0KFFBy",
            "b2dyZXNzUGFja01hcEVudHJ5EgsKA2tleRgBIAEoBRIkCgV2YWx1ZRgCIAEo",
            "CzIVLnJhd2RhdGEuUHJvZ3Jlc3NQYWNrOgI4ASKJBAoQUHJvZ3Jlc3NQYWNr",
            "Q29uZhJHCg9Qcm9ncmVzc1BhY2tNYXAYASADKAsyLi5yYXdkYXRhLlByb2dy",
            "ZXNzUGFja0NvbmYuUHJvZ3Jlc3NQYWNrTWFwRW50cnkSSwoRUHJvZ3Jlc3NQ",
            "YWNrTWFwQUIYAiADKAsyMC5yYXdkYXRhLlByb2dyZXNzUGFja0NvbmYuUHJv",
            "Z3Jlc3NQYWNrTWFwQUJFbnRyeRJVChZQcm9ncmVzc1BhY2tNYXBBQlBhdGNo",
            "GAMgAygLMjUucmF3ZGF0YS5Qcm9ncmVzc1BhY2tDb25mLlByb2dyZXNzUGFj",
            "a01hcEFCUGF0Y2hFbnRyeRpNChRQcm9ncmVzc1BhY2tNYXBFbnRyeRILCgNr",
            "ZXkYASABKAUSJAoFdmFsdWUYAiABKAsyFS5yYXdkYXRhLlByb2dyZXNzUGFj",
            "azoCOAEaWQoWUHJvZ3Jlc3NQYWNrTWFwQUJFbnRyeRILCgNrZXkYASABKAkS",
            "LgoFdmFsdWUYAiABKAsyHy5yYXdkYXRhLlByb2dyZXNzUGFja01hcEFCVmFs",
            "dWU6AjgBGl4KG1Byb2dyZXNzUGFja01hcEFCUGF0Y2hFbnRyeRILCgNrZXkY",
            "ASABKAkSLgoFdmFsdWUYAiABKAsyHy5yYXdkYXRhLlByb2dyZXNzUGFja01h",
            "cEFCVmFsdWU6AjgBQj1aLWdpdGxhYi5mdW5wbHVzLmlvL2ZhdC9jb25mL2dl",
            "bi9nb2xhbmcvcmF3ZGF0YaoCC2ZhdC5yYXdkYXRhYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.ProgressPack), global::fat.rawdata.ProgressPack.Parser, new[]{ "Id", "EventTheme", "PackOneGrpId", "PackThreeGrpId", "PackTwoGrpId", "Sale1", "Sale2", "Sale3" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.ProgressPackMapABValue), global::fat.rawdata.ProgressPackMapABValue.Parser, new[]{ "ProgressPackMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.ProgressPackConf), global::fat.rawdata.ProgressPackConf.Parser, new[]{ "ProgressPackMap", "ProgressPackMapAB", "ProgressPackMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="ProgressPack",table="ProgressPackMap",table_wrapper="ProgressPackConf",map="true",map_key_type="int32",data="ProgressPackConf")
  /// annotation@ab(table_ab="ProgressPackMapAB",table_ab_patch="ProgressPackMapABPatch",table_ab_value="ProgressPackMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@ProgressPack(id="id")
  /// </summary>
  public sealed partial class ProgressPack : pb::IMessage<ProgressPack>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProgressPack> _parser = new pb::MessageParser<ProgressPack>(() => new ProgressPack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProgressPack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.ProgressPackConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProgressPack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProgressPack(ProgressPack other) : this() {
      id_ = other.id_;
      eventTheme_ = other.eventTheme_;
      packOneGrpId_ = other.packOneGrpId_;
      packThreeGrpId_ = other.packThreeGrpId_;
      packTwoGrpId_ = other.packTwoGrpId_;
      sale1_ = other.sale1_;
      sale2_ = other.sale2_;
      sale3_ = other.sale3_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProgressPack Clone() {
      return new ProgressPack(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 进阶礼包
    /// 模板ID
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "eventTheme" field.</summary>
    public const int EventThemeFieldNumber = 2;
    private int eventTheme_;
    /// <summary>
    /// 活动弹板ID
    /// （EventTheme.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EventTheme {
      get { return eventTheme_; }
      set {
        eventTheme_ = value;
      }
    }

    /// <summary>Field number for the "packOneGrpId" field.</summary>
    public const int PackOneGrpIdFieldNumber = 3;
    private int packOneGrpId_;
    /// <summary>
    /// 内购商品ID
    /// （受档位组控制）
    /// （GradeIndexMapping.id）
    /// （IAPPack.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PackOneGrpId {
      get { return packOneGrpId_; }
      set {
        packOneGrpId_ = value;
      }
    }

    /// <summary>Field number for the "packThreeGrpId" field.</summary>
    public const int PackThreeGrpIdFieldNumber = 4;
    private int packThreeGrpId_;
    /// <summary>
    /// 内购商品ID
    /// （受档位组控制）
    /// （GradeIndexMapping.id）
    /// （IAPPack.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PackThreeGrpId {
      get { return packThreeGrpId_; }
      set {
        packThreeGrpId_ = value;
      }
    }

    /// <summary>Field number for the "packTwoGrpId" field.</summary>
    public const int PackTwoGrpIdFieldNumber = 5;
    private int packTwoGrpId_;
    /// <summary>
    /// 内购商品ID
    /// （受档位组控制）
    /// （GradeIndexMapping.id）
    /// （IAPPack.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PackTwoGrpId {
      get { return packTwoGrpId_; }
      set {
        packTwoGrpId_ = value;
      }
    }

    /// <summary>Field number for the "sale1" field.</summary>
    public const int Sale1FieldNumber = 6;
    private int sale1_;
    /// <summary>
    /// packone标签是否显示
    /// （TRUE为显示，空则不显示）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Sale1 {
      get { return sale1_; }
      set {
        sale1_ = value;
      }
    }

    /// <summary>Field number for the "sale2" field.</summary>
    public const int Sale2FieldNumber = 7;
    private int sale2_;
    /// <summary>
    /// 标签信息
    /// （Label.id）
    /// （为空代表不显示标签）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Sale2 {
      get { return sale2_; }
      set {
        sale2_ = value;
      }
    }

    /// <summary>Field number for the "sale3" field.</summary>
    public const int Sale3FieldNumber = 8;
    private int sale3_;
    /// <summary>
    /// 标签信息
    /// （Label.id）
    /// （为空代表不显示标签）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Sale3 {
      get { return sale3_; }
      set {
        sale3_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProgressPack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProgressPack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (EventTheme != other.EventTheme) return false;
      if (PackOneGrpId != other.PackOneGrpId) return false;
      if (PackThreeGrpId != other.PackThreeGrpId) return false;
      if (PackTwoGrpId != other.PackTwoGrpId) return false;
      if (Sale1 != other.Sale1) return false;
      if (Sale2 != other.Sale2) return false;
      if (Sale3 != other.Sale3) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (EventTheme != 0) hash ^= EventTheme.GetHashCode();
      if (PackOneGrpId != 0) hash ^= PackOneGrpId.GetHashCode();
      if (PackThreeGrpId != 0) hash ^= PackThreeGrpId.GetHashCode();
      if (PackTwoGrpId != 0) hash ^= PackTwoGrpId.GetHashCode();
      if (Sale1 != 0) hash ^= Sale1.GetHashCode();
      if (Sale2 != 0) hash ^= Sale2.GetHashCode();
      if (Sale3 != 0) hash ^= Sale3.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (EventTheme != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(EventTheme);
      }
      if (PackOneGrpId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PackOneGrpId);
      }
      if (PackThreeGrpId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(PackThreeGrpId);
      }
      if (PackTwoGrpId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(PackTwoGrpId);
      }
      if (Sale1 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Sale1);
      }
      if (Sale2 != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Sale2);
      }
      if (Sale3 != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Sale3);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (EventTheme != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(EventTheme);
      }
      if (PackOneGrpId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PackOneGrpId);
      }
      if (PackThreeGrpId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(PackThreeGrpId);
      }
      if (PackTwoGrpId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(PackTwoGrpId);
      }
      if (Sale1 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Sale1);
      }
      if (Sale2 != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Sale2);
      }
      if (Sale3 != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Sale3);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (EventTheme != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EventTheme);
      }
      if (PackOneGrpId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PackOneGrpId);
      }
      if (PackThreeGrpId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PackThreeGrpId);
      }
      if (PackTwoGrpId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PackTwoGrpId);
      }
      if (Sale1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Sale1);
      }
      if (Sale2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Sale2);
      }
      if (Sale3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Sale3);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProgressPack other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.EventTheme != 0) {
        EventTheme = other.EventTheme;
      }
      if (other.PackOneGrpId != 0) {
        PackOneGrpId = other.PackOneGrpId;
      }
      if (other.PackThreeGrpId != 0) {
        PackThreeGrpId = other.PackThreeGrpId;
      }
      if (other.PackTwoGrpId != 0) {
        PackTwoGrpId = other.PackTwoGrpId;
      }
      if (other.Sale1 != 0) {
        Sale1 = other.Sale1;
      }
      if (other.Sale2 != 0) {
        Sale2 = other.Sale2;
      }
      if (other.Sale3 != 0) {
        Sale3 = other.Sale3;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            EventTheme = input.ReadInt32();
            break;
          }
          case 24: {
            PackOneGrpId = input.ReadInt32();
            break;
          }
          case 32: {
            PackThreeGrpId = input.ReadInt32();
            break;
          }
          case 40: {
            PackTwoGrpId = input.ReadInt32();
            break;
          }
          case 48: {
            Sale1 = input.ReadInt32();
            break;
          }
          case 56: {
            Sale2 = input.ReadInt32();
            break;
          }
          case 64: {
            Sale3 = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            EventTheme = input.ReadInt32();
            break;
          }
          case 24: {
            PackOneGrpId = input.ReadInt32();
            break;
          }
          case 32: {
            PackThreeGrpId = input.ReadInt32();
            break;
          }
          case 40: {
            PackTwoGrpId = input.ReadInt32();
            break;
          }
          case 48: {
            Sale1 = input.ReadInt32();
            break;
          }
          case 56: {
            Sale2 = input.ReadInt32();
            break;
          }
          case 64: {
            Sale3 = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProgressPackMapABValue : pb::IMessage<ProgressPackMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProgressPackMapABValue> _parser = new pb::MessageParser<ProgressPackMapABValue>(() => new ProgressPackMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProgressPackMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.ProgressPackConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProgressPackMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProgressPackMapABValue(ProgressPackMapABValue other) : this() {
      progressPackMap_ = other.progressPackMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProgressPackMapABValue Clone() {
      return new ProgressPackMapABValue(this);
    }

    /// <summary>Field number for the "ProgressPackMap" field.</summary>
    public const int ProgressPackMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.ProgressPack>.Codec _map_progressPackMap_codec
        = new pbc::MapField<int, global::fat.rawdata.ProgressPack>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ProgressPack.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.ProgressPack> progressPackMap_ = new pbc::MapField<int, global::fat.rawdata.ProgressPack>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.ProgressPack> ProgressPackMap {
      get { return progressPackMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProgressPackMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProgressPackMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!ProgressPackMap.Equals(other.ProgressPackMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ProgressPackMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      progressPackMap_.WriteTo(output, _map_progressPackMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      progressPackMap_.WriteTo(ref output, _map_progressPackMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += progressPackMap_.CalculateSize(_map_progressPackMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProgressPackMapABValue other) {
      if (other == null) {
        return;
      }
      progressPackMap_.Add(other.progressPackMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            progressPackMap_.AddEntriesFrom(input, _map_progressPackMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            progressPackMap_.AddEntriesFrom(ref input, _map_progressPackMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProgressPackConf : pb::IMessage<ProgressPackConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProgressPackConf> _parser = new pb::MessageParser<ProgressPackConf>(() => new ProgressPackConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProgressPackConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.ProgressPackConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProgressPackConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProgressPackConf(ProgressPackConf other) : this() {
      progressPackMap_ = other.progressPackMap_.Clone();
      progressPackMapAB_ = other.progressPackMapAB_.Clone();
      progressPackMapABPatch_ = other.progressPackMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProgressPackConf Clone() {
      return new ProgressPackConf(this);
    }

    /// <summary>Field number for the "ProgressPackMap" field.</summary>
    public const int ProgressPackMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.ProgressPack>.Codec _map_progressPackMap_codec
        = new pbc::MapField<int, global::fat.rawdata.ProgressPack>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ProgressPack.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.ProgressPack> progressPackMap_ = new pbc::MapField<int, global::fat.rawdata.ProgressPack>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.ProgressPack> ProgressPackMap {
      get { return progressPackMap_; }
    }

    /// <summary>Field number for the "ProgressPackMapAB" field.</summary>
    public const int ProgressPackMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.ProgressPackMapABValue>.Codec _map_progressPackMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.ProgressPackMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ProgressPackMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.ProgressPackMapABValue> progressPackMapAB_ = new pbc::MapField<string, global::fat.rawdata.ProgressPackMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.ProgressPackMapABValue> ProgressPackMapAB {
      get { return progressPackMapAB_; }
    }

    /// <summary>Field number for the "ProgressPackMapABPatch" field.</summary>
    public const int ProgressPackMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.ProgressPackMapABValue>.Codec _map_progressPackMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.ProgressPackMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ProgressPackMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.ProgressPackMapABValue> progressPackMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.ProgressPackMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.ProgressPackMapABValue> ProgressPackMapABPatch {
      get { return progressPackMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProgressPackConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProgressPackConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!ProgressPackMap.Equals(other.ProgressPackMap)) return false;
      if (!ProgressPackMapAB.Equals(other.ProgressPackMapAB)) return false;
      if (!ProgressPackMapABPatch.Equals(other.ProgressPackMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ProgressPackMap.GetHashCode();
      hash ^= ProgressPackMapAB.GetHashCode();
      hash ^= ProgressPackMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      progressPackMap_.WriteTo(output, _map_progressPackMap_codec);
      progressPackMapAB_.WriteTo(output, _map_progressPackMapAB_codec);
      progressPackMapABPatch_.WriteTo(output, _map_progressPackMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      progressPackMap_.WriteTo(ref output, _map_progressPackMap_codec);
      progressPackMapAB_.WriteTo(ref output, _map_progressPackMapAB_codec);
      progressPackMapABPatch_.WriteTo(ref output, _map_progressPackMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += progressPackMap_.CalculateSize(_map_progressPackMap_codec);
      size += progressPackMapAB_.CalculateSize(_map_progressPackMapAB_codec);
      size += progressPackMapABPatch_.CalculateSize(_map_progressPackMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProgressPackConf other) {
      if (other == null) {
        return;
      }
      progressPackMap_.Add(other.progressPackMap_);
      progressPackMapAB_.Add(other.progressPackMapAB_);
      progressPackMapABPatch_.Add(other.progressPackMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            progressPackMap_.AddEntriesFrom(input, _map_progressPackMap_codec);
            break;
          }
          case 18: {
            progressPackMapAB_.AddEntriesFrom(input, _map_progressPackMapAB_codec);
            break;
          }
          case 26: {
            progressPackMapABPatch_.AddEntriesFrom(input, _map_progressPackMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            progressPackMap_.AddEntriesFrom(ref input, _map_progressPackMap_codec);
            break;
          }
          case 18: {
            progressPackMapAB_.AddEntriesFrom(ref input, _map_progressPackMapAB_codec);
            break;
          }
          case 26: {
            progressPackMapABPatch_.AddEntriesFrom(ref input, _map_progressPackMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
