// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/PlayerGroupConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/PlayerGroupConf.proto</summary>
  public static partial class PlayerGroupConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/PlayerGroupConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PlayerGroupConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch1yYXdkYXRhL1BsYXllckdyb3VwQ29uZi5wcm90bxIHcmF3ZGF0YSKiAgoL",
            "UGxheWVyR3JvdXASCgoCaWQYASABKAUSDgoGX3RhZ3NfGAIgAygJEjwKDGNv",
            "bmZpZ0dyb3VwcxgDIAMoCzImLnJhd2RhdGEuUGxheWVyR3JvdXAuQ29uZmln",
            "R3JvdXBzRW50cnkSOgoLZ3JvdXBEZWZpbmUYBSADKAsyJS5yYXdkYXRhLlBs",
            "YXllckdyb3VwLkdyb3VwRGVmaW5lRW50cnkSFAoMb2xkVXNlckdyb3VwGAcg",
            "ASgFGjMKEUNvbmZpZ0dyb3Vwc0VudHJ5EgsKA2tleRgBIAEoBRINCgV2YWx1",
            "ZRgCIAEoCToCOAEaMgoQR3JvdXBEZWZpbmVFbnRyeRILCgNrZXkYASABKAUS",
            "DQoFdmFsdWUYAiABKAU6AjgBIrABChVQbGF5ZXJHcm91cE1hcEFCVmFsdWUS",
            "SgoOUGxheWVyR3JvdXBNYXAYASADKAsyMi5yYXdkYXRhLlBsYXllckdyb3Vw",
            "TWFwQUJWYWx1ZS5QbGF5ZXJHcm91cE1hcEVudHJ5GksKE1BsYXllckdyb3Vw",
            "TWFwRW50cnkSCwoDa2V5GAEgASgFEiMKBXZhbHVlGAIgASgLMhQucmF3ZGF0",
            "YS5QbGF5ZXJHcm91cDoCOAEi+QMKD1BsYXllckdyb3VwQ29uZhJECg5QbGF5",
            "ZXJHcm91cE1hcBgBIAMoCzIsLnJhd2RhdGEuUGxheWVyR3JvdXBDb25mLlBs",
            "YXllckdyb3VwTWFwRW50cnkSSAoQUGxheWVyR3JvdXBNYXBBQhgCIAMoCzIu",
            "LnJhd2RhdGEuUGxheWVyR3JvdXBDb25mLlBsYXllckdyb3VwTWFwQUJFbnRy",
            "eRJSChVQbGF5ZXJHcm91cE1hcEFCUGF0Y2gYAyADKAsyMy5yYXdkYXRhLlBs",
            "YXllckdyb3VwQ29uZi5QbGF5ZXJHcm91cE1hcEFCUGF0Y2hFbnRyeRpLChNQ",
            "bGF5ZXJHcm91cE1hcEVudHJ5EgsKA2tleRgBIAEoBRIjCgV2YWx1ZRgCIAEo",
            "CzIULnJhd2RhdGEuUGxheWVyR3JvdXA6AjgBGlcKFVBsYXllckdyb3VwTWFw",
            "QUJFbnRyeRILCgNrZXkYASABKAkSLQoFdmFsdWUYAiABKAsyHi5yYXdkYXRh",
            "LlBsYXllckdyb3VwTWFwQUJWYWx1ZToCOAEaXAoaUGxheWVyR3JvdXBNYXBB",
            "QlBhdGNoRW50cnkSCwoDa2V5GAEgASgJEi0KBXZhbHVlGAIgASgLMh4ucmF3",
            "ZGF0YS5QbGF5ZXJHcm91cE1hcEFCVmFsdWU6AjgBQj1aLWdpdGxhYi5mdW5w",
            "bHVzLmlvL2ZhdC9jb25mL2dlbi9nb2xhbmcvcmF3ZGF0YaoCC2ZhdC5yYXdk",
            "YXRhYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.PlayerGroup), global::fat.rawdata.PlayerGroup.Parser, new[]{ "Id", "Tags", "ConfigGroups", "GroupDefine", "OldUserGroup" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.PlayerGroupMapABValue), global::fat.rawdata.PlayerGroupMapABValue.Parser, new[]{ "PlayerGroupMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.PlayerGroupConf), global::fat.rawdata.PlayerGroupConf.Parser, new[]{ "PlayerGroupMap", "PlayerGroupMapAB", "PlayerGroupMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="PlayerGroup",table="PlayerGroupMap",table_wrapper="PlayerGroupConf",map="true",map_key_type="int32",data="PlayerGroupConf")
  /// annotation@ab(table_ab="PlayerGroupMapAB",table_ab_patch="PlayerGroupMapABPatch",table_ab_value="PlayerGroupMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@PlayerGroup(id="id")
  /// </summary>
  public sealed partial class PlayerGroup : pb::IMessage<PlayerGroup>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerGroup> _parser = new pb::MessageParser<PlayerGroup>(() => new PlayerGroup());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerGroup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.PlayerGroupConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerGroup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerGroup(PlayerGroup other) : this() {
      id_ = other.id_;
      Tags_ = other.Tags_.Clone();
      configGroups_ = other.configGroups_.Clone();
      groupDefine_ = other.groupDefine_.Clone();
      oldUserGroup_ = other.oldUserGroup_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerGroup Clone() {
      return new PlayerGroup(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// A/B Testing
    /// 测试ID
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "_tags_" field.</summary>
    public const int TagsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_Tags_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> Tags_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Tags {
      get { return Tags_; }
    }

    /// <summary>Field number for the "configGroups" field.</summary>
    public const int ConfigGroupsFieldNumber = 3;
    private static readonly pbc::MapField<int, string>.Codec _map_configGroups_codec
        = new pbc::MapField<int, string>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForString(18, ""), 26);
    private readonly pbc::MapField<int, string> configGroups_ = new pbc::MapField<int, string>();
    /// <summary>
    /// 不同分组ID
    /// 读取的配置文件后缀
    /// （分组ID : 配置文件后缀）
    /// 
    /// 没有提供后缀的分组ID
    /// 将读取原配置表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, string> ConfigGroups {
      get { return configGroups_; }
    }

    /// <summary>Field number for the "groupDefine" field.</summary>
    public const int GroupDefineFieldNumber = 5;
    private static readonly pbc::MapField<int, int>.Codec _map_groupDefine_codec
        = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForInt32(16, 0), 42);
    private readonly pbc::MapField<int, int> groupDefine_ = new pbc::MapField<int, int>();
    /// <summary>
    /// 测试期间分组配置
    /// （分组ID : 权重）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, int> GroupDefine {
      get { return groupDefine_; }
    }

    /// <summary>Field number for the "oldUserGroup" field.</summary>
    public const int OldUserGroupFieldNumber = 7;
    private int oldUserGroup_;
    /// <summary>
    /// 将老用户设定到
    /// 本轮测试的指定分组
    /// 
    /// 填0代表
    /// 老用户也会按照groupDefine参与分组
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int OldUserGroup {
      get { return oldUserGroup_; }
      set {
        oldUserGroup_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerGroup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerGroup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!Tags_.Equals(other.Tags_)) return false;
      if (!ConfigGroups.Equals(other.ConfigGroups)) return false;
      if (!GroupDefine.Equals(other.GroupDefine)) return false;
      if (OldUserGroup != other.OldUserGroup) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      hash ^= Tags_.GetHashCode();
      hash ^= ConfigGroups.GetHashCode();
      hash ^= GroupDefine.GetHashCode();
      if (OldUserGroup != 0) hash ^= OldUserGroup.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      Tags_.WriteTo(output, _repeated_Tags_codec);
      configGroups_.WriteTo(output, _map_configGroups_codec);
      groupDefine_.WriteTo(output, _map_groupDefine_codec);
      if (OldUserGroup != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(OldUserGroup);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      Tags_.WriteTo(ref output, _repeated_Tags_codec);
      configGroups_.WriteTo(ref output, _map_configGroups_codec);
      groupDefine_.WriteTo(ref output, _map_groupDefine_codec);
      if (OldUserGroup != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(OldUserGroup);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      size += Tags_.CalculateSize(_repeated_Tags_codec);
      size += configGroups_.CalculateSize(_map_configGroups_codec);
      size += groupDefine_.CalculateSize(_map_groupDefine_codec);
      if (OldUserGroup != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OldUserGroup);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerGroup other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      Tags_.Add(other.Tags_);
      configGroups_.Add(other.configGroups_);
      groupDefine_.Add(other.groupDefine_);
      if (other.OldUserGroup != 0) {
        OldUserGroup = other.OldUserGroup;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Tags_.AddEntriesFrom(input, _repeated_Tags_codec);
            break;
          }
          case 26: {
            configGroups_.AddEntriesFrom(input, _map_configGroups_codec);
            break;
          }
          case 42: {
            groupDefine_.AddEntriesFrom(input, _map_groupDefine_codec);
            break;
          }
          case 56: {
            OldUserGroup = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Tags_.AddEntriesFrom(ref input, _repeated_Tags_codec);
            break;
          }
          case 26: {
            configGroups_.AddEntriesFrom(ref input, _map_configGroups_codec);
            break;
          }
          case 42: {
            groupDefine_.AddEntriesFrom(ref input, _map_groupDefine_codec);
            break;
          }
          case 56: {
            OldUserGroup = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PlayerGroupMapABValue : pb::IMessage<PlayerGroupMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerGroupMapABValue> _parser = new pb::MessageParser<PlayerGroupMapABValue>(() => new PlayerGroupMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerGroupMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.PlayerGroupConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerGroupMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerGroupMapABValue(PlayerGroupMapABValue other) : this() {
      playerGroupMap_ = other.playerGroupMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerGroupMapABValue Clone() {
      return new PlayerGroupMapABValue(this);
    }

    /// <summary>Field number for the "PlayerGroupMap" field.</summary>
    public const int PlayerGroupMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.PlayerGroup>.Codec _map_playerGroupMap_codec
        = new pbc::MapField<int, global::fat.rawdata.PlayerGroup>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.PlayerGroup.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.PlayerGroup> playerGroupMap_ = new pbc::MapField<int, global::fat.rawdata.PlayerGroup>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.PlayerGroup> PlayerGroupMap {
      get { return playerGroupMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerGroupMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerGroupMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!PlayerGroupMap.Equals(other.PlayerGroupMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= PlayerGroupMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      playerGroupMap_.WriteTo(output, _map_playerGroupMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      playerGroupMap_.WriteTo(ref output, _map_playerGroupMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += playerGroupMap_.CalculateSize(_map_playerGroupMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerGroupMapABValue other) {
      if (other == null) {
        return;
      }
      playerGroupMap_.Add(other.playerGroupMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            playerGroupMap_.AddEntriesFrom(input, _map_playerGroupMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            playerGroupMap_.AddEntriesFrom(ref input, _map_playerGroupMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PlayerGroupConf : pb::IMessage<PlayerGroupConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerGroupConf> _parser = new pb::MessageParser<PlayerGroupConf>(() => new PlayerGroupConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerGroupConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.PlayerGroupConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerGroupConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerGroupConf(PlayerGroupConf other) : this() {
      playerGroupMap_ = other.playerGroupMap_.Clone();
      playerGroupMapAB_ = other.playerGroupMapAB_.Clone();
      playerGroupMapABPatch_ = other.playerGroupMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerGroupConf Clone() {
      return new PlayerGroupConf(this);
    }

    /// <summary>Field number for the "PlayerGroupMap" field.</summary>
    public const int PlayerGroupMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.PlayerGroup>.Codec _map_playerGroupMap_codec
        = new pbc::MapField<int, global::fat.rawdata.PlayerGroup>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.PlayerGroup.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.PlayerGroup> playerGroupMap_ = new pbc::MapField<int, global::fat.rawdata.PlayerGroup>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.PlayerGroup> PlayerGroupMap {
      get { return playerGroupMap_; }
    }

    /// <summary>Field number for the "PlayerGroupMapAB" field.</summary>
    public const int PlayerGroupMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.PlayerGroupMapABValue>.Codec _map_playerGroupMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.PlayerGroupMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.PlayerGroupMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.PlayerGroupMapABValue> playerGroupMapAB_ = new pbc::MapField<string, global::fat.rawdata.PlayerGroupMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.PlayerGroupMapABValue> PlayerGroupMapAB {
      get { return playerGroupMapAB_; }
    }

    /// <summary>Field number for the "PlayerGroupMapABPatch" field.</summary>
    public const int PlayerGroupMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.PlayerGroupMapABValue>.Codec _map_playerGroupMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.PlayerGroupMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.PlayerGroupMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.PlayerGroupMapABValue> playerGroupMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.PlayerGroupMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.PlayerGroupMapABValue> PlayerGroupMapABPatch {
      get { return playerGroupMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerGroupConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerGroupConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!PlayerGroupMap.Equals(other.PlayerGroupMap)) return false;
      if (!PlayerGroupMapAB.Equals(other.PlayerGroupMapAB)) return false;
      if (!PlayerGroupMapABPatch.Equals(other.PlayerGroupMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= PlayerGroupMap.GetHashCode();
      hash ^= PlayerGroupMapAB.GetHashCode();
      hash ^= PlayerGroupMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      playerGroupMap_.WriteTo(output, _map_playerGroupMap_codec);
      playerGroupMapAB_.WriteTo(output, _map_playerGroupMapAB_codec);
      playerGroupMapABPatch_.WriteTo(output, _map_playerGroupMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      playerGroupMap_.WriteTo(ref output, _map_playerGroupMap_codec);
      playerGroupMapAB_.WriteTo(ref output, _map_playerGroupMapAB_codec);
      playerGroupMapABPatch_.WriteTo(ref output, _map_playerGroupMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += playerGroupMap_.CalculateSize(_map_playerGroupMap_codec);
      size += playerGroupMapAB_.CalculateSize(_map_playerGroupMapAB_codec);
      size += playerGroupMapABPatch_.CalculateSize(_map_playerGroupMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerGroupConf other) {
      if (other == null) {
        return;
      }
      playerGroupMap_.Add(other.playerGroupMap_);
      playerGroupMapAB_.Add(other.playerGroupMapAB_);
      playerGroupMapABPatch_.Add(other.playerGroupMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            playerGroupMap_.AddEntriesFrom(input, _map_playerGroupMap_codec);
            break;
          }
          case 18: {
            playerGroupMapAB_.AddEntriesFrom(input, _map_playerGroupMapAB_codec);
            break;
          }
          case 26: {
            playerGroupMapABPatch_.AddEntriesFrom(input, _map_playerGroupMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            playerGroupMap_.AddEntriesFrom(ref input, _map_playerGroupMap_codec);
            break;
          }
          case 18: {
            playerGroupMapAB_.AddEntriesFrom(ref input, _map_playerGroupMapAB_codec);
            break;
          }
          case 26: {
            playerGroupMapABPatch_.AddEntriesFrom(ref input, _map_playerGroupMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
