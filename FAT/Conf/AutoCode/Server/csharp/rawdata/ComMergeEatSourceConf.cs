// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/ComMergeEatSourceConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/ComMergeEatSourceConf.proto</summary>
  public static partial class ComMergeEatSourceConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/ComMergeEatSourceConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ComMergeEatSourceConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiNyYXdkYXRhL0NvbU1lcmdlRWF0U291cmNlQ29uZi5wcm90bxIHcmF3ZGF0",
            "YSKrAgoRQ29tTWVyZ2VFYXRTb3VyY2USCgoCaWQYASABKAUSEgoKRWF0aW5n",
            "SWNvbhgCIAEoCRIRCglPdXB1dEljb24YAyABKAkSCwoDZWF0GAQgAygJEg8K",
            "B2VhdFRpbWUYBSABKAUSEgoKZW5lcmd5Q29zdBgGIAEoBRIQCghmaXhlZEVh",
            "dBgHIAMoCRISCgpsaW1pdENvdW50GAggASgFEg8KB291dHB1dHMYCSADKAUS",
            "FAoMb3V0cHV0c0ZpeGVkGAogAygFEhgKEG91dHB1dHNGaXhlZFRpbWUYCyAD",
            "KAUSFQoNb3V0cHV0c1dlaWdodBgMIAMoBRIQCghzcGF3blNmeBgNIAEoCRIR",
            "CglzcGVlZENvc3QYDiABKAUSDgoGd2VpZ2h0GA8gAygFItQBChtDb21NZXJn",
            "ZUVhdFNvdXJjZU1hcEFCVmFsdWUSXAoUQ29tTWVyZ2VFYXRTb3VyY2VNYXAY",
            "ASADKAsyPi5yYXdkYXRhLkNvbU1lcmdlRWF0U291cmNlTWFwQUJWYWx1ZS5D",
            "b21NZXJnZUVhdFNvdXJjZU1hcEVudHJ5GlcKGUNvbU1lcmdlRWF0U291cmNl",
            "TWFwRW50cnkSCwoDa2V5GAEgASgFEikKBXZhbHVlGAIgASgLMhoucmF3ZGF0",
            "YS5Db21NZXJnZUVhdFNvdXJjZToCOAEi2QQKFUNvbU1lcmdlRWF0U291cmNl",
            "Q29uZhJWChRDb21NZXJnZUVhdFNvdXJjZU1hcBgBIAMoCzI4LnJhd2RhdGEu",
            "Q29tTWVyZ2VFYXRTb3VyY2VDb25mLkNvbU1lcmdlRWF0U291cmNlTWFwRW50",
            "cnkSWgoWQ29tTWVyZ2VFYXRTb3VyY2VNYXBBQhgCIAMoCzI6LnJhd2RhdGEu",
            "Q29tTWVyZ2VFYXRTb3VyY2VDb25mLkNvbU1lcmdlRWF0U291cmNlTWFwQUJF",
            "bnRyeRJkChtDb21NZXJnZUVhdFNvdXJjZU1hcEFCUGF0Y2gYAyADKAsyPy5y",
            "YXdkYXRhLkNvbU1lcmdlRWF0U291cmNlQ29uZi5Db21NZXJnZUVhdFNvdXJj",
            "ZU1hcEFCUGF0Y2hFbnRyeRpXChlDb21NZXJnZUVhdFNvdXJjZU1hcEVudHJ5",
            "EgsKA2tleRgBIAEoBRIpCgV2YWx1ZRgCIAEoCzIaLnJhd2RhdGEuQ29tTWVy",
            "Z2VFYXRTb3VyY2U6AjgBGmMKG0NvbU1lcmdlRWF0U291cmNlTWFwQUJFbnRy",
            "eRILCgNrZXkYASABKAkSMwoFdmFsdWUYAiABKAsyJC5yYXdkYXRhLkNvbU1l",
            "cmdlRWF0U291cmNlTWFwQUJWYWx1ZToCOAEaaAogQ29tTWVyZ2VFYXRTb3Vy",
            "Y2VNYXBBQlBhdGNoRW50cnkSCwoDa2V5GAEgASgJEjMKBXZhbHVlGAIgASgL",
            "MiQucmF3ZGF0YS5Db21NZXJnZUVhdFNvdXJjZU1hcEFCVmFsdWU6AjgBQj1a",
            "LWdpdGxhYi5mdW5wbHVzLmlvL2ZhdC9jb25mL2dlbi9nb2xhbmcvcmF3ZGF0",
            "YaoCC2ZhdC5yYXdkYXRhYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.ComMergeEatSource), global::fat.rawdata.ComMergeEatSource.Parser, new[]{ "Id", "EatingIcon", "OuputIcon", "Eat", "EatTime", "EnergyCost", "FixedEat", "LimitCount", "Outputs", "OutputsFixed", "OutputsFixedTime", "OutputsWeight", "SpawnSfx", "SpeedCost", "Weight" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.ComMergeEatSourceMapABValue), global::fat.rawdata.ComMergeEatSourceMapABValue.Parser, new[]{ "ComMergeEatSourceMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.ComMergeEatSourceConf), global::fat.rawdata.ComMergeEatSourceConf.Parser, new[]{ "ComMergeEatSourceMap", "ComMergeEatSourceMapAB", "ComMergeEatSourceMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="ComMergeEatSource",table="ComMergeEatSourceMap",table_wrapper="ComMergeEatSourceConf",map="true",map_key_type="int32",data="ComMergeEatSourceConf")
  /// annotation@ab(table_ab="ComMergeEatSourceMapAB",table_ab_patch="ComMergeEatSourceMapABPatch",table_ab_value="ComMergeEatSourceMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@ComMergeEatSource(id="id")
  /// </summary>
  public sealed partial class ComMergeEatSource : pb::IMessage<ComMergeEatSource>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ComMergeEatSource> _parser = new pb::MessageParser<ComMergeEatSource>(() => new ComMergeEatSource());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ComMergeEatSource> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.ComMergeEatSourceConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComMergeEatSource() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComMergeEatSource(ComMergeEatSource other) : this() {
      id_ = other.id_;
      eatingIcon_ = other.eatingIcon_;
      ouputIcon_ = other.ouputIcon_;
      eat_ = other.eat_.Clone();
      eatTime_ = other.eatTime_;
      energyCost_ = other.energyCost_;
      fixedEat_ = other.fixedEat_.Clone();
      limitCount_ = other.limitCount_;
      outputs_ = other.outputs_.Clone();
      outputsFixed_ = other.outputsFixed_.Clone();
      outputsFixedTime_ = other.outputsFixedTime_.Clone();
      outputsWeight_ = other.outputsWeight_.Clone();
      spawnSfx_ = other.spawnSfx_;
      speedCost_ = other.speedCost_;
      weight_ = other.weight_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComMergeEatSource Clone() {
      return new ComMergeEatSource(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 合成物品id
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "EatingIcon" field.</summary>
    public const int EatingIconFieldNumber = 2;
    private string eatingIcon_ = "";
    /// <summary>
    /// 正在吃的图标
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EatingIcon {
      get { return eatingIcon_; }
      set {
        eatingIcon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "OuputIcon" field.</summary>
    public const int OuputIconFieldNumber = 3;
    private string ouputIcon_ = "";
    /// <summary>
    /// 吃完图标
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OuputIcon {
      get { return ouputIcon_; }
      set {
        ouputIcon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "eat" field.</summary>
    public const int EatFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_eat_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> eat_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 消耗的物品及数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Eat {
      get { return eat_; }
    }

    /// <summary>Field number for the "eatTime" field.</summary>
    public const int EatTimeFieldNumber = 5;
    private int eatTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EatTime {
      get { return eatTime_; }
      set {
        eatTime_ = value;
      }
    }

    /// <summary>Field number for the "energyCost" field.</summary>
    public const int EnergyCostFieldNumber = 6;
    private int energyCost_;
    /// <summary>
    /// 出一次东西花费的能量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EnergyCost {
      get { return energyCost_; }
      set {
        energyCost_ = value;
      }
    }

    /// <summary>Field number for the "fixedEat" field.</summary>
    public const int FixedEatFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _repeated_fixedEat_codec
        = pb::FieldCodec.ForString(58);
    private readonly pbc::RepeatedField<string> fixedEat_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 前几个固定消耗
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> FixedEat {
      get { return fixedEat_; }
    }

    /// <summary>Field number for the "limitCount" field.</summary>
    public const int LimitCountFieldNumber = 8;
    private int limitCount_;
    /// <summary>
    /// 最大数量限制
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LimitCount {
      get { return limitCount_; }
      set {
        limitCount_ = value;
      }
    }

    /// <summary>Field number for the "outputs" field.</summary>
    public const int OutputsFieldNumber = 9;
    private static readonly pb::FieldCodec<int> _repeated_outputs_codec
        = pb::FieldCodec.ForInt32(74);
    private readonly pbc::RepeatedField<int> outputs_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 产出表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Outputs {
      get { return outputs_; }
    }

    /// <summary>Field number for the "outputsFixed" field.</summary>
    public const int OutputsFixedFieldNumber = 10;
    private static readonly pb::FieldCodec<int> _repeated_outputsFixed_codec
        = pb::FieldCodec.ForInt32(82);
    private readonly pbc::RepeatedField<int> outputsFixed_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 保底产出
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> OutputsFixed {
      get { return outputsFixed_; }
    }

    /// <summary>Field number for the "outputsFixedTime" field.</summary>
    public const int OutputsFixedTimeFieldNumber = 11;
    private static readonly pb::FieldCodec<int> _repeated_outputsFixedTime_codec
        = pb::FieldCodec.ForInt32(90);
    private readonly pbc::RepeatedField<int> outputsFixedTime_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 保底次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> OutputsFixedTime {
      get { return outputsFixedTime_; }
    }

    /// <summary>Field number for the "outputsWeight" field.</summary>
    public const int OutputsWeightFieldNumber = 12;
    private static readonly pb::FieldCodec<int> _repeated_outputsWeight_codec
        = pb::FieldCodec.ForInt32(98);
    private readonly pbc::RepeatedField<int> outputsWeight_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 产出权重
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> OutputsWeight {
      get { return outputsWeight_; }
    }

    /// <summary>Field number for the "spawnSfx" field.</summary>
    public const int SpawnSfxFieldNumber = 13;
    private string spawnSfx_ = "";
    /// <summary>
    /// 产出音效
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SpawnSfx {
      get { return spawnSfx_; }
      set {
        spawnSfx_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "speedCost" field.</summary>
    public const int SpeedCostFieldNumber = 14;
    private int speedCost_;
    /// <summary>
    /// 消除cd需要多少钻
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SpeedCost {
      get { return speedCost_; }
      set {
        speedCost_ = value;
      }
    }

    /// <summary>Field number for the "weight" field.</summary>
    public const int WeightFieldNumber = 15;
    private static readonly pb::FieldCodec<int> _repeated_weight_codec
        = pb::FieldCodec.ForInt32(122);
    private readonly pbc::RepeatedField<int> weight_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 权重
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Weight {
      get { return weight_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ComMergeEatSource);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ComMergeEatSource other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (EatingIcon != other.EatingIcon) return false;
      if (OuputIcon != other.OuputIcon) return false;
      if(!eat_.Equals(other.eat_)) return false;
      if (EatTime != other.EatTime) return false;
      if (EnergyCost != other.EnergyCost) return false;
      if(!fixedEat_.Equals(other.fixedEat_)) return false;
      if (LimitCount != other.LimitCount) return false;
      if(!outputs_.Equals(other.outputs_)) return false;
      if(!outputsFixed_.Equals(other.outputsFixed_)) return false;
      if(!outputsFixedTime_.Equals(other.outputsFixedTime_)) return false;
      if(!outputsWeight_.Equals(other.outputsWeight_)) return false;
      if (SpawnSfx != other.SpawnSfx) return false;
      if (SpeedCost != other.SpeedCost) return false;
      if(!weight_.Equals(other.weight_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (EatingIcon.Length != 0) hash ^= EatingIcon.GetHashCode();
      if (OuputIcon.Length != 0) hash ^= OuputIcon.GetHashCode();
      hash ^= eat_.GetHashCode();
      if (EatTime != 0) hash ^= EatTime.GetHashCode();
      if (EnergyCost != 0) hash ^= EnergyCost.GetHashCode();
      hash ^= fixedEat_.GetHashCode();
      if (LimitCount != 0) hash ^= LimitCount.GetHashCode();
      hash ^= outputs_.GetHashCode();
      hash ^= outputsFixed_.GetHashCode();
      hash ^= outputsFixedTime_.GetHashCode();
      hash ^= outputsWeight_.GetHashCode();
      if (SpawnSfx.Length != 0) hash ^= SpawnSfx.GetHashCode();
      if (SpeedCost != 0) hash ^= SpeedCost.GetHashCode();
      hash ^= weight_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (EatingIcon.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(EatingIcon);
      }
      if (OuputIcon.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(OuputIcon);
      }
      eat_.WriteTo(output, _repeated_eat_codec);
      if (EatTime != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(EatTime);
      }
      if (EnergyCost != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(EnergyCost);
      }
      fixedEat_.WriteTo(output, _repeated_fixedEat_codec);
      if (LimitCount != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(LimitCount);
      }
      outputs_.WriteTo(output, _repeated_outputs_codec);
      outputsFixed_.WriteTo(output, _repeated_outputsFixed_codec);
      outputsFixedTime_.WriteTo(output, _repeated_outputsFixedTime_codec);
      outputsWeight_.WriteTo(output, _repeated_outputsWeight_codec);
      if (SpawnSfx.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(SpawnSfx);
      }
      if (SpeedCost != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(SpeedCost);
      }
      weight_.WriteTo(output, _repeated_weight_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (EatingIcon.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(EatingIcon);
      }
      if (OuputIcon.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(OuputIcon);
      }
      eat_.WriteTo(ref output, _repeated_eat_codec);
      if (EatTime != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(EatTime);
      }
      if (EnergyCost != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(EnergyCost);
      }
      fixedEat_.WriteTo(ref output, _repeated_fixedEat_codec);
      if (LimitCount != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(LimitCount);
      }
      outputs_.WriteTo(ref output, _repeated_outputs_codec);
      outputsFixed_.WriteTo(ref output, _repeated_outputsFixed_codec);
      outputsFixedTime_.WriteTo(ref output, _repeated_outputsFixedTime_codec);
      outputsWeight_.WriteTo(ref output, _repeated_outputsWeight_codec);
      if (SpawnSfx.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(SpawnSfx);
      }
      if (SpeedCost != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(SpeedCost);
      }
      weight_.WriteTo(ref output, _repeated_weight_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (EatingIcon.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EatingIcon);
      }
      if (OuputIcon.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OuputIcon);
      }
      size += eat_.CalculateSize(_repeated_eat_codec);
      if (EatTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EatTime);
      }
      if (EnergyCost != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EnergyCost);
      }
      size += fixedEat_.CalculateSize(_repeated_fixedEat_codec);
      if (LimitCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LimitCount);
      }
      size += outputs_.CalculateSize(_repeated_outputs_codec);
      size += outputsFixed_.CalculateSize(_repeated_outputsFixed_codec);
      size += outputsFixedTime_.CalculateSize(_repeated_outputsFixedTime_codec);
      size += outputsWeight_.CalculateSize(_repeated_outputsWeight_codec);
      if (SpawnSfx.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SpawnSfx);
      }
      if (SpeedCost != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SpeedCost);
      }
      size += weight_.CalculateSize(_repeated_weight_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ComMergeEatSource other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.EatingIcon.Length != 0) {
        EatingIcon = other.EatingIcon;
      }
      if (other.OuputIcon.Length != 0) {
        OuputIcon = other.OuputIcon;
      }
      eat_.Add(other.eat_);
      if (other.EatTime != 0) {
        EatTime = other.EatTime;
      }
      if (other.EnergyCost != 0) {
        EnergyCost = other.EnergyCost;
      }
      fixedEat_.Add(other.fixedEat_);
      if (other.LimitCount != 0) {
        LimitCount = other.LimitCount;
      }
      outputs_.Add(other.outputs_);
      outputsFixed_.Add(other.outputsFixed_);
      outputsFixedTime_.Add(other.outputsFixedTime_);
      outputsWeight_.Add(other.outputsWeight_);
      if (other.SpawnSfx.Length != 0) {
        SpawnSfx = other.SpawnSfx;
      }
      if (other.SpeedCost != 0) {
        SpeedCost = other.SpeedCost;
      }
      weight_.Add(other.weight_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            EatingIcon = input.ReadString();
            break;
          }
          case 26: {
            OuputIcon = input.ReadString();
            break;
          }
          case 34: {
            eat_.AddEntriesFrom(input, _repeated_eat_codec);
            break;
          }
          case 40: {
            EatTime = input.ReadInt32();
            break;
          }
          case 48: {
            EnergyCost = input.ReadInt32();
            break;
          }
          case 58: {
            fixedEat_.AddEntriesFrom(input, _repeated_fixedEat_codec);
            break;
          }
          case 64: {
            LimitCount = input.ReadInt32();
            break;
          }
          case 74:
          case 72: {
            outputs_.AddEntriesFrom(input, _repeated_outputs_codec);
            break;
          }
          case 82:
          case 80: {
            outputsFixed_.AddEntriesFrom(input, _repeated_outputsFixed_codec);
            break;
          }
          case 90:
          case 88: {
            outputsFixedTime_.AddEntriesFrom(input, _repeated_outputsFixedTime_codec);
            break;
          }
          case 98:
          case 96: {
            outputsWeight_.AddEntriesFrom(input, _repeated_outputsWeight_codec);
            break;
          }
          case 106: {
            SpawnSfx = input.ReadString();
            break;
          }
          case 112: {
            SpeedCost = input.ReadInt32();
            break;
          }
          case 122:
          case 120: {
            weight_.AddEntriesFrom(input, _repeated_weight_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            EatingIcon = input.ReadString();
            break;
          }
          case 26: {
            OuputIcon = input.ReadString();
            break;
          }
          case 34: {
            eat_.AddEntriesFrom(ref input, _repeated_eat_codec);
            break;
          }
          case 40: {
            EatTime = input.ReadInt32();
            break;
          }
          case 48: {
            EnergyCost = input.ReadInt32();
            break;
          }
          case 58: {
            fixedEat_.AddEntriesFrom(ref input, _repeated_fixedEat_codec);
            break;
          }
          case 64: {
            LimitCount = input.ReadInt32();
            break;
          }
          case 74:
          case 72: {
            outputs_.AddEntriesFrom(ref input, _repeated_outputs_codec);
            break;
          }
          case 82:
          case 80: {
            outputsFixed_.AddEntriesFrom(ref input, _repeated_outputsFixed_codec);
            break;
          }
          case 90:
          case 88: {
            outputsFixedTime_.AddEntriesFrom(ref input, _repeated_outputsFixedTime_codec);
            break;
          }
          case 98:
          case 96: {
            outputsWeight_.AddEntriesFrom(ref input, _repeated_outputsWeight_codec);
            break;
          }
          case 106: {
            SpawnSfx = input.ReadString();
            break;
          }
          case 112: {
            SpeedCost = input.ReadInt32();
            break;
          }
          case 122:
          case 120: {
            weight_.AddEntriesFrom(ref input, _repeated_weight_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ComMergeEatSourceMapABValue : pb::IMessage<ComMergeEatSourceMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ComMergeEatSourceMapABValue> _parser = new pb::MessageParser<ComMergeEatSourceMapABValue>(() => new ComMergeEatSourceMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ComMergeEatSourceMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.ComMergeEatSourceConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComMergeEatSourceMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComMergeEatSourceMapABValue(ComMergeEatSourceMapABValue other) : this() {
      comMergeEatSourceMap_ = other.comMergeEatSourceMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComMergeEatSourceMapABValue Clone() {
      return new ComMergeEatSourceMapABValue(this);
    }

    /// <summary>Field number for the "ComMergeEatSourceMap" field.</summary>
    public const int ComMergeEatSourceMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.ComMergeEatSource>.Codec _map_comMergeEatSourceMap_codec
        = new pbc::MapField<int, global::fat.rawdata.ComMergeEatSource>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ComMergeEatSource.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.ComMergeEatSource> comMergeEatSourceMap_ = new pbc::MapField<int, global::fat.rawdata.ComMergeEatSource>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.ComMergeEatSource> ComMergeEatSourceMap {
      get { return comMergeEatSourceMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ComMergeEatSourceMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ComMergeEatSourceMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!ComMergeEatSourceMap.Equals(other.ComMergeEatSourceMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ComMergeEatSourceMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      comMergeEatSourceMap_.WriteTo(output, _map_comMergeEatSourceMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      comMergeEatSourceMap_.WriteTo(ref output, _map_comMergeEatSourceMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += comMergeEatSourceMap_.CalculateSize(_map_comMergeEatSourceMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ComMergeEatSourceMapABValue other) {
      if (other == null) {
        return;
      }
      comMergeEatSourceMap_.Add(other.comMergeEatSourceMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            comMergeEatSourceMap_.AddEntriesFrom(input, _map_comMergeEatSourceMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            comMergeEatSourceMap_.AddEntriesFrom(ref input, _map_comMergeEatSourceMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ComMergeEatSourceConf : pb::IMessage<ComMergeEatSourceConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ComMergeEatSourceConf> _parser = new pb::MessageParser<ComMergeEatSourceConf>(() => new ComMergeEatSourceConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ComMergeEatSourceConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.ComMergeEatSourceConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComMergeEatSourceConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComMergeEatSourceConf(ComMergeEatSourceConf other) : this() {
      comMergeEatSourceMap_ = other.comMergeEatSourceMap_.Clone();
      comMergeEatSourceMapAB_ = other.comMergeEatSourceMapAB_.Clone();
      comMergeEatSourceMapABPatch_ = other.comMergeEatSourceMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComMergeEatSourceConf Clone() {
      return new ComMergeEatSourceConf(this);
    }

    /// <summary>Field number for the "ComMergeEatSourceMap" field.</summary>
    public const int ComMergeEatSourceMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.ComMergeEatSource>.Codec _map_comMergeEatSourceMap_codec
        = new pbc::MapField<int, global::fat.rawdata.ComMergeEatSource>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ComMergeEatSource.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.ComMergeEatSource> comMergeEatSourceMap_ = new pbc::MapField<int, global::fat.rawdata.ComMergeEatSource>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.ComMergeEatSource> ComMergeEatSourceMap {
      get { return comMergeEatSourceMap_; }
    }

    /// <summary>Field number for the "ComMergeEatSourceMapAB" field.</summary>
    public const int ComMergeEatSourceMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.ComMergeEatSourceMapABValue>.Codec _map_comMergeEatSourceMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.ComMergeEatSourceMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ComMergeEatSourceMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.ComMergeEatSourceMapABValue> comMergeEatSourceMapAB_ = new pbc::MapField<string, global::fat.rawdata.ComMergeEatSourceMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.ComMergeEatSourceMapABValue> ComMergeEatSourceMapAB {
      get { return comMergeEatSourceMapAB_; }
    }

    /// <summary>Field number for the "ComMergeEatSourceMapABPatch" field.</summary>
    public const int ComMergeEatSourceMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.ComMergeEatSourceMapABValue>.Codec _map_comMergeEatSourceMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.ComMergeEatSourceMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ComMergeEatSourceMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.ComMergeEatSourceMapABValue> comMergeEatSourceMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.ComMergeEatSourceMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.ComMergeEatSourceMapABValue> ComMergeEatSourceMapABPatch {
      get { return comMergeEatSourceMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ComMergeEatSourceConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ComMergeEatSourceConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!ComMergeEatSourceMap.Equals(other.ComMergeEatSourceMap)) return false;
      if (!ComMergeEatSourceMapAB.Equals(other.ComMergeEatSourceMapAB)) return false;
      if (!ComMergeEatSourceMapABPatch.Equals(other.ComMergeEatSourceMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ComMergeEatSourceMap.GetHashCode();
      hash ^= ComMergeEatSourceMapAB.GetHashCode();
      hash ^= ComMergeEatSourceMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      comMergeEatSourceMap_.WriteTo(output, _map_comMergeEatSourceMap_codec);
      comMergeEatSourceMapAB_.WriteTo(output, _map_comMergeEatSourceMapAB_codec);
      comMergeEatSourceMapABPatch_.WriteTo(output, _map_comMergeEatSourceMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      comMergeEatSourceMap_.WriteTo(ref output, _map_comMergeEatSourceMap_codec);
      comMergeEatSourceMapAB_.WriteTo(ref output, _map_comMergeEatSourceMapAB_codec);
      comMergeEatSourceMapABPatch_.WriteTo(ref output, _map_comMergeEatSourceMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += comMergeEatSourceMap_.CalculateSize(_map_comMergeEatSourceMap_codec);
      size += comMergeEatSourceMapAB_.CalculateSize(_map_comMergeEatSourceMapAB_codec);
      size += comMergeEatSourceMapABPatch_.CalculateSize(_map_comMergeEatSourceMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ComMergeEatSourceConf other) {
      if (other == null) {
        return;
      }
      comMergeEatSourceMap_.Add(other.comMergeEatSourceMap_);
      comMergeEatSourceMapAB_.Add(other.comMergeEatSourceMapAB_);
      comMergeEatSourceMapABPatch_.Add(other.comMergeEatSourceMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            comMergeEatSourceMap_.AddEntriesFrom(input, _map_comMergeEatSourceMap_codec);
            break;
          }
          case 18: {
            comMergeEatSourceMapAB_.AddEntriesFrom(input, _map_comMergeEatSourceMapAB_codec);
            break;
          }
          case 26: {
            comMergeEatSourceMapABPatch_.AddEntriesFrom(input, _map_comMergeEatSourceMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            comMergeEatSourceMap_.AddEntriesFrom(ref input, _map_comMergeEatSourceMap_codec);
            break;
          }
          case 18: {
            comMergeEatSourceMapAB_.AddEntriesFrom(ref input, _map_comMergeEatSourceMapAB_codec);
            break;
          }
          case 26: {
            comMergeEatSourceMapABPatch_.AddEntriesFrom(ref input, _map_comMergeEatSourceMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
