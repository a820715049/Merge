// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/LangZhHantTwConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/LangZhHantTwConf.proto</summary>
  public static partial class LangZhHantTwConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/LangZhHantTwConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LangZhHantTwConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch5yYXdkYXRhL0xhbmdaaEhhbnRUd0NvbmYucHJvdG8SB3Jhd2RhdGEiKAoM",
            "TGFuZ1poSGFudFR3EgoKAkxLGAEgASgJEgwKBE5hbWUYAiABKAkiTAoYTGFu",
            "Z1poSGFudFR3U2xpY2VBQlZhbHVlEjAKEUxhbmdaaEhhbnRUd1NsaWNlGAEg",
            "AygLMhUucmF3ZGF0YS5MYW5nWmhIYW50VHciswMKEExhbmdaaEhhbnRUd0Nv",
            "bmYSMAoRTGFuZ1poSGFudFR3U2xpY2UYASADKAsyFS5yYXdkYXRhLkxhbmda",
            "aEhhbnRUdxJPChNMYW5nWmhIYW50VHdTbGljZUFCGAIgAygLMjIucmF3ZGF0",
            "YS5MYW5nWmhIYW50VHdDb25mLkxhbmdaaEhhbnRUd1NsaWNlQUJFbnRyeRJZ",
            "ChhMYW5nWmhIYW50VHdTbGljZUFCUGF0Y2gYAyADKAsyNy5yYXdkYXRhLkxh",
            "bmdaaEhhbnRUd0NvbmYuTGFuZ1poSGFudFR3U2xpY2VBQlBhdGNoRW50cnka",
            "XQoYTGFuZ1poSGFudFR3U2xpY2VBQkVudHJ5EgsKA2tleRgBIAEoCRIwCgV2",
            "YWx1ZRgCIAEoCzIhLnJhd2RhdGEuTGFuZ1poSGFudFR3U2xpY2VBQlZhbHVl",
            "OgI4ARpiCh1MYW5nWmhIYW50VHdTbGljZUFCUGF0Y2hFbnRyeRILCgNrZXkY",
            "ASABKAkSMAoFdmFsdWUYAiABKAsyIS5yYXdkYXRhLkxhbmdaaEhhbnRUd1Ns",
            "aWNlQUJWYWx1ZToCOAFCPVotZ2l0bGFiLmZ1bnBsdXMuaW8vZmF0L2NvbmYv",
            "Z2VuL2dvbGFuZy9yYXdkYXRhqgILZmF0LnJhd2RhdGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.LangZhHantTw), global::fat.rawdata.LangZhHantTw.Parser, new[]{ "LK", "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.LangZhHantTwSliceABValue), global::fat.rawdata.LangZhHantTwSliceABValue.Parser, new[]{ "LangZhHantTwSlice" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.LangZhHantTwConf), global::fat.rawdata.LangZhHantTwConf.Parser, new[]{ "LangZhHantTwSlice", "LangZhHantTwSliceAB", "LangZhHantTwSliceABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="LangZhHantTw",table="LangZhHantTwSlice",table_wrapper="LangZhHantTwConf",map="false",map_key_type="",data="LangZhHantTwConf")
  /// annotation@ab(table_ab="LangZhHantTwSliceAB",table_ab_patch="LangZhHantTwSliceABPatch",table_ab_value="LangZhHantTwSliceABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// </summary>
  public sealed partial class LangZhHantTw : pb::IMessage<LangZhHantTw>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LangZhHantTw> _parser = new pb::MessageParser<LangZhHantTw>(() => new LangZhHantTw());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LangZhHantTw> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.LangZhHantTwConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangZhHantTw() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangZhHantTw(LangZhHantTw other) : this() {
      lK_ = other.lK_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangZhHantTw Clone() {
      return new LangZhHantTw(this);
    }

    /// <summary>Field number for the "LK" field.</summary>
    public const int LKFieldNumber = 1;
    private string lK_ = "";
    /// <summary>
    /// key
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LK {
      get { return lK_; }
      set {
        lK_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    /// 繁体中文
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LangZhHantTw);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LangZhHantTw other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LK != other.LK) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LK.Length != 0) hash ^= LK.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (LK.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LK);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (LK.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LK);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LK.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LK);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LangZhHantTw other) {
      if (other == null) {
        return;
      }
      if (other.LK.Length != 0) {
        LK = other.LK;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LK = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            LK = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LangZhHantTwSliceABValue : pb::IMessage<LangZhHantTwSliceABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LangZhHantTwSliceABValue> _parser = new pb::MessageParser<LangZhHantTwSliceABValue>(() => new LangZhHantTwSliceABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LangZhHantTwSliceABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.LangZhHantTwConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangZhHantTwSliceABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangZhHantTwSliceABValue(LangZhHantTwSliceABValue other) : this() {
      langZhHantTwSlice_ = other.langZhHantTwSlice_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangZhHantTwSliceABValue Clone() {
      return new LangZhHantTwSliceABValue(this);
    }

    /// <summary>Field number for the "LangZhHantTwSlice" field.</summary>
    public const int LangZhHantTwSliceFieldNumber = 1;
    private static readonly pb::FieldCodec<global::fat.rawdata.LangZhHantTw> _repeated_langZhHantTwSlice_codec
        = pb::FieldCodec.ForMessage(10, global::fat.rawdata.LangZhHantTw.Parser);
    private readonly pbc::RepeatedField<global::fat.rawdata.LangZhHantTw> langZhHantTwSlice_ = new pbc::RepeatedField<global::fat.rawdata.LangZhHantTw>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::fat.rawdata.LangZhHantTw> LangZhHantTwSlice {
      get { return langZhHantTwSlice_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LangZhHantTwSliceABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LangZhHantTwSliceABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!langZhHantTwSlice_.Equals(other.langZhHantTwSlice_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= langZhHantTwSlice_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      langZhHantTwSlice_.WriteTo(output, _repeated_langZhHantTwSlice_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      langZhHantTwSlice_.WriteTo(ref output, _repeated_langZhHantTwSlice_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += langZhHantTwSlice_.CalculateSize(_repeated_langZhHantTwSlice_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LangZhHantTwSliceABValue other) {
      if (other == null) {
        return;
      }
      langZhHantTwSlice_.Add(other.langZhHantTwSlice_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            langZhHantTwSlice_.AddEntriesFrom(input, _repeated_langZhHantTwSlice_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            langZhHantTwSlice_.AddEntriesFrom(ref input, _repeated_langZhHantTwSlice_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LangZhHantTwConf : pb::IMessage<LangZhHantTwConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LangZhHantTwConf> _parser = new pb::MessageParser<LangZhHantTwConf>(() => new LangZhHantTwConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LangZhHantTwConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.LangZhHantTwConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangZhHantTwConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangZhHantTwConf(LangZhHantTwConf other) : this() {
      langZhHantTwSlice_ = other.langZhHantTwSlice_.Clone();
      langZhHantTwSliceAB_ = other.langZhHantTwSliceAB_.Clone();
      langZhHantTwSliceABPatch_ = other.langZhHantTwSliceABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangZhHantTwConf Clone() {
      return new LangZhHantTwConf(this);
    }

    /// <summary>Field number for the "LangZhHantTwSlice" field.</summary>
    public const int LangZhHantTwSliceFieldNumber = 1;
    private static readonly pb::FieldCodec<global::fat.rawdata.LangZhHantTw> _repeated_langZhHantTwSlice_codec
        = pb::FieldCodec.ForMessage(10, global::fat.rawdata.LangZhHantTw.Parser);
    private readonly pbc::RepeatedField<global::fat.rawdata.LangZhHantTw> langZhHantTwSlice_ = new pbc::RepeatedField<global::fat.rawdata.LangZhHantTw>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::fat.rawdata.LangZhHantTw> LangZhHantTwSlice {
      get { return langZhHantTwSlice_; }
    }

    /// <summary>Field number for the "LangZhHantTwSliceAB" field.</summary>
    public const int LangZhHantTwSliceABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.LangZhHantTwSliceABValue>.Codec _map_langZhHantTwSliceAB_codec
        = new pbc::MapField<string, global::fat.rawdata.LangZhHantTwSliceABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.LangZhHantTwSliceABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.LangZhHantTwSliceABValue> langZhHantTwSliceAB_ = new pbc::MapField<string, global::fat.rawdata.LangZhHantTwSliceABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.LangZhHantTwSliceABValue> LangZhHantTwSliceAB {
      get { return langZhHantTwSliceAB_; }
    }

    /// <summary>Field number for the "LangZhHantTwSliceABPatch" field.</summary>
    public const int LangZhHantTwSliceABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.LangZhHantTwSliceABValue>.Codec _map_langZhHantTwSliceABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.LangZhHantTwSliceABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.LangZhHantTwSliceABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.LangZhHantTwSliceABValue> langZhHantTwSliceABPatch_ = new pbc::MapField<string, global::fat.rawdata.LangZhHantTwSliceABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.LangZhHantTwSliceABValue> LangZhHantTwSliceABPatch {
      get { return langZhHantTwSliceABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LangZhHantTwConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LangZhHantTwConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!langZhHantTwSlice_.Equals(other.langZhHantTwSlice_)) return false;
      if (!LangZhHantTwSliceAB.Equals(other.LangZhHantTwSliceAB)) return false;
      if (!LangZhHantTwSliceABPatch.Equals(other.LangZhHantTwSliceABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= langZhHantTwSlice_.GetHashCode();
      hash ^= LangZhHantTwSliceAB.GetHashCode();
      hash ^= LangZhHantTwSliceABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      langZhHantTwSlice_.WriteTo(output, _repeated_langZhHantTwSlice_codec);
      langZhHantTwSliceAB_.WriteTo(output, _map_langZhHantTwSliceAB_codec);
      langZhHantTwSliceABPatch_.WriteTo(output, _map_langZhHantTwSliceABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      langZhHantTwSlice_.WriteTo(ref output, _repeated_langZhHantTwSlice_codec);
      langZhHantTwSliceAB_.WriteTo(ref output, _map_langZhHantTwSliceAB_codec);
      langZhHantTwSliceABPatch_.WriteTo(ref output, _map_langZhHantTwSliceABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += langZhHantTwSlice_.CalculateSize(_repeated_langZhHantTwSlice_codec);
      size += langZhHantTwSliceAB_.CalculateSize(_map_langZhHantTwSliceAB_codec);
      size += langZhHantTwSliceABPatch_.CalculateSize(_map_langZhHantTwSliceABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LangZhHantTwConf other) {
      if (other == null) {
        return;
      }
      langZhHantTwSlice_.Add(other.langZhHantTwSlice_);
      langZhHantTwSliceAB_.Add(other.langZhHantTwSliceAB_);
      langZhHantTwSliceABPatch_.Add(other.langZhHantTwSliceABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            langZhHantTwSlice_.AddEntriesFrom(input, _repeated_langZhHantTwSlice_codec);
            break;
          }
          case 18: {
            langZhHantTwSliceAB_.AddEntriesFrom(input, _map_langZhHantTwSliceAB_codec);
            break;
          }
          case 26: {
            langZhHantTwSliceABPatch_.AddEntriesFrom(input, _map_langZhHantTwSliceABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            langZhHantTwSlice_.AddEntriesFrom(ref input, _repeated_langZhHantTwSlice_codec);
            break;
          }
          case 18: {
            langZhHantTwSliceAB_.AddEntriesFrom(ref input, _map_langZhHantTwSliceAB_codec);
            break;
          }
          case 26: {
            langZhHantTwSliceABPatch_.AddEntriesFrom(ref input, _map_langZhHantTwSliceABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
