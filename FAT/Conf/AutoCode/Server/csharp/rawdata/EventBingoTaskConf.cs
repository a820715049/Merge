// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventBingoTaskConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventBingoTaskConf.proto</summary>
  public static partial class EventBingoTaskConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventBingoTaskConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventBingoTaskConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiByYXdkYXRhL0V2ZW50QmluZ29UYXNrQ29uZi5wcm90bxIHcmF3ZGF0YSJl",
            "Cg5FdmVudEJpbmdvVGFzaxIKCgJpZBgBIAEoBRIOCgZkZXRhaWwYAiABKAUS",
            "EAoIZW5kVGhlbWUYBSABKAUSEgoKZXZlbnRUaGVtZRgDIAEoBRIRCgloZWxw",
            "VGhlbWUYBiABKAUiwgEKGEV2ZW50QmluZ29UYXNrTWFwQUJWYWx1ZRJTChFF",
            "dmVudEJpbmdvVGFza01hcBgBIAMoCzI4LnJhd2RhdGEuRXZlbnRCaW5nb1Rh",
            "c2tNYXBBQlZhbHVlLkV2ZW50QmluZ29UYXNrTWFwRW50cnkaUQoWRXZlbnRC",
            "aW5nb1Rhc2tNYXBFbnRyeRILCgNrZXkYASABKAUSJgoFdmFsdWUYAiABKAsy",
            "Fy5yYXdkYXRhLkV2ZW50QmluZ29UYXNrOgI4ASKpBAoSRXZlbnRCaW5nb1Rh",
            "c2tDb25mEk0KEUV2ZW50QmluZ29UYXNrTWFwGAEgAygLMjIucmF3ZGF0YS5F",
            "dmVudEJpbmdvVGFza0NvbmYuRXZlbnRCaW5nb1Rhc2tNYXBFbnRyeRJRChNF",
            "dmVudEJpbmdvVGFza01hcEFCGAIgAygLMjQucmF3ZGF0YS5FdmVudEJpbmdv",
            "VGFza0NvbmYuRXZlbnRCaW5nb1Rhc2tNYXBBQkVudHJ5ElsKGEV2ZW50Qmlu",
            "Z29UYXNrTWFwQUJQYXRjaBgDIAMoCzI5LnJhd2RhdGEuRXZlbnRCaW5nb1Rh",
            "c2tDb25mLkV2ZW50QmluZ29UYXNrTWFwQUJQYXRjaEVudHJ5GlEKFkV2ZW50",
            "QmluZ29UYXNrTWFwRW50cnkSCwoDa2V5GAEgASgFEiYKBXZhbHVlGAIgASgL",
            "MhcucmF3ZGF0YS5FdmVudEJpbmdvVGFzazoCOAEaXQoYRXZlbnRCaW5nb1Rh",
            "c2tNYXBBQkVudHJ5EgsKA2tleRgBIAEoCRIwCgV2YWx1ZRgCIAEoCzIhLnJh",
            "d2RhdGEuRXZlbnRCaW5nb1Rhc2tNYXBBQlZhbHVlOgI4ARpiCh1FdmVudEJp",
            "bmdvVGFza01hcEFCUGF0Y2hFbnRyeRILCgNrZXkYASABKAkSMAoFdmFsdWUY",
            "AiABKAsyIS5yYXdkYXRhLkV2ZW50QmluZ29UYXNrTWFwQUJWYWx1ZToCOAFC",
            "PVotZ2l0bGFiLmZ1bnBsdXMuaW8vZmF0L2NvbmYvZ2VuL2dvbGFuZy9yYXdk",
            "YXRhqgILZmF0LnJhd2RhdGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventBingoTask), global::fat.rawdata.EventBingoTask.Parser, new[]{ "Id", "Detail", "EndTheme", "EventTheme", "HelpTheme" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventBingoTaskMapABValue), global::fat.rawdata.EventBingoTaskMapABValue.Parser, new[]{ "EventBingoTaskMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventBingoTaskConf), global::fat.rawdata.EventBingoTaskConf.Parser, new[]{ "EventBingoTaskMap", "EventBingoTaskMapAB", "EventBingoTaskMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventBingoTask",table="EventBingoTaskMap",table_wrapper="EventBingoTaskConf",map="true",map_key_type="int32",data="EventBingoTaskConf")
  /// annotation@ab(table_ab="EventBingoTaskMapAB",table_ab_patch="EventBingoTaskMapABPatch",table_ab_value="EventBingoTaskMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventBingoTask(id="id")
  /// </summary>
  public sealed partial class EventBingoTask : pb::IMessage<EventBingoTask>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventBingoTask> _parser = new pb::MessageParser<EventBingoTask>(() => new EventBingoTask());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventBingoTask> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventBingoTaskConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventBingoTask() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventBingoTask(EventBingoTask other) : this() {
      id_ = other.id_;
      detail_ = other.detail_;
      endTheme_ = other.endTheme_;
      eventTheme_ = other.eventTheme_;
      helpTheme_ = other.helpTheme_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventBingoTask Clone() {
      return new EventBingoTask(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 活动模版id
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "detail" field.</summary>
    public const int DetailFieldNumber = 2;
    private int detail_;
    /// <summary>
    /// 活动详情
    /// (GradeIndexMapping.id)
    /// (EventWeeklyTaskDetail.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Detail {
      get { return detail_; }
      set {
        detail_ = value;
      }
    }

    /// <summary>Field number for the "endTheme" field.</summary>
    public const int EndThemeFieldNumber = 5;
    private int endTheme_;
    /// <summary>
    /// 活动结束弹窗Id
    /// （EventTheme.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EndTheme {
      get { return endTheme_; }
      set {
        endTheme_ = value;
      }
    }

    /// <summary>Field number for the "eventTheme" field.</summary>
    public const int EventThemeFieldNumber = 3;
    private int eventTheme_;
    /// <summary>
    /// 活动主题弹窗Id
    /// （EventTheme.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EventTheme {
      get { return eventTheme_; }
      set {
        eventTheme_ = value;
      }
    }

    /// <summary>Field number for the "helpTheme" field.</summary>
    public const int HelpThemeFieldNumber = 6;
    private int helpTheme_;
    /// <summary>
    /// 活动帮助弹窗Id
    /// （EventTheme.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int HelpTheme {
      get { return helpTheme_; }
      set {
        helpTheme_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventBingoTask);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventBingoTask other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Detail != other.Detail) return false;
      if (EndTheme != other.EndTheme) return false;
      if (EventTheme != other.EventTheme) return false;
      if (HelpTheme != other.HelpTheme) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Detail != 0) hash ^= Detail.GetHashCode();
      if (EndTheme != 0) hash ^= EndTheme.GetHashCode();
      if (EventTheme != 0) hash ^= EventTheme.GetHashCode();
      if (HelpTheme != 0) hash ^= HelpTheme.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Detail != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Detail);
      }
      if (EventTheme != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(EventTheme);
      }
      if (EndTheme != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(EndTheme);
      }
      if (HelpTheme != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(HelpTheme);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Detail != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Detail);
      }
      if (EventTheme != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(EventTheme);
      }
      if (EndTheme != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(EndTheme);
      }
      if (HelpTheme != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(HelpTheme);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Detail != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Detail);
      }
      if (EndTheme != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EndTheme);
      }
      if (EventTheme != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EventTheme);
      }
      if (HelpTheme != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HelpTheme);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventBingoTask other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Detail != 0) {
        Detail = other.Detail;
      }
      if (other.EndTheme != 0) {
        EndTheme = other.EndTheme;
      }
      if (other.EventTheme != 0) {
        EventTheme = other.EventTheme;
      }
      if (other.HelpTheme != 0) {
        HelpTheme = other.HelpTheme;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Detail = input.ReadInt32();
            break;
          }
          case 24: {
            EventTheme = input.ReadInt32();
            break;
          }
          case 40: {
            EndTheme = input.ReadInt32();
            break;
          }
          case 48: {
            HelpTheme = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Detail = input.ReadInt32();
            break;
          }
          case 24: {
            EventTheme = input.ReadInt32();
            break;
          }
          case 40: {
            EndTheme = input.ReadInt32();
            break;
          }
          case 48: {
            HelpTheme = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventBingoTaskMapABValue : pb::IMessage<EventBingoTaskMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventBingoTaskMapABValue> _parser = new pb::MessageParser<EventBingoTaskMapABValue>(() => new EventBingoTaskMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventBingoTaskMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventBingoTaskConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventBingoTaskMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventBingoTaskMapABValue(EventBingoTaskMapABValue other) : this() {
      eventBingoTaskMap_ = other.eventBingoTaskMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventBingoTaskMapABValue Clone() {
      return new EventBingoTaskMapABValue(this);
    }

    /// <summary>Field number for the "EventBingoTaskMap" field.</summary>
    public const int EventBingoTaskMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventBingoTask>.Codec _map_eventBingoTaskMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventBingoTask>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventBingoTask.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventBingoTask> eventBingoTaskMap_ = new pbc::MapField<int, global::fat.rawdata.EventBingoTask>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventBingoTask> EventBingoTaskMap {
      get { return eventBingoTaskMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventBingoTaskMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventBingoTaskMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventBingoTaskMap.Equals(other.EventBingoTaskMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventBingoTaskMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventBingoTaskMap_.WriteTo(output, _map_eventBingoTaskMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventBingoTaskMap_.WriteTo(ref output, _map_eventBingoTaskMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventBingoTaskMap_.CalculateSize(_map_eventBingoTaskMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventBingoTaskMapABValue other) {
      if (other == null) {
        return;
      }
      eventBingoTaskMap_.Add(other.eventBingoTaskMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventBingoTaskMap_.AddEntriesFrom(input, _map_eventBingoTaskMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventBingoTaskMap_.AddEntriesFrom(ref input, _map_eventBingoTaskMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventBingoTaskConf : pb::IMessage<EventBingoTaskConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventBingoTaskConf> _parser = new pb::MessageParser<EventBingoTaskConf>(() => new EventBingoTaskConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventBingoTaskConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventBingoTaskConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventBingoTaskConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventBingoTaskConf(EventBingoTaskConf other) : this() {
      eventBingoTaskMap_ = other.eventBingoTaskMap_.Clone();
      eventBingoTaskMapAB_ = other.eventBingoTaskMapAB_.Clone();
      eventBingoTaskMapABPatch_ = other.eventBingoTaskMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventBingoTaskConf Clone() {
      return new EventBingoTaskConf(this);
    }

    /// <summary>Field number for the "EventBingoTaskMap" field.</summary>
    public const int EventBingoTaskMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventBingoTask>.Codec _map_eventBingoTaskMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventBingoTask>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventBingoTask.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventBingoTask> eventBingoTaskMap_ = new pbc::MapField<int, global::fat.rawdata.EventBingoTask>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventBingoTask> EventBingoTaskMap {
      get { return eventBingoTaskMap_; }
    }

    /// <summary>Field number for the "EventBingoTaskMapAB" field.</summary>
    public const int EventBingoTaskMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventBingoTaskMapABValue>.Codec _map_eventBingoTaskMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventBingoTaskMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventBingoTaskMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventBingoTaskMapABValue> eventBingoTaskMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventBingoTaskMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventBingoTaskMapABValue> EventBingoTaskMapAB {
      get { return eventBingoTaskMapAB_; }
    }

    /// <summary>Field number for the "EventBingoTaskMapABPatch" field.</summary>
    public const int EventBingoTaskMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventBingoTaskMapABValue>.Codec _map_eventBingoTaskMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventBingoTaskMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventBingoTaskMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventBingoTaskMapABValue> eventBingoTaskMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventBingoTaskMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventBingoTaskMapABValue> EventBingoTaskMapABPatch {
      get { return eventBingoTaskMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventBingoTaskConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventBingoTaskConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventBingoTaskMap.Equals(other.EventBingoTaskMap)) return false;
      if (!EventBingoTaskMapAB.Equals(other.EventBingoTaskMapAB)) return false;
      if (!EventBingoTaskMapABPatch.Equals(other.EventBingoTaskMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventBingoTaskMap.GetHashCode();
      hash ^= EventBingoTaskMapAB.GetHashCode();
      hash ^= EventBingoTaskMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventBingoTaskMap_.WriteTo(output, _map_eventBingoTaskMap_codec);
      eventBingoTaskMapAB_.WriteTo(output, _map_eventBingoTaskMapAB_codec);
      eventBingoTaskMapABPatch_.WriteTo(output, _map_eventBingoTaskMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventBingoTaskMap_.WriteTo(ref output, _map_eventBingoTaskMap_codec);
      eventBingoTaskMapAB_.WriteTo(ref output, _map_eventBingoTaskMapAB_codec);
      eventBingoTaskMapABPatch_.WriteTo(ref output, _map_eventBingoTaskMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventBingoTaskMap_.CalculateSize(_map_eventBingoTaskMap_codec);
      size += eventBingoTaskMapAB_.CalculateSize(_map_eventBingoTaskMapAB_codec);
      size += eventBingoTaskMapABPatch_.CalculateSize(_map_eventBingoTaskMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventBingoTaskConf other) {
      if (other == null) {
        return;
      }
      eventBingoTaskMap_.Add(other.eventBingoTaskMap_);
      eventBingoTaskMapAB_.Add(other.eventBingoTaskMapAB_);
      eventBingoTaskMapABPatch_.Add(other.eventBingoTaskMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventBingoTaskMap_.AddEntriesFrom(input, _map_eventBingoTaskMap_codec);
            break;
          }
          case 18: {
            eventBingoTaskMapAB_.AddEntriesFrom(input, _map_eventBingoTaskMapAB_codec);
            break;
          }
          case 26: {
            eventBingoTaskMapABPatch_.AddEntriesFrom(input, _map_eventBingoTaskMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventBingoTaskMap_.AddEntriesFrom(ref input, _map_eventBingoTaskMap_codec);
            break;
          }
          case 18: {
            eventBingoTaskMapAB_.AddEntriesFrom(ref input, _map_eventBingoTaskMapAB_codec);
            break;
          }
          case 26: {
            eventBingoTaskMapABPatch_.AddEntriesFrom(ref input, _map_eventBingoTaskMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
