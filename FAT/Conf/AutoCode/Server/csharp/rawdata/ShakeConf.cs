// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/ShakeConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/ShakeConf.proto</summary>
  public static partial class ShakeConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/ShakeConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ShakeConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChdyYXdkYXRhL1NoYWtlQ29uZi5wcm90bxIHcmF3ZGF0YSIkCgVTaGFrZRIK",
            "CgJpZBgBIAEoBRIPCgdpc1NoYWtlGAIgASgIIowBCg9TaGFrZU1hcEFCVmFs",
            "dWUSOAoIU2hha2VNYXAYASADKAsyJi5yYXdkYXRhLlNoYWtlTWFwQUJWYWx1",
            "ZS5TaGFrZU1hcEVudHJ5Gj8KDVNoYWtlTWFwRW50cnkSCwoDa2V5GAEgASgF",
            "Eh0KBXZhbHVlGAIgASgLMg4ucmF3ZGF0YS5TaGFrZToCOAEimQMKCVNoYWtl",
            "Q29uZhIyCghTaGFrZU1hcBgBIAMoCzIgLnJhd2RhdGEuU2hha2VDb25mLlNo",
            "YWtlTWFwRW50cnkSNgoKU2hha2VNYXBBQhgCIAMoCzIiLnJhd2RhdGEuU2hh",
            "a2VDb25mLlNoYWtlTWFwQUJFbnRyeRJACg9TaGFrZU1hcEFCUGF0Y2gYAyAD",
            "KAsyJy5yYXdkYXRhLlNoYWtlQ29uZi5TaGFrZU1hcEFCUGF0Y2hFbnRyeRo/",
            "Cg1TaGFrZU1hcEVudHJ5EgsKA2tleRgBIAEoBRIdCgV2YWx1ZRgCIAEoCzIO",
            "LnJhd2RhdGEuU2hha2U6AjgBGksKD1NoYWtlTWFwQUJFbnRyeRILCgNrZXkY",
            "ASABKAkSJwoFdmFsdWUYAiABKAsyGC5yYXdkYXRhLlNoYWtlTWFwQUJWYWx1",
            "ZToCOAEaUAoUU2hha2VNYXBBQlBhdGNoRW50cnkSCwoDa2V5GAEgASgJEicK",
            "BXZhbHVlGAIgASgLMhgucmF3ZGF0YS5TaGFrZU1hcEFCVmFsdWU6AjgBQj1a",
            "LWdpdGxhYi5mdW5wbHVzLmlvL2ZhdC9jb25mL2dlbi9nb2xhbmcvcmF3ZGF0",
            "YaoCC2ZhdC5yYXdkYXRhYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.Shake), global::fat.rawdata.Shake.Parser, new[]{ "Id", "IsShake" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.ShakeMapABValue), global::fat.rawdata.ShakeMapABValue.Parser, new[]{ "ShakeMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.ShakeConf), global::fat.rawdata.ShakeConf.Parser, new[]{ "ShakeMap", "ShakeMapAB", "ShakeMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="Shake",table="ShakeMap",table_wrapper="ShakeConf",map="true",map_key_type="int32",data="ShakeConf")
  /// annotation@ab(table_ab="ShakeMapAB",table_ab_patch="ShakeMapABPatch",table_ab_value="ShakeMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@Shake(id="id")
  /// </summary>
  public sealed partial class Shake : pb::IMessage<Shake>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Shake> _parser = new pb::MessageParser<Shake>(() => new Shake());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Shake> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.ShakeConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Shake() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Shake(Shake other) : this() {
      id_ = other.id_;
      isShake_ = other.isShake_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Shake Clone() {
      return new Shake(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// id
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "isShake" field.</summary>
    public const int IsShakeFieldNumber = 2;
    private bool isShake_;
    /// <summary>
    /// 是否震动
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsShake {
      get { return isShake_; }
      set {
        isShake_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Shake);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Shake other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (IsShake != other.IsShake) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (IsShake != false) hash ^= IsShake.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (IsShake != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsShake);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (IsShake != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsShake);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (IsShake != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Shake other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.IsShake != false) {
        IsShake = other.IsShake;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            IsShake = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            IsShake = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ShakeMapABValue : pb::IMessage<ShakeMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ShakeMapABValue> _parser = new pb::MessageParser<ShakeMapABValue>(() => new ShakeMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ShakeMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.ShakeConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShakeMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShakeMapABValue(ShakeMapABValue other) : this() {
      shakeMap_ = other.shakeMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShakeMapABValue Clone() {
      return new ShakeMapABValue(this);
    }

    /// <summary>Field number for the "ShakeMap" field.</summary>
    public const int ShakeMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.Shake>.Codec _map_shakeMap_codec
        = new pbc::MapField<int, global::fat.rawdata.Shake>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.Shake.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.Shake> shakeMap_ = new pbc::MapField<int, global::fat.rawdata.Shake>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.Shake> ShakeMap {
      get { return shakeMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ShakeMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ShakeMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!ShakeMap.Equals(other.ShakeMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ShakeMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      shakeMap_.WriteTo(output, _map_shakeMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      shakeMap_.WriteTo(ref output, _map_shakeMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += shakeMap_.CalculateSize(_map_shakeMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ShakeMapABValue other) {
      if (other == null) {
        return;
      }
      shakeMap_.Add(other.shakeMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            shakeMap_.AddEntriesFrom(input, _map_shakeMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            shakeMap_.AddEntriesFrom(ref input, _map_shakeMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ShakeConf : pb::IMessage<ShakeConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ShakeConf> _parser = new pb::MessageParser<ShakeConf>(() => new ShakeConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ShakeConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.ShakeConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShakeConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShakeConf(ShakeConf other) : this() {
      shakeMap_ = other.shakeMap_.Clone();
      shakeMapAB_ = other.shakeMapAB_.Clone();
      shakeMapABPatch_ = other.shakeMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShakeConf Clone() {
      return new ShakeConf(this);
    }

    /// <summary>Field number for the "ShakeMap" field.</summary>
    public const int ShakeMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.Shake>.Codec _map_shakeMap_codec
        = new pbc::MapField<int, global::fat.rawdata.Shake>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.Shake.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.Shake> shakeMap_ = new pbc::MapField<int, global::fat.rawdata.Shake>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.Shake> ShakeMap {
      get { return shakeMap_; }
    }

    /// <summary>Field number for the "ShakeMapAB" field.</summary>
    public const int ShakeMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.ShakeMapABValue>.Codec _map_shakeMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.ShakeMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ShakeMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.ShakeMapABValue> shakeMapAB_ = new pbc::MapField<string, global::fat.rawdata.ShakeMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.ShakeMapABValue> ShakeMapAB {
      get { return shakeMapAB_; }
    }

    /// <summary>Field number for the "ShakeMapABPatch" field.</summary>
    public const int ShakeMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.ShakeMapABValue>.Codec _map_shakeMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.ShakeMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ShakeMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.ShakeMapABValue> shakeMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.ShakeMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.ShakeMapABValue> ShakeMapABPatch {
      get { return shakeMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ShakeConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ShakeConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!ShakeMap.Equals(other.ShakeMap)) return false;
      if (!ShakeMapAB.Equals(other.ShakeMapAB)) return false;
      if (!ShakeMapABPatch.Equals(other.ShakeMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ShakeMap.GetHashCode();
      hash ^= ShakeMapAB.GetHashCode();
      hash ^= ShakeMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      shakeMap_.WriteTo(output, _map_shakeMap_codec);
      shakeMapAB_.WriteTo(output, _map_shakeMapAB_codec);
      shakeMapABPatch_.WriteTo(output, _map_shakeMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      shakeMap_.WriteTo(ref output, _map_shakeMap_codec);
      shakeMapAB_.WriteTo(ref output, _map_shakeMapAB_codec);
      shakeMapABPatch_.WriteTo(ref output, _map_shakeMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += shakeMap_.CalculateSize(_map_shakeMap_codec);
      size += shakeMapAB_.CalculateSize(_map_shakeMapAB_codec);
      size += shakeMapABPatch_.CalculateSize(_map_shakeMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ShakeConf other) {
      if (other == null) {
        return;
      }
      shakeMap_.Add(other.shakeMap_);
      shakeMapAB_.Add(other.shakeMapAB_);
      shakeMapABPatch_.Add(other.shakeMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            shakeMap_.AddEntriesFrom(input, _map_shakeMap_codec);
            break;
          }
          case 18: {
            shakeMapAB_.AddEntriesFrom(input, _map_shakeMapAB_codec);
            break;
          }
          case 26: {
            shakeMapABPatch_.AddEntriesFrom(input, _map_shakeMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            shakeMap_.AddEntriesFrom(ref input, _map_shakeMap_codec);
            break;
          }
          case 18: {
            shakeMapAB_.AddEntriesFrom(ref input, _map_shakeMapAB_codec);
            break;
          }
          case 26: {
            shakeMapABPatch_.AddEntriesFrom(ref input, _map_shakeMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
