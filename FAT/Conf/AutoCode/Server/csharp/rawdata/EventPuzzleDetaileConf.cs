// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventPuzzleDetaileConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventPuzzleDetaileConf.proto</summary>
  public static partial class EventPuzzleDetaileConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventPuzzleDetaileConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventPuzzleDetaileConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiRyYXdkYXRhL0V2ZW50UHV6emxlRGV0YWlsZUNvbmYucHJvdG8SB3Jhd2Rh",
            "dGEiWAoSRXZlbnRQdXp6bGVEZXRhaWxlEgoKAmlkGAEgASgFEg8KB251bUlu",
            "Zm8YAiADKAkSEwoLcmV3YXJkQ291bnQYAyADKAUSEAoIcmV3YXJkSWQYBCAD",
            "KAki2gEKHEV2ZW50UHV6emxlRGV0YWlsZU1hcEFCVmFsdWUSXwoVRXZlbnRQ",
            "dXp6bGVEZXRhaWxlTWFwGAEgAygLMkAucmF3ZGF0YS5FdmVudFB1enpsZURl",
            "dGFpbGVNYXBBQlZhbHVlLkV2ZW50UHV6emxlRGV0YWlsZU1hcEVudHJ5GlkK",
            "GkV2ZW50UHV6emxlRGV0YWlsZU1hcEVudHJ5EgsKA2tleRgBIAEoBRIqCgV2",
            "YWx1ZRgCIAEoCzIbLnJhd2RhdGEuRXZlbnRQdXp6bGVEZXRhaWxlOgI4ASLp",
            "BAoWRXZlbnRQdXp6bGVEZXRhaWxlQ29uZhJZChVFdmVudFB1enpsZURldGFp",
            "bGVNYXAYASADKAsyOi5yYXdkYXRhLkV2ZW50UHV6emxlRGV0YWlsZUNvbmYu",
            "RXZlbnRQdXp6bGVEZXRhaWxlTWFwRW50cnkSXQoXRXZlbnRQdXp6bGVEZXRh",
            "aWxlTWFwQUIYAiADKAsyPC5yYXdkYXRhLkV2ZW50UHV6emxlRGV0YWlsZUNv",
            "bmYuRXZlbnRQdXp6bGVEZXRhaWxlTWFwQUJFbnRyeRJnChxFdmVudFB1enps",
            "ZURldGFpbGVNYXBBQlBhdGNoGAMgAygLMkEucmF3ZGF0YS5FdmVudFB1enps",
            "ZURldGFpbGVDb25mLkV2ZW50UHV6emxlRGV0YWlsZU1hcEFCUGF0Y2hFbnRy",
            "eRpZChpFdmVudFB1enpsZURldGFpbGVNYXBFbnRyeRILCgNrZXkYASABKAUS",
            "KgoFdmFsdWUYAiABKAsyGy5yYXdkYXRhLkV2ZW50UHV6emxlRGV0YWlsZToC",
            "OAEaZQocRXZlbnRQdXp6bGVEZXRhaWxlTWFwQUJFbnRyeRILCgNrZXkYASAB",
            "KAkSNAoFdmFsdWUYAiABKAsyJS5yYXdkYXRhLkV2ZW50UHV6emxlRGV0YWls",
            "ZU1hcEFCVmFsdWU6AjgBGmoKIUV2ZW50UHV6emxlRGV0YWlsZU1hcEFCUGF0",
            "Y2hFbnRyeRILCgNrZXkYASABKAkSNAoFdmFsdWUYAiABKAsyJS5yYXdkYXRh",
            "LkV2ZW50UHV6emxlRGV0YWlsZU1hcEFCVmFsdWU6AjgBQj1aLWdpdGxhYi5m",
            "dW5wbHVzLmlvL2ZhdC9jb25mL2dlbi9nb2xhbmcvcmF3ZGF0YaoCC2ZhdC5y",
            "YXdkYXRhYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventPuzzleDetaile), global::fat.rawdata.EventPuzzleDetaile.Parser, new[]{ "Id", "NumInfo", "RewardCount", "RewardId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventPuzzleDetaileMapABValue), global::fat.rawdata.EventPuzzleDetaileMapABValue.Parser, new[]{ "EventPuzzleDetaileMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventPuzzleDetaileConf), global::fat.rawdata.EventPuzzleDetaileConf.Parser, new[]{ "EventPuzzleDetaileMap", "EventPuzzleDetaileMapAB", "EventPuzzleDetaileMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventPuzzleDetaile",table="EventPuzzleDetaileMap",table_wrapper="EventPuzzleDetaileConf",map="true",map_key_type="int32",data="EventPuzzleDetaileConf")
  /// annotation@ab(table_ab="EventPuzzleDetaileMapAB",table_ab_patch="EventPuzzleDetaileMapABPatch",table_ab_value="EventPuzzleDetaileMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventPuzzleDetaile(id="id")
  /// </summary>
  public sealed partial class EventPuzzleDetaile : pb::IMessage<EventPuzzleDetaile>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventPuzzleDetaile> _parser = new pb::MessageParser<EventPuzzleDetaile>(() => new EventPuzzleDetaile());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventPuzzleDetaile> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventPuzzleDetaileConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventPuzzleDetaile() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventPuzzleDetaile(EventPuzzleDetaile other) : this() {
      id_ = other.id_;
      numInfo_ = other.numInfo_.Clone();
      rewardCount_ = other.rewardCount_.Clone();
      rewardId_ = other.rewardId_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventPuzzleDetaile Clone() {
      return new EventPuzzleDetaile(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 分组id
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "numInfo" field.</summary>
    public const int NumInfoFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_numInfo_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> numInfo_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 生效的订单槽位:对应投放token数量:本轮该槽位最大投放次数
    /// {randomerId:tokenNum:maxTimes,.....}
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> NumInfo {
      get { return numInfo_; }
    }

    /// <summary>Field number for the "rewardCount" field.</summary>
    public const int RewardCountFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_rewardCount_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> rewardCount_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 里程碑节点
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> RewardCount {
      get { return rewardCount_; }
    }

    /// <summary>Field number for the "rewardId" field.</summary>
    public const int RewardIdFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_rewardId_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> rewardId_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 奖励内容
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> RewardId {
      get { return rewardId_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventPuzzleDetaile);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventPuzzleDetaile other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!numInfo_.Equals(other.numInfo_)) return false;
      if(!rewardCount_.Equals(other.rewardCount_)) return false;
      if(!rewardId_.Equals(other.rewardId_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      hash ^= numInfo_.GetHashCode();
      hash ^= rewardCount_.GetHashCode();
      hash ^= rewardId_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      numInfo_.WriteTo(output, _repeated_numInfo_codec);
      rewardCount_.WriteTo(output, _repeated_rewardCount_codec);
      rewardId_.WriteTo(output, _repeated_rewardId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      numInfo_.WriteTo(ref output, _repeated_numInfo_codec);
      rewardCount_.WriteTo(ref output, _repeated_rewardCount_codec);
      rewardId_.WriteTo(ref output, _repeated_rewardId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      size += numInfo_.CalculateSize(_repeated_numInfo_codec);
      size += rewardCount_.CalculateSize(_repeated_rewardCount_codec);
      size += rewardId_.CalculateSize(_repeated_rewardId_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventPuzzleDetaile other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      numInfo_.Add(other.numInfo_);
      rewardCount_.Add(other.rewardCount_);
      rewardId_.Add(other.rewardId_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            numInfo_.AddEntriesFrom(input, _repeated_numInfo_codec);
            break;
          }
          case 26:
          case 24: {
            rewardCount_.AddEntriesFrom(input, _repeated_rewardCount_codec);
            break;
          }
          case 34: {
            rewardId_.AddEntriesFrom(input, _repeated_rewardId_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            numInfo_.AddEntriesFrom(ref input, _repeated_numInfo_codec);
            break;
          }
          case 26:
          case 24: {
            rewardCount_.AddEntriesFrom(ref input, _repeated_rewardCount_codec);
            break;
          }
          case 34: {
            rewardId_.AddEntriesFrom(ref input, _repeated_rewardId_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventPuzzleDetaileMapABValue : pb::IMessage<EventPuzzleDetaileMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventPuzzleDetaileMapABValue> _parser = new pb::MessageParser<EventPuzzleDetaileMapABValue>(() => new EventPuzzleDetaileMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventPuzzleDetaileMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventPuzzleDetaileConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventPuzzleDetaileMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventPuzzleDetaileMapABValue(EventPuzzleDetaileMapABValue other) : this() {
      eventPuzzleDetaileMap_ = other.eventPuzzleDetaileMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventPuzzleDetaileMapABValue Clone() {
      return new EventPuzzleDetaileMapABValue(this);
    }

    /// <summary>Field number for the "EventPuzzleDetaileMap" field.</summary>
    public const int EventPuzzleDetaileMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventPuzzleDetaile>.Codec _map_eventPuzzleDetaileMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventPuzzleDetaile>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventPuzzleDetaile.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventPuzzleDetaile> eventPuzzleDetaileMap_ = new pbc::MapField<int, global::fat.rawdata.EventPuzzleDetaile>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventPuzzleDetaile> EventPuzzleDetaileMap {
      get { return eventPuzzleDetaileMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventPuzzleDetaileMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventPuzzleDetaileMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventPuzzleDetaileMap.Equals(other.EventPuzzleDetaileMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventPuzzleDetaileMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventPuzzleDetaileMap_.WriteTo(output, _map_eventPuzzleDetaileMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventPuzzleDetaileMap_.WriteTo(ref output, _map_eventPuzzleDetaileMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventPuzzleDetaileMap_.CalculateSize(_map_eventPuzzleDetaileMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventPuzzleDetaileMapABValue other) {
      if (other == null) {
        return;
      }
      eventPuzzleDetaileMap_.Add(other.eventPuzzleDetaileMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventPuzzleDetaileMap_.AddEntriesFrom(input, _map_eventPuzzleDetaileMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventPuzzleDetaileMap_.AddEntriesFrom(ref input, _map_eventPuzzleDetaileMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventPuzzleDetaileConf : pb::IMessage<EventPuzzleDetaileConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventPuzzleDetaileConf> _parser = new pb::MessageParser<EventPuzzleDetaileConf>(() => new EventPuzzleDetaileConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventPuzzleDetaileConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventPuzzleDetaileConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventPuzzleDetaileConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventPuzzleDetaileConf(EventPuzzleDetaileConf other) : this() {
      eventPuzzleDetaileMap_ = other.eventPuzzleDetaileMap_.Clone();
      eventPuzzleDetaileMapAB_ = other.eventPuzzleDetaileMapAB_.Clone();
      eventPuzzleDetaileMapABPatch_ = other.eventPuzzleDetaileMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventPuzzleDetaileConf Clone() {
      return new EventPuzzleDetaileConf(this);
    }

    /// <summary>Field number for the "EventPuzzleDetaileMap" field.</summary>
    public const int EventPuzzleDetaileMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventPuzzleDetaile>.Codec _map_eventPuzzleDetaileMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventPuzzleDetaile>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventPuzzleDetaile.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventPuzzleDetaile> eventPuzzleDetaileMap_ = new pbc::MapField<int, global::fat.rawdata.EventPuzzleDetaile>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventPuzzleDetaile> EventPuzzleDetaileMap {
      get { return eventPuzzleDetaileMap_; }
    }

    /// <summary>Field number for the "EventPuzzleDetaileMapAB" field.</summary>
    public const int EventPuzzleDetaileMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventPuzzleDetaileMapABValue>.Codec _map_eventPuzzleDetaileMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventPuzzleDetaileMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventPuzzleDetaileMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventPuzzleDetaileMapABValue> eventPuzzleDetaileMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventPuzzleDetaileMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventPuzzleDetaileMapABValue> EventPuzzleDetaileMapAB {
      get { return eventPuzzleDetaileMapAB_; }
    }

    /// <summary>Field number for the "EventPuzzleDetaileMapABPatch" field.</summary>
    public const int EventPuzzleDetaileMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventPuzzleDetaileMapABValue>.Codec _map_eventPuzzleDetaileMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventPuzzleDetaileMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventPuzzleDetaileMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventPuzzleDetaileMapABValue> eventPuzzleDetaileMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventPuzzleDetaileMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventPuzzleDetaileMapABValue> EventPuzzleDetaileMapABPatch {
      get { return eventPuzzleDetaileMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventPuzzleDetaileConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventPuzzleDetaileConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventPuzzleDetaileMap.Equals(other.EventPuzzleDetaileMap)) return false;
      if (!EventPuzzleDetaileMapAB.Equals(other.EventPuzzleDetaileMapAB)) return false;
      if (!EventPuzzleDetaileMapABPatch.Equals(other.EventPuzzleDetaileMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventPuzzleDetaileMap.GetHashCode();
      hash ^= EventPuzzleDetaileMapAB.GetHashCode();
      hash ^= EventPuzzleDetaileMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventPuzzleDetaileMap_.WriteTo(output, _map_eventPuzzleDetaileMap_codec);
      eventPuzzleDetaileMapAB_.WriteTo(output, _map_eventPuzzleDetaileMapAB_codec);
      eventPuzzleDetaileMapABPatch_.WriteTo(output, _map_eventPuzzleDetaileMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventPuzzleDetaileMap_.WriteTo(ref output, _map_eventPuzzleDetaileMap_codec);
      eventPuzzleDetaileMapAB_.WriteTo(ref output, _map_eventPuzzleDetaileMapAB_codec);
      eventPuzzleDetaileMapABPatch_.WriteTo(ref output, _map_eventPuzzleDetaileMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventPuzzleDetaileMap_.CalculateSize(_map_eventPuzzleDetaileMap_codec);
      size += eventPuzzleDetaileMapAB_.CalculateSize(_map_eventPuzzleDetaileMapAB_codec);
      size += eventPuzzleDetaileMapABPatch_.CalculateSize(_map_eventPuzzleDetaileMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventPuzzleDetaileConf other) {
      if (other == null) {
        return;
      }
      eventPuzzleDetaileMap_.Add(other.eventPuzzleDetaileMap_);
      eventPuzzleDetaileMapAB_.Add(other.eventPuzzleDetaileMapAB_);
      eventPuzzleDetaileMapABPatch_.Add(other.eventPuzzleDetaileMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventPuzzleDetaileMap_.AddEntriesFrom(input, _map_eventPuzzleDetaileMap_codec);
            break;
          }
          case 18: {
            eventPuzzleDetaileMapAB_.AddEntriesFrom(input, _map_eventPuzzleDetaileMapAB_codec);
            break;
          }
          case 26: {
            eventPuzzleDetaileMapABPatch_.AddEntriesFrom(input, _map_eventPuzzleDetaileMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventPuzzleDetaileMap_.AddEntriesFrom(ref input, _map_eventPuzzleDetaileMap_codec);
            break;
          }
          case 18: {
            eventPuzzleDetaileMapAB_.AddEntriesFrom(ref input, _map_eventPuzzleDetaileMapAB_codec);
            break;
          }
          case 26: {
            eventPuzzleDetaileMapABPatch_.AddEntriesFrom(ref input, _map_eventPuzzleDetaileMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
