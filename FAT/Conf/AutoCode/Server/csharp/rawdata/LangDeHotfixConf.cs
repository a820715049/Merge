// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/LangDeHotfixConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/LangDeHotfixConf.proto</summary>
  public static partial class LangDeHotfixConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/LangDeHotfixConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LangDeHotfixConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch5yYXdkYXRhL0xhbmdEZUhvdGZpeENvbmYucHJvdG8SB3Jhd2RhdGEiKAoM",
            "TGFuZ0RlSG90Zml4EgoKAkxLGAEgASgJEgwKBE5hbWUYAiABKAkiTAoYTGFu",
            "Z0RlSG90Zml4U2xpY2VBQlZhbHVlEjAKEUxhbmdEZUhvdGZpeFNsaWNlGAEg",
            "AygLMhUucmF3ZGF0YS5MYW5nRGVIb3RmaXgiswMKEExhbmdEZUhvdGZpeENv",
            "bmYSMAoRTGFuZ0RlSG90Zml4U2xpY2UYASADKAsyFS5yYXdkYXRhLkxhbmdE",
            "ZUhvdGZpeBJPChNMYW5nRGVIb3RmaXhTbGljZUFCGAIgAygLMjIucmF3ZGF0",
            "YS5MYW5nRGVIb3RmaXhDb25mLkxhbmdEZUhvdGZpeFNsaWNlQUJFbnRyeRJZ",
            "ChhMYW5nRGVIb3RmaXhTbGljZUFCUGF0Y2gYAyADKAsyNy5yYXdkYXRhLkxh",
            "bmdEZUhvdGZpeENvbmYuTGFuZ0RlSG90Zml4U2xpY2VBQlBhdGNoRW50cnka",
            "XQoYTGFuZ0RlSG90Zml4U2xpY2VBQkVudHJ5EgsKA2tleRgBIAEoCRIwCgV2",
            "YWx1ZRgCIAEoCzIhLnJhd2RhdGEuTGFuZ0RlSG90Zml4U2xpY2VBQlZhbHVl",
            "OgI4ARpiCh1MYW5nRGVIb3RmaXhTbGljZUFCUGF0Y2hFbnRyeRILCgNrZXkY",
            "ASABKAkSMAoFdmFsdWUYAiABKAsyIS5yYXdkYXRhLkxhbmdEZUhvdGZpeFNs",
            "aWNlQUJWYWx1ZToCOAFCPVotZ2l0bGFiLmZ1bnBsdXMuaW8vZmF0L2NvbmYv",
            "Z2VuL2dvbGFuZy9yYXdkYXRhqgILZmF0LnJhd2RhdGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.LangDeHotfix), global::fat.rawdata.LangDeHotfix.Parser, new[]{ "LK", "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.LangDeHotfixSliceABValue), global::fat.rawdata.LangDeHotfixSliceABValue.Parser, new[]{ "LangDeHotfixSlice" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.LangDeHotfixConf), global::fat.rawdata.LangDeHotfixConf.Parser, new[]{ "LangDeHotfixSlice", "LangDeHotfixSliceAB", "LangDeHotfixSliceABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="LangDeHotfix",table="LangDeHotfixSlice",table_wrapper="LangDeHotfixConf",map="false",map_key_type="",data="LangDeHotfixConf")
  /// annotation@ab(table_ab="LangDeHotfixSliceAB",table_ab_patch="LangDeHotfixSliceABPatch",table_ab_value="LangDeHotfixSliceABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// </summary>
  public sealed partial class LangDeHotfix : pb::IMessage<LangDeHotfix>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LangDeHotfix> _parser = new pb::MessageParser<LangDeHotfix>(() => new LangDeHotfix());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LangDeHotfix> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.LangDeHotfixConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangDeHotfix() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangDeHotfix(LangDeHotfix other) : this() {
      lK_ = other.lK_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangDeHotfix Clone() {
      return new LangDeHotfix(this);
    }

    /// <summary>Field number for the "LK" field.</summary>
    public const int LKFieldNumber = 1;
    private string lK_ = "";
    /// <summary>
    /// key
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LK {
      get { return lK_; }
      set {
        lK_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    /// 德语
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LangDeHotfix);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LangDeHotfix other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LK != other.LK) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LK.Length != 0) hash ^= LK.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (LK.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LK);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (LK.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LK);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LK.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LK);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LangDeHotfix other) {
      if (other == null) {
        return;
      }
      if (other.LK.Length != 0) {
        LK = other.LK;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LK = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            LK = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LangDeHotfixSliceABValue : pb::IMessage<LangDeHotfixSliceABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LangDeHotfixSliceABValue> _parser = new pb::MessageParser<LangDeHotfixSliceABValue>(() => new LangDeHotfixSliceABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LangDeHotfixSliceABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.LangDeHotfixConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangDeHotfixSliceABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangDeHotfixSliceABValue(LangDeHotfixSliceABValue other) : this() {
      langDeHotfixSlice_ = other.langDeHotfixSlice_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangDeHotfixSliceABValue Clone() {
      return new LangDeHotfixSliceABValue(this);
    }

    /// <summary>Field number for the "LangDeHotfixSlice" field.</summary>
    public const int LangDeHotfixSliceFieldNumber = 1;
    private static readonly pb::FieldCodec<global::fat.rawdata.LangDeHotfix> _repeated_langDeHotfixSlice_codec
        = pb::FieldCodec.ForMessage(10, global::fat.rawdata.LangDeHotfix.Parser);
    private readonly pbc::RepeatedField<global::fat.rawdata.LangDeHotfix> langDeHotfixSlice_ = new pbc::RepeatedField<global::fat.rawdata.LangDeHotfix>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::fat.rawdata.LangDeHotfix> LangDeHotfixSlice {
      get { return langDeHotfixSlice_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LangDeHotfixSliceABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LangDeHotfixSliceABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!langDeHotfixSlice_.Equals(other.langDeHotfixSlice_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= langDeHotfixSlice_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      langDeHotfixSlice_.WriteTo(output, _repeated_langDeHotfixSlice_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      langDeHotfixSlice_.WriteTo(ref output, _repeated_langDeHotfixSlice_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += langDeHotfixSlice_.CalculateSize(_repeated_langDeHotfixSlice_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LangDeHotfixSliceABValue other) {
      if (other == null) {
        return;
      }
      langDeHotfixSlice_.Add(other.langDeHotfixSlice_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            langDeHotfixSlice_.AddEntriesFrom(input, _repeated_langDeHotfixSlice_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            langDeHotfixSlice_.AddEntriesFrom(ref input, _repeated_langDeHotfixSlice_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LangDeHotfixConf : pb::IMessage<LangDeHotfixConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LangDeHotfixConf> _parser = new pb::MessageParser<LangDeHotfixConf>(() => new LangDeHotfixConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LangDeHotfixConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.LangDeHotfixConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangDeHotfixConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangDeHotfixConf(LangDeHotfixConf other) : this() {
      langDeHotfixSlice_ = other.langDeHotfixSlice_.Clone();
      langDeHotfixSliceAB_ = other.langDeHotfixSliceAB_.Clone();
      langDeHotfixSliceABPatch_ = other.langDeHotfixSliceABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LangDeHotfixConf Clone() {
      return new LangDeHotfixConf(this);
    }

    /// <summary>Field number for the "LangDeHotfixSlice" field.</summary>
    public const int LangDeHotfixSliceFieldNumber = 1;
    private static readonly pb::FieldCodec<global::fat.rawdata.LangDeHotfix> _repeated_langDeHotfixSlice_codec
        = pb::FieldCodec.ForMessage(10, global::fat.rawdata.LangDeHotfix.Parser);
    private readonly pbc::RepeatedField<global::fat.rawdata.LangDeHotfix> langDeHotfixSlice_ = new pbc::RepeatedField<global::fat.rawdata.LangDeHotfix>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::fat.rawdata.LangDeHotfix> LangDeHotfixSlice {
      get { return langDeHotfixSlice_; }
    }

    /// <summary>Field number for the "LangDeHotfixSliceAB" field.</summary>
    public const int LangDeHotfixSliceABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.LangDeHotfixSliceABValue>.Codec _map_langDeHotfixSliceAB_codec
        = new pbc::MapField<string, global::fat.rawdata.LangDeHotfixSliceABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.LangDeHotfixSliceABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.LangDeHotfixSliceABValue> langDeHotfixSliceAB_ = new pbc::MapField<string, global::fat.rawdata.LangDeHotfixSliceABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.LangDeHotfixSliceABValue> LangDeHotfixSliceAB {
      get { return langDeHotfixSliceAB_; }
    }

    /// <summary>Field number for the "LangDeHotfixSliceABPatch" field.</summary>
    public const int LangDeHotfixSliceABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.LangDeHotfixSliceABValue>.Codec _map_langDeHotfixSliceABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.LangDeHotfixSliceABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.LangDeHotfixSliceABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.LangDeHotfixSliceABValue> langDeHotfixSliceABPatch_ = new pbc::MapField<string, global::fat.rawdata.LangDeHotfixSliceABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.LangDeHotfixSliceABValue> LangDeHotfixSliceABPatch {
      get { return langDeHotfixSliceABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LangDeHotfixConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LangDeHotfixConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!langDeHotfixSlice_.Equals(other.langDeHotfixSlice_)) return false;
      if (!LangDeHotfixSliceAB.Equals(other.LangDeHotfixSliceAB)) return false;
      if (!LangDeHotfixSliceABPatch.Equals(other.LangDeHotfixSliceABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= langDeHotfixSlice_.GetHashCode();
      hash ^= LangDeHotfixSliceAB.GetHashCode();
      hash ^= LangDeHotfixSliceABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      langDeHotfixSlice_.WriteTo(output, _repeated_langDeHotfixSlice_codec);
      langDeHotfixSliceAB_.WriteTo(output, _map_langDeHotfixSliceAB_codec);
      langDeHotfixSliceABPatch_.WriteTo(output, _map_langDeHotfixSliceABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      langDeHotfixSlice_.WriteTo(ref output, _repeated_langDeHotfixSlice_codec);
      langDeHotfixSliceAB_.WriteTo(ref output, _map_langDeHotfixSliceAB_codec);
      langDeHotfixSliceABPatch_.WriteTo(ref output, _map_langDeHotfixSliceABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += langDeHotfixSlice_.CalculateSize(_repeated_langDeHotfixSlice_codec);
      size += langDeHotfixSliceAB_.CalculateSize(_map_langDeHotfixSliceAB_codec);
      size += langDeHotfixSliceABPatch_.CalculateSize(_map_langDeHotfixSliceABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LangDeHotfixConf other) {
      if (other == null) {
        return;
      }
      langDeHotfixSlice_.Add(other.langDeHotfixSlice_);
      langDeHotfixSliceAB_.Add(other.langDeHotfixSliceAB_);
      langDeHotfixSliceABPatch_.Add(other.langDeHotfixSliceABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            langDeHotfixSlice_.AddEntriesFrom(input, _repeated_langDeHotfixSlice_codec);
            break;
          }
          case 18: {
            langDeHotfixSliceAB_.AddEntriesFrom(input, _map_langDeHotfixSliceAB_codec);
            break;
          }
          case 26: {
            langDeHotfixSliceABPatch_.AddEntriesFrom(input, _map_langDeHotfixSliceABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            langDeHotfixSlice_.AddEntriesFrom(ref input, _repeated_langDeHotfixSlice_codec);
            break;
          }
          case 18: {
            langDeHotfixSliceAB_.AddEntriesFrom(ref input, _map_langDeHotfixSliceAB_codec);
            break;
          }
          case 26: {
            langDeHotfixSliceABPatch_.AddEntriesFrom(ref input, _map_langDeHotfixSliceABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
