// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/ReplaceBundleConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/ReplaceBundleConf.proto</summary>
  public static partial class ReplaceBundleConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/ReplaceBundleConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ReplaceBundleConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch9yYXdkYXRhL1JlcGxhY2VCdW5kbGVDb25mLnByb3RvEgdyYXdkYXRhIjwK",
            "DVJlcGxhY2VCdW5kbGUSCgoCaWQYASABKAUSDgoGb3JpZ2luGAIgASgJEg8K",
            "B3JlcGxhY2UYAyABKAkivAEKF1JlcGxhY2VCdW5kbGVNYXBBQlZhbHVlElAK",
            "EFJlcGxhY2VCdW5kbGVNYXAYASADKAsyNi5yYXdkYXRhLlJlcGxhY2VCdW5k",
            "bGVNYXBBQlZhbHVlLlJlcGxhY2VCdW5kbGVNYXBFbnRyeRpPChVSZXBsYWNl",
            "QnVuZGxlTWFwRW50cnkSCwoDa2V5GAEgASgFEiUKBXZhbHVlGAIgASgLMhYu",
            "cmF3ZGF0YS5SZXBsYWNlQnVuZGxlOgI4ASKZBAoRUmVwbGFjZUJ1bmRsZUNv",
            "bmYSSgoQUmVwbGFjZUJ1bmRsZU1hcBgBIAMoCzIwLnJhd2RhdGEuUmVwbGFj",
            "ZUJ1bmRsZUNvbmYuUmVwbGFjZUJ1bmRsZU1hcEVudHJ5Ek4KElJlcGxhY2VC",
            "dW5kbGVNYXBBQhgCIAMoCzIyLnJhd2RhdGEuUmVwbGFjZUJ1bmRsZUNvbmYu",
            "UmVwbGFjZUJ1bmRsZU1hcEFCRW50cnkSWAoXUmVwbGFjZUJ1bmRsZU1hcEFC",
            "UGF0Y2gYAyADKAsyNy5yYXdkYXRhLlJlcGxhY2VCdW5kbGVDb25mLlJlcGxh",
            "Y2VCdW5kbGVNYXBBQlBhdGNoRW50cnkaTwoVUmVwbGFjZUJ1bmRsZU1hcEVu",
            "dHJ5EgsKA2tleRgBIAEoBRIlCgV2YWx1ZRgCIAEoCzIWLnJhd2RhdGEuUmVw",
            "bGFjZUJ1bmRsZToCOAEaWwoXUmVwbGFjZUJ1bmRsZU1hcEFCRW50cnkSCwoD",
            "a2V5GAEgASgJEi8KBXZhbHVlGAIgASgLMiAucmF3ZGF0YS5SZXBsYWNlQnVu",
            "ZGxlTWFwQUJWYWx1ZToCOAEaYAocUmVwbGFjZUJ1bmRsZU1hcEFCUGF0Y2hF",
            "bnRyeRILCgNrZXkYASABKAkSLwoFdmFsdWUYAiABKAsyIC5yYXdkYXRhLlJl",
            "cGxhY2VCdW5kbGVNYXBBQlZhbHVlOgI4AUI9Wi1naXRsYWIuZnVucGx1cy5p",
            "by9mYXQvY29uZi9nZW4vZ29sYW5nL3Jhd2RhdGGqAgtmYXQucmF3ZGF0YWIG",
            "cHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.ReplaceBundle), global::fat.rawdata.ReplaceBundle.Parser, new[]{ "Id", "Origin", "Replace" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.ReplaceBundleMapABValue), global::fat.rawdata.ReplaceBundleMapABValue.Parser, new[]{ "ReplaceBundleMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.ReplaceBundleConf), global::fat.rawdata.ReplaceBundleConf.Parser, new[]{ "ReplaceBundleMap", "ReplaceBundleMapAB", "ReplaceBundleMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="ReplaceBundle",table="ReplaceBundleMap",table_wrapper="ReplaceBundleConf",map="true",map_key_type="int32",data="ReplaceBundleConf")
  /// annotation@ab(table_ab="ReplaceBundleMapAB",table_ab_patch="ReplaceBundleMapABPatch",table_ab_value="ReplaceBundleMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@ReplaceBundle(id="id")
  /// </summary>
  public sealed partial class ReplaceBundle : pb::IMessage<ReplaceBundle>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReplaceBundle> _parser = new pb::MessageParser<ReplaceBundle>(() => new ReplaceBundle());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReplaceBundle> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.ReplaceBundleConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReplaceBundle() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReplaceBundle(ReplaceBundle other) : this() {
      id_ = other.id_;
      origin_ = other.origin_;
      replace_ = other.replace_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReplaceBundle Clone() {
      return new ReplaceBundle(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// ID
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "origin" field.</summary>
    public const int OriginFieldNumber = 2;
    private string origin_ = "";
    /// <summary>
    /// 要被替换的 bundle 名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Origin {
      get { return origin_; }
      set {
        origin_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "replace" field.</summary>
    public const int ReplaceFieldNumber = 3;
    private string replace_ = "";
    /// <summary>
    /// 要替换成的 bundle 名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Replace {
      get { return replace_; }
      set {
        replace_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReplaceBundle);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReplaceBundle other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Origin != other.Origin) return false;
      if (Replace != other.Replace) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Origin.Length != 0) hash ^= Origin.GetHashCode();
      if (Replace.Length != 0) hash ^= Replace.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Origin.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Origin);
      }
      if (Replace.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Replace);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Origin.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Origin);
      }
      if (Replace.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Replace);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Origin.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Origin);
      }
      if (Replace.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Replace);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReplaceBundle other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Origin.Length != 0) {
        Origin = other.Origin;
      }
      if (other.Replace.Length != 0) {
        Replace = other.Replace;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Origin = input.ReadString();
            break;
          }
          case 26: {
            Replace = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Origin = input.ReadString();
            break;
          }
          case 26: {
            Replace = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ReplaceBundleMapABValue : pb::IMessage<ReplaceBundleMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReplaceBundleMapABValue> _parser = new pb::MessageParser<ReplaceBundleMapABValue>(() => new ReplaceBundleMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReplaceBundleMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.ReplaceBundleConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReplaceBundleMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReplaceBundleMapABValue(ReplaceBundleMapABValue other) : this() {
      replaceBundleMap_ = other.replaceBundleMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReplaceBundleMapABValue Clone() {
      return new ReplaceBundleMapABValue(this);
    }

    /// <summary>Field number for the "ReplaceBundleMap" field.</summary>
    public const int ReplaceBundleMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.ReplaceBundle>.Codec _map_replaceBundleMap_codec
        = new pbc::MapField<int, global::fat.rawdata.ReplaceBundle>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ReplaceBundle.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.ReplaceBundle> replaceBundleMap_ = new pbc::MapField<int, global::fat.rawdata.ReplaceBundle>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.ReplaceBundle> ReplaceBundleMap {
      get { return replaceBundleMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReplaceBundleMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReplaceBundleMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!ReplaceBundleMap.Equals(other.ReplaceBundleMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ReplaceBundleMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      replaceBundleMap_.WriteTo(output, _map_replaceBundleMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      replaceBundleMap_.WriteTo(ref output, _map_replaceBundleMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += replaceBundleMap_.CalculateSize(_map_replaceBundleMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReplaceBundleMapABValue other) {
      if (other == null) {
        return;
      }
      replaceBundleMap_.Add(other.replaceBundleMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            replaceBundleMap_.AddEntriesFrom(input, _map_replaceBundleMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            replaceBundleMap_.AddEntriesFrom(ref input, _map_replaceBundleMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ReplaceBundleConf : pb::IMessage<ReplaceBundleConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReplaceBundleConf> _parser = new pb::MessageParser<ReplaceBundleConf>(() => new ReplaceBundleConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReplaceBundleConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.ReplaceBundleConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReplaceBundleConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReplaceBundleConf(ReplaceBundleConf other) : this() {
      replaceBundleMap_ = other.replaceBundleMap_.Clone();
      replaceBundleMapAB_ = other.replaceBundleMapAB_.Clone();
      replaceBundleMapABPatch_ = other.replaceBundleMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReplaceBundleConf Clone() {
      return new ReplaceBundleConf(this);
    }

    /// <summary>Field number for the "ReplaceBundleMap" field.</summary>
    public const int ReplaceBundleMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.ReplaceBundle>.Codec _map_replaceBundleMap_codec
        = new pbc::MapField<int, global::fat.rawdata.ReplaceBundle>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ReplaceBundle.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.ReplaceBundle> replaceBundleMap_ = new pbc::MapField<int, global::fat.rawdata.ReplaceBundle>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.ReplaceBundle> ReplaceBundleMap {
      get { return replaceBundleMap_; }
    }

    /// <summary>Field number for the "ReplaceBundleMapAB" field.</summary>
    public const int ReplaceBundleMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.ReplaceBundleMapABValue>.Codec _map_replaceBundleMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.ReplaceBundleMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ReplaceBundleMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.ReplaceBundleMapABValue> replaceBundleMapAB_ = new pbc::MapField<string, global::fat.rawdata.ReplaceBundleMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.ReplaceBundleMapABValue> ReplaceBundleMapAB {
      get { return replaceBundleMapAB_; }
    }

    /// <summary>Field number for the "ReplaceBundleMapABPatch" field.</summary>
    public const int ReplaceBundleMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.ReplaceBundleMapABValue>.Codec _map_replaceBundleMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.ReplaceBundleMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ReplaceBundleMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.ReplaceBundleMapABValue> replaceBundleMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.ReplaceBundleMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.ReplaceBundleMapABValue> ReplaceBundleMapABPatch {
      get { return replaceBundleMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReplaceBundleConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReplaceBundleConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!ReplaceBundleMap.Equals(other.ReplaceBundleMap)) return false;
      if (!ReplaceBundleMapAB.Equals(other.ReplaceBundleMapAB)) return false;
      if (!ReplaceBundleMapABPatch.Equals(other.ReplaceBundleMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ReplaceBundleMap.GetHashCode();
      hash ^= ReplaceBundleMapAB.GetHashCode();
      hash ^= ReplaceBundleMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      replaceBundleMap_.WriteTo(output, _map_replaceBundleMap_codec);
      replaceBundleMapAB_.WriteTo(output, _map_replaceBundleMapAB_codec);
      replaceBundleMapABPatch_.WriteTo(output, _map_replaceBundleMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      replaceBundleMap_.WriteTo(ref output, _map_replaceBundleMap_codec);
      replaceBundleMapAB_.WriteTo(ref output, _map_replaceBundleMapAB_codec);
      replaceBundleMapABPatch_.WriteTo(ref output, _map_replaceBundleMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += replaceBundleMap_.CalculateSize(_map_replaceBundleMap_codec);
      size += replaceBundleMapAB_.CalculateSize(_map_replaceBundleMapAB_codec);
      size += replaceBundleMapABPatch_.CalculateSize(_map_replaceBundleMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReplaceBundleConf other) {
      if (other == null) {
        return;
      }
      replaceBundleMap_.Add(other.replaceBundleMap_);
      replaceBundleMapAB_.Add(other.replaceBundleMapAB_);
      replaceBundleMapABPatch_.Add(other.replaceBundleMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            replaceBundleMap_.AddEntriesFrom(input, _map_replaceBundleMap_codec);
            break;
          }
          case 18: {
            replaceBundleMapAB_.AddEntriesFrom(input, _map_replaceBundleMapAB_codec);
            break;
          }
          case 26: {
            replaceBundleMapABPatch_.AddEntriesFrom(input, _map_replaceBundleMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            replaceBundleMap_.AddEntriesFrom(ref input, _map_replaceBundleMap_codec);
            break;
          }
          case 18: {
            replaceBundleMapAB_.AddEntriesFrom(ref input, _map_replaceBundleMapAB_codec);
            break;
          }
          case 26: {
            replaceBundleMapABPatch_.AddEntriesFrom(ref input, _map_replaceBundleMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
