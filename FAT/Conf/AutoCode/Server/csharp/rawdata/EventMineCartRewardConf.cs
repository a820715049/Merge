// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventMineCartRewardConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventMineCartRewardConf.proto</summary>
  public static partial class EventMineCartRewardConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventMineCartRewardConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventMineCartRewardConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiVyYXdkYXRhL0V2ZW50TWluZUNhcnRSZXdhcmRDb25mLnByb3RvEgdyYXdk",
            "YXRhIlgKE0V2ZW50TWluZUNhcnRSZXdhcmQSCgoCaWQYASABKAUSDAoEaWNv",
            "bhgFIAEoCRITCgtyZXdhcmRDb3VudBgCIAEoBRISCgpyZXdhcmRQb29sGAMg",
            "AygJIuABCh1FdmVudE1pbmVDYXJ0UmV3YXJkTWFwQUJWYWx1ZRJiChZFdmVu",
            "dE1pbmVDYXJ0UmV3YXJkTWFwGAEgAygLMkIucmF3ZGF0YS5FdmVudE1pbmVD",
            "YXJ0UmV3YXJkTWFwQUJWYWx1ZS5FdmVudE1pbmVDYXJ0UmV3YXJkTWFwRW50",
            "cnkaWwobRXZlbnRNaW5lQ2FydFJld2FyZE1hcEVudHJ5EgsKA2tleRgBIAEo",
            "BRIrCgV2YWx1ZRgCIAEoCzIcLnJhd2RhdGEuRXZlbnRNaW5lQ2FydFJld2Fy",
            "ZDoCOAEi+QQKF0V2ZW50TWluZUNhcnRSZXdhcmRDb25mElwKFkV2ZW50TWlu",
            "ZUNhcnRSZXdhcmRNYXAYASADKAsyPC5yYXdkYXRhLkV2ZW50TWluZUNhcnRS",
            "ZXdhcmRDb25mLkV2ZW50TWluZUNhcnRSZXdhcmRNYXBFbnRyeRJgChhFdmVu",
            "dE1pbmVDYXJ0UmV3YXJkTWFwQUIYAiADKAsyPi5yYXdkYXRhLkV2ZW50TWlu",
            "ZUNhcnRSZXdhcmRDb25mLkV2ZW50TWluZUNhcnRSZXdhcmRNYXBBQkVudHJ5",
            "EmoKHUV2ZW50TWluZUNhcnRSZXdhcmRNYXBBQlBhdGNoGAMgAygLMkMucmF3",
            "ZGF0YS5FdmVudE1pbmVDYXJ0UmV3YXJkQ29uZi5FdmVudE1pbmVDYXJ0UmV3",
            "YXJkTWFwQUJQYXRjaEVudHJ5GlsKG0V2ZW50TWluZUNhcnRSZXdhcmRNYXBF",
            "bnRyeRILCgNrZXkYASABKAUSKwoFdmFsdWUYAiABKAsyHC5yYXdkYXRhLkV2",
            "ZW50TWluZUNhcnRSZXdhcmQ6AjgBGmcKHUV2ZW50TWluZUNhcnRSZXdhcmRN",
            "YXBBQkVudHJ5EgsKA2tleRgBIAEoCRI1CgV2YWx1ZRgCIAEoCzImLnJhd2Rh",
            "dGEuRXZlbnRNaW5lQ2FydFJld2FyZE1hcEFCVmFsdWU6AjgBGmwKIkV2ZW50",
            "TWluZUNhcnRSZXdhcmRNYXBBQlBhdGNoRW50cnkSCwoDa2V5GAEgASgJEjUK",
            "BXZhbHVlGAIgASgLMiYucmF3ZGF0YS5FdmVudE1pbmVDYXJ0UmV3YXJkTWFw",
            "QUJWYWx1ZToCOAFCPVotZ2l0bGFiLmZ1bnBsdXMuaW8vZmF0L2NvbmYvZ2Vu",
            "L2dvbGFuZy9yYXdkYXRhqgILZmF0LnJhd2RhdGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventMineCartReward), global::fat.rawdata.EventMineCartReward.Parser, new[]{ "Id", "Icon", "RewardCount", "RewardPool" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventMineCartRewardMapABValue), global::fat.rawdata.EventMineCartRewardMapABValue.Parser, new[]{ "EventMineCartRewardMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventMineCartRewardConf), global::fat.rawdata.EventMineCartRewardConf.Parser, new[]{ "EventMineCartRewardMap", "EventMineCartRewardMapAB", "EventMineCartRewardMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventMineCartReward",table="EventMineCartRewardMap",table_wrapper="EventMineCartRewardConf",map="true",map_key_type="int32",data="EventMineCartRewardConf")
  /// annotation@ab(table_ab="EventMineCartRewardMapAB",table_ab_patch="EventMineCartRewardMapABPatch",table_ab_value="EventMineCartRewardMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventMineCartReward(id="id")
  /// </summary>
  public sealed partial class EventMineCartReward : pb::IMessage<EventMineCartReward>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventMineCartReward> _parser = new pb::MessageParser<EventMineCartReward>(() => new EventMineCartReward());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventMineCartReward> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventMineCartRewardConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMineCartReward() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMineCartReward(EventMineCartReward other) : this() {
      id_ = other.id_;
      icon_ = other.icon_;
      rewardCount_ = other.rewardCount_;
      rewardPool_ = other.rewardPool_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMineCartReward Clone() {
      return new EventMineCartReward(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 节点奖励id
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "icon" field.</summary>
    public const int IconFieldNumber = 5;
    private string icon_ = "";
    /// <summary>
    /// 奖励图标
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Icon {
      get { return icon_; }
      set {
        icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "rewardCount" field.</summary>
    public const int RewardCountFieldNumber = 2;
    private int rewardCount_;
    /// <summary>
    /// 发奖次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RewardCount {
      get { return rewardCount_; }
      set {
        rewardCount_ = value;
      }
    }

    /// <summary>Field number for the "rewardPool" field.</summary>
    public const int RewardPoolFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_rewardPool_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> rewardPool_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 奖励池
    /// (棋子id:权重,...)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> RewardPool {
      get { return rewardPool_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventMineCartReward);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventMineCartReward other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Icon != other.Icon) return false;
      if (RewardCount != other.RewardCount) return false;
      if(!rewardPool_.Equals(other.rewardPool_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Icon.Length != 0) hash ^= Icon.GetHashCode();
      if (RewardCount != 0) hash ^= RewardCount.GetHashCode();
      hash ^= rewardPool_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (RewardCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RewardCount);
      }
      rewardPool_.WriteTo(output, _repeated_rewardPool_codec);
      if (Icon.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Icon);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (RewardCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RewardCount);
      }
      rewardPool_.WriteTo(ref output, _repeated_rewardPool_codec);
      if (Icon.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Icon);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Icon.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Icon);
      }
      if (RewardCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RewardCount);
      }
      size += rewardPool_.CalculateSize(_repeated_rewardPool_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventMineCartReward other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Icon.Length != 0) {
        Icon = other.Icon;
      }
      if (other.RewardCount != 0) {
        RewardCount = other.RewardCount;
      }
      rewardPool_.Add(other.rewardPool_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            RewardCount = input.ReadInt32();
            break;
          }
          case 26: {
            rewardPool_.AddEntriesFrom(input, _repeated_rewardPool_codec);
            break;
          }
          case 42: {
            Icon = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            RewardCount = input.ReadInt32();
            break;
          }
          case 26: {
            rewardPool_.AddEntriesFrom(ref input, _repeated_rewardPool_codec);
            break;
          }
          case 42: {
            Icon = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventMineCartRewardMapABValue : pb::IMessage<EventMineCartRewardMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventMineCartRewardMapABValue> _parser = new pb::MessageParser<EventMineCartRewardMapABValue>(() => new EventMineCartRewardMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventMineCartRewardMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventMineCartRewardConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMineCartRewardMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMineCartRewardMapABValue(EventMineCartRewardMapABValue other) : this() {
      eventMineCartRewardMap_ = other.eventMineCartRewardMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMineCartRewardMapABValue Clone() {
      return new EventMineCartRewardMapABValue(this);
    }

    /// <summary>Field number for the "EventMineCartRewardMap" field.</summary>
    public const int EventMineCartRewardMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventMineCartReward>.Codec _map_eventMineCartRewardMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventMineCartReward>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventMineCartReward.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventMineCartReward> eventMineCartRewardMap_ = new pbc::MapField<int, global::fat.rawdata.EventMineCartReward>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventMineCartReward> EventMineCartRewardMap {
      get { return eventMineCartRewardMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventMineCartRewardMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventMineCartRewardMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventMineCartRewardMap.Equals(other.EventMineCartRewardMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventMineCartRewardMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventMineCartRewardMap_.WriteTo(output, _map_eventMineCartRewardMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventMineCartRewardMap_.WriteTo(ref output, _map_eventMineCartRewardMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventMineCartRewardMap_.CalculateSize(_map_eventMineCartRewardMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventMineCartRewardMapABValue other) {
      if (other == null) {
        return;
      }
      eventMineCartRewardMap_.Add(other.eventMineCartRewardMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventMineCartRewardMap_.AddEntriesFrom(input, _map_eventMineCartRewardMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventMineCartRewardMap_.AddEntriesFrom(ref input, _map_eventMineCartRewardMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventMineCartRewardConf : pb::IMessage<EventMineCartRewardConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventMineCartRewardConf> _parser = new pb::MessageParser<EventMineCartRewardConf>(() => new EventMineCartRewardConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventMineCartRewardConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventMineCartRewardConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMineCartRewardConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMineCartRewardConf(EventMineCartRewardConf other) : this() {
      eventMineCartRewardMap_ = other.eventMineCartRewardMap_.Clone();
      eventMineCartRewardMapAB_ = other.eventMineCartRewardMapAB_.Clone();
      eventMineCartRewardMapABPatch_ = other.eventMineCartRewardMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMineCartRewardConf Clone() {
      return new EventMineCartRewardConf(this);
    }

    /// <summary>Field number for the "EventMineCartRewardMap" field.</summary>
    public const int EventMineCartRewardMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventMineCartReward>.Codec _map_eventMineCartRewardMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventMineCartReward>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventMineCartReward.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventMineCartReward> eventMineCartRewardMap_ = new pbc::MapField<int, global::fat.rawdata.EventMineCartReward>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventMineCartReward> EventMineCartRewardMap {
      get { return eventMineCartRewardMap_; }
    }

    /// <summary>Field number for the "EventMineCartRewardMapAB" field.</summary>
    public const int EventMineCartRewardMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventMineCartRewardMapABValue>.Codec _map_eventMineCartRewardMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventMineCartRewardMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventMineCartRewardMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventMineCartRewardMapABValue> eventMineCartRewardMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventMineCartRewardMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventMineCartRewardMapABValue> EventMineCartRewardMapAB {
      get { return eventMineCartRewardMapAB_; }
    }

    /// <summary>Field number for the "EventMineCartRewardMapABPatch" field.</summary>
    public const int EventMineCartRewardMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventMineCartRewardMapABValue>.Codec _map_eventMineCartRewardMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventMineCartRewardMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventMineCartRewardMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventMineCartRewardMapABValue> eventMineCartRewardMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventMineCartRewardMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventMineCartRewardMapABValue> EventMineCartRewardMapABPatch {
      get { return eventMineCartRewardMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventMineCartRewardConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventMineCartRewardConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventMineCartRewardMap.Equals(other.EventMineCartRewardMap)) return false;
      if (!EventMineCartRewardMapAB.Equals(other.EventMineCartRewardMapAB)) return false;
      if (!EventMineCartRewardMapABPatch.Equals(other.EventMineCartRewardMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventMineCartRewardMap.GetHashCode();
      hash ^= EventMineCartRewardMapAB.GetHashCode();
      hash ^= EventMineCartRewardMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventMineCartRewardMap_.WriteTo(output, _map_eventMineCartRewardMap_codec);
      eventMineCartRewardMapAB_.WriteTo(output, _map_eventMineCartRewardMapAB_codec);
      eventMineCartRewardMapABPatch_.WriteTo(output, _map_eventMineCartRewardMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventMineCartRewardMap_.WriteTo(ref output, _map_eventMineCartRewardMap_codec);
      eventMineCartRewardMapAB_.WriteTo(ref output, _map_eventMineCartRewardMapAB_codec);
      eventMineCartRewardMapABPatch_.WriteTo(ref output, _map_eventMineCartRewardMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventMineCartRewardMap_.CalculateSize(_map_eventMineCartRewardMap_codec);
      size += eventMineCartRewardMapAB_.CalculateSize(_map_eventMineCartRewardMapAB_codec);
      size += eventMineCartRewardMapABPatch_.CalculateSize(_map_eventMineCartRewardMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventMineCartRewardConf other) {
      if (other == null) {
        return;
      }
      eventMineCartRewardMap_.Add(other.eventMineCartRewardMap_);
      eventMineCartRewardMapAB_.Add(other.eventMineCartRewardMapAB_);
      eventMineCartRewardMapABPatch_.Add(other.eventMineCartRewardMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventMineCartRewardMap_.AddEntriesFrom(input, _map_eventMineCartRewardMap_codec);
            break;
          }
          case 18: {
            eventMineCartRewardMapAB_.AddEntriesFrom(input, _map_eventMineCartRewardMapAB_codec);
            break;
          }
          case 26: {
            eventMineCartRewardMapABPatch_.AddEntriesFrom(input, _map_eventMineCartRewardMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventMineCartRewardMap_.AddEntriesFrom(ref input, _map_eventMineCartRewardMap_codec);
            break;
          }
          case 18: {
            eventMineCartRewardMapAB_.AddEntriesFrom(ref input, _map_eventMineCartRewardMapAB_codec);
            break;
          }
          case 26: {
            eventMineCartRewardMapABPatch_.AddEntriesFrom(ref input, _map_eventMineCartRewardMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
