// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/ComMergeChestConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/ComMergeChestConf.proto</summary>
  public static partial class ComMergeChestConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/ComMergeChestConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ComMergeChestConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch9yYXdkYXRhL0NvbU1lcmdlQ2hlc3RDb25mLnByb3RvEgdyYXdkYXRhIt8B",
            "Cg1Db21NZXJnZUNoZXN0EhUKDWNvbmZpZ1ZlcnNpb24YASABKAUSCgoCaWQY",
            "AiABKAUSDgoGX3RhZ3NfGAMgAygJEhAKCGNhcGFjaXR5GAQgASgFEhIKCmVu",
            "ZXJneUNvc3QYBSABKAUSDgoGZnJvemVuGAYgASgIEg8KB291dHB1dHMYByAD",
            "KAUSGAoQb3V0cHV0c1NlbGVjdE9uZRgIIAMoBRIVCg1vdXRwdXRzV2VpZ2h0",
            "GAkgAygFEhEKCXNwZWVkQ29zdBgKIAEoBRIQCgh3YWl0VGltZRgLIAEoBSK8",
            "AQoXQ29tTWVyZ2VDaGVzdE1hcEFCVmFsdWUSUAoQQ29tTWVyZ2VDaGVzdE1h",
            "cBgBIAMoCzI2LnJhd2RhdGEuQ29tTWVyZ2VDaGVzdE1hcEFCVmFsdWUuQ29t",
            "TWVyZ2VDaGVzdE1hcEVudHJ5Gk8KFUNvbU1lcmdlQ2hlc3RNYXBFbnRyeRIL",
            "CgNrZXkYASABKAkSJQoFdmFsdWUYAiABKAsyFi5yYXdkYXRhLkNvbU1lcmdl",
            "Q2hlc3Q6AjgBIpkEChFDb21NZXJnZUNoZXN0Q29uZhJKChBDb21NZXJnZUNo",
            "ZXN0TWFwGAEgAygLMjAucmF3ZGF0YS5Db21NZXJnZUNoZXN0Q29uZi5Db21N",
            "ZXJnZUNoZXN0TWFwRW50cnkSTgoSQ29tTWVyZ2VDaGVzdE1hcEFCGAIgAygL",
            "MjIucmF3ZGF0YS5Db21NZXJnZUNoZXN0Q29uZi5Db21NZXJnZUNoZXN0TWFw",
            "QUJFbnRyeRJYChdDb21NZXJnZUNoZXN0TWFwQUJQYXRjaBgDIAMoCzI3LnJh",
            "d2RhdGEuQ29tTWVyZ2VDaGVzdENvbmYuQ29tTWVyZ2VDaGVzdE1hcEFCUGF0",
            "Y2hFbnRyeRpPChVDb21NZXJnZUNoZXN0TWFwRW50cnkSCwoDa2V5GAEgASgJ",
            "EiUKBXZhbHVlGAIgASgLMhYucmF3ZGF0YS5Db21NZXJnZUNoZXN0OgI4ARpb",
            "ChdDb21NZXJnZUNoZXN0TWFwQUJFbnRyeRILCgNrZXkYASABKAkSLwoFdmFs",
            "dWUYAiABKAsyIC5yYXdkYXRhLkNvbU1lcmdlQ2hlc3RNYXBBQlZhbHVlOgI4",
            "ARpgChxDb21NZXJnZUNoZXN0TWFwQUJQYXRjaEVudHJ5EgsKA2tleRgBIAEo",
            "CRIvCgV2YWx1ZRgCIAEoCzIgLnJhd2RhdGEuQ29tTWVyZ2VDaGVzdE1hcEFC",
            "VmFsdWU6AjgBQj1aLWdpdGxhYi5mdW5wbHVzLmlvL2ZhdC9jb25mL2dlbi9n",
            "b2xhbmcvcmF3ZGF0YaoCC2ZhdC5yYXdkYXRhYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.ComMergeChest), global::fat.rawdata.ComMergeChest.Parser, new[]{ "ConfigVersion", "Id", "Tags", "Capacity", "EnergyCost", "Frozen", "Outputs", "OutputsSelectOne", "OutputsWeight", "SpeedCost", "WaitTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.ComMergeChestMapABValue), global::fat.rawdata.ComMergeChestMapABValue.Parser, new[]{ "ComMergeChestMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.ComMergeChestConf), global::fat.rawdata.ComMergeChestConf.Parser, new[]{ "ComMergeChestMap", "ComMergeChestMapAB", "ComMergeChestMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="ComMergeChest",table="ComMergeChestMap",table_wrapper="ComMergeChestConf",map="true",map_key_type="string",data="ComMergeChestConf")
  /// annotation@ab(table_ab="ComMergeChestMapAB",table_ab_patch="ComMergeChestMapABPatch",table_ab_value="ComMergeChestMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@ComMergeChest(id="configVersion,id")
  /// </summary>
  public sealed partial class ComMergeChest : pb::IMessage<ComMergeChest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ComMergeChest> _parser = new pb::MessageParser<ComMergeChest>(() => new ComMergeChest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ComMergeChest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.ComMergeChestConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComMergeChest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComMergeChest(ComMergeChest other) : this() {
      configVersion_ = other.configVersion_;
      id_ = other.id_;
      Tags_ = other.Tags_.Clone();
      capacity_ = other.capacity_;
      energyCost_ = other.energyCost_;
      frozen_ = other.frozen_;
      outputs_ = other.outputs_.Clone();
      outputsSelectOne_ = other.outputsSelectOne_.Clone();
      outputsWeight_ = other.outputsWeight_.Clone();
      speedCost_ = other.speedCost_;
      waitTime_ = other.waitTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComMergeChest Clone() {
      return new ComMergeChest(this);
    }

    /// <summary>Field number for the "configVersion" field.</summary>
    public const int ConfigVersionFieldNumber = 1;
    private int configVersion_;
    /// <summary>
    /// 最低版本号(包含)
    /// annotation@field_configVersion(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ConfigVersion {
      get { return configVersion_; }
      set {
        configVersion_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private int id_;
    /// <summary>
    /// 合成物品id
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "_tags_" field.</summary>
    public const int TagsFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_Tags_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> Tags_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 版本标记
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Tags {
      get { return Tags_; }
    }

    /// <summary>Field number for the "capacity" field.</summary>
    public const int CapacityFieldNumber = 4;
    private int capacity_;
    /// <summary>
    /// 容量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Capacity {
      get { return capacity_; }
      set {
        capacity_ = value;
      }
    }

    /// <summary>Field number for the "energyCost" field.</summary>
    public const int EnergyCostFieldNumber = 5;
    private int energyCost_;
    /// <summary>
    /// 出一次东西
    /// 花费的能量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EnergyCost {
      get { return energyCost_; }
      set {
        energyCost_ = value;
      }
    }

    /// <summary>Field number for the "frozen" field.</summary>
    public const int FrozenFieldNumber = 6;
    private bool frozen_;
    /// <summary>
    /// 是否产出蜘蛛网覆盖的物品
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Frozen {
      get { return frozen_; }
      set {
        frozen_ = value;
      }
    }

    /// <summary>Field number for the "outputs" field.</summary>
    public const int OutputsFieldNumber = 7;
    private static readonly pb::FieldCodec<int> _repeated_outputs_codec
        = pb::FieldCodec.ForInt32(58);
    private readonly pbc::RepeatedField<int> outputs_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 产出表
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Outputs {
      get { return outputs_; }
    }

    /// <summary>Field number for the "outputsSelectOne" field.</summary>
    public const int OutputsSelectOneFieldNumber = 8;
    private static readonly pb::FieldCodec<int> _repeated_outputsSelectOne_codec
        = pb::FieldCodec.ForInt32(66);
    private readonly pbc::RepeatedField<int> outputsSelectOne_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// outputs中只选一个的id集合
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> OutputsSelectOne {
      get { return outputsSelectOne_; }
    }

    /// <summary>Field number for the "outputsWeight" field.</summary>
    public const int OutputsWeightFieldNumber = 9;
    private static readonly pb::FieldCodec<int> _repeated_outputsWeight_codec
        = pb::FieldCodec.ForInt32(74);
    private readonly pbc::RepeatedField<int> outputsWeight_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 产出权重表
    /// (留空代表固定产出outputs)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> OutputsWeight {
      get { return outputsWeight_; }
    }

    /// <summary>Field number for the "speedCost" field.</summary>
    public const int SpeedCostFieldNumber = 10;
    private int speedCost_;
    /// <summary>
    /// 立即打开需要多少钻
    /// （废弃）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SpeedCost {
      get { return speedCost_; }
      set {
        speedCost_ = value;
      }
    }

    /// <summary>Field number for the "waitTime" field.</summary>
    public const int WaitTimeFieldNumber = 11;
    private int waitTime_;
    /// <summary>
    /// 打开要多久
    /// （秒）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int WaitTime {
      get { return waitTime_; }
      set {
        waitTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ComMergeChest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ComMergeChest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ConfigVersion != other.ConfigVersion) return false;
      if (Id != other.Id) return false;
      if(!Tags_.Equals(other.Tags_)) return false;
      if (Capacity != other.Capacity) return false;
      if (EnergyCost != other.EnergyCost) return false;
      if (Frozen != other.Frozen) return false;
      if(!outputs_.Equals(other.outputs_)) return false;
      if(!outputsSelectOne_.Equals(other.outputsSelectOne_)) return false;
      if(!outputsWeight_.Equals(other.outputsWeight_)) return false;
      if (SpeedCost != other.SpeedCost) return false;
      if (WaitTime != other.WaitTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ConfigVersion != 0) hash ^= ConfigVersion.GetHashCode();
      if (Id != 0) hash ^= Id.GetHashCode();
      hash ^= Tags_.GetHashCode();
      if (Capacity != 0) hash ^= Capacity.GetHashCode();
      if (EnergyCost != 0) hash ^= EnergyCost.GetHashCode();
      if (Frozen != false) hash ^= Frozen.GetHashCode();
      hash ^= outputs_.GetHashCode();
      hash ^= outputsSelectOne_.GetHashCode();
      hash ^= outputsWeight_.GetHashCode();
      if (SpeedCost != 0) hash ^= SpeedCost.GetHashCode();
      if (WaitTime != 0) hash ^= WaitTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ConfigVersion != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ConfigVersion);
      }
      if (Id != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Id);
      }
      Tags_.WriteTo(output, _repeated_Tags_codec);
      if (Capacity != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Capacity);
      }
      if (EnergyCost != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(EnergyCost);
      }
      if (Frozen != false) {
        output.WriteRawTag(48);
        output.WriteBool(Frozen);
      }
      outputs_.WriteTo(output, _repeated_outputs_codec);
      outputsSelectOne_.WriteTo(output, _repeated_outputsSelectOne_codec);
      outputsWeight_.WriteTo(output, _repeated_outputsWeight_codec);
      if (SpeedCost != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(SpeedCost);
      }
      if (WaitTime != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(WaitTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ConfigVersion != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ConfigVersion);
      }
      if (Id != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Id);
      }
      Tags_.WriteTo(ref output, _repeated_Tags_codec);
      if (Capacity != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Capacity);
      }
      if (EnergyCost != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(EnergyCost);
      }
      if (Frozen != false) {
        output.WriteRawTag(48);
        output.WriteBool(Frozen);
      }
      outputs_.WriteTo(ref output, _repeated_outputs_codec);
      outputsSelectOne_.WriteTo(ref output, _repeated_outputsSelectOne_codec);
      outputsWeight_.WriteTo(ref output, _repeated_outputsWeight_codec);
      if (SpeedCost != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(SpeedCost);
      }
      if (WaitTime != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(WaitTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ConfigVersion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ConfigVersion);
      }
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      size += Tags_.CalculateSize(_repeated_Tags_codec);
      if (Capacity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Capacity);
      }
      if (EnergyCost != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EnergyCost);
      }
      if (Frozen != false) {
        size += 1 + 1;
      }
      size += outputs_.CalculateSize(_repeated_outputs_codec);
      size += outputsSelectOne_.CalculateSize(_repeated_outputsSelectOne_codec);
      size += outputsWeight_.CalculateSize(_repeated_outputsWeight_codec);
      if (SpeedCost != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SpeedCost);
      }
      if (WaitTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WaitTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ComMergeChest other) {
      if (other == null) {
        return;
      }
      if (other.ConfigVersion != 0) {
        ConfigVersion = other.ConfigVersion;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      Tags_.Add(other.Tags_);
      if (other.Capacity != 0) {
        Capacity = other.Capacity;
      }
      if (other.EnergyCost != 0) {
        EnergyCost = other.EnergyCost;
      }
      if (other.Frozen != false) {
        Frozen = other.Frozen;
      }
      outputs_.Add(other.outputs_);
      outputsSelectOne_.Add(other.outputsSelectOne_);
      outputsWeight_.Add(other.outputsWeight_);
      if (other.SpeedCost != 0) {
        SpeedCost = other.SpeedCost;
      }
      if (other.WaitTime != 0) {
        WaitTime = other.WaitTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ConfigVersion = input.ReadInt32();
            break;
          }
          case 16: {
            Id = input.ReadInt32();
            break;
          }
          case 26: {
            Tags_.AddEntriesFrom(input, _repeated_Tags_codec);
            break;
          }
          case 32: {
            Capacity = input.ReadInt32();
            break;
          }
          case 40: {
            EnergyCost = input.ReadInt32();
            break;
          }
          case 48: {
            Frozen = input.ReadBool();
            break;
          }
          case 58:
          case 56: {
            outputs_.AddEntriesFrom(input, _repeated_outputs_codec);
            break;
          }
          case 66:
          case 64: {
            outputsSelectOne_.AddEntriesFrom(input, _repeated_outputsSelectOne_codec);
            break;
          }
          case 74:
          case 72: {
            outputsWeight_.AddEntriesFrom(input, _repeated_outputsWeight_codec);
            break;
          }
          case 80: {
            SpeedCost = input.ReadInt32();
            break;
          }
          case 88: {
            WaitTime = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ConfigVersion = input.ReadInt32();
            break;
          }
          case 16: {
            Id = input.ReadInt32();
            break;
          }
          case 26: {
            Tags_.AddEntriesFrom(ref input, _repeated_Tags_codec);
            break;
          }
          case 32: {
            Capacity = input.ReadInt32();
            break;
          }
          case 40: {
            EnergyCost = input.ReadInt32();
            break;
          }
          case 48: {
            Frozen = input.ReadBool();
            break;
          }
          case 58:
          case 56: {
            outputs_.AddEntriesFrom(ref input, _repeated_outputs_codec);
            break;
          }
          case 66:
          case 64: {
            outputsSelectOne_.AddEntriesFrom(ref input, _repeated_outputsSelectOne_codec);
            break;
          }
          case 74:
          case 72: {
            outputsWeight_.AddEntriesFrom(ref input, _repeated_outputsWeight_codec);
            break;
          }
          case 80: {
            SpeedCost = input.ReadInt32();
            break;
          }
          case 88: {
            WaitTime = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ComMergeChestMapABValue : pb::IMessage<ComMergeChestMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ComMergeChestMapABValue> _parser = new pb::MessageParser<ComMergeChestMapABValue>(() => new ComMergeChestMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ComMergeChestMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.ComMergeChestConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComMergeChestMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComMergeChestMapABValue(ComMergeChestMapABValue other) : this() {
      comMergeChestMap_ = other.comMergeChestMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComMergeChestMapABValue Clone() {
      return new ComMergeChestMapABValue(this);
    }

    /// <summary>Field number for the "ComMergeChestMap" field.</summary>
    public const int ComMergeChestMapFieldNumber = 1;
    private static readonly pbc::MapField<string, global::fat.rawdata.ComMergeChest>.Codec _map_comMergeChestMap_codec
        = new pbc::MapField<string, global::fat.rawdata.ComMergeChest>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ComMergeChest.Parser), 10);
    private readonly pbc::MapField<string, global::fat.rawdata.ComMergeChest> comMergeChestMap_ = new pbc::MapField<string, global::fat.rawdata.ComMergeChest>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.ComMergeChest> ComMergeChestMap {
      get { return comMergeChestMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ComMergeChestMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ComMergeChestMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!ComMergeChestMap.Equals(other.ComMergeChestMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ComMergeChestMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      comMergeChestMap_.WriteTo(output, _map_comMergeChestMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      comMergeChestMap_.WriteTo(ref output, _map_comMergeChestMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += comMergeChestMap_.CalculateSize(_map_comMergeChestMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ComMergeChestMapABValue other) {
      if (other == null) {
        return;
      }
      comMergeChestMap_.Add(other.comMergeChestMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            comMergeChestMap_.AddEntriesFrom(input, _map_comMergeChestMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            comMergeChestMap_.AddEntriesFrom(ref input, _map_comMergeChestMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ComMergeChestConf : pb::IMessage<ComMergeChestConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ComMergeChestConf> _parser = new pb::MessageParser<ComMergeChestConf>(() => new ComMergeChestConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ComMergeChestConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.ComMergeChestConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComMergeChestConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComMergeChestConf(ComMergeChestConf other) : this() {
      comMergeChestMap_ = other.comMergeChestMap_.Clone();
      comMergeChestMapAB_ = other.comMergeChestMapAB_.Clone();
      comMergeChestMapABPatch_ = other.comMergeChestMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComMergeChestConf Clone() {
      return new ComMergeChestConf(this);
    }

    /// <summary>Field number for the "ComMergeChestMap" field.</summary>
    public const int ComMergeChestMapFieldNumber = 1;
    private static readonly pbc::MapField<string, global::fat.rawdata.ComMergeChest>.Codec _map_comMergeChestMap_codec
        = new pbc::MapField<string, global::fat.rawdata.ComMergeChest>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ComMergeChest.Parser), 10);
    private readonly pbc::MapField<string, global::fat.rawdata.ComMergeChest> comMergeChestMap_ = new pbc::MapField<string, global::fat.rawdata.ComMergeChest>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.ComMergeChest> ComMergeChestMap {
      get { return comMergeChestMap_; }
    }

    /// <summary>Field number for the "ComMergeChestMapAB" field.</summary>
    public const int ComMergeChestMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.ComMergeChestMapABValue>.Codec _map_comMergeChestMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.ComMergeChestMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ComMergeChestMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.ComMergeChestMapABValue> comMergeChestMapAB_ = new pbc::MapField<string, global::fat.rawdata.ComMergeChestMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.ComMergeChestMapABValue> ComMergeChestMapAB {
      get { return comMergeChestMapAB_; }
    }

    /// <summary>Field number for the "ComMergeChestMapABPatch" field.</summary>
    public const int ComMergeChestMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.ComMergeChestMapABValue>.Codec _map_comMergeChestMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.ComMergeChestMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ComMergeChestMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.ComMergeChestMapABValue> comMergeChestMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.ComMergeChestMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.ComMergeChestMapABValue> ComMergeChestMapABPatch {
      get { return comMergeChestMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ComMergeChestConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ComMergeChestConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!ComMergeChestMap.Equals(other.ComMergeChestMap)) return false;
      if (!ComMergeChestMapAB.Equals(other.ComMergeChestMapAB)) return false;
      if (!ComMergeChestMapABPatch.Equals(other.ComMergeChestMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ComMergeChestMap.GetHashCode();
      hash ^= ComMergeChestMapAB.GetHashCode();
      hash ^= ComMergeChestMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      comMergeChestMap_.WriteTo(output, _map_comMergeChestMap_codec);
      comMergeChestMapAB_.WriteTo(output, _map_comMergeChestMapAB_codec);
      comMergeChestMapABPatch_.WriteTo(output, _map_comMergeChestMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      comMergeChestMap_.WriteTo(ref output, _map_comMergeChestMap_codec);
      comMergeChestMapAB_.WriteTo(ref output, _map_comMergeChestMapAB_codec);
      comMergeChestMapABPatch_.WriteTo(ref output, _map_comMergeChestMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += comMergeChestMap_.CalculateSize(_map_comMergeChestMap_codec);
      size += comMergeChestMapAB_.CalculateSize(_map_comMergeChestMapAB_codec);
      size += comMergeChestMapABPatch_.CalculateSize(_map_comMergeChestMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ComMergeChestConf other) {
      if (other == null) {
        return;
      }
      comMergeChestMap_.Add(other.comMergeChestMap_);
      comMergeChestMapAB_.Add(other.comMergeChestMapAB_);
      comMergeChestMapABPatch_.Add(other.comMergeChestMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            comMergeChestMap_.AddEntriesFrom(input, _map_comMergeChestMap_codec);
            break;
          }
          case 18: {
            comMergeChestMapAB_.AddEntriesFrom(input, _map_comMergeChestMapAB_codec);
            break;
          }
          case 26: {
            comMergeChestMapABPatch_.AddEntriesFrom(input, _map_comMergeChestMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            comMergeChestMap_.AddEntriesFrom(ref input, _map_comMergeChestMap_codec);
            break;
          }
          case 18: {
            comMergeChestMapAB_.AddEntriesFrom(ref input, _map_comMergeChestMapAB_codec);
            break;
          }
          case 26: {
            comMergeChestMapABPatch_.AddEntriesFrom(ref input, _map_comMergeChestMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
