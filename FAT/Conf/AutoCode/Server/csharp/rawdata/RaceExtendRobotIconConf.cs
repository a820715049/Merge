// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/RaceExtendRobotIconConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/RaceExtendRobotIconConf.proto</summary>
  public static partial class RaceExtendRobotIconConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/RaceExtendRobotIconConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RaceExtendRobotIconConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiVyYXdkYXRhL1JhY2VFeHRlbmRSb2JvdEljb25Db25mLnByb3RvEgdyYXdk",
            "YXRhIi8KE1JhY2VFeHRlbmRSb2JvdEljb24SCgoCaWQYASABKAUSDAoEaWNv",
            "bhgCIAEoCSLgAQodUmFjZUV4dGVuZFJvYm90SWNvbk1hcEFCVmFsdWUSYgoW",
            "UmFjZUV4dGVuZFJvYm90SWNvbk1hcBgBIAMoCzJCLnJhd2RhdGEuUmFjZUV4",
            "dGVuZFJvYm90SWNvbk1hcEFCVmFsdWUuUmFjZUV4dGVuZFJvYm90SWNvbk1h",
            "cEVudHJ5GlsKG1JhY2VFeHRlbmRSb2JvdEljb25NYXBFbnRyeRILCgNrZXkY",
            "ASABKAUSKwoFdmFsdWUYAiABKAsyHC5yYXdkYXRhLlJhY2VFeHRlbmRSb2Jv",
            "dEljb246AjgBIvkEChdSYWNlRXh0ZW5kUm9ib3RJY29uQ29uZhJcChZSYWNl",
            "RXh0ZW5kUm9ib3RJY29uTWFwGAEgAygLMjwucmF3ZGF0YS5SYWNlRXh0ZW5k",
            "Um9ib3RJY29uQ29uZi5SYWNlRXh0ZW5kUm9ib3RJY29uTWFwRW50cnkSYAoY",
            "UmFjZUV4dGVuZFJvYm90SWNvbk1hcEFCGAIgAygLMj4ucmF3ZGF0YS5SYWNl",
            "RXh0ZW5kUm9ib3RJY29uQ29uZi5SYWNlRXh0ZW5kUm9ib3RJY29uTWFwQUJF",
            "bnRyeRJqCh1SYWNlRXh0ZW5kUm9ib3RJY29uTWFwQUJQYXRjaBgDIAMoCzJD",
            "LnJhd2RhdGEuUmFjZUV4dGVuZFJvYm90SWNvbkNvbmYuUmFjZUV4dGVuZFJv",
            "Ym90SWNvbk1hcEFCUGF0Y2hFbnRyeRpbChtSYWNlRXh0ZW5kUm9ib3RJY29u",
            "TWFwRW50cnkSCwoDa2V5GAEgASgFEisKBXZhbHVlGAIgASgLMhwucmF3ZGF0",
            "YS5SYWNlRXh0ZW5kUm9ib3RJY29uOgI4ARpnCh1SYWNlRXh0ZW5kUm9ib3RJ",
            "Y29uTWFwQUJFbnRyeRILCgNrZXkYASABKAkSNQoFdmFsdWUYAiABKAsyJi5y",
            "YXdkYXRhLlJhY2VFeHRlbmRSb2JvdEljb25NYXBBQlZhbHVlOgI4ARpsCiJS",
            "YWNlRXh0ZW5kUm9ib3RJY29uTWFwQUJQYXRjaEVudHJ5EgsKA2tleRgBIAEo",
            "CRI1CgV2YWx1ZRgCIAEoCzImLnJhd2RhdGEuUmFjZUV4dGVuZFJvYm90SWNv",
            "bk1hcEFCVmFsdWU6AjgBQj1aLWdpdGxhYi5mdW5wbHVzLmlvL2ZhdC9jb25m",
            "L2dlbi9nb2xhbmcvcmF3ZGF0YaoCC2ZhdC5yYXdkYXRhYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.RaceExtendRobotIcon), global::fat.rawdata.RaceExtendRobotIcon.Parser, new[]{ "Id", "Icon" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.RaceExtendRobotIconMapABValue), global::fat.rawdata.RaceExtendRobotIconMapABValue.Parser, new[]{ "RaceExtendRobotIconMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.RaceExtendRobotIconConf), global::fat.rawdata.RaceExtendRobotIconConf.Parser, new[]{ "RaceExtendRobotIconMap", "RaceExtendRobotIconMapAB", "RaceExtendRobotIconMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="RaceExtendRobotIcon",table="RaceExtendRobotIconMap",table_wrapper="RaceExtendRobotIconConf",map="true",map_key_type="int32",data="RaceExtendRobotIconConf")
  /// annotation@ab(table_ab="RaceExtendRobotIconMapAB",table_ab_patch="RaceExtendRobotIconMapABPatch",table_ab_value="RaceExtendRobotIconMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@RaceExtendRobotIcon(id="id")
  /// </summary>
  public sealed partial class RaceExtendRobotIcon : pb::IMessage<RaceExtendRobotIcon>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RaceExtendRobotIcon> _parser = new pb::MessageParser<RaceExtendRobotIcon>(() => new RaceExtendRobotIcon());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RaceExtendRobotIcon> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.RaceExtendRobotIconConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RaceExtendRobotIcon() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RaceExtendRobotIcon(RaceExtendRobotIcon other) : this() {
      id_ = other.id_;
      icon_ = other.icon_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RaceExtendRobotIcon Clone() {
      return new RaceExtendRobotIcon(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "icon" field.</summary>
    public const int IconFieldNumber = 2;
    private string icon_ = "";
    /// <summary>
    /// 小图标
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Icon {
      get { return icon_; }
      set {
        icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RaceExtendRobotIcon);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RaceExtendRobotIcon other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Icon != other.Icon) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Icon.Length != 0) hash ^= Icon.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Icon.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Icon);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Icon.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Icon);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Icon.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Icon);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RaceExtendRobotIcon other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Icon.Length != 0) {
        Icon = other.Icon;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Icon = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Icon = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RaceExtendRobotIconMapABValue : pb::IMessage<RaceExtendRobotIconMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RaceExtendRobotIconMapABValue> _parser = new pb::MessageParser<RaceExtendRobotIconMapABValue>(() => new RaceExtendRobotIconMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RaceExtendRobotIconMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.RaceExtendRobotIconConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RaceExtendRobotIconMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RaceExtendRobotIconMapABValue(RaceExtendRobotIconMapABValue other) : this() {
      raceExtendRobotIconMap_ = other.raceExtendRobotIconMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RaceExtendRobotIconMapABValue Clone() {
      return new RaceExtendRobotIconMapABValue(this);
    }

    /// <summary>Field number for the "RaceExtendRobotIconMap" field.</summary>
    public const int RaceExtendRobotIconMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.RaceExtendRobotIcon>.Codec _map_raceExtendRobotIconMap_codec
        = new pbc::MapField<int, global::fat.rawdata.RaceExtendRobotIcon>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.RaceExtendRobotIcon.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.RaceExtendRobotIcon> raceExtendRobotIconMap_ = new pbc::MapField<int, global::fat.rawdata.RaceExtendRobotIcon>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.RaceExtendRobotIcon> RaceExtendRobotIconMap {
      get { return raceExtendRobotIconMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RaceExtendRobotIconMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RaceExtendRobotIconMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!RaceExtendRobotIconMap.Equals(other.RaceExtendRobotIconMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= RaceExtendRobotIconMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      raceExtendRobotIconMap_.WriteTo(output, _map_raceExtendRobotIconMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      raceExtendRobotIconMap_.WriteTo(ref output, _map_raceExtendRobotIconMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += raceExtendRobotIconMap_.CalculateSize(_map_raceExtendRobotIconMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RaceExtendRobotIconMapABValue other) {
      if (other == null) {
        return;
      }
      raceExtendRobotIconMap_.Add(other.raceExtendRobotIconMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            raceExtendRobotIconMap_.AddEntriesFrom(input, _map_raceExtendRobotIconMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            raceExtendRobotIconMap_.AddEntriesFrom(ref input, _map_raceExtendRobotIconMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RaceExtendRobotIconConf : pb::IMessage<RaceExtendRobotIconConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RaceExtendRobotIconConf> _parser = new pb::MessageParser<RaceExtendRobotIconConf>(() => new RaceExtendRobotIconConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RaceExtendRobotIconConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.RaceExtendRobotIconConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RaceExtendRobotIconConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RaceExtendRobotIconConf(RaceExtendRobotIconConf other) : this() {
      raceExtendRobotIconMap_ = other.raceExtendRobotIconMap_.Clone();
      raceExtendRobotIconMapAB_ = other.raceExtendRobotIconMapAB_.Clone();
      raceExtendRobotIconMapABPatch_ = other.raceExtendRobotIconMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RaceExtendRobotIconConf Clone() {
      return new RaceExtendRobotIconConf(this);
    }

    /// <summary>Field number for the "RaceExtendRobotIconMap" field.</summary>
    public const int RaceExtendRobotIconMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.RaceExtendRobotIcon>.Codec _map_raceExtendRobotIconMap_codec
        = new pbc::MapField<int, global::fat.rawdata.RaceExtendRobotIcon>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.RaceExtendRobotIcon.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.RaceExtendRobotIcon> raceExtendRobotIconMap_ = new pbc::MapField<int, global::fat.rawdata.RaceExtendRobotIcon>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.RaceExtendRobotIcon> RaceExtendRobotIconMap {
      get { return raceExtendRobotIconMap_; }
    }

    /// <summary>Field number for the "RaceExtendRobotIconMapAB" field.</summary>
    public const int RaceExtendRobotIconMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.RaceExtendRobotIconMapABValue>.Codec _map_raceExtendRobotIconMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.RaceExtendRobotIconMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.RaceExtendRobotIconMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.RaceExtendRobotIconMapABValue> raceExtendRobotIconMapAB_ = new pbc::MapField<string, global::fat.rawdata.RaceExtendRobotIconMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.RaceExtendRobotIconMapABValue> RaceExtendRobotIconMapAB {
      get { return raceExtendRobotIconMapAB_; }
    }

    /// <summary>Field number for the "RaceExtendRobotIconMapABPatch" field.</summary>
    public const int RaceExtendRobotIconMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.RaceExtendRobotIconMapABValue>.Codec _map_raceExtendRobotIconMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.RaceExtendRobotIconMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.RaceExtendRobotIconMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.RaceExtendRobotIconMapABValue> raceExtendRobotIconMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.RaceExtendRobotIconMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.RaceExtendRobotIconMapABValue> RaceExtendRobotIconMapABPatch {
      get { return raceExtendRobotIconMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RaceExtendRobotIconConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RaceExtendRobotIconConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!RaceExtendRobotIconMap.Equals(other.RaceExtendRobotIconMap)) return false;
      if (!RaceExtendRobotIconMapAB.Equals(other.RaceExtendRobotIconMapAB)) return false;
      if (!RaceExtendRobotIconMapABPatch.Equals(other.RaceExtendRobotIconMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= RaceExtendRobotIconMap.GetHashCode();
      hash ^= RaceExtendRobotIconMapAB.GetHashCode();
      hash ^= RaceExtendRobotIconMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      raceExtendRobotIconMap_.WriteTo(output, _map_raceExtendRobotIconMap_codec);
      raceExtendRobotIconMapAB_.WriteTo(output, _map_raceExtendRobotIconMapAB_codec);
      raceExtendRobotIconMapABPatch_.WriteTo(output, _map_raceExtendRobotIconMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      raceExtendRobotIconMap_.WriteTo(ref output, _map_raceExtendRobotIconMap_codec);
      raceExtendRobotIconMapAB_.WriteTo(ref output, _map_raceExtendRobotIconMapAB_codec);
      raceExtendRobotIconMapABPatch_.WriteTo(ref output, _map_raceExtendRobotIconMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += raceExtendRobotIconMap_.CalculateSize(_map_raceExtendRobotIconMap_codec);
      size += raceExtendRobotIconMapAB_.CalculateSize(_map_raceExtendRobotIconMapAB_codec);
      size += raceExtendRobotIconMapABPatch_.CalculateSize(_map_raceExtendRobotIconMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RaceExtendRobotIconConf other) {
      if (other == null) {
        return;
      }
      raceExtendRobotIconMap_.Add(other.raceExtendRobotIconMap_);
      raceExtendRobotIconMapAB_.Add(other.raceExtendRobotIconMapAB_);
      raceExtendRobotIconMapABPatch_.Add(other.raceExtendRobotIconMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            raceExtendRobotIconMap_.AddEntriesFrom(input, _map_raceExtendRobotIconMap_codec);
            break;
          }
          case 18: {
            raceExtendRobotIconMapAB_.AddEntriesFrom(input, _map_raceExtendRobotIconMapAB_codec);
            break;
          }
          case 26: {
            raceExtendRobotIconMapABPatch_.AddEntriesFrom(input, _map_raceExtendRobotIconMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            raceExtendRobotIconMap_.AddEntriesFrom(ref input, _map_raceExtendRobotIconMap_codec);
            break;
          }
          case 18: {
            raceExtendRobotIconMapAB_.AddEntriesFrom(ref input, _map_raceExtendRobotIconMapAB_codec);
            break;
          }
          case 26: {
            raceExtendRobotIconMapABPatch_.AddEntriesFrom(ref input, _map_raceExtendRobotIconMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
