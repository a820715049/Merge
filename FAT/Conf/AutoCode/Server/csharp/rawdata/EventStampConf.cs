// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventStampConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventStampConf.proto</summary>
  public static partial class EventStampConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventStampConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventStampConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChxyYXdkYXRhL0V2ZW50U3RhbXBDb25mLnByb3RvEgdyYXdkYXRhIlwKCkV2",
            "ZW50U3RhbXASCgoCaWQYASABKAUSFgoOaW5jbHVkZVJvdW5kSWQYDCADKAUS",
            "FgoObmV4dFJvdW5kVGhlbWUYDSABKAUSEgoKc3RhbXBUaGVtZRgJIAEoBSKq",
            "AQoURXZlbnRTdGFtcE1hcEFCVmFsdWUSRwoNRXZlbnRTdGFtcE1hcBgBIAMo",
            "CzIwLnJhd2RhdGEuRXZlbnRTdGFtcE1hcEFCVmFsdWUuRXZlbnRTdGFtcE1h",
            "cEVudHJ5GkkKEkV2ZW50U3RhbXBNYXBFbnRyeRILCgNrZXkYASABKAUSIgoF",
            "dmFsdWUYAiABKAsyEy5yYXdkYXRhLkV2ZW50U3RhbXA6AjgBIukDCg5FdmVu",
            "dFN0YW1wQ29uZhJBCg1FdmVudFN0YW1wTWFwGAEgAygLMioucmF3ZGF0YS5F",
            "dmVudFN0YW1wQ29uZi5FdmVudFN0YW1wTWFwRW50cnkSRQoPRXZlbnRTdGFt",
            "cE1hcEFCGAIgAygLMiwucmF3ZGF0YS5FdmVudFN0YW1wQ29uZi5FdmVudFN0",
            "YW1wTWFwQUJFbnRyeRJPChRFdmVudFN0YW1wTWFwQUJQYXRjaBgDIAMoCzIx",
            "LnJhd2RhdGEuRXZlbnRTdGFtcENvbmYuRXZlbnRTdGFtcE1hcEFCUGF0Y2hF",
            "bnRyeRpJChJFdmVudFN0YW1wTWFwRW50cnkSCwoDa2V5GAEgASgFEiIKBXZh",
            "bHVlGAIgASgLMhMucmF3ZGF0YS5FdmVudFN0YW1wOgI4ARpVChRFdmVudFN0",
            "YW1wTWFwQUJFbnRyeRILCgNrZXkYASABKAkSLAoFdmFsdWUYAiABKAsyHS5y",
            "YXdkYXRhLkV2ZW50U3RhbXBNYXBBQlZhbHVlOgI4ARpaChlFdmVudFN0YW1w",
            "TWFwQUJQYXRjaEVudHJ5EgsKA2tleRgBIAEoCRIsCgV2YWx1ZRgCIAEoCzId",
            "LnJhd2RhdGEuRXZlbnRTdGFtcE1hcEFCVmFsdWU6AjgBQj1aLWdpdGxhYi5m",
            "dW5wbHVzLmlvL2ZhdC9jb25mL2dlbi9nb2xhbmcvcmF3ZGF0YaoCC2ZhdC5y",
            "YXdkYXRhYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventStamp), global::fat.rawdata.EventStamp.Parser, new[]{ "Id", "IncludeRoundId", "NextRoundTheme", "StampTheme" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventStampMapABValue), global::fat.rawdata.EventStampMapABValue.Parser, new[]{ "EventStampMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventStampConf), global::fat.rawdata.EventStampConf.Parser, new[]{ "EventStampMap", "EventStampMapAB", "EventStampMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventStamp",table="EventStampMap",table_wrapper="EventStampConf",map="true",map_key_type="int32",data="EventStampConf")
  /// annotation@ab(table_ab="EventStampMapAB",table_ab_patch="EventStampMapABPatch",table_ab_value="EventStampMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventStamp(id="id")
  /// </summary>
  public sealed partial class EventStamp : pb::IMessage<EventStamp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventStamp> _parser = new pb::MessageParser<EventStamp>(() => new EventStamp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventStamp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventStampConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventStamp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventStamp(EventStamp other) : this() {
      id_ = other.id_;
      includeRoundId_ = other.includeRoundId_.Clone();
      nextRoundTheme_ = other.nextRoundTheme_;
      stampTheme_ = other.stampTheme_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventStamp Clone() {
      return new EventStamp(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 活动ID
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "includeRoundId" field.</summary>
    public const int IncludeRoundIdFieldNumber = 12;
    private static readonly pb::FieldCodec<int> _repeated_includeRoundId_codec
        = pb::FieldCodec.ForInt32(98);
    private readonly pbc::RepeatedField<int> includeRoundId_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 印章活动模版内容
    /// （EventStampRound.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> IncludeRoundId {
      get { return includeRoundId_; }
    }

    /// <summary>Field number for the "nextRoundTheme" field.</summary>
    public const int NextRoundThemeFieldNumber = 13;
    private int nextRoundTheme_;
    /// <summary>
    /// 新一轮活动主界面
    /// （EventTheme.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NextRoundTheme {
      get { return nextRoundTheme_; }
      set {
        nextRoundTheme_ = value;
      }
    }

    /// <summary>Field number for the "stampTheme" field.</summary>
    public const int StampThemeFieldNumber = 9;
    private int stampTheme_;
    /// <summary>
    /// 活动主界面
    /// （EventTheme.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StampTheme {
      get { return stampTheme_; }
      set {
        stampTheme_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventStamp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventStamp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!includeRoundId_.Equals(other.includeRoundId_)) return false;
      if (NextRoundTheme != other.NextRoundTheme) return false;
      if (StampTheme != other.StampTheme) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      hash ^= includeRoundId_.GetHashCode();
      if (NextRoundTheme != 0) hash ^= NextRoundTheme.GetHashCode();
      if (StampTheme != 0) hash ^= StampTheme.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (StampTheme != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(StampTheme);
      }
      includeRoundId_.WriteTo(output, _repeated_includeRoundId_codec);
      if (NextRoundTheme != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(NextRoundTheme);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (StampTheme != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(StampTheme);
      }
      includeRoundId_.WriteTo(ref output, _repeated_includeRoundId_codec);
      if (NextRoundTheme != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(NextRoundTheme);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      size += includeRoundId_.CalculateSize(_repeated_includeRoundId_codec);
      if (NextRoundTheme != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NextRoundTheme);
      }
      if (StampTheme != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StampTheme);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventStamp other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      includeRoundId_.Add(other.includeRoundId_);
      if (other.NextRoundTheme != 0) {
        NextRoundTheme = other.NextRoundTheme;
      }
      if (other.StampTheme != 0) {
        StampTheme = other.StampTheme;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 72: {
            StampTheme = input.ReadInt32();
            break;
          }
          case 98:
          case 96: {
            includeRoundId_.AddEntriesFrom(input, _repeated_includeRoundId_codec);
            break;
          }
          case 104: {
            NextRoundTheme = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 72: {
            StampTheme = input.ReadInt32();
            break;
          }
          case 98:
          case 96: {
            includeRoundId_.AddEntriesFrom(ref input, _repeated_includeRoundId_codec);
            break;
          }
          case 104: {
            NextRoundTheme = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventStampMapABValue : pb::IMessage<EventStampMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventStampMapABValue> _parser = new pb::MessageParser<EventStampMapABValue>(() => new EventStampMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventStampMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventStampConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventStampMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventStampMapABValue(EventStampMapABValue other) : this() {
      eventStampMap_ = other.eventStampMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventStampMapABValue Clone() {
      return new EventStampMapABValue(this);
    }

    /// <summary>Field number for the "EventStampMap" field.</summary>
    public const int EventStampMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventStamp>.Codec _map_eventStampMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventStamp>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventStamp.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventStamp> eventStampMap_ = new pbc::MapField<int, global::fat.rawdata.EventStamp>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventStamp> EventStampMap {
      get { return eventStampMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventStampMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventStampMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventStampMap.Equals(other.EventStampMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventStampMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventStampMap_.WriteTo(output, _map_eventStampMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventStampMap_.WriteTo(ref output, _map_eventStampMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventStampMap_.CalculateSize(_map_eventStampMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventStampMapABValue other) {
      if (other == null) {
        return;
      }
      eventStampMap_.Add(other.eventStampMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventStampMap_.AddEntriesFrom(input, _map_eventStampMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventStampMap_.AddEntriesFrom(ref input, _map_eventStampMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventStampConf : pb::IMessage<EventStampConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventStampConf> _parser = new pb::MessageParser<EventStampConf>(() => new EventStampConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventStampConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventStampConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventStampConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventStampConf(EventStampConf other) : this() {
      eventStampMap_ = other.eventStampMap_.Clone();
      eventStampMapAB_ = other.eventStampMapAB_.Clone();
      eventStampMapABPatch_ = other.eventStampMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventStampConf Clone() {
      return new EventStampConf(this);
    }

    /// <summary>Field number for the "EventStampMap" field.</summary>
    public const int EventStampMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventStamp>.Codec _map_eventStampMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventStamp>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventStamp.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventStamp> eventStampMap_ = new pbc::MapField<int, global::fat.rawdata.EventStamp>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventStamp> EventStampMap {
      get { return eventStampMap_; }
    }

    /// <summary>Field number for the "EventStampMapAB" field.</summary>
    public const int EventStampMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventStampMapABValue>.Codec _map_eventStampMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventStampMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventStampMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventStampMapABValue> eventStampMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventStampMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventStampMapABValue> EventStampMapAB {
      get { return eventStampMapAB_; }
    }

    /// <summary>Field number for the "EventStampMapABPatch" field.</summary>
    public const int EventStampMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventStampMapABValue>.Codec _map_eventStampMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventStampMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventStampMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventStampMapABValue> eventStampMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventStampMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventStampMapABValue> EventStampMapABPatch {
      get { return eventStampMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventStampConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventStampConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventStampMap.Equals(other.EventStampMap)) return false;
      if (!EventStampMapAB.Equals(other.EventStampMapAB)) return false;
      if (!EventStampMapABPatch.Equals(other.EventStampMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventStampMap.GetHashCode();
      hash ^= EventStampMapAB.GetHashCode();
      hash ^= EventStampMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventStampMap_.WriteTo(output, _map_eventStampMap_codec);
      eventStampMapAB_.WriteTo(output, _map_eventStampMapAB_codec);
      eventStampMapABPatch_.WriteTo(output, _map_eventStampMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventStampMap_.WriteTo(ref output, _map_eventStampMap_codec);
      eventStampMapAB_.WriteTo(ref output, _map_eventStampMapAB_codec);
      eventStampMapABPatch_.WriteTo(ref output, _map_eventStampMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventStampMap_.CalculateSize(_map_eventStampMap_codec);
      size += eventStampMapAB_.CalculateSize(_map_eventStampMapAB_codec);
      size += eventStampMapABPatch_.CalculateSize(_map_eventStampMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventStampConf other) {
      if (other == null) {
        return;
      }
      eventStampMap_.Add(other.eventStampMap_);
      eventStampMapAB_.Add(other.eventStampMapAB_);
      eventStampMapABPatch_.Add(other.eventStampMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventStampMap_.AddEntriesFrom(input, _map_eventStampMap_codec);
            break;
          }
          case 18: {
            eventStampMapAB_.AddEntriesFrom(input, _map_eventStampMapAB_codec);
            break;
          }
          case 26: {
            eventStampMapABPatch_.AddEntriesFrom(input, _map_eventStampMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventStampMap_.AddEntriesFrom(ref input, _map_eventStampMap_codec);
            break;
          }
          case 18: {
            eventStampMapAB_.AddEntriesFrom(ref input, _map_eventStampMapAB_codec);
            break;
          }
          case 26: {
            eventStampMapABPatch_.AddEntriesFrom(ref input, _map_eventStampMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
