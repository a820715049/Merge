// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventVineLeapGroupConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventVineLeapGroupConf.proto</summary>
  public static partial class EventVineLeapGroupConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventVineLeapGroupConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventVineLeapGroupConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiRyYXdkYXRhL0V2ZW50VmluZUxlYXBHcm91cENvbmYucHJvdG8SB3Jhd2Rh",
            "dGEibAoSRXZlbnRWaW5lTGVhcEdyb3VwEgoKAmlkGAEgASgFEgwKBGRpZmYY",
            "AiABKAUSEgoKZXh0cmFTY29yZRgDIAEoBRIPCgdsZXZlbElkGAQgAygFEhcK",
            "D21pbGVzdG9uZVJld2FyZBgFIAMoBSLaAQocRXZlbnRWaW5lTGVhcEdyb3Vw",
            "TWFwQUJWYWx1ZRJfChVFdmVudFZpbmVMZWFwR3JvdXBNYXAYASADKAsyQC5y",
            "YXdkYXRhLkV2ZW50VmluZUxlYXBHcm91cE1hcEFCVmFsdWUuRXZlbnRWaW5l",
            "TGVhcEdyb3VwTWFwRW50cnkaWQoaRXZlbnRWaW5lTGVhcEdyb3VwTWFwRW50",
            "cnkSCwoDa2V5GAEgASgFEioKBXZhbHVlGAIgASgLMhsucmF3ZGF0YS5FdmVu",
            "dFZpbmVMZWFwR3JvdXA6AjgBIukEChZFdmVudFZpbmVMZWFwR3JvdXBDb25m",
            "ElkKFUV2ZW50VmluZUxlYXBHcm91cE1hcBgBIAMoCzI6LnJhd2RhdGEuRXZl",
            "bnRWaW5lTGVhcEdyb3VwQ29uZi5FdmVudFZpbmVMZWFwR3JvdXBNYXBFbnRy",
            "eRJdChdFdmVudFZpbmVMZWFwR3JvdXBNYXBBQhgCIAMoCzI8LnJhd2RhdGEu",
            "RXZlbnRWaW5lTGVhcEdyb3VwQ29uZi5FdmVudFZpbmVMZWFwR3JvdXBNYXBB",
            "QkVudHJ5EmcKHEV2ZW50VmluZUxlYXBHcm91cE1hcEFCUGF0Y2gYAyADKAsy",
            "QS5yYXdkYXRhLkV2ZW50VmluZUxlYXBHcm91cENvbmYuRXZlbnRWaW5lTGVh",
            "cEdyb3VwTWFwQUJQYXRjaEVudHJ5GlkKGkV2ZW50VmluZUxlYXBHcm91cE1h",
            "cEVudHJ5EgsKA2tleRgBIAEoBRIqCgV2YWx1ZRgCIAEoCzIbLnJhd2RhdGEu",
            "RXZlbnRWaW5lTGVhcEdyb3VwOgI4ARplChxFdmVudFZpbmVMZWFwR3JvdXBN",
            "YXBBQkVudHJ5EgsKA2tleRgBIAEoCRI0CgV2YWx1ZRgCIAEoCzIlLnJhd2Rh",
            "dGEuRXZlbnRWaW5lTGVhcEdyb3VwTWFwQUJWYWx1ZToCOAEaagohRXZlbnRW",
            "aW5lTGVhcEdyb3VwTWFwQUJQYXRjaEVudHJ5EgsKA2tleRgBIAEoCRI0CgV2",
            "YWx1ZRgCIAEoCzIlLnJhd2RhdGEuRXZlbnRWaW5lTGVhcEdyb3VwTWFwQUJW",
            "YWx1ZToCOAFCPVotZ2l0bGFiLmZ1bnBsdXMuaW8vZmF0L2NvbmYvZ2VuL2dv",
            "bGFuZy9yYXdkYXRhqgILZmF0LnJhd2RhdGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventVineLeapGroup), global::fat.rawdata.EventVineLeapGroup.Parser, new[]{ "Id", "Diff", "ExtraScore", "LevelId", "MilestoneReward" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventVineLeapGroupMapABValue), global::fat.rawdata.EventVineLeapGroupMapABValue.Parser, new[]{ "EventVineLeapGroupMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventVineLeapGroupConf), global::fat.rawdata.EventVineLeapGroupConf.Parser, new[]{ "EventVineLeapGroupMap", "EventVineLeapGroupMapAB", "EventVineLeapGroupMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventVineLeapGroup",table="EventVineLeapGroupMap",table_wrapper="EventVineLeapGroupConf",map="true",map_key_type="int32",data="EventVineLeapGroupConf")
  /// annotation@ab(table_ab="EventVineLeapGroupMapAB",table_ab_patch="EventVineLeapGroupMapABPatch",table_ab_value="EventVineLeapGroupMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventVineLeapGroup(id="id")
  /// </summary>
  public sealed partial class EventVineLeapGroup : pb::IMessage<EventVineLeapGroup>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventVineLeapGroup> _parser = new pb::MessageParser<EventVineLeapGroup>(() => new EventVineLeapGroup());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventVineLeapGroup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventVineLeapGroupConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventVineLeapGroup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventVineLeapGroup(EventVineLeapGroup other) : this() {
      id_ = other.id_;
      diff_ = other.diff_;
      extraScore_ = other.extraScore_;
      levelId_ = other.levelId_.Clone();
      milestoneReward_ = other.milestoneReward_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventVineLeapGroup Clone() {
      return new EventVineLeapGroup(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// id
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "diff" field.</summary>
    public const int DiffFieldNumber = 2;
    private int diff_;
    /// <summary>
    /// tga
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Diff {
      get { return diff_; }
      set {
        diff_ = value;
      }
    }

    /// <summary>Field number for the "extraScore" field.</summary>
    public const int ExtraScoreFieldNumber = 3;
    private int extraScore_;
    /// <summary>
    /// 额外积分模板
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ExtraScore {
      get { return extraScore_; }
      set {
        extraScore_ = value;
      }
    }

    /// <summary>Field number for the "levelId" field.</summary>
    public const int LevelIdFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_levelId_codec
        = pb::FieldCodec.ForInt32(34);
    private readonly pbc::RepeatedField<int> levelId_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 关卡组 id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> LevelId {
      get { return levelId_; }
    }

    /// <summary>Field number for the "milestoneReward" field.</summary>
    public const int MilestoneRewardFieldNumber = 5;
    private static readonly pb::FieldCodec<int> _repeated_milestoneReward_codec
        = pb::FieldCodec.ForInt32(42);
    private readonly pbc::RepeatedField<int> milestoneReward_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 奖励id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> MilestoneReward {
      get { return milestoneReward_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventVineLeapGroup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventVineLeapGroup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Diff != other.Diff) return false;
      if (ExtraScore != other.ExtraScore) return false;
      if(!levelId_.Equals(other.levelId_)) return false;
      if(!milestoneReward_.Equals(other.milestoneReward_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Diff != 0) hash ^= Diff.GetHashCode();
      if (ExtraScore != 0) hash ^= ExtraScore.GetHashCode();
      hash ^= levelId_.GetHashCode();
      hash ^= milestoneReward_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Diff != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Diff);
      }
      if (ExtraScore != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ExtraScore);
      }
      levelId_.WriteTo(output, _repeated_levelId_codec);
      milestoneReward_.WriteTo(output, _repeated_milestoneReward_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Diff != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Diff);
      }
      if (ExtraScore != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ExtraScore);
      }
      levelId_.WriteTo(ref output, _repeated_levelId_codec);
      milestoneReward_.WriteTo(ref output, _repeated_milestoneReward_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Diff != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Diff);
      }
      if (ExtraScore != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ExtraScore);
      }
      size += levelId_.CalculateSize(_repeated_levelId_codec);
      size += milestoneReward_.CalculateSize(_repeated_milestoneReward_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventVineLeapGroup other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Diff != 0) {
        Diff = other.Diff;
      }
      if (other.ExtraScore != 0) {
        ExtraScore = other.ExtraScore;
      }
      levelId_.Add(other.levelId_);
      milestoneReward_.Add(other.milestoneReward_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Diff = input.ReadInt32();
            break;
          }
          case 24: {
            ExtraScore = input.ReadInt32();
            break;
          }
          case 34:
          case 32: {
            levelId_.AddEntriesFrom(input, _repeated_levelId_codec);
            break;
          }
          case 42:
          case 40: {
            milestoneReward_.AddEntriesFrom(input, _repeated_milestoneReward_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Diff = input.ReadInt32();
            break;
          }
          case 24: {
            ExtraScore = input.ReadInt32();
            break;
          }
          case 34:
          case 32: {
            levelId_.AddEntriesFrom(ref input, _repeated_levelId_codec);
            break;
          }
          case 42:
          case 40: {
            milestoneReward_.AddEntriesFrom(ref input, _repeated_milestoneReward_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventVineLeapGroupMapABValue : pb::IMessage<EventVineLeapGroupMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventVineLeapGroupMapABValue> _parser = new pb::MessageParser<EventVineLeapGroupMapABValue>(() => new EventVineLeapGroupMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventVineLeapGroupMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventVineLeapGroupConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventVineLeapGroupMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventVineLeapGroupMapABValue(EventVineLeapGroupMapABValue other) : this() {
      eventVineLeapGroupMap_ = other.eventVineLeapGroupMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventVineLeapGroupMapABValue Clone() {
      return new EventVineLeapGroupMapABValue(this);
    }

    /// <summary>Field number for the "EventVineLeapGroupMap" field.</summary>
    public const int EventVineLeapGroupMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventVineLeapGroup>.Codec _map_eventVineLeapGroupMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventVineLeapGroup>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventVineLeapGroup.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventVineLeapGroup> eventVineLeapGroupMap_ = new pbc::MapField<int, global::fat.rawdata.EventVineLeapGroup>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventVineLeapGroup> EventVineLeapGroupMap {
      get { return eventVineLeapGroupMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventVineLeapGroupMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventVineLeapGroupMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventVineLeapGroupMap.Equals(other.EventVineLeapGroupMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventVineLeapGroupMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventVineLeapGroupMap_.WriteTo(output, _map_eventVineLeapGroupMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventVineLeapGroupMap_.WriteTo(ref output, _map_eventVineLeapGroupMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventVineLeapGroupMap_.CalculateSize(_map_eventVineLeapGroupMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventVineLeapGroupMapABValue other) {
      if (other == null) {
        return;
      }
      eventVineLeapGroupMap_.Add(other.eventVineLeapGroupMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventVineLeapGroupMap_.AddEntriesFrom(input, _map_eventVineLeapGroupMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventVineLeapGroupMap_.AddEntriesFrom(ref input, _map_eventVineLeapGroupMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventVineLeapGroupConf : pb::IMessage<EventVineLeapGroupConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventVineLeapGroupConf> _parser = new pb::MessageParser<EventVineLeapGroupConf>(() => new EventVineLeapGroupConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventVineLeapGroupConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventVineLeapGroupConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventVineLeapGroupConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventVineLeapGroupConf(EventVineLeapGroupConf other) : this() {
      eventVineLeapGroupMap_ = other.eventVineLeapGroupMap_.Clone();
      eventVineLeapGroupMapAB_ = other.eventVineLeapGroupMapAB_.Clone();
      eventVineLeapGroupMapABPatch_ = other.eventVineLeapGroupMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventVineLeapGroupConf Clone() {
      return new EventVineLeapGroupConf(this);
    }

    /// <summary>Field number for the "EventVineLeapGroupMap" field.</summary>
    public const int EventVineLeapGroupMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventVineLeapGroup>.Codec _map_eventVineLeapGroupMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventVineLeapGroup>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventVineLeapGroup.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventVineLeapGroup> eventVineLeapGroupMap_ = new pbc::MapField<int, global::fat.rawdata.EventVineLeapGroup>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventVineLeapGroup> EventVineLeapGroupMap {
      get { return eventVineLeapGroupMap_; }
    }

    /// <summary>Field number for the "EventVineLeapGroupMapAB" field.</summary>
    public const int EventVineLeapGroupMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventVineLeapGroupMapABValue>.Codec _map_eventVineLeapGroupMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventVineLeapGroupMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventVineLeapGroupMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventVineLeapGroupMapABValue> eventVineLeapGroupMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventVineLeapGroupMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventVineLeapGroupMapABValue> EventVineLeapGroupMapAB {
      get { return eventVineLeapGroupMapAB_; }
    }

    /// <summary>Field number for the "EventVineLeapGroupMapABPatch" field.</summary>
    public const int EventVineLeapGroupMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventVineLeapGroupMapABValue>.Codec _map_eventVineLeapGroupMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventVineLeapGroupMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventVineLeapGroupMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventVineLeapGroupMapABValue> eventVineLeapGroupMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventVineLeapGroupMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventVineLeapGroupMapABValue> EventVineLeapGroupMapABPatch {
      get { return eventVineLeapGroupMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventVineLeapGroupConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventVineLeapGroupConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventVineLeapGroupMap.Equals(other.EventVineLeapGroupMap)) return false;
      if (!EventVineLeapGroupMapAB.Equals(other.EventVineLeapGroupMapAB)) return false;
      if (!EventVineLeapGroupMapABPatch.Equals(other.EventVineLeapGroupMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventVineLeapGroupMap.GetHashCode();
      hash ^= EventVineLeapGroupMapAB.GetHashCode();
      hash ^= EventVineLeapGroupMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventVineLeapGroupMap_.WriteTo(output, _map_eventVineLeapGroupMap_codec);
      eventVineLeapGroupMapAB_.WriteTo(output, _map_eventVineLeapGroupMapAB_codec);
      eventVineLeapGroupMapABPatch_.WriteTo(output, _map_eventVineLeapGroupMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventVineLeapGroupMap_.WriteTo(ref output, _map_eventVineLeapGroupMap_codec);
      eventVineLeapGroupMapAB_.WriteTo(ref output, _map_eventVineLeapGroupMapAB_codec);
      eventVineLeapGroupMapABPatch_.WriteTo(ref output, _map_eventVineLeapGroupMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventVineLeapGroupMap_.CalculateSize(_map_eventVineLeapGroupMap_codec);
      size += eventVineLeapGroupMapAB_.CalculateSize(_map_eventVineLeapGroupMapAB_codec);
      size += eventVineLeapGroupMapABPatch_.CalculateSize(_map_eventVineLeapGroupMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventVineLeapGroupConf other) {
      if (other == null) {
        return;
      }
      eventVineLeapGroupMap_.Add(other.eventVineLeapGroupMap_);
      eventVineLeapGroupMapAB_.Add(other.eventVineLeapGroupMapAB_);
      eventVineLeapGroupMapABPatch_.Add(other.eventVineLeapGroupMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventVineLeapGroupMap_.AddEntriesFrom(input, _map_eventVineLeapGroupMap_codec);
            break;
          }
          case 18: {
            eventVineLeapGroupMapAB_.AddEntriesFrom(input, _map_eventVineLeapGroupMapAB_codec);
            break;
          }
          case 26: {
            eventVineLeapGroupMapABPatch_.AddEntriesFrom(input, _map_eventVineLeapGroupMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventVineLeapGroupMap_.AddEntriesFrom(ref input, _map_eventVineLeapGroupMap_codec);
            break;
          }
          case 18: {
            eventVineLeapGroupMapAB_.AddEntriesFrom(ref input, _map_eventVineLeapGroupMapAB_codec);
            break;
          }
          case 26: {
            eventVineLeapGroupMapABPatch_.AddEntriesFrom(ref input, _map_eventVineLeapGroupMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
