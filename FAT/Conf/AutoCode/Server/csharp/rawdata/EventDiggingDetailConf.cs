// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventDiggingDetailConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventDiggingDetailConf.proto</summary>
  public static partial class EventDiggingDetailConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventDiggingDetailConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventDiggingDetailConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiRyYXdkYXRhL0V2ZW50RGlnZ2luZ0RldGFpbENvbmYucHJvdG8SB3Jhd2Rh",
            "dGEingEKEkV2ZW50RGlnZ2luZ0RldGFpbBIKCgJpZBgBIAEoBRIXCg9jeWNs",
            "ZUxldmVsU2NvcmUYAiABKAUSFwoPY3ljbGVMZXZlbFRva2VuGAMgASgJEgwK",
            "BGRpZmYYByABKAUSFAoMaW5jbHVkZWxldmVsGAQgAygFEhIKCmxldmVsU2Nv",
            "cmUYBSADKAUSEgoKbGV2ZWxUb2tlbhgGIAMoCSLaAQocRXZlbnREaWdnaW5n",
            "RGV0YWlsTWFwQUJWYWx1ZRJfChVFdmVudERpZ2dpbmdEZXRhaWxNYXAYASAD",
            "KAsyQC5yYXdkYXRhLkV2ZW50RGlnZ2luZ0RldGFpbE1hcEFCVmFsdWUuRXZl",
            "bnREaWdnaW5nRGV0YWlsTWFwRW50cnkaWQoaRXZlbnREaWdnaW5nRGV0YWls",
            "TWFwRW50cnkSCwoDa2V5GAEgASgFEioKBXZhbHVlGAIgASgLMhsucmF3ZGF0",
            "YS5FdmVudERpZ2dpbmdEZXRhaWw6AjgBIukEChZFdmVudERpZ2dpbmdEZXRh",
            "aWxDb25mElkKFUV2ZW50RGlnZ2luZ0RldGFpbE1hcBgBIAMoCzI6LnJhd2Rh",
            "dGEuRXZlbnREaWdnaW5nRGV0YWlsQ29uZi5FdmVudERpZ2dpbmdEZXRhaWxN",
            "YXBFbnRyeRJdChdFdmVudERpZ2dpbmdEZXRhaWxNYXBBQhgCIAMoCzI8LnJh",
            "d2RhdGEuRXZlbnREaWdnaW5nRGV0YWlsQ29uZi5FdmVudERpZ2dpbmdEZXRh",
            "aWxNYXBBQkVudHJ5EmcKHEV2ZW50RGlnZ2luZ0RldGFpbE1hcEFCUGF0Y2gY",
            "AyADKAsyQS5yYXdkYXRhLkV2ZW50RGlnZ2luZ0RldGFpbENvbmYuRXZlbnRE",
            "aWdnaW5nRGV0YWlsTWFwQUJQYXRjaEVudHJ5GlkKGkV2ZW50RGlnZ2luZ0Rl",
            "dGFpbE1hcEVudHJ5EgsKA2tleRgBIAEoBRIqCgV2YWx1ZRgCIAEoCzIbLnJh",
            "d2RhdGEuRXZlbnREaWdnaW5nRGV0YWlsOgI4ARplChxFdmVudERpZ2dpbmdE",
            "ZXRhaWxNYXBBQkVudHJ5EgsKA2tleRgBIAEoCRI0CgV2YWx1ZRgCIAEoCzIl",
            "LnJhd2RhdGEuRXZlbnREaWdnaW5nRGV0YWlsTWFwQUJWYWx1ZToCOAEaagoh",
            "RXZlbnREaWdnaW5nRGV0YWlsTWFwQUJQYXRjaEVudHJ5EgsKA2tleRgBIAEo",
            "CRI0CgV2YWx1ZRgCIAEoCzIlLnJhd2RhdGEuRXZlbnREaWdnaW5nRGV0YWls",
            "TWFwQUJWYWx1ZToCOAFCPVotZ2l0bGFiLmZ1bnBsdXMuaW8vZmF0L2NvbmYv",
            "Z2VuL2dvbGFuZy9yYXdkYXRhqgILZmF0LnJhd2RhdGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventDiggingDetail), global::fat.rawdata.EventDiggingDetail.Parser, new[]{ "Id", "CycleLevelScore", "CycleLevelToken", "Diff", "Includelevel", "LevelScore", "LevelToken" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventDiggingDetailMapABValue), global::fat.rawdata.EventDiggingDetailMapABValue.Parser, new[]{ "EventDiggingDetailMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventDiggingDetailConf), global::fat.rawdata.EventDiggingDetailConf.Parser, new[]{ "EventDiggingDetailMap", "EventDiggingDetailMapAB", "EventDiggingDetailMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventDiggingDetail",table="EventDiggingDetailMap",table_wrapper="EventDiggingDetailConf",map="true",map_key_type="int32",data="EventDiggingDetailConf")
  /// annotation@ab(table_ab="EventDiggingDetailMapAB",table_ab_patch="EventDiggingDetailMapABPatch",table_ab_value="EventDiggingDetailMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventDiggingDetail(id="id")
  /// </summary>
  public sealed partial class EventDiggingDetail : pb::IMessage<EventDiggingDetail>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventDiggingDetail> _parser = new pb::MessageParser<EventDiggingDetail>(() => new EventDiggingDetail());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventDiggingDetail> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventDiggingDetailConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventDiggingDetail() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventDiggingDetail(EventDiggingDetail other) : this() {
      id_ = other.id_;
      cycleLevelScore_ = other.cycleLevelScore_;
      cycleLevelToken_ = other.cycleLevelToken_;
      diff_ = other.diff_;
      includelevel_ = other.includelevel_.Clone();
      levelScore_ = other.levelScore_.Clone();
      levelToken_ = other.levelToken_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventDiggingDetail Clone() {
      return new EventDiggingDetail(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 活动ID
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "cycleLevelScore" field.</summary>
    public const int CycleLevelScoreFieldNumber = 2;
    private int cycleLevelScore_;
    /// <summary>
    /// 循环进度积分
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CycleLevelScore {
      get { return cycleLevelScore_; }
      set {
        cycleLevelScore_ = value;
      }
    }

    /// <summary>Field number for the "cycleLevelToken" field.</summary>
    public const int CycleLevelTokenFieldNumber = 3;
    private string cycleLevelToken_ = "";
    /// <summary>
    /// 循环奖励
    /// （丛林替换id：45）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CycleLevelToken {
      get { return cycleLevelToken_; }
      set {
        cycleLevelToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "diff" field.</summary>
    public const int DiffFieldNumber = 7;
    private int diff_;
    /// <summary>
    /// 难度
    /// （仅TGA使用）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Diff {
      get { return diff_; }
      set {
        diff_ = value;
      }
    }

    /// <summary>Field number for the "includelevel" field.</summary>
    public const int IncludelevelFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_includelevel_codec
        = pb::FieldCodec.ForInt32(34);
    private readonly pbc::RepeatedField<int> includelevel_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 关卡组
    /// EventDiggingLevel.id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Includelevel {
      get { return includelevel_; }
    }

    /// <summary>Field number for the "levelScore" field.</summary>
    public const int LevelScoreFieldNumber = 5;
    private static readonly pb::FieldCodec<int> _repeated_levelScore_codec
        = pb::FieldCodec.ForInt32(42);
    private readonly pbc::RepeatedField<int> levelScore_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 进度积分
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> LevelScore {
      get { return levelScore_; }
    }

    /// <summary>Field number for the "levelToken" field.</summary>
    public const int LevelTokenFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _repeated_levelToken_codec
        = pb::FieldCodec.ForString(50);
    private readonly pbc::RepeatedField<string> levelToken_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 奖励
    /// （丛林替换id：45）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> LevelToken {
      get { return levelToken_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventDiggingDetail);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventDiggingDetail other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (CycleLevelScore != other.CycleLevelScore) return false;
      if (CycleLevelToken != other.CycleLevelToken) return false;
      if (Diff != other.Diff) return false;
      if(!includelevel_.Equals(other.includelevel_)) return false;
      if(!levelScore_.Equals(other.levelScore_)) return false;
      if(!levelToken_.Equals(other.levelToken_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (CycleLevelScore != 0) hash ^= CycleLevelScore.GetHashCode();
      if (CycleLevelToken.Length != 0) hash ^= CycleLevelToken.GetHashCode();
      if (Diff != 0) hash ^= Diff.GetHashCode();
      hash ^= includelevel_.GetHashCode();
      hash ^= levelScore_.GetHashCode();
      hash ^= levelToken_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (CycleLevelScore != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CycleLevelScore);
      }
      if (CycleLevelToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CycleLevelToken);
      }
      includelevel_.WriteTo(output, _repeated_includelevel_codec);
      levelScore_.WriteTo(output, _repeated_levelScore_codec);
      levelToken_.WriteTo(output, _repeated_levelToken_codec);
      if (Diff != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Diff);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (CycleLevelScore != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CycleLevelScore);
      }
      if (CycleLevelToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CycleLevelToken);
      }
      includelevel_.WriteTo(ref output, _repeated_includelevel_codec);
      levelScore_.WriteTo(ref output, _repeated_levelScore_codec);
      levelToken_.WriteTo(ref output, _repeated_levelToken_codec);
      if (Diff != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Diff);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (CycleLevelScore != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CycleLevelScore);
      }
      if (CycleLevelToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CycleLevelToken);
      }
      if (Diff != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Diff);
      }
      size += includelevel_.CalculateSize(_repeated_includelevel_codec);
      size += levelScore_.CalculateSize(_repeated_levelScore_codec);
      size += levelToken_.CalculateSize(_repeated_levelToken_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventDiggingDetail other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.CycleLevelScore != 0) {
        CycleLevelScore = other.CycleLevelScore;
      }
      if (other.CycleLevelToken.Length != 0) {
        CycleLevelToken = other.CycleLevelToken;
      }
      if (other.Diff != 0) {
        Diff = other.Diff;
      }
      includelevel_.Add(other.includelevel_);
      levelScore_.Add(other.levelScore_);
      levelToken_.Add(other.levelToken_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            CycleLevelScore = input.ReadInt32();
            break;
          }
          case 26: {
            CycleLevelToken = input.ReadString();
            break;
          }
          case 34:
          case 32: {
            includelevel_.AddEntriesFrom(input, _repeated_includelevel_codec);
            break;
          }
          case 42:
          case 40: {
            levelScore_.AddEntriesFrom(input, _repeated_levelScore_codec);
            break;
          }
          case 50: {
            levelToken_.AddEntriesFrom(input, _repeated_levelToken_codec);
            break;
          }
          case 56: {
            Diff = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            CycleLevelScore = input.ReadInt32();
            break;
          }
          case 26: {
            CycleLevelToken = input.ReadString();
            break;
          }
          case 34:
          case 32: {
            includelevel_.AddEntriesFrom(ref input, _repeated_includelevel_codec);
            break;
          }
          case 42:
          case 40: {
            levelScore_.AddEntriesFrom(ref input, _repeated_levelScore_codec);
            break;
          }
          case 50: {
            levelToken_.AddEntriesFrom(ref input, _repeated_levelToken_codec);
            break;
          }
          case 56: {
            Diff = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventDiggingDetailMapABValue : pb::IMessage<EventDiggingDetailMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventDiggingDetailMapABValue> _parser = new pb::MessageParser<EventDiggingDetailMapABValue>(() => new EventDiggingDetailMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventDiggingDetailMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventDiggingDetailConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventDiggingDetailMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventDiggingDetailMapABValue(EventDiggingDetailMapABValue other) : this() {
      eventDiggingDetailMap_ = other.eventDiggingDetailMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventDiggingDetailMapABValue Clone() {
      return new EventDiggingDetailMapABValue(this);
    }

    /// <summary>Field number for the "EventDiggingDetailMap" field.</summary>
    public const int EventDiggingDetailMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventDiggingDetail>.Codec _map_eventDiggingDetailMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventDiggingDetail>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventDiggingDetail.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventDiggingDetail> eventDiggingDetailMap_ = new pbc::MapField<int, global::fat.rawdata.EventDiggingDetail>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventDiggingDetail> EventDiggingDetailMap {
      get { return eventDiggingDetailMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventDiggingDetailMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventDiggingDetailMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventDiggingDetailMap.Equals(other.EventDiggingDetailMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventDiggingDetailMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventDiggingDetailMap_.WriteTo(output, _map_eventDiggingDetailMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventDiggingDetailMap_.WriteTo(ref output, _map_eventDiggingDetailMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventDiggingDetailMap_.CalculateSize(_map_eventDiggingDetailMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventDiggingDetailMapABValue other) {
      if (other == null) {
        return;
      }
      eventDiggingDetailMap_.Add(other.eventDiggingDetailMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventDiggingDetailMap_.AddEntriesFrom(input, _map_eventDiggingDetailMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventDiggingDetailMap_.AddEntriesFrom(ref input, _map_eventDiggingDetailMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventDiggingDetailConf : pb::IMessage<EventDiggingDetailConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventDiggingDetailConf> _parser = new pb::MessageParser<EventDiggingDetailConf>(() => new EventDiggingDetailConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventDiggingDetailConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventDiggingDetailConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventDiggingDetailConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventDiggingDetailConf(EventDiggingDetailConf other) : this() {
      eventDiggingDetailMap_ = other.eventDiggingDetailMap_.Clone();
      eventDiggingDetailMapAB_ = other.eventDiggingDetailMapAB_.Clone();
      eventDiggingDetailMapABPatch_ = other.eventDiggingDetailMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventDiggingDetailConf Clone() {
      return new EventDiggingDetailConf(this);
    }

    /// <summary>Field number for the "EventDiggingDetailMap" field.</summary>
    public const int EventDiggingDetailMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventDiggingDetail>.Codec _map_eventDiggingDetailMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventDiggingDetail>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventDiggingDetail.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventDiggingDetail> eventDiggingDetailMap_ = new pbc::MapField<int, global::fat.rawdata.EventDiggingDetail>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventDiggingDetail> EventDiggingDetailMap {
      get { return eventDiggingDetailMap_; }
    }

    /// <summary>Field number for the "EventDiggingDetailMapAB" field.</summary>
    public const int EventDiggingDetailMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventDiggingDetailMapABValue>.Codec _map_eventDiggingDetailMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventDiggingDetailMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventDiggingDetailMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventDiggingDetailMapABValue> eventDiggingDetailMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventDiggingDetailMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventDiggingDetailMapABValue> EventDiggingDetailMapAB {
      get { return eventDiggingDetailMapAB_; }
    }

    /// <summary>Field number for the "EventDiggingDetailMapABPatch" field.</summary>
    public const int EventDiggingDetailMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventDiggingDetailMapABValue>.Codec _map_eventDiggingDetailMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventDiggingDetailMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventDiggingDetailMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventDiggingDetailMapABValue> eventDiggingDetailMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventDiggingDetailMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventDiggingDetailMapABValue> EventDiggingDetailMapABPatch {
      get { return eventDiggingDetailMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventDiggingDetailConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventDiggingDetailConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventDiggingDetailMap.Equals(other.EventDiggingDetailMap)) return false;
      if (!EventDiggingDetailMapAB.Equals(other.EventDiggingDetailMapAB)) return false;
      if (!EventDiggingDetailMapABPatch.Equals(other.EventDiggingDetailMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventDiggingDetailMap.GetHashCode();
      hash ^= EventDiggingDetailMapAB.GetHashCode();
      hash ^= EventDiggingDetailMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventDiggingDetailMap_.WriteTo(output, _map_eventDiggingDetailMap_codec);
      eventDiggingDetailMapAB_.WriteTo(output, _map_eventDiggingDetailMapAB_codec);
      eventDiggingDetailMapABPatch_.WriteTo(output, _map_eventDiggingDetailMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventDiggingDetailMap_.WriteTo(ref output, _map_eventDiggingDetailMap_codec);
      eventDiggingDetailMapAB_.WriteTo(ref output, _map_eventDiggingDetailMapAB_codec);
      eventDiggingDetailMapABPatch_.WriteTo(ref output, _map_eventDiggingDetailMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventDiggingDetailMap_.CalculateSize(_map_eventDiggingDetailMap_codec);
      size += eventDiggingDetailMapAB_.CalculateSize(_map_eventDiggingDetailMapAB_codec);
      size += eventDiggingDetailMapABPatch_.CalculateSize(_map_eventDiggingDetailMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventDiggingDetailConf other) {
      if (other == null) {
        return;
      }
      eventDiggingDetailMap_.Add(other.eventDiggingDetailMap_);
      eventDiggingDetailMapAB_.Add(other.eventDiggingDetailMapAB_);
      eventDiggingDetailMapABPatch_.Add(other.eventDiggingDetailMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventDiggingDetailMap_.AddEntriesFrom(input, _map_eventDiggingDetailMap_codec);
            break;
          }
          case 18: {
            eventDiggingDetailMapAB_.AddEntriesFrom(input, _map_eventDiggingDetailMapAB_codec);
            break;
          }
          case 26: {
            eventDiggingDetailMapABPatch_.AddEntriesFrom(input, _map_eventDiggingDetailMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventDiggingDetailMap_.AddEntriesFrom(ref input, _map_eventDiggingDetailMap_codec);
            break;
          }
          case 18: {
            eventDiggingDetailMapAB_.AddEntriesFrom(ref input, _map_eventDiggingDetailMapAB_codec);
            break;
          }
          case 26: {
            eventDiggingDetailMapABPatch_.AddEntriesFrom(ref input, _map_eventDiggingDetailMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
