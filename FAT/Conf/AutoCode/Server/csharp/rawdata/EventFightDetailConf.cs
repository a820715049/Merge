// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventFightDetailConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventFightDetailConf.proto</summary>
  public static partial class EventFightDetailConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventFightDetailConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventFightDetailConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiJyYXdkYXRhL0V2ZW50RmlnaHREZXRhaWxDb25mLnByb3RvEgdyYXdkYXRh",
            "InUKEEV2ZW50RmlnaHREZXRhaWwSCgoCaWQYASABKAUSDwoHYm9hcmRJZBgC",
            "IAEoBRIUCgxjaXJjbGVMZXZlbHMYAyADKAUSDAoEZGlmZhgGIAEoBRIQCghm",
            "cmVlSXRlbRgEIAMoBRIOCgZsZXZlbHMYBSADKAUizgEKGkV2ZW50RmlnaHRE",
            "ZXRhaWxNYXBBQlZhbHVlElkKE0V2ZW50RmlnaHREZXRhaWxNYXAYASADKAsy",
            "PC5yYXdkYXRhLkV2ZW50RmlnaHREZXRhaWxNYXBBQlZhbHVlLkV2ZW50Rmln",
            "aHREZXRhaWxNYXBFbnRyeRpVChhFdmVudEZpZ2h0RGV0YWlsTWFwRW50cnkS",
            "CwoDa2V5GAEgASgFEigKBXZhbHVlGAIgASgLMhkucmF3ZGF0YS5FdmVudEZp",
            "Z2h0RGV0YWlsOgI4ASLJBAoURXZlbnRGaWdodERldGFpbENvbmYSUwoTRXZl",
            "bnRGaWdodERldGFpbE1hcBgBIAMoCzI2LnJhd2RhdGEuRXZlbnRGaWdodERl",
            "dGFpbENvbmYuRXZlbnRGaWdodERldGFpbE1hcEVudHJ5ElcKFUV2ZW50Rmln",
            "aHREZXRhaWxNYXBBQhgCIAMoCzI4LnJhd2RhdGEuRXZlbnRGaWdodERldGFp",
            "bENvbmYuRXZlbnRGaWdodERldGFpbE1hcEFCRW50cnkSYQoaRXZlbnRGaWdo",
            "dERldGFpbE1hcEFCUGF0Y2gYAyADKAsyPS5yYXdkYXRhLkV2ZW50RmlnaHRE",
            "ZXRhaWxDb25mLkV2ZW50RmlnaHREZXRhaWxNYXBBQlBhdGNoRW50cnkaVQoY",
            "RXZlbnRGaWdodERldGFpbE1hcEVudHJ5EgsKA2tleRgBIAEoBRIoCgV2YWx1",
            "ZRgCIAEoCzIZLnJhd2RhdGEuRXZlbnRGaWdodERldGFpbDoCOAEaYQoaRXZl",
            "bnRGaWdodERldGFpbE1hcEFCRW50cnkSCwoDa2V5GAEgASgJEjIKBXZhbHVl",
            "GAIgASgLMiMucmF3ZGF0YS5FdmVudEZpZ2h0RGV0YWlsTWFwQUJWYWx1ZToC",
            "OAEaZgofRXZlbnRGaWdodERldGFpbE1hcEFCUGF0Y2hFbnRyeRILCgNrZXkY",
            "ASABKAkSMgoFdmFsdWUYAiABKAsyIy5yYXdkYXRhLkV2ZW50RmlnaHREZXRh",
            "aWxNYXBBQlZhbHVlOgI4AUI9Wi1naXRsYWIuZnVucGx1cy5pby9mYXQvY29u",
            "Zi9nZW4vZ29sYW5nL3Jhd2RhdGGqAgtmYXQucmF3ZGF0YWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventFightDetail), global::fat.rawdata.EventFightDetail.Parser, new[]{ "Id", "BoardId", "CircleLevels", "Diff", "FreeItem", "Levels" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventFightDetailMapABValue), global::fat.rawdata.EventFightDetailMapABValue.Parser, new[]{ "EventFightDetailMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventFightDetailConf), global::fat.rawdata.EventFightDetailConf.Parser, new[]{ "EventFightDetailMap", "EventFightDetailMapAB", "EventFightDetailMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventFightDetail",table="EventFightDetailMap",table_wrapper="EventFightDetailConf",map="true",map_key_type="int32",data="EventFightDetailConf")
  /// annotation@ab(table_ab="EventFightDetailMapAB",table_ab_patch="EventFightDetailMapABPatch",table_ab_value="EventFightDetailMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventFightDetail(id="id")
  /// </summary>
  public sealed partial class EventFightDetail : pb::IMessage<EventFightDetail>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventFightDetail> _parser = new pb::MessageParser<EventFightDetail>(() => new EventFightDetail());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventFightDetail> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventFightDetailConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventFightDetail() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventFightDetail(EventFightDetail other) : this() {
      id_ = other.id_;
      boardId_ = other.boardId_;
      circleLevels_ = other.circleLevels_.Clone();
      diff_ = other.diff_;
      freeItem_ = other.freeItem_.Clone();
      levels_ = other.levels_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventFightDetail Clone() {
      return new EventFightDetail(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// ID
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "boardId" field.</summary>
    public const int BoardIdFieldNumber = 2;
    private int boardId_;
    /// <summary>
    /// 棋盘ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BoardId {
      get { return boardId_; }
      set {
        boardId_ = value;
      }
    }

    /// <summary>Field number for the "circleLevels" field.</summary>
    public const int CircleLevelsFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_circleLevels_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> circleLevels_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 循环关卡
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> CircleLevels {
      get { return circleLevels_; }
    }

    /// <summary>Field number for the "diff" field.</summary>
    public const int DiffFieldNumber = 6;
    private int diff_;
    /// <summary>
    /// 难度
    /// (仅TGA打点使用）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Diff {
      get { return diff_; }
      set {
        diff_ = value;
      }
    }

    /// <summary>Field number for the "freeItem" field.</summary>
    public const int FreeItemFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_freeItem_codec
        = pb::FieldCodec.ForInt32(34);
    private readonly pbc::RepeatedField<int> freeItem_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 初始赠送棋子
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> FreeItem {
      get { return freeItem_; }
    }

    /// <summary>Field number for the "levels" field.</summary>
    public const int LevelsFieldNumber = 5;
    private static readonly pb::FieldCodec<int> _repeated_levels_codec
        = pb::FieldCodec.ForInt32(42);
    private readonly pbc::RepeatedField<int> levels_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 一次性关卡
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Levels {
      get { return levels_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventFightDetail);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventFightDetail other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (BoardId != other.BoardId) return false;
      if(!circleLevels_.Equals(other.circleLevels_)) return false;
      if (Diff != other.Diff) return false;
      if(!freeItem_.Equals(other.freeItem_)) return false;
      if(!levels_.Equals(other.levels_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (BoardId != 0) hash ^= BoardId.GetHashCode();
      hash ^= circleLevels_.GetHashCode();
      if (Diff != 0) hash ^= Diff.GetHashCode();
      hash ^= freeItem_.GetHashCode();
      hash ^= levels_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (BoardId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BoardId);
      }
      circleLevels_.WriteTo(output, _repeated_circleLevels_codec);
      freeItem_.WriteTo(output, _repeated_freeItem_codec);
      levels_.WriteTo(output, _repeated_levels_codec);
      if (Diff != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Diff);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (BoardId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BoardId);
      }
      circleLevels_.WriteTo(ref output, _repeated_circleLevels_codec);
      freeItem_.WriteTo(ref output, _repeated_freeItem_codec);
      levels_.WriteTo(ref output, _repeated_levels_codec);
      if (Diff != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Diff);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (BoardId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BoardId);
      }
      size += circleLevels_.CalculateSize(_repeated_circleLevels_codec);
      if (Diff != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Diff);
      }
      size += freeItem_.CalculateSize(_repeated_freeItem_codec);
      size += levels_.CalculateSize(_repeated_levels_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventFightDetail other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.BoardId != 0) {
        BoardId = other.BoardId;
      }
      circleLevels_.Add(other.circleLevels_);
      if (other.Diff != 0) {
        Diff = other.Diff;
      }
      freeItem_.Add(other.freeItem_);
      levels_.Add(other.levels_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            BoardId = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            circleLevels_.AddEntriesFrom(input, _repeated_circleLevels_codec);
            break;
          }
          case 34:
          case 32: {
            freeItem_.AddEntriesFrom(input, _repeated_freeItem_codec);
            break;
          }
          case 42:
          case 40: {
            levels_.AddEntriesFrom(input, _repeated_levels_codec);
            break;
          }
          case 48: {
            Diff = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            BoardId = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            circleLevels_.AddEntriesFrom(ref input, _repeated_circleLevels_codec);
            break;
          }
          case 34:
          case 32: {
            freeItem_.AddEntriesFrom(ref input, _repeated_freeItem_codec);
            break;
          }
          case 42:
          case 40: {
            levels_.AddEntriesFrom(ref input, _repeated_levels_codec);
            break;
          }
          case 48: {
            Diff = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventFightDetailMapABValue : pb::IMessage<EventFightDetailMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventFightDetailMapABValue> _parser = new pb::MessageParser<EventFightDetailMapABValue>(() => new EventFightDetailMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventFightDetailMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventFightDetailConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventFightDetailMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventFightDetailMapABValue(EventFightDetailMapABValue other) : this() {
      eventFightDetailMap_ = other.eventFightDetailMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventFightDetailMapABValue Clone() {
      return new EventFightDetailMapABValue(this);
    }

    /// <summary>Field number for the "EventFightDetailMap" field.</summary>
    public const int EventFightDetailMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventFightDetail>.Codec _map_eventFightDetailMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventFightDetail>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventFightDetail.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventFightDetail> eventFightDetailMap_ = new pbc::MapField<int, global::fat.rawdata.EventFightDetail>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventFightDetail> EventFightDetailMap {
      get { return eventFightDetailMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventFightDetailMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventFightDetailMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventFightDetailMap.Equals(other.EventFightDetailMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventFightDetailMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventFightDetailMap_.WriteTo(output, _map_eventFightDetailMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventFightDetailMap_.WriteTo(ref output, _map_eventFightDetailMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventFightDetailMap_.CalculateSize(_map_eventFightDetailMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventFightDetailMapABValue other) {
      if (other == null) {
        return;
      }
      eventFightDetailMap_.Add(other.eventFightDetailMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventFightDetailMap_.AddEntriesFrom(input, _map_eventFightDetailMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventFightDetailMap_.AddEntriesFrom(ref input, _map_eventFightDetailMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventFightDetailConf : pb::IMessage<EventFightDetailConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventFightDetailConf> _parser = new pb::MessageParser<EventFightDetailConf>(() => new EventFightDetailConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventFightDetailConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventFightDetailConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventFightDetailConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventFightDetailConf(EventFightDetailConf other) : this() {
      eventFightDetailMap_ = other.eventFightDetailMap_.Clone();
      eventFightDetailMapAB_ = other.eventFightDetailMapAB_.Clone();
      eventFightDetailMapABPatch_ = other.eventFightDetailMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventFightDetailConf Clone() {
      return new EventFightDetailConf(this);
    }

    /// <summary>Field number for the "EventFightDetailMap" field.</summary>
    public const int EventFightDetailMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventFightDetail>.Codec _map_eventFightDetailMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventFightDetail>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventFightDetail.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventFightDetail> eventFightDetailMap_ = new pbc::MapField<int, global::fat.rawdata.EventFightDetail>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventFightDetail> EventFightDetailMap {
      get { return eventFightDetailMap_; }
    }

    /// <summary>Field number for the "EventFightDetailMapAB" field.</summary>
    public const int EventFightDetailMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventFightDetailMapABValue>.Codec _map_eventFightDetailMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventFightDetailMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventFightDetailMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventFightDetailMapABValue> eventFightDetailMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventFightDetailMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventFightDetailMapABValue> EventFightDetailMapAB {
      get { return eventFightDetailMapAB_; }
    }

    /// <summary>Field number for the "EventFightDetailMapABPatch" field.</summary>
    public const int EventFightDetailMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventFightDetailMapABValue>.Codec _map_eventFightDetailMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventFightDetailMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventFightDetailMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventFightDetailMapABValue> eventFightDetailMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventFightDetailMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventFightDetailMapABValue> EventFightDetailMapABPatch {
      get { return eventFightDetailMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventFightDetailConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventFightDetailConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventFightDetailMap.Equals(other.EventFightDetailMap)) return false;
      if (!EventFightDetailMapAB.Equals(other.EventFightDetailMapAB)) return false;
      if (!EventFightDetailMapABPatch.Equals(other.EventFightDetailMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventFightDetailMap.GetHashCode();
      hash ^= EventFightDetailMapAB.GetHashCode();
      hash ^= EventFightDetailMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventFightDetailMap_.WriteTo(output, _map_eventFightDetailMap_codec);
      eventFightDetailMapAB_.WriteTo(output, _map_eventFightDetailMapAB_codec);
      eventFightDetailMapABPatch_.WriteTo(output, _map_eventFightDetailMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventFightDetailMap_.WriteTo(ref output, _map_eventFightDetailMap_codec);
      eventFightDetailMapAB_.WriteTo(ref output, _map_eventFightDetailMapAB_codec);
      eventFightDetailMapABPatch_.WriteTo(ref output, _map_eventFightDetailMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventFightDetailMap_.CalculateSize(_map_eventFightDetailMap_codec);
      size += eventFightDetailMapAB_.CalculateSize(_map_eventFightDetailMapAB_codec);
      size += eventFightDetailMapABPatch_.CalculateSize(_map_eventFightDetailMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventFightDetailConf other) {
      if (other == null) {
        return;
      }
      eventFightDetailMap_.Add(other.eventFightDetailMap_);
      eventFightDetailMapAB_.Add(other.eventFightDetailMapAB_);
      eventFightDetailMapABPatch_.Add(other.eventFightDetailMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventFightDetailMap_.AddEntriesFrom(input, _map_eventFightDetailMap_codec);
            break;
          }
          case 18: {
            eventFightDetailMapAB_.AddEntriesFrom(input, _map_eventFightDetailMapAB_codec);
            break;
          }
          case 26: {
            eventFightDetailMapABPatch_.AddEntriesFrom(input, _map_eventFightDetailMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventFightDetailMap_.AddEntriesFrom(ref input, _map_eventFightDetailMap_codec);
            break;
          }
          case 18: {
            eventFightDetailMapAB_.AddEntriesFrom(ref input, _map_eventFightDetailMapAB_codec);
            break;
          }
          case 26: {
            eventFightDetailMapABPatch_.AddEntriesFrom(ref input, _map_eventFightDetailMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
