// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventRedeemConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventRedeemConf.proto</summary>
  public static partial class EventRedeemConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventRedeemConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventRedeemConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch1yYXdkYXRhL0V2ZW50UmVkZWVtQ29uZi5wcm90bxIHcmF3ZGF0YSKNAgoL",
            "RXZlbnRSZWRlZW0SCgoCaWQYASABKAUSDgoGZGV0YWlsGAIgASgFEhEKCWV2",
            "ZW50SGVscBgGIAEoBRIRCglldmVudE1haW4YByABKAUSEwoLZXZlbnRTZXR0",
            "bGUYCCABKAUSEgoKZXZlbnRTdGFnZRgJIAEoBRISCgpldmVudFRoZW1lGAMg",
            "ASgFEjoKC2V4cGlyZVBvcHVwGAQgAygLMiUucmF3ZGF0YS5FdmVudFJlZGVl",
            "bS5FeHBpcmVQb3B1cEVudHJ5Eg8KB3Rva2VuSWQYBSABKAUaMgoQRXhwaXJl",
            "UG9wdXBFbnRyeRILCgNrZXkYASABKAUSDQoFdmFsdWUYAiABKAk6AjgBIrAB",
            "ChVFdmVudFJlZGVlbU1hcEFCVmFsdWUSSgoORXZlbnRSZWRlZW1NYXAYASAD",
            "KAsyMi5yYXdkYXRhLkV2ZW50UmVkZWVtTWFwQUJWYWx1ZS5FdmVudFJlZGVl",
            "bU1hcEVudHJ5GksKE0V2ZW50UmVkZWVtTWFwRW50cnkSCwoDa2V5GAEgASgF",
            "EiMKBXZhbHVlGAIgASgLMhQucmF3ZGF0YS5FdmVudFJlZGVlbToCOAEi+QMK",
            "D0V2ZW50UmVkZWVtQ29uZhJECg5FdmVudFJlZGVlbU1hcBgBIAMoCzIsLnJh",
            "d2RhdGEuRXZlbnRSZWRlZW1Db25mLkV2ZW50UmVkZWVtTWFwRW50cnkSSAoQ",
            "RXZlbnRSZWRlZW1NYXBBQhgCIAMoCzIuLnJhd2RhdGEuRXZlbnRSZWRlZW1D",
            "b25mLkV2ZW50UmVkZWVtTWFwQUJFbnRyeRJSChVFdmVudFJlZGVlbU1hcEFC",
            "UGF0Y2gYAyADKAsyMy5yYXdkYXRhLkV2ZW50UmVkZWVtQ29uZi5FdmVudFJl",
            "ZGVlbU1hcEFCUGF0Y2hFbnRyeRpLChNFdmVudFJlZGVlbU1hcEVudHJ5EgsK",
            "A2tleRgBIAEoBRIjCgV2YWx1ZRgCIAEoCzIULnJhd2RhdGEuRXZlbnRSZWRl",
            "ZW06AjgBGlcKFUV2ZW50UmVkZWVtTWFwQUJFbnRyeRILCgNrZXkYASABKAkS",
            "LQoFdmFsdWUYAiABKAsyHi5yYXdkYXRhLkV2ZW50UmVkZWVtTWFwQUJWYWx1",
            "ZToCOAEaXAoaRXZlbnRSZWRlZW1NYXBBQlBhdGNoRW50cnkSCwoDa2V5GAEg",
            "ASgJEi0KBXZhbHVlGAIgASgLMh4ucmF3ZGF0YS5FdmVudFJlZGVlbU1hcEFC",
            "VmFsdWU6AjgBQj1aLWdpdGxhYi5mdW5wbHVzLmlvL2ZhdC9jb25mL2dlbi9n",
            "b2xhbmcvcmF3ZGF0YaoCC2ZhdC5yYXdkYXRhYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventRedeem), global::fat.rawdata.EventRedeem.Parser, new[]{ "Id", "Detail", "EventHelp", "EventMain", "EventSettle", "EventStage", "EventTheme", "ExpirePopup", "TokenId" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventRedeemMapABValue), global::fat.rawdata.EventRedeemMapABValue.Parser, new[]{ "EventRedeemMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventRedeemConf), global::fat.rawdata.EventRedeemConf.Parser, new[]{ "EventRedeemMap", "EventRedeemMapAB", "EventRedeemMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventRedeem",table="EventRedeemMap",table_wrapper="EventRedeemConf",map="true",map_key_type="int32",data="EventRedeemConf")
  /// annotation@ab(table_ab="EventRedeemMapAB",table_ab_patch="EventRedeemMapABPatch",table_ab_value="EventRedeemMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventRedeem(id="id")
  /// </summary>
  public sealed partial class EventRedeem : pb::IMessage<EventRedeem>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventRedeem> _parser = new pb::MessageParser<EventRedeem>(() => new EventRedeem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventRedeem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventRedeemConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventRedeem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventRedeem(EventRedeem other) : this() {
      id_ = other.id_;
      detail_ = other.detail_;
      eventHelp_ = other.eventHelp_;
      eventMain_ = other.eventMain_;
      eventSettle_ = other.eventSettle_;
      eventStage_ = other.eventStage_;
      eventTheme_ = other.eventTheme_;
      expirePopup_ = other.expirePopup_.Clone();
      tokenId_ = other.tokenId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventRedeem Clone() {
      return new EventRedeem(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 活动模版id
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "detail" field.</summary>
    public const int DetailFieldNumber = 2;
    private int detail_;
    /// <summary>
    /// 活动详情
    /// (GradeIndexMapping.id)
    /// (EventRedeemDetail.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Detail {
      get { return detail_; }
      set {
        detail_ = value;
      }
    }

    /// <summary>Field number for the "eventHelp" field.</summary>
    public const int EventHelpFieldNumber = 6;
    private int eventHelp_;
    /// <summary>
    /// 活动帮助界面
    /// （EventTheme.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EventHelp {
      get { return eventHelp_; }
      set {
        eventHelp_ = value;
      }
    }

    /// <summary>Field number for the "eventMain" field.</summary>
    public const int EventMainFieldNumber = 7;
    private int eventMain_;
    /// <summary>
    /// 活动主界面
    /// （EventTheme.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EventMain {
      get { return eventMain_; }
      set {
        eventMain_ = value;
      }
    }

    /// <summary>Field number for the "eventSettle" field.</summary>
    public const int EventSettleFieldNumber = 8;
    private int eventSettle_;
    /// <summary>
    /// 活动结算界面
    /// （EventTheme.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EventSettle {
      get { return eventSettle_; }
      set {
        eventSettle_ = value;
      }
    }

    /// <summary>Field number for the "eventStage" field.</summary>
    public const int EventStageFieldNumber = 9;
    private int eventStage_;
    /// <summary>
    /// 阶段完成弹窗
    /// （EventTheme.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EventStage {
      get { return eventStage_; }
      set {
        eventStage_ = value;
      }
    }

    /// <summary>Field number for the "eventTheme" field.</summary>
    public const int EventThemeFieldNumber = 3;
    private int eventTheme_;
    /// <summary>
    /// 活动开启弹窗
    /// （EventTheme.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EventTheme {
      get { return eventTheme_; }
      set {
        eventTheme_ = value;
      }
    }

    /// <summary>Field number for the "expirePopup" field.</summary>
    public const int ExpirePopupFieldNumber = 4;
    private static readonly pbc::MapField<int, string>.Codec _map_expirePopup_codec
        = new pbc::MapField<int, string>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForString(18, ""), 34);
    private readonly pbc::MapField<int, string> expirePopup_ = new pbc::MapField<int, string>();
    /// <summary>
    /// 活动结束时
    /// 通过弹板的方式进行结算(通用方法)
    /// {“被结算物品” : “结算目标物” = “转化系数”}
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, string> ExpirePopup {
      get { return expirePopup_; }
    }

    /// <summary>Field number for the "tokenId" field.</summary>
    public const int TokenIdFieldNumber = 5;
    private int tokenId_;
    /// <summary>
    /// 活动兑换币id
    /// （ObjBasic.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TokenId {
      get { return tokenId_; }
      set {
        tokenId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventRedeem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventRedeem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Detail != other.Detail) return false;
      if (EventHelp != other.EventHelp) return false;
      if (EventMain != other.EventMain) return false;
      if (EventSettle != other.EventSettle) return false;
      if (EventStage != other.EventStage) return false;
      if (EventTheme != other.EventTheme) return false;
      if (!ExpirePopup.Equals(other.ExpirePopup)) return false;
      if (TokenId != other.TokenId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Detail != 0) hash ^= Detail.GetHashCode();
      if (EventHelp != 0) hash ^= EventHelp.GetHashCode();
      if (EventMain != 0) hash ^= EventMain.GetHashCode();
      if (EventSettle != 0) hash ^= EventSettle.GetHashCode();
      if (EventStage != 0) hash ^= EventStage.GetHashCode();
      if (EventTheme != 0) hash ^= EventTheme.GetHashCode();
      hash ^= ExpirePopup.GetHashCode();
      if (TokenId != 0) hash ^= TokenId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Detail != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Detail);
      }
      if (EventTheme != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(EventTheme);
      }
      expirePopup_.WriteTo(output, _map_expirePopup_codec);
      if (TokenId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(TokenId);
      }
      if (EventHelp != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(EventHelp);
      }
      if (EventMain != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(EventMain);
      }
      if (EventSettle != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(EventSettle);
      }
      if (EventStage != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(EventStage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Detail != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Detail);
      }
      if (EventTheme != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(EventTheme);
      }
      expirePopup_.WriteTo(ref output, _map_expirePopup_codec);
      if (TokenId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(TokenId);
      }
      if (EventHelp != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(EventHelp);
      }
      if (EventMain != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(EventMain);
      }
      if (EventSettle != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(EventSettle);
      }
      if (EventStage != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(EventStage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Detail != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Detail);
      }
      if (EventHelp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EventHelp);
      }
      if (EventMain != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EventMain);
      }
      if (EventSettle != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EventSettle);
      }
      if (EventStage != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EventStage);
      }
      if (EventTheme != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EventTheme);
      }
      size += expirePopup_.CalculateSize(_map_expirePopup_codec);
      if (TokenId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TokenId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventRedeem other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Detail != 0) {
        Detail = other.Detail;
      }
      if (other.EventHelp != 0) {
        EventHelp = other.EventHelp;
      }
      if (other.EventMain != 0) {
        EventMain = other.EventMain;
      }
      if (other.EventSettle != 0) {
        EventSettle = other.EventSettle;
      }
      if (other.EventStage != 0) {
        EventStage = other.EventStage;
      }
      if (other.EventTheme != 0) {
        EventTheme = other.EventTheme;
      }
      expirePopup_.Add(other.expirePopup_);
      if (other.TokenId != 0) {
        TokenId = other.TokenId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Detail = input.ReadInt32();
            break;
          }
          case 24: {
            EventTheme = input.ReadInt32();
            break;
          }
          case 34: {
            expirePopup_.AddEntriesFrom(input, _map_expirePopup_codec);
            break;
          }
          case 40: {
            TokenId = input.ReadInt32();
            break;
          }
          case 48: {
            EventHelp = input.ReadInt32();
            break;
          }
          case 56: {
            EventMain = input.ReadInt32();
            break;
          }
          case 64: {
            EventSettle = input.ReadInt32();
            break;
          }
          case 72: {
            EventStage = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Detail = input.ReadInt32();
            break;
          }
          case 24: {
            EventTheme = input.ReadInt32();
            break;
          }
          case 34: {
            expirePopup_.AddEntriesFrom(ref input, _map_expirePopup_codec);
            break;
          }
          case 40: {
            TokenId = input.ReadInt32();
            break;
          }
          case 48: {
            EventHelp = input.ReadInt32();
            break;
          }
          case 56: {
            EventMain = input.ReadInt32();
            break;
          }
          case 64: {
            EventSettle = input.ReadInt32();
            break;
          }
          case 72: {
            EventStage = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventRedeemMapABValue : pb::IMessage<EventRedeemMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventRedeemMapABValue> _parser = new pb::MessageParser<EventRedeemMapABValue>(() => new EventRedeemMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventRedeemMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventRedeemConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventRedeemMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventRedeemMapABValue(EventRedeemMapABValue other) : this() {
      eventRedeemMap_ = other.eventRedeemMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventRedeemMapABValue Clone() {
      return new EventRedeemMapABValue(this);
    }

    /// <summary>Field number for the "EventRedeemMap" field.</summary>
    public const int EventRedeemMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventRedeem>.Codec _map_eventRedeemMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventRedeem>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventRedeem.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventRedeem> eventRedeemMap_ = new pbc::MapField<int, global::fat.rawdata.EventRedeem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventRedeem> EventRedeemMap {
      get { return eventRedeemMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventRedeemMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventRedeemMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventRedeemMap.Equals(other.EventRedeemMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventRedeemMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventRedeemMap_.WriteTo(output, _map_eventRedeemMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventRedeemMap_.WriteTo(ref output, _map_eventRedeemMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventRedeemMap_.CalculateSize(_map_eventRedeemMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventRedeemMapABValue other) {
      if (other == null) {
        return;
      }
      eventRedeemMap_.Add(other.eventRedeemMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventRedeemMap_.AddEntriesFrom(input, _map_eventRedeemMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventRedeemMap_.AddEntriesFrom(ref input, _map_eventRedeemMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventRedeemConf : pb::IMessage<EventRedeemConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventRedeemConf> _parser = new pb::MessageParser<EventRedeemConf>(() => new EventRedeemConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventRedeemConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventRedeemConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventRedeemConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventRedeemConf(EventRedeemConf other) : this() {
      eventRedeemMap_ = other.eventRedeemMap_.Clone();
      eventRedeemMapAB_ = other.eventRedeemMapAB_.Clone();
      eventRedeemMapABPatch_ = other.eventRedeemMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventRedeemConf Clone() {
      return new EventRedeemConf(this);
    }

    /// <summary>Field number for the "EventRedeemMap" field.</summary>
    public const int EventRedeemMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventRedeem>.Codec _map_eventRedeemMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventRedeem>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventRedeem.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventRedeem> eventRedeemMap_ = new pbc::MapField<int, global::fat.rawdata.EventRedeem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventRedeem> EventRedeemMap {
      get { return eventRedeemMap_; }
    }

    /// <summary>Field number for the "EventRedeemMapAB" field.</summary>
    public const int EventRedeemMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventRedeemMapABValue>.Codec _map_eventRedeemMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventRedeemMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventRedeemMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventRedeemMapABValue> eventRedeemMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventRedeemMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventRedeemMapABValue> EventRedeemMapAB {
      get { return eventRedeemMapAB_; }
    }

    /// <summary>Field number for the "EventRedeemMapABPatch" field.</summary>
    public const int EventRedeemMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventRedeemMapABValue>.Codec _map_eventRedeemMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventRedeemMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventRedeemMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventRedeemMapABValue> eventRedeemMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventRedeemMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventRedeemMapABValue> EventRedeemMapABPatch {
      get { return eventRedeemMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventRedeemConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventRedeemConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventRedeemMap.Equals(other.EventRedeemMap)) return false;
      if (!EventRedeemMapAB.Equals(other.EventRedeemMapAB)) return false;
      if (!EventRedeemMapABPatch.Equals(other.EventRedeemMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventRedeemMap.GetHashCode();
      hash ^= EventRedeemMapAB.GetHashCode();
      hash ^= EventRedeemMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventRedeemMap_.WriteTo(output, _map_eventRedeemMap_codec);
      eventRedeemMapAB_.WriteTo(output, _map_eventRedeemMapAB_codec);
      eventRedeemMapABPatch_.WriteTo(output, _map_eventRedeemMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventRedeemMap_.WriteTo(ref output, _map_eventRedeemMap_codec);
      eventRedeemMapAB_.WriteTo(ref output, _map_eventRedeemMapAB_codec);
      eventRedeemMapABPatch_.WriteTo(ref output, _map_eventRedeemMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventRedeemMap_.CalculateSize(_map_eventRedeemMap_codec);
      size += eventRedeemMapAB_.CalculateSize(_map_eventRedeemMapAB_codec);
      size += eventRedeemMapABPatch_.CalculateSize(_map_eventRedeemMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventRedeemConf other) {
      if (other == null) {
        return;
      }
      eventRedeemMap_.Add(other.eventRedeemMap_);
      eventRedeemMapAB_.Add(other.eventRedeemMapAB_);
      eventRedeemMapABPatch_.Add(other.eventRedeemMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventRedeemMap_.AddEntriesFrom(input, _map_eventRedeemMap_codec);
            break;
          }
          case 18: {
            eventRedeemMapAB_.AddEntriesFrom(input, _map_eventRedeemMapAB_codec);
            break;
          }
          case 26: {
            eventRedeemMapABPatch_.AddEntriesFrom(input, _map_eventRedeemMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventRedeemMap_.AddEntriesFrom(ref input, _map_eventRedeemMap_codec);
            break;
          }
          case 18: {
            eventRedeemMapAB_.AddEntriesFrom(ref input, _map_eventRedeemMapAB_codec);
            break;
          }
          case 26: {
            eventRedeemMapABPatch_.AddEntriesFrom(ref input, _map_eventRedeemMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
