// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/ComMergeToolSourceConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/ComMergeToolSourceConf.proto</summary>
  public static partial class ComMergeToolSourceConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/ComMergeToolSourceConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ComMergeToolSourceConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiRyYXdkYXRhL0NvbU1lcmdlVG9vbFNvdXJjZUNvbmYucHJvdG8SB3Jhd2Rh",
            "dGEiuAEKEkNvbU1lcmdlVG9vbFNvdXJjZRIKCgJpZBgBIAEoBRIQCghjYXBh",
            "Y2l0eRgCIAEoBRIQCghkcm9wSW5mbxgEIAMoBRI/CgpvdXRwdXRJbmZvGAMg",
            "AygLMisucmF3ZGF0YS5Db21NZXJnZVRvb2xTb3VyY2UuT3V0cHV0SW5mb0Vu",
            "dHJ5GjEKD091dHB1dEluZm9FbnRyeRILCgNrZXkYASABKAUSDQoFdmFsdWUY",
            "AiABKAU6AjgBItoBChxDb21NZXJnZVRvb2xTb3VyY2VNYXBBQlZhbHVlEl8K",
            "FUNvbU1lcmdlVG9vbFNvdXJjZU1hcBgBIAMoCzJALnJhd2RhdGEuQ29tTWVy",
            "Z2VUb29sU291cmNlTWFwQUJWYWx1ZS5Db21NZXJnZVRvb2xTb3VyY2VNYXBF",
            "bnRyeRpZChpDb21NZXJnZVRvb2xTb3VyY2VNYXBFbnRyeRILCgNrZXkYASAB",
            "KAUSKgoFdmFsdWUYAiABKAsyGy5yYXdkYXRhLkNvbU1lcmdlVG9vbFNvdXJj",
            "ZToCOAEi6QQKFkNvbU1lcmdlVG9vbFNvdXJjZUNvbmYSWQoVQ29tTWVyZ2VU",
            "b29sU291cmNlTWFwGAEgAygLMjoucmF3ZGF0YS5Db21NZXJnZVRvb2xTb3Vy",
            "Y2VDb25mLkNvbU1lcmdlVG9vbFNvdXJjZU1hcEVudHJ5El0KF0NvbU1lcmdl",
            "VG9vbFNvdXJjZU1hcEFCGAIgAygLMjwucmF3ZGF0YS5Db21NZXJnZVRvb2xT",
            "b3VyY2VDb25mLkNvbU1lcmdlVG9vbFNvdXJjZU1hcEFCRW50cnkSZwocQ29t",
            "TWVyZ2VUb29sU291cmNlTWFwQUJQYXRjaBgDIAMoCzJBLnJhd2RhdGEuQ29t",
            "TWVyZ2VUb29sU291cmNlQ29uZi5Db21NZXJnZVRvb2xTb3VyY2VNYXBBQlBh",
            "dGNoRW50cnkaWQoaQ29tTWVyZ2VUb29sU291cmNlTWFwRW50cnkSCwoDa2V5",
            "GAEgASgFEioKBXZhbHVlGAIgASgLMhsucmF3ZGF0YS5Db21NZXJnZVRvb2xT",
            "b3VyY2U6AjgBGmUKHENvbU1lcmdlVG9vbFNvdXJjZU1hcEFCRW50cnkSCwoD",
            "a2V5GAEgASgJEjQKBXZhbHVlGAIgASgLMiUucmF3ZGF0YS5Db21NZXJnZVRv",
            "b2xTb3VyY2VNYXBBQlZhbHVlOgI4ARpqCiFDb21NZXJnZVRvb2xTb3VyY2VN",
            "YXBBQlBhdGNoRW50cnkSCwoDa2V5GAEgASgJEjQKBXZhbHVlGAIgASgLMiUu",
            "cmF3ZGF0YS5Db21NZXJnZVRvb2xTb3VyY2VNYXBBQlZhbHVlOgI4AUI9Wi1n",
            "aXRsYWIuZnVucGx1cy5pby9mYXQvY29uZi9nZW4vZ29sYW5nL3Jhd2RhdGGq",
            "AgtmYXQucmF3ZGF0YWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.ComMergeToolSource), global::fat.rawdata.ComMergeToolSource.Parser, new[]{ "Id", "Capacity", "DropInfo", "OutputInfo" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.ComMergeToolSourceMapABValue), global::fat.rawdata.ComMergeToolSourceMapABValue.Parser, new[]{ "ComMergeToolSourceMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.ComMergeToolSourceConf), global::fat.rawdata.ComMergeToolSourceConf.Parser, new[]{ "ComMergeToolSourceMap", "ComMergeToolSourceMapAB", "ComMergeToolSourceMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="ComMergeToolSource",table="ComMergeToolSourceMap",table_wrapper="ComMergeToolSourceConf",map="true",map_key_type="int32",data="ComMergeToolSourceConf")
  /// annotation@ab(table_ab="ComMergeToolSourceMapAB",table_ab_patch="ComMergeToolSourceMapABPatch",table_ab_value="ComMergeToolSourceMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@ComMergeToolSource(id="id")
  /// </summary>
  public sealed partial class ComMergeToolSource : pb::IMessage<ComMergeToolSource>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ComMergeToolSource> _parser = new pb::MessageParser<ComMergeToolSource>(() => new ComMergeToolSource());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ComMergeToolSource> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.ComMergeToolSourceConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComMergeToolSource() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComMergeToolSource(ComMergeToolSource other) : this() {
      id_ = other.id_;
      capacity_ = other.capacity_;
      dropInfo_ = other.dropInfo_.Clone();
      outputInfo_ = other.outputInfo_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComMergeToolSource Clone() {
      return new ComMergeToolSource(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 棋子ID
    /// （ObjBasic.id）
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "capacity" field.</summary>
    public const int CapacityFieldNumber = 2;
    private int capacity_;
    /// <summary>
    /// 容量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Capacity {
      get { return capacity_; }
      set {
        capacity_ = value;
      }
    }

    /// <summary>Field number for the "dropInfo" field.</summary>
    public const int DropInfoFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_dropInfo_codec
        = pb::FieldCodec.ForInt32(34);
    private readonly pbc::RepeatedField<int> dropInfo_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 工具箱特殊掉落展示
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> DropInfo {
      get { return dropInfo_; }
    }

    /// <summary>Field number for the "outputInfo" field.</summary>
    public const int OutputInfoFieldNumber = 3;
    private static readonly pbc::MapField<int, int>.Codec _map_outputInfo_codec
        = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForInt32(16, 0), 26);
    private readonly pbc::MapField<int, int> outputInfo_ = new pbc::MapField<int, int>();
    /// <summary>
    /// 掉落信息
    /// {链内等级, 权重}
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, int> OutputInfo {
      get { return outputInfo_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ComMergeToolSource);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ComMergeToolSource other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Capacity != other.Capacity) return false;
      if(!dropInfo_.Equals(other.dropInfo_)) return false;
      if (!OutputInfo.Equals(other.OutputInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Capacity != 0) hash ^= Capacity.GetHashCode();
      hash ^= dropInfo_.GetHashCode();
      hash ^= OutputInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Capacity != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Capacity);
      }
      outputInfo_.WriteTo(output, _map_outputInfo_codec);
      dropInfo_.WriteTo(output, _repeated_dropInfo_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Capacity != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Capacity);
      }
      outputInfo_.WriteTo(ref output, _map_outputInfo_codec);
      dropInfo_.WriteTo(ref output, _repeated_dropInfo_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Capacity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Capacity);
      }
      size += dropInfo_.CalculateSize(_repeated_dropInfo_codec);
      size += outputInfo_.CalculateSize(_map_outputInfo_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ComMergeToolSource other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Capacity != 0) {
        Capacity = other.Capacity;
      }
      dropInfo_.Add(other.dropInfo_);
      outputInfo_.Add(other.outputInfo_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Capacity = input.ReadInt32();
            break;
          }
          case 26: {
            outputInfo_.AddEntriesFrom(input, _map_outputInfo_codec);
            break;
          }
          case 34:
          case 32: {
            dropInfo_.AddEntriesFrom(input, _repeated_dropInfo_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Capacity = input.ReadInt32();
            break;
          }
          case 26: {
            outputInfo_.AddEntriesFrom(ref input, _map_outputInfo_codec);
            break;
          }
          case 34:
          case 32: {
            dropInfo_.AddEntriesFrom(ref input, _repeated_dropInfo_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ComMergeToolSourceMapABValue : pb::IMessage<ComMergeToolSourceMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ComMergeToolSourceMapABValue> _parser = new pb::MessageParser<ComMergeToolSourceMapABValue>(() => new ComMergeToolSourceMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ComMergeToolSourceMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.ComMergeToolSourceConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComMergeToolSourceMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComMergeToolSourceMapABValue(ComMergeToolSourceMapABValue other) : this() {
      comMergeToolSourceMap_ = other.comMergeToolSourceMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComMergeToolSourceMapABValue Clone() {
      return new ComMergeToolSourceMapABValue(this);
    }

    /// <summary>Field number for the "ComMergeToolSourceMap" field.</summary>
    public const int ComMergeToolSourceMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.ComMergeToolSource>.Codec _map_comMergeToolSourceMap_codec
        = new pbc::MapField<int, global::fat.rawdata.ComMergeToolSource>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ComMergeToolSource.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.ComMergeToolSource> comMergeToolSourceMap_ = new pbc::MapField<int, global::fat.rawdata.ComMergeToolSource>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.ComMergeToolSource> ComMergeToolSourceMap {
      get { return comMergeToolSourceMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ComMergeToolSourceMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ComMergeToolSourceMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!ComMergeToolSourceMap.Equals(other.ComMergeToolSourceMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ComMergeToolSourceMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      comMergeToolSourceMap_.WriteTo(output, _map_comMergeToolSourceMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      comMergeToolSourceMap_.WriteTo(ref output, _map_comMergeToolSourceMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += comMergeToolSourceMap_.CalculateSize(_map_comMergeToolSourceMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ComMergeToolSourceMapABValue other) {
      if (other == null) {
        return;
      }
      comMergeToolSourceMap_.Add(other.comMergeToolSourceMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            comMergeToolSourceMap_.AddEntriesFrom(input, _map_comMergeToolSourceMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            comMergeToolSourceMap_.AddEntriesFrom(ref input, _map_comMergeToolSourceMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ComMergeToolSourceConf : pb::IMessage<ComMergeToolSourceConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ComMergeToolSourceConf> _parser = new pb::MessageParser<ComMergeToolSourceConf>(() => new ComMergeToolSourceConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ComMergeToolSourceConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.ComMergeToolSourceConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComMergeToolSourceConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComMergeToolSourceConf(ComMergeToolSourceConf other) : this() {
      comMergeToolSourceMap_ = other.comMergeToolSourceMap_.Clone();
      comMergeToolSourceMapAB_ = other.comMergeToolSourceMapAB_.Clone();
      comMergeToolSourceMapABPatch_ = other.comMergeToolSourceMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComMergeToolSourceConf Clone() {
      return new ComMergeToolSourceConf(this);
    }

    /// <summary>Field number for the "ComMergeToolSourceMap" field.</summary>
    public const int ComMergeToolSourceMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.ComMergeToolSource>.Codec _map_comMergeToolSourceMap_codec
        = new pbc::MapField<int, global::fat.rawdata.ComMergeToolSource>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ComMergeToolSource.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.ComMergeToolSource> comMergeToolSourceMap_ = new pbc::MapField<int, global::fat.rawdata.ComMergeToolSource>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.ComMergeToolSource> ComMergeToolSourceMap {
      get { return comMergeToolSourceMap_; }
    }

    /// <summary>Field number for the "ComMergeToolSourceMapAB" field.</summary>
    public const int ComMergeToolSourceMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.ComMergeToolSourceMapABValue>.Codec _map_comMergeToolSourceMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.ComMergeToolSourceMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ComMergeToolSourceMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.ComMergeToolSourceMapABValue> comMergeToolSourceMapAB_ = new pbc::MapField<string, global::fat.rawdata.ComMergeToolSourceMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.ComMergeToolSourceMapABValue> ComMergeToolSourceMapAB {
      get { return comMergeToolSourceMapAB_; }
    }

    /// <summary>Field number for the "ComMergeToolSourceMapABPatch" field.</summary>
    public const int ComMergeToolSourceMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.ComMergeToolSourceMapABValue>.Codec _map_comMergeToolSourceMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.ComMergeToolSourceMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ComMergeToolSourceMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.ComMergeToolSourceMapABValue> comMergeToolSourceMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.ComMergeToolSourceMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.ComMergeToolSourceMapABValue> ComMergeToolSourceMapABPatch {
      get { return comMergeToolSourceMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ComMergeToolSourceConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ComMergeToolSourceConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!ComMergeToolSourceMap.Equals(other.ComMergeToolSourceMap)) return false;
      if (!ComMergeToolSourceMapAB.Equals(other.ComMergeToolSourceMapAB)) return false;
      if (!ComMergeToolSourceMapABPatch.Equals(other.ComMergeToolSourceMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ComMergeToolSourceMap.GetHashCode();
      hash ^= ComMergeToolSourceMapAB.GetHashCode();
      hash ^= ComMergeToolSourceMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      comMergeToolSourceMap_.WriteTo(output, _map_comMergeToolSourceMap_codec);
      comMergeToolSourceMapAB_.WriteTo(output, _map_comMergeToolSourceMapAB_codec);
      comMergeToolSourceMapABPatch_.WriteTo(output, _map_comMergeToolSourceMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      comMergeToolSourceMap_.WriteTo(ref output, _map_comMergeToolSourceMap_codec);
      comMergeToolSourceMapAB_.WriteTo(ref output, _map_comMergeToolSourceMapAB_codec);
      comMergeToolSourceMapABPatch_.WriteTo(ref output, _map_comMergeToolSourceMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += comMergeToolSourceMap_.CalculateSize(_map_comMergeToolSourceMap_codec);
      size += comMergeToolSourceMapAB_.CalculateSize(_map_comMergeToolSourceMapAB_codec);
      size += comMergeToolSourceMapABPatch_.CalculateSize(_map_comMergeToolSourceMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ComMergeToolSourceConf other) {
      if (other == null) {
        return;
      }
      comMergeToolSourceMap_.Add(other.comMergeToolSourceMap_);
      comMergeToolSourceMapAB_.Add(other.comMergeToolSourceMapAB_);
      comMergeToolSourceMapABPatch_.Add(other.comMergeToolSourceMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            comMergeToolSourceMap_.AddEntriesFrom(input, _map_comMergeToolSourceMap_codec);
            break;
          }
          case 18: {
            comMergeToolSourceMapAB_.AddEntriesFrom(input, _map_comMergeToolSourceMapAB_codec);
            break;
          }
          case 26: {
            comMergeToolSourceMapABPatch_.AddEntriesFrom(input, _map_comMergeToolSourceMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            comMergeToolSourceMap_.AddEntriesFrom(ref input, _map_comMergeToolSourceMap_codec);
            break;
          }
          case 18: {
            comMergeToolSourceMapAB_.AddEntriesFrom(ref input, _map_comMergeToolSourceMapAB_codec);
            break;
          }
          case 26: {
            comMergeToolSourceMapABPatch_.AddEntriesFrom(ref input, _map_comMergeToolSourceMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
