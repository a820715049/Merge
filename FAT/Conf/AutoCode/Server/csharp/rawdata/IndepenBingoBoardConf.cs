// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/IndepenBingoBoardConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/IndepenBingoBoardConf.proto</summary>
  public static partial class IndepenBingoBoardConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/IndepenBingoBoardConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static IndepenBingoBoardConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiNyYXdkYXRhL0luZGVwZW5CaW5nb0JvYXJkQ29uZi5wcm90bxIHcmF3ZGF0",
            "YSKzAQoRSW5kZXBlbkJpbmdvQm9hcmQSCgoCaWQYASABKAUSEAoISXRlbUlu",
            "Zm8YAiADKAkSEwoLYm9hcmRDb2xOdW0YAyABKAUSEwoLYm9hcmRSb3dOdW0Y",
            "BCABKAUSFgoOY29ubmVjdFNwYXduZXIYBSADKAUSEQoJcmV3YXJkQWxsGAYg",
            "AygJEhMKC3Jld2FyZFNsYXNoGAcgAygJEhYKDnJld2FyZFN0cmFpZ2h0GAgg",
            "AygJItQBChtJbmRlcGVuQmluZ29Cb2FyZE1hcEFCVmFsdWUSXAoUSW5kZXBl",
            "bkJpbmdvQm9hcmRNYXAYASADKAsyPi5yYXdkYXRhLkluZGVwZW5CaW5nb0Jv",
            "YXJkTWFwQUJWYWx1ZS5JbmRlcGVuQmluZ29Cb2FyZE1hcEVudHJ5GlcKGUlu",
            "ZGVwZW5CaW5nb0JvYXJkTWFwRW50cnkSCwoDa2V5GAEgASgFEikKBXZhbHVl",
            "GAIgASgLMhoucmF3ZGF0YS5JbmRlcGVuQmluZ29Cb2FyZDoCOAEi2QQKFUlu",
            "ZGVwZW5CaW5nb0JvYXJkQ29uZhJWChRJbmRlcGVuQmluZ29Cb2FyZE1hcBgB",
            "IAMoCzI4LnJhd2RhdGEuSW5kZXBlbkJpbmdvQm9hcmRDb25mLkluZGVwZW5C",
            "aW5nb0JvYXJkTWFwRW50cnkSWgoWSW5kZXBlbkJpbmdvQm9hcmRNYXBBQhgC",
            "IAMoCzI6LnJhd2RhdGEuSW5kZXBlbkJpbmdvQm9hcmRDb25mLkluZGVwZW5C",
            "aW5nb0JvYXJkTWFwQUJFbnRyeRJkChtJbmRlcGVuQmluZ29Cb2FyZE1hcEFC",
            "UGF0Y2gYAyADKAsyPy5yYXdkYXRhLkluZGVwZW5CaW5nb0JvYXJkQ29uZi5J",
            "bmRlcGVuQmluZ29Cb2FyZE1hcEFCUGF0Y2hFbnRyeRpXChlJbmRlcGVuQmlu",
            "Z29Cb2FyZE1hcEVudHJ5EgsKA2tleRgBIAEoBRIpCgV2YWx1ZRgCIAEoCzIa",
            "LnJhd2RhdGEuSW5kZXBlbkJpbmdvQm9hcmQ6AjgBGmMKG0luZGVwZW5CaW5n",
            "b0JvYXJkTWFwQUJFbnRyeRILCgNrZXkYASABKAkSMwoFdmFsdWUYAiABKAsy",
            "JC5yYXdkYXRhLkluZGVwZW5CaW5nb0JvYXJkTWFwQUJWYWx1ZToCOAEaaAog",
            "SW5kZXBlbkJpbmdvQm9hcmRNYXBBQlBhdGNoRW50cnkSCwoDa2V5GAEgASgJ",
            "EjMKBXZhbHVlGAIgASgLMiQucmF3ZGF0YS5JbmRlcGVuQmluZ29Cb2FyZE1h",
            "cEFCVmFsdWU6AjgBQj1aLWdpdGxhYi5mdW5wbHVzLmlvL2ZhdC9jb25mL2dl",
            "bi9nb2xhbmcvcmF3ZGF0YaoCC2ZhdC5yYXdkYXRhYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.IndepenBingoBoard), global::fat.rawdata.IndepenBingoBoard.Parser, new[]{ "Id", "ItemInfo", "BoardColNum", "BoardRowNum", "ConnectSpawner", "RewardAll", "RewardSlash", "RewardStraight" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.IndepenBingoBoardMapABValue), global::fat.rawdata.IndepenBingoBoardMapABValue.Parser, new[]{ "IndepenBingoBoardMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.IndepenBingoBoardConf), global::fat.rawdata.IndepenBingoBoardConf.Parser, new[]{ "IndepenBingoBoardMap", "IndepenBingoBoardMapAB", "IndepenBingoBoardMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="IndepenBingoBoard",table="IndepenBingoBoardMap",table_wrapper="IndepenBingoBoardConf",map="true",map_key_type="int32",data="IndepenBingoBoardConf")
  /// annotation@ab(table_ab="IndepenBingoBoardMapAB",table_ab_patch="IndepenBingoBoardMapABPatch",table_ab_value="IndepenBingoBoardMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@IndepenBingoBoard(id="id")
  /// </summary>
  public sealed partial class IndepenBingoBoard : pb::IMessage<IndepenBingoBoard>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<IndepenBingoBoard> _parser = new pb::MessageParser<IndepenBingoBoard>(() => new IndepenBingoBoard());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IndepenBingoBoard> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.IndepenBingoBoardConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IndepenBingoBoard() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IndepenBingoBoard(IndepenBingoBoard other) : this() {
      id_ = other.id_;
      itemInfo_ = other.itemInfo_.Clone();
      boardColNum_ = other.boardColNum_;
      boardRowNum_ = other.boardRowNum_;
      connectSpawner_ = other.connectSpawner_.Clone();
      rewardAll_ = other.rewardAll_.Clone();
      rewardSlash_ = other.rewardSlash_.Clone();
      rewardStraight_ = other.rewardStraight_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IndepenBingoBoard Clone() {
      return new IndepenBingoBoard(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 棋盘关卡id
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "ItemInfo" field.</summary>
    public const int ItemInfoFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_itemInfo_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> itemInfo_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 棋子ID分布
    /// 横坐标:纵坐标:棋子ID:奖励ID:奖励数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ItemInfo {
      get { return itemInfo_; }
    }

    /// <summary>Field number for the "boardColNum" field.</summary>
    public const int BoardColNumFieldNumber = 3;
    private int boardColNum_;
    /// <summary>
    /// 棋盘关卡列数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BoardColNum {
      get { return boardColNum_; }
      set {
        boardColNum_ = value;
      }
    }

    /// <summary>Field number for the "boardRowNum" field.</summary>
    public const int BoardRowNumFieldNumber = 4;
    private int boardRowNum_;
    /// <summary>
    /// 棋盘关卡行数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BoardRowNum {
      get { return boardRowNum_; }
      set {
        boardRowNum_ = value;
      }
    }

    /// <summary>Field number for the "connectSpawner" field.</summary>
    public const int ConnectSpawnerFieldNumber = 5;
    private static readonly pb::FieldCodec<int> _repeated_connectSpawner_codec
        = pb::FieldCodec.ForInt32(42);
    private readonly pbc::RepeatedField<int> connectSpawner_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 关联的生成器链条ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> ConnectSpawner {
      get { return connectSpawner_; }
    }

    /// <summary>Field number for the "rewardAll" field.</summary>
    public const int RewardAllFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _repeated_rewardAll_codec
        = pb::FieldCodec.ForString(50);
    private readonly pbc::RepeatedField<string> rewardAll_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// bingo全棋盘奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> RewardAll {
      get { return rewardAll_; }
    }

    /// <summary>Field number for the "rewardSlash" field.</summary>
    public const int RewardSlashFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _repeated_rewardSlash_codec
        = pb::FieldCodec.ForString(58);
    private readonly pbc::RepeatedField<string> rewardSlash_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// bingo对角线奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> RewardSlash {
      get { return rewardSlash_; }
    }

    /// <summary>Field number for the "rewardStraight" field.</summary>
    public const int RewardStraightFieldNumber = 8;
    private static readonly pb::FieldCodec<string> _repeated_rewardStraight_codec
        = pb::FieldCodec.ForString(66);
    private readonly pbc::RepeatedField<string> rewardStraight_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// bingo直线奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> RewardStraight {
      get { return rewardStraight_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IndepenBingoBoard);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IndepenBingoBoard other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!itemInfo_.Equals(other.itemInfo_)) return false;
      if (BoardColNum != other.BoardColNum) return false;
      if (BoardRowNum != other.BoardRowNum) return false;
      if(!connectSpawner_.Equals(other.connectSpawner_)) return false;
      if(!rewardAll_.Equals(other.rewardAll_)) return false;
      if(!rewardSlash_.Equals(other.rewardSlash_)) return false;
      if(!rewardStraight_.Equals(other.rewardStraight_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      hash ^= itemInfo_.GetHashCode();
      if (BoardColNum != 0) hash ^= BoardColNum.GetHashCode();
      if (BoardRowNum != 0) hash ^= BoardRowNum.GetHashCode();
      hash ^= connectSpawner_.GetHashCode();
      hash ^= rewardAll_.GetHashCode();
      hash ^= rewardSlash_.GetHashCode();
      hash ^= rewardStraight_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      itemInfo_.WriteTo(output, _repeated_itemInfo_codec);
      if (BoardColNum != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(BoardColNum);
      }
      if (BoardRowNum != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(BoardRowNum);
      }
      connectSpawner_.WriteTo(output, _repeated_connectSpawner_codec);
      rewardAll_.WriteTo(output, _repeated_rewardAll_codec);
      rewardSlash_.WriteTo(output, _repeated_rewardSlash_codec);
      rewardStraight_.WriteTo(output, _repeated_rewardStraight_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      itemInfo_.WriteTo(ref output, _repeated_itemInfo_codec);
      if (BoardColNum != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(BoardColNum);
      }
      if (BoardRowNum != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(BoardRowNum);
      }
      connectSpawner_.WriteTo(ref output, _repeated_connectSpawner_codec);
      rewardAll_.WriteTo(ref output, _repeated_rewardAll_codec);
      rewardSlash_.WriteTo(ref output, _repeated_rewardSlash_codec);
      rewardStraight_.WriteTo(ref output, _repeated_rewardStraight_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      size += itemInfo_.CalculateSize(_repeated_itemInfo_codec);
      if (BoardColNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BoardColNum);
      }
      if (BoardRowNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BoardRowNum);
      }
      size += connectSpawner_.CalculateSize(_repeated_connectSpawner_codec);
      size += rewardAll_.CalculateSize(_repeated_rewardAll_codec);
      size += rewardSlash_.CalculateSize(_repeated_rewardSlash_codec);
      size += rewardStraight_.CalculateSize(_repeated_rewardStraight_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IndepenBingoBoard other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      itemInfo_.Add(other.itemInfo_);
      if (other.BoardColNum != 0) {
        BoardColNum = other.BoardColNum;
      }
      if (other.BoardRowNum != 0) {
        BoardRowNum = other.BoardRowNum;
      }
      connectSpawner_.Add(other.connectSpawner_);
      rewardAll_.Add(other.rewardAll_);
      rewardSlash_.Add(other.rewardSlash_);
      rewardStraight_.Add(other.rewardStraight_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            itemInfo_.AddEntriesFrom(input, _repeated_itemInfo_codec);
            break;
          }
          case 24: {
            BoardColNum = input.ReadInt32();
            break;
          }
          case 32: {
            BoardRowNum = input.ReadInt32();
            break;
          }
          case 42:
          case 40: {
            connectSpawner_.AddEntriesFrom(input, _repeated_connectSpawner_codec);
            break;
          }
          case 50: {
            rewardAll_.AddEntriesFrom(input, _repeated_rewardAll_codec);
            break;
          }
          case 58: {
            rewardSlash_.AddEntriesFrom(input, _repeated_rewardSlash_codec);
            break;
          }
          case 66: {
            rewardStraight_.AddEntriesFrom(input, _repeated_rewardStraight_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            itemInfo_.AddEntriesFrom(ref input, _repeated_itemInfo_codec);
            break;
          }
          case 24: {
            BoardColNum = input.ReadInt32();
            break;
          }
          case 32: {
            BoardRowNum = input.ReadInt32();
            break;
          }
          case 42:
          case 40: {
            connectSpawner_.AddEntriesFrom(ref input, _repeated_connectSpawner_codec);
            break;
          }
          case 50: {
            rewardAll_.AddEntriesFrom(ref input, _repeated_rewardAll_codec);
            break;
          }
          case 58: {
            rewardSlash_.AddEntriesFrom(ref input, _repeated_rewardSlash_codec);
            break;
          }
          case 66: {
            rewardStraight_.AddEntriesFrom(ref input, _repeated_rewardStraight_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class IndepenBingoBoardMapABValue : pb::IMessage<IndepenBingoBoardMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<IndepenBingoBoardMapABValue> _parser = new pb::MessageParser<IndepenBingoBoardMapABValue>(() => new IndepenBingoBoardMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IndepenBingoBoardMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.IndepenBingoBoardConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IndepenBingoBoardMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IndepenBingoBoardMapABValue(IndepenBingoBoardMapABValue other) : this() {
      indepenBingoBoardMap_ = other.indepenBingoBoardMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IndepenBingoBoardMapABValue Clone() {
      return new IndepenBingoBoardMapABValue(this);
    }

    /// <summary>Field number for the "IndepenBingoBoardMap" field.</summary>
    public const int IndepenBingoBoardMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.IndepenBingoBoard>.Codec _map_indepenBingoBoardMap_codec
        = new pbc::MapField<int, global::fat.rawdata.IndepenBingoBoard>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.IndepenBingoBoard.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.IndepenBingoBoard> indepenBingoBoardMap_ = new pbc::MapField<int, global::fat.rawdata.IndepenBingoBoard>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.IndepenBingoBoard> IndepenBingoBoardMap {
      get { return indepenBingoBoardMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IndepenBingoBoardMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IndepenBingoBoardMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!IndepenBingoBoardMap.Equals(other.IndepenBingoBoardMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= IndepenBingoBoardMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      indepenBingoBoardMap_.WriteTo(output, _map_indepenBingoBoardMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      indepenBingoBoardMap_.WriteTo(ref output, _map_indepenBingoBoardMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += indepenBingoBoardMap_.CalculateSize(_map_indepenBingoBoardMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IndepenBingoBoardMapABValue other) {
      if (other == null) {
        return;
      }
      indepenBingoBoardMap_.Add(other.indepenBingoBoardMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            indepenBingoBoardMap_.AddEntriesFrom(input, _map_indepenBingoBoardMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            indepenBingoBoardMap_.AddEntriesFrom(ref input, _map_indepenBingoBoardMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class IndepenBingoBoardConf : pb::IMessage<IndepenBingoBoardConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<IndepenBingoBoardConf> _parser = new pb::MessageParser<IndepenBingoBoardConf>(() => new IndepenBingoBoardConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IndepenBingoBoardConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.IndepenBingoBoardConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IndepenBingoBoardConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IndepenBingoBoardConf(IndepenBingoBoardConf other) : this() {
      indepenBingoBoardMap_ = other.indepenBingoBoardMap_.Clone();
      indepenBingoBoardMapAB_ = other.indepenBingoBoardMapAB_.Clone();
      indepenBingoBoardMapABPatch_ = other.indepenBingoBoardMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IndepenBingoBoardConf Clone() {
      return new IndepenBingoBoardConf(this);
    }

    /// <summary>Field number for the "IndepenBingoBoardMap" field.</summary>
    public const int IndepenBingoBoardMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.IndepenBingoBoard>.Codec _map_indepenBingoBoardMap_codec
        = new pbc::MapField<int, global::fat.rawdata.IndepenBingoBoard>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.IndepenBingoBoard.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.IndepenBingoBoard> indepenBingoBoardMap_ = new pbc::MapField<int, global::fat.rawdata.IndepenBingoBoard>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.IndepenBingoBoard> IndepenBingoBoardMap {
      get { return indepenBingoBoardMap_; }
    }

    /// <summary>Field number for the "IndepenBingoBoardMapAB" field.</summary>
    public const int IndepenBingoBoardMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.IndepenBingoBoardMapABValue>.Codec _map_indepenBingoBoardMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.IndepenBingoBoardMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.IndepenBingoBoardMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.IndepenBingoBoardMapABValue> indepenBingoBoardMapAB_ = new pbc::MapField<string, global::fat.rawdata.IndepenBingoBoardMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.IndepenBingoBoardMapABValue> IndepenBingoBoardMapAB {
      get { return indepenBingoBoardMapAB_; }
    }

    /// <summary>Field number for the "IndepenBingoBoardMapABPatch" field.</summary>
    public const int IndepenBingoBoardMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.IndepenBingoBoardMapABValue>.Codec _map_indepenBingoBoardMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.IndepenBingoBoardMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.IndepenBingoBoardMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.IndepenBingoBoardMapABValue> indepenBingoBoardMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.IndepenBingoBoardMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.IndepenBingoBoardMapABValue> IndepenBingoBoardMapABPatch {
      get { return indepenBingoBoardMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IndepenBingoBoardConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IndepenBingoBoardConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!IndepenBingoBoardMap.Equals(other.IndepenBingoBoardMap)) return false;
      if (!IndepenBingoBoardMapAB.Equals(other.IndepenBingoBoardMapAB)) return false;
      if (!IndepenBingoBoardMapABPatch.Equals(other.IndepenBingoBoardMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= IndepenBingoBoardMap.GetHashCode();
      hash ^= IndepenBingoBoardMapAB.GetHashCode();
      hash ^= IndepenBingoBoardMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      indepenBingoBoardMap_.WriteTo(output, _map_indepenBingoBoardMap_codec);
      indepenBingoBoardMapAB_.WriteTo(output, _map_indepenBingoBoardMapAB_codec);
      indepenBingoBoardMapABPatch_.WriteTo(output, _map_indepenBingoBoardMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      indepenBingoBoardMap_.WriteTo(ref output, _map_indepenBingoBoardMap_codec);
      indepenBingoBoardMapAB_.WriteTo(ref output, _map_indepenBingoBoardMapAB_codec);
      indepenBingoBoardMapABPatch_.WriteTo(ref output, _map_indepenBingoBoardMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += indepenBingoBoardMap_.CalculateSize(_map_indepenBingoBoardMap_codec);
      size += indepenBingoBoardMapAB_.CalculateSize(_map_indepenBingoBoardMapAB_codec);
      size += indepenBingoBoardMapABPatch_.CalculateSize(_map_indepenBingoBoardMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IndepenBingoBoardConf other) {
      if (other == null) {
        return;
      }
      indepenBingoBoardMap_.Add(other.indepenBingoBoardMap_);
      indepenBingoBoardMapAB_.Add(other.indepenBingoBoardMapAB_);
      indepenBingoBoardMapABPatch_.Add(other.indepenBingoBoardMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            indepenBingoBoardMap_.AddEntriesFrom(input, _map_indepenBingoBoardMap_codec);
            break;
          }
          case 18: {
            indepenBingoBoardMapAB_.AddEntriesFrom(input, _map_indepenBingoBoardMapAB_codec);
            break;
          }
          case 26: {
            indepenBingoBoardMapABPatch_.AddEntriesFrom(input, _map_indepenBingoBoardMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            indepenBingoBoardMap_.AddEntriesFrom(ref input, _map_indepenBingoBoardMap_codec);
            break;
          }
          case 18: {
            indepenBingoBoardMapAB_.AddEntriesFrom(ref input, _map_indepenBingoBoardMapAB_codec);
            break;
          }
          case 26: {
            indepenBingoBoardMapABPatch_.AddEntriesFrom(ref input, _map_indepenBingoBoardMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
