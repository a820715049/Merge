// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventMineBoardDetailConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventMineBoardDetailConf.proto</summary>
  public static partial class EventMineBoardDetailConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventMineBoardDetailConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventMineBoardDetailConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiZyYXdkYXRhL0V2ZW50TWluZUJvYXJkRGV0YWlsQ29uZi5wcm90bxIHcmF3",
            "ZGF0YSJeChRFdmVudE1pbmVCb2FyZERldGFpbBIKCgJpZBgBIAEoBRISCgpi",
            "b2FyZFJvd0lkGAIgAygFEhIKCmN5Y2xlU3RhcnQYAyABKAUSEgoKcm93VXBD",
            "b3VudBgEIAEoBSLmAQoeRXZlbnRNaW5lQm9hcmREZXRhaWxNYXBBQlZhbHVl",
            "EmUKF0V2ZW50TWluZUJvYXJkRGV0YWlsTWFwGAEgAygLMkQucmF3ZGF0YS5F",
            "dmVudE1pbmVCb2FyZERldGFpbE1hcEFCVmFsdWUuRXZlbnRNaW5lQm9hcmRE",
            "ZXRhaWxNYXBFbnRyeRpdChxFdmVudE1pbmVCb2FyZERldGFpbE1hcEVudHJ5",
            "EgsKA2tleRgBIAEoBRIsCgV2YWx1ZRgCIAEoCzIdLnJhd2RhdGEuRXZlbnRN",
            "aW5lQm9hcmREZXRhaWw6AjgBIokFChhFdmVudE1pbmVCb2FyZERldGFpbENv",
            "bmYSXwoXRXZlbnRNaW5lQm9hcmREZXRhaWxNYXAYASADKAsyPi5yYXdkYXRh",
            "LkV2ZW50TWluZUJvYXJkRGV0YWlsQ29uZi5FdmVudE1pbmVCb2FyZERldGFp",
            "bE1hcEVudHJ5EmMKGUV2ZW50TWluZUJvYXJkRGV0YWlsTWFwQUIYAiADKAsy",
            "QC5yYXdkYXRhLkV2ZW50TWluZUJvYXJkRGV0YWlsQ29uZi5FdmVudE1pbmVC",
            "b2FyZERldGFpbE1hcEFCRW50cnkSbQoeRXZlbnRNaW5lQm9hcmREZXRhaWxN",
            "YXBBQlBhdGNoGAMgAygLMkUucmF3ZGF0YS5FdmVudE1pbmVCb2FyZERldGFp",
            "bENvbmYuRXZlbnRNaW5lQm9hcmREZXRhaWxNYXBBQlBhdGNoRW50cnkaXQoc",
            "RXZlbnRNaW5lQm9hcmREZXRhaWxNYXBFbnRyeRILCgNrZXkYASABKAUSLAoF",
            "dmFsdWUYAiABKAsyHS5yYXdkYXRhLkV2ZW50TWluZUJvYXJkRGV0YWlsOgI4",
            "ARppCh5FdmVudE1pbmVCb2FyZERldGFpbE1hcEFCRW50cnkSCwoDa2V5GAEg",
            "ASgJEjYKBXZhbHVlGAIgASgLMicucmF3ZGF0YS5FdmVudE1pbmVCb2FyZERl",
            "dGFpbE1hcEFCVmFsdWU6AjgBGm4KI0V2ZW50TWluZUJvYXJkRGV0YWlsTWFw",
            "QUJQYXRjaEVudHJ5EgsKA2tleRgBIAEoCRI2CgV2YWx1ZRgCIAEoCzInLnJh",
            "d2RhdGEuRXZlbnRNaW5lQm9hcmREZXRhaWxNYXBBQlZhbHVlOgI4AUI9Wi1n",
            "aXRsYWIuZnVucGx1cy5pby9mYXQvY29uZi9nZW4vZ29sYW5nL3Jhd2RhdGGq",
            "AgtmYXQucmF3ZGF0YWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventMineBoardDetail), global::fat.rawdata.EventMineBoardDetail.Parser, new[]{ "Id", "BoardRowId", "CycleStart", "RowUpCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventMineBoardDetailMapABValue), global::fat.rawdata.EventMineBoardDetailMapABValue.Parser, new[]{ "EventMineBoardDetailMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventMineBoardDetailConf), global::fat.rawdata.EventMineBoardDetailConf.Parser, new[]{ "EventMineBoardDetailMap", "EventMineBoardDetailMapAB", "EventMineBoardDetailMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventMineBoardDetail",table="EventMineBoardDetailMap",table_wrapper="EventMineBoardDetailConf",map="true",map_key_type="int32",data="EventMineBoardDetailConf")
  /// annotation@ab(table_ab="EventMineBoardDetailMapAB",table_ab_patch="EventMineBoardDetailMapABPatch",table_ab_value="EventMineBoardDetailMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventMineBoardDetail(id="id")
  /// </summary>
  public sealed partial class EventMineBoardDetail : pb::IMessage<EventMineBoardDetail>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventMineBoardDetail> _parser = new pb::MessageParser<EventMineBoardDetail>(() => new EventMineBoardDetail());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventMineBoardDetail> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventMineBoardDetailConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMineBoardDetail() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMineBoardDetail(EventMineBoardDetail other) : this() {
      id_ = other.id_;
      boardRowId_ = other.boardRowId_.Clone();
      cycleStart_ = other.cycleStart_;
      rowUpCount_ = other.rowUpCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMineBoardDetail Clone() {
      return new EventMineBoardDetail(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// id
    /// MergeBoard_detailParam
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "boardRowId" field.</summary>
    public const int BoardRowIdFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_boardRowId_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> boardRowId_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 所有棋盘行id，超过配置数量时，会从cycleStart字段对应的序号位置开始循环
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> BoardRowId {
      get { return boardRowId_; }
    }

    /// <summary>Field number for the "cycleStart" field.</summary>
    public const int CycleStartFieldNumber = 3;
    private int cycleStart_;
    /// <summary>
    /// 循环起始行id，使用时会找到该id在boardRowId字段中对应的实际序号进行循环
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CycleStart {
      get { return cycleStart_; }
      set {
        cycleStart_ = value;
      }
    }

    /// <summary>Field number for the "rowUpCount" field.</summary>
    public const int RowUpCountFieldNumber = 4;
    private int rowUpCount_;
    /// <summary>
    /// 触发上升行数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RowUpCount {
      get { return rowUpCount_; }
      set {
        rowUpCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventMineBoardDetail);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventMineBoardDetail other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!boardRowId_.Equals(other.boardRowId_)) return false;
      if (CycleStart != other.CycleStart) return false;
      if (RowUpCount != other.RowUpCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      hash ^= boardRowId_.GetHashCode();
      if (CycleStart != 0) hash ^= CycleStart.GetHashCode();
      if (RowUpCount != 0) hash ^= RowUpCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      boardRowId_.WriteTo(output, _repeated_boardRowId_codec);
      if (CycleStart != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CycleStart);
      }
      if (RowUpCount != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(RowUpCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      boardRowId_.WriteTo(ref output, _repeated_boardRowId_codec);
      if (CycleStart != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CycleStart);
      }
      if (RowUpCount != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(RowUpCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      size += boardRowId_.CalculateSize(_repeated_boardRowId_codec);
      if (CycleStart != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CycleStart);
      }
      if (RowUpCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RowUpCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventMineBoardDetail other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      boardRowId_.Add(other.boardRowId_);
      if (other.CycleStart != 0) {
        CycleStart = other.CycleStart;
      }
      if (other.RowUpCount != 0) {
        RowUpCount = other.RowUpCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            boardRowId_.AddEntriesFrom(input, _repeated_boardRowId_codec);
            break;
          }
          case 24: {
            CycleStart = input.ReadInt32();
            break;
          }
          case 32: {
            RowUpCount = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            boardRowId_.AddEntriesFrom(ref input, _repeated_boardRowId_codec);
            break;
          }
          case 24: {
            CycleStart = input.ReadInt32();
            break;
          }
          case 32: {
            RowUpCount = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventMineBoardDetailMapABValue : pb::IMessage<EventMineBoardDetailMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventMineBoardDetailMapABValue> _parser = new pb::MessageParser<EventMineBoardDetailMapABValue>(() => new EventMineBoardDetailMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventMineBoardDetailMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventMineBoardDetailConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMineBoardDetailMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMineBoardDetailMapABValue(EventMineBoardDetailMapABValue other) : this() {
      eventMineBoardDetailMap_ = other.eventMineBoardDetailMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMineBoardDetailMapABValue Clone() {
      return new EventMineBoardDetailMapABValue(this);
    }

    /// <summary>Field number for the "EventMineBoardDetailMap" field.</summary>
    public const int EventMineBoardDetailMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventMineBoardDetail>.Codec _map_eventMineBoardDetailMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventMineBoardDetail>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventMineBoardDetail.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventMineBoardDetail> eventMineBoardDetailMap_ = new pbc::MapField<int, global::fat.rawdata.EventMineBoardDetail>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventMineBoardDetail> EventMineBoardDetailMap {
      get { return eventMineBoardDetailMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventMineBoardDetailMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventMineBoardDetailMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventMineBoardDetailMap.Equals(other.EventMineBoardDetailMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventMineBoardDetailMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventMineBoardDetailMap_.WriteTo(output, _map_eventMineBoardDetailMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventMineBoardDetailMap_.WriteTo(ref output, _map_eventMineBoardDetailMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventMineBoardDetailMap_.CalculateSize(_map_eventMineBoardDetailMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventMineBoardDetailMapABValue other) {
      if (other == null) {
        return;
      }
      eventMineBoardDetailMap_.Add(other.eventMineBoardDetailMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventMineBoardDetailMap_.AddEntriesFrom(input, _map_eventMineBoardDetailMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventMineBoardDetailMap_.AddEntriesFrom(ref input, _map_eventMineBoardDetailMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventMineBoardDetailConf : pb::IMessage<EventMineBoardDetailConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventMineBoardDetailConf> _parser = new pb::MessageParser<EventMineBoardDetailConf>(() => new EventMineBoardDetailConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventMineBoardDetailConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventMineBoardDetailConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMineBoardDetailConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMineBoardDetailConf(EventMineBoardDetailConf other) : this() {
      eventMineBoardDetailMap_ = other.eventMineBoardDetailMap_.Clone();
      eventMineBoardDetailMapAB_ = other.eventMineBoardDetailMapAB_.Clone();
      eventMineBoardDetailMapABPatch_ = other.eventMineBoardDetailMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMineBoardDetailConf Clone() {
      return new EventMineBoardDetailConf(this);
    }

    /// <summary>Field number for the "EventMineBoardDetailMap" field.</summary>
    public const int EventMineBoardDetailMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventMineBoardDetail>.Codec _map_eventMineBoardDetailMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventMineBoardDetail>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventMineBoardDetail.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventMineBoardDetail> eventMineBoardDetailMap_ = new pbc::MapField<int, global::fat.rawdata.EventMineBoardDetail>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventMineBoardDetail> EventMineBoardDetailMap {
      get { return eventMineBoardDetailMap_; }
    }

    /// <summary>Field number for the "EventMineBoardDetailMapAB" field.</summary>
    public const int EventMineBoardDetailMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventMineBoardDetailMapABValue>.Codec _map_eventMineBoardDetailMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventMineBoardDetailMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventMineBoardDetailMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventMineBoardDetailMapABValue> eventMineBoardDetailMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventMineBoardDetailMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventMineBoardDetailMapABValue> EventMineBoardDetailMapAB {
      get { return eventMineBoardDetailMapAB_; }
    }

    /// <summary>Field number for the "EventMineBoardDetailMapABPatch" field.</summary>
    public const int EventMineBoardDetailMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventMineBoardDetailMapABValue>.Codec _map_eventMineBoardDetailMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventMineBoardDetailMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventMineBoardDetailMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventMineBoardDetailMapABValue> eventMineBoardDetailMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventMineBoardDetailMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventMineBoardDetailMapABValue> EventMineBoardDetailMapABPatch {
      get { return eventMineBoardDetailMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventMineBoardDetailConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventMineBoardDetailConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventMineBoardDetailMap.Equals(other.EventMineBoardDetailMap)) return false;
      if (!EventMineBoardDetailMapAB.Equals(other.EventMineBoardDetailMapAB)) return false;
      if (!EventMineBoardDetailMapABPatch.Equals(other.EventMineBoardDetailMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventMineBoardDetailMap.GetHashCode();
      hash ^= EventMineBoardDetailMapAB.GetHashCode();
      hash ^= EventMineBoardDetailMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventMineBoardDetailMap_.WriteTo(output, _map_eventMineBoardDetailMap_codec);
      eventMineBoardDetailMapAB_.WriteTo(output, _map_eventMineBoardDetailMapAB_codec);
      eventMineBoardDetailMapABPatch_.WriteTo(output, _map_eventMineBoardDetailMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventMineBoardDetailMap_.WriteTo(ref output, _map_eventMineBoardDetailMap_codec);
      eventMineBoardDetailMapAB_.WriteTo(ref output, _map_eventMineBoardDetailMapAB_codec);
      eventMineBoardDetailMapABPatch_.WriteTo(ref output, _map_eventMineBoardDetailMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventMineBoardDetailMap_.CalculateSize(_map_eventMineBoardDetailMap_codec);
      size += eventMineBoardDetailMapAB_.CalculateSize(_map_eventMineBoardDetailMapAB_codec);
      size += eventMineBoardDetailMapABPatch_.CalculateSize(_map_eventMineBoardDetailMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventMineBoardDetailConf other) {
      if (other == null) {
        return;
      }
      eventMineBoardDetailMap_.Add(other.eventMineBoardDetailMap_);
      eventMineBoardDetailMapAB_.Add(other.eventMineBoardDetailMapAB_);
      eventMineBoardDetailMapABPatch_.Add(other.eventMineBoardDetailMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventMineBoardDetailMap_.AddEntriesFrom(input, _map_eventMineBoardDetailMap_codec);
            break;
          }
          case 18: {
            eventMineBoardDetailMapAB_.AddEntriesFrom(input, _map_eventMineBoardDetailMapAB_codec);
            break;
          }
          case 26: {
            eventMineBoardDetailMapABPatch_.AddEntriesFrom(input, _map_eventMineBoardDetailMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventMineBoardDetailMap_.AddEntriesFrom(ref input, _map_eventMineBoardDetailMap_codec);
            break;
          }
          case 18: {
            eventMineBoardDetailMapAB_.AddEntriesFrom(ref input, _map_eventMineBoardDetailMapAB_codec);
            break;
          }
          case 26: {
            eventMineBoardDetailMapABPatch_.AddEntriesFrom(ref input, _map_eventMineBoardDetailMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
