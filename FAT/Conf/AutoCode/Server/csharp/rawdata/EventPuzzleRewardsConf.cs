// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventPuzzleRewardsConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventPuzzleRewardsConf.proto</summary>
  public static partial class EventPuzzleRewardsConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventPuzzleRewardsConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventPuzzleRewardsConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiRyYXdkYXRhL0V2ZW50UHV6emxlUmV3YXJkc0NvbmYucHJvdG8SB3Jhd2Rh",
            "dGEiQQoSRXZlbnRQdXp6bGVSZXdhcmRzEgoKAmlkGAEgASgFEg0KBWltYWdl",
            "GAMgASgJEhAKCHJld2FyZElkGAIgAygJItoBChxFdmVudFB1enpsZVJld2Fy",
            "ZHNNYXBBQlZhbHVlEl8KFUV2ZW50UHV6emxlUmV3YXJkc01hcBgBIAMoCzJA",
            "LnJhd2RhdGEuRXZlbnRQdXp6bGVSZXdhcmRzTWFwQUJWYWx1ZS5FdmVudFB1",
            "enpsZVJld2FyZHNNYXBFbnRyeRpZChpFdmVudFB1enpsZVJld2FyZHNNYXBF",
            "bnRyeRILCgNrZXkYASABKAUSKgoFdmFsdWUYAiABKAsyGy5yYXdkYXRhLkV2",
            "ZW50UHV6emxlUmV3YXJkczoCOAEi6QQKFkV2ZW50UHV6emxlUmV3YXJkc0Nv",
            "bmYSWQoVRXZlbnRQdXp6bGVSZXdhcmRzTWFwGAEgAygLMjoucmF3ZGF0YS5F",
            "dmVudFB1enpsZVJld2FyZHNDb25mLkV2ZW50UHV6emxlUmV3YXJkc01hcEVu",
            "dHJ5El0KF0V2ZW50UHV6emxlUmV3YXJkc01hcEFCGAIgAygLMjwucmF3ZGF0",
            "YS5FdmVudFB1enpsZVJld2FyZHNDb25mLkV2ZW50UHV6emxlUmV3YXJkc01h",
            "cEFCRW50cnkSZwocRXZlbnRQdXp6bGVSZXdhcmRzTWFwQUJQYXRjaBgDIAMo",
            "CzJBLnJhd2RhdGEuRXZlbnRQdXp6bGVSZXdhcmRzQ29uZi5FdmVudFB1enps",
            "ZVJld2FyZHNNYXBBQlBhdGNoRW50cnkaWQoaRXZlbnRQdXp6bGVSZXdhcmRz",
            "TWFwRW50cnkSCwoDa2V5GAEgASgFEioKBXZhbHVlGAIgASgLMhsucmF3ZGF0",
            "YS5FdmVudFB1enpsZVJld2FyZHM6AjgBGmUKHEV2ZW50UHV6emxlUmV3YXJk",
            "c01hcEFCRW50cnkSCwoDa2V5GAEgASgJEjQKBXZhbHVlGAIgASgLMiUucmF3",
            "ZGF0YS5FdmVudFB1enpsZVJld2FyZHNNYXBBQlZhbHVlOgI4ARpqCiFFdmVu",
            "dFB1enpsZVJld2FyZHNNYXBBQlBhdGNoRW50cnkSCwoDa2V5GAEgASgJEjQK",
            "BXZhbHVlGAIgASgLMiUucmF3ZGF0YS5FdmVudFB1enpsZVJld2FyZHNNYXBB",
            "QlZhbHVlOgI4AUI9Wi1naXRsYWIuZnVucGx1cy5pby9mYXQvY29uZi9nZW4v",
            "Z29sYW5nL3Jhd2RhdGGqAgtmYXQucmF3ZGF0YWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventPuzzleRewards), global::fat.rawdata.EventPuzzleRewards.Parser, new[]{ "Id", "Image", "RewardId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventPuzzleRewardsMapABValue), global::fat.rawdata.EventPuzzleRewardsMapABValue.Parser, new[]{ "EventPuzzleRewardsMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventPuzzleRewardsConf), global::fat.rawdata.EventPuzzleRewardsConf.Parser, new[]{ "EventPuzzleRewardsMap", "EventPuzzleRewardsMapAB", "EventPuzzleRewardsMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventPuzzleRewards",table="EventPuzzleRewardsMap",table_wrapper="EventPuzzleRewardsConf",map="true",map_key_type="int32",data="EventPuzzleRewardsConf")
  /// annotation@ab(table_ab="EventPuzzleRewardsMapAB",table_ab_patch="EventPuzzleRewardsMapABPatch",table_ab_value="EventPuzzleRewardsMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventPuzzleRewards(id="id")
  /// </summary>
  public sealed partial class EventPuzzleRewards : pb::IMessage<EventPuzzleRewards>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventPuzzleRewards> _parser = new pb::MessageParser<EventPuzzleRewards>(() => new EventPuzzleRewards());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventPuzzleRewards> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventPuzzleRewardsConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventPuzzleRewards() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventPuzzleRewards(EventPuzzleRewards other) : this() {
      id_ = other.id_;
      image_ = other.image_;
      rewardId_ = other.rewardId_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventPuzzleRewards Clone() {
      return new EventPuzzleRewards(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// id
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "image" field.</summary>
    public const int ImageFieldNumber = 3;
    private string image_ = "";
    /// <summary>
    /// 礼盒图片
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Image {
      get { return image_; }
      set {
        image_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "rewardId" field.</summary>
    public const int RewardIdFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_rewardId_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> rewardId_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 奖励内容
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> RewardId {
      get { return rewardId_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventPuzzleRewards);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventPuzzleRewards other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Image != other.Image) return false;
      if(!rewardId_.Equals(other.rewardId_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Image.Length != 0) hash ^= Image.GetHashCode();
      hash ^= rewardId_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      rewardId_.WriteTo(output, _repeated_rewardId_codec);
      if (Image.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Image);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      rewardId_.WriteTo(ref output, _repeated_rewardId_codec);
      if (Image.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Image);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Image.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Image);
      }
      size += rewardId_.CalculateSize(_repeated_rewardId_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventPuzzleRewards other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Image.Length != 0) {
        Image = other.Image;
      }
      rewardId_.Add(other.rewardId_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            rewardId_.AddEntriesFrom(input, _repeated_rewardId_codec);
            break;
          }
          case 26: {
            Image = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            rewardId_.AddEntriesFrom(ref input, _repeated_rewardId_codec);
            break;
          }
          case 26: {
            Image = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventPuzzleRewardsMapABValue : pb::IMessage<EventPuzzleRewardsMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventPuzzleRewardsMapABValue> _parser = new pb::MessageParser<EventPuzzleRewardsMapABValue>(() => new EventPuzzleRewardsMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventPuzzleRewardsMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventPuzzleRewardsConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventPuzzleRewardsMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventPuzzleRewardsMapABValue(EventPuzzleRewardsMapABValue other) : this() {
      eventPuzzleRewardsMap_ = other.eventPuzzleRewardsMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventPuzzleRewardsMapABValue Clone() {
      return new EventPuzzleRewardsMapABValue(this);
    }

    /// <summary>Field number for the "EventPuzzleRewardsMap" field.</summary>
    public const int EventPuzzleRewardsMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventPuzzleRewards>.Codec _map_eventPuzzleRewardsMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventPuzzleRewards>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventPuzzleRewards.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventPuzzleRewards> eventPuzzleRewardsMap_ = new pbc::MapField<int, global::fat.rawdata.EventPuzzleRewards>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventPuzzleRewards> EventPuzzleRewardsMap {
      get { return eventPuzzleRewardsMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventPuzzleRewardsMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventPuzzleRewardsMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventPuzzleRewardsMap.Equals(other.EventPuzzleRewardsMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventPuzzleRewardsMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventPuzzleRewardsMap_.WriteTo(output, _map_eventPuzzleRewardsMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventPuzzleRewardsMap_.WriteTo(ref output, _map_eventPuzzleRewardsMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventPuzzleRewardsMap_.CalculateSize(_map_eventPuzzleRewardsMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventPuzzleRewardsMapABValue other) {
      if (other == null) {
        return;
      }
      eventPuzzleRewardsMap_.Add(other.eventPuzzleRewardsMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventPuzzleRewardsMap_.AddEntriesFrom(input, _map_eventPuzzleRewardsMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventPuzzleRewardsMap_.AddEntriesFrom(ref input, _map_eventPuzzleRewardsMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventPuzzleRewardsConf : pb::IMessage<EventPuzzleRewardsConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventPuzzleRewardsConf> _parser = new pb::MessageParser<EventPuzzleRewardsConf>(() => new EventPuzzleRewardsConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventPuzzleRewardsConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventPuzzleRewardsConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventPuzzleRewardsConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventPuzzleRewardsConf(EventPuzzleRewardsConf other) : this() {
      eventPuzzleRewardsMap_ = other.eventPuzzleRewardsMap_.Clone();
      eventPuzzleRewardsMapAB_ = other.eventPuzzleRewardsMapAB_.Clone();
      eventPuzzleRewardsMapABPatch_ = other.eventPuzzleRewardsMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventPuzzleRewardsConf Clone() {
      return new EventPuzzleRewardsConf(this);
    }

    /// <summary>Field number for the "EventPuzzleRewardsMap" field.</summary>
    public const int EventPuzzleRewardsMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventPuzzleRewards>.Codec _map_eventPuzzleRewardsMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventPuzzleRewards>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventPuzzleRewards.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventPuzzleRewards> eventPuzzleRewardsMap_ = new pbc::MapField<int, global::fat.rawdata.EventPuzzleRewards>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventPuzzleRewards> EventPuzzleRewardsMap {
      get { return eventPuzzleRewardsMap_; }
    }

    /// <summary>Field number for the "EventPuzzleRewardsMapAB" field.</summary>
    public const int EventPuzzleRewardsMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventPuzzleRewardsMapABValue>.Codec _map_eventPuzzleRewardsMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventPuzzleRewardsMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventPuzzleRewardsMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventPuzzleRewardsMapABValue> eventPuzzleRewardsMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventPuzzleRewardsMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventPuzzleRewardsMapABValue> EventPuzzleRewardsMapAB {
      get { return eventPuzzleRewardsMapAB_; }
    }

    /// <summary>Field number for the "EventPuzzleRewardsMapABPatch" field.</summary>
    public const int EventPuzzleRewardsMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventPuzzleRewardsMapABValue>.Codec _map_eventPuzzleRewardsMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventPuzzleRewardsMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventPuzzleRewardsMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventPuzzleRewardsMapABValue> eventPuzzleRewardsMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventPuzzleRewardsMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventPuzzleRewardsMapABValue> EventPuzzleRewardsMapABPatch {
      get { return eventPuzzleRewardsMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventPuzzleRewardsConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventPuzzleRewardsConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventPuzzleRewardsMap.Equals(other.EventPuzzleRewardsMap)) return false;
      if (!EventPuzzleRewardsMapAB.Equals(other.EventPuzzleRewardsMapAB)) return false;
      if (!EventPuzzleRewardsMapABPatch.Equals(other.EventPuzzleRewardsMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventPuzzleRewardsMap.GetHashCode();
      hash ^= EventPuzzleRewardsMapAB.GetHashCode();
      hash ^= EventPuzzleRewardsMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventPuzzleRewardsMap_.WriteTo(output, _map_eventPuzzleRewardsMap_codec);
      eventPuzzleRewardsMapAB_.WriteTo(output, _map_eventPuzzleRewardsMapAB_codec);
      eventPuzzleRewardsMapABPatch_.WriteTo(output, _map_eventPuzzleRewardsMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventPuzzleRewardsMap_.WriteTo(ref output, _map_eventPuzzleRewardsMap_codec);
      eventPuzzleRewardsMapAB_.WriteTo(ref output, _map_eventPuzzleRewardsMapAB_codec);
      eventPuzzleRewardsMapABPatch_.WriteTo(ref output, _map_eventPuzzleRewardsMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventPuzzleRewardsMap_.CalculateSize(_map_eventPuzzleRewardsMap_codec);
      size += eventPuzzleRewardsMapAB_.CalculateSize(_map_eventPuzzleRewardsMapAB_codec);
      size += eventPuzzleRewardsMapABPatch_.CalculateSize(_map_eventPuzzleRewardsMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventPuzzleRewardsConf other) {
      if (other == null) {
        return;
      }
      eventPuzzleRewardsMap_.Add(other.eventPuzzleRewardsMap_);
      eventPuzzleRewardsMapAB_.Add(other.eventPuzzleRewardsMapAB_);
      eventPuzzleRewardsMapABPatch_.Add(other.eventPuzzleRewardsMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventPuzzleRewardsMap_.AddEntriesFrom(input, _map_eventPuzzleRewardsMap_codec);
            break;
          }
          case 18: {
            eventPuzzleRewardsMapAB_.AddEntriesFrom(input, _map_eventPuzzleRewardsMapAB_codec);
            break;
          }
          case 26: {
            eventPuzzleRewardsMapABPatch_.AddEntriesFrom(input, _map_eventPuzzleRewardsMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventPuzzleRewardsMap_.AddEntriesFrom(ref input, _map_eventPuzzleRewardsMap_codec);
            break;
          }
          case 18: {
            eventPuzzleRewardsMapAB_.AddEntriesFrom(ref input, _map_eventPuzzleRewardsMapAB_codec);
            break;
          }
          case 26: {
            eventPuzzleRewardsMapABPatch_.AddEntriesFrom(ref input, _map_eventPuzzleRewardsMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
