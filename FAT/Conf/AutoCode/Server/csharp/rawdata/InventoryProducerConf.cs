// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/InventoryProducerConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/InventoryProducerConf.proto</summary>
  public static partial class InventoryProducerConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/InventoryProducerConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static InventoryProducerConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiNyYXdkYXRhL0ludmVudG9yeVByb2R1Y2VyQ29uZi5wcm90bxIHcmF3ZGF0",
            "YSJYChFJbnZlbnRvcnlQcm9kdWNlchIKCgJpZBgBIAEoBRIOCgZpc1Nob3cY",
            "BCABKAgSEgoKb2JqQmFzaWNJZBgCIAEoBRITCgt1bmxvY2tMZXZlbBgDIAEo",
            "BSLUAQobSW52ZW50b3J5UHJvZHVjZXJNYXBBQlZhbHVlElwKFEludmVudG9y",
            "eVByb2R1Y2VyTWFwGAEgAygLMj4ucmF3ZGF0YS5JbnZlbnRvcnlQcm9kdWNl",
            "ck1hcEFCVmFsdWUuSW52ZW50b3J5UHJvZHVjZXJNYXBFbnRyeRpXChlJbnZl",
            "bnRvcnlQcm9kdWNlck1hcEVudHJ5EgsKA2tleRgBIAEoBRIpCgV2YWx1ZRgC",
            "IAEoCzIaLnJhd2RhdGEuSW52ZW50b3J5UHJvZHVjZXI6AjgBItkEChVJbnZl",
            "bnRvcnlQcm9kdWNlckNvbmYSVgoUSW52ZW50b3J5UHJvZHVjZXJNYXAYASAD",
            "KAsyOC5yYXdkYXRhLkludmVudG9yeVByb2R1Y2VyQ29uZi5JbnZlbnRvcnlQ",
            "cm9kdWNlck1hcEVudHJ5EloKFkludmVudG9yeVByb2R1Y2VyTWFwQUIYAiAD",
            "KAsyOi5yYXdkYXRhLkludmVudG9yeVByb2R1Y2VyQ29uZi5JbnZlbnRvcnlQ",
            "cm9kdWNlck1hcEFCRW50cnkSZAobSW52ZW50b3J5UHJvZHVjZXJNYXBBQlBh",
            "dGNoGAMgAygLMj8ucmF3ZGF0YS5JbnZlbnRvcnlQcm9kdWNlckNvbmYuSW52",
            "ZW50b3J5UHJvZHVjZXJNYXBBQlBhdGNoRW50cnkaVwoZSW52ZW50b3J5UHJv",
            "ZHVjZXJNYXBFbnRyeRILCgNrZXkYASABKAUSKQoFdmFsdWUYAiABKAsyGi5y",
            "YXdkYXRhLkludmVudG9yeVByb2R1Y2VyOgI4ARpjChtJbnZlbnRvcnlQcm9k",
            "dWNlck1hcEFCRW50cnkSCwoDa2V5GAEgASgJEjMKBXZhbHVlGAIgASgLMiQu",
            "cmF3ZGF0YS5JbnZlbnRvcnlQcm9kdWNlck1hcEFCVmFsdWU6AjgBGmgKIElu",
            "dmVudG9yeVByb2R1Y2VyTWFwQUJQYXRjaEVudHJ5EgsKA2tleRgBIAEoCRIz",
            "CgV2YWx1ZRgCIAEoCzIkLnJhd2RhdGEuSW52ZW50b3J5UHJvZHVjZXJNYXBB",
            "QlZhbHVlOgI4AUI9Wi1naXRsYWIuZnVucGx1cy5pby9mYXQvY29uZi9nZW4v",
            "Z29sYW5nL3Jhd2RhdGGqAgtmYXQucmF3ZGF0YWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.InventoryProducer), global::fat.rawdata.InventoryProducer.Parser, new[]{ "Id", "IsShow", "ObjBasicId", "UnlockLevel" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.InventoryProducerMapABValue), global::fat.rawdata.InventoryProducerMapABValue.Parser, new[]{ "InventoryProducerMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.InventoryProducerConf), global::fat.rawdata.InventoryProducerConf.Parser, new[]{ "InventoryProducerMap", "InventoryProducerMapAB", "InventoryProducerMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="InventoryProducer",table="InventoryProducerMap",table_wrapper="InventoryProducerConf",map="true",map_key_type="int32",data="InventoryProducerConf")
  /// annotation@ab(table_ab="InventoryProducerMapAB",table_ab_patch="InventoryProducerMapABPatch",table_ab_value="InventoryProducerMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@InventoryProducer(id="id")
  /// </summary>
  public sealed partial class InventoryProducer : pb::IMessage<InventoryProducer>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InventoryProducer> _parser = new pb::MessageParser<InventoryProducer>(() => new InventoryProducer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InventoryProducer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.InventoryProducerConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InventoryProducer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InventoryProducer(InventoryProducer other) : this() {
      id_ = other.id_;
      isShow_ = other.isShow_;
      objBasicId_ = other.objBasicId_;
      unlockLevel_ = other.unlockLevel_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InventoryProducer Clone() {
      return new InventoryProducer(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 生成器仓库格子ID
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "isShow" field.</summary>
    public const int IsShowFieldNumber = 4;
    private bool isShow_;
    /// <summary>
    /// 玩家升级时是否提示
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsShow {
      get { return isShow_; }
      set {
        isShow_ = value;
      }
    }

    /// <summary>Field number for the "objBasicId" field.</summary>
    public const int ObjBasicIdFieldNumber = 2;
    private int objBasicId_;
    /// <summary>
    /// 对应物品ID
    /// （ObjBasic.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ObjBasicId {
      get { return objBasicId_; }
      set {
        objBasicId_ = value;
      }
    }

    /// <summary>Field number for the "unlockLevel" field.</summary>
    public const int UnlockLevelFieldNumber = 3;
    private int unlockLevel_;
    /// <summary>
    /// 解锁所需玩家等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnlockLevel {
      get { return unlockLevel_; }
      set {
        unlockLevel_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InventoryProducer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InventoryProducer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (IsShow != other.IsShow) return false;
      if (ObjBasicId != other.ObjBasicId) return false;
      if (UnlockLevel != other.UnlockLevel) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (IsShow != false) hash ^= IsShow.GetHashCode();
      if (ObjBasicId != 0) hash ^= ObjBasicId.GetHashCode();
      if (UnlockLevel != 0) hash ^= UnlockLevel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (ObjBasicId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ObjBasicId);
      }
      if (UnlockLevel != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(UnlockLevel);
      }
      if (IsShow != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsShow);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (ObjBasicId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ObjBasicId);
      }
      if (UnlockLevel != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(UnlockLevel);
      }
      if (IsShow != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsShow);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (IsShow != false) {
        size += 1 + 1;
      }
      if (ObjBasicId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ObjBasicId);
      }
      if (UnlockLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnlockLevel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InventoryProducer other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.IsShow != false) {
        IsShow = other.IsShow;
      }
      if (other.ObjBasicId != 0) {
        ObjBasicId = other.ObjBasicId;
      }
      if (other.UnlockLevel != 0) {
        UnlockLevel = other.UnlockLevel;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            ObjBasicId = input.ReadInt32();
            break;
          }
          case 24: {
            UnlockLevel = input.ReadInt32();
            break;
          }
          case 32: {
            IsShow = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            ObjBasicId = input.ReadInt32();
            break;
          }
          case 24: {
            UnlockLevel = input.ReadInt32();
            break;
          }
          case 32: {
            IsShow = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class InventoryProducerMapABValue : pb::IMessage<InventoryProducerMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InventoryProducerMapABValue> _parser = new pb::MessageParser<InventoryProducerMapABValue>(() => new InventoryProducerMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InventoryProducerMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.InventoryProducerConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InventoryProducerMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InventoryProducerMapABValue(InventoryProducerMapABValue other) : this() {
      inventoryProducerMap_ = other.inventoryProducerMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InventoryProducerMapABValue Clone() {
      return new InventoryProducerMapABValue(this);
    }

    /// <summary>Field number for the "InventoryProducerMap" field.</summary>
    public const int InventoryProducerMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.InventoryProducer>.Codec _map_inventoryProducerMap_codec
        = new pbc::MapField<int, global::fat.rawdata.InventoryProducer>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.InventoryProducer.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.InventoryProducer> inventoryProducerMap_ = new pbc::MapField<int, global::fat.rawdata.InventoryProducer>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.InventoryProducer> InventoryProducerMap {
      get { return inventoryProducerMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InventoryProducerMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InventoryProducerMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!InventoryProducerMap.Equals(other.InventoryProducerMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= InventoryProducerMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      inventoryProducerMap_.WriteTo(output, _map_inventoryProducerMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      inventoryProducerMap_.WriteTo(ref output, _map_inventoryProducerMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += inventoryProducerMap_.CalculateSize(_map_inventoryProducerMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InventoryProducerMapABValue other) {
      if (other == null) {
        return;
      }
      inventoryProducerMap_.Add(other.inventoryProducerMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            inventoryProducerMap_.AddEntriesFrom(input, _map_inventoryProducerMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            inventoryProducerMap_.AddEntriesFrom(ref input, _map_inventoryProducerMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class InventoryProducerConf : pb::IMessage<InventoryProducerConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InventoryProducerConf> _parser = new pb::MessageParser<InventoryProducerConf>(() => new InventoryProducerConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InventoryProducerConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.InventoryProducerConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InventoryProducerConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InventoryProducerConf(InventoryProducerConf other) : this() {
      inventoryProducerMap_ = other.inventoryProducerMap_.Clone();
      inventoryProducerMapAB_ = other.inventoryProducerMapAB_.Clone();
      inventoryProducerMapABPatch_ = other.inventoryProducerMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InventoryProducerConf Clone() {
      return new InventoryProducerConf(this);
    }

    /// <summary>Field number for the "InventoryProducerMap" field.</summary>
    public const int InventoryProducerMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.InventoryProducer>.Codec _map_inventoryProducerMap_codec
        = new pbc::MapField<int, global::fat.rawdata.InventoryProducer>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.InventoryProducer.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.InventoryProducer> inventoryProducerMap_ = new pbc::MapField<int, global::fat.rawdata.InventoryProducer>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.InventoryProducer> InventoryProducerMap {
      get { return inventoryProducerMap_; }
    }

    /// <summary>Field number for the "InventoryProducerMapAB" field.</summary>
    public const int InventoryProducerMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.InventoryProducerMapABValue>.Codec _map_inventoryProducerMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.InventoryProducerMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.InventoryProducerMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.InventoryProducerMapABValue> inventoryProducerMapAB_ = new pbc::MapField<string, global::fat.rawdata.InventoryProducerMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.InventoryProducerMapABValue> InventoryProducerMapAB {
      get { return inventoryProducerMapAB_; }
    }

    /// <summary>Field number for the "InventoryProducerMapABPatch" field.</summary>
    public const int InventoryProducerMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.InventoryProducerMapABValue>.Codec _map_inventoryProducerMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.InventoryProducerMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.InventoryProducerMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.InventoryProducerMapABValue> inventoryProducerMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.InventoryProducerMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.InventoryProducerMapABValue> InventoryProducerMapABPatch {
      get { return inventoryProducerMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InventoryProducerConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InventoryProducerConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!InventoryProducerMap.Equals(other.InventoryProducerMap)) return false;
      if (!InventoryProducerMapAB.Equals(other.InventoryProducerMapAB)) return false;
      if (!InventoryProducerMapABPatch.Equals(other.InventoryProducerMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= InventoryProducerMap.GetHashCode();
      hash ^= InventoryProducerMapAB.GetHashCode();
      hash ^= InventoryProducerMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      inventoryProducerMap_.WriteTo(output, _map_inventoryProducerMap_codec);
      inventoryProducerMapAB_.WriteTo(output, _map_inventoryProducerMapAB_codec);
      inventoryProducerMapABPatch_.WriteTo(output, _map_inventoryProducerMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      inventoryProducerMap_.WriteTo(ref output, _map_inventoryProducerMap_codec);
      inventoryProducerMapAB_.WriteTo(ref output, _map_inventoryProducerMapAB_codec);
      inventoryProducerMapABPatch_.WriteTo(ref output, _map_inventoryProducerMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += inventoryProducerMap_.CalculateSize(_map_inventoryProducerMap_codec);
      size += inventoryProducerMapAB_.CalculateSize(_map_inventoryProducerMapAB_codec);
      size += inventoryProducerMapABPatch_.CalculateSize(_map_inventoryProducerMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InventoryProducerConf other) {
      if (other == null) {
        return;
      }
      inventoryProducerMap_.Add(other.inventoryProducerMap_);
      inventoryProducerMapAB_.Add(other.inventoryProducerMapAB_);
      inventoryProducerMapABPatch_.Add(other.inventoryProducerMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            inventoryProducerMap_.AddEntriesFrom(input, _map_inventoryProducerMap_codec);
            break;
          }
          case 18: {
            inventoryProducerMapAB_.AddEntriesFrom(input, _map_inventoryProducerMapAB_codec);
            break;
          }
          case 26: {
            inventoryProducerMapABPatch_.AddEntriesFrom(input, _map_inventoryProducerMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            inventoryProducerMap_.AddEntriesFrom(ref input, _map_inventoryProducerMap_codec);
            break;
          }
          case 18: {
            inventoryProducerMapAB_.AddEntriesFrom(ref input, _map_inventoryProducerMapAB_codec);
            break;
          }
          case 26: {
            inventoryProducerMapABPatch_.AddEntriesFrom(ref input, _map_inventoryProducerMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
