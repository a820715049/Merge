// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/BpDetailConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/BpDetailConf.proto</summary>
  public static partial class BpDetailConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/BpDetailConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BpDetailConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChpyYXdkYXRhL0JwRGV0YWlsQ29uZi5wcm90bxIHcmF3ZGF0YSK+AQoIQnBE",
            "ZXRhaWwSCgoCaWQYASABKAUSEgoKY2lyY2xlVGFzaxgCIAEoBRIYChBkYWls",
            "eVJlZnJlc2hUYXNrGAMgAygFEgwKBGRpZmYYCiABKAUSDQoFbGFiZWwYBCAB",
            "KAUSEgoKbWlsZVN0b25lcxgFIAMoBRIPCgdwYWNrRW5kGAYgASgFEhIKCnBh",
            "Y2tMdXh1cnkYByABKAUSEgoKcGFja05vcm1hbBgIIAEoBRIOCgZwYWNrVXAY",
            "CSABKAUingEKEkJwRGV0YWlsTWFwQUJWYWx1ZRJBCgtCcERldGFpbE1hcBgB",
            "IAMoCzIsLnJhd2RhdGEuQnBEZXRhaWxNYXBBQlZhbHVlLkJwRGV0YWlsTWFw",
            "RW50cnkaRQoQQnBEZXRhaWxNYXBFbnRyeRILCgNrZXkYASABKAUSIAoFdmFs",
            "dWUYAiABKAsyES5yYXdkYXRhLkJwRGV0YWlsOgI4ASLJAwoMQnBEZXRhaWxD",
            "b25mEjsKC0JwRGV0YWlsTWFwGAEgAygLMiYucmF3ZGF0YS5CcERldGFpbENv",
            "bmYuQnBEZXRhaWxNYXBFbnRyeRI/Cg1CcERldGFpbE1hcEFCGAIgAygLMigu",
            "cmF3ZGF0YS5CcERldGFpbENvbmYuQnBEZXRhaWxNYXBBQkVudHJ5EkkKEkJw",
            "RGV0YWlsTWFwQUJQYXRjaBgDIAMoCzItLnJhd2RhdGEuQnBEZXRhaWxDb25m",
            "LkJwRGV0YWlsTWFwQUJQYXRjaEVudHJ5GkUKEEJwRGV0YWlsTWFwRW50cnkS",
            "CwoDa2V5GAEgASgFEiAKBXZhbHVlGAIgASgLMhEucmF3ZGF0YS5CcERldGFp",
            "bDoCOAEaUQoSQnBEZXRhaWxNYXBBQkVudHJ5EgsKA2tleRgBIAEoCRIqCgV2",
            "YWx1ZRgCIAEoCzIbLnJhd2RhdGEuQnBEZXRhaWxNYXBBQlZhbHVlOgI4ARpW",
            "ChdCcERldGFpbE1hcEFCUGF0Y2hFbnRyeRILCgNrZXkYASABKAkSKgoFdmFs",
            "dWUYAiABKAsyGy5yYXdkYXRhLkJwRGV0YWlsTWFwQUJWYWx1ZToCOAFCPVot",
            "Z2l0bGFiLmZ1bnBsdXMuaW8vZmF0L2NvbmYvZ2VuL2dvbGFuZy9yYXdkYXRh",
            "qgILZmF0LnJhd2RhdGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.BpDetail), global::fat.rawdata.BpDetail.Parser, new[]{ "Id", "CircleTask", "DailyRefreshTask", "Diff", "Label", "MileStones", "PackEnd", "PackLuxury", "PackNormal", "PackUp" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.BpDetailMapABValue), global::fat.rawdata.BpDetailMapABValue.Parser, new[]{ "BpDetailMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.BpDetailConf), global::fat.rawdata.BpDetailConf.Parser, new[]{ "BpDetailMap", "BpDetailMapAB", "BpDetailMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="BpDetail",table="BpDetailMap",table_wrapper="BpDetailConf",map="true",map_key_type="int32",data="BpDetailConf")
  /// annotation@ab(table_ab="BpDetailMapAB",table_ab_patch="BpDetailMapABPatch",table_ab_value="BpDetailMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@BpDetail(id="id")
  /// </summary>
  public sealed partial class BpDetail : pb::IMessage<BpDetail>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BpDetail> _parser = new pb::MessageParser<BpDetail>(() => new BpDetail());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BpDetail> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.BpDetailConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BpDetail() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BpDetail(BpDetail other) : this() {
      id_ = other.id_;
      circleTask_ = other.circleTask_;
      dailyRefreshTask_ = other.dailyRefreshTask_.Clone();
      diff_ = other.diff_;
      label_ = other.label_;
      mileStones_ = other.mileStones_.Clone();
      packEnd_ = other.packEnd_;
      packLuxury_ = other.packLuxury_;
      packNormal_ = other.packNormal_;
      packUp_ = other.packUp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BpDetail Clone() {
      return new BpDetail(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 通行证模版id
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "circleTask" field.</summary>
    public const int CircleTaskFieldNumber = 2;
    private int circleTask_;
    /// <summary>
    /// 循环任务
    /// BpTask.id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CircleTask {
      get { return circleTask_; }
      set {
        circleTask_ = value;
      }
    }

    /// <summary>Field number for the "dailyRefreshTask" field.</summary>
    public const int DailyRefreshTaskFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_dailyRefreshTask_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> dailyRefreshTask_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 日刷任务
    /// BpTask.id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> DailyRefreshTask {
      get { return dailyRefreshTask_; }
    }

    /// <summary>Field number for the "diff" field.</summary>
    public const int DiffFieldNumber = 10;
    private int diff_;
    /// <summary>
    /// 难度
    /// 仅埋点使用
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Diff {
      get { return diff_; }
      set {
        diff_ = value;
      }
    }

    /// <summary>Field number for the "label" field.</summary>
    public const int LabelFieldNumber = 4;
    private int label_;
    /// <summary>
    /// 标签信息
    /// （Label.id）
    /// （为空代表不显示标签）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Label {
      get { return label_; }
      set {
        label_ = value;
      }
    }

    /// <summary>Field number for the "mileStones" field.</summary>
    public const int MileStonesFieldNumber = 5;
    private static readonly pb::FieldCodec<int> _repeated_mileStones_codec
        = pb::FieldCodec.ForInt32(42);
    private readonly pbc::RepeatedField<int> mileStones_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 里程碑
    /// BpMilestone.id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> MileStones {
      get { return mileStones_; }
    }

    /// <summary>Field number for the "packEnd" field.</summary>
    public const int PackEndFieldNumber = 6;
    private int packEnd_;
    /// <summary>
    /// 结束礼包
    /// BpPackInfo.id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PackEnd {
      get { return packEnd_; }
      set {
        packEnd_ = value;
      }
    }

    /// <summary>Field number for the "packLuxury" field.</summary>
    public const int PackLuxuryFieldNumber = 7;
    private int packLuxury_;
    /// <summary>
    /// 付费二档
    /// BpPackInfo.id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PackLuxury {
      get { return packLuxury_; }
      set {
        packLuxury_ = value;
      }
    }

    /// <summary>Field number for the "packNormal" field.</summary>
    public const int PackNormalFieldNumber = 8;
    private int packNormal_;
    /// <summary>
    /// 付费一档
    /// BpPackInfo.id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PackNormal {
      get { return packNormal_; }
      set {
        packNormal_ = value;
      }
    }

    /// <summary>Field number for the "packUp" field.</summary>
    public const int PackUpFieldNumber = 9;
    private int packUp_;
    /// <summary>
    /// 升级礼包
    /// BpPackInfo.id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PackUp {
      get { return packUp_; }
      set {
        packUp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BpDetail);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BpDetail other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (CircleTask != other.CircleTask) return false;
      if(!dailyRefreshTask_.Equals(other.dailyRefreshTask_)) return false;
      if (Diff != other.Diff) return false;
      if (Label != other.Label) return false;
      if(!mileStones_.Equals(other.mileStones_)) return false;
      if (PackEnd != other.PackEnd) return false;
      if (PackLuxury != other.PackLuxury) return false;
      if (PackNormal != other.PackNormal) return false;
      if (PackUp != other.PackUp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (CircleTask != 0) hash ^= CircleTask.GetHashCode();
      hash ^= dailyRefreshTask_.GetHashCode();
      if (Diff != 0) hash ^= Diff.GetHashCode();
      if (Label != 0) hash ^= Label.GetHashCode();
      hash ^= mileStones_.GetHashCode();
      if (PackEnd != 0) hash ^= PackEnd.GetHashCode();
      if (PackLuxury != 0) hash ^= PackLuxury.GetHashCode();
      if (PackNormal != 0) hash ^= PackNormal.GetHashCode();
      if (PackUp != 0) hash ^= PackUp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (CircleTask != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CircleTask);
      }
      dailyRefreshTask_.WriteTo(output, _repeated_dailyRefreshTask_codec);
      if (Label != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Label);
      }
      mileStones_.WriteTo(output, _repeated_mileStones_codec);
      if (PackEnd != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(PackEnd);
      }
      if (PackLuxury != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(PackLuxury);
      }
      if (PackNormal != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(PackNormal);
      }
      if (PackUp != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(PackUp);
      }
      if (Diff != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Diff);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (CircleTask != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CircleTask);
      }
      dailyRefreshTask_.WriteTo(ref output, _repeated_dailyRefreshTask_codec);
      if (Label != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Label);
      }
      mileStones_.WriteTo(ref output, _repeated_mileStones_codec);
      if (PackEnd != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(PackEnd);
      }
      if (PackLuxury != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(PackLuxury);
      }
      if (PackNormal != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(PackNormal);
      }
      if (PackUp != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(PackUp);
      }
      if (Diff != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Diff);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (CircleTask != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CircleTask);
      }
      size += dailyRefreshTask_.CalculateSize(_repeated_dailyRefreshTask_codec);
      if (Diff != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Diff);
      }
      if (Label != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Label);
      }
      size += mileStones_.CalculateSize(_repeated_mileStones_codec);
      if (PackEnd != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PackEnd);
      }
      if (PackLuxury != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PackLuxury);
      }
      if (PackNormal != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PackNormal);
      }
      if (PackUp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PackUp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BpDetail other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.CircleTask != 0) {
        CircleTask = other.CircleTask;
      }
      dailyRefreshTask_.Add(other.dailyRefreshTask_);
      if (other.Diff != 0) {
        Diff = other.Diff;
      }
      if (other.Label != 0) {
        Label = other.Label;
      }
      mileStones_.Add(other.mileStones_);
      if (other.PackEnd != 0) {
        PackEnd = other.PackEnd;
      }
      if (other.PackLuxury != 0) {
        PackLuxury = other.PackLuxury;
      }
      if (other.PackNormal != 0) {
        PackNormal = other.PackNormal;
      }
      if (other.PackUp != 0) {
        PackUp = other.PackUp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            CircleTask = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            dailyRefreshTask_.AddEntriesFrom(input, _repeated_dailyRefreshTask_codec);
            break;
          }
          case 32: {
            Label = input.ReadInt32();
            break;
          }
          case 42:
          case 40: {
            mileStones_.AddEntriesFrom(input, _repeated_mileStones_codec);
            break;
          }
          case 48: {
            PackEnd = input.ReadInt32();
            break;
          }
          case 56: {
            PackLuxury = input.ReadInt32();
            break;
          }
          case 64: {
            PackNormal = input.ReadInt32();
            break;
          }
          case 72: {
            PackUp = input.ReadInt32();
            break;
          }
          case 80: {
            Diff = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            CircleTask = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            dailyRefreshTask_.AddEntriesFrom(ref input, _repeated_dailyRefreshTask_codec);
            break;
          }
          case 32: {
            Label = input.ReadInt32();
            break;
          }
          case 42:
          case 40: {
            mileStones_.AddEntriesFrom(ref input, _repeated_mileStones_codec);
            break;
          }
          case 48: {
            PackEnd = input.ReadInt32();
            break;
          }
          case 56: {
            PackLuxury = input.ReadInt32();
            break;
          }
          case 64: {
            PackNormal = input.ReadInt32();
            break;
          }
          case 72: {
            PackUp = input.ReadInt32();
            break;
          }
          case 80: {
            Diff = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BpDetailMapABValue : pb::IMessage<BpDetailMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BpDetailMapABValue> _parser = new pb::MessageParser<BpDetailMapABValue>(() => new BpDetailMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BpDetailMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.BpDetailConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BpDetailMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BpDetailMapABValue(BpDetailMapABValue other) : this() {
      bpDetailMap_ = other.bpDetailMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BpDetailMapABValue Clone() {
      return new BpDetailMapABValue(this);
    }

    /// <summary>Field number for the "BpDetailMap" field.</summary>
    public const int BpDetailMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.BpDetail>.Codec _map_bpDetailMap_codec
        = new pbc::MapField<int, global::fat.rawdata.BpDetail>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.BpDetail.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.BpDetail> bpDetailMap_ = new pbc::MapField<int, global::fat.rawdata.BpDetail>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.BpDetail> BpDetailMap {
      get { return bpDetailMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BpDetailMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BpDetailMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!BpDetailMap.Equals(other.BpDetailMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= BpDetailMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      bpDetailMap_.WriteTo(output, _map_bpDetailMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      bpDetailMap_.WriteTo(ref output, _map_bpDetailMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += bpDetailMap_.CalculateSize(_map_bpDetailMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BpDetailMapABValue other) {
      if (other == null) {
        return;
      }
      bpDetailMap_.Add(other.bpDetailMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            bpDetailMap_.AddEntriesFrom(input, _map_bpDetailMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            bpDetailMap_.AddEntriesFrom(ref input, _map_bpDetailMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BpDetailConf : pb::IMessage<BpDetailConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BpDetailConf> _parser = new pb::MessageParser<BpDetailConf>(() => new BpDetailConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BpDetailConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.BpDetailConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BpDetailConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BpDetailConf(BpDetailConf other) : this() {
      bpDetailMap_ = other.bpDetailMap_.Clone();
      bpDetailMapAB_ = other.bpDetailMapAB_.Clone();
      bpDetailMapABPatch_ = other.bpDetailMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BpDetailConf Clone() {
      return new BpDetailConf(this);
    }

    /// <summary>Field number for the "BpDetailMap" field.</summary>
    public const int BpDetailMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.BpDetail>.Codec _map_bpDetailMap_codec
        = new pbc::MapField<int, global::fat.rawdata.BpDetail>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.BpDetail.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.BpDetail> bpDetailMap_ = new pbc::MapField<int, global::fat.rawdata.BpDetail>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.BpDetail> BpDetailMap {
      get { return bpDetailMap_; }
    }

    /// <summary>Field number for the "BpDetailMapAB" field.</summary>
    public const int BpDetailMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.BpDetailMapABValue>.Codec _map_bpDetailMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.BpDetailMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.BpDetailMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.BpDetailMapABValue> bpDetailMapAB_ = new pbc::MapField<string, global::fat.rawdata.BpDetailMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.BpDetailMapABValue> BpDetailMapAB {
      get { return bpDetailMapAB_; }
    }

    /// <summary>Field number for the "BpDetailMapABPatch" field.</summary>
    public const int BpDetailMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.BpDetailMapABValue>.Codec _map_bpDetailMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.BpDetailMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.BpDetailMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.BpDetailMapABValue> bpDetailMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.BpDetailMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.BpDetailMapABValue> BpDetailMapABPatch {
      get { return bpDetailMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BpDetailConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BpDetailConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!BpDetailMap.Equals(other.BpDetailMap)) return false;
      if (!BpDetailMapAB.Equals(other.BpDetailMapAB)) return false;
      if (!BpDetailMapABPatch.Equals(other.BpDetailMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= BpDetailMap.GetHashCode();
      hash ^= BpDetailMapAB.GetHashCode();
      hash ^= BpDetailMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      bpDetailMap_.WriteTo(output, _map_bpDetailMap_codec);
      bpDetailMapAB_.WriteTo(output, _map_bpDetailMapAB_codec);
      bpDetailMapABPatch_.WriteTo(output, _map_bpDetailMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      bpDetailMap_.WriteTo(ref output, _map_bpDetailMap_codec);
      bpDetailMapAB_.WriteTo(ref output, _map_bpDetailMapAB_codec);
      bpDetailMapABPatch_.WriteTo(ref output, _map_bpDetailMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += bpDetailMap_.CalculateSize(_map_bpDetailMap_codec);
      size += bpDetailMapAB_.CalculateSize(_map_bpDetailMapAB_codec);
      size += bpDetailMapABPatch_.CalculateSize(_map_bpDetailMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BpDetailConf other) {
      if (other == null) {
        return;
      }
      bpDetailMap_.Add(other.bpDetailMap_);
      bpDetailMapAB_.Add(other.bpDetailMapAB_);
      bpDetailMapABPatch_.Add(other.bpDetailMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            bpDetailMap_.AddEntriesFrom(input, _map_bpDetailMap_codec);
            break;
          }
          case 18: {
            bpDetailMapAB_.AddEntriesFrom(input, _map_bpDetailMapAB_codec);
            break;
          }
          case 26: {
            bpDetailMapABPatch_.AddEntriesFrom(input, _map_bpDetailMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            bpDetailMap_.AddEntriesFrom(ref input, _map_bpDetailMap_codec);
            break;
          }
          case 18: {
            bpDetailMapAB_.AddEntriesFrom(ref input, _map_bpDetailMapAB_codec);
            break;
          }
          case 26: {
            bpDetailMapABPatch_.AddEntriesFrom(ref input, _map_bpDetailMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
