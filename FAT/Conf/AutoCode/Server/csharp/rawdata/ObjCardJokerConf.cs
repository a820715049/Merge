// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/ObjCardJokerConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/ObjCardJokerConf.proto</summary>
  public static partial class ObjCardJokerConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/ObjCardJokerConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ObjCardJokerConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch5yYXdkYXRhL09iakNhcmRKb2tlckNvbmYucHJvdG8SB3Jhd2RhdGEihgEK",
            "DE9iakNhcmRKb2tlchIKCgJpZBgBIAEoBRIWCg5jaGVzdFRpcHNJbWFnZRgF",
            "IAEoCRIWCg5jaGVzdFRpcHNTdHlsZRgGIAEoBRISCgpleHBpcmVJdGVtGAQg",
            "ASgJEhQKDGlzT25seU5vcm1hbBgCIAEoCBIQCghsaWZldGltZRgDIAEoBSK2",
            "AQoWT2JqQ2FyZEpva2VyTWFwQUJWYWx1ZRJNCg9PYmpDYXJkSm9rZXJNYXAY",
            "ASADKAsyNC5yYXdkYXRhLk9iakNhcmRKb2tlck1hcEFCVmFsdWUuT2JqQ2Fy",
            "ZEpva2VyTWFwRW50cnkaTQoUT2JqQ2FyZEpva2VyTWFwRW50cnkSCwoDa2V5",
            "GAEgASgFEiQKBXZhbHVlGAIgASgLMhUucmF3ZGF0YS5PYmpDYXJkSm9rZXI6",
            "AjgBIokEChBPYmpDYXJkSm9rZXJDb25mEkcKD09iakNhcmRKb2tlck1hcBgB",
            "IAMoCzIuLnJhd2RhdGEuT2JqQ2FyZEpva2VyQ29uZi5PYmpDYXJkSm9rZXJN",
            "YXBFbnRyeRJLChFPYmpDYXJkSm9rZXJNYXBBQhgCIAMoCzIwLnJhd2RhdGEu",
            "T2JqQ2FyZEpva2VyQ29uZi5PYmpDYXJkSm9rZXJNYXBBQkVudHJ5ElUKFk9i",
            "akNhcmRKb2tlck1hcEFCUGF0Y2gYAyADKAsyNS5yYXdkYXRhLk9iakNhcmRK",
            "b2tlckNvbmYuT2JqQ2FyZEpva2VyTWFwQUJQYXRjaEVudHJ5Gk0KFE9iakNh",
            "cmRKb2tlck1hcEVudHJ5EgsKA2tleRgBIAEoBRIkCgV2YWx1ZRgCIAEoCzIV",
            "LnJhd2RhdGEuT2JqQ2FyZEpva2VyOgI4ARpZChZPYmpDYXJkSm9rZXJNYXBB",
            "QkVudHJ5EgsKA2tleRgBIAEoCRIuCgV2YWx1ZRgCIAEoCzIfLnJhd2RhdGEu",
            "T2JqQ2FyZEpva2VyTWFwQUJWYWx1ZToCOAEaXgobT2JqQ2FyZEpva2VyTWFw",
            "QUJQYXRjaEVudHJ5EgsKA2tleRgBIAEoCRIuCgV2YWx1ZRgCIAEoCzIfLnJh",
            "d2RhdGEuT2JqQ2FyZEpva2VyTWFwQUJWYWx1ZToCOAFCPVotZ2l0bGFiLmZ1",
            "bnBsdXMuaW8vZmF0L2NvbmYvZ2VuL2dvbGFuZy9yYXdkYXRhqgILZmF0LnJh",
            "d2RhdGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.ObjCardJoker), global::fat.rawdata.ObjCardJoker.Parser, new[]{ "Id", "ChestTipsImage", "ChestTipsStyle", "ExpireItem", "IsOnlyNormal", "Lifetime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.ObjCardJokerMapABValue), global::fat.rawdata.ObjCardJokerMapABValue.Parser, new[]{ "ObjCardJokerMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.ObjCardJokerConf), global::fat.rawdata.ObjCardJokerConf.Parser, new[]{ "ObjCardJokerMap", "ObjCardJokerMapAB", "ObjCardJokerMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="ObjCardJoker",table="ObjCardJokerMap",table_wrapper="ObjCardJokerConf",map="true",map_key_type="int32",data="ObjCardJokerConf")
  /// annotation@ab(table_ab="ObjCardJokerMapAB",table_ab_patch="ObjCardJokerMapABPatch",table_ab_value="ObjCardJokerMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@ObjCardJoker(id="id")
  /// </summary>
  public sealed partial class ObjCardJoker : pb::IMessage<ObjCardJoker>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ObjCardJoker> _parser = new pb::MessageParser<ObjCardJoker>(() => new ObjCardJoker());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ObjCardJoker> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.ObjCardJokerConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjCardJoker() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjCardJoker(ObjCardJoker other) : this() {
      id_ = other.id_;
      chestTipsImage_ = other.chestTipsImage_;
      chestTipsStyle_ = other.chestTipsStyle_;
      expireItem_ = other.expireItem_;
      isOnlyNormal_ = other.isOnlyNormal_;
      lifetime_ = other.lifetime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjCardJoker Clone() {
      return new ObjCardJoker(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 集卡万能卡片
    /// 物品ID
    /// （ObjBasic.id）
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "chestTipsImage" field.</summary>
    public const int ChestTipsImageFieldNumber = 5;
    private string chestTipsImage_ = "";
    /// <summary>
    /// 随机宝箱JOKER奖励tips
    /// 配图
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ChestTipsImage {
      get { return chestTipsImage_; }
      set {
        chestTipsImage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "chestTipsStyle" field.</summary>
    public const int ChestTipsStyleFieldNumber = 6;
    private int chestTipsStyle_;
    /// <summary>
    /// 随机宝箱JOKER奖励tips
    /// 字体样式
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ChestTipsStyle {
      get { return chestTipsStyle_; }
      set {
        chestTipsStyle_ = value;
      }
    }

    /// <summary>Field number for the "expireItem" field.</summary>
    public const int ExpireItemFieldNumber = 4;
    private string expireItem_ = "";
    /// <summary>
    /// 非集卡期间获得时转化
    /// （ObjBasic.id:数量）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExpireItem {
      get { return expireItem_; }
      set {
        expireItem_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isOnlyNormal" field.</summary>
    public const int IsOnlyNormalFieldNumber = 2;
    private bool isOnlyNormal_;
    /// <summary>
    /// 是否是白卡万能卡片
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsOnlyNormal {
      get { return isOnlyNormal_; }
      set {
        isOnlyNormal_ = value;
      }
    }

    /// <summary>Field number for the "lifetime" field.</summary>
    public const int LifetimeFieldNumber = 3;
    private int lifetime_;
    /// <summary>
    /// 获得之后多久过期
    /// （秒）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Lifetime {
      get { return lifetime_; }
      set {
        lifetime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ObjCardJoker);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ObjCardJoker other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ChestTipsImage != other.ChestTipsImage) return false;
      if (ChestTipsStyle != other.ChestTipsStyle) return false;
      if (ExpireItem != other.ExpireItem) return false;
      if (IsOnlyNormal != other.IsOnlyNormal) return false;
      if (Lifetime != other.Lifetime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (ChestTipsImage.Length != 0) hash ^= ChestTipsImage.GetHashCode();
      if (ChestTipsStyle != 0) hash ^= ChestTipsStyle.GetHashCode();
      if (ExpireItem.Length != 0) hash ^= ExpireItem.GetHashCode();
      if (IsOnlyNormal != false) hash ^= IsOnlyNormal.GetHashCode();
      if (Lifetime != 0) hash ^= Lifetime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (IsOnlyNormal != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsOnlyNormal);
      }
      if (Lifetime != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Lifetime);
      }
      if (ExpireItem.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ExpireItem);
      }
      if (ChestTipsImage.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ChestTipsImage);
      }
      if (ChestTipsStyle != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(ChestTipsStyle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (IsOnlyNormal != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsOnlyNormal);
      }
      if (Lifetime != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Lifetime);
      }
      if (ExpireItem.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ExpireItem);
      }
      if (ChestTipsImage.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ChestTipsImage);
      }
      if (ChestTipsStyle != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(ChestTipsStyle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (ChestTipsImage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ChestTipsImage);
      }
      if (ChestTipsStyle != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChestTipsStyle);
      }
      if (ExpireItem.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExpireItem);
      }
      if (IsOnlyNormal != false) {
        size += 1 + 1;
      }
      if (Lifetime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Lifetime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ObjCardJoker other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.ChestTipsImage.Length != 0) {
        ChestTipsImage = other.ChestTipsImage;
      }
      if (other.ChestTipsStyle != 0) {
        ChestTipsStyle = other.ChestTipsStyle;
      }
      if (other.ExpireItem.Length != 0) {
        ExpireItem = other.ExpireItem;
      }
      if (other.IsOnlyNormal != false) {
        IsOnlyNormal = other.IsOnlyNormal;
      }
      if (other.Lifetime != 0) {
        Lifetime = other.Lifetime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            IsOnlyNormal = input.ReadBool();
            break;
          }
          case 24: {
            Lifetime = input.ReadInt32();
            break;
          }
          case 34: {
            ExpireItem = input.ReadString();
            break;
          }
          case 42: {
            ChestTipsImage = input.ReadString();
            break;
          }
          case 48: {
            ChestTipsStyle = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            IsOnlyNormal = input.ReadBool();
            break;
          }
          case 24: {
            Lifetime = input.ReadInt32();
            break;
          }
          case 34: {
            ExpireItem = input.ReadString();
            break;
          }
          case 42: {
            ChestTipsImage = input.ReadString();
            break;
          }
          case 48: {
            ChestTipsStyle = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ObjCardJokerMapABValue : pb::IMessage<ObjCardJokerMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ObjCardJokerMapABValue> _parser = new pb::MessageParser<ObjCardJokerMapABValue>(() => new ObjCardJokerMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ObjCardJokerMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.ObjCardJokerConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjCardJokerMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjCardJokerMapABValue(ObjCardJokerMapABValue other) : this() {
      objCardJokerMap_ = other.objCardJokerMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjCardJokerMapABValue Clone() {
      return new ObjCardJokerMapABValue(this);
    }

    /// <summary>Field number for the "ObjCardJokerMap" field.</summary>
    public const int ObjCardJokerMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.ObjCardJoker>.Codec _map_objCardJokerMap_codec
        = new pbc::MapField<int, global::fat.rawdata.ObjCardJoker>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ObjCardJoker.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.ObjCardJoker> objCardJokerMap_ = new pbc::MapField<int, global::fat.rawdata.ObjCardJoker>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.ObjCardJoker> ObjCardJokerMap {
      get { return objCardJokerMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ObjCardJokerMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ObjCardJokerMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!ObjCardJokerMap.Equals(other.ObjCardJokerMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ObjCardJokerMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      objCardJokerMap_.WriteTo(output, _map_objCardJokerMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      objCardJokerMap_.WriteTo(ref output, _map_objCardJokerMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += objCardJokerMap_.CalculateSize(_map_objCardJokerMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ObjCardJokerMapABValue other) {
      if (other == null) {
        return;
      }
      objCardJokerMap_.Add(other.objCardJokerMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            objCardJokerMap_.AddEntriesFrom(input, _map_objCardJokerMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            objCardJokerMap_.AddEntriesFrom(ref input, _map_objCardJokerMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ObjCardJokerConf : pb::IMessage<ObjCardJokerConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ObjCardJokerConf> _parser = new pb::MessageParser<ObjCardJokerConf>(() => new ObjCardJokerConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ObjCardJokerConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.ObjCardJokerConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjCardJokerConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjCardJokerConf(ObjCardJokerConf other) : this() {
      objCardJokerMap_ = other.objCardJokerMap_.Clone();
      objCardJokerMapAB_ = other.objCardJokerMapAB_.Clone();
      objCardJokerMapABPatch_ = other.objCardJokerMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ObjCardJokerConf Clone() {
      return new ObjCardJokerConf(this);
    }

    /// <summary>Field number for the "ObjCardJokerMap" field.</summary>
    public const int ObjCardJokerMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.ObjCardJoker>.Codec _map_objCardJokerMap_codec
        = new pbc::MapField<int, global::fat.rawdata.ObjCardJoker>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ObjCardJoker.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.ObjCardJoker> objCardJokerMap_ = new pbc::MapField<int, global::fat.rawdata.ObjCardJoker>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.ObjCardJoker> ObjCardJokerMap {
      get { return objCardJokerMap_; }
    }

    /// <summary>Field number for the "ObjCardJokerMapAB" field.</summary>
    public const int ObjCardJokerMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.ObjCardJokerMapABValue>.Codec _map_objCardJokerMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.ObjCardJokerMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ObjCardJokerMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.ObjCardJokerMapABValue> objCardJokerMapAB_ = new pbc::MapField<string, global::fat.rawdata.ObjCardJokerMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.ObjCardJokerMapABValue> ObjCardJokerMapAB {
      get { return objCardJokerMapAB_; }
    }

    /// <summary>Field number for the "ObjCardJokerMapABPatch" field.</summary>
    public const int ObjCardJokerMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.ObjCardJokerMapABValue>.Codec _map_objCardJokerMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.ObjCardJokerMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.ObjCardJokerMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.ObjCardJokerMapABValue> objCardJokerMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.ObjCardJokerMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.ObjCardJokerMapABValue> ObjCardJokerMapABPatch {
      get { return objCardJokerMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ObjCardJokerConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ObjCardJokerConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!ObjCardJokerMap.Equals(other.ObjCardJokerMap)) return false;
      if (!ObjCardJokerMapAB.Equals(other.ObjCardJokerMapAB)) return false;
      if (!ObjCardJokerMapABPatch.Equals(other.ObjCardJokerMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ObjCardJokerMap.GetHashCode();
      hash ^= ObjCardJokerMapAB.GetHashCode();
      hash ^= ObjCardJokerMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      objCardJokerMap_.WriteTo(output, _map_objCardJokerMap_codec);
      objCardJokerMapAB_.WriteTo(output, _map_objCardJokerMapAB_codec);
      objCardJokerMapABPatch_.WriteTo(output, _map_objCardJokerMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      objCardJokerMap_.WriteTo(ref output, _map_objCardJokerMap_codec);
      objCardJokerMapAB_.WriteTo(ref output, _map_objCardJokerMapAB_codec);
      objCardJokerMapABPatch_.WriteTo(ref output, _map_objCardJokerMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += objCardJokerMap_.CalculateSize(_map_objCardJokerMap_codec);
      size += objCardJokerMapAB_.CalculateSize(_map_objCardJokerMapAB_codec);
      size += objCardJokerMapABPatch_.CalculateSize(_map_objCardJokerMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ObjCardJokerConf other) {
      if (other == null) {
        return;
      }
      objCardJokerMap_.Add(other.objCardJokerMap_);
      objCardJokerMapAB_.Add(other.objCardJokerMapAB_);
      objCardJokerMapABPatch_.Add(other.objCardJokerMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            objCardJokerMap_.AddEntriesFrom(input, _map_objCardJokerMap_codec);
            break;
          }
          case 18: {
            objCardJokerMapAB_.AddEntriesFrom(input, _map_objCardJokerMapAB_codec);
            break;
          }
          case 26: {
            objCardJokerMapABPatch_.AddEntriesFrom(input, _map_objCardJokerMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            objCardJokerMap_.AddEntriesFrom(ref input, _map_objCardJokerMap_codec);
            break;
          }
          case 18: {
            objCardJokerMapAB_.AddEntriesFrom(ref input, _map_objCardJokerMapAB_codec);
            break;
          }
          case 26: {
            objCardJokerMapABPatch_.AddEntriesFrom(ref input, _map_objCardJokerMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
