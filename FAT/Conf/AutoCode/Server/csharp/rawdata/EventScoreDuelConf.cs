// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventScoreDuelConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventScoreDuelConf.proto</summary>
  public static partial class EventScoreDuelConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventScoreDuelConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventScoreDuelConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiByYXdkYXRhL0V2ZW50U2NvcmVEdWVsQ29uZi5wcm90bxIHcmF3ZGF0YSKl",
            "AQoORXZlbnRTY29yZUR1ZWwSCgoCaWQYASABKAUSDwoHYm9hcmRJZBgCIAEo",
            "BRIQCghkZXRhaWxJZBgDIAEoBRISCgpldmVudFRoZW1lGAQgASgFEhYKDm1p",
            "bGVzdG9uZVRva2VuGAggASgFEhMKC3Jlc3VsdFRoZW1lGAYgASgFEhIKCnN0",
            "YXJ0VGhlbWUYByABKAUSDwoHdG9rZW5JZBgFIAEoBSLCAQoYRXZlbnRTY29y",
            "ZUR1ZWxNYXBBQlZhbHVlElMKEUV2ZW50U2NvcmVEdWVsTWFwGAEgAygLMjgu",
            "cmF3ZGF0YS5FdmVudFNjb3JlRHVlbE1hcEFCVmFsdWUuRXZlbnRTY29yZUR1",
            "ZWxNYXBFbnRyeRpRChZFdmVudFNjb3JlRHVlbE1hcEVudHJ5EgsKA2tleRgB",
            "IAEoBRImCgV2YWx1ZRgCIAEoCzIXLnJhd2RhdGEuRXZlbnRTY29yZUR1ZWw6",
            "AjgBIqkEChJFdmVudFNjb3JlRHVlbENvbmYSTQoRRXZlbnRTY29yZUR1ZWxN",
            "YXAYASADKAsyMi5yYXdkYXRhLkV2ZW50U2NvcmVEdWVsQ29uZi5FdmVudFNj",
            "b3JlRHVlbE1hcEVudHJ5ElEKE0V2ZW50U2NvcmVEdWVsTWFwQUIYAiADKAsy",
            "NC5yYXdkYXRhLkV2ZW50U2NvcmVEdWVsQ29uZi5FdmVudFNjb3JlRHVlbE1h",
            "cEFCRW50cnkSWwoYRXZlbnRTY29yZUR1ZWxNYXBBQlBhdGNoGAMgAygLMjku",
            "cmF3ZGF0YS5FdmVudFNjb3JlRHVlbENvbmYuRXZlbnRTY29yZUR1ZWxNYXBB",
            "QlBhdGNoRW50cnkaUQoWRXZlbnRTY29yZUR1ZWxNYXBFbnRyeRILCgNrZXkY",
            "ASABKAUSJgoFdmFsdWUYAiABKAsyFy5yYXdkYXRhLkV2ZW50U2NvcmVEdWVs",
            "OgI4ARpdChhFdmVudFNjb3JlRHVlbE1hcEFCRW50cnkSCwoDa2V5GAEgASgJ",
            "EjAKBXZhbHVlGAIgASgLMiEucmF3ZGF0YS5FdmVudFNjb3JlRHVlbE1hcEFC",
            "VmFsdWU6AjgBGmIKHUV2ZW50U2NvcmVEdWVsTWFwQUJQYXRjaEVudHJ5EgsK",
            "A2tleRgBIAEoCRIwCgV2YWx1ZRgCIAEoCzIhLnJhd2RhdGEuRXZlbnRTY29y",
            "ZUR1ZWxNYXBBQlZhbHVlOgI4AUI9Wi1naXRsYWIuZnVucGx1cy5pby9mYXQv",
            "Y29uZi9nZW4vZ29sYW5nL3Jhd2RhdGGqAgtmYXQucmF3ZGF0YWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventScoreDuel), global::fat.rawdata.EventScoreDuel.Parser, new[]{ "Id", "BoardId", "DetailId", "EventTheme", "MilestoneToken", "ResultTheme", "StartTheme", "TokenId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventScoreDuelMapABValue), global::fat.rawdata.EventScoreDuelMapABValue.Parser, new[]{ "EventScoreDuelMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventScoreDuelConf), global::fat.rawdata.EventScoreDuelConf.Parser, new[]{ "EventScoreDuelMap", "EventScoreDuelMapAB", "EventScoreDuelMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventScoreDuel",table="EventScoreDuelMap",table_wrapper="EventScoreDuelConf",map="true",map_key_type="int32",data="EventScoreDuelConf")
  /// annotation@ab(table_ab="EventScoreDuelMapAB",table_ab_patch="EventScoreDuelMapABPatch",table_ab_value="EventScoreDuelMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventScoreDuel(id="id")
  /// </summary>
  public sealed partial class EventScoreDuel : pb::IMessage<EventScoreDuel>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventScoreDuel> _parser = new pb::MessageParser<EventScoreDuel>(() => new EventScoreDuel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventScoreDuel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventScoreDuelConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventScoreDuel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventScoreDuel(EventScoreDuel other) : this() {
      id_ = other.id_;
      boardId_ = other.boardId_;
      detailId_ = other.detailId_;
      eventTheme_ = other.eventTheme_;
      milestoneToken_ = other.milestoneToken_;
      resultTheme_ = other.resultTheme_;
      startTheme_ = other.startTheme_;
      tokenId_ = other.tokenId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventScoreDuel Clone() {
      return new EventScoreDuel(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 活动模板ID
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "boardId" field.</summary>
    public const int BoardIdFieldNumber = 2;
    private int boardId_;
    /// <summary>
    /// 生效棋盘
    /// （MergeBoard.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BoardId {
      get { return boardId_; }
      set {
        boardId_ = value;
      }
    }

    /// <summary>Field number for the "detailId" field.</summary>
    public const int DetailIdFieldNumber = 3;
    private int detailId_;
    /// <summary>
    /// 活动详情
    /// （受档位组控制）
    /// （GradeIndexMapping.id）
    /// （EventScoreDuelDetail.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DetailId {
      get { return detailId_; }
      set {
        detailId_ = value;
      }
    }

    /// <summary>Field number for the "eventTheme" field.</summary>
    public const int EventThemeFieldNumber = 4;
    private int eventTheme_;
    /// <summary>
    /// 活动主题弹窗Id
    /// （EventTheme.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EventTheme {
      get { return eventTheme_; }
      set {
        eventTheme_ = value;
      }
    }

    /// <summary>Field number for the "milestoneToken" field.</summary>
    public const int MilestoneTokenFieldNumber = 8;
    private int milestoneToken_;
    /// <summary>
    /// 活动里程碑tokenId
    /// (ObjBasic.id)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MilestoneToken {
      get { return milestoneToken_; }
      set {
        milestoneToken_ = value;
      }
    }

    /// <summary>Field number for the "resultTheme" field.</summary>
    public const int ResultThemeFieldNumber = 6;
    private int resultTheme_;
    /// <summary>
    /// 结算界面
    /// （EventTheme.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ResultTheme {
      get { return resultTheme_; }
      set {
        resultTheme_ = value;
      }
    }

    /// <summary>Field number for the "startTheme" field.</summary>
    public const int StartThemeFieldNumber = 7;
    private int startTheme_;
    /// <summary>
    /// 活动开启弹窗Id
    /// （EventTheme.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StartTheme {
      get { return startTheme_; }
      set {
        startTheme_ = value;
      }
    }

    /// <summary>Field number for the "tokenId" field.</summary>
    public const int TokenIdFieldNumber = 5;
    private int tokenId_;
    /// <summary>
    /// 活动tokenId
    /// (ObjBasic.id)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TokenId {
      get { return tokenId_; }
      set {
        tokenId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventScoreDuel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventScoreDuel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (BoardId != other.BoardId) return false;
      if (DetailId != other.DetailId) return false;
      if (EventTheme != other.EventTheme) return false;
      if (MilestoneToken != other.MilestoneToken) return false;
      if (ResultTheme != other.ResultTheme) return false;
      if (StartTheme != other.StartTheme) return false;
      if (TokenId != other.TokenId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (BoardId != 0) hash ^= BoardId.GetHashCode();
      if (DetailId != 0) hash ^= DetailId.GetHashCode();
      if (EventTheme != 0) hash ^= EventTheme.GetHashCode();
      if (MilestoneToken != 0) hash ^= MilestoneToken.GetHashCode();
      if (ResultTheme != 0) hash ^= ResultTheme.GetHashCode();
      if (StartTheme != 0) hash ^= StartTheme.GetHashCode();
      if (TokenId != 0) hash ^= TokenId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (BoardId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BoardId);
      }
      if (DetailId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(DetailId);
      }
      if (EventTheme != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(EventTheme);
      }
      if (TokenId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(TokenId);
      }
      if (ResultTheme != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(ResultTheme);
      }
      if (StartTheme != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(StartTheme);
      }
      if (MilestoneToken != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(MilestoneToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (BoardId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BoardId);
      }
      if (DetailId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(DetailId);
      }
      if (EventTheme != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(EventTheme);
      }
      if (TokenId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(TokenId);
      }
      if (ResultTheme != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(ResultTheme);
      }
      if (StartTheme != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(StartTheme);
      }
      if (MilestoneToken != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(MilestoneToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (BoardId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BoardId);
      }
      if (DetailId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DetailId);
      }
      if (EventTheme != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EventTheme);
      }
      if (MilestoneToken != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MilestoneToken);
      }
      if (ResultTheme != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ResultTheme);
      }
      if (StartTheme != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartTheme);
      }
      if (TokenId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TokenId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventScoreDuel other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.BoardId != 0) {
        BoardId = other.BoardId;
      }
      if (other.DetailId != 0) {
        DetailId = other.DetailId;
      }
      if (other.EventTheme != 0) {
        EventTheme = other.EventTheme;
      }
      if (other.MilestoneToken != 0) {
        MilestoneToken = other.MilestoneToken;
      }
      if (other.ResultTheme != 0) {
        ResultTheme = other.ResultTheme;
      }
      if (other.StartTheme != 0) {
        StartTheme = other.StartTheme;
      }
      if (other.TokenId != 0) {
        TokenId = other.TokenId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            BoardId = input.ReadInt32();
            break;
          }
          case 24: {
            DetailId = input.ReadInt32();
            break;
          }
          case 32: {
            EventTheme = input.ReadInt32();
            break;
          }
          case 40: {
            TokenId = input.ReadInt32();
            break;
          }
          case 48: {
            ResultTheme = input.ReadInt32();
            break;
          }
          case 56: {
            StartTheme = input.ReadInt32();
            break;
          }
          case 64: {
            MilestoneToken = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            BoardId = input.ReadInt32();
            break;
          }
          case 24: {
            DetailId = input.ReadInt32();
            break;
          }
          case 32: {
            EventTheme = input.ReadInt32();
            break;
          }
          case 40: {
            TokenId = input.ReadInt32();
            break;
          }
          case 48: {
            ResultTheme = input.ReadInt32();
            break;
          }
          case 56: {
            StartTheme = input.ReadInt32();
            break;
          }
          case 64: {
            MilestoneToken = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventScoreDuelMapABValue : pb::IMessage<EventScoreDuelMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventScoreDuelMapABValue> _parser = new pb::MessageParser<EventScoreDuelMapABValue>(() => new EventScoreDuelMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventScoreDuelMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventScoreDuelConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventScoreDuelMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventScoreDuelMapABValue(EventScoreDuelMapABValue other) : this() {
      eventScoreDuelMap_ = other.eventScoreDuelMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventScoreDuelMapABValue Clone() {
      return new EventScoreDuelMapABValue(this);
    }

    /// <summary>Field number for the "EventScoreDuelMap" field.</summary>
    public const int EventScoreDuelMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventScoreDuel>.Codec _map_eventScoreDuelMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventScoreDuel>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventScoreDuel.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventScoreDuel> eventScoreDuelMap_ = new pbc::MapField<int, global::fat.rawdata.EventScoreDuel>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventScoreDuel> EventScoreDuelMap {
      get { return eventScoreDuelMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventScoreDuelMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventScoreDuelMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventScoreDuelMap.Equals(other.EventScoreDuelMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventScoreDuelMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventScoreDuelMap_.WriteTo(output, _map_eventScoreDuelMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventScoreDuelMap_.WriteTo(ref output, _map_eventScoreDuelMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventScoreDuelMap_.CalculateSize(_map_eventScoreDuelMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventScoreDuelMapABValue other) {
      if (other == null) {
        return;
      }
      eventScoreDuelMap_.Add(other.eventScoreDuelMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventScoreDuelMap_.AddEntriesFrom(input, _map_eventScoreDuelMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventScoreDuelMap_.AddEntriesFrom(ref input, _map_eventScoreDuelMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventScoreDuelConf : pb::IMessage<EventScoreDuelConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventScoreDuelConf> _parser = new pb::MessageParser<EventScoreDuelConf>(() => new EventScoreDuelConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventScoreDuelConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventScoreDuelConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventScoreDuelConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventScoreDuelConf(EventScoreDuelConf other) : this() {
      eventScoreDuelMap_ = other.eventScoreDuelMap_.Clone();
      eventScoreDuelMapAB_ = other.eventScoreDuelMapAB_.Clone();
      eventScoreDuelMapABPatch_ = other.eventScoreDuelMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventScoreDuelConf Clone() {
      return new EventScoreDuelConf(this);
    }

    /// <summary>Field number for the "EventScoreDuelMap" field.</summary>
    public const int EventScoreDuelMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventScoreDuel>.Codec _map_eventScoreDuelMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventScoreDuel>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventScoreDuel.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventScoreDuel> eventScoreDuelMap_ = new pbc::MapField<int, global::fat.rawdata.EventScoreDuel>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventScoreDuel> EventScoreDuelMap {
      get { return eventScoreDuelMap_; }
    }

    /// <summary>Field number for the "EventScoreDuelMapAB" field.</summary>
    public const int EventScoreDuelMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventScoreDuelMapABValue>.Codec _map_eventScoreDuelMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventScoreDuelMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventScoreDuelMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventScoreDuelMapABValue> eventScoreDuelMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventScoreDuelMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventScoreDuelMapABValue> EventScoreDuelMapAB {
      get { return eventScoreDuelMapAB_; }
    }

    /// <summary>Field number for the "EventScoreDuelMapABPatch" field.</summary>
    public const int EventScoreDuelMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventScoreDuelMapABValue>.Codec _map_eventScoreDuelMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventScoreDuelMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventScoreDuelMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventScoreDuelMapABValue> eventScoreDuelMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventScoreDuelMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventScoreDuelMapABValue> EventScoreDuelMapABPatch {
      get { return eventScoreDuelMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventScoreDuelConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventScoreDuelConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventScoreDuelMap.Equals(other.EventScoreDuelMap)) return false;
      if (!EventScoreDuelMapAB.Equals(other.EventScoreDuelMapAB)) return false;
      if (!EventScoreDuelMapABPatch.Equals(other.EventScoreDuelMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventScoreDuelMap.GetHashCode();
      hash ^= EventScoreDuelMapAB.GetHashCode();
      hash ^= EventScoreDuelMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventScoreDuelMap_.WriteTo(output, _map_eventScoreDuelMap_codec);
      eventScoreDuelMapAB_.WriteTo(output, _map_eventScoreDuelMapAB_codec);
      eventScoreDuelMapABPatch_.WriteTo(output, _map_eventScoreDuelMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventScoreDuelMap_.WriteTo(ref output, _map_eventScoreDuelMap_codec);
      eventScoreDuelMapAB_.WriteTo(ref output, _map_eventScoreDuelMapAB_codec);
      eventScoreDuelMapABPatch_.WriteTo(ref output, _map_eventScoreDuelMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventScoreDuelMap_.CalculateSize(_map_eventScoreDuelMap_codec);
      size += eventScoreDuelMapAB_.CalculateSize(_map_eventScoreDuelMapAB_codec);
      size += eventScoreDuelMapABPatch_.CalculateSize(_map_eventScoreDuelMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventScoreDuelConf other) {
      if (other == null) {
        return;
      }
      eventScoreDuelMap_.Add(other.eventScoreDuelMap_);
      eventScoreDuelMapAB_.Add(other.eventScoreDuelMapAB_);
      eventScoreDuelMapABPatch_.Add(other.eventScoreDuelMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventScoreDuelMap_.AddEntriesFrom(input, _map_eventScoreDuelMap_codec);
            break;
          }
          case 18: {
            eventScoreDuelMapAB_.AddEntriesFrom(input, _map_eventScoreDuelMapAB_codec);
            break;
          }
          case 26: {
            eventScoreDuelMapABPatch_.AddEntriesFrom(input, _map_eventScoreDuelMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventScoreDuelMap_.AddEntriesFrom(ref input, _map_eventScoreDuelMap_codec);
            break;
          }
          case 18: {
            eventScoreDuelMapAB_.AddEntriesFrom(ref input, _map_eventScoreDuelMapAB_codec);
            break;
          }
          case 26: {
            eventScoreDuelMapABPatch_.AddEntriesFrom(ref input, _map_eventScoreDuelMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
