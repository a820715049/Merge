// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventOrderRateConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventOrderRateConf.proto</summary>
  public static partial class EventOrderRateConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventOrderRateConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventOrderRateConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiByYXdkYXRhL0V2ZW50T3JkZXJSYXRlQ29uZi5wcm90bxIHcmF3ZGF0YSJn",
            "Cg5FdmVudE9yZGVyUmF0ZRIKCgJpZBgBIAEoBRIMCgRjb3N0GAIgASgFEhQK",
            "DGV2ZW50VGhlbWVJZBgDIAEoBRIPCgdncmFkZUlkGAQgASgFEhQKDHN0YXJ0",
            "VGhlbWVJZBgFIAEoBSLCAQoYRXZlbnRPcmRlclJhdGVNYXBBQlZhbHVlElMK",
            "EUV2ZW50T3JkZXJSYXRlTWFwGAEgAygLMjgucmF3ZGF0YS5FdmVudE9yZGVy",
            "UmF0ZU1hcEFCVmFsdWUuRXZlbnRPcmRlclJhdGVNYXBFbnRyeRpRChZFdmVu",
            "dE9yZGVyUmF0ZU1hcEVudHJ5EgsKA2tleRgBIAEoBRImCgV2YWx1ZRgCIAEo",
            "CzIXLnJhd2RhdGEuRXZlbnRPcmRlclJhdGU6AjgBIqkEChJFdmVudE9yZGVy",
            "UmF0ZUNvbmYSTQoRRXZlbnRPcmRlclJhdGVNYXAYASADKAsyMi5yYXdkYXRh",
            "LkV2ZW50T3JkZXJSYXRlQ29uZi5FdmVudE9yZGVyUmF0ZU1hcEVudHJ5ElEK",
            "E0V2ZW50T3JkZXJSYXRlTWFwQUIYAiADKAsyNC5yYXdkYXRhLkV2ZW50T3Jk",
            "ZXJSYXRlQ29uZi5FdmVudE9yZGVyUmF0ZU1hcEFCRW50cnkSWwoYRXZlbnRP",
            "cmRlclJhdGVNYXBBQlBhdGNoGAMgAygLMjkucmF3ZGF0YS5FdmVudE9yZGVy",
            "UmF0ZUNvbmYuRXZlbnRPcmRlclJhdGVNYXBBQlBhdGNoRW50cnkaUQoWRXZl",
            "bnRPcmRlclJhdGVNYXBFbnRyeRILCgNrZXkYASABKAUSJgoFdmFsdWUYAiAB",
            "KAsyFy5yYXdkYXRhLkV2ZW50T3JkZXJSYXRlOgI4ARpdChhFdmVudE9yZGVy",
            "UmF0ZU1hcEFCRW50cnkSCwoDa2V5GAEgASgJEjAKBXZhbHVlGAIgASgLMiEu",
            "cmF3ZGF0YS5FdmVudE9yZGVyUmF0ZU1hcEFCVmFsdWU6AjgBGmIKHUV2ZW50",
            "T3JkZXJSYXRlTWFwQUJQYXRjaEVudHJ5EgsKA2tleRgBIAEoCRIwCgV2YWx1",
            "ZRgCIAEoCzIhLnJhd2RhdGEuRXZlbnRPcmRlclJhdGVNYXBBQlZhbHVlOgI4",
            "AUI9Wi1naXRsYWIuZnVucGx1cy5pby9mYXQvY29uZi9nZW4vZ29sYW5nL3Jh",
            "d2RhdGGqAgtmYXQucmF3ZGF0YWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventOrderRate), global::fat.rawdata.EventOrderRate.Parser, new[]{ "Id", "Cost", "EventThemeId", "GradeId", "StartThemeId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventOrderRateMapABValue), global::fat.rawdata.EventOrderRateMapABValue.Parser, new[]{ "EventOrderRateMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventOrderRateConf), global::fat.rawdata.EventOrderRateConf.Parser, new[]{ "EventOrderRateMap", "EventOrderRateMapAB", "EventOrderRateMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventOrderRate",table="EventOrderRateMap",table_wrapper="EventOrderRateConf",map="true",map_key_type="int32",data="EventOrderRateConf")
  /// annotation@ab(table_ab="EventOrderRateMapAB",table_ab_patch="EventOrderRateMapABPatch",table_ab_value="EventOrderRateMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventOrderRate(id="id")
  /// </summary>
  public sealed partial class EventOrderRate : pb::IMessage<EventOrderRate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventOrderRate> _parser = new pb::MessageParser<EventOrderRate>(() => new EventOrderRate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventOrderRate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventOrderRateConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventOrderRate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventOrderRate(EventOrderRate other) : this() {
      id_ = other.id_;
      cost_ = other.cost_;
      eventThemeId_ = other.eventThemeId_;
      gradeId_ = other.gradeId_;
      startThemeId_ = other.startThemeId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventOrderRate Clone() {
      return new EventOrderRate(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 活动Id
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "cost" field.</summary>
    public const int CostFieldNumber = 2;
    private int cost_;
    /// <summary>
    /// 进度条积分所需ID
    /// （ObjBasic.id)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Cost {
      get { return cost_; }
      set {
        cost_ = value;
      }
    }

    /// <summary>Field number for the "eventThemeId" field.</summary>
    public const int EventThemeIdFieldNumber = 3;
    private int eventThemeId_;
    /// <summary>
    /// 活动开启弹板
    /// （EventTheme.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EventThemeId {
      get { return eventThemeId_; }
      set {
        eventThemeId_ = value;
      }
    }

    /// <summary>Field number for the "gradeId" field.</summary>
    public const int GradeIdFieldNumber = 4;
    private int gradeId_;
    /// <summary>
    /// 分层
    /// （受档位组控制）
    /// （GradeIndexMapping.id）
    /// （EventDiggingDetail.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GradeId {
      get { return gradeId_; }
      set {
        gradeId_ = value;
      }
    }

    /// <summary>Field number for the "startThemeId" field.</summary>
    public const int StartThemeIdFieldNumber = 5;
    private int startThemeId_;
    /// <summary>
    /// 激活弹板
    /// （EventTheme.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StartThemeId {
      get { return startThemeId_; }
      set {
        startThemeId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventOrderRate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventOrderRate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Cost != other.Cost) return false;
      if (EventThemeId != other.EventThemeId) return false;
      if (GradeId != other.GradeId) return false;
      if (StartThemeId != other.StartThemeId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Cost != 0) hash ^= Cost.GetHashCode();
      if (EventThemeId != 0) hash ^= EventThemeId.GetHashCode();
      if (GradeId != 0) hash ^= GradeId.GetHashCode();
      if (StartThemeId != 0) hash ^= StartThemeId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Cost != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Cost);
      }
      if (EventThemeId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(EventThemeId);
      }
      if (GradeId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(GradeId);
      }
      if (StartThemeId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(StartThemeId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Cost != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Cost);
      }
      if (EventThemeId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(EventThemeId);
      }
      if (GradeId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(GradeId);
      }
      if (StartThemeId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(StartThemeId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Cost != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Cost);
      }
      if (EventThemeId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EventThemeId);
      }
      if (GradeId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GradeId);
      }
      if (StartThemeId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartThemeId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventOrderRate other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Cost != 0) {
        Cost = other.Cost;
      }
      if (other.EventThemeId != 0) {
        EventThemeId = other.EventThemeId;
      }
      if (other.GradeId != 0) {
        GradeId = other.GradeId;
      }
      if (other.StartThemeId != 0) {
        StartThemeId = other.StartThemeId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Cost = input.ReadInt32();
            break;
          }
          case 24: {
            EventThemeId = input.ReadInt32();
            break;
          }
          case 32: {
            GradeId = input.ReadInt32();
            break;
          }
          case 40: {
            StartThemeId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Cost = input.ReadInt32();
            break;
          }
          case 24: {
            EventThemeId = input.ReadInt32();
            break;
          }
          case 32: {
            GradeId = input.ReadInt32();
            break;
          }
          case 40: {
            StartThemeId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventOrderRateMapABValue : pb::IMessage<EventOrderRateMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventOrderRateMapABValue> _parser = new pb::MessageParser<EventOrderRateMapABValue>(() => new EventOrderRateMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventOrderRateMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventOrderRateConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventOrderRateMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventOrderRateMapABValue(EventOrderRateMapABValue other) : this() {
      eventOrderRateMap_ = other.eventOrderRateMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventOrderRateMapABValue Clone() {
      return new EventOrderRateMapABValue(this);
    }

    /// <summary>Field number for the "EventOrderRateMap" field.</summary>
    public const int EventOrderRateMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventOrderRate>.Codec _map_eventOrderRateMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventOrderRate>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventOrderRate.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventOrderRate> eventOrderRateMap_ = new pbc::MapField<int, global::fat.rawdata.EventOrderRate>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventOrderRate> EventOrderRateMap {
      get { return eventOrderRateMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventOrderRateMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventOrderRateMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventOrderRateMap.Equals(other.EventOrderRateMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventOrderRateMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventOrderRateMap_.WriteTo(output, _map_eventOrderRateMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventOrderRateMap_.WriteTo(ref output, _map_eventOrderRateMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventOrderRateMap_.CalculateSize(_map_eventOrderRateMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventOrderRateMapABValue other) {
      if (other == null) {
        return;
      }
      eventOrderRateMap_.Add(other.eventOrderRateMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventOrderRateMap_.AddEntriesFrom(input, _map_eventOrderRateMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventOrderRateMap_.AddEntriesFrom(ref input, _map_eventOrderRateMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventOrderRateConf : pb::IMessage<EventOrderRateConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventOrderRateConf> _parser = new pb::MessageParser<EventOrderRateConf>(() => new EventOrderRateConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventOrderRateConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventOrderRateConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventOrderRateConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventOrderRateConf(EventOrderRateConf other) : this() {
      eventOrderRateMap_ = other.eventOrderRateMap_.Clone();
      eventOrderRateMapAB_ = other.eventOrderRateMapAB_.Clone();
      eventOrderRateMapABPatch_ = other.eventOrderRateMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventOrderRateConf Clone() {
      return new EventOrderRateConf(this);
    }

    /// <summary>Field number for the "EventOrderRateMap" field.</summary>
    public const int EventOrderRateMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventOrderRate>.Codec _map_eventOrderRateMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventOrderRate>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventOrderRate.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventOrderRate> eventOrderRateMap_ = new pbc::MapField<int, global::fat.rawdata.EventOrderRate>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventOrderRate> EventOrderRateMap {
      get { return eventOrderRateMap_; }
    }

    /// <summary>Field number for the "EventOrderRateMapAB" field.</summary>
    public const int EventOrderRateMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventOrderRateMapABValue>.Codec _map_eventOrderRateMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventOrderRateMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventOrderRateMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventOrderRateMapABValue> eventOrderRateMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventOrderRateMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventOrderRateMapABValue> EventOrderRateMapAB {
      get { return eventOrderRateMapAB_; }
    }

    /// <summary>Field number for the "EventOrderRateMapABPatch" field.</summary>
    public const int EventOrderRateMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventOrderRateMapABValue>.Codec _map_eventOrderRateMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventOrderRateMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventOrderRateMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventOrderRateMapABValue> eventOrderRateMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventOrderRateMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventOrderRateMapABValue> EventOrderRateMapABPatch {
      get { return eventOrderRateMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventOrderRateConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventOrderRateConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventOrderRateMap.Equals(other.EventOrderRateMap)) return false;
      if (!EventOrderRateMapAB.Equals(other.EventOrderRateMapAB)) return false;
      if (!EventOrderRateMapABPatch.Equals(other.EventOrderRateMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventOrderRateMap.GetHashCode();
      hash ^= EventOrderRateMapAB.GetHashCode();
      hash ^= EventOrderRateMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventOrderRateMap_.WriteTo(output, _map_eventOrderRateMap_codec);
      eventOrderRateMapAB_.WriteTo(output, _map_eventOrderRateMapAB_codec);
      eventOrderRateMapABPatch_.WriteTo(output, _map_eventOrderRateMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventOrderRateMap_.WriteTo(ref output, _map_eventOrderRateMap_codec);
      eventOrderRateMapAB_.WriteTo(ref output, _map_eventOrderRateMapAB_codec);
      eventOrderRateMapABPatch_.WriteTo(ref output, _map_eventOrderRateMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventOrderRateMap_.CalculateSize(_map_eventOrderRateMap_codec);
      size += eventOrderRateMapAB_.CalculateSize(_map_eventOrderRateMapAB_codec);
      size += eventOrderRateMapABPatch_.CalculateSize(_map_eventOrderRateMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventOrderRateConf other) {
      if (other == null) {
        return;
      }
      eventOrderRateMap_.Add(other.eventOrderRateMap_);
      eventOrderRateMapAB_.Add(other.eventOrderRateMapAB_);
      eventOrderRateMapABPatch_.Add(other.eventOrderRateMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventOrderRateMap_.AddEntriesFrom(input, _map_eventOrderRateMap_codec);
            break;
          }
          case 18: {
            eventOrderRateMapAB_.AddEntriesFrom(input, _map_eventOrderRateMapAB_codec);
            break;
          }
          case 26: {
            eventOrderRateMapABPatch_.AddEntriesFrom(input, _map_eventOrderRateMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventOrderRateMap_.AddEntriesFrom(ref input, _map_eventOrderRateMap_codec);
            break;
          }
          case 18: {
            eventOrderRateMapAB_.AddEntriesFrom(ref input, _map_eventOrderRateMapAB_codec);
            break;
          }
          case 26: {
            eventOrderRateMapABPatch_.AddEntriesFrom(ref input, _map_eventOrderRateMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
