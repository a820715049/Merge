// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventBingoTaskInfoConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventBingoTaskInfoConf.proto</summary>
  public static partial class EventBingoTaskInfoConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventBingoTaskInfoConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventBingoTaskInfoConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiRyYXdkYXRhL0V2ZW50QmluZ29UYXNrSW5mb0NvbmYucHJvdG8SB3Jhd2Rh",
            "dGEioQEKEkV2ZW50QmluZ29UYXNrSW5mbxIKCgJpZBgBIAEoBRIMCgRkZXNj",
            "GAIgASgJEhAKCGljb25TaG93GAMgASgJEg0KBWluZGV4GAQgASgFEhcKD2lz",
            "RGVmYXVsdFVubG9jaxgFIAEoCBIUCgxyZXF1aXJlUGFyYW0YBiABKAkSEAoI",
            "dGFza1R5cGUYByABKAUSDwoHdG9rZW5JZBgIIAEoBSLaAQocRXZlbnRCaW5n",
            "b1Rhc2tJbmZvTWFwQUJWYWx1ZRJfChVFdmVudEJpbmdvVGFza0luZm9NYXAY",
            "ASADKAsyQC5yYXdkYXRhLkV2ZW50QmluZ29UYXNrSW5mb01hcEFCVmFsdWUu",
            "RXZlbnRCaW5nb1Rhc2tJbmZvTWFwRW50cnkaWQoaRXZlbnRCaW5nb1Rhc2tJ",
            "bmZvTWFwRW50cnkSCwoDa2V5GAEgASgFEioKBXZhbHVlGAIgASgLMhsucmF3",
            "ZGF0YS5FdmVudEJpbmdvVGFza0luZm86AjgBIukEChZFdmVudEJpbmdvVGFz",
            "a0luZm9Db25mElkKFUV2ZW50QmluZ29UYXNrSW5mb01hcBgBIAMoCzI6LnJh",
            "d2RhdGEuRXZlbnRCaW5nb1Rhc2tJbmZvQ29uZi5FdmVudEJpbmdvVGFza0lu",
            "Zm9NYXBFbnRyeRJdChdFdmVudEJpbmdvVGFza0luZm9NYXBBQhgCIAMoCzI8",
            "LnJhd2RhdGEuRXZlbnRCaW5nb1Rhc2tJbmZvQ29uZi5FdmVudEJpbmdvVGFz",
            "a0luZm9NYXBBQkVudHJ5EmcKHEV2ZW50QmluZ29UYXNrSW5mb01hcEFCUGF0",
            "Y2gYAyADKAsyQS5yYXdkYXRhLkV2ZW50QmluZ29UYXNrSW5mb0NvbmYuRXZl",
            "bnRCaW5nb1Rhc2tJbmZvTWFwQUJQYXRjaEVudHJ5GlkKGkV2ZW50QmluZ29U",
            "YXNrSW5mb01hcEVudHJ5EgsKA2tleRgBIAEoBRIqCgV2YWx1ZRgCIAEoCzIb",
            "LnJhd2RhdGEuRXZlbnRCaW5nb1Rhc2tJbmZvOgI4ARplChxFdmVudEJpbmdv",
            "VGFza0luZm9NYXBBQkVudHJ5EgsKA2tleRgBIAEoCRI0CgV2YWx1ZRgCIAEo",
            "CzIlLnJhd2RhdGEuRXZlbnRCaW5nb1Rhc2tJbmZvTWFwQUJWYWx1ZToCOAEa",
            "agohRXZlbnRCaW5nb1Rhc2tJbmZvTWFwQUJQYXRjaEVudHJ5EgsKA2tleRgB",
            "IAEoCRI0CgV2YWx1ZRgCIAEoCzIlLnJhd2RhdGEuRXZlbnRCaW5nb1Rhc2tJ",
            "bmZvTWFwQUJWYWx1ZToCOAFCPVotZ2l0bGFiLmZ1bnBsdXMuaW8vZmF0L2Nv",
            "bmYvZ2VuL2dvbGFuZy9yYXdkYXRhqgILZmF0LnJhd2RhdGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventBingoTaskInfo), global::fat.rawdata.EventBingoTaskInfo.Parser, new[]{ "Id", "Desc", "IconShow", "Index", "IsDefaultUnlock", "RequireParam", "TaskType", "TokenId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventBingoTaskInfoMapABValue), global::fat.rawdata.EventBingoTaskInfoMapABValue.Parser, new[]{ "EventBingoTaskInfoMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventBingoTaskInfoConf), global::fat.rawdata.EventBingoTaskInfoConf.Parser, new[]{ "EventBingoTaskInfoMap", "EventBingoTaskInfoMapAB", "EventBingoTaskInfoMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventBingoTaskInfo",table="EventBingoTaskInfoMap",table_wrapper="EventBingoTaskInfoConf",map="true",map_key_type="int32",data="EventBingoTaskInfoConf")
  /// annotation@ab(table_ab="EventBingoTaskInfoMapAB",table_ab_patch="EventBingoTaskInfoMapABPatch",table_ab_value="EventBingoTaskInfoMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventBingoTaskInfo(id="id")
  /// </summary>
  public sealed partial class EventBingoTaskInfo : pb::IMessage<EventBingoTaskInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventBingoTaskInfo> _parser = new pb::MessageParser<EventBingoTaskInfo>(() => new EventBingoTaskInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventBingoTaskInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventBingoTaskInfoConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventBingoTaskInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventBingoTaskInfo(EventBingoTaskInfo other) : this() {
      id_ = other.id_;
      desc_ = other.desc_;
      iconShow_ = other.iconShow_;
      index_ = other.index_;
      isDefaultUnlock_ = other.isDefaultUnlock_;
      requireParam_ = other.requireParam_;
      taskType_ = other.taskType_;
      tokenId_ = other.tokenId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventBingoTaskInfo Clone() {
      return new EventBingoTaskInfo(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 任务id
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "desc" field.</summary>
    public const int DescFieldNumber = 2;
    private string desc_ = "";
    /// <summary>
    /// 任务描述
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Desc {
      get { return desc_; }
      set {
        desc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "iconShow" field.</summary>
    public const int IconShowFieldNumber = 3;
    private string iconShow_ = "";
    /// <summary>
    /// 任务icon图
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IconShow {
      get { return iconShow_; }
      set {
        iconShow_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 4;
    private int index_;
    /// <summary>
    /// 任务排序
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    /// <summary>Field number for the "isDefaultUnlock" field.</summary>
    public const int IsDefaultUnlockFieldNumber = 5;
    private bool isDefaultUnlock_;
    /// <summary>
    /// 是否默认解锁
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsDefaultUnlock {
      get { return isDefaultUnlock_; }
      set {
        isDefaultUnlock_ = value;
      }
    }

    /// <summary>Field number for the "requireParam" field.</summary>
    public const int RequireParamFieldNumber = 6;
    private string requireParam_ = "";
    /// <summary>
    /// 任务要求数量
    /// （数量:计算方式）
    /// 参数2计算方式规则如下：
    /// 0 = 数量
    /// 3 = 数量*（等级系数/100），RoundCoin取整
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RequireParam {
      get { return requireParam_; }
      set {
        requireParam_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "taskType" field.</summary>
    public const int TaskTypeFieldNumber = 7;
    private int taskType_;
    /// <summary>
    /// 任务类型
    /// （EventBingoTaskType@enum.value）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TaskType {
      get { return taskType_; }
      set {
        taskType_ = value;
      }
    }

    /// <summary>Field number for the "tokenId" field.</summary>
    public const int TokenIdFieldNumber = 8;
    private int tokenId_;
    /// <summary>
    /// 关联具体活动
    /// 根据tokenId关联到对应活动
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TokenId {
      get { return tokenId_; }
      set {
        tokenId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventBingoTaskInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventBingoTaskInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Desc != other.Desc) return false;
      if (IconShow != other.IconShow) return false;
      if (Index != other.Index) return false;
      if (IsDefaultUnlock != other.IsDefaultUnlock) return false;
      if (RequireParam != other.RequireParam) return false;
      if (TaskType != other.TaskType) return false;
      if (TokenId != other.TokenId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Desc.Length != 0) hash ^= Desc.GetHashCode();
      if (IconShow.Length != 0) hash ^= IconShow.GetHashCode();
      if (Index != 0) hash ^= Index.GetHashCode();
      if (IsDefaultUnlock != false) hash ^= IsDefaultUnlock.GetHashCode();
      if (RequireParam.Length != 0) hash ^= RequireParam.GetHashCode();
      if (TaskType != 0) hash ^= TaskType.GetHashCode();
      if (TokenId != 0) hash ^= TokenId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Desc.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Desc);
      }
      if (IconShow.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(IconShow);
      }
      if (Index != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Index);
      }
      if (IsDefaultUnlock != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsDefaultUnlock);
      }
      if (RequireParam.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(RequireParam);
      }
      if (TaskType != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(TaskType);
      }
      if (TokenId != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(TokenId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Desc.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Desc);
      }
      if (IconShow.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(IconShow);
      }
      if (Index != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Index);
      }
      if (IsDefaultUnlock != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsDefaultUnlock);
      }
      if (RequireParam.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(RequireParam);
      }
      if (TaskType != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(TaskType);
      }
      if (TokenId != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(TokenId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Desc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Desc);
      }
      if (IconShow.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IconShow);
      }
      if (Index != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
      }
      if (IsDefaultUnlock != false) {
        size += 1 + 1;
      }
      if (RequireParam.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RequireParam);
      }
      if (TaskType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TaskType);
      }
      if (TokenId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TokenId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventBingoTaskInfo other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Desc.Length != 0) {
        Desc = other.Desc;
      }
      if (other.IconShow.Length != 0) {
        IconShow = other.IconShow;
      }
      if (other.Index != 0) {
        Index = other.Index;
      }
      if (other.IsDefaultUnlock != false) {
        IsDefaultUnlock = other.IsDefaultUnlock;
      }
      if (other.RequireParam.Length != 0) {
        RequireParam = other.RequireParam;
      }
      if (other.TaskType != 0) {
        TaskType = other.TaskType;
      }
      if (other.TokenId != 0) {
        TokenId = other.TokenId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Desc = input.ReadString();
            break;
          }
          case 26: {
            IconShow = input.ReadString();
            break;
          }
          case 32: {
            Index = input.ReadInt32();
            break;
          }
          case 40: {
            IsDefaultUnlock = input.ReadBool();
            break;
          }
          case 50: {
            RequireParam = input.ReadString();
            break;
          }
          case 56: {
            TaskType = input.ReadInt32();
            break;
          }
          case 64: {
            TokenId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Desc = input.ReadString();
            break;
          }
          case 26: {
            IconShow = input.ReadString();
            break;
          }
          case 32: {
            Index = input.ReadInt32();
            break;
          }
          case 40: {
            IsDefaultUnlock = input.ReadBool();
            break;
          }
          case 50: {
            RequireParam = input.ReadString();
            break;
          }
          case 56: {
            TaskType = input.ReadInt32();
            break;
          }
          case 64: {
            TokenId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventBingoTaskInfoMapABValue : pb::IMessage<EventBingoTaskInfoMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventBingoTaskInfoMapABValue> _parser = new pb::MessageParser<EventBingoTaskInfoMapABValue>(() => new EventBingoTaskInfoMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventBingoTaskInfoMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventBingoTaskInfoConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventBingoTaskInfoMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventBingoTaskInfoMapABValue(EventBingoTaskInfoMapABValue other) : this() {
      eventBingoTaskInfoMap_ = other.eventBingoTaskInfoMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventBingoTaskInfoMapABValue Clone() {
      return new EventBingoTaskInfoMapABValue(this);
    }

    /// <summary>Field number for the "EventBingoTaskInfoMap" field.</summary>
    public const int EventBingoTaskInfoMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventBingoTaskInfo>.Codec _map_eventBingoTaskInfoMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventBingoTaskInfo>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventBingoTaskInfo.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventBingoTaskInfo> eventBingoTaskInfoMap_ = new pbc::MapField<int, global::fat.rawdata.EventBingoTaskInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventBingoTaskInfo> EventBingoTaskInfoMap {
      get { return eventBingoTaskInfoMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventBingoTaskInfoMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventBingoTaskInfoMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventBingoTaskInfoMap.Equals(other.EventBingoTaskInfoMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventBingoTaskInfoMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventBingoTaskInfoMap_.WriteTo(output, _map_eventBingoTaskInfoMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventBingoTaskInfoMap_.WriteTo(ref output, _map_eventBingoTaskInfoMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventBingoTaskInfoMap_.CalculateSize(_map_eventBingoTaskInfoMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventBingoTaskInfoMapABValue other) {
      if (other == null) {
        return;
      }
      eventBingoTaskInfoMap_.Add(other.eventBingoTaskInfoMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventBingoTaskInfoMap_.AddEntriesFrom(input, _map_eventBingoTaskInfoMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventBingoTaskInfoMap_.AddEntriesFrom(ref input, _map_eventBingoTaskInfoMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventBingoTaskInfoConf : pb::IMessage<EventBingoTaskInfoConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventBingoTaskInfoConf> _parser = new pb::MessageParser<EventBingoTaskInfoConf>(() => new EventBingoTaskInfoConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventBingoTaskInfoConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventBingoTaskInfoConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventBingoTaskInfoConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventBingoTaskInfoConf(EventBingoTaskInfoConf other) : this() {
      eventBingoTaskInfoMap_ = other.eventBingoTaskInfoMap_.Clone();
      eventBingoTaskInfoMapAB_ = other.eventBingoTaskInfoMapAB_.Clone();
      eventBingoTaskInfoMapABPatch_ = other.eventBingoTaskInfoMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventBingoTaskInfoConf Clone() {
      return new EventBingoTaskInfoConf(this);
    }

    /// <summary>Field number for the "EventBingoTaskInfoMap" field.</summary>
    public const int EventBingoTaskInfoMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventBingoTaskInfo>.Codec _map_eventBingoTaskInfoMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventBingoTaskInfo>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventBingoTaskInfo.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventBingoTaskInfo> eventBingoTaskInfoMap_ = new pbc::MapField<int, global::fat.rawdata.EventBingoTaskInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventBingoTaskInfo> EventBingoTaskInfoMap {
      get { return eventBingoTaskInfoMap_; }
    }

    /// <summary>Field number for the "EventBingoTaskInfoMapAB" field.</summary>
    public const int EventBingoTaskInfoMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventBingoTaskInfoMapABValue>.Codec _map_eventBingoTaskInfoMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventBingoTaskInfoMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventBingoTaskInfoMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventBingoTaskInfoMapABValue> eventBingoTaskInfoMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventBingoTaskInfoMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventBingoTaskInfoMapABValue> EventBingoTaskInfoMapAB {
      get { return eventBingoTaskInfoMapAB_; }
    }

    /// <summary>Field number for the "EventBingoTaskInfoMapABPatch" field.</summary>
    public const int EventBingoTaskInfoMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventBingoTaskInfoMapABValue>.Codec _map_eventBingoTaskInfoMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventBingoTaskInfoMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventBingoTaskInfoMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventBingoTaskInfoMapABValue> eventBingoTaskInfoMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventBingoTaskInfoMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventBingoTaskInfoMapABValue> EventBingoTaskInfoMapABPatch {
      get { return eventBingoTaskInfoMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventBingoTaskInfoConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventBingoTaskInfoConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventBingoTaskInfoMap.Equals(other.EventBingoTaskInfoMap)) return false;
      if (!EventBingoTaskInfoMapAB.Equals(other.EventBingoTaskInfoMapAB)) return false;
      if (!EventBingoTaskInfoMapABPatch.Equals(other.EventBingoTaskInfoMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventBingoTaskInfoMap.GetHashCode();
      hash ^= EventBingoTaskInfoMapAB.GetHashCode();
      hash ^= EventBingoTaskInfoMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventBingoTaskInfoMap_.WriteTo(output, _map_eventBingoTaskInfoMap_codec);
      eventBingoTaskInfoMapAB_.WriteTo(output, _map_eventBingoTaskInfoMapAB_codec);
      eventBingoTaskInfoMapABPatch_.WriteTo(output, _map_eventBingoTaskInfoMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventBingoTaskInfoMap_.WriteTo(ref output, _map_eventBingoTaskInfoMap_codec);
      eventBingoTaskInfoMapAB_.WriteTo(ref output, _map_eventBingoTaskInfoMapAB_codec);
      eventBingoTaskInfoMapABPatch_.WriteTo(ref output, _map_eventBingoTaskInfoMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventBingoTaskInfoMap_.CalculateSize(_map_eventBingoTaskInfoMap_codec);
      size += eventBingoTaskInfoMapAB_.CalculateSize(_map_eventBingoTaskInfoMapAB_codec);
      size += eventBingoTaskInfoMapABPatch_.CalculateSize(_map_eventBingoTaskInfoMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventBingoTaskInfoConf other) {
      if (other == null) {
        return;
      }
      eventBingoTaskInfoMap_.Add(other.eventBingoTaskInfoMap_);
      eventBingoTaskInfoMapAB_.Add(other.eventBingoTaskInfoMapAB_);
      eventBingoTaskInfoMapABPatch_.Add(other.eventBingoTaskInfoMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventBingoTaskInfoMap_.AddEntriesFrom(input, _map_eventBingoTaskInfoMap_codec);
            break;
          }
          case 18: {
            eventBingoTaskInfoMapAB_.AddEntriesFrom(input, _map_eventBingoTaskInfoMapAB_codec);
            break;
          }
          case 26: {
            eventBingoTaskInfoMapABPatch_.AddEntriesFrom(input, _map_eventBingoTaskInfoMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventBingoTaskInfoMap_.AddEntriesFrom(ref input, _map_eventBingoTaskInfoMap_codec);
            break;
          }
          case 18: {
            eventBingoTaskInfoMapAB_.AddEntriesFrom(ref input, _map_eventBingoTaskInfoMapAB_codec);
            break;
          }
          case 26: {
            eventBingoTaskInfoMapABPatch_.AddEntriesFrom(ref input, _map_eventBingoTaskInfoMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
