// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EndlessPackConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EndlessPackConf.proto</summary>
  public static partial class EndlessPackConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EndlessPackConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EndlessPackConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch1yYXdkYXRhL0VuZGxlc3NQYWNrQ29uZi5wcm90bxIHcmF3ZGF0YSJ6CgtF",
            "bmRsZXNzUGFjaxIKCgJpZBgBIAEoBRIQCghkZXRhaWxpZBgCIAMoBRISCgpl",
            "dmVudFRoZW1lGAcgASgFEhAKCHByb2dyZXNzGAggASgFEhYKDnN0YXJ0TG9v",
            "cFBrZ0lkGAQgASgFEg8KB3Rva2VuSWQYCSABKAUisAEKFUVuZGxlc3NQYWNr",
            "TWFwQUJWYWx1ZRJKCg5FbmRsZXNzUGFja01hcBgBIAMoCzIyLnJhd2RhdGEu",
            "RW5kbGVzc1BhY2tNYXBBQlZhbHVlLkVuZGxlc3NQYWNrTWFwRW50cnkaSwoT",
            "RW5kbGVzc1BhY2tNYXBFbnRyeRILCgNrZXkYASABKAUSIwoFdmFsdWUYAiAB",
            "KAsyFC5yYXdkYXRhLkVuZGxlc3NQYWNrOgI4ASL5AwoPRW5kbGVzc1BhY2tD",
            "b25mEkQKDkVuZGxlc3NQYWNrTWFwGAEgAygLMiwucmF3ZGF0YS5FbmRsZXNz",
            "UGFja0NvbmYuRW5kbGVzc1BhY2tNYXBFbnRyeRJIChBFbmRsZXNzUGFja01h",
            "cEFCGAIgAygLMi4ucmF3ZGF0YS5FbmRsZXNzUGFja0NvbmYuRW5kbGVzc1Bh",
            "Y2tNYXBBQkVudHJ5ElIKFUVuZGxlc3NQYWNrTWFwQUJQYXRjaBgDIAMoCzIz",
            "LnJhd2RhdGEuRW5kbGVzc1BhY2tDb25mLkVuZGxlc3NQYWNrTWFwQUJQYXRj",
            "aEVudHJ5GksKE0VuZGxlc3NQYWNrTWFwRW50cnkSCwoDa2V5GAEgASgFEiMK",
            "BXZhbHVlGAIgASgLMhQucmF3ZGF0YS5FbmRsZXNzUGFjazoCOAEaVwoVRW5k",
            "bGVzc1BhY2tNYXBBQkVudHJ5EgsKA2tleRgBIAEoCRItCgV2YWx1ZRgCIAEo",
            "CzIeLnJhd2RhdGEuRW5kbGVzc1BhY2tNYXBBQlZhbHVlOgI4ARpcChpFbmRs",
            "ZXNzUGFja01hcEFCUGF0Y2hFbnRyeRILCgNrZXkYASABKAkSLQoFdmFsdWUY",
            "AiABKAsyHi5yYXdkYXRhLkVuZGxlc3NQYWNrTWFwQUJWYWx1ZToCOAFCPVot",
            "Z2l0bGFiLmZ1bnBsdXMuaW8vZmF0L2NvbmYvZ2VuL2dvbGFuZy9yYXdkYXRh",
            "qgILZmF0LnJhd2RhdGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EndlessPack), global::fat.rawdata.EndlessPack.Parser, new[]{ "Id", "Detailid", "EventTheme", "Progress", "StartLoopPkgId", "TokenId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EndlessPackMapABValue), global::fat.rawdata.EndlessPackMapABValue.Parser, new[]{ "EndlessPackMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EndlessPackConf), global::fat.rawdata.EndlessPackConf.Parser, new[]{ "EndlessPackMap", "EndlessPackMapAB", "EndlessPackMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EndlessPack",table="EndlessPackMap",table_wrapper="EndlessPackConf",map="true",map_key_type="int32",data="EndlessPackConf")
  /// annotation@ab(table_ab="EndlessPackMapAB",table_ab_patch="EndlessPackMapABPatch",table_ab_value="EndlessPackMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EndlessPack(id="id")
  /// </summary>
  public sealed partial class EndlessPack : pb::IMessage<EndlessPack>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EndlessPack> _parser = new pb::MessageParser<EndlessPack>(() => new EndlessPack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EndlessPack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EndlessPackConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndlessPack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndlessPack(EndlessPack other) : this() {
      id_ = other.id_;
      detailid_ = other.detailid_.Clone();
      eventTheme_ = other.eventTheme_;
      progress_ = other.progress_;
      startLoopPkgId_ = other.startLoopPkgId_;
      tokenId_ = other.tokenId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndlessPack Clone() {
      return new EndlessPack(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 无限礼包
    /// 模板ID
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "detailid" field.</summary>
    public const int DetailidFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_detailid_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> detailid_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 礼包详情id(填写顺序决定出现顺序)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Detailid {
      get { return detailid_; }
    }

    /// <summary>Field number for the "eventTheme" field.</summary>
    public const int EventThemeFieldNumber = 7;
    private int eventTheme_;
    /// <summary>
    /// 活动弹板ID
    /// （EventTheme.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EventTheme {
      get { return eventTheme_; }
      set {
        eventTheme_ = value;
      }
    }

    /// <summary>Field number for the "progress" field.</summary>
    public const int ProgressFieldNumber = 8;
    private int progress_;
    /// <summary>
    /// 进度条详情
    /// (受档位组控制)
    /// （GradeIndexMapping.id）
    /// （EndlessProgress.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Progress {
      get { return progress_; }
      set {
        progress_ = value;
      }
    }

    /// <summary>Field number for the "startLoopPkgId" field.</summary>
    public const int StartLoopPkgIdFieldNumber = 4;
    private int startLoopPkgId_;
    /// <summary>
    /// 从哪个礼包开始循环
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StartLoopPkgId {
      get { return startLoopPkgId_; }
      set {
        startLoopPkgId_ = value;
      }
    }

    /// <summary>Field number for the "tokenId" field.</summary>
    public const int TokenIdFieldNumber = 9;
    private int tokenId_;
    /// <summary>
    /// 进度值id
    /// （进度条版本）
    /// (ObjToken.id)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TokenId {
      get { return tokenId_; }
      set {
        tokenId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EndlessPack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EndlessPack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!detailid_.Equals(other.detailid_)) return false;
      if (EventTheme != other.EventTheme) return false;
      if (Progress != other.Progress) return false;
      if (StartLoopPkgId != other.StartLoopPkgId) return false;
      if (TokenId != other.TokenId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      hash ^= detailid_.GetHashCode();
      if (EventTheme != 0) hash ^= EventTheme.GetHashCode();
      if (Progress != 0) hash ^= Progress.GetHashCode();
      if (StartLoopPkgId != 0) hash ^= StartLoopPkgId.GetHashCode();
      if (TokenId != 0) hash ^= TokenId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      detailid_.WriteTo(output, _repeated_detailid_codec);
      if (StartLoopPkgId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(StartLoopPkgId);
      }
      if (EventTheme != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(EventTheme);
      }
      if (Progress != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Progress);
      }
      if (TokenId != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(TokenId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      detailid_.WriteTo(ref output, _repeated_detailid_codec);
      if (StartLoopPkgId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(StartLoopPkgId);
      }
      if (EventTheme != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(EventTheme);
      }
      if (Progress != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Progress);
      }
      if (TokenId != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(TokenId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      size += detailid_.CalculateSize(_repeated_detailid_codec);
      if (EventTheme != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EventTheme);
      }
      if (Progress != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Progress);
      }
      if (StartLoopPkgId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartLoopPkgId);
      }
      if (TokenId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TokenId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EndlessPack other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      detailid_.Add(other.detailid_);
      if (other.EventTheme != 0) {
        EventTheme = other.EventTheme;
      }
      if (other.Progress != 0) {
        Progress = other.Progress;
      }
      if (other.StartLoopPkgId != 0) {
        StartLoopPkgId = other.StartLoopPkgId;
      }
      if (other.TokenId != 0) {
        TokenId = other.TokenId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            detailid_.AddEntriesFrom(input, _repeated_detailid_codec);
            break;
          }
          case 32: {
            StartLoopPkgId = input.ReadInt32();
            break;
          }
          case 56: {
            EventTheme = input.ReadInt32();
            break;
          }
          case 64: {
            Progress = input.ReadInt32();
            break;
          }
          case 72: {
            TokenId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            detailid_.AddEntriesFrom(ref input, _repeated_detailid_codec);
            break;
          }
          case 32: {
            StartLoopPkgId = input.ReadInt32();
            break;
          }
          case 56: {
            EventTheme = input.ReadInt32();
            break;
          }
          case 64: {
            Progress = input.ReadInt32();
            break;
          }
          case 72: {
            TokenId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EndlessPackMapABValue : pb::IMessage<EndlessPackMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EndlessPackMapABValue> _parser = new pb::MessageParser<EndlessPackMapABValue>(() => new EndlessPackMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EndlessPackMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EndlessPackConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndlessPackMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndlessPackMapABValue(EndlessPackMapABValue other) : this() {
      endlessPackMap_ = other.endlessPackMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndlessPackMapABValue Clone() {
      return new EndlessPackMapABValue(this);
    }

    /// <summary>Field number for the "EndlessPackMap" field.</summary>
    public const int EndlessPackMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EndlessPack>.Codec _map_endlessPackMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EndlessPack>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EndlessPack.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EndlessPack> endlessPackMap_ = new pbc::MapField<int, global::fat.rawdata.EndlessPack>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EndlessPack> EndlessPackMap {
      get { return endlessPackMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EndlessPackMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EndlessPackMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EndlessPackMap.Equals(other.EndlessPackMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EndlessPackMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      endlessPackMap_.WriteTo(output, _map_endlessPackMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      endlessPackMap_.WriteTo(ref output, _map_endlessPackMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += endlessPackMap_.CalculateSize(_map_endlessPackMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EndlessPackMapABValue other) {
      if (other == null) {
        return;
      }
      endlessPackMap_.Add(other.endlessPackMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            endlessPackMap_.AddEntriesFrom(input, _map_endlessPackMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            endlessPackMap_.AddEntriesFrom(ref input, _map_endlessPackMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EndlessPackConf : pb::IMessage<EndlessPackConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EndlessPackConf> _parser = new pb::MessageParser<EndlessPackConf>(() => new EndlessPackConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EndlessPackConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EndlessPackConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndlessPackConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndlessPackConf(EndlessPackConf other) : this() {
      endlessPackMap_ = other.endlessPackMap_.Clone();
      endlessPackMapAB_ = other.endlessPackMapAB_.Clone();
      endlessPackMapABPatch_ = other.endlessPackMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndlessPackConf Clone() {
      return new EndlessPackConf(this);
    }

    /// <summary>Field number for the "EndlessPackMap" field.</summary>
    public const int EndlessPackMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EndlessPack>.Codec _map_endlessPackMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EndlessPack>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EndlessPack.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EndlessPack> endlessPackMap_ = new pbc::MapField<int, global::fat.rawdata.EndlessPack>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EndlessPack> EndlessPackMap {
      get { return endlessPackMap_; }
    }

    /// <summary>Field number for the "EndlessPackMapAB" field.</summary>
    public const int EndlessPackMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EndlessPackMapABValue>.Codec _map_endlessPackMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EndlessPackMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EndlessPackMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EndlessPackMapABValue> endlessPackMapAB_ = new pbc::MapField<string, global::fat.rawdata.EndlessPackMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EndlessPackMapABValue> EndlessPackMapAB {
      get { return endlessPackMapAB_; }
    }

    /// <summary>Field number for the "EndlessPackMapABPatch" field.</summary>
    public const int EndlessPackMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EndlessPackMapABValue>.Codec _map_endlessPackMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EndlessPackMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EndlessPackMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EndlessPackMapABValue> endlessPackMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EndlessPackMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EndlessPackMapABValue> EndlessPackMapABPatch {
      get { return endlessPackMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EndlessPackConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EndlessPackConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EndlessPackMap.Equals(other.EndlessPackMap)) return false;
      if (!EndlessPackMapAB.Equals(other.EndlessPackMapAB)) return false;
      if (!EndlessPackMapABPatch.Equals(other.EndlessPackMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EndlessPackMap.GetHashCode();
      hash ^= EndlessPackMapAB.GetHashCode();
      hash ^= EndlessPackMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      endlessPackMap_.WriteTo(output, _map_endlessPackMap_codec);
      endlessPackMapAB_.WriteTo(output, _map_endlessPackMapAB_codec);
      endlessPackMapABPatch_.WriteTo(output, _map_endlessPackMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      endlessPackMap_.WriteTo(ref output, _map_endlessPackMap_codec);
      endlessPackMapAB_.WriteTo(ref output, _map_endlessPackMapAB_codec);
      endlessPackMapABPatch_.WriteTo(ref output, _map_endlessPackMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += endlessPackMap_.CalculateSize(_map_endlessPackMap_codec);
      size += endlessPackMapAB_.CalculateSize(_map_endlessPackMapAB_codec);
      size += endlessPackMapABPatch_.CalculateSize(_map_endlessPackMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EndlessPackConf other) {
      if (other == null) {
        return;
      }
      endlessPackMap_.Add(other.endlessPackMap_);
      endlessPackMapAB_.Add(other.endlessPackMapAB_);
      endlessPackMapABPatch_.Add(other.endlessPackMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            endlessPackMap_.AddEntriesFrom(input, _map_endlessPackMap_codec);
            break;
          }
          case 18: {
            endlessPackMapAB_.AddEntriesFrom(input, _map_endlessPackMapAB_codec);
            break;
          }
          case 26: {
            endlessPackMapABPatch_.AddEntriesFrom(input, _map_endlessPackMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            endlessPackMap_.AddEntriesFrom(ref input, _map_endlessPackMap_codec);
            break;
          }
          case 18: {
            endlessPackMapAB_.AddEntriesFrom(ref input, _map_endlessPackMapAB_codec);
            break;
          }
          case 26: {
            endlessPackMapABPatch_.AddEntriesFrom(ref input, _map_endlessPackMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
