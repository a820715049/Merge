// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventRaceGroupConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventRaceGroupConf.proto</summary>
  public static partial class EventRaceGroupConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventRaceGroupConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventRaceGroupConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiByYXdkYXRhL0V2ZW50UmFjZUdyb3VwQ29uZi5wcm90bxIHcmF3ZGF0YSI3",
            "Cg5FdmVudFJhY2VHcm91cBIKCgJpZBgBIAEoBRIZChFpbmNsdWRlUm91bmRH",
            "cnBJZBgCIAEoBSLCAQoYRXZlbnRSYWNlR3JvdXBNYXBBQlZhbHVlElMKEUV2",
            "ZW50UmFjZUdyb3VwTWFwGAEgAygLMjgucmF3ZGF0YS5FdmVudFJhY2VHcm91",
            "cE1hcEFCVmFsdWUuRXZlbnRSYWNlR3JvdXBNYXBFbnRyeRpRChZFdmVudFJh",
            "Y2VHcm91cE1hcEVudHJ5EgsKA2tleRgBIAEoBRImCgV2YWx1ZRgCIAEoCzIX",
            "LnJhd2RhdGEuRXZlbnRSYWNlR3JvdXA6AjgBIqkEChJFdmVudFJhY2VHcm91",
            "cENvbmYSTQoRRXZlbnRSYWNlR3JvdXBNYXAYASADKAsyMi5yYXdkYXRhLkV2",
            "ZW50UmFjZUdyb3VwQ29uZi5FdmVudFJhY2VHcm91cE1hcEVudHJ5ElEKE0V2",
            "ZW50UmFjZUdyb3VwTWFwQUIYAiADKAsyNC5yYXdkYXRhLkV2ZW50UmFjZUdy",
            "b3VwQ29uZi5FdmVudFJhY2VHcm91cE1hcEFCRW50cnkSWwoYRXZlbnRSYWNl",
            "R3JvdXBNYXBBQlBhdGNoGAMgAygLMjkucmF3ZGF0YS5FdmVudFJhY2VHcm91",
            "cENvbmYuRXZlbnRSYWNlR3JvdXBNYXBBQlBhdGNoRW50cnkaUQoWRXZlbnRS",
            "YWNlR3JvdXBNYXBFbnRyeRILCgNrZXkYASABKAUSJgoFdmFsdWUYAiABKAsy",
            "Fy5yYXdkYXRhLkV2ZW50UmFjZUdyb3VwOgI4ARpdChhFdmVudFJhY2VHcm91",
            "cE1hcEFCRW50cnkSCwoDa2V5GAEgASgJEjAKBXZhbHVlGAIgASgLMiEucmF3",
            "ZGF0YS5FdmVudFJhY2VHcm91cE1hcEFCVmFsdWU6AjgBGmIKHUV2ZW50UmFj",
            "ZUdyb3VwTWFwQUJQYXRjaEVudHJ5EgsKA2tleRgBIAEoCRIwCgV2YWx1ZRgC",
            "IAEoCzIhLnJhd2RhdGEuRXZlbnRSYWNlR3JvdXBNYXBBQlZhbHVlOgI4AUI9",
            "Wi1naXRsYWIuZnVucGx1cy5pby9mYXQvY29uZi9nZW4vZ29sYW5nL3Jhd2Rh",
            "dGGqAgtmYXQucmF3ZGF0YWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventRaceGroup), global::fat.rawdata.EventRaceGroup.Parser, new[]{ "Id", "IncludeRoundGrpId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventRaceGroupMapABValue), global::fat.rawdata.EventRaceGroupMapABValue.Parser, new[]{ "EventRaceGroupMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventRaceGroupConf), global::fat.rawdata.EventRaceGroupConf.Parser, new[]{ "EventRaceGroupMap", "EventRaceGroupMapAB", "EventRaceGroupMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventRaceGroup",table="EventRaceGroupMap",table_wrapper="EventRaceGroupConf",map="true",map_key_type="int32",data="EventRaceGroupConf")
  /// annotation@ab(table_ab="EventRaceGroupMapAB",table_ab_patch="EventRaceGroupMapABPatch",table_ab_value="EventRaceGroupMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventRaceGroup(id="id")
  /// </summary>
  public sealed partial class EventRaceGroup : pb::IMessage<EventRaceGroup>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventRaceGroup> _parser = new pb::MessageParser<EventRaceGroup>(() => new EventRaceGroup());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventRaceGroup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventRaceGroupConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventRaceGroup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventRaceGroup(EventRaceGroup other) : this() {
      id_ = other.id_;
      includeRoundGrpId_ = other.includeRoundGrpId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventRaceGroup Clone() {
      return new EventRaceGroup(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 回合ID
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "includeRoundGrpId" field.</summary>
    public const int IncludeRoundGrpIdFieldNumber = 2;
    private int includeRoundGrpId_;
    /// <summary>
    /// GradeIndexMapping.id
    /// EventRaceRound.id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IncludeRoundGrpId {
      get { return includeRoundGrpId_; }
      set {
        includeRoundGrpId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventRaceGroup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventRaceGroup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (IncludeRoundGrpId != other.IncludeRoundGrpId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (IncludeRoundGrpId != 0) hash ^= IncludeRoundGrpId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (IncludeRoundGrpId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(IncludeRoundGrpId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (IncludeRoundGrpId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(IncludeRoundGrpId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (IncludeRoundGrpId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IncludeRoundGrpId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventRaceGroup other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.IncludeRoundGrpId != 0) {
        IncludeRoundGrpId = other.IncludeRoundGrpId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            IncludeRoundGrpId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            IncludeRoundGrpId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventRaceGroupMapABValue : pb::IMessage<EventRaceGroupMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventRaceGroupMapABValue> _parser = new pb::MessageParser<EventRaceGroupMapABValue>(() => new EventRaceGroupMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventRaceGroupMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventRaceGroupConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventRaceGroupMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventRaceGroupMapABValue(EventRaceGroupMapABValue other) : this() {
      eventRaceGroupMap_ = other.eventRaceGroupMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventRaceGroupMapABValue Clone() {
      return new EventRaceGroupMapABValue(this);
    }

    /// <summary>Field number for the "EventRaceGroupMap" field.</summary>
    public const int EventRaceGroupMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventRaceGroup>.Codec _map_eventRaceGroupMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventRaceGroup>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventRaceGroup.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventRaceGroup> eventRaceGroupMap_ = new pbc::MapField<int, global::fat.rawdata.EventRaceGroup>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventRaceGroup> EventRaceGroupMap {
      get { return eventRaceGroupMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventRaceGroupMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventRaceGroupMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventRaceGroupMap.Equals(other.EventRaceGroupMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventRaceGroupMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventRaceGroupMap_.WriteTo(output, _map_eventRaceGroupMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventRaceGroupMap_.WriteTo(ref output, _map_eventRaceGroupMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventRaceGroupMap_.CalculateSize(_map_eventRaceGroupMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventRaceGroupMapABValue other) {
      if (other == null) {
        return;
      }
      eventRaceGroupMap_.Add(other.eventRaceGroupMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventRaceGroupMap_.AddEntriesFrom(input, _map_eventRaceGroupMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventRaceGroupMap_.AddEntriesFrom(ref input, _map_eventRaceGroupMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventRaceGroupConf : pb::IMessage<EventRaceGroupConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventRaceGroupConf> _parser = new pb::MessageParser<EventRaceGroupConf>(() => new EventRaceGroupConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventRaceGroupConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventRaceGroupConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventRaceGroupConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventRaceGroupConf(EventRaceGroupConf other) : this() {
      eventRaceGroupMap_ = other.eventRaceGroupMap_.Clone();
      eventRaceGroupMapAB_ = other.eventRaceGroupMapAB_.Clone();
      eventRaceGroupMapABPatch_ = other.eventRaceGroupMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventRaceGroupConf Clone() {
      return new EventRaceGroupConf(this);
    }

    /// <summary>Field number for the "EventRaceGroupMap" field.</summary>
    public const int EventRaceGroupMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventRaceGroup>.Codec _map_eventRaceGroupMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventRaceGroup>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventRaceGroup.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventRaceGroup> eventRaceGroupMap_ = new pbc::MapField<int, global::fat.rawdata.EventRaceGroup>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventRaceGroup> EventRaceGroupMap {
      get { return eventRaceGroupMap_; }
    }

    /// <summary>Field number for the "EventRaceGroupMapAB" field.</summary>
    public const int EventRaceGroupMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventRaceGroupMapABValue>.Codec _map_eventRaceGroupMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventRaceGroupMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventRaceGroupMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventRaceGroupMapABValue> eventRaceGroupMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventRaceGroupMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventRaceGroupMapABValue> EventRaceGroupMapAB {
      get { return eventRaceGroupMapAB_; }
    }

    /// <summary>Field number for the "EventRaceGroupMapABPatch" field.</summary>
    public const int EventRaceGroupMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventRaceGroupMapABValue>.Codec _map_eventRaceGroupMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventRaceGroupMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventRaceGroupMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventRaceGroupMapABValue> eventRaceGroupMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventRaceGroupMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventRaceGroupMapABValue> EventRaceGroupMapABPatch {
      get { return eventRaceGroupMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventRaceGroupConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventRaceGroupConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventRaceGroupMap.Equals(other.EventRaceGroupMap)) return false;
      if (!EventRaceGroupMapAB.Equals(other.EventRaceGroupMapAB)) return false;
      if (!EventRaceGroupMapABPatch.Equals(other.EventRaceGroupMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventRaceGroupMap.GetHashCode();
      hash ^= EventRaceGroupMapAB.GetHashCode();
      hash ^= EventRaceGroupMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventRaceGroupMap_.WriteTo(output, _map_eventRaceGroupMap_codec);
      eventRaceGroupMapAB_.WriteTo(output, _map_eventRaceGroupMapAB_codec);
      eventRaceGroupMapABPatch_.WriteTo(output, _map_eventRaceGroupMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventRaceGroupMap_.WriteTo(ref output, _map_eventRaceGroupMap_codec);
      eventRaceGroupMapAB_.WriteTo(ref output, _map_eventRaceGroupMapAB_codec);
      eventRaceGroupMapABPatch_.WriteTo(ref output, _map_eventRaceGroupMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventRaceGroupMap_.CalculateSize(_map_eventRaceGroupMap_codec);
      size += eventRaceGroupMapAB_.CalculateSize(_map_eventRaceGroupMapAB_codec);
      size += eventRaceGroupMapABPatch_.CalculateSize(_map_eventRaceGroupMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventRaceGroupConf other) {
      if (other == null) {
        return;
      }
      eventRaceGroupMap_.Add(other.eventRaceGroupMap_);
      eventRaceGroupMapAB_.Add(other.eventRaceGroupMapAB_);
      eventRaceGroupMapABPatch_.Add(other.eventRaceGroupMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventRaceGroupMap_.AddEntriesFrom(input, _map_eventRaceGroupMap_codec);
            break;
          }
          case 18: {
            eventRaceGroupMapAB_.AddEntriesFrom(input, _map_eventRaceGroupMapAB_codec);
            break;
          }
          case 26: {
            eventRaceGroupMapABPatch_.AddEntriesFrom(input, _map_eventRaceGroupMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventRaceGroupMap_.AddEntriesFrom(ref input, _map_eventRaceGroupMap_codec);
            break;
          }
          case 18: {
            eventRaceGroupMapAB_.AddEntriesFrom(ref input, _map_eventRaceGroupMapAB_codec);
            break;
          }
          case 26: {
            eventRaceGroupMapABPatch_.AddEntriesFrom(ref input, _map_eventRaceGroupMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
