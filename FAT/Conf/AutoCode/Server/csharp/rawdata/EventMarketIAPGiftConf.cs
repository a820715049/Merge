// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventMarketIAPGiftConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventMarketIAPGiftConf.proto</summary>
  public static partial class EventMarketIAPGiftConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventMarketIAPGiftConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventMarketIAPGiftConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiRyYXdkYXRhL0V2ZW50TWFya2V0SUFQR2lmdENvbmYucHJvdG8SB3Jhd2Rh",
            "dGEiogEKEkV2ZW50TWFya2V0SUFQR2lmdBIKCgJpZBgBIAEoBRISCgpldmVu",
            "dFRoZW1lGAcgASgFEjsKCHNsb3RQYWNrGAIgAygLMikucmF3ZGF0YS5FdmVu",
            "dE1hcmtldElBUEdpZnQuU2xvdFBhY2tFbnRyeRovCg1TbG90UGFja0VudHJ5",
            "EgsKA2tleRgBIAEoBRINCgV2YWx1ZRgCIAEoBToCOAEi2gEKHEV2ZW50TWFy",
            "a2V0SUFQR2lmdE1hcEFCVmFsdWUSXwoVRXZlbnRNYXJrZXRJQVBHaWZ0TWFw",
            "GAEgAygLMkAucmF3ZGF0YS5FdmVudE1hcmtldElBUEdpZnRNYXBBQlZhbHVl",
            "LkV2ZW50TWFya2V0SUFQR2lmdE1hcEVudHJ5GlkKGkV2ZW50TWFya2V0SUFQ",
            "R2lmdE1hcEVudHJ5EgsKA2tleRgBIAEoBRIqCgV2YWx1ZRgCIAEoCzIbLnJh",
            "d2RhdGEuRXZlbnRNYXJrZXRJQVBHaWZ0OgI4ASLpBAoWRXZlbnRNYXJrZXRJ",
            "QVBHaWZ0Q29uZhJZChVFdmVudE1hcmtldElBUEdpZnRNYXAYASADKAsyOi5y",
            "YXdkYXRhLkV2ZW50TWFya2V0SUFQR2lmdENvbmYuRXZlbnRNYXJrZXRJQVBH",
            "aWZ0TWFwRW50cnkSXQoXRXZlbnRNYXJrZXRJQVBHaWZ0TWFwQUIYAiADKAsy",
            "PC5yYXdkYXRhLkV2ZW50TWFya2V0SUFQR2lmdENvbmYuRXZlbnRNYXJrZXRJ",
            "QVBHaWZ0TWFwQUJFbnRyeRJnChxFdmVudE1hcmtldElBUEdpZnRNYXBBQlBh",
            "dGNoGAMgAygLMkEucmF3ZGF0YS5FdmVudE1hcmtldElBUEdpZnRDb25mLkV2",
            "ZW50TWFya2V0SUFQR2lmdE1hcEFCUGF0Y2hFbnRyeRpZChpFdmVudE1hcmtl",
            "dElBUEdpZnRNYXBFbnRyeRILCgNrZXkYASABKAUSKgoFdmFsdWUYAiABKAsy",
            "Gy5yYXdkYXRhLkV2ZW50TWFya2V0SUFQR2lmdDoCOAEaZQocRXZlbnRNYXJr",
            "ZXRJQVBHaWZ0TWFwQUJFbnRyeRILCgNrZXkYASABKAkSNAoFdmFsdWUYAiAB",
            "KAsyJS5yYXdkYXRhLkV2ZW50TWFya2V0SUFQR2lmdE1hcEFCVmFsdWU6AjgB",
            "GmoKIUV2ZW50TWFya2V0SUFQR2lmdE1hcEFCUGF0Y2hFbnRyeRILCgNrZXkY",
            "ASABKAkSNAoFdmFsdWUYAiABKAsyJS5yYXdkYXRhLkV2ZW50TWFya2V0SUFQ",
            "R2lmdE1hcEFCVmFsdWU6AjgBQj1aLWdpdGxhYi5mdW5wbHVzLmlvL2ZhdC9j",
            "b25mL2dlbi9nb2xhbmcvcmF3ZGF0YaoCC2ZhdC5yYXdkYXRhYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventMarketIAPGift), global::fat.rawdata.EventMarketIAPGift.Parser, new[]{ "Id", "EventTheme", "SlotPack" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventMarketIAPGiftMapABValue), global::fat.rawdata.EventMarketIAPGiftMapABValue.Parser, new[]{ "EventMarketIAPGiftMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventMarketIAPGiftConf), global::fat.rawdata.EventMarketIAPGiftConf.Parser, new[]{ "EventMarketIAPGiftMap", "EventMarketIAPGiftMapAB", "EventMarketIAPGiftMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventMarketIAPGift",table="EventMarketIAPGiftMap",table_wrapper="EventMarketIAPGiftConf",map="true",map_key_type="int32",data="EventMarketIAPGiftConf")
  /// annotation@ab(table_ab="EventMarketIAPGiftMapAB",table_ab_patch="EventMarketIAPGiftMapABPatch",table_ab_value="EventMarketIAPGiftMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventMarketIAPGift(id="id")
  /// </summary>
  public sealed partial class EventMarketIAPGift : pb::IMessage<EventMarketIAPGift>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventMarketIAPGift> _parser = new pb::MessageParser<EventMarketIAPGift>(() => new EventMarketIAPGift());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventMarketIAPGift> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventMarketIAPGiftConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMarketIAPGift() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMarketIAPGift(EventMarketIAPGift other) : this() {
      id_ = other.id_;
      eventTheme_ = other.eventTheme_;
      slotPack_ = other.slotPack_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMarketIAPGift Clone() {
      return new EventMarketIAPGift(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 商城赠品变化
    /// 活动模板ID
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "eventTheme" field.</summary>
    public const int EventThemeFieldNumber = 7;
    private int eventTheme_;
    /// <summary>
    /// 活动弹板ID
    /// （EventTheme.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EventTheme {
      get { return eventTheme_; }
      set {
        eventTheme_ = value;
      }
    }

    /// <summary>Field number for the "slotPack" field.</summary>
    public const int SlotPackFieldNumber = 2;
    private static readonly pbc::MapField<int, int>.Codec _map_slotPack_codec
        = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForInt32(16, 0), 18);
    private readonly pbc::MapField<int, int> slotPack_ = new pbc::MapField<int, int>();
    /// <summary>
    /// 决定内购商品替换成什么
    /// {MarketIAP.id:MareketIAP.packId}
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, int> SlotPack {
      get { return slotPack_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventMarketIAPGift);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventMarketIAPGift other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (EventTheme != other.EventTheme) return false;
      if (!SlotPack.Equals(other.SlotPack)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (EventTheme != 0) hash ^= EventTheme.GetHashCode();
      hash ^= SlotPack.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      slotPack_.WriteTo(output, _map_slotPack_codec);
      if (EventTheme != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(EventTheme);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      slotPack_.WriteTo(ref output, _map_slotPack_codec);
      if (EventTheme != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(EventTheme);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (EventTheme != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EventTheme);
      }
      size += slotPack_.CalculateSize(_map_slotPack_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventMarketIAPGift other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.EventTheme != 0) {
        EventTheme = other.EventTheme;
      }
      slotPack_.Add(other.slotPack_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            slotPack_.AddEntriesFrom(input, _map_slotPack_codec);
            break;
          }
          case 56: {
            EventTheme = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            slotPack_.AddEntriesFrom(ref input, _map_slotPack_codec);
            break;
          }
          case 56: {
            EventTheme = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventMarketIAPGiftMapABValue : pb::IMessage<EventMarketIAPGiftMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventMarketIAPGiftMapABValue> _parser = new pb::MessageParser<EventMarketIAPGiftMapABValue>(() => new EventMarketIAPGiftMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventMarketIAPGiftMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventMarketIAPGiftConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMarketIAPGiftMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMarketIAPGiftMapABValue(EventMarketIAPGiftMapABValue other) : this() {
      eventMarketIAPGiftMap_ = other.eventMarketIAPGiftMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMarketIAPGiftMapABValue Clone() {
      return new EventMarketIAPGiftMapABValue(this);
    }

    /// <summary>Field number for the "EventMarketIAPGiftMap" field.</summary>
    public const int EventMarketIAPGiftMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventMarketIAPGift>.Codec _map_eventMarketIAPGiftMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventMarketIAPGift>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventMarketIAPGift.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventMarketIAPGift> eventMarketIAPGiftMap_ = new pbc::MapField<int, global::fat.rawdata.EventMarketIAPGift>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventMarketIAPGift> EventMarketIAPGiftMap {
      get { return eventMarketIAPGiftMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventMarketIAPGiftMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventMarketIAPGiftMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventMarketIAPGiftMap.Equals(other.EventMarketIAPGiftMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventMarketIAPGiftMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventMarketIAPGiftMap_.WriteTo(output, _map_eventMarketIAPGiftMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventMarketIAPGiftMap_.WriteTo(ref output, _map_eventMarketIAPGiftMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventMarketIAPGiftMap_.CalculateSize(_map_eventMarketIAPGiftMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventMarketIAPGiftMapABValue other) {
      if (other == null) {
        return;
      }
      eventMarketIAPGiftMap_.Add(other.eventMarketIAPGiftMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventMarketIAPGiftMap_.AddEntriesFrom(input, _map_eventMarketIAPGiftMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventMarketIAPGiftMap_.AddEntriesFrom(ref input, _map_eventMarketIAPGiftMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventMarketIAPGiftConf : pb::IMessage<EventMarketIAPGiftConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventMarketIAPGiftConf> _parser = new pb::MessageParser<EventMarketIAPGiftConf>(() => new EventMarketIAPGiftConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventMarketIAPGiftConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventMarketIAPGiftConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMarketIAPGiftConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMarketIAPGiftConf(EventMarketIAPGiftConf other) : this() {
      eventMarketIAPGiftMap_ = other.eventMarketIAPGiftMap_.Clone();
      eventMarketIAPGiftMapAB_ = other.eventMarketIAPGiftMapAB_.Clone();
      eventMarketIAPGiftMapABPatch_ = other.eventMarketIAPGiftMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMarketIAPGiftConf Clone() {
      return new EventMarketIAPGiftConf(this);
    }

    /// <summary>Field number for the "EventMarketIAPGiftMap" field.</summary>
    public const int EventMarketIAPGiftMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventMarketIAPGift>.Codec _map_eventMarketIAPGiftMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventMarketIAPGift>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventMarketIAPGift.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventMarketIAPGift> eventMarketIAPGiftMap_ = new pbc::MapField<int, global::fat.rawdata.EventMarketIAPGift>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventMarketIAPGift> EventMarketIAPGiftMap {
      get { return eventMarketIAPGiftMap_; }
    }

    /// <summary>Field number for the "EventMarketIAPGiftMapAB" field.</summary>
    public const int EventMarketIAPGiftMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventMarketIAPGiftMapABValue>.Codec _map_eventMarketIAPGiftMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventMarketIAPGiftMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventMarketIAPGiftMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventMarketIAPGiftMapABValue> eventMarketIAPGiftMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventMarketIAPGiftMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventMarketIAPGiftMapABValue> EventMarketIAPGiftMapAB {
      get { return eventMarketIAPGiftMapAB_; }
    }

    /// <summary>Field number for the "EventMarketIAPGiftMapABPatch" field.</summary>
    public const int EventMarketIAPGiftMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventMarketIAPGiftMapABValue>.Codec _map_eventMarketIAPGiftMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventMarketIAPGiftMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventMarketIAPGiftMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventMarketIAPGiftMapABValue> eventMarketIAPGiftMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventMarketIAPGiftMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventMarketIAPGiftMapABValue> EventMarketIAPGiftMapABPatch {
      get { return eventMarketIAPGiftMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventMarketIAPGiftConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventMarketIAPGiftConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventMarketIAPGiftMap.Equals(other.EventMarketIAPGiftMap)) return false;
      if (!EventMarketIAPGiftMapAB.Equals(other.EventMarketIAPGiftMapAB)) return false;
      if (!EventMarketIAPGiftMapABPatch.Equals(other.EventMarketIAPGiftMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventMarketIAPGiftMap.GetHashCode();
      hash ^= EventMarketIAPGiftMapAB.GetHashCode();
      hash ^= EventMarketIAPGiftMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventMarketIAPGiftMap_.WriteTo(output, _map_eventMarketIAPGiftMap_codec);
      eventMarketIAPGiftMapAB_.WriteTo(output, _map_eventMarketIAPGiftMapAB_codec);
      eventMarketIAPGiftMapABPatch_.WriteTo(output, _map_eventMarketIAPGiftMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventMarketIAPGiftMap_.WriteTo(ref output, _map_eventMarketIAPGiftMap_codec);
      eventMarketIAPGiftMapAB_.WriteTo(ref output, _map_eventMarketIAPGiftMapAB_codec);
      eventMarketIAPGiftMapABPatch_.WriteTo(ref output, _map_eventMarketIAPGiftMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventMarketIAPGiftMap_.CalculateSize(_map_eventMarketIAPGiftMap_codec);
      size += eventMarketIAPGiftMapAB_.CalculateSize(_map_eventMarketIAPGiftMapAB_codec);
      size += eventMarketIAPGiftMapABPatch_.CalculateSize(_map_eventMarketIAPGiftMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventMarketIAPGiftConf other) {
      if (other == null) {
        return;
      }
      eventMarketIAPGiftMap_.Add(other.eventMarketIAPGiftMap_);
      eventMarketIAPGiftMapAB_.Add(other.eventMarketIAPGiftMapAB_);
      eventMarketIAPGiftMapABPatch_.Add(other.eventMarketIAPGiftMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventMarketIAPGiftMap_.AddEntriesFrom(input, _map_eventMarketIAPGiftMap_codec);
            break;
          }
          case 18: {
            eventMarketIAPGiftMapAB_.AddEntriesFrom(input, _map_eventMarketIAPGiftMapAB_codec);
            break;
          }
          case 26: {
            eventMarketIAPGiftMapABPatch_.AddEntriesFrom(input, _map_eventMarketIAPGiftMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventMarketIAPGiftMap_.AddEntriesFrom(ref input, _map_eventMarketIAPGiftMap_codec);
            break;
          }
          case 18: {
            eventMarketIAPGiftMapAB_.AddEntriesFrom(ref input, _map_eventMarketIAPGiftMapAB_codec);
            break;
          }
          case 26: {
            eventMarketIAPGiftMapABPatch_.AddEntriesFrom(ref input, _map_eventMarketIAPGiftMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
