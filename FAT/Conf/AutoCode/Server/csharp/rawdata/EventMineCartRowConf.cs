// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventMineCartRowConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventMineCartRowConf.proto</summary>
  public static partial class EventMineCartRowConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventMineCartRowConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventMineCartRowConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiJyYXdkYXRhL0V2ZW50TWluZUNhcnRSb3dDb25mLnByb3RvEgdyYXdkYXRh",
            "IjEKEEV2ZW50TWluZUNhcnRSb3cSCgoCaWQYASABKAUSEQoJcm93RGV0YWls",
            "GAIgASgJIs4BChpFdmVudE1pbmVDYXJ0Um93TWFwQUJWYWx1ZRJZChNFdmVu",
            "dE1pbmVDYXJ0Um93TWFwGAEgAygLMjwucmF3ZGF0YS5FdmVudE1pbmVDYXJ0",
            "Um93TWFwQUJWYWx1ZS5FdmVudE1pbmVDYXJ0Um93TWFwRW50cnkaVQoYRXZl",
            "bnRNaW5lQ2FydFJvd01hcEVudHJ5EgsKA2tleRgBIAEoBRIoCgV2YWx1ZRgC",
            "IAEoCzIZLnJhd2RhdGEuRXZlbnRNaW5lQ2FydFJvdzoCOAEiyQQKFEV2ZW50",
            "TWluZUNhcnRSb3dDb25mElMKE0V2ZW50TWluZUNhcnRSb3dNYXAYASADKAsy",
            "Ni5yYXdkYXRhLkV2ZW50TWluZUNhcnRSb3dDb25mLkV2ZW50TWluZUNhcnRS",
            "b3dNYXBFbnRyeRJXChVFdmVudE1pbmVDYXJ0Um93TWFwQUIYAiADKAsyOC5y",
            "YXdkYXRhLkV2ZW50TWluZUNhcnRSb3dDb25mLkV2ZW50TWluZUNhcnRSb3dN",
            "YXBBQkVudHJ5EmEKGkV2ZW50TWluZUNhcnRSb3dNYXBBQlBhdGNoGAMgAygL",
            "Mj0ucmF3ZGF0YS5FdmVudE1pbmVDYXJ0Um93Q29uZi5FdmVudE1pbmVDYXJ0",
            "Um93TWFwQUJQYXRjaEVudHJ5GlUKGEV2ZW50TWluZUNhcnRSb3dNYXBFbnRy",
            "eRILCgNrZXkYASABKAUSKAoFdmFsdWUYAiABKAsyGS5yYXdkYXRhLkV2ZW50",
            "TWluZUNhcnRSb3c6AjgBGmEKGkV2ZW50TWluZUNhcnRSb3dNYXBBQkVudHJ5",
            "EgsKA2tleRgBIAEoCRIyCgV2YWx1ZRgCIAEoCzIjLnJhd2RhdGEuRXZlbnRN",
            "aW5lQ2FydFJvd01hcEFCVmFsdWU6AjgBGmYKH0V2ZW50TWluZUNhcnRSb3dN",
            "YXBBQlBhdGNoRW50cnkSCwoDa2V5GAEgASgJEjIKBXZhbHVlGAIgASgLMiMu",
            "cmF3ZGF0YS5FdmVudE1pbmVDYXJ0Um93TWFwQUJWYWx1ZToCOAFCPVotZ2l0",
            "bGFiLmZ1bnBsdXMuaW8vZmF0L2NvbmYvZ2VuL2dvbGFuZy9yYXdkYXRhqgIL",
            "ZmF0LnJhd2RhdGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventMineCartRow), global::fat.rawdata.EventMineCartRow.Parser, new[]{ "Id", "RowDetail" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventMineCartRowMapABValue), global::fat.rawdata.EventMineCartRowMapABValue.Parser, new[]{ "EventMineCartRowMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventMineCartRowConf), global::fat.rawdata.EventMineCartRowConf.Parser, new[]{ "EventMineCartRowMap", "EventMineCartRowMapAB", "EventMineCartRowMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventMineCartRow",table="EventMineCartRowMap",table_wrapper="EventMineCartRowConf",map="true",map_key_type="int32",data="EventMineCartRowConf")
  /// annotation@ab(table_ab="EventMineCartRowMapAB",table_ab_patch="EventMineCartRowMapABPatch",table_ab_value="EventMineCartRowMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventMineCartRow(id="id")
  /// </summary>
  public sealed partial class EventMineCartRow : pb::IMessage<EventMineCartRow>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventMineCartRow> _parser = new pb::MessageParser<EventMineCartRow>(() => new EventMineCartRow());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventMineCartRow> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventMineCartRowConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMineCartRow() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMineCartRow(EventMineCartRow other) : this() {
      id_ = other.id_;
      rowDetail_ = other.rowDetail_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMineCartRow Clone() {
      return new EventMineCartRow(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// boardRowId
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "rowDetail" field.</summary>
    public const int RowDetailFieldNumber = 2;
    private string rowDetail_ = "";
    /// <summary>
    /// 初始盘面，一列7个格子
    /// 0 = 1.被盒子盖住，附近棋子解锁后，变为蜘蛛网，参数为0/1/2盒子样式（imgBox）。2. 新增：相邻区任意特定代币触发类棋子死亡时转变为解锁状态参数为0/1/2盒子样式（imgBox）
    /// 1 = 蜘蛛网，参数为0
    /// 2 = 默认解锁，参数为0
    /// 3=遮挡状态，遮挡状态解除：1. 相邻区任意相同棋子合成时触发解锁。2. 新增：相邻区任意特定代币触发类棋子死亡时转变为解锁状态参数为0/1/2盒子样式（imgBox）
    /// 4 = 被等级限制，参数为玩家等级值（盒子样式为imgBox第0张）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RowDetail {
      get { return rowDetail_; }
      set {
        rowDetail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventMineCartRow);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventMineCartRow other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (RowDetail != other.RowDetail) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (RowDetail.Length != 0) hash ^= RowDetail.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (RowDetail.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RowDetail);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (RowDetail.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RowDetail);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (RowDetail.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RowDetail);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventMineCartRow other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.RowDetail.Length != 0) {
        RowDetail = other.RowDetail;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            RowDetail = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            RowDetail = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventMineCartRowMapABValue : pb::IMessage<EventMineCartRowMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventMineCartRowMapABValue> _parser = new pb::MessageParser<EventMineCartRowMapABValue>(() => new EventMineCartRowMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventMineCartRowMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventMineCartRowConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMineCartRowMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMineCartRowMapABValue(EventMineCartRowMapABValue other) : this() {
      eventMineCartRowMap_ = other.eventMineCartRowMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMineCartRowMapABValue Clone() {
      return new EventMineCartRowMapABValue(this);
    }

    /// <summary>Field number for the "EventMineCartRowMap" field.</summary>
    public const int EventMineCartRowMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventMineCartRow>.Codec _map_eventMineCartRowMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventMineCartRow>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventMineCartRow.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventMineCartRow> eventMineCartRowMap_ = new pbc::MapField<int, global::fat.rawdata.EventMineCartRow>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventMineCartRow> EventMineCartRowMap {
      get { return eventMineCartRowMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventMineCartRowMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventMineCartRowMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventMineCartRowMap.Equals(other.EventMineCartRowMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventMineCartRowMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventMineCartRowMap_.WriteTo(output, _map_eventMineCartRowMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventMineCartRowMap_.WriteTo(ref output, _map_eventMineCartRowMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventMineCartRowMap_.CalculateSize(_map_eventMineCartRowMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventMineCartRowMapABValue other) {
      if (other == null) {
        return;
      }
      eventMineCartRowMap_.Add(other.eventMineCartRowMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventMineCartRowMap_.AddEntriesFrom(input, _map_eventMineCartRowMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventMineCartRowMap_.AddEntriesFrom(ref input, _map_eventMineCartRowMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventMineCartRowConf : pb::IMessage<EventMineCartRowConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventMineCartRowConf> _parser = new pb::MessageParser<EventMineCartRowConf>(() => new EventMineCartRowConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventMineCartRowConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventMineCartRowConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMineCartRowConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMineCartRowConf(EventMineCartRowConf other) : this() {
      eventMineCartRowMap_ = other.eventMineCartRowMap_.Clone();
      eventMineCartRowMapAB_ = other.eventMineCartRowMapAB_.Clone();
      eventMineCartRowMapABPatch_ = other.eventMineCartRowMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventMineCartRowConf Clone() {
      return new EventMineCartRowConf(this);
    }

    /// <summary>Field number for the "EventMineCartRowMap" field.</summary>
    public const int EventMineCartRowMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventMineCartRow>.Codec _map_eventMineCartRowMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventMineCartRow>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventMineCartRow.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventMineCartRow> eventMineCartRowMap_ = new pbc::MapField<int, global::fat.rawdata.EventMineCartRow>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventMineCartRow> EventMineCartRowMap {
      get { return eventMineCartRowMap_; }
    }

    /// <summary>Field number for the "EventMineCartRowMapAB" field.</summary>
    public const int EventMineCartRowMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventMineCartRowMapABValue>.Codec _map_eventMineCartRowMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventMineCartRowMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventMineCartRowMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventMineCartRowMapABValue> eventMineCartRowMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventMineCartRowMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventMineCartRowMapABValue> EventMineCartRowMapAB {
      get { return eventMineCartRowMapAB_; }
    }

    /// <summary>Field number for the "EventMineCartRowMapABPatch" field.</summary>
    public const int EventMineCartRowMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventMineCartRowMapABValue>.Codec _map_eventMineCartRowMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventMineCartRowMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventMineCartRowMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventMineCartRowMapABValue> eventMineCartRowMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventMineCartRowMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventMineCartRowMapABValue> EventMineCartRowMapABPatch {
      get { return eventMineCartRowMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventMineCartRowConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventMineCartRowConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventMineCartRowMap.Equals(other.EventMineCartRowMap)) return false;
      if (!EventMineCartRowMapAB.Equals(other.EventMineCartRowMapAB)) return false;
      if (!EventMineCartRowMapABPatch.Equals(other.EventMineCartRowMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventMineCartRowMap.GetHashCode();
      hash ^= EventMineCartRowMapAB.GetHashCode();
      hash ^= EventMineCartRowMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventMineCartRowMap_.WriteTo(output, _map_eventMineCartRowMap_codec);
      eventMineCartRowMapAB_.WriteTo(output, _map_eventMineCartRowMapAB_codec);
      eventMineCartRowMapABPatch_.WriteTo(output, _map_eventMineCartRowMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventMineCartRowMap_.WriteTo(ref output, _map_eventMineCartRowMap_codec);
      eventMineCartRowMapAB_.WriteTo(ref output, _map_eventMineCartRowMapAB_codec);
      eventMineCartRowMapABPatch_.WriteTo(ref output, _map_eventMineCartRowMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventMineCartRowMap_.CalculateSize(_map_eventMineCartRowMap_codec);
      size += eventMineCartRowMapAB_.CalculateSize(_map_eventMineCartRowMapAB_codec);
      size += eventMineCartRowMapABPatch_.CalculateSize(_map_eventMineCartRowMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventMineCartRowConf other) {
      if (other == null) {
        return;
      }
      eventMineCartRowMap_.Add(other.eventMineCartRowMap_);
      eventMineCartRowMapAB_.Add(other.eventMineCartRowMapAB_);
      eventMineCartRowMapABPatch_.Add(other.eventMineCartRowMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventMineCartRowMap_.AddEntriesFrom(input, _map_eventMineCartRowMap_codec);
            break;
          }
          case 18: {
            eventMineCartRowMapAB_.AddEntriesFrom(input, _map_eventMineCartRowMapAB_codec);
            break;
          }
          case 26: {
            eventMineCartRowMapABPatch_.AddEntriesFrom(input, _map_eventMineCartRowMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventMineCartRowMap_.AddEntriesFrom(ref input, _map_eventMineCartRowMap_codec);
            break;
          }
          case 18: {
            eventMineCartRowMapAB_.AddEntriesFrom(ref input, _map_eventMineCartRowMapAB_codec);
            break;
          }
          case 26: {
            eventMineCartRowMapABPatch_.AddEntriesFrom(ref input, _map_eventMineCartRowMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
