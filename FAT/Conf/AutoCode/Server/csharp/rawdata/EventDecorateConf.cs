// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventDecorateConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventDecorateConf.proto</summary>
  public static partial class EventDecorateConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventDecorateConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventDecorateConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch9yYXdkYXRhL0V2ZW50RGVjb3JhdGVDb25mLnByb3RvEgdyYXdkYXRhIsYD",
            "Cg1FdmVudERlY29yYXRlEgoKAmlkGAEgASgFEhIKCmFnYWluVGhlbWUYAiAB",
            "KAUSDwoHYm9hcmRJZBgDIAEoBRISCgpkZWxldGVUaW1lGAQgASgFEhUKDWVu",
            "ZFJlbWluZFRpbWUYBSABKAUSEAoIZW5kVGhlbWUYBiABKAUSEwoLZW5kVGlw",
            "VGhlbWUYByABKAUSGAoQZXZlbnRDaG9pY2VUaGVtZRgPIAEoBRIWCg5ldmVu",
            "dEhlbHBUaGVtZRgQIAEoBRISCgpldmVudFRoZW1lGAggASgFEjwKC2V4cGly",
            "ZVBvcHVwGAkgAygLMicucmF3ZGF0YS5FdmVudERlY29yYXRlLkV4cGlyZVBv",
            "cHVwRW50cnkSFAoMaW5jbHVkZUdycElkGAogAygFEgwKBG5hbWUYCyABKAkS",
            "EwoLcHJldmlld1Bhcm0YESABKAUSFwoPcmVjb250aW51ZVRoZW1lGAwgASgF",
            "EhYKDnJlcXVpcmVTY29yZUlkGA0gASgFEhAKCHNjb3JlTnVtGA4gASgFGjIK",
            "EEV4cGlyZVBvcHVwRW50cnkSCwoDa2V5GAEgASgFEg0KBXZhbHVlGAIgASgJ",
            "OgI4ASK8AQoXRXZlbnREZWNvcmF0ZU1hcEFCVmFsdWUSUAoQRXZlbnREZWNv",
            "cmF0ZU1hcBgBIAMoCzI2LnJhd2RhdGEuRXZlbnREZWNvcmF0ZU1hcEFCVmFs",
            "dWUuRXZlbnREZWNvcmF0ZU1hcEVudHJ5Gk8KFUV2ZW50RGVjb3JhdGVNYXBF",
            "bnRyeRILCgNrZXkYASABKAUSJQoFdmFsdWUYAiABKAsyFi5yYXdkYXRhLkV2",
            "ZW50RGVjb3JhdGU6AjgBIpkEChFFdmVudERlY29yYXRlQ29uZhJKChBFdmVu",
            "dERlY29yYXRlTWFwGAEgAygLMjAucmF3ZGF0YS5FdmVudERlY29yYXRlQ29u",
            "Zi5FdmVudERlY29yYXRlTWFwRW50cnkSTgoSRXZlbnREZWNvcmF0ZU1hcEFC",
            "GAIgAygLMjIucmF3ZGF0YS5FdmVudERlY29yYXRlQ29uZi5FdmVudERlY29y",
            "YXRlTWFwQUJFbnRyeRJYChdFdmVudERlY29yYXRlTWFwQUJQYXRjaBgDIAMo",
            "CzI3LnJhd2RhdGEuRXZlbnREZWNvcmF0ZUNvbmYuRXZlbnREZWNvcmF0ZU1h",
            "cEFCUGF0Y2hFbnRyeRpPChVFdmVudERlY29yYXRlTWFwRW50cnkSCwoDa2V5",
            "GAEgASgFEiUKBXZhbHVlGAIgASgLMhYucmF3ZGF0YS5FdmVudERlY29yYXRl",
            "OgI4ARpbChdFdmVudERlY29yYXRlTWFwQUJFbnRyeRILCgNrZXkYASABKAkS",
            "LwoFdmFsdWUYAiABKAsyIC5yYXdkYXRhLkV2ZW50RGVjb3JhdGVNYXBBQlZh",
            "bHVlOgI4ARpgChxFdmVudERlY29yYXRlTWFwQUJQYXRjaEVudHJ5EgsKA2tl",
            "eRgBIAEoCRIvCgV2YWx1ZRgCIAEoCzIgLnJhd2RhdGEuRXZlbnREZWNvcmF0",
            "ZU1hcEFCVmFsdWU6AjgBQj1aLWdpdGxhYi5mdW5wbHVzLmlvL2ZhdC9jb25m",
            "L2dlbi9nb2xhbmcvcmF3ZGF0YaoCC2ZhdC5yYXdkYXRhYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventDecorate), global::fat.rawdata.EventDecorate.Parser, new[]{ "Id", "AgainTheme", "BoardId", "DeleteTime", "EndRemindTime", "EndTheme", "EndTipTheme", "EventChoiceTheme", "EventHelpTheme", "EventTheme", "ExpirePopup", "IncludeGrpId", "Name", "PreviewParm", "RecontinueTheme", "RequireScoreId", "ScoreNum" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventDecorateMapABValue), global::fat.rawdata.EventDecorateMapABValue.Parser, new[]{ "EventDecorateMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventDecorateConf), global::fat.rawdata.EventDecorateConf.Parser, new[]{ "EventDecorateMap", "EventDecorateMapAB", "EventDecorateMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventDecorate",table="EventDecorateMap",table_wrapper="EventDecorateConf",map="true",map_key_type="int32",data="EventDecorateConf")
  /// annotation@ab(table_ab="EventDecorateMapAB",table_ab_patch="EventDecorateMapABPatch",table_ab_value="EventDecorateMapABValue",ab_patch="true")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventDecorate(id="id")
  /// </summary>
  public sealed partial class EventDecorate : pb::IMessage<EventDecorate>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventDecorate> _parser = new pb::MessageParser<EventDecorate>(() => new EventDecorate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventDecorate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventDecorateConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventDecorate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventDecorate(EventDecorate other) : this() {
      id_ = other.id_;
      againTheme_ = other.againTheme_;
      boardId_ = other.boardId_;
      deleteTime_ = other.deleteTime_;
      endRemindTime_ = other.endRemindTime_;
      endTheme_ = other.endTheme_;
      endTipTheme_ = other.endTipTheme_;
      eventChoiceTheme_ = other.eventChoiceTheme_;
      eventHelpTheme_ = other.eventHelpTheme_;
      eventTheme_ = other.eventTheme_;
      expirePopup_ = other.expirePopup_.Clone();
      includeGrpId_ = other.includeGrpId_.Clone();
      name_ = other.name_;
      previewParm_ = other.previewParm_;
      recontinueTheme_ = other.recontinueTheme_;
      requireScoreId_ = other.requireScoreId_;
      scoreNum_ = other.scoreNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventDecorate Clone() {
      return new EventDecorate(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 活动ID
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "againTheme" field.</summary>
    public const int AgainThemeFieldNumber = 2;
    private int againTheme_;
    /// <summary>
    /// 重开界面
    /// 活动弹板ID
    /// （EventTheme.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AgainTheme {
      get { return againTheme_; }
      set {
        againTheme_ = value;
      }
    }

    /// <summary>Field number for the "boardId" field.</summary>
    public const int BoardIdFieldNumber = 3;
    private int boardId_;
    /// <summary>
    /// 适用棋盘
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BoardId {
      get { return boardId_; }
      set {
        boardId_ = value;
      }
    }

    /// <summary>Field number for the "deleteTime" field.</summary>
    public const int DeleteTimeFieldNumber = 4;
    private int deleteTime_;
    /// <summary>
    /// 活动结束后
    /// 装饰保存时间（秒）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DeleteTime {
      get { return deleteTime_; }
      set {
        deleteTime_ = value;
      }
    }

    /// <summary>Field number for the "endRemindTime" field.</summary>
    public const int EndRemindTimeFieldNumber = 5;
    private int endRemindTime_;
    /// <summary>
    /// 活动结束前多久之内
    /// 需要弹出活动结束预告
    /// （秒）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EndRemindTime {
      get { return endRemindTime_; }
      set {
        endRemindTime_ = value;
      }
    }

    /// <summary>Field number for the "endTheme" field.</summary>
    public const int EndThemeFieldNumber = 6;
    private int endTheme_;
    /// <summary>
    /// 活动结束
    /// 活动弹板ID
    /// （EventTheme.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EndTheme {
      get { return endTheme_; }
      set {
        endTheme_ = value;
      }
    }

    /// <summary>Field number for the "endTipTheme" field.</summary>
    public const int EndTipThemeFieldNumber = 7;
    private int endTipTheme_;
    /// <summary>
    /// 活动结束预告弹板
    /// 活动弹板ID
    /// （EventTheme.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EndTipTheme {
      get { return endTipTheme_; }
      set {
        endTipTheme_ = value;
      }
    }

    /// <summary>Field number for the "eventChoiceTheme" field.</summary>
    public const int EventChoiceThemeFieldNumber = 15;
    private int eventChoiceTheme_;
    /// <summary>
    /// 选择弹板
    /// 活动弹板ID
    /// （EventTheme.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EventChoiceTheme {
      get { return eventChoiceTheme_; }
      set {
        eventChoiceTheme_ = value;
      }
    }

    /// <summary>Field number for the "eventHelpTheme" field.</summary>
    public const int EventHelpThemeFieldNumber = 16;
    private int eventHelpTheme_;
    /// <summary>
    /// 帮助弹板
    /// 活动弹板ID
    /// （EventTheme.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EventHelpTheme {
      get { return eventHelpTheme_; }
      set {
        eventHelpTheme_ = value;
      }
    }

    /// <summary>Field number for the "eventTheme" field.</summary>
    public const int EventThemeFieldNumber = 8;
    private int eventTheme_;
    /// <summary>
    /// 开启弹板
    /// 活动弹板ID
    /// （EventTheme.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EventTheme {
      get { return eventTheme_; }
      set {
        eventTheme_ = value;
      }
    }

    /// <summary>Field number for the "expirePopup" field.</summary>
    public const int ExpirePopupFieldNumber = 9;
    private static readonly pbc::MapField<int, string>.Codec _map_expirePopup_codec
        = new pbc::MapField<int, string>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForString(18, ""), 74);
    private readonly pbc::MapField<int, string> expirePopup_ = new pbc::MapField<int, string>();
    /// <summary>
    /// 活动结束时
    /// 通过弹板的方式一次性删除积分
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, string> ExpirePopup {
      get { return expirePopup_; }
    }

    /// <summary>Field number for the "includeGrpId" field.</summary>
    public const int IncludeGrpIdFieldNumber = 10;
    private static readonly pb::FieldCodec<int> _repeated_includeGrpId_codec
        = pb::FieldCodec.ForInt32(82);
    private readonly pbc::RepeatedField<int> includeGrpId_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 装饰大组
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> IncludeGrpId {
      get { return includeGrpId_; }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 11;
    private string name_ = "";
    /// <summary>
    /// 名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "previewParm" field.</summary>
    public const int PreviewParmFieldNumber = 17;
    private int previewParm_;
    /// <summary>
    /// 完成N轮解锁预览功能
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PreviewParm {
      get { return previewParm_; }
      set {
        previewParm_ = value;
      }
    }

    /// <summary>Field number for the "recontinueTheme" field.</summary>
    public const int RecontinueThemeFieldNumber = 12;
    private int recontinueTheme_;
    /// <summary>
    /// 回收清算
    /// 活动弹板ID
    /// （EventTheme.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RecontinueTheme {
      get { return recontinueTheme_; }
      set {
        recontinueTheme_ = value;
      }
    }

    /// <summary>Field number for the "requireScoreId" field.</summary>
    public const int RequireScoreIdFieldNumber = 13;
    private int requireScoreId_;
    /// <summary>
    /// 积分ID
    /// （ObjBasic.id)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RequireScoreId {
      get { return requireScoreId_; }
      set {
        requireScoreId_ = value;
      }
    }

    /// <summary>Field number for the "scoreNum" field.</summary>
    public const int ScoreNumFieldNumber = 14;
    private int scoreNum_;
    /// <summary>
    /// 初始值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ScoreNum {
      get { return scoreNum_; }
      set {
        scoreNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventDecorate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventDecorate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (AgainTheme != other.AgainTheme) return false;
      if (BoardId != other.BoardId) return false;
      if (DeleteTime != other.DeleteTime) return false;
      if (EndRemindTime != other.EndRemindTime) return false;
      if (EndTheme != other.EndTheme) return false;
      if (EndTipTheme != other.EndTipTheme) return false;
      if (EventChoiceTheme != other.EventChoiceTheme) return false;
      if (EventHelpTheme != other.EventHelpTheme) return false;
      if (EventTheme != other.EventTheme) return false;
      if (!ExpirePopup.Equals(other.ExpirePopup)) return false;
      if(!includeGrpId_.Equals(other.includeGrpId_)) return false;
      if (Name != other.Name) return false;
      if (PreviewParm != other.PreviewParm) return false;
      if (RecontinueTheme != other.RecontinueTheme) return false;
      if (RequireScoreId != other.RequireScoreId) return false;
      if (ScoreNum != other.ScoreNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (AgainTheme != 0) hash ^= AgainTheme.GetHashCode();
      if (BoardId != 0) hash ^= BoardId.GetHashCode();
      if (DeleteTime != 0) hash ^= DeleteTime.GetHashCode();
      if (EndRemindTime != 0) hash ^= EndRemindTime.GetHashCode();
      if (EndTheme != 0) hash ^= EndTheme.GetHashCode();
      if (EndTipTheme != 0) hash ^= EndTipTheme.GetHashCode();
      if (EventChoiceTheme != 0) hash ^= EventChoiceTheme.GetHashCode();
      if (EventHelpTheme != 0) hash ^= EventHelpTheme.GetHashCode();
      if (EventTheme != 0) hash ^= EventTheme.GetHashCode();
      hash ^= ExpirePopup.GetHashCode();
      hash ^= includeGrpId_.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (PreviewParm != 0) hash ^= PreviewParm.GetHashCode();
      if (RecontinueTheme != 0) hash ^= RecontinueTheme.GetHashCode();
      if (RequireScoreId != 0) hash ^= RequireScoreId.GetHashCode();
      if (ScoreNum != 0) hash ^= ScoreNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (AgainTheme != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(AgainTheme);
      }
      if (BoardId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(BoardId);
      }
      if (DeleteTime != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(DeleteTime);
      }
      if (EndRemindTime != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(EndRemindTime);
      }
      if (EndTheme != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(EndTheme);
      }
      if (EndTipTheme != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(EndTipTheme);
      }
      if (EventTheme != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(EventTheme);
      }
      expirePopup_.WriteTo(output, _map_expirePopup_codec);
      includeGrpId_.WriteTo(output, _repeated_includeGrpId_codec);
      if (Name.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Name);
      }
      if (RecontinueTheme != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(RecontinueTheme);
      }
      if (RequireScoreId != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(RequireScoreId);
      }
      if (ScoreNum != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(ScoreNum);
      }
      if (EventChoiceTheme != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(EventChoiceTheme);
      }
      if (EventHelpTheme != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(EventHelpTheme);
      }
      if (PreviewParm != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(PreviewParm);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (AgainTheme != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(AgainTheme);
      }
      if (BoardId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(BoardId);
      }
      if (DeleteTime != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(DeleteTime);
      }
      if (EndRemindTime != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(EndRemindTime);
      }
      if (EndTheme != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(EndTheme);
      }
      if (EndTipTheme != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(EndTipTheme);
      }
      if (EventTheme != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(EventTheme);
      }
      expirePopup_.WriteTo(ref output, _map_expirePopup_codec);
      includeGrpId_.WriteTo(ref output, _repeated_includeGrpId_codec);
      if (Name.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Name);
      }
      if (RecontinueTheme != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(RecontinueTheme);
      }
      if (RequireScoreId != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(RequireScoreId);
      }
      if (ScoreNum != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(ScoreNum);
      }
      if (EventChoiceTheme != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(EventChoiceTheme);
      }
      if (EventHelpTheme != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(EventHelpTheme);
      }
      if (PreviewParm != 0) {
        output.WriteRawTag(136, 1);
        output.WriteInt32(PreviewParm);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (AgainTheme != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AgainTheme);
      }
      if (BoardId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BoardId);
      }
      if (DeleteTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DeleteTime);
      }
      if (EndRemindTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EndRemindTime);
      }
      if (EndTheme != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EndTheme);
      }
      if (EndTipTheme != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EndTipTheme);
      }
      if (EventChoiceTheme != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EventChoiceTheme);
      }
      if (EventHelpTheme != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(EventHelpTheme);
      }
      if (EventTheme != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EventTheme);
      }
      size += expirePopup_.CalculateSize(_map_expirePopup_codec);
      size += includeGrpId_.CalculateSize(_repeated_includeGrpId_codec);
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (PreviewParm != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(PreviewParm);
      }
      if (RecontinueTheme != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RecontinueTheme);
      }
      if (RequireScoreId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RequireScoreId);
      }
      if (ScoreNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ScoreNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventDecorate other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.AgainTheme != 0) {
        AgainTheme = other.AgainTheme;
      }
      if (other.BoardId != 0) {
        BoardId = other.BoardId;
      }
      if (other.DeleteTime != 0) {
        DeleteTime = other.DeleteTime;
      }
      if (other.EndRemindTime != 0) {
        EndRemindTime = other.EndRemindTime;
      }
      if (other.EndTheme != 0) {
        EndTheme = other.EndTheme;
      }
      if (other.EndTipTheme != 0) {
        EndTipTheme = other.EndTipTheme;
      }
      if (other.EventChoiceTheme != 0) {
        EventChoiceTheme = other.EventChoiceTheme;
      }
      if (other.EventHelpTheme != 0) {
        EventHelpTheme = other.EventHelpTheme;
      }
      if (other.EventTheme != 0) {
        EventTheme = other.EventTheme;
      }
      expirePopup_.Add(other.expirePopup_);
      includeGrpId_.Add(other.includeGrpId_);
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.PreviewParm != 0) {
        PreviewParm = other.PreviewParm;
      }
      if (other.RecontinueTheme != 0) {
        RecontinueTheme = other.RecontinueTheme;
      }
      if (other.RequireScoreId != 0) {
        RequireScoreId = other.RequireScoreId;
      }
      if (other.ScoreNum != 0) {
        ScoreNum = other.ScoreNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            AgainTheme = input.ReadInt32();
            break;
          }
          case 24: {
            BoardId = input.ReadInt32();
            break;
          }
          case 32: {
            DeleteTime = input.ReadInt32();
            break;
          }
          case 40: {
            EndRemindTime = input.ReadInt32();
            break;
          }
          case 48: {
            EndTheme = input.ReadInt32();
            break;
          }
          case 56: {
            EndTipTheme = input.ReadInt32();
            break;
          }
          case 64: {
            EventTheme = input.ReadInt32();
            break;
          }
          case 74: {
            expirePopup_.AddEntriesFrom(input, _map_expirePopup_codec);
            break;
          }
          case 82:
          case 80: {
            includeGrpId_.AddEntriesFrom(input, _repeated_includeGrpId_codec);
            break;
          }
          case 90: {
            Name = input.ReadString();
            break;
          }
          case 96: {
            RecontinueTheme = input.ReadInt32();
            break;
          }
          case 104: {
            RequireScoreId = input.ReadInt32();
            break;
          }
          case 112: {
            ScoreNum = input.ReadInt32();
            break;
          }
          case 120: {
            EventChoiceTheme = input.ReadInt32();
            break;
          }
          case 128: {
            EventHelpTheme = input.ReadInt32();
            break;
          }
          case 136: {
            PreviewParm = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            AgainTheme = input.ReadInt32();
            break;
          }
          case 24: {
            BoardId = input.ReadInt32();
            break;
          }
          case 32: {
            DeleteTime = input.ReadInt32();
            break;
          }
          case 40: {
            EndRemindTime = input.ReadInt32();
            break;
          }
          case 48: {
            EndTheme = input.ReadInt32();
            break;
          }
          case 56: {
            EndTipTheme = input.ReadInt32();
            break;
          }
          case 64: {
            EventTheme = input.ReadInt32();
            break;
          }
          case 74: {
            expirePopup_.AddEntriesFrom(ref input, _map_expirePopup_codec);
            break;
          }
          case 82:
          case 80: {
            includeGrpId_.AddEntriesFrom(ref input, _repeated_includeGrpId_codec);
            break;
          }
          case 90: {
            Name = input.ReadString();
            break;
          }
          case 96: {
            RecontinueTheme = input.ReadInt32();
            break;
          }
          case 104: {
            RequireScoreId = input.ReadInt32();
            break;
          }
          case 112: {
            ScoreNum = input.ReadInt32();
            break;
          }
          case 120: {
            EventChoiceTheme = input.ReadInt32();
            break;
          }
          case 128: {
            EventHelpTheme = input.ReadInt32();
            break;
          }
          case 136: {
            PreviewParm = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventDecorateMapABValue : pb::IMessage<EventDecorateMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventDecorateMapABValue> _parser = new pb::MessageParser<EventDecorateMapABValue>(() => new EventDecorateMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventDecorateMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventDecorateConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventDecorateMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventDecorateMapABValue(EventDecorateMapABValue other) : this() {
      eventDecorateMap_ = other.eventDecorateMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventDecorateMapABValue Clone() {
      return new EventDecorateMapABValue(this);
    }

    /// <summary>Field number for the "EventDecorateMap" field.</summary>
    public const int EventDecorateMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventDecorate>.Codec _map_eventDecorateMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventDecorate>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventDecorate.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventDecorate> eventDecorateMap_ = new pbc::MapField<int, global::fat.rawdata.EventDecorate>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventDecorate> EventDecorateMap {
      get { return eventDecorateMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventDecorateMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventDecorateMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventDecorateMap.Equals(other.EventDecorateMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventDecorateMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventDecorateMap_.WriteTo(output, _map_eventDecorateMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventDecorateMap_.WriteTo(ref output, _map_eventDecorateMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventDecorateMap_.CalculateSize(_map_eventDecorateMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventDecorateMapABValue other) {
      if (other == null) {
        return;
      }
      eventDecorateMap_.Add(other.eventDecorateMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventDecorateMap_.AddEntriesFrom(input, _map_eventDecorateMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventDecorateMap_.AddEntriesFrom(ref input, _map_eventDecorateMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventDecorateConf : pb::IMessage<EventDecorateConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventDecorateConf> _parser = new pb::MessageParser<EventDecorateConf>(() => new EventDecorateConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventDecorateConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventDecorateConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventDecorateConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventDecorateConf(EventDecorateConf other) : this() {
      eventDecorateMap_ = other.eventDecorateMap_.Clone();
      eventDecorateMapAB_ = other.eventDecorateMapAB_.Clone();
      eventDecorateMapABPatch_ = other.eventDecorateMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventDecorateConf Clone() {
      return new EventDecorateConf(this);
    }

    /// <summary>Field number for the "EventDecorateMap" field.</summary>
    public const int EventDecorateMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventDecorate>.Codec _map_eventDecorateMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventDecorate>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventDecorate.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventDecorate> eventDecorateMap_ = new pbc::MapField<int, global::fat.rawdata.EventDecorate>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventDecorate> EventDecorateMap {
      get { return eventDecorateMap_; }
    }

    /// <summary>Field number for the "EventDecorateMapAB" field.</summary>
    public const int EventDecorateMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventDecorateMapABValue>.Codec _map_eventDecorateMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventDecorateMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventDecorateMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventDecorateMapABValue> eventDecorateMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventDecorateMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventDecorateMapABValue> EventDecorateMapAB {
      get { return eventDecorateMapAB_; }
    }

    /// <summary>Field number for the "EventDecorateMapABPatch" field.</summary>
    public const int EventDecorateMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventDecorateMapABValue>.Codec _map_eventDecorateMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventDecorateMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventDecorateMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventDecorateMapABValue> eventDecorateMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventDecorateMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventDecorateMapABValue> EventDecorateMapABPatch {
      get { return eventDecorateMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventDecorateConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventDecorateConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventDecorateMap.Equals(other.EventDecorateMap)) return false;
      if (!EventDecorateMapAB.Equals(other.EventDecorateMapAB)) return false;
      if (!EventDecorateMapABPatch.Equals(other.EventDecorateMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventDecorateMap.GetHashCode();
      hash ^= EventDecorateMapAB.GetHashCode();
      hash ^= EventDecorateMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventDecorateMap_.WriteTo(output, _map_eventDecorateMap_codec);
      eventDecorateMapAB_.WriteTo(output, _map_eventDecorateMapAB_codec);
      eventDecorateMapABPatch_.WriteTo(output, _map_eventDecorateMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventDecorateMap_.WriteTo(ref output, _map_eventDecorateMap_codec);
      eventDecorateMapAB_.WriteTo(ref output, _map_eventDecorateMapAB_codec);
      eventDecorateMapABPatch_.WriteTo(ref output, _map_eventDecorateMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventDecorateMap_.CalculateSize(_map_eventDecorateMap_codec);
      size += eventDecorateMapAB_.CalculateSize(_map_eventDecorateMapAB_codec);
      size += eventDecorateMapABPatch_.CalculateSize(_map_eventDecorateMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventDecorateConf other) {
      if (other == null) {
        return;
      }
      eventDecorateMap_.Add(other.eventDecorateMap_);
      eventDecorateMapAB_.Add(other.eventDecorateMapAB_);
      eventDecorateMapABPatch_.Add(other.eventDecorateMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventDecorateMap_.AddEntriesFrom(input, _map_eventDecorateMap_codec);
            break;
          }
          case 18: {
            eventDecorateMapAB_.AddEntriesFrom(input, _map_eventDecorateMapAB_codec);
            break;
          }
          case 26: {
            eventDecorateMapABPatch_.AddEntriesFrom(input, _map_eventDecorateMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventDecorateMap_.AddEntriesFrom(ref input, _map_eventDecorateMap_codec);
            break;
          }
          case 18: {
            eventDecorateMapAB_.AddEntriesFrom(ref input, _map_eventDecorateMapAB_codec);
            break;
          }
          case 26: {
            eventDecorateMapABPatch_.AddEntriesFrom(ref input, _map_eventDecorateMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
