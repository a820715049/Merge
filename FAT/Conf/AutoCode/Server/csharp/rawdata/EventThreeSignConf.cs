// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventThreeSignConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventThreeSignConf.proto</summary>
  public static partial class EventThreeSignConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventThreeSignConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventThreeSignConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiByYXdkYXRhL0V2ZW50VGhyZWVTaWduQ29uZi5wcm90bxIHcmF3ZGF0YSJQ",
            "Cg5FdmVudFRocmVlU2lnbhIKCgJpZBgBIAEoBRIQCghsaWZldGltZRgCIAEo",
            "BRIPCgdwb3B1cElkGAMgASgFEg8KB3Jld2FyZHMYBCADKAUiwgEKGEV2ZW50",
            "VGhyZWVTaWduTWFwQUJWYWx1ZRJTChFFdmVudFRocmVlU2lnbk1hcBgBIAMo",
            "CzI4LnJhd2RhdGEuRXZlbnRUaHJlZVNpZ25NYXBBQlZhbHVlLkV2ZW50VGhy",
            "ZWVTaWduTWFwRW50cnkaUQoWRXZlbnRUaHJlZVNpZ25NYXBFbnRyeRILCgNr",
            "ZXkYASABKAUSJgoFdmFsdWUYAiABKAsyFy5yYXdkYXRhLkV2ZW50VGhyZWVT",
            "aWduOgI4ASKpBAoSRXZlbnRUaHJlZVNpZ25Db25mEk0KEUV2ZW50VGhyZWVT",
            "aWduTWFwGAEgAygLMjIucmF3ZGF0YS5FdmVudFRocmVlU2lnbkNvbmYuRXZl",
            "bnRUaHJlZVNpZ25NYXBFbnRyeRJRChNFdmVudFRocmVlU2lnbk1hcEFCGAIg",
            "AygLMjQucmF3ZGF0YS5FdmVudFRocmVlU2lnbkNvbmYuRXZlbnRUaHJlZVNp",
            "Z25NYXBBQkVudHJ5ElsKGEV2ZW50VGhyZWVTaWduTWFwQUJQYXRjaBgDIAMo",
            "CzI5LnJhd2RhdGEuRXZlbnRUaHJlZVNpZ25Db25mLkV2ZW50VGhyZWVTaWdu",
            "TWFwQUJQYXRjaEVudHJ5GlEKFkV2ZW50VGhyZWVTaWduTWFwRW50cnkSCwoD",
            "a2V5GAEgASgFEiYKBXZhbHVlGAIgASgLMhcucmF3ZGF0YS5FdmVudFRocmVl",
            "U2lnbjoCOAEaXQoYRXZlbnRUaHJlZVNpZ25NYXBBQkVudHJ5EgsKA2tleRgB",
            "IAEoCRIwCgV2YWx1ZRgCIAEoCzIhLnJhd2RhdGEuRXZlbnRUaHJlZVNpZ25N",
            "YXBBQlZhbHVlOgI4ARpiCh1FdmVudFRocmVlU2lnbk1hcEFCUGF0Y2hFbnRy",
            "eRILCgNrZXkYASABKAkSMAoFdmFsdWUYAiABKAsyIS5yYXdkYXRhLkV2ZW50",
            "VGhyZWVTaWduTWFwQUJWYWx1ZToCOAFCPVotZ2l0bGFiLmZ1bnBsdXMuaW8v",
            "ZmF0L2NvbmYvZ2VuL2dvbGFuZy9yYXdkYXRhqgILZmF0LnJhd2RhdGFiBnBy",
            "b3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventThreeSign), global::fat.rawdata.EventThreeSign.Parser, new[]{ "Id", "Lifetime", "PopupId", "Rewards" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventThreeSignMapABValue), global::fat.rawdata.EventThreeSignMapABValue.Parser, new[]{ "EventThreeSignMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventThreeSignConf), global::fat.rawdata.EventThreeSignConf.Parser, new[]{ "EventThreeSignMap", "EventThreeSignMapAB", "EventThreeSignMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventThreeSign",table="EventThreeSignMap",table_wrapper="EventThreeSignConf",map="true",map_key_type="int32",data="EventThreeSignConf")
  /// annotation@ab(table_ab="EventThreeSignMapAB",table_ab_patch="EventThreeSignMapABPatch",table_ab_value="EventThreeSignMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventThreeSign(id="id")
  /// </summary>
  public sealed partial class EventThreeSign : pb::IMessage<EventThreeSign>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventThreeSign> _parser = new pb::MessageParser<EventThreeSign>(() => new EventThreeSign());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventThreeSign> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventThreeSignConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventThreeSign() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventThreeSign(EventThreeSign other) : this() {
      id_ = other.id_;
      lifetime_ = other.lifetime_;
      popupId_ = other.popupId_;
      rewards_ = other.rewards_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventThreeSign Clone() {
      return new EventThreeSign(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 活动Id
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "lifetime" field.</summary>
    public const int LifetimeFieldNumber = 2;
    private int lifetime_;
    /// <summary>
    /// 最大实例时间（s）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Lifetime {
      get { return lifetime_; }
      set {
        lifetime_ = value;
      }
    }

    /// <summary>Field number for the "popupId" field.</summary>
    public const int PopupIdFieldNumber = 3;
    private int popupId_;
    /// <summary>
    /// 签到弹板
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PopupId {
      get { return popupId_; }
      set {
        popupId_ = value;
      }
    }

    /// <summary>Field number for the "rewards" field.</summary>
    public const int RewardsFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_rewards_codec
        = pb::FieldCodec.ForInt32(34);
    private readonly pbc::RepeatedField<int> rewards_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Rewards {
      get { return rewards_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventThreeSign);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventThreeSign other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Lifetime != other.Lifetime) return false;
      if (PopupId != other.PopupId) return false;
      if(!rewards_.Equals(other.rewards_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Lifetime != 0) hash ^= Lifetime.GetHashCode();
      if (PopupId != 0) hash ^= PopupId.GetHashCode();
      hash ^= rewards_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Lifetime != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Lifetime);
      }
      if (PopupId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PopupId);
      }
      rewards_.WriteTo(output, _repeated_rewards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Lifetime != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Lifetime);
      }
      if (PopupId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PopupId);
      }
      rewards_.WriteTo(ref output, _repeated_rewards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Lifetime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Lifetime);
      }
      if (PopupId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PopupId);
      }
      size += rewards_.CalculateSize(_repeated_rewards_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventThreeSign other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Lifetime != 0) {
        Lifetime = other.Lifetime;
      }
      if (other.PopupId != 0) {
        PopupId = other.PopupId;
      }
      rewards_.Add(other.rewards_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Lifetime = input.ReadInt32();
            break;
          }
          case 24: {
            PopupId = input.ReadInt32();
            break;
          }
          case 34:
          case 32: {
            rewards_.AddEntriesFrom(input, _repeated_rewards_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Lifetime = input.ReadInt32();
            break;
          }
          case 24: {
            PopupId = input.ReadInt32();
            break;
          }
          case 34:
          case 32: {
            rewards_.AddEntriesFrom(ref input, _repeated_rewards_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventThreeSignMapABValue : pb::IMessage<EventThreeSignMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventThreeSignMapABValue> _parser = new pb::MessageParser<EventThreeSignMapABValue>(() => new EventThreeSignMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventThreeSignMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventThreeSignConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventThreeSignMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventThreeSignMapABValue(EventThreeSignMapABValue other) : this() {
      eventThreeSignMap_ = other.eventThreeSignMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventThreeSignMapABValue Clone() {
      return new EventThreeSignMapABValue(this);
    }

    /// <summary>Field number for the "EventThreeSignMap" field.</summary>
    public const int EventThreeSignMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventThreeSign>.Codec _map_eventThreeSignMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventThreeSign>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventThreeSign.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventThreeSign> eventThreeSignMap_ = new pbc::MapField<int, global::fat.rawdata.EventThreeSign>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventThreeSign> EventThreeSignMap {
      get { return eventThreeSignMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventThreeSignMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventThreeSignMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventThreeSignMap.Equals(other.EventThreeSignMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventThreeSignMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventThreeSignMap_.WriteTo(output, _map_eventThreeSignMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventThreeSignMap_.WriteTo(ref output, _map_eventThreeSignMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventThreeSignMap_.CalculateSize(_map_eventThreeSignMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventThreeSignMapABValue other) {
      if (other == null) {
        return;
      }
      eventThreeSignMap_.Add(other.eventThreeSignMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventThreeSignMap_.AddEntriesFrom(input, _map_eventThreeSignMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventThreeSignMap_.AddEntriesFrom(ref input, _map_eventThreeSignMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventThreeSignConf : pb::IMessage<EventThreeSignConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventThreeSignConf> _parser = new pb::MessageParser<EventThreeSignConf>(() => new EventThreeSignConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventThreeSignConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventThreeSignConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventThreeSignConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventThreeSignConf(EventThreeSignConf other) : this() {
      eventThreeSignMap_ = other.eventThreeSignMap_.Clone();
      eventThreeSignMapAB_ = other.eventThreeSignMapAB_.Clone();
      eventThreeSignMapABPatch_ = other.eventThreeSignMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventThreeSignConf Clone() {
      return new EventThreeSignConf(this);
    }

    /// <summary>Field number for the "EventThreeSignMap" field.</summary>
    public const int EventThreeSignMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventThreeSign>.Codec _map_eventThreeSignMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventThreeSign>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventThreeSign.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventThreeSign> eventThreeSignMap_ = new pbc::MapField<int, global::fat.rawdata.EventThreeSign>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventThreeSign> EventThreeSignMap {
      get { return eventThreeSignMap_; }
    }

    /// <summary>Field number for the "EventThreeSignMapAB" field.</summary>
    public const int EventThreeSignMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventThreeSignMapABValue>.Codec _map_eventThreeSignMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventThreeSignMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventThreeSignMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventThreeSignMapABValue> eventThreeSignMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventThreeSignMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventThreeSignMapABValue> EventThreeSignMapAB {
      get { return eventThreeSignMapAB_; }
    }

    /// <summary>Field number for the "EventThreeSignMapABPatch" field.</summary>
    public const int EventThreeSignMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventThreeSignMapABValue>.Codec _map_eventThreeSignMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventThreeSignMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventThreeSignMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventThreeSignMapABValue> eventThreeSignMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventThreeSignMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventThreeSignMapABValue> EventThreeSignMapABPatch {
      get { return eventThreeSignMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventThreeSignConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventThreeSignConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventThreeSignMap.Equals(other.EventThreeSignMap)) return false;
      if (!EventThreeSignMapAB.Equals(other.EventThreeSignMapAB)) return false;
      if (!EventThreeSignMapABPatch.Equals(other.EventThreeSignMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventThreeSignMap.GetHashCode();
      hash ^= EventThreeSignMapAB.GetHashCode();
      hash ^= EventThreeSignMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventThreeSignMap_.WriteTo(output, _map_eventThreeSignMap_codec);
      eventThreeSignMapAB_.WriteTo(output, _map_eventThreeSignMapAB_codec);
      eventThreeSignMapABPatch_.WriteTo(output, _map_eventThreeSignMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventThreeSignMap_.WriteTo(ref output, _map_eventThreeSignMap_codec);
      eventThreeSignMapAB_.WriteTo(ref output, _map_eventThreeSignMapAB_codec);
      eventThreeSignMapABPatch_.WriteTo(ref output, _map_eventThreeSignMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventThreeSignMap_.CalculateSize(_map_eventThreeSignMap_codec);
      size += eventThreeSignMapAB_.CalculateSize(_map_eventThreeSignMapAB_codec);
      size += eventThreeSignMapABPatch_.CalculateSize(_map_eventThreeSignMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventThreeSignConf other) {
      if (other == null) {
        return;
      }
      eventThreeSignMap_.Add(other.eventThreeSignMap_);
      eventThreeSignMapAB_.Add(other.eventThreeSignMapAB_);
      eventThreeSignMapABPatch_.Add(other.eventThreeSignMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventThreeSignMap_.AddEntriesFrom(input, _map_eventThreeSignMap_codec);
            break;
          }
          case 18: {
            eventThreeSignMapAB_.AddEntriesFrom(input, _map_eventThreeSignMapAB_codec);
            break;
          }
          case 26: {
            eventThreeSignMapABPatch_.AddEntriesFrom(input, _map_eventThreeSignMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventThreeSignMap_.AddEntriesFrom(ref input, _map_eventThreeSignMap_codec);
            break;
          }
          case 18: {
            eventThreeSignMapAB_.AddEntriesFrom(ref input, _map_eventThreeSignMapAB_codec);
            break;
          }
          case 26: {
            eventThreeSignMapABPatch_.AddEntriesFrom(ref input, _map_eventThreeSignMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
