// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventCardRoundConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventCardRoundConf.proto</summary>
  public static partial class EventCardRoundConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventCardRoundConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventCardRoundConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiByYXdkYXRhL0V2ZW50Q2FyZFJvdW5kQ29uZi5wcm90bxIHcmF3ZGF0YSJm",
            "Cg5FdmVudENhcmRSb3VuZBIKCgJpZBgBIAEoBRIZChFJbmNsdWRlRXhjaGFu",
            "Z2VJZBgDIAMoBRIWCg5pbmNsdWRlQWxidW1JZBgCIAMoBRIVCg1zdGFydEV4",
            "Y2hhbmdlGAQgASgFIsIBChhFdmVudENhcmRSb3VuZE1hcEFCVmFsdWUSUwoR",
            "RXZlbnRDYXJkUm91bmRNYXAYASADKAsyOC5yYXdkYXRhLkV2ZW50Q2FyZFJv",
            "dW5kTWFwQUJWYWx1ZS5FdmVudENhcmRSb3VuZE1hcEVudHJ5GlEKFkV2ZW50",
            "Q2FyZFJvdW5kTWFwRW50cnkSCwoDa2V5GAEgASgFEiYKBXZhbHVlGAIgASgL",
            "MhcucmF3ZGF0YS5FdmVudENhcmRSb3VuZDoCOAEiqQQKEkV2ZW50Q2FyZFJv",
            "dW5kQ29uZhJNChFFdmVudENhcmRSb3VuZE1hcBgBIAMoCzIyLnJhd2RhdGEu",
            "RXZlbnRDYXJkUm91bmRDb25mLkV2ZW50Q2FyZFJvdW5kTWFwRW50cnkSUQoT",
            "RXZlbnRDYXJkUm91bmRNYXBBQhgCIAMoCzI0LnJhd2RhdGEuRXZlbnRDYXJk",
            "Um91bmRDb25mLkV2ZW50Q2FyZFJvdW5kTWFwQUJFbnRyeRJbChhFdmVudENh",
            "cmRSb3VuZE1hcEFCUGF0Y2gYAyADKAsyOS5yYXdkYXRhLkV2ZW50Q2FyZFJv",
            "dW5kQ29uZi5FdmVudENhcmRSb3VuZE1hcEFCUGF0Y2hFbnRyeRpRChZFdmVu",
            "dENhcmRSb3VuZE1hcEVudHJ5EgsKA2tleRgBIAEoBRImCgV2YWx1ZRgCIAEo",
            "CzIXLnJhd2RhdGEuRXZlbnRDYXJkUm91bmQ6AjgBGl0KGEV2ZW50Q2FyZFJv",
            "dW5kTWFwQUJFbnRyeRILCgNrZXkYASABKAkSMAoFdmFsdWUYAiABKAsyIS5y",
            "YXdkYXRhLkV2ZW50Q2FyZFJvdW5kTWFwQUJWYWx1ZToCOAEaYgodRXZlbnRD",
            "YXJkUm91bmRNYXBBQlBhdGNoRW50cnkSCwoDa2V5GAEgASgJEjAKBXZhbHVl",
            "GAIgASgLMiEucmF3ZGF0YS5FdmVudENhcmRSb3VuZE1hcEFCVmFsdWU6AjgB",
            "Qj1aLWdpdGxhYi5mdW5wbHVzLmlvL2ZhdC9jb25mL2dlbi9nb2xhbmcvcmF3",
            "ZGF0YaoCC2ZhdC5yYXdkYXRhYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventCardRound), global::fat.rawdata.EventCardRound.Parser, new[]{ "Id", "IncludeExchangeId", "IncludeAlbumId", "StartExchange" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventCardRoundMapABValue), global::fat.rawdata.EventCardRoundMapABValue.Parser, new[]{ "EventCardRoundMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventCardRoundConf), global::fat.rawdata.EventCardRoundConf.Parser, new[]{ "EventCardRoundMap", "EventCardRoundMapAB", "EventCardRoundMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventCardRound",table="EventCardRoundMap",table_wrapper="EventCardRoundConf",map="true",map_key_type="int32",data="EventCardRoundConf")
  /// annotation@ab(table_ab="EventCardRoundMapAB",table_ab_patch="EventCardRoundMapABPatch",table_ab_value="EventCardRoundMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventCardRound(id="id")
  /// </summary>
  public sealed partial class EventCardRound : pb::IMessage<EventCardRound>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventCardRound> _parser = new pb::MessageParser<EventCardRound>(() => new EventCardRound());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventCardRound> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventCardRoundConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventCardRound() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventCardRound(EventCardRound other) : this() {
      id_ = other.id_;
      includeExchangeId_ = other.includeExchangeId_.Clone();
      includeAlbumId_ = other.includeAlbumId_.Clone();
      startExchange_ = other.startExchange_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventCardRound Clone() {
      return new EventCardRound(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 集卡活动模板ID
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "IncludeExchangeId" field.</summary>
    public const int IncludeExchangeIdFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_includeExchangeId_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> includeExchangeId_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 重复卡兑换条目
    /// 约定最多3个
    /// (StarExchange.id)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> IncludeExchangeId {
      get { return includeExchangeId_; }
    }

    /// <summary>Field number for the "includeAlbumId" field.</summary>
    public const int IncludeAlbumIdFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_includeAlbumId_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> includeAlbumId_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 集卡活动包含哪些卡册
    /// （EventCardAlbum.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> IncludeAlbumId {
      get { return includeAlbumId_; }
    }

    /// <summary>Field number for the "startExchange" field.</summary>
    public const int StartExchangeFieldNumber = 4;
    private int startExchange_;
    /// <summary>
    /// 在第几轮开启兑换
    /// （空表示本期不开兑换）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StartExchange {
      get { return startExchange_; }
      set {
        startExchange_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventCardRound);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventCardRound other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!includeExchangeId_.Equals(other.includeExchangeId_)) return false;
      if(!includeAlbumId_.Equals(other.includeAlbumId_)) return false;
      if (StartExchange != other.StartExchange) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      hash ^= includeExchangeId_.GetHashCode();
      hash ^= includeAlbumId_.GetHashCode();
      if (StartExchange != 0) hash ^= StartExchange.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      includeAlbumId_.WriteTo(output, _repeated_includeAlbumId_codec);
      includeExchangeId_.WriteTo(output, _repeated_includeExchangeId_codec);
      if (StartExchange != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(StartExchange);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      includeAlbumId_.WriteTo(ref output, _repeated_includeAlbumId_codec);
      includeExchangeId_.WriteTo(ref output, _repeated_includeExchangeId_codec);
      if (StartExchange != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(StartExchange);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      size += includeExchangeId_.CalculateSize(_repeated_includeExchangeId_codec);
      size += includeAlbumId_.CalculateSize(_repeated_includeAlbumId_codec);
      if (StartExchange != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartExchange);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventCardRound other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      includeExchangeId_.Add(other.includeExchangeId_);
      includeAlbumId_.Add(other.includeAlbumId_);
      if (other.StartExchange != 0) {
        StartExchange = other.StartExchange;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            includeAlbumId_.AddEntriesFrom(input, _repeated_includeAlbumId_codec);
            break;
          }
          case 26:
          case 24: {
            includeExchangeId_.AddEntriesFrom(input, _repeated_includeExchangeId_codec);
            break;
          }
          case 32: {
            StartExchange = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            includeAlbumId_.AddEntriesFrom(ref input, _repeated_includeAlbumId_codec);
            break;
          }
          case 26:
          case 24: {
            includeExchangeId_.AddEntriesFrom(ref input, _repeated_includeExchangeId_codec);
            break;
          }
          case 32: {
            StartExchange = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventCardRoundMapABValue : pb::IMessage<EventCardRoundMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventCardRoundMapABValue> _parser = new pb::MessageParser<EventCardRoundMapABValue>(() => new EventCardRoundMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventCardRoundMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventCardRoundConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventCardRoundMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventCardRoundMapABValue(EventCardRoundMapABValue other) : this() {
      eventCardRoundMap_ = other.eventCardRoundMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventCardRoundMapABValue Clone() {
      return new EventCardRoundMapABValue(this);
    }

    /// <summary>Field number for the "EventCardRoundMap" field.</summary>
    public const int EventCardRoundMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventCardRound>.Codec _map_eventCardRoundMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventCardRound>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventCardRound.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventCardRound> eventCardRoundMap_ = new pbc::MapField<int, global::fat.rawdata.EventCardRound>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventCardRound> EventCardRoundMap {
      get { return eventCardRoundMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventCardRoundMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventCardRoundMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventCardRoundMap.Equals(other.EventCardRoundMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventCardRoundMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventCardRoundMap_.WriteTo(output, _map_eventCardRoundMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventCardRoundMap_.WriteTo(ref output, _map_eventCardRoundMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventCardRoundMap_.CalculateSize(_map_eventCardRoundMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventCardRoundMapABValue other) {
      if (other == null) {
        return;
      }
      eventCardRoundMap_.Add(other.eventCardRoundMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventCardRoundMap_.AddEntriesFrom(input, _map_eventCardRoundMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventCardRoundMap_.AddEntriesFrom(ref input, _map_eventCardRoundMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventCardRoundConf : pb::IMessage<EventCardRoundConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventCardRoundConf> _parser = new pb::MessageParser<EventCardRoundConf>(() => new EventCardRoundConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventCardRoundConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventCardRoundConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventCardRoundConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventCardRoundConf(EventCardRoundConf other) : this() {
      eventCardRoundMap_ = other.eventCardRoundMap_.Clone();
      eventCardRoundMapAB_ = other.eventCardRoundMapAB_.Clone();
      eventCardRoundMapABPatch_ = other.eventCardRoundMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventCardRoundConf Clone() {
      return new EventCardRoundConf(this);
    }

    /// <summary>Field number for the "EventCardRoundMap" field.</summary>
    public const int EventCardRoundMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventCardRound>.Codec _map_eventCardRoundMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventCardRound>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventCardRound.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventCardRound> eventCardRoundMap_ = new pbc::MapField<int, global::fat.rawdata.EventCardRound>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventCardRound> EventCardRoundMap {
      get { return eventCardRoundMap_; }
    }

    /// <summary>Field number for the "EventCardRoundMapAB" field.</summary>
    public const int EventCardRoundMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventCardRoundMapABValue>.Codec _map_eventCardRoundMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventCardRoundMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventCardRoundMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventCardRoundMapABValue> eventCardRoundMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventCardRoundMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventCardRoundMapABValue> EventCardRoundMapAB {
      get { return eventCardRoundMapAB_; }
    }

    /// <summary>Field number for the "EventCardRoundMapABPatch" field.</summary>
    public const int EventCardRoundMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventCardRoundMapABValue>.Codec _map_eventCardRoundMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventCardRoundMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventCardRoundMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventCardRoundMapABValue> eventCardRoundMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventCardRoundMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventCardRoundMapABValue> EventCardRoundMapABPatch {
      get { return eventCardRoundMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventCardRoundConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventCardRoundConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventCardRoundMap.Equals(other.EventCardRoundMap)) return false;
      if (!EventCardRoundMapAB.Equals(other.EventCardRoundMapAB)) return false;
      if (!EventCardRoundMapABPatch.Equals(other.EventCardRoundMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventCardRoundMap.GetHashCode();
      hash ^= EventCardRoundMapAB.GetHashCode();
      hash ^= EventCardRoundMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventCardRoundMap_.WriteTo(output, _map_eventCardRoundMap_codec);
      eventCardRoundMapAB_.WriteTo(output, _map_eventCardRoundMapAB_codec);
      eventCardRoundMapABPatch_.WriteTo(output, _map_eventCardRoundMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventCardRoundMap_.WriteTo(ref output, _map_eventCardRoundMap_codec);
      eventCardRoundMapAB_.WriteTo(ref output, _map_eventCardRoundMapAB_codec);
      eventCardRoundMapABPatch_.WriteTo(ref output, _map_eventCardRoundMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventCardRoundMap_.CalculateSize(_map_eventCardRoundMap_codec);
      size += eventCardRoundMapAB_.CalculateSize(_map_eventCardRoundMapAB_codec);
      size += eventCardRoundMapABPatch_.CalculateSize(_map_eventCardRoundMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventCardRoundConf other) {
      if (other == null) {
        return;
      }
      eventCardRoundMap_.Add(other.eventCardRoundMap_);
      eventCardRoundMapAB_.Add(other.eventCardRoundMapAB_);
      eventCardRoundMapABPatch_.Add(other.eventCardRoundMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventCardRoundMap_.AddEntriesFrom(input, _map_eventCardRoundMap_codec);
            break;
          }
          case 18: {
            eventCardRoundMapAB_.AddEntriesFrom(input, _map_eventCardRoundMapAB_codec);
            break;
          }
          case 26: {
            eventCardRoundMapABPatch_.AddEntriesFrom(input, _map_eventCardRoundMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventCardRoundMap_.AddEntriesFrom(ref input, _map_eventCardRoundMap_codec);
            break;
          }
          case 18: {
            eventCardRoundMapAB_.AddEntriesFrom(ref input, _map_eventCardRoundMapAB_codec);
            break;
          }
          case 26: {
            eventCardRoundMapABPatch_.AddEntriesFrom(ref input, _map_eventCardRoundMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
