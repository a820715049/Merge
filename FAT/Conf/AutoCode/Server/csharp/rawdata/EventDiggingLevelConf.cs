// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventDiggingLevelConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventDiggingLevelConf.proto</summary>
  public static partial class EventDiggingLevelConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventDiggingLevelConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventDiggingLevelConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiNyYXdkYXRhL0V2ZW50RGlnZ2luZ0xldmVsQ29uZi5wcm90bxIHcmF3ZGF0",
            "YSLMAQoRRXZlbnREaWdnaW5nTGV2ZWwSCgoCaWQYASABKAUSFgoOaW5jbHVk",
            "ZUJvYXJkSWQYAiADKAkSEwoLbGV2ZWxSZXdhcmQYAyADKAkSGAoQbGV2ZWxS",
            "ZXdhcmRJY29uMRgGIAEoCRIYChBsZXZlbFJld2FyZEljb24yGAcgASgJEhgK",
            "EHJhbmRvbVJld2FyZEluZm8YCCADKAkSHwoXcmFuZG9tUmV3YXJkUHJvYmFi",
            "aWxpdHkYCSABKAUSDwoHc2hvd051bRgFIAEoBSLUAQobRXZlbnREaWdnaW5n",
            "TGV2ZWxNYXBBQlZhbHVlElwKFEV2ZW50RGlnZ2luZ0xldmVsTWFwGAEgAygL",
            "Mj4ucmF3ZGF0YS5FdmVudERpZ2dpbmdMZXZlbE1hcEFCVmFsdWUuRXZlbnRE",
            "aWdnaW5nTGV2ZWxNYXBFbnRyeRpXChlFdmVudERpZ2dpbmdMZXZlbE1hcEVu",
            "dHJ5EgsKA2tleRgBIAEoBRIpCgV2YWx1ZRgCIAEoCzIaLnJhd2RhdGEuRXZl",
            "bnREaWdnaW5nTGV2ZWw6AjgBItkEChVFdmVudERpZ2dpbmdMZXZlbENvbmYS",
            "VgoURXZlbnREaWdnaW5nTGV2ZWxNYXAYASADKAsyOC5yYXdkYXRhLkV2ZW50",
            "RGlnZ2luZ0xldmVsQ29uZi5FdmVudERpZ2dpbmdMZXZlbE1hcEVudHJ5EloK",
            "FkV2ZW50RGlnZ2luZ0xldmVsTWFwQUIYAiADKAsyOi5yYXdkYXRhLkV2ZW50",
            "RGlnZ2luZ0xldmVsQ29uZi5FdmVudERpZ2dpbmdMZXZlbE1hcEFCRW50cnkS",
            "ZAobRXZlbnREaWdnaW5nTGV2ZWxNYXBBQlBhdGNoGAMgAygLMj8ucmF3ZGF0",
            "YS5FdmVudERpZ2dpbmdMZXZlbENvbmYuRXZlbnREaWdnaW5nTGV2ZWxNYXBB",
            "QlBhdGNoRW50cnkaVwoZRXZlbnREaWdnaW5nTGV2ZWxNYXBFbnRyeRILCgNr",
            "ZXkYASABKAUSKQoFdmFsdWUYAiABKAsyGi5yYXdkYXRhLkV2ZW50RGlnZ2lu",
            "Z0xldmVsOgI4ARpjChtFdmVudERpZ2dpbmdMZXZlbE1hcEFCRW50cnkSCwoD",
            "a2V5GAEgASgJEjMKBXZhbHVlGAIgASgLMiQucmF3ZGF0YS5FdmVudERpZ2dp",
            "bmdMZXZlbE1hcEFCVmFsdWU6AjgBGmgKIEV2ZW50RGlnZ2luZ0xldmVsTWFw",
            "QUJQYXRjaEVudHJ5EgsKA2tleRgBIAEoCRIzCgV2YWx1ZRgCIAEoCzIkLnJh",
            "d2RhdGEuRXZlbnREaWdnaW5nTGV2ZWxNYXBBQlZhbHVlOgI4AUI9Wi1naXRs",
            "YWIuZnVucGx1cy5pby9mYXQvY29uZi9nZW4vZ29sYW5nL3Jhd2RhdGGqAgtm",
            "YXQucmF3ZGF0YWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventDiggingLevel), global::fat.rawdata.EventDiggingLevel.Parser, new[]{ "Id", "IncludeBoardId", "LevelReward", "LevelRewardIcon1", "LevelRewardIcon2", "RandomRewardInfo", "RandomRewardProbability", "ShowNum" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventDiggingLevelMapABValue), global::fat.rawdata.EventDiggingLevelMapABValue.Parser, new[]{ "EventDiggingLevelMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventDiggingLevelConf), global::fat.rawdata.EventDiggingLevelConf.Parser, new[]{ "EventDiggingLevelMap", "EventDiggingLevelMapAB", "EventDiggingLevelMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventDiggingLevel",table="EventDiggingLevelMap",table_wrapper="EventDiggingLevelConf",map="true",map_key_type="int32",data="EventDiggingLevelConf")
  /// annotation@ab(table_ab="EventDiggingLevelMapAB",table_ab_patch="EventDiggingLevelMapABPatch",table_ab_value="EventDiggingLevelMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventDiggingLevel(id="id")
  /// </summary>
  public sealed partial class EventDiggingLevel : pb::IMessage<EventDiggingLevel>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventDiggingLevel> _parser = new pb::MessageParser<EventDiggingLevel>(() => new EventDiggingLevel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventDiggingLevel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventDiggingLevelConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventDiggingLevel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventDiggingLevel(EventDiggingLevel other) : this() {
      id_ = other.id_;
      includeBoardId_ = other.includeBoardId_.Clone();
      levelReward_ = other.levelReward_.Clone();
      levelRewardIcon1_ = other.levelRewardIcon1_;
      levelRewardIcon2_ = other.levelRewardIcon2_;
      randomRewardInfo_ = other.randomRewardInfo_.Clone();
      randomRewardProbability_ = other.randomRewardProbability_;
      showNum_ = other.showNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventDiggingLevel Clone() {
      return new EventDiggingLevel(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 关卡ID
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "includeBoardId" field.</summary>
    public const int IncludeBoardIdFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_includeBoardId_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> includeBoardId_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// EventDiggingBoard.id,权重
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> IncludeBoardId {
      get { return includeBoardId_; }
    }

    /// <summary>Field number for the "levelReward" field.</summary>
    public const int LevelRewardFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_levelReward_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> levelReward_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 奖励
    /// （丛林替换id：45）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> LevelReward {
      get { return levelReward_; }
    }

    /// <summary>Field number for the "levelRewardIcon1" field.</summary>
    public const int LevelRewardIcon1FieldNumber = 6;
    private string levelRewardIcon1_ = "";
    /// <summary>
    /// 宝箱icon-大
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LevelRewardIcon1 {
      get { return levelRewardIcon1_; }
      set {
        levelRewardIcon1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "levelRewardIcon2" field.</summary>
    public const int LevelRewardIcon2FieldNumber = 7;
    private string levelRewardIcon2_ = "";
    /// <summary>
    /// 宝箱icon-小
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LevelRewardIcon2 {
      get { return levelRewardIcon2_; }
      set {
        levelRewardIcon2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "randomRewardInfo" field.</summary>
    public const int RandomRewardInfoFieldNumber = 8;
    private static readonly pb::FieldCodec<string> _repeated_randomRewardInfo_codec
        = pb::FieldCodec.ForString(66);
    private readonly pbc::RepeatedField<string> randomRewardInfo_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 随机奖励库
    /// 物品id:数量:权重
    /// （丛林替换id：45）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> RandomRewardInfo {
      get { return randomRewardInfo_; }
    }

    /// <summary>Field number for the "randomRewardProbability" field.</summary>
    public const int RandomRewardProbabilityFieldNumber = 9;
    private int randomRewardProbability_;
    /// <summary>
    /// 随机奖励概率=配置值/100
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RandomRewardProbability {
      get { return randomRewardProbability_; }
      set {
        randomRewardProbability_ = value;
      }
    }

    /// <summary>Field number for the "showNum" field.</summary>
    public const int ShowNumFieldNumber = 5;
    private int showNum_;
    /// <summary>
    /// 第几关
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ShowNum {
      get { return showNum_; }
      set {
        showNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventDiggingLevel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventDiggingLevel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!includeBoardId_.Equals(other.includeBoardId_)) return false;
      if(!levelReward_.Equals(other.levelReward_)) return false;
      if (LevelRewardIcon1 != other.LevelRewardIcon1) return false;
      if (LevelRewardIcon2 != other.LevelRewardIcon2) return false;
      if(!randomRewardInfo_.Equals(other.randomRewardInfo_)) return false;
      if (RandomRewardProbability != other.RandomRewardProbability) return false;
      if (ShowNum != other.ShowNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      hash ^= includeBoardId_.GetHashCode();
      hash ^= levelReward_.GetHashCode();
      if (LevelRewardIcon1.Length != 0) hash ^= LevelRewardIcon1.GetHashCode();
      if (LevelRewardIcon2.Length != 0) hash ^= LevelRewardIcon2.GetHashCode();
      hash ^= randomRewardInfo_.GetHashCode();
      if (RandomRewardProbability != 0) hash ^= RandomRewardProbability.GetHashCode();
      if (ShowNum != 0) hash ^= ShowNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      includeBoardId_.WriteTo(output, _repeated_includeBoardId_codec);
      levelReward_.WriteTo(output, _repeated_levelReward_codec);
      if (ShowNum != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ShowNum);
      }
      if (LevelRewardIcon1.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(LevelRewardIcon1);
      }
      if (LevelRewardIcon2.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(LevelRewardIcon2);
      }
      randomRewardInfo_.WriteTo(output, _repeated_randomRewardInfo_codec);
      if (RandomRewardProbability != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(RandomRewardProbability);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      includeBoardId_.WriteTo(ref output, _repeated_includeBoardId_codec);
      levelReward_.WriteTo(ref output, _repeated_levelReward_codec);
      if (ShowNum != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ShowNum);
      }
      if (LevelRewardIcon1.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(LevelRewardIcon1);
      }
      if (LevelRewardIcon2.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(LevelRewardIcon2);
      }
      randomRewardInfo_.WriteTo(ref output, _repeated_randomRewardInfo_codec);
      if (RandomRewardProbability != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(RandomRewardProbability);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      size += includeBoardId_.CalculateSize(_repeated_includeBoardId_codec);
      size += levelReward_.CalculateSize(_repeated_levelReward_codec);
      if (LevelRewardIcon1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LevelRewardIcon1);
      }
      if (LevelRewardIcon2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LevelRewardIcon2);
      }
      size += randomRewardInfo_.CalculateSize(_repeated_randomRewardInfo_codec);
      if (RandomRewardProbability != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RandomRewardProbability);
      }
      if (ShowNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ShowNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventDiggingLevel other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      includeBoardId_.Add(other.includeBoardId_);
      levelReward_.Add(other.levelReward_);
      if (other.LevelRewardIcon1.Length != 0) {
        LevelRewardIcon1 = other.LevelRewardIcon1;
      }
      if (other.LevelRewardIcon2.Length != 0) {
        LevelRewardIcon2 = other.LevelRewardIcon2;
      }
      randomRewardInfo_.Add(other.randomRewardInfo_);
      if (other.RandomRewardProbability != 0) {
        RandomRewardProbability = other.RandomRewardProbability;
      }
      if (other.ShowNum != 0) {
        ShowNum = other.ShowNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            includeBoardId_.AddEntriesFrom(input, _repeated_includeBoardId_codec);
            break;
          }
          case 26: {
            levelReward_.AddEntriesFrom(input, _repeated_levelReward_codec);
            break;
          }
          case 40: {
            ShowNum = input.ReadInt32();
            break;
          }
          case 50: {
            LevelRewardIcon1 = input.ReadString();
            break;
          }
          case 58: {
            LevelRewardIcon2 = input.ReadString();
            break;
          }
          case 66: {
            randomRewardInfo_.AddEntriesFrom(input, _repeated_randomRewardInfo_codec);
            break;
          }
          case 72: {
            RandomRewardProbability = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            includeBoardId_.AddEntriesFrom(ref input, _repeated_includeBoardId_codec);
            break;
          }
          case 26: {
            levelReward_.AddEntriesFrom(ref input, _repeated_levelReward_codec);
            break;
          }
          case 40: {
            ShowNum = input.ReadInt32();
            break;
          }
          case 50: {
            LevelRewardIcon1 = input.ReadString();
            break;
          }
          case 58: {
            LevelRewardIcon2 = input.ReadString();
            break;
          }
          case 66: {
            randomRewardInfo_.AddEntriesFrom(ref input, _repeated_randomRewardInfo_codec);
            break;
          }
          case 72: {
            RandomRewardProbability = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventDiggingLevelMapABValue : pb::IMessage<EventDiggingLevelMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventDiggingLevelMapABValue> _parser = new pb::MessageParser<EventDiggingLevelMapABValue>(() => new EventDiggingLevelMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventDiggingLevelMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventDiggingLevelConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventDiggingLevelMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventDiggingLevelMapABValue(EventDiggingLevelMapABValue other) : this() {
      eventDiggingLevelMap_ = other.eventDiggingLevelMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventDiggingLevelMapABValue Clone() {
      return new EventDiggingLevelMapABValue(this);
    }

    /// <summary>Field number for the "EventDiggingLevelMap" field.</summary>
    public const int EventDiggingLevelMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventDiggingLevel>.Codec _map_eventDiggingLevelMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventDiggingLevel>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventDiggingLevel.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventDiggingLevel> eventDiggingLevelMap_ = new pbc::MapField<int, global::fat.rawdata.EventDiggingLevel>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventDiggingLevel> EventDiggingLevelMap {
      get { return eventDiggingLevelMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventDiggingLevelMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventDiggingLevelMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventDiggingLevelMap.Equals(other.EventDiggingLevelMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventDiggingLevelMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventDiggingLevelMap_.WriteTo(output, _map_eventDiggingLevelMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventDiggingLevelMap_.WriteTo(ref output, _map_eventDiggingLevelMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventDiggingLevelMap_.CalculateSize(_map_eventDiggingLevelMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventDiggingLevelMapABValue other) {
      if (other == null) {
        return;
      }
      eventDiggingLevelMap_.Add(other.eventDiggingLevelMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventDiggingLevelMap_.AddEntriesFrom(input, _map_eventDiggingLevelMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventDiggingLevelMap_.AddEntriesFrom(ref input, _map_eventDiggingLevelMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventDiggingLevelConf : pb::IMessage<EventDiggingLevelConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventDiggingLevelConf> _parser = new pb::MessageParser<EventDiggingLevelConf>(() => new EventDiggingLevelConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventDiggingLevelConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventDiggingLevelConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventDiggingLevelConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventDiggingLevelConf(EventDiggingLevelConf other) : this() {
      eventDiggingLevelMap_ = other.eventDiggingLevelMap_.Clone();
      eventDiggingLevelMapAB_ = other.eventDiggingLevelMapAB_.Clone();
      eventDiggingLevelMapABPatch_ = other.eventDiggingLevelMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventDiggingLevelConf Clone() {
      return new EventDiggingLevelConf(this);
    }

    /// <summary>Field number for the "EventDiggingLevelMap" field.</summary>
    public const int EventDiggingLevelMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventDiggingLevel>.Codec _map_eventDiggingLevelMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventDiggingLevel>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventDiggingLevel.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventDiggingLevel> eventDiggingLevelMap_ = new pbc::MapField<int, global::fat.rawdata.EventDiggingLevel>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventDiggingLevel> EventDiggingLevelMap {
      get { return eventDiggingLevelMap_; }
    }

    /// <summary>Field number for the "EventDiggingLevelMapAB" field.</summary>
    public const int EventDiggingLevelMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventDiggingLevelMapABValue>.Codec _map_eventDiggingLevelMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventDiggingLevelMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventDiggingLevelMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventDiggingLevelMapABValue> eventDiggingLevelMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventDiggingLevelMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventDiggingLevelMapABValue> EventDiggingLevelMapAB {
      get { return eventDiggingLevelMapAB_; }
    }

    /// <summary>Field number for the "EventDiggingLevelMapABPatch" field.</summary>
    public const int EventDiggingLevelMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventDiggingLevelMapABValue>.Codec _map_eventDiggingLevelMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventDiggingLevelMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventDiggingLevelMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventDiggingLevelMapABValue> eventDiggingLevelMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventDiggingLevelMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventDiggingLevelMapABValue> EventDiggingLevelMapABPatch {
      get { return eventDiggingLevelMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventDiggingLevelConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventDiggingLevelConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventDiggingLevelMap.Equals(other.EventDiggingLevelMap)) return false;
      if (!EventDiggingLevelMapAB.Equals(other.EventDiggingLevelMapAB)) return false;
      if (!EventDiggingLevelMapABPatch.Equals(other.EventDiggingLevelMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventDiggingLevelMap.GetHashCode();
      hash ^= EventDiggingLevelMapAB.GetHashCode();
      hash ^= EventDiggingLevelMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventDiggingLevelMap_.WriteTo(output, _map_eventDiggingLevelMap_codec);
      eventDiggingLevelMapAB_.WriteTo(output, _map_eventDiggingLevelMapAB_codec);
      eventDiggingLevelMapABPatch_.WriteTo(output, _map_eventDiggingLevelMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventDiggingLevelMap_.WriteTo(ref output, _map_eventDiggingLevelMap_codec);
      eventDiggingLevelMapAB_.WriteTo(ref output, _map_eventDiggingLevelMapAB_codec);
      eventDiggingLevelMapABPatch_.WriteTo(ref output, _map_eventDiggingLevelMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventDiggingLevelMap_.CalculateSize(_map_eventDiggingLevelMap_codec);
      size += eventDiggingLevelMapAB_.CalculateSize(_map_eventDiggingLevelMapAB_codec);
      size += eventDiggingLevelMapABPatch_.CalculateSize(_map_eventDiggingLevelMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventDiggingLevelConf other) {
      if (other == null) {
        return;
      }
      eventDiggingLevelMap_.Add(other.eventDiggingLevelMap_);
      eventDiggingLevelMapAB_.Add(other.eventDiggingLevelMapAB_);
      eventDiggingLevelMapABPatch_.Add(other.eventDiggingLevelMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventDiggingLevelMap_.AddEntriesFrom(input, _map_eventDiggingLevelMap_codec);
            break;
          }
          case 18: {
            eventDiggingLevelMapAB_.AddEntriesFrom(input, _map_eventDiggingLevelMapAB_codec);
            break;
          }
          case 26: {
            eventDiggingLevelMapABPatch_.AddEntriesFrom(input, _map_eventDiggingLevelMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventDiggingLevelMap_.AddEntriesFrom(ref input, _map_eventDiggingLevelMap_codec);
            break;
          }
          case 18: {
            eventDiggingLevelMapAB_.AddEntriesFrom(ref input, _map_eventDiggingLevelMapAB_codec);
            break;
          }
          case 26: {
            eventDiggingLevelMapABPatch_.AddEntriesFrom(ref input, _map_eventDiggingLevelMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
