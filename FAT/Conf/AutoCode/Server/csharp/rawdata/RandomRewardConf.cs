// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/RandomRewardConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/RandomRewardConf.proto</summary>
  public static partial class RandomRewardConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/RandomRewardConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RandomRewardConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch5yYXdkYXRhL1JhbmRvbVJld2FyZENvbmYucHJvdG8SB3Jhd2RhdGEiOgoM",
            "UmFuZG9tUmV3YXJkEgoKAmlkGAEgASgFEg4KBnJld2FyZBgCIAMoCRIOCgZ3",
            "ZWlnaHQYAyABKAUitgEKFlJhbmRvbVJld2FyZE1hcEFCVmFsdWUSTQoPUmFu",
            "ZG9tUmV3YXJkTWFwGAEgAygLMjQucmF3ZGF0YS5SYW5kb21SZXdhcmRNYXBB",
            "QlZhbHVlLlJhbmRvbVJld2FyZE1hcEVudHJ5Gk0KFFJhbmRvbVJld2FyZE1h",
            "cEVudHJ5EgsKA2tleRgBIAEoBRIkCgV2YWx1ZRgCIAEoCzIVLnJhd2RhdGEu",
            "UmFuZG9tUmV3YXJkOgI4ASKJBAoQUmFuZG9tUmV3YXJkQ29uZhJHCg9SYW5k",
            "b21SZXdhcmRNYXAYASADKAsyLi5yYXdkYXRhLlJhbmRvbVJld2FyZENvbmYu",
            "UmFuZG9tUmV3YXJkTWFwRW50cnkSSwoRUmFuZG9tUmV3YXJkTWFwQUIYAiAD",
            "KAsyMC5yYXdkYXRhLlJhbmRvbVJld2FyZENvbmYuUmFuZG9tUmV3YXJkTWFw",
            "QUJFbnRyeRJVChZSYW5kb21SZXdhcmRNYXBBQlBhdGNoGAMgAygLMjUucmF3",
            "ZGF0YS5SYW5kb21SZXdhcmRDb25mLlJhbmRvbVJld2FyZE1hcEFCUGF0Y2hF",
            "bnRyeRpNChRSYW5kb21SZXdhcmRNYXBFbnRyeRILCgNrZXkYASABKAUSJAoF",
            "dmFsdWUYAiABKAsyFS5yYXdkYXRhLlJhbmRvbVJld2FyZDoCOAEaWQoWUmFu",
            "ZG9tUmV3YXJkTWFwQUJFbnRyeRILCgNrZXkYASABKAkSLgoFdmFsdWUYAiAB",
            "KAsyHy5yYXdkYXRhLlJhbmRvbVJld2FyZE1hcEFCVmFsdWU6AjgBGl4KG1Jh",
            "bmRvbVJld2FyZE1hcEFCUGF0Y2hFbnRyeRILCgNrZXkYASABKAkSLgoFdmFs",
            "dWUYAiABKAsyHy5yYXdkYXRhLlJhbmRvbVJld2FyZE1hcEFCVmFsdWU6AjgB",
            "Qj1aLWdpdGxhYi5mdW5wbHVzLmlvL2ZhdC9jb25mL2dlbi9nb2xhbmcvcmF3",
            "ZGF0YaoCC2ZhdC5yYXdkYXRhYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.RandomReward), global::fat.rawdata.RandomReward.Parser, new[]{ "Id", "Reward", "Weight" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.RandomRewardMapABValue), global::fat.rawdata.RandomRewardMapABValue.Parser, new[]{ "RandomRewardMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.RandomRewardConf), global::fat.rawdata.RandomRewardConf.Parser, new[]{ "RandomRewardMap", "RandomRewardMapAB", "RandomRewardMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="RandomReward",table="RandomRewardMap",table_wrapper="RandomRewardConf",map="true",map_key_type="int32",data="RandomRewardConf")
  /// annotation@ab(table_ab="RandomRewardMapAB",table_ab_patch="RandomRewardMapABPatch",table_ab_value="RandomRewardMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@RandomReward(id="id")
  /// </summary>
  public sealed partial class RandomReward : pb::IMessage<RandomReward>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RandomReward> _parser = new pb::MessageParser<RandomReward>(() => new RandomReward());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RandomReward> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.RandomRewardConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RandomReward() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RandomReward(RandomReward other) : this() {
      id_ = other.id_;
      reward_ = other.reward_.Clone();
      weight_ = other.weight_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RandomReward Clone() {
      return new RandomReward(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 随机结果ID
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "reward" field.</summary>
    public const int RewardFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_reward_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> reward_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 奖励
    /// （ID:数量:计算方式,ID:数量:计算方式）
    /// 参数3计算方式规则如下：
    /// 0 = 数量
    /// 3 = 数量*（等级系数/100），RoundCoin取整
    /// 4 = 数量*（等级系数/100），RoundTool取工具
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Reward {
      get { return reward_; }
    }

    /// <summary>Field number for the "weight" field.</summary>
    public const int WeightFieldNumber = 3;
    private int weight_;
    /// <summary>
    /// 结果对应权重
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Weight {
      get { return weight_; }
      set {
        weight_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RandomReward);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RandomReward other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!reward_.Equals(other.reward_)) return false;
      if (Weight != other.Weight) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      hash ^= reward_.GetHashCode();
      if (Weight != 0) hash ^= Weight.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      reward_.WriteTo(output, _repeated_reward_codec);
      if (Weight != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Weight);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      reward_.WriteTo(ref output, _repeated_reward_codec);
      if (Weight != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Weight);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      size += reward_.CalculateSize(_repeated_reward_codec);
      if (Weight != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Weight);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RandomReward other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      reward_.Add(other.reward_);
      if (other.Weight != 0) {
        Weight = other.Weight;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            reward_.AddEntriesFrom(input, _repeated_reward_codec);
            break;
          }
          case 24: {
            Weight = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            reward_.AddEntriesFrom(ref input, _repeated_reward_codec);
            break;
          }
          case 24: {
            Weight = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RandomRewardMapABValue : pb::IMessage<RandomRewardMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RandomRewardMapABValue> _parser = new pb::MessageParser<RandomRewardMapABValue>(() => new RandomRewardMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RandomRewardMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.RandomRewardConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RandomRewardMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RandomRewardMapABValue(RandomRewardMapABValue other) : this() {
      randomRewardMap_ = other.randomRewardMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RandomRewardMapABValue Clone() {
      return new RandomRewardMapABValue(this);
    }

    /// <summary>Field number for the "RandomRewardMap" field.</summary>
    public const int RandomRewardMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.RandomReward>.Codec _map_randomRewardMap_codec
        = new pbc::MapField<int, global::fat.rawdata.RandomReward>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.RandomReward.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.RandomReward> randomRewardMap_ = new pbc::MapField<int, global::fat.rawdata.RandomReward>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.RandomReward> RandomRewardMap {
      get { return randomRewardMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RandomRewardMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RandomRewardMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!RandomRewardMap.Equals(other.RandomRewardMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= RandomRewardMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      randomRewardMap_.WriteTo(output, _map_randomRewardMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      randomRewardMap_.WriteTo(ref output, _map_randomRewardMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += randomRewardMap_.CalculateSize(_map_randomRewardMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RandomRewardMapABValue other) {
      if (other == null) {
        return;
      }
      randomRewardMap_.Add(other.randomRewardMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            randomRewardMap_.AddEntriesFrom(input, _map_randomRewardMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            randomRewardMap_.AddEntriesFrom(ref input, _map_randomRewardMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RandomRewardConf : pb::IMessage<RandomRewardConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RandomRewardConf> _parser = new pb::MessageParser<RandomRewardConf>(() => new RandomRewardConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RandomRewardConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.RandomRewardConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RandomRewardConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RandomRewardConf(RandomRewardConf other) : this() {
      randomRewardMap_ = other.randomRewardMap_.Clone();
      randomRewardMapAB_ = other.randomRewardMapAB_.Clone();
      randomRewardMapABPatch_ = other.randomRewardMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RandomRewardConf Clone() {
      return new RandomRewardConf(this);
    }

    /// <summary>Field number for the "RandomRewardMap" field.</summary>
    public const int RandomRewardMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.RandomReward>.Codec _map_randomRewardMap_codec
        = new pbc::MapField<int, global::fat.rawdata.RandomReward>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.RandomReward.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.RandomReward> randomRewardMap_ = new pbc::MapField<int, global::fat.rawdata.RandomReward>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.RandomReward> RandomRewardMap {
      get { return randomRewardMap_; }
    }

    /// <summary>Field number for the "RandomRewardMapAB" field.</summary>
    public const int RandomRewardMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.RandomRewardMapABValue>.Codec _map_randomRewardMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.RandomRewardMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.RandomRewardMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.RandomRewardMapABValue> randomRewardMapAB_ = new pbc::MapField<string, global::fat.rawdata.RandomRewardMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.RandomRewardMapABValue> RandomRewardMapAB {
      get { return randomRewardMapAB_; }
    }

    /// <summary>Field number for the "RandomRewardMapABPatch" field.</summary>
    public const int RandomRewardMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.RandomRewardMapABValue>.Codec _map_randomRewardMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.RandomRewardMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.RandomRewardMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.RandomRewardMapABValue> randomRewardMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.RandomRewardMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.RandomRewardMapABValue> RandomRewardMapABPatch {
      get { return randomRewardMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RandomRewardConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RandomRewardConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!RandomRewardMap.Equals(other.RandomRewardMap)) return false;
      if (!RandomRewardMapAB.Equals(other.RandomRewardMapAB)) return false;
      if (!RandomRewardMapABPatch.Equals(other.RandomRewardMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= RandomRewardMap.GetHashCode();
      hash ^= RandomRewardMapAB.GetHashCode();
      hash ^= RandomRewardMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      randomRewardMap_.WriteTo(output, _map_randomRewardMap_codec);
      randomRewardMapAB_.WriteTo(output, _map_randomRewardMapAB_codec);
      randomRewardMapABPatch_.WriteTo(output, _map_randomRewardMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      randomRewardMap_.WriteTo(ref output, _map_randomRewardMap_codec);
      randomRewardMapAB_.WriteTo(ref output, _map_randomRewardMapAB_codec);
      randomRewardMapABPatch_.WriteTo(ref output, _map_randomRewardMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += randomRewardMap_.CalculateSize(_map_randomRewardMap_codec);
      size += randomRewardMapAB_.CalculateSize(_map_randomRewardMapAB_codec);
      size += randomRewardMapABPatch_.CalculateSize(_map_randomRewardMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RandomRewardConf other) {
      if (other == null) {
        return;
      }
      randomRewardMap_.Add(other.randomRewardMap_);
      randomRewardMapAB_.Add(other.randomRewardMapAB_);
      randomRewardMapABPatch_.Add(other.randomRewardMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            randomRewardMap_.AddEntriesFrom(input, _map_randomRewardMap_codec);
            break;
          }
          case 18: {
            randomRewardMapAB_.AddEntriesFrom(input, _map_randomRewardMapAB_codec);
            break;
          }
          case 26: {
            randomRewardMapABPatch_.AddEntriesFrom(input, _map_randomRewardMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            randomRewardMap_.AddEntriesFrom(ref input, _map_randomRewardMap_codec);
            break;
          }
          case 18: {
            randomRewardMapAB_.AddEntriesFrom(ref input, _map_randomRewardMapAB_codec);
            break;
          }
          case 26: {
            randomRewardMapABPatch_.AddEntriesFrom(ref input, _map_randomRewardMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
