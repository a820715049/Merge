// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/OnePlusTwoConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/OnePlusTwoConf.proto</summary>
  public static partial class OnePlusTwoConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/OnePlusTwoConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static OnePlusTwoConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChxyYXdkYXRhL09uZVBsdXNUd29Db25mLnByb3RvEgdyYXdkYXRhImsKCk9u",
            "ZVBsdXNUd28SCgoCaWQYASABKAUSEgoKZXZlbnRUaGVtZRgCIAEoBRIUCgxm",
            "cmVlT25lR3JwSWQYAyABKAUSFAoMZnJlZVR3b0dycElkGAQgASgFEhEKCXBh",
            "Y2tHcnBJZBgFIAEoBSKqAQoUT25lUGx1c1R3b01hcEFCVmFsdWUSRwoNT25l",
            "UGx1c1R3b01hcBgBIAMoCzIwLnJhd2RhdGEuT25lUGx1c1R3b01hcEFCVmFs",
            "dWUuT25lUGx1c1R3b01hcEVudHJ5GkkKEk9uZVBsdXNUd29NYXBFbnRyeRIL",
            "CgNrZXkYASABKAUSIgoFdmFsdWUYAiABKAsyEy5yYXdkYXRhLk9uZVBsdXNU",
            "d286AjgBIukDCg5PbmVQbHVzVHdvQ29uZhJBCg1PbmVQbHVzVHdvTWFwGAEg",
            "AygLMioucmF3ZGF0YS5PbmVQbHVzVHdvQ29uZi5PbmVQbHVzVHdvTWFwRW50",
            "cnkSRQoPT25lUGx1c1R3b01hcEFCGAIgAygLMiwucmF3ZGF0YS5PbmVQbHVz",
            "VHdvQ29uZi5PbmVQbHVzVHdvTWFwQUJFbnRyeRJPChRPbmVQbHVzVHdvTWFw",
            "QUJQYXRjaBgDIAMoCzIxLnJhd2RhdGEuT25lUGx1c1R3b0NvbmYuT25lUGx1",
            "c1R3b01hcEFCUGF0Y2hFbnRyeRpJChJPbmVQbHVzVHdvTWFwRW50cnkSCwoD",
            "a2V5GAEgASgFEiIKBXZhbHVlGAIgASgLMhMucmF3ZGF0YS5PbmVQbHVzVHdv",
            "OgI4ARpVChRPbmVQbHVzVHdvTWFwQUJFbnRyeRILCgNrZXkYASABKAkSLAoF",
            "dmFsdWUYAiABKAsyHS5yYXdkYXRhLk9uZVBsdXNUd29NYXBBQlZhbHVlOgI4",
            "ARpaChlPbmVQbHVzVHdvTWFwQUJQYXRjaEVudHJ5EgsKA2tleRgBIAEoCRIs",
            "CgV2YWx1ZRgCIAEoCzIdLnJhd2RhdGEuT25lUGx1c1R3b01hcEFCVmFsdWU6",
            "AjgBQj1aLWdpdGxhYi5mdW5wbHVzLmlvL2ZhdC9jb25mL2dlbi9nb2xhbmcv",
            "cmF3ZGF0YaoCC2ZhdC5yYXdkYXRhYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.OnePlusTwo), global::fat.rawdata.OnePlusTwo.Parser, new[]{ "Id", "EventTheme", "FreeOneGrpId", "FreeTwoGrpId", "PackGrpId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.OnePlusTwoMapABValue), global::fat.rawdata.OnePlusTwoMapABValue.Parser, new[]{ "OnePlusTwoMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.OnePlusTwoConf), global::fat.rawdata.OnePlusTwoConf.Parser, new[]{ "OnePlusTwoMap", "OnePlusTwoMapAB", "OnePlusTwoMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="OnePlusTwo",table="OnePlusTwoMap",table_wrapper="OnePlusTwoConf",map="true",map_key_type="int32",data="OnePlusTwoConf")
  /// annotation@ab(table_ab="OnePlusTwoMapAB",table_ab_patch="OnePlusTwoMapABPatch",table_ab_value="OnePlusTwoMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@OnePlusTwo(id="id")
  /// </summary>
  public sealed partial class OnePlusTwo : pb::IMessage<OnePlusTwo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OnePlusTwo> _parser = new pb::MessageParser<OnePlusTwo>(() => new OnePlusTwo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OnePlusTwo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.OnePlusTwoConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnePlusTwo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnePlusTwo(OnePlusTwo other) : this() {
      id_ = other.id_;
      eventTheme_ = other.eventTheme_;
      freeOneGrpId_ = other.freeOneGrpId_;
      freeTwoGrpId_ = other.freeTwoGrpId_;
      packGrpId_ = other.packGrpId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnePlusTwo Clone() {
      return new OnePlusTwo(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 1+2礼包
    /// 模板ID
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "eventTheme" field.</summary>
    public const int EventThemeFieldNumber = 2;
    private int eventTheme_;
    /// <summary>
    /// 活动弹板ID
    /// （EventTheme.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EventTheme {
      get { return eventTheme_; }
      set {
        eventTheme_ = value;
      }
    }

    /// <summary>Field number for the "freeOneGrpId" field.</summary>
    public const int FreeOneGrpIdFieldNumber = 3;
    private int freeOneGrpId_;
    /// <summary>
    /// 赠品ID
    /// （受档位组控制）
    /// （GradeIndexMapping.id）
    /// （IAPFree.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FreeOneGrpId {
      get { return freeOneGrpId_; }
      set {
        freeOneGrpId_ = value;
      }
    }

    /// <summary>Field number for the "freeTwoGrpId" field.</summary>
    public const int FreeTwoGrpIdFieldNumber = 4;
    private int freeTwoGrpId_;
    /// <summary>
    /// 赠品ID
    /// （受档位组控制）
    /// （GradeIndexMapping.id）
    /// （IAPFree.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FreeTwoGrpId {
      get { return freeTwoGrpId_; }
      set {
        freeTwoGrpId_ = value;
      }
    }

    /// <summary>Field number for the "packGrpId" field.</summary>
    public const int PackGrpIdFieldNumber = 5;
    private int packGrpId_;
    /// <summary>
    /// 内购商品ID
    /// （受档位组控制）
    /// （GradeIndexMapping.id）
    /// （IAPPack.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PackGrpId {
      get { return packGrpId_; }
      set {
        packGrpId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OnePlusTwo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OnePlusTwo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (EventTheme != other.EventTheme) return false;
      if (FreeOneGrpId != other.FreeOneGrpId) return false;
      if (FreeTwoGrpId != other.FreeTwoGrpId) return false;
      if (PackGrpId != other.PackGrpId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (EventTheme != 0) hash ^= EventTheme.GetHashCode();
      if (FreeOneGrpId != 0) hash ^= FreeOneGrpId.GetHashCode();
      if (FreeTwoGrpId != 0) hash ^= FreeTwoGrpId.GetHashCode();
      if (PackGrpId != 0) hash ^= PackGrpId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (EventTheme != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(EventTheme);
      }
      if (FreeOneGrpId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(FreeOneGrpId);
      }
      if (FreeTwoGrpId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(FreeTwoGrpId);
      }
      if (PackGrpId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(PackGrpId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (EventTheme != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(EventTheme);
      }
      if (FreeOneGrpId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(FreeOneGrpId);
      }
      if (FreeTwoGrpId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(FreeTwoGrpId);
      }
      if (PackGrpId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(PackGrpId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (EventTheme != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EventTheme);
      }
      if (FreeOneGrpId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FreeOneGrpId);
      }
      if (FreeTwoGrpId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FreeTwoGrpId);
      }
      if (PackGrpId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PackGrpId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OnePlusTwo other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.EventTheme != 0) {
        EventTheme = other.EventTheme;
      }
      if (other.FreeOneGrpId != 0) {
        FreeOneGrpId = other.FreeOneGrpId;
      }
      if (other.FreeTwoGrpId != 0) {
        FreeTwoGrpId = other.FreeTwoGrpId;
      }
      if (other.PackGrpId != 0) {
        PackGrpId = other.PackGrpId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            EventTheme = input.ReadInt32();
            break;
          }
          case 24: {
            FreeOneGrpId = input.ReadInt32();
            break;
          }
          case 32: {
            FreeTwoGrpId = input.ReadInt32();
            break;
          }
          case 40: {
            PackGrpId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            EventTheme = input.ReadInt32();
            break;
          }
          case 24: {
            FreeOneGrpId = input.ReadInt32();
            break;
          }
          case 32: {
            FreeTwoGrpId = input.ReadInt32();
            break;
          }
          case 40: {
            PackGrpId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class OnePlusTwoMapABValue : pb::IMessage<OnePlusTwoMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OnePlusTwoMapABValue> _parser = new pb::MessageParser<OnePlusTwoMapABValue>(() => new OnePlusTwoMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OnePlusTwoMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.OnePlusTwoConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnePlusTwoMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnePlusTwoMapABValue(OnePlusTwoMapABValue other) : this() {
      onePlusTwoMap_ = other.onePlusTwoMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnePlusTwoMapABValue Clone() {
      return new OnePlusTwoMapABValue(this);
    }

    /// <summary>Field number for the "OnePlusTwoMap" field.</summary>
    public const int OnePlusTwoMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.OnePlusTwo>.Codec _map_onePlusTwoMap_codec
        = new pbc::MapField<int, global::fat.rawdata.OnePlusTwo>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.OnePlusTwo.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.OnePlusTwo> onePlusTwoMap_ = new pbc::MapField<int, global::fat.rawdata.OnePlusTwo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.OnePlusTwo> OnePlusTwoMap {
      get { return onePlusTwoMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OnePlusTwoMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OnePlusTwoMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!OnePlusTwoMap.Equals(other.OnePlusTwoMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= OnePlusTwoMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      onePlusTwoMap_.WriteTo(output, _map_onePlusTwoMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      onePlusTwoMap_.WriteTo(ref output, _map_onePlusTwoMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += onePlusTwoMap_.CalculateSize(_map_onePlusTwoMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OnePlusTwoMapABValue other) {
      if (other == null) {
        return;
      }
      onePlusTwoMap_.Add(other.onePlusTwoMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            onePlusTwoMap_.AddEntriesFrom(input, _map_onePlusTwoMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            onePlusTwoMap_.AddEntriesFrom(ref input, _map_onePlusTwoMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class OnePlusTwoConf : pb::IMessage<OnePlusTwoConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OnePlusTwoConf> _parser = new pb::MessageParser<OnePlusTwoConf>(() => new OnePlusTwoConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OnePlusTwoConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.OnePlusTwoConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnePlusTwoConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnePlusTwoConf(OnePlusTwoConf other) : this() {
      onePlusTwoMap_ = other.onePlusTwoMap_.Clone();
      onePlusTwoMapAB_ = other.onePlusTwoMapAB_.Clone();
      onePlusTwoMapABPatch_ = other.onePlusTwoMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnePlusTwoConf Clone() {
      return new OnePlusTwoConf(this);
    }

    /// <summary>Field number for the "OnePlusTwoMap" field.</summary>
    public const int OnePlusTwoMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.OnePlusTwo>.Codec _map_onePlusTwoMap_codec
        = new pbc::MapField<int, global::fat.rawdata.OnePlusTwo>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.OnePlusTwo.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.OnePlusTwo> onePlusTwoMap_ = new pbc::MapField<int, global::fat.rawdata.OnePlusTwo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.OnePlusTwo> OnePlusTwoMap {
      get { return onePlusTwoMap_; }
    }

    /// <summary>Field number for the "OnePlusTwoMapAB" field.</summary>
    public const int OnePlusTwoMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.OnePlusTwoMapABValue>.Codec _map_onePlusTwoMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.OnePlusTwoMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.OnePlusTwoMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.OnePlusTwoMapABValue> onePlusTwoMapAB_ = new pbc::MapField<string, global::fat.rawdata.OnePlusTwoMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.OnePlusTwoMapABValue> OnePlusTwoMapAB {
      get { return onePlusTwoMapAB_; }
    }

    /// <summary>Field number for the "OnePlusTwoMapABPatch" field.</summary>
    public const int OnePlusTwoMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.OnePlusTwoMapABValue>.Codec _map_onePlusTwoMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.OnePlusTwoMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.OnePlusTwoMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.OnePlusTwoMapABValue> onePlusTwoMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.OnePlusTwoMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.OnePlusTwoMapABValue> OnePlusTwoMapABPatch {
      get { return onePlusTwoMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OnePlusTwoConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OnePlusTwoConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!OnePlusTwoMap.Equals(other.OnePlusTwoMap)) return false;
      if (!OnePlusTwoMapAB.Equals(other.OnePlusTwoMapAB)) return false;
      if (!OnePlusTwoMapABPatch.Equals(other.OnePlusTwoMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= OnePlusTwoMap.GetHashCode();
      hash ^= OnePlusTwoMapAB.GetHashCode();
      hash ^= OnePlusTwoMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      onePlusTwoMap_.WriteTo(output, _map_onePlusTwoMap_codec);
      onePlusTwoMapAB_.WriteTo(output, _map_onePlusTwoMapAB_codec);
      onePlusTwoMapABPatch_.WriteTo(output, _map_onePlusTwoMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      onePlusTwoMap_.WriteTo(ref output, _map_onePlusTwoMap_codec);
      onePlusTwoMapAB_.WriteTo(ref output, _map_onePlusTwoMapAB_codec);
      onePlusTwoMapABPatch_.WriteTo(ref output, _map_onePlusTwoMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += onePlusTwoMap_.CalculateSize(_map_onePlusTwoMap_codec);
      size += onePlusTwoMapAB_.CalculateSize(_map_onePlusTwoMapAB_codec);
      size += onePlusTwoMapABPatch_.CalculateSize(_map_onePlusTwoMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OnePlusTwoConf other) {
      if (other == null) {
        return;
      }
      onePlusTwoMap_.Add(other.onePlusTwoMap_);
      onePlusTwoMapAB_.Add(other.onePlusTwoMapAB_);
      onePlusTwoMapABPatch_.Add(other.onePlusTwoMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            onePlusTwoMap_.AddEntriesFrom(input, _map_onePlusTwoMap_codec);
            break;
          }
          case 18: {
            onePlusTwoMapAB_.AddEntriesFrom(input, _map_onePlusTwoMapAB_codec);
            break;
          }
          case 26: {
            onePlusTwoMapABPatch_.AddEntriesFrom(input, _map_onePlusTwoMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            onePlusTwoMap_.AddEntriesFrom(ref input, _map_onePlusTwoMap_codec);
            break;
          }
          case 18: {
            onePlusTwoMapAB_.AddEntriesFrom(ref input, _map_onePlusTwoMapAB_codec);
            break;
          }
          case 26: {
            onePlusTwoMapABPatch_.AddEntriesFrom(ref input, _map_onePlusTwoMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
