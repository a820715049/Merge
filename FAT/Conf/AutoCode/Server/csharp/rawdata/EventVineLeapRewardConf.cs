// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventVineLeapRewardConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventVineLeapRewardConf.proto</summary>
  public static partial class EventVineLeapRewardConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventVineLeapRewardConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventVineLeapRewardConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiVyYXdkYXRhL0V2ZW50VmluZUxlYXBSZXdhcmRDb25mLnByb3RvEgdyYXdk",
            "YXRhIjEKE0V2ZW50VmluZUxlYXBSZXdhcmQSCgoCaWQYASABKAUSDgoGcmV3",
            "YXJkGAIgAygJIuABCh1FdmVudFZpbmVMZWFwUmV3YXJkTWFwQUJWYWx1ZRJi",
            "ChZFdmVudFZpbmVMZWFwUmV3YXJkTWFwGAEgAygLMkIucmF3ZGF0YS5FdmVu",
            "dFZpbmVMZWFwUmV3YXJkTWFwQUJWYWx1ZS5FdmVudFZpbmVMZWFwUmV3YXJk",
            "TWFwRW50cnkaWwobRXZlbnRWaW5lTGVhcFJld2FyZE1hcEVudHJ5EgsKA2tl",
            "eRgBIAEoBRIrCgV2YWx1ZRgCIAEoCzIcLnJhd2RhdGEuRXZlbnRWaW5lTGVh",
            "cFJld2FyZDoCOAEi+QQKF0V2ZW50VmluZUxlYXBSZXdhcmRDb25mElwKFkV2",
            "ZW50VmluZUxlYXBSZXdhcmRNYXAYASADKAsyPC5yYXdkYXRhLkV2ZW50Vmlu",
            "ZUxlYXBSZXdhcmRDb25mLkV2ZW50VmluZUxlYXBSZXdhcmRNYXBFbnRyeRJg",
            "ChhFdmVudFZpbmVMZWFwUmV3YXJkTWFwQUIYAiADKAsyPi5yYXdkYXRhLkV2",
            "ZW50VmluZUxlYXBSZXdhcmRDb25mLkV2ZW50VmluZUxlYXBSZXdhcmRNYXBB",
            "QkVudHJ5EmoKHUV2ZW50VmluZUxlYXBSZXdhcmRNYXBBQlBhdGNoGAMgAygL",
            "MkMucmF3ZGF0YS5FdmVudFZpbmVMZWFwUmV3YXJkQ29uZi5FdmVudFZpbmVM",
            "ZWFwUmV3YXJkTWFwQUJQYXRjaEVudHJ5GlsKG0V2ZW50VmluZUxlYXBSZXdh",
            "cmRNYXBFbnRyeRILCgNrZXkYASABKAUSKwoFdmFsdWUYAiABKAsyHC5yYXdk",
            "YXRhLkV2ZW50VmluZUxlYXBSZXdhcmQ6AjgBGmcKHUV2ZW50VmluZUxlYXBS",
            "ZXdhcmRNYXBBQkVudHJ5EgsKA2tleRgBIAEoCRI1CgV2YWx1ZRgCIAEoCzIm",
            "LnJhd2RhdGEuRXZlbnRWaW5lTGVhcFJld2FyZE1hcEFCVmFsdWU6AjgBGmwK",
            "IkV2ZW50VmluZUxlYXBSZXdhcmRNYXBBQlBhdGNoRW50cnkSCwoDa2V5GAEg",
            "ASgJEjUKBXZhbHVlGAIgASgLMiYucmF3ZGF0YS5FdmVudFZpbmVMZWFwUmV3",
            "YXJkTWFwQUJWYWx1ZToCOAFCPVotZ2l0bGFiLmZ1bnBsdXMuaW8vZmF0L2Nv",
            "bmYvZ2VuL2dvbGFuZy9yYXdkYXRhqgILZmF0LnJhd2RhdGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventVineLeapReward), global::fat.rawdata.EventVineLeapReward.Parser, new[]{ "Id", "Reward" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventVineLeapRewardMapABValue), global::fat.rawdata.EventVineLeapRewardMapABValue.Parser, new[]{ "EventVineLeapRewardMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventVineLeapRewardConf), global::fat.rawdata.EventVineLeapRewardConf.Parser, new[]{ "EventVineLeapRewardMap", "EventVineLeapRewardMapAB", "EventVineLeapRewardMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventVineLeapReward",table="EventVineLeapRewardMap",table_wrapper="EventVineLeapRewardConf",map="true",map_key_type="int32",data="EventVineLeapRewardConf")
  /// annotation@ab(table_ab="EventVineLeapRewardMapAB",table_ab_patch="EventVineLeapRewardMapABPatch",table_ab_value="EventVineLeapRewardMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventVineLeapReward(id="id")
  /// </summary>
  public sealed partial class EventVineLeapReward : pb::IMessage<EventVineLeapReward>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventVineLeapReward> _parser = new pb::MessageParser<EventVineLeapReward>(() => new EventVineLeapReward());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventVineLeapReward> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventVineLeapRewardConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventVineLeapReward() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventVineLeapReward(EventVineLeapReward other) : this() {
      id_ = other.id_;
      reward_ = other.reward_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventVineLeapReward Clone() {
      return new EventVineLeapReward(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// id
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "reward" field.</summary>
    public const int RewardFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_reward_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> reward_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 奖励：    id:数量:计算方式
    /// （ObjBasic.id:数量:计算方式,ObjBasic.id:数量:计算方式）
    /// 参数3计算方式规则如下：
    /// 0 = 数量
    /// 3 = 数量*（等级系数/100）,RoundCoin取整
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Reward {
      get { return reward_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventVineLeapReward);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventVineLeapReward other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!reward_.Equals(other.reward_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      hash ^= reward_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      reward_.WriteTo(output, _repeated_reward_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      reward_.WriteTo(ref output, _repeated_reward_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      size += reward_.CalculateSize(_repeated_reward_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventVineLeapReward other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      reward_.Add(other.reward_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            reward_.AddEntriesFrom(input, _repeated_reward_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            reward_.AddEntriesFrom(ref input, _repeated_reward_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventVineLeapRewardMapABValue : pb::IMessage<EventVineLeapRewardMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventVineLeapRewardMapABValue> _parser = new pb::MessageParser<EventVineLeapRewardMapABValue>(() => new EventVineLeapRewardMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventVineLeapRewardMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventVineLeapRewardConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventVineLeapRewardMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventVineLeapRewardMapABValue(EventVineLeapRewardMapABValue other) : this() {
      eventVineLeapRewardMap_ = other.eventVineLeapRewardMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventVineLeapRewardMapABValue Clone() {
      return new EventVineLeapRewardMapABValue(this);
    }

    /// <summary>Field number for the "EventVineLeapRewardMap" field.</summary>
    public const int EventVineLeapRewardMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventVineLeapReward>.Codec _map_eventVineLeapRewardMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventVineLeapReward>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventVineLeapReward.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventVineLeapReward> eventVineLeapRewardMap_ = new pbc::MapField<int, global::fat.rawdata.EventVineLeapReward>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventVineLeapReward> EventVineLeapRewardMap {
      get { return eventVineLeapRewardMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventVineLeapRewardMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventVineLeapRewardMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventVineLeapRewardMap.Equals(other.EventVineLeapRewardMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventVineLeapRewardMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventVineLeapRewardMap_.WriteTo(output, _map_eventVineLeapRewardMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventVineLeapRewardMap_.WriteTo(ref output, _map_eventVineLeapRewardMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventVineLeapRewardMap_.CalculateSize(_map_eventVineLeapRewardMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventVineLeapRewardMapABValue other) {
      if (other == null) {
        return;
      }
      eventVineLeapRewardMap_.Add(other.eventVineLeapRewardMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventVineLeapRewardMap_.AddEntriesFrom(input, _map_eventVineLeapRewardMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventVineLeapRewardMap_.AddEntriesFrom(ref input, _map_eventVineLeapRewardMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventVineLeapRewardConf : pb::IMessage<EventVineLeapRewardConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventVineLeapRewardConf> _parser = new pb::MessageParser<EventVineLeapRewardConf>(() => new EventVineLeapRewardConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventVineLeapRewardConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventVineLeapRewardConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventVineLeapRewardConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventVineLeapRewardConf(EventVineLeapRewardConf other) : this() {
      eventVineLeapRewardMap_ = other.eventVineLeapRewardMap_.Clone();
      eventVineLeapRewardMapAB_ = other.eventVineLeapRewardMapAB_.Clone();
      eventVineLeapRewardMapABPatch_ = other.eventVineLeapRewardMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventVineLeapRewardConf Clone() {
      return new EventVineLeapRewardConf(this);
    }

    /// <summary>Field number for the "EventVineLeapRewardMap" field.</summary>
    public const int EventVineLeapRewardMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventVineLeapReward>.Codec _map_eventVineLeapRewardMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventVineLeapReward>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventVineLeapReward.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventVineLeapReward> eventVineLeapRewardMap_ = new pbc::MapField<int, global::fat.rawdata.EventVineLeapReward>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventVineLeapReward> EventVineLeapRewardMap {
      get { return eventVineLeapRewardMap_; }
    }

    /// <summary>Field number for the "EventVineLeapRewardMapAB" field.</summary>
    public const int EventVineLeapRewardMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventVineLeapRewardMapABValue>.Codec _map_eventVineLeapRewardMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventVineLeapRewardMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventVineLeapRewardMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventVineLeapRewardMapABValue> eventVineLeapRewardMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventVineLeapRewardMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventVineLeapRewardMapABValue> EventVineLeapRewardMapAB {
      get { return eventVineLeapRewardMapAB_; }
    }

    /// <summary>Field number for the "EventVineLeapRewardMapABPatch" field.</summary>
    public const int EventVineLeapRewardMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventVineLeapRewardMapABValue>.Codec _map_eventVineLeapRewardMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventVineLeapRewardMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventVineLeapRewardMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventVineLeapRewardMapABValue> eventVineLeapRewardMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventVineLeapRewardMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventVineLeapRewardMapABValue> EventVineLeapRewardMapABPatch {
      get { return eventVineLeapRewardMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventVineLeapRewardConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventVineLeapRewardConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventVineLeapRewardMap.Equals(other.EventVineLeapRewardMap)) return false;
      if (!EventVineLeapRewardMapAB.Equals(other.EventVineLeapRewardMapAB)) return false;
      if (!EventVineLeapRewardMapABPatch.Equals(other.EventVineLeapRewardMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventVineLeapRewardMap.GetHashCode();
      hash ^= EventVineLeapRewardMapAB.GetHashCode();
      hash ^= EventVineLeapRewardMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventVineLeapRewardMap_.WriteTo(output, _map_eventVineLeapRewardMap_codec);
      eventVineLeapRewardMapAB_.WriteTo(output, _map_eventVineLeapRewardMapAB_codec);
      eventVineLeapRewardMapABPatch_.WriteTo(output, _map_eventVineLeapRewardMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventVineLeapRewardMap_.WriteTo(ref output, _map_eventVineLeapRewardMap_codec);
      eventVineLeapRewardMapAB_.WriteTo(ref output, _map_eventVineLeapRewardMapAB_codec);
      eventVineLeapRewardMapABPatch_.WriteTo(ref output, _map_eventVineLeapRewardMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventVineLeapRewardMap_.CalculateSize(_map_eventVineLeapRewardMap_codec);
      size += eventVineLeapRewardMapAB_.CalculateSize(_map_eventVineLeapRewardMapAB_codec);
      size += eventVineLeapRewardMapABPatch_.CalculateSize(_map_eventVineLeapRewardMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventVineLeapRewardConf other) {
      if (other == null) {
        return;
      }
      eventVineLeapRewardMap_.Add(other.eventVineLeapRewardMap_);
      eventVineLeapRewardMapAB_.Add(other.eventVineLeapRewardMapAB_);
      eventVineLeapRewardMapABPatch_.Add(other.eventVineLeapRewardMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventVineLeapRewardMap_.AddEntriesFrom(input, _map_eventVineLeapRewardMap_codec);
            break;
          }
          case 18: {
            eventVineLeapRewardMapAB_.AddEntriesFrom(input, _map_eventVineLeapRewardMapAB_codec);
            break;
          }
          case 26: {
            eventVineLeapRewardMapABPatch_.AddEntriesFrom(input, _map_eventVineLeapRewardMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventVineLeapRewardMap_.AddEntriesFrom(ref input, _map_eventVineLeapRewardMap_codec);
            break;
          }
          case 18: {
            eventVineLeapRewardMapAB_.AddEntriesFrom(ref input, _map_eventVineLeapRewardMapAB_codec);
            break;
          }
          case 26: {
            eventVineLeapRewardMapABPatch_.AddEntriesFrom(ref input, _map_eventVineLeapRewardMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
