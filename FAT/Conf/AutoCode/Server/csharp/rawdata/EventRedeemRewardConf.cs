// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventRedeemRewardConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventRedeemRewardConf.proto</summary>
  public static partial class EventRedeemRewardConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventRedeemRewardConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventRedeemRewardConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiNyYXdkYXRhL0V2ZW50UmVkZWVtUmV3YXJkQ29uZi5wcm90bxIHcmF3ZGF0",
            "YSJ6ChFFdmVudFJlZGVlbVJld2FyZBIKCgJpZBgBIAEoBRITCgtSZWRlZW1U",
            "aW1lcxgCIAEoBRIRCglib2FyZFR5cGUYAyABKAUSEwoLcmVkZWVtU2NvcmUY",
            "BCABKAUSDgoGcmV3YXJkGAUgAygJEgwKBHNvcnQYBiABKAUi1AEKG0V2ZW50",
            "UmVkZWVtUmV3YXJkTWFwQUJWYWx1ZRJcChRFdmVudFJlZGVlbVJld2FyZE1h",
            "cBgBIAMoCzI+LnJhd2RhdGEuRXZlbnRSZWRlZW1SZXdhcmRNYXBBQlZhbHVl",
            "LkV2ZW50UmVkZWVtUmV3YXJkTWFwRW50cnkaVwoZRXZlbnRSZWRlZW1SZXdh",
            "cmRNYXBFbnRyeRILCgNrZXkYASABKAUSKQoFdmFsdWUYAiABKAsyGi5yYXdk",
            "YXRhLkV2ZW50UmVkZWVtUmV3YXJkOgI4ASLZBAoVRXZlbnRSZWRlZW1SZXdh",
            "cmRDb25mElYKFEV2ZW50UmVkZWVtUmV3YXJkTWFwGAEgAygLMjgucmF3ZGF0",
            "YS5FdmVudFJlZGVlbVJld2FyZENvbmYuRXZlbnRSZWRlZW1SZXdhcmRNYXBF",
            "bnRyeRJaChZFdmVudFJlZGVlbVJld2FyZE1hcEFCGAIgAygLMjoucmF3ZGF0",
            "YS5FdmVudFJlZGVlbVJld2FyZENvbmYuRXZlbnRSZWRlZW1SZXdhcmRNYXBB",
            "QkVudHJ5EmQKG0V2ZW50UmVkZWVtUmV3YXJkTWFwQUJQYXRjaBgDIAMoCzI/",
            "LnJhd2RhdGEuRXZlbnRSZWRlZW1SZXdhcmRDb25mLkV2ZW50UmVkZWVtUmV3",
            "YXJkTWFwQUJQYXRjaEVudHJ5GlcKGUV2ZW50UmVkZWVtUmV3YXJkTWFwRW50",
            "cnkSCwoDa2V5GAEgASgFEikKBXZhbHVlGAIgASgLMhoucmF3ZGF0YS5FdmVu",
            "dFJlZGVlbVJld2FyZDoCOAEaYwobRXZlbnRSZWRlZW1SZXdhcmRNYXBBQkVu",
            "dHJ5EgsKA2tleRgBIAEoCRIzCgV2YWx1ZRgCIAEoCzIkLnJhd2RhdGEuRXZl",
            "bnRSZWRlZW1SZXdhcmRNYXBBQlZhbHVlOgI4ARpoCiBFdmVudFJlZGVlbVJl",
            "d2FyZE1hcEFCUGF0Y2hFbnRyeRILCgNrZXkYASABKAkSMwoFdmFsdWUYAiAB",
            "KAsyJC5yYXdkYXRhLkV2ZW50UmVkZWVtUmV3YXJkTWFwQUJWYWx1ZToCOAFC",
            "PVotZ2l0bGFiLmZ1bnBsdXMuaW8vZmF0L2NvbmYvZ2VuL2dvbGFuZy9yYXdk",
            "YXRhqgILZmF0LnJhd2RhdGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventRedeemReward), global::fat.rawdata.EventRedeemReward.Parser, new[]{ "Id", "RedeemTimes", "BoardType", "RedeemScore", "Reward", "Sort" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventRedeemRewardMapABValue), global::fat.rawdata.EventRedeemRewardMapABValue.Parser, new[]{ "EventRedeemRewardMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventRedeemRewardConf), global::fat.rawdata.EventRedeemRewardConf.Parser, new[]{ "EventRedeemRewardMap", "EventRedeemRewardMapAB", "EventRedeemRewardMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventRedeemReward",table="EventRedeemRewardMap",table_wrapper="EventRedeemRewardConf",map="true",map_key_type="int32",data="EventRedeemRewardConf")
  /// annotation@ab(table_ab="EventRedeemRewardMapAB",table_ab_patch="EventRedeemRewardMapABPatch",table_ab_value="EventRedeemRewardMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventRedeemReward(id="id")
  /// </summary>
  public sealed partial class EventRedeemReward : pb::IMessage<EventRedeemReward>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventRedeemReward> _parser = new pb::MessageParser<EventRedeemReward>(() => new EventRedeemReward());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventRedeemReward> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventRedeemRewardConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventRedeemReward() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventRedeemReward(EventRedeemReward other) : this() {
      id_ = other.id_;
      redeemTimes_ = other.redeemTimes_;
      boardType_ = other.boardType_;
      redeemScore_ = other.redeemScore_;
      reward_ = other.reward_.Clone();
      sort_ = other.sort_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventRedeemReward Clone() {
      return new EventRedeemReward(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 兑换奖励id
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "RedeemTimes" field.</summary>
    public const int RedeemTimesFieldNumber = 2;
    private int redeemTimes_;
    /// <summary>
    /// 兑换最大次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RedeemTimes {
      get { return redeemTimes_; }
      set {
        redeemTimes_ = value;
      }
    }

    /// <summary>Field number for the "boardType" field.</summary>
    public const int BoardTypeFieldNumber = 3;
    private int boardType_;
    /// <summary>
    /// 底板类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BoardType {
      get { return boardType_; }
      set {
        boardType_ = value;
      }
    }

    /// <summary>Field number for the "redeemScore" field.</summary>
    public const int RedeemScoreFieldNumber = 4;
    private int redeemScore_;
    /// <summary>
    /// 兑换所需积分数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RedeemScore {
      get { return redeemScore_; }
      set {
        redeemScore_ = value;
      }
    }

    /// <summary>Field number for the "reward" field.</summary>
    public const int RewardFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_reward_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> reward_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 奖励内容
    /// {id1:数量1,id2:数量2,..}
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Reward {
      get { return reward_; }
    }

    /// <summary>Field number for the "sort" field.</summary>
    public const int SortFieldNumber = 6;
    private int sort_;
    /// <summary>
    /// 在阶段内的兑换排序
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Sort {
      get { return sort_; }
      set {
        sort_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventRedeemReward);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventRedeemReward other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (RedeemTimes != other.RedeemTimes) return false;
      if (BoardType != other.BoardType) return false;
      if (RedeemScore != other.RedeemScore) return false;
      if(!reward_.Equals(other.reward_)) return false;
      if (Sort != other.Sort) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (RedeemTimes != 0) hash ^= RedeemTimes.GetHashCode();
      if (BoardType != 0) hash ^= BoardType.GetHashCode();
      if (RedeemScore != 0) hash ^= RedeemScore.GetHashCode();
      hash ^= reward_.GetHashCode();
      if (Sort != 0) hash ^= Sort.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (RedeemTimes != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RedeemTimes);
      }
      if (BoardType != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(BoardType);
      }
      if (RedeemScore != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(RedeemScore);
      }
      reward_.WriteTo(output, _repeated_reward_codec);
      if (Sort != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Sort);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (RedeemTimes != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RedeemTimes);
      }
      if (BoardType != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(BoardType);
      }
      if (RedeemScore != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(RedeemScore);
      }
      reward_.WriteTo(ref output, _repeated_reward_codec);
      if (Sort != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Sort);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (RedeemTimes != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RedeemTimes);
      }
      if (BoardType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BoardType);
      }
      if (RedeemScore != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RedeemScore);
      }
      size += reward_.CalculateSize(_repeated_reward_codec);
      if (Sort != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Sort);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventRedeemReward other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.RedeemTimes != 0) {
        RedeemTimes = other.RedeemTimes;
      }
      if (other.BoardType != 0) {
        BoardType = other.BoardType;
      }
      if (other.RedeemScore != 0) {
        RedeemScore = other.RedeemScore;
      }
      reward_.Add(other.reward_);
      if (other.Sort != 0) {
        Sort = other.Sort;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            RedeemTimes = input.ReadInt32();
            break;
          }
          case 24: {
            BoardType = input.ReadInt32();
            break;
          }
          case 32: {
            RedeemScore = input.ReadInt32();
            break;
          }
          case 42: {
            reward_.AddEntriesFrom(input, _repeated_reward_codec);
            break;
          }
          case 48: {
            Sort = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            RedeemTimes = input.ReadInt32();
            break;
          }
          case 24: {
            BoardType = input.ReadInt32();
            break;
          }
          case 32: {
            RedeemScore = input.ReadInt32();
            break;
          }
          case 42: {
            reward_.AddEntriesFrom(ref input, _repeated_reward_codec);
            break;
          }
          case 48: {
            Sort = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventRedeemRewardMapABValue : pb::IMessage<EventRedeemRewardMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventRedeemRewardMapABValue> _parser = new pb::MessageParser<EventRedeemRewardMapABValue>(() => new EventRedeemRewardMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventRedeemRewardMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventRedeemRewardConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventRedeemRewardMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventRedeemRewardMapABValue(EventRedeemRewardMapABValue other) : this() {
      eventRedeemRewardMap_ = other.eventRedeemRewardMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventRedeemRewardMapABValue Clone() {
      return new EventRedeemRewardMapABValue(this);
    }

    /// <summary>Field number for the "EventRedeemRewardMap" field.</summary>
    public const int EventRedeemRewardMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventRedeemReward>.Codec _map_eventRedeemRewardMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventRedeemReward>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventRedeemReward.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventRedeemReward> eventRedeemRewardMap_ = new pbc::MapField<int, global::fat.rawdata.EventRedeemReward>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventRedeemReward> EventRedeemRewardMap {
      get { return eventRedeemRewardMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventRedeemRewardMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventRedeemRewardMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventRedeemRewardMap.Equals(other.EventRedeemRewardMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventRedeemRewardMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventRedeemRewardMap_.WriteTo(output, _map_eventRedeemRewardMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventRedeemRewardMap_.WriteTo(ref output, _map_eventRedeemRewardMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventRedeemRewardMap_.CalculateSize(_map_eventRedeemRewardMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventRedeemRewardMapABValue other) {
      if (other == null) {
        return;
      }
      eventRedeemRewardMap_.Add(other.eventRedeemRewardMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventRedeemRewardMap_.AddEntriesFrom(input, _map_eventRedeemRewardMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventRedeemRewardMap_.AddEntriesFrom(ref input, _map_eventRedeemRewardMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventRedeemRewardConf : pb::IMessage<EventRedeemRewardConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventRedeemRewardConf> _parser = new pb::MessageParser<EventRedeemRewardConf>(() => new EventRedeemRewardConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventRedeemRewardConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventRedeemRewardConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventRedeemRewardConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventRedeemRewardConf(EventRedeemRewardConf other) : this() {
      eventRedeemRewardMap_ = other.eventRedeemRewardMap_.Clone();
      eventRedeemRewardMapAB_ = other.eventRedeemRewardMapAB_.Clone();
      eventRedeemRewardMapABPatch_ = other.eventRedeemRewardMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventRedeemRewardConf Clone() {
      return new EventRedeemRewardConf(this);
    }

    /// <summary>Field number for the "EventRedeemRewardMap" field.</summary>
    public const int EventRedeemRewardMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventRedeemReward>.Codec _map_eventRedeemRewardMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventRedeemReward>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventRedeemReward.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventRedeemReward> eventRedeemRewardMap_ = new pbc::MapField<int, global::fat.rawdata.EventRedeemReward>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventRedeemReward> EventRedeemRewardMap {
      get { return eventRedeemRewardMap_; }
    }

    /// <summary>Field number for the "EventRedeemRewardMapAB" field.</summary>
    public const int EventRedeemRewardMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventRedeemRewardMapABValue>.Codec _map_eventRedeemRewardMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventRedeemRewardMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventRedeemRewardMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventRedeemRewardMapABValue> eventRedeemRewardMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventRedeemRewardMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventRedeemRewardMapABValue> EventRedeemRewardMapAB {
      get { return eventRedeemRewardMapAB_; }
    }

    /// <summary>Field number for the "EventRedeemRewardMapABPatch" field.</summary>
    public const int EventRedeemRewardMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventRedeemRewardMapABValue>.Codec _map_eventRedeemRewardMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventRedeemRewardMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventRedeemRewardMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventRedeemRewardMapABValue> eventRedeemRewardMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventRedeemRewardMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventRedeemRewardMapABValue> EventRedeemRewardMapABPatch {
      get { return eventRedeemRewardMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventRedeemRewardConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventRedeemRewardConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventRedeemRewardMap.Equals(other.EventRedeemRewardMap)) return false;
      if (!EventRedeemRewardMapAB.Equals(other.EventRedeemRewardMapAB)) return false;
      if (!EventRedeemRewardMapABPatch.Equals(other.EventRedeemRewardMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventRedeemRewardMap.GetHashCode();
      hash ^= EventRedeemRewardMapAB.GetHashCode();
      hash ^= EventRedeemRewardMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventRedeemRewardMap_.WriteTo(output, _map_eventRedeemRewardMap_codec);
      eventRedeemRewardMapAB_.WriteTo(output, _map_eventRedeemRewardMapAB_codec);
      eventRedeemRewardMapABPatch_.WriteTo(output, _map_eventRedeemRewardMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventRedeemRewardMap_.WriteTo(ref output, _map_eventRedeemRewardMap_codec);
      eventRedeemRewardMapAB_.WriteTo(ref output, _map_eventRedeemRewardMapAB_codec);
      eventRedeemRewardMapABPatch_.WriteTo(ref output, _map_eventRedeemRewardMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventRedeemRewardMap_.CalculateSize(_map_eventRedeemRewardMap_codec);
      size += eventRedeemRewardMapAB_.CalculateSize(_map_eventRedeemRewardMapAB_codec);
      size += eventRedeemRewardMapABPatch_.CalculateSize(_map_eventRedeemRewardMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventRedeemRewardConf other) {
      if (other == null) {
        return;
      }
      eventRedeemRewardMap_.Add(other.eventRedeemRewardMap_);
      eventRedeemRewardMapAB_.Add(other.eventRedeemRewardMapAB_);
      eventRedeemRewardMapABPatch_.Add(other.eventRedeemRewardMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventRedeemRewardMap_.AddEntriesFrom(input, _map_eventRedeemRewardMap_codec);
            break;
          }
          case 18: {
            eventRedeemRewardMapAB_.AddEntriesFrom(input, _map_eventRedeemRewardMapAB_codec);
            break;
          }
          case 26: {
            eventRedeemRewardMapABPatch_.AddEntriesFrom(input, _map_eventRedeemRewardMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventRedeemRewardMap_.AddEntriesFrom(ref input, _map_eventRedeemRewardMap_codec);
            break;
          }
          case 18: {
            eventRedeemRewardMapAB_.AddEntriesFrom(ref input, _map_eventRedeemRewardMapAB_codec);
            break;
          }
          case 26: {
            eventRedeemRewardMapABPatch_.AddEntriesFrom(ref input, _map_eventRedeemRewardMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
