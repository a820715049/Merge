// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventOrderDiffChoiceConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventOrderDiffChoiceConf.proto</summary>
  public static partial class EventOrderDiffChoiceConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventOrderDiffChoiceConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventOrderDiffChoiceConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiZyYXdkYXRhL0V2ZW50T3JkZXJEaWZmQ2hvaWNlQ29uZi5wcm90bxIHcmF3",
            "ZGF0YSKUAQoURXZlbnRPcmRlckRpZmZDaG9pY2USCgoCaWQYASABKAUSEAoI",
            "ZGVhZGxpbmUYAiABKAUSEQoJZWFzeU9yZGVyGAMgASgFEhEKCWhhcmRPcmRl",
            "chgEIAEoBRIQCghtaWRPcmRlchgFIAEoBRISCgpvcmRlclRoZW1lGAYgASgJ",
            "EhIKCnN0YXJ0VGhlbWUYByABKAUi5gEKHkV2ZW50T3JkZXJEaWZmQ2hvaWNl",
            "TWFwQUJWYWx1ZRJlChdFdmVudE9yZGVyRGlmZkNob2ljZU1hcBgBIAMoCzJE",
            "LnJhd2RhdGEuRXZlbnRPcmRlckRpZmZDaG9pY2VNYXBBQlZhbHVlLkV2ZW50",
            "T3JkZXJEaWZmQ2hvaWNlTWFwRW50cnkaXQocRXZlbnRPcmRlckRpZmZDaG9p",
            "Y2VNYXBFbnRyeRILCgNrZXkYASABKAUSLAoFdmFsdWUYAiABKAsyHS5yYXdk",
            "YXRhLkV2ZW50T3JkZXJEaWZmQ2hvaWNlOgI4ASKJBQoYRXZlbnRPcmRlckRp",
            "ZmZDaG9pY2VDb25mEl8KF0V2ZW50T3JkZXJEaWZmQ2hvaWNlTWFwGAEgAygL",
            "Mj4ucmF3ZGF0YS5FdmVudE9yZGVyRGlmZkNob2ljZUNvbmYuRXZlbnRPcmRl",
            "ckRpZmZDaG9pY2VNYXBFbnRyeRJjChlFdmVudE9yZGVyRGlmZkNob2ljZU1h",
            "cEFCGAIgAygLMkAucmF3ZGF0YS5FdmVudE9yZGVyRGlmZkNob2ljZUNvbmYu",
            "RXZlbnRPcmRlckRpZmZDaG9pY2VNYXBBQkVudHJ5Em0KHkV2ZW50T3JkZXJE",
            "aWZmQ2hvaWNlTWFwQUJQYXRjaBgDIAMoCzJFLnJhd2RhdGEuRXZlbnRPcmRl",
            "ckRpZmZDaG9pY2VDb25mLkV2ZW50T3JkZXJEaWZmQ2hvaWNlTWFwQUJQYXRj",
            "aEVudHJ5Gl0KHEV2ZW50T3JkZXJEaWZmQ2hvaWNlTWFwRW50cnkSCwoDa2V5",
            "GAEgASgFEiwKBXZhbHVlGAIgASgLMh0ucmF3ZGF0YS5FdmVudE9yZGVyRGlm",
            "ZkNob2ljZToCOAEaaQoeRXZlbnRPcmRlckRpZmZDaG9pY2VNYXBBQkVudHJ5",
            "EgsKA2tleRgBIAEoCRI2CgV2YWx1ZRgCIAEoCzInLnJhd2RhdGEuRXZlbnRP",
            "cmRlckRpZmZDaG9pY2VNYXBBQlZhbHVlOgI4ARpuCiNFdmVudE9yZGVyRGlm",
            "ZkNob2ljZU1hcEFCUGF0Y2hFbnRyeRILCgNrZXkYASABKAkSNgoFdmFsdWUY",
            "AiABKAsyJy5yYXdkYXRhLkV2ZW50T3JkZXJEaWZmQ2hvaWNlTWFwQUJWYWx1",
            "ZToCOAFCPVotZ2l0bGFiLmZ1bnBsdXMuaW8vZmF0L2NvbmYvZ2VuL2dvbGFu",
            "Zy9yYXdkYXRhqgILZmF0LnJhd2RhdGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventOrderDiffChoice), global::fat.rawdata.EventOrderDiffChoice.Parser, new[]{ "Id", "Deadline", "EasyOrder", "HardOrder", "MidOrder", "OrderTheme", "StartTheme" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventOrderDiffChoiceMapABValue), global::fat.rawdata.EventOrderDiffChoiceMapABValue.Parser, new[]{ "EventOrderDiffChoiceMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventOrderDiffChoiceConf), global::fat.rawdata.EventOrderDiffChoiceConf.Parser, new[]{ "EventOrderDiffChoiceMap", "EventOrderDiffChoiceMapAB", "EventOrderDiffChoiceMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventOrderDiffChoice",table="EventOrderDiffChoiceMap",table_wrapper="EventOrderDiffChoiceConf",map="true",map_key_type="int32",data="EventOrderDiffChoiceConf")
  /// annotation@ab(table_ab="EventOrderDiffChoiceMapAB",table_ab_patch="EventOrderDiffChoiceMapABPatch",table_ab_value="EventOrderDiffChoiceMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventOrderDiffChoice(id="id")
  /// </summary>
  public sealed partial class EventOrderDiffChoice : pb::IMessage<EventOrderDiffChoice>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventOrderDiffChoice> _parser = new pb::MessageParser<EventOrderDiffChoice>(() => new EventOrderDiffChoice());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventOrderDiffChoice> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventOrderDiffChoiceConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventOrderDiffChoice() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventOrderDiffChoice(EventOrderDiffChoice other) : this() {
      id_ = other.id_;
      deadline_ = other.deadline_;
      easyOrder_ = other.easyOrder_;
      hardOrder_ = other.hardOrder_;
      midOrder_ = other.midOrder_;
      orderTheme_ = other.orderTheme_;
      startTheme_ = other.startTheme_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventOrderDiffChoice Clone() {
      return new EventOrderDiffChoice(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 活动id
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "deadline" field.</summary>
    public const int DeadlineFieldNumber = 2;
    private int deadline_;
    /// <summary>
    /// 剩余多少秒不准开活动
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Deadline {
      get { return deadline_; }
      set {
        deadline_ = value;
      }
    }

    /// <summary>Field number for the "easyOrder" field.</summary>
    public const int EasyOrderFieldNumber = 3;
    private int easyOrder_;
    /// <summary>
    /// 简单难度ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EasyOrder {
      get { return easyOrder_; }
      set {
        easyOrder_ = value;
      }
    }

    /// <summary>Field number for the "hardOrder" field.</summary>
    public const int HardOrderFieldNumber = 4;
    private int hardOrder_;
    /// <summary>
    /// 困难难度ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int HardOrder {
      get { return hardOrder_; }
      set {
        hardOrder_ = value;
      }
    }

    /// <summary>Field number for the "midOrder" field.</summary>
    public const int MidOrderFieldNumber = 5;
    private int midOrder_;
    /// <summary>
    /// 中等难度ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MidOrder {
      get { return midOrder_; }
      set {
        midOrder_ = value;
      }
    }

    /// <summary>Field number for the "orderTheme" field.</summary>
    public const int OrderThemeFieldNumber = 6;
    private string orderTheme_ = "";
    /// <summary>
    /// 订单界面模板
    /// （Asset）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrderTheme {
      get { return orderTheme_; }
      set {
        orderTheme_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "startTheme" field.</summary>
    public const int StartThemeFieldNumber = 7;
    private int startTheme_;
    /// <summary>
    /// 活动弹板ID
    /// （EventTheme.id）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StartTheme {
      get { return startTheme_; }
      set {
        startTheme_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventOrderDiffChoice);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventOrderDiffChoice other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Deadline != other.Deadline) return false;
      if (EasyOrder != other.EasyOrder) return false;
      if (HardOrder != other.HardOrder) return false;
      if (MidOrder != other.MidOrder) return false;
      if (OrderTheme != other.OrderTheme) return false;
      if (StartTheme != other.StartTheme) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Deadline != 0) hash ^= Deadline.GetHashCode();
      if (EasyOrder != 0) hash ^= EasyOrder.GetHashCode();
      if (HardOrder != 0) hash ^= HardOrder.GetHashCode();
      if (MidOrder != 0) hash ^= MidOrder.GetHashCode();
      if (OrderTheme.Length != 0) hash ^= OrderTheme.GetHashCode();
      if (StartTheme != 0) hash ^= StartTheme.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Deadline != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Deadline);
      }
      if (EasyOrder != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(EasyOrder);
      }
      if (HardOrder != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(HardOrder);
      }
      if (MidOrder != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(MidOrder);
      }
      if (OrderTheme.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(OrderTheme);
      }
      if (StartTheme != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(StartTheme);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Deadline != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Deadline);
      }
      if (EasyOrder != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(EasyOrder);
      }
      if (HardOrder != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(HardOrder);
      }
      if (MidOrder != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(MidOrder);
      }
      if (OrderTheme.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(OrderTheme);
      }
      if (StartTheme != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(StartTheme);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Deadline != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Deadline);
      }
      if (EasyOrder != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EasyOrder);
      }
      if (HardOrder != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HardOrder);
      }
      if (MidOrder != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MidOrder);
      }
      if (OrderTheme.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderTheme);
      }
      if (StartTheme != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StartTheme);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventOrderDiffChoice other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Deadline != 0) {
        Deadline = other.Deadline;
      }
      if (other.EasyOrder != 0) {
        EasyOrder = other.EasyOrder;
      }
      if (other.HardOrder != 0) {
        HardOrder = other.HardOrder;
      }
      if (other.MidOrder != 0) {
        MidOrder = other.MidOrder;
      }
      if (other.OrderTheme.Length != 0) {
        OrderTheme = other.OrderTheme;
      }
      if (other.StartTheme != 0) {
        StartTheme = other.StartTheme;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Deadline = input.ReadInt32();
            break;
          }
          case 24: {
            EasyOrder = input.ReadInt32();
            break;
          }
          case 32: {
            HardOrder = input.ReadInt32();
            break;
          }
          case 40: {
            MidOrder = input.ReadInt32();
            break;
          }
          case 50: {
            OrderTheme = input.ReadString();
            break;
          }
          case 56: {
            StartTheme = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Deadline = input.ReadInt32();
            break;
          }
          case 24: {
            EasyOrder = input.ReadInt32();
            break;
          }
          case 32: {
            HardOrder = input.ReadInt32();
            break;
          }
          case 40: {
            MidOrder = input.ReadInt32();
            break;
          }
          case 50: {
            OrderTheme = input.ReadString();
            break;
          }
          case 56: {
            StartTheme = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventOrderDiffChoiceMapABValue : pb::IMessage<EventOrderDiffChoiceMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventOrderDiffChoiceMapABValue> _parser = new pb::MessageParser<EventOrderDiffChoiceMapABValue>(() => new EventOrderDiffChoiceMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventOrderDiffChoiceMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventOrderDiffChoiceConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventOrderDiffChoiceMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventOrderDiffChoiceMapABValue(EventOrderDiffChoiceMapABValue other) : this() {
      eventOrderDiffChoiceMap_ = other.eventOrderDiffChoiceMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventOrderDiffChoiceMapABValue Clone() {
      return new EventOrderDiffChoiceMapABValue(this);
    }

    /// <summary>Field number for the "EventOrderDiffChoiceMap" field.</summary>
    public const int EventOrderDiffChoiceMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventOrderDiffChoice>.Codec _map_eventOrderDiffChoiceMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventOrderDiffChoice>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventOrderDiffChoice.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventOrderDiffChoice> eventOrderDiffChoiceMap_ = new pbc::MapField<int, global::fat.rawdata.EventOrderDiffChoice>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventOrderDiffChoice> EventOrderDiffChoiceMap {
      get { return eventOrderDiffChoiceMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventOrderDiffChoiceMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventOrderDiffChoiceMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventOrderDiffChoiceMap.Equals(other.EventOrderDiffChoiceMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventOrderDiffChoiceMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventOrderDiffChoiceMap_.WriteTo(output, _map_eventOrderDiffChoiceMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventOrderDiffChoiceMap_.WriteTo(ref output, _map_eventOrderDiffChoiceMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventOrderDiffChoiceMap_.CalculateSize(_map_eventOrderDiffChoiceMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventOrderDiffChoiceMapABValue other) {
      if (other == null) {
        return;
      }
      eventOrderDiffChoiceMap_.Add(other.eventOrderDiffChoiceMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventOrderDiffChoiceMap_.AddEntriesFrom(input, _map_eventOrderDiffChoiceMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventOrderDiffChoiceMap_.AddEntriesFrom(ref input, _map_eventOrderDiffChoiceMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventOrderDiffChoiceConf : pb::IMessage<EventOrderDiffChoiceConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventOrderDiffChoiceConf> _parser = new pb::MessageParser<EventOrderDiffChoiceConf>(() => new EventOrderDiffChoiceConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventOrderDiffChoiceConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventOrderDiffChoiceConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventOrderDiffChoiceConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventOrderDiffChoiceConf(EventOrderDiffChoiceConf other) : this() {
      eventOrderDiffChoiceMap_ = other.eventOrderDiffChoiceMap_.Clone();
      eventOrderDiffChoiceMapAB_ = other.eventOrderDiffChoiceMapAB_.Clone();
      eventOrderDiffChoiceMapABPatch_ = other.eventOrderDiffChoiceMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventOrderDiffChoiceConf Clone() {
      return new EventOrderDiffChoiceConf(this);
    }

    /// <summary>Field number for the "EventOrderDiffChoiceMap" field.</summary>
    public const int EventOrderDiffChoiceMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventOrderDiffChoice>.Codec _map_eventOrderDiffChoiceMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventOrderDiffChoice>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventOrderDiffChoice.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventOrderDiffChoice> eventOrderDiffChoiceMap_ = new pbc::MapField<int, global::fat.rawdata.EventOrderDiffChoice>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventOrderDiffChoice> EventOrderDiffChoiceMap {
      get { return eventOrderDiffChoiceMap_; }
    }

    /// <summary>Field number for the "EventOrderDiffChoiceMapAB" field.</summary>
    public const int EventOrderDiffChoiceMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventOrderDiffChoiceMapABValue>.Codec _map_eventOrderDiffChoiceMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventOrderDiffChoiceMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventOrderDiffChoiceMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventOrderDiffChoiceMapABValue> eventOrderDiffChoiceMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventOrderDiffChoiceMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventOrderDiffChoiceMapABValue> EventOrderDiffChoiceMapAB {
      get { return eventOrderDiffChoiceMapAB_; }
    }

    /// <summary>Field number for the "EventOrderDiffChoiceMapABPatch" field.</summary>
    public const int EventOrderDiffChoiceMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventOrderDiffChoiceMapABValue>.Codec _map_eventOrderDiffChoiceMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventOrderDiffChoiceMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventOrderDiffChoiceMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventOrderDiffChoiceMapABValue> eventOrderDiffChoiceMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventOrderDiffChoiceMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventOrderDiffChoiceMapABValue> EventOrderDiffChoiceMapABPatch {
      get { return eventOrderDiffChoiceMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventOrderDiffChoiceConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventOrderDiffChoiceConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventOrderDiffChoiceMap.Equals(other.EventOrderDiffChoiceMap)) return false;
      if (!EventOrderDiffChoiceMapAB.Equals(other.EventOrderDiffChoiceMapAB)) return false;
      if (!EventOrderDiffChoiceMapABPatch.Equals(other.EventOrderDiffChoiceMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventOrderDiffChoiceMap.GetHashCode();
      hash ^= EventOrderDiffChoiceMapAB.GetHashCode();
      hash ^= EventOrderDiffChoiceMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventOrderDiffChoiceMap_.WriteTo(output, _map_eventOrderDiffChoiceMap_codec);
      eventOrderDiffChoiceMapAB_.WriteTo(output, _map_eventOrderDiffChoiceMapAB_codec);
      eventOrderDiffChoiceMapABPatch_.WriteTo(output, _map_eventOrderDiffChoiceMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventOrderDiffChoiceMap_.WriteTo(ref output, _map_eventOrderDiffChoiceMap_codec);
      eventOrderDiffChoiceMapAB_.WriteTo(ref output, _map_eventOrderDiffChoiceMapAB_codec);
      eventOrderDiffChoiceMapABPatch_.WriteTo(ref output, _map_eventOrderDiffChoiceMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventOrderDiffChoiceMap_.CalculateSize(_map_eventOrderDiffChoiceMap_codec);
      size += eventOrderDiffChoiceMapAB_.CalculateSize(_map_eventOrderDiffChoiceMapAB_codec);
      size += eventOrderDiffChoiceMapABPatch_.CalculateSize(_map_eventOrderDiffChoiceMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventOrderDiffChoiceConf other) {
      if (other == null) {
        return;
      }
      eventOrderDiffChoiceMap_.Add(other.eventOrderDiffChoiceMap_);
      eventOrderDiffChoiceMapAB_.Add(other.eventOrderDiffChoiceMapAB_);
      eventOrderDiffChoiceMapABPatch_.Add(other.eventOrderDiffChoiceMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventOrderDiffChoiceMap_.AddEntriesFrom(input, _map_eventOrderDiffChoiceMap_codec);
            break;
          }
          case 18: {
            eventOrderDiffChoiceMapAB_.AddEntriesFrom(input, _map_eventOrderDiffChoiceMapAB_codec);
            break;
          }
          case 26: {
            eventOrderDiffChoiceMapABPatch_.AddEntriesFrom(input, _map_eventOrderDiffChoiceMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventOrderDiffChoiceMap_.AddEntriesFrom(ref input, _map_eventOrderDiffChoiceMap_codec);
            break;
          }
          case 18: {
            eventOrderDiffChoiceMapAB_.AddEntriesFrom(ref input, _map_eventOrderDiffChoiceMapAB_codec);
            break;
          }
          case 26: {
            eventOrderDiffChoiceMapABPatch_.AddEntriesFrom(ref input, _map_eventOrderDiffChoiceMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
