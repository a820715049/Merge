// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EndlessThreePackTokenConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EndlessThreePackTokenConf.proto</summary>
  public static partial class EndlessThreePackTokenConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EndlessThreePackTokenConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EndlessThreePackTokenConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CidyYXdkYXRhL0VuZGxlc3NUaHJlZVBhY2tUb2tlbkNvbmYucHJvdG8SB3Jh",
            "d2RhdGEiNgoVRW5kbGVzc1RocmVlUGFja1Rva2VuEgoKAmlkGAEgASgFEhEK",
            "CXRva2VuTGlzdBgDIAMoBSLsAQofRW5kbGVzc1RocmVlUGFja1Rva2VuTWFw",
            "QUJWYWx1ZRJoChhFbmRsZXNzVGhyZWVQYWNrVG9rZW5NYXAYASADKAsyRi5y",
            "YXdkYXRhLkVuZGxlc3NUaHJlZVBhY2tUb2tlbk1hcEFCVmFsdWUuRW5kbGVz",
            "c1RocmVlUGFja1Rva2VuTWFwRW50cnkaXwodRW5kbGVzc1RocmVlUGFja1Rv",
            "a2VuTWFwRW50cnkSCwoDa2V5GAEgASgFEi0KBXZhbHVlGAIgASgLMh4ucmF3",
            "ZGF0YS5FbmRsZXNzVGhyZWVQYWNrVG9rZW46AjgBIpkFChlFbmRsZXNzVGhy",
            "ZWVQYWNrVG9rZW5Db25mEmIKGEVuZGxlc3NUaHJlZVBhY2tUb2tlbk1hcBgB",
            "IAMoCzJALnJhd2RhdGEuRW5kbGVzc1RocmVlUGFja1Rva2VuQ29uZi5FbmRs",
            "ZXNzVGhyZWVQYWNrVG9rZW5NYXBFbnRyeRJmChpFbmRsZXNzVGhyZWVQYWNr",
            "VG9rZW5NYXBBQhgCIAMoCzJCLnJhd2RhdGEuRW5kbGVzc1RocmVlUGFja1Rv",
            "a2VuQ29uZi5FbmRsZXNzVGhyZWVQYWNrVG9rZW5NYXBBQkVudHJ5EnAKH0Vu",
            "ZGxlc3NUaHJlZVBhY2tUb2tlbk1hcEFCUGF0Y2gYAyADKAsyRy5yYXdkYXRh",
            "LkVuZGxlc3NUaHJlZVBhY2tUb2tlbkNvbmYuRW5kbGVzc1RocmVlUGFja1Rv",
            "a2VuTWFwQUJQYXRjaEVudHJ5Gl8KHUVuZGxlc3NUaHJlZVBhY2tUb2tlbk1h",
            "cEVudHJ5EgsKA2tleRgBIAEoBRItCgV2YWx1ZRgCIAEoCzIeLnJhd2RhdGEu",
            "RW5kbGVzc1RocmVlUGFja1Rva2VuOgI4ARprCh9FbmRsZXNzVGhyZWVQYWNr",
            "VG9rZW5NYXBBQkVudHJ5EgsKA2tleRgBIAEoCRI3CgV2YWx1ZRgCIAEoCzIo",
            "LnJhd2RhdGEuRW5kbGVzc1RocmVlUGFja1Rva2VuTWFwQUJWYWx1ZToCOAEa",
            "cAokRW5kbGVzc1RocmVlUGFja1Rva2VuTWFwQUJQYXRjaEVudHJ5EgsKA2tl",
            "eRgBIAEoCRI3CgV2YWx1ZRgCIAEoCzIoLnJhd2RhdGEuRW5kbGVzc1RocmVl",
            "UGFja1Rva2VuTWFwQUJWYWx1ZToCOAFCPVotZ2l0bGFiLmZ1bnBsdXMuaW8v",
            "ZmF0L2NvbmYvZ2VuL2dvbGFuZy9yYXdkYXRhqgILZmF0LnJhd2RhdGFiBnBy",
            "b3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EndlessThreePackToken), global::fat.rawdata.EndlessThreePackToken.Parser, new[]{ "Id", "TokenList" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EndlessThreePackTokenMapABValue), global::fat.rawdata.EndlessThreePackTokenMapABValue.Parser, new[]{ "EndlessThreePackTokenMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EndlessThreePackTokenConf), global::fat.rawdata.EndlessThreePackTokenConf.Parser, new[]{ "EndlessThreePackTokenMap", "EndlessThreePackTokenMapAB", "EndlessThreePackTokenMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EndlessThreePackToken",table="EndlessThreePackTokenMap",table_wrapper="EndlessThreePackTokenConf",map="true",map_key_type="int32",data="EndlessThreePackTokenConf")
  /// annotation@ab(table_ab="EndlessThreePackTokenMapAB",table_ab_patch="EndlessThreePackTokenMapABPatch",table_ab_value="EndlessThreePackTokenMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EndlessThreePackToken(id="id")
  /// </summary>
  public sealed partial class EndlessThreePackToken : pb::IMessage<EndlessThreePackToken>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EndlessThreePackToken> _parser = new pb::MessageParser<EndlessThreePackToken>(() => new EndlessThreePackToken());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EndlessThreePackToken> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EndlessThreePackTokenConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndlessThreePackToken() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndlessThreePackToken(EndlessThreePackToken other) : this() {
      id_ = other.id_;
      tokenList_ = other.tokenList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndlessThreePackToken Clone() {
      return new EndlessThreePackToken(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 礼包token投放id
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "tokenList" field.</summary>
    public const int TokenListFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_tokenList_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> tokenList_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 投放详情
    /// （数量1,数量2,...）
    /// 按序对应礼包组内每个礼包对应的token奖励数量，配置为0则无奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> TokenList {
      get { return tokenList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EndlessThreePackToken);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EndlessThreePackToken other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!tokenList_.Equals(other.tokenList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      hash ^= tokenList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      tokenList_.WriteTo(output, _repeated_tokenList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      tokenList_.WriteTo(ref output, _repeated_tokenList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      size += tokenList_.CalculateSize(_repeated_tokenList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EndlessThreePackToken other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      tokenList_.Add(other.tokenList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            tokenList_.AddEntriesFrom(input, _repeated_tokenList_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            tokenList_.AddEntriesFrom(ref input, _repeated_tokenList_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EndlessThreePackTokenMapABValue : pb::IMessage<EndlessThreePackTokenMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EndlessThreePackTokenMapABValue> _parser = new pb::MessageParser<EndlessThreePackTokenMapABValue>(() => new EndlessThreePackTokenMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EndlessThreePackTokenMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EndlessThreePackTokenConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndlessThreePackTokenMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndlessThreePackTokenMapABValue(EndlessThreePackTokenMapABValue other) : this() {
      endlessThreePackTokenMap_ = other.endlessThreePackTokenMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndlessThreePackTokenMapABValue Clone() {
      return new EndlessThreePackTokenMapABValue(this);
    }

    /// <summary>Field number for the "EndlessThreePackTokenMap" field.</summary>
    public const int EndlessThreePackTokenMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EndlessThreePackToken>.Codec _map_endlessThreePackTokenMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EndlessThreePackToken>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EndlessThreePackToken.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EndlessThreePackToken> endlessThreePackTokenMap_ = new pbc::MapField<int, global::fat.rawdata.EndlessThreePackToken>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EndlessThreePackToken> EndlessThreePackTokenMap {
      get { return endlessThreePackTokenMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EndlessThreePackTokenMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EndlessThreePackTokenMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EndlessThreePackTokenMap.Equals(other.EndlessThreePackTokenMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EndlessThreePackTokenMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      endlessThreePackTokenMap_.WriteTo(output, _map_endlessThreePackTokenMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      endlessThreePackTokenMap_.WriteTo(ref output, _map_endlessThreePackTokenMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += endlessThreePackTokenMap_.CalculateSize(_map_endlessThreePackTokenMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EndlessThreePackTokenMapABValue other) {
      if (other == null) {
        return;
      }
      endlessThreePackTokenMap_.Add(other.endlessThreePackTokenMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            endlessThreePackTokenMap_.AddEntriesFrom(input, _map_endlessThreePackTokenMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            endlessThreePackTokenMap_.AddEntriesFrom(ref input, _map_endlessThreePackTokenMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EndlessThreePackTokenConf : pb::IMessage<EndlessThreePackTokenConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EndlessThreePackTokenConf> _parser = new pb::MessageParser<EndlessThreePackTokenConf>(() => new EndlessThreePackTokenConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EndlessThreePackTokenConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EndlessThreePackTokenConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndlessThreePackTokenConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndlessThreePackTokenConf(EndlessThreePackTokenConf other) : this() {
      endlessThreePackTokenMap_ = other.endlessThreePackTokenMap_.Clone();
      endlessThreePackTokenMapAB_ = other.endlessThreePackTokenMapAB_.Clone();
      endlessThreePackTokenMapABPatch_ = other.endlessThreePackTokenMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndlessThreePackTokenConf Clone() {
      return new EndlessThreePackTokenConf(this);
    }

    /// <summary>Field number for the "EndlessThreePackTokenMap" field.</summary>
    public const int EndlessThreePackTokenMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EndlessThreePackToken>.Codec _map_endlessThreePackTokenMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EndlessThreePackToken>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EndlessThreePackToken.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EndlessThreePackToken> endlessThreePackTokenMap_ = new pbc::MapField<int, global::fat.rawdata.EndlessThreePackToken>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EndlessThreePackToken> EndlessThreePackTokenMap {
      get { return endlessThreePackTokenMap_; }
    }

    /// <summary>Field number for the "EndlessThreePackTokenMapAB" field.</summary>
    public const int EndlessThreePackTokenMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EndlessThreePackTokenMapABValue>.Codec _map_endlessThreePackTokenMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EndlessThreePackTokenMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EndlessThreePackTokenMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EndlessThreePackTokenMapABValue> endlessThreePackTokenMapAB_ = new pbc::MapField<string, global::fat.rawdata.EndlessThreePackTokenMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EndlessThreePackTokenMapABValue> EndlessThreePackTokenMapAB {
      get { return endlessThreePackTokenMapAB_; }
    }

    /// <summary>Field number for the "EndlessThreePackTokenMapABPatch" field.</summary>
    public const int EndlessThreePackTokenMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EndlessThreePackTokenMapABValue>.Codec _map_endlessThreePackTokenMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EndlessThreePackTokenMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EndlessThreePackTokenMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EndlessThreePackTokenMapABValue> endlessThreePackTokenMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EndlessThreePackTokenMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EndlessThreePackTokenMapABValue> EndlessThreePackTokenMapABPatch {
      get { return endlessThreePackTokenMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EndlessThreePackTokenConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EndlessThreePackTokenConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EndlessThreePackTokenMap.Equals(other.EndlessThreePackTokenMap)) return false;
      if (!EndlessThreePackTokenMapAB.Equals(other.EndlessThreePackTokenMapAB)) return false;
      if (!EndlessThreePackTokenMapABPatch.Equals(other.EndlessThreePackTokenMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EndlessThreePackTokenMap.GetHashCode();
      hash ^= EndlessThreePackTokenMapAB.GetHashCode();
      hash ^= EndlessThreePackTokenMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      endlessThreePackTokenMap_.WriteTo(output, _map_endlessThreePackTokenMap_codec);
      endlessThreePackTokenMapAB_.WriteTo(output, _map_endlessThreePackTokenMapAB_codec);
      endlessThreePackTokenMapABPatch_.WriteTo(output, _map_endlessThreePackTokenMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      endlessThreePackTokenMap_.WriteTo(ref output, _map_endlessThreePackTokenMap_codec);
      endlessThreePackTokenMapAB_.WriteTo(ref output, _map_endlessThreePackTokenMapAB_codec);
      endlessThreePackTokenMapABPatch_.WriteTo(ref output, _map_endlessThreePackTokenMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += endlessThreePackTokenMap_.CalculateSize(_map_endlessThreePackTokenMap_codec);
      size += endlessThreePackTokenMapAB_.CalculateSize(_map_endlessThreePackTokenMapAB_codec);
      size += endlessThreePackTokenMapABPatch_.CalculateSize(_map_endlessThreePackTokenMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EndlessThreePackTokenConf other) {
      if (other == null) {
        return;
      }
      endlessThreePackTokenMap_.Add(other.endlessThreePackTokenMap_);
      endlessThreePackTokenMapAB_.Add(other.endlessThreePackTokenMapAB_);
      endlessThreePackTokenMapABPatch_.Add(other.endlessThreePackTokenMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            endlessThreePackTokenMap_.AddEntriesFrom(input, _map_endlessThreePackTokenMap_codec);
            break;
          }
          case 18: {
            endlessThreePackTokenMapAB_.AddEntriesFrom(input, _map_endlessThreePackTokenMapAB_codec);
            break;
          }
          case 26: {
            endlessThreePackTokenMapABPatch_.AddEntriesFrom(input, _map_endlessThreePackTokenMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            endlessThreePackTokenMap_.AddEntriesFrom(ref input, _map_endlessThreePackTokenMap_codec);
            break;
          }
          case 18: {
            endlessThreePackTokenMapAB_.AddEntriesFrom(ref input, _map_endlessThreePackTokenMapAB_codec);
            break;
          }
          case 26: {
            endlessThreePackTokenMapABPatch_.AddEntriesFrom(ref input, _map_endlessThreePackTokenMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
