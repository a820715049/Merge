// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/LandmarkDetailConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/LandmarkDetailConf.proto</summary>
  public static partial class LandmarkDetailConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/LandmarkDetailConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LandmarkDetailConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiByYXdkYXRhL0xhbmRtYXJrRGV0YWlsQ29uZi5wcm90bxIHcmF3ZGF0YSJa",
            "Cg5MYW5kbWFya0RldGFpbBIKCgJpZBgBIAEoBRIUCgxnb2xkVG9rZW5OdW0Y",
            "AiABKAUSEQoJcmV3YXJkQmlnGAMgAygJEhMKC3Jld2FyZFNtYWxsGAQgASgJ",
            "IsIBChhMYW5kbWFya0RldGFpbE1hcEFCVmFsdWUSUwoRTGFuZG1hcmtEZXRh",
            "aWxNYXAYASADKAsyOC5yYXdkYXRhLkxhbmRtYXJrRGV0YWlsTWFwQUJWYWx1",
            "ZS5MYW5kbWFya0RldGFpbE1hcEVudHJ5GlEKFkxhbmRtYXJrRGV0YWlsTWFw",
            "RW50cnkSCwoDa2V5GAEgASgFEiYKBXZhbHVlGAIgASgLMhcucmF3ZGF0YS5M",
            "YW5kbWFya0RldGFpbDoCOAEiqQQKEkxhbmRtYXJrRGV0YWlsQ29uZhJNChFM",
            "YW5kbWFya0RldGFpbE1hcBgBIAMoCzIyLnJhd2RhdGEuTGFuZG1hcmtEZXRh",
            "aWxDb25mLkxhbmRtYXJrRGV0YWlsTWFwRW50cnkSUQoTTGFuZG1hcmtEZXRh",
            "aWxNYXBBQhgCIAMoCzI0LnJhd2RhdGEuTGFuZG1hcmtEZXRhaWxDb25mLkxh",
            "bmRtYXJrRGV0YWlsTWFwQUJFbnRyeRJbChhMYW5kbWFya0RldGFpbE1hcEFC",
            "UGF0Y2gYAyADKAsyOS5yYXdkYXRhLkxhbmRtYXJrRGV0YWlsQ29uZi5MYW5k",
            "bWFya0RldGFpbE1hcEFCUGF0Y2hFbnRyeRpRChZMYW5kbWFya0RldGFpbE1h",
            "cEVudHJ5EgsKA2tleRgBIAEoBRImCgV2YWx1ZRgCIAEoCzIXLnJhd2RhdGEu",
            "TGFuZG1hcmtEZXRhaWw6AjgBGl0KGExhbmRtYXJrRGV0YWlsTWFwQUJFbnRy",
            "eRILCgNrZXkYASABKAkSMAoFdmFsdWUYAiABKAsyIS5yYXdkYXRhLkxhbmRt",
            "YXJrRGV0YWlsTWFwQUJWYWx1ZToCOAEaYgodTGFuZG1hcmtEZXRhaWxNYXBB",
            "QlBhdGNoRW50cnkSCwoDa2V5GAEgASgJEjAKBXZhbHVlGAIgASgLMiEucmF3",
            "ZGF0YS5MYW5kbWFya0RldGFpbE1hcEFCVmFsdWU6AjgBQj1aLWdpdGxhYi5m",
            "dW5wbHVzLmlvL2ZhdC9jb25mL2dlbi9nb2xhbmcvcmF3ZGF0YaoCC2ZhdC5y",
            "YXdkYXRhYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.LandmarkDetail), global::fat.rawdata.LandmarkDetail.Parser, new[]{ "Id", "GoldTokenNum", "RewardBig", "RewardSmall" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.LandmarkDetailMapABValue), global::fat.rawdata.LandmarkDetailMapABValue.Parser, new[]{ "LandmarkDetailMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.LandmarkDetailConf), global::fat.rawdata.LandmarkDetailConf.Parser, new[]{ "LandmarkDetailMap", "LandmarkDetailMapAB", "LandmarkDetailMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="LandmarkDetail",table="LandmarkDetailMap",table_wrapper="LandmarkDetailConf",map="true",map_key_type="int32",data="LandmarkDetailConf")
  /// annotation@ab(table_ab="LandmarkDetailMapAB",table_ab_patch="LandmarkDetailMapABPatch",table_ab_value="LandmarkDetailMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@LandmarkDetail(id="id")
  /// </summary>
  public sealed partial class LandmarkDetail : pb::IMessage<LandmarkDetail>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LandmarkDetail> _parser = new pb::MessageParser<LandmarkDetail>(() => new LandmarkDetail());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LandmarkDetail> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.LandmarkDetailConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LandmarkDetail() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LandmarkDetail(LandmarkDetail other) : this() {
      id_ = other.id_;
      goldTokenNum_ = other.goldTokenNum_;
      rewardBig_ = other.rewardBig_.Clone();
      rewardSmall_ = other.rewardSmall_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LandmarkDetail Clone() {
      return new LandmarkDetail(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 分组id
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "goldTokenNum" field.</summary>
    public const int GoldTokenNumFieldNumber = 2;
    private int goldTokenNum_;
    /// <summary>
    /// 金色token数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GoldTokenNum {
      get { return goldTokenNum_; }
      set {
        goldTokenNum_ = value;
      }
    }

    /// <summary>Field number for the "rewardBig" field.</summary>
    public const int RewardBigFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_rewardBig_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> rewardBig_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 大奖
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> RewardBig {
      get { return rewardBig_; }
    }

    /// <summary>Field number for the "rewardSmall" field.</summary>
    public const int RewardSmallFieldNumber = 4;
    private string rewardSmall_ = "";
    /// <summary>
    /// 小奖
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RewardSmall {
      get { return rewardSmall_; }
      set {
        rewardSmall_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LandmarkDetail);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LandmarkDetail other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (GoldTokenNum != other.GoldTokenNum) return false;
      if(!rewardBig_.Equals(other.rewardBig_)) return false;
      if (RewardSmall != other.RewardSmall) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (GoldTokenNum != 0) hash ^= GoldTokenNum.GetHashCode();
      hash ^= rewardBig_.GetHashCode();
      if (RewardSmall.Length != 0) hash ^= RewardSmall.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (GoldTokenNum != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(GoldTokenNum);
      }
      rewardBig_.WriteTo(output, _repeated_rewardBig_codec);
      if (RewardSmall.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(RewardSmall);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (GoldTokenNum != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(GoldTokenNum);
      }
      rewardBig_.WriteTo(ref output, _repeated_rewardBig_codec);
      if (RewardSmall.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(RewardSmall);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (GoldTokenNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GoldTokenNum);
      }
      size += rewardBig_.CalculateSize(_repeated_rewardBig_codec);
      if (RewardSmall.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RewardSmall);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LandmarkDetail other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.GoldTokenNum != 0) {
        GoldTokenNum = other.GoldTokenNum;
      }
      rewardBig_.Add(other.rewardBig_);
      if (other.RewardSmall.Length != 0) {
        RewardSmall = other.RewardSmall;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            GoldTokenNum = input.ReadInt32();
            break;
          }
          case 26: {
            rewardBig_.AddEntriesFrom(input, _repeated_rewardBig_codec);
            break;
          }
          case 34: {
            RewardSmall = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            GoldTokenNum = input.ReadInt32();
            break;
          }
          case 26: {
            rewardBig_.AddEntriesFrom(ref input, _repeated_rewardBig_codec);
            break;
          }
          case 34: {
            RewardSmall = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LandmarkDetailMapABValue : pb::IMessage<LandmarkDetailMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LandmarkDetailMapABValue> _parser = new pb::MessageParser<LandmarkDetailMapABValue>(() => new LandmarkDetailMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LandmarkDetailMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.LandmarkDetailConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LandmarkDetailMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LandmarkDetailMapABValue(LandmarkDetailMapABValue other) : this() {
      landmarkDetailMap_ = other.landmarkDetailMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LandmarkDetailMapABValue Clone() {
      return new LandmarkDetailMapABValue(this);
    }

    /// <summary>Field number for the "LandmarkDetailMap" field.</summary>
    public const int LandmarkDetailMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.LandmarkDetail>.Codec _map_landmarkDetailMap_codec
        = new pbc::MapField<int, global::fat.rawdata.LandmarkDetail>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.LandmarkDetail.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.LandmarkDetail> landmarkDetailMap_ = new pbc::MapField<int, global::fat.rawdata.LandmarkDetail>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.LandmarkDetail> LandmarkDetailMap {
      get { return landmarkDetailMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LandmarkDetailMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LandmarkDetailMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!LandmarkDetailMap.Equals(other.LandmarkDetailMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= LandmarkDetailMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      landmarkDetailMap_.WriteTo(output, _map_landmarkDetailMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      landmarkDetailMap_.WriteTo(ref output, _map_landmarkDetailMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += landmarkDetailMap_.CalculateSize(_map_landmarkDetailMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LandmarkDetailMapABValue other) {
      if (other == null) {
        return;
      }
      landmarkDetailMap_.Add(other.landmarkDetailMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            landmarkDetailMap_.AddEntriesFrom(input, _map_landmarkDetailMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            landmarkDetailMap_.AddEntriesFrom(ref input, _map_landmarkDetailMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LandmarkDetailConf : pb::IMessage<LandmarkDetailConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LandmarkDetailConf> _parser = new pb::MessageParser<LandmarkDetailConf>(() => new LandmarkDetailConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LandmarkDetailConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.LandmarkDetailConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LandmarkDetailConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LandmarkDetailConf(LandmarkDetailConf other) : this() {
      landmarkDetailMap_ = other.landmarkDetailMap_.Clone();
      landmarkDetailMapAB_ = other.landmarkDetailMapAB_.Clone();
      landmarkDetailMapABPatch_ = other.landmarkDetailMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LandmarkDetailConf Clone() {
      return new LandmarkDetailConf(this);
    }

    /// <summary>Field number for the "LandmarkDetailMap" field.</summary>
    public const int LandmarkDetailMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.LandmarkDetail>.Codec _map_landmarkDetailMap_codec
        = new pbc::MapField<int, global::fat.rawdata.LandmarkDetail>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.LandmarkDetail.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.LandmarkDetail> landmarkDetailMap_ = new pbc::MapField<int, global::fat.rawdata.LandmarkDetail>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.LandmarkDetail> LandmarkDetailMap {
      get { return landmarkDetailMap_; }
    }

    /// <summary>Field number for the "LandmarkDetailMapAB" field.</summary>
    public const int LandmarkDetailMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.LandmarkDetailMapABValue>.Codec _map_landmarkDetailMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.LandmarkDetailMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.LandmarkDetailMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.LandmarkDetailMapABValue> landmarkDetailMapAB_ = new pbc::MapField<string, global::fat.rawdata.LandmarkDetailMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.LandmarkDetailMapABValue> LandmarkDetailMapAB {
      get { return landmarkDetailMapAB_; }
    }

    /// <summary>Field number for the "LandmarkDetailMapABPatch" field.</summary>
    public const int LandmarkDetailMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.LandmarkDetailMapABValue>.Codec _map_landmarkDetailMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.LandmarkDetailMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.LandmarkDetailMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.LandmarkDetailMapABValue> landmarkDetailMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.LandmarkDetailMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.LandmarkDetailMapABValue> LandmarkDetailMapABPatch {
      get { return landmarkDetailMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LandmarkDetailConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LandmarkDetailConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!LandmarkDetailMap.Equals(other.LandmarkDetailMap)) return false;
      if (!LandmarkDetailMapAB.Equals(other.LandmarkDetailMapAB)) return false;
      if (!LandmarkDetailMapABPatch.Equals(other.LandmarkDetailMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= LandmarkDetailMap.GetHashCode();
      hash ^= LandmarkDetailMapAB.GetHashCode();
      hash ^= LandmarkDetailMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      landmarkDetailMap_.WriteTo(output, _map_landmarkDetailMap_codec);
      landmarkDetailMapAB_.WriteTo(output, _map_landmarkDetailMapAB_codec);
      landmarkDetailMapABPatch_.WriteTo(output, _map_landmarkDetailMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      landmarkDetailMap_.WriteTo(ref output, _map_landmarkDetailMap_codec);
      landmarkDetailMapAB_.WriteTo(ref output, _map_landmarkDetailMapAB_codec);
      landmarkDetailMapABPatch_.WriteTo(ref output, _map_landmarkDetailMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += landmarkDetailMap_.CalculateSize(_map_landmarkDetailMap_codec);
      size += landmarkDetailMapAB_.CalculateSize(_map_landmarkDetailMapAB_codec);
      size += landmarkDetailMapABPatch_.CalculateSize(_map_landmarkDetailMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LandmarkDetailConf other) {
      if (other == null) {
        return;
      }
      landmarkDetailMap_.Add(other.landmarkDetailMap_);
      landmarkDetailMapAB_.Add(other.landmarkDetailMapAB_);
      landmarkDetailMapABPatch_.Add(other.landmarkDetailMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            landmarkDetailMap_.AddEntriesFrom(input, _map_landmarkDetailMap_codec);
            break;
          }
          case 18: {
            landmarkDetailMapAB_.AddEntriesFrom(input, _map_landmarkDetailMapAB_codec);
            break;
          }
          case 26: {
            landmarkDetailMapABPatch_.AddEntriesFrom(input, _map_landmarkDetailMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            landmarkDetailMap_.AddEntriesFrom(ref input, _map_landmarkDetailMap_codec);
            break;
          }
          case 18: {
            landmarkDetailMapAB_.AddEntriesFrom(ref input, _map_landmarkDetailMapAB_codec);
            break;
          }
          case 26: {
            landmarkDetailMapABPatch_.AddEntriesFrom(ref input, _map_landmarkDetailMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
