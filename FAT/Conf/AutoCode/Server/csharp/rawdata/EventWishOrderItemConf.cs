// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/EventWishOrderItemConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/EventWishOrderItemConf.proto</summary>
  public static partial class EventWishOrderItemConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/EventWishOrderItemConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventWishOrderItemConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiRyYXdkYXRhL0V2ZW50V2lzaE9yZGVySXRlbUNvbmYucHJvdG8SB3Jhd2Rh",
            "dGEiVQoSRXZlbnRXaXNoT3JkZXJJdGVtEgoKAmlkGAEgASgFEgwKBGJhc2UY",
            "AiABKAUSDgoGaXRlbUlkGAMgASgFEhUKDXBheURpZmZpY3VsdHkYBCABKAUi",
            "2gEKHEV2ZW50V2lzaE9yZGVySXRlbU1hcEFCVmFsdWUSXwoVRXZlbnRXaXNo",
            "T3JkZXJJdGVtTWFwGAEgAygLMkAucmF3ZGF0YS5FdmVudFdpc2hPcmRlckl0",
            "ZW1NYXBBQlZhbHVlLkV2ZW50V2lzaE9yZGVySXRlbU1hcEVudHJ5GlkKGkV2",
            "ZW50V2lzaE9yZGVySXRlbU1hcEVudHJ5EgsKA2tleRgBIAEoBRIqCgV2YWx1",
            "ZRgCIAEoCzIbLnJhd2RhdGEuRXZlbnRXaXNoT3JkZXJJdGVtOgI4ASLpBAoW",
            "RXZlbnRXaXNoT3JkZXJJdGVtQ29uZhJZChVFdmVudFdpc2hPcmRlckl0ZW1N",
            "YXAYASADKAsyOi5yYXdkYXRhLkV2ZW50V2lzaE9yZGVySXRlbUNvbmYuRXZl",
            "bnRXaXNoT3JkZXJJdGVtTWFwRW50cnkSXQoXRXZlbnRXaXNoT3JkZXJJdGVt",
            "TWFwQUIYAiADKAsyPC5yYXdkYXRhLkV2ZW50V2lzaE9yZGVySXRlbUNvbmYu",
            "RXZlbnRXaXNoT3JkZXJJdGVtTWFwQUJFbnRyeRJnChxFdmVudFdpc2hPcmRl",
            "ckl0ZW1NYXBBQlBhdGNoGAMgAygLMkEucmF3ZGF0YS5FdmVudFdpc2hPcmRl",
            "ckl0ZW1Db25mLkV2ZW50V2lzaE9yZGVySXRlbU1hcEFCUGF0Y2hFbnRyeRpZ",
            "ChpFdmVudFdpc2hPcmRlckl0ZW1NYXBFbnRyeRILCgNrZXkYASABKAUSKgoF",
            "dmFsdWUYAiABKAsyGy5yYXdkYXRhLkV2ZW50V2lzaE9yZGVySXRlbToCOAEa",
            "ZQocRXZlbnRXaXNoT3JkZXJJdGVtTWFwQUJFbnRyeRILCgNrZXkYASABKAkS",
            "NAoFdmFsdWUYAiABKAsyJS5yYXdkYXRhLkV2ZW50V2lzaE9yZGVySXRlbU1h",
            "cEFCVmFsdWU6AjgBGmoKIUV2ZW50V2lzaE9yZGVySXRlbU1hcEFCUGF0Y2hF",
            "bnRyeRILCgNrZXkYASABKAkSNAoFdmFsdWUYAiABKAsyJS5yYXdkYXRhLkV2",
            "ZW50V2lzaE9yZGVySXRlbU1hcEFCVmFsdWU6AjgBQj1aLWdpdGxhYi5mdW5w",
            "bHVzLmlvL2ZhdC9jb25mL2dlbi9nb2xhbmcvcmF3ZGF0YaoCC2ZhdC5yYXdk",
            "YXRhYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventWishOrderItem), global::fat.rawdata.EventWishOrderItem.Parser, new[]{ "Id", "Base", "ItemId", "PayDifficulty" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventWishOrderItemMapABValue), global::fat.rawdata.EventWishOrderItemMapABValue.Parser, new[]{ "EventWishOrderItemMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.EventWishOrderItemConf), global::fat.rawdata.EventWishOrderItemConf.Parser, new[]{ "EventWishOrderItemMap", "EventWishOrderItemMapAB", "EventWishOrderItemMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="EventWishOrderItem",table="EventWishOrderItemMap",table_wrapper="EventWishOrderItemConf",map="true",map_key_type="int32",data="EventWishOrderItemConf")
  /// annotation@ab(table_ab="EventWishOrderItemMapAB",table_ab_patch="EventWishOrderItemMapABPatch",table_ab_value="EventWishOrderItemMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@EventWishOrderItem(id="id")
  /// </summary>
  public sealed partial class EventWishOrderItem : pb::IMessage<EventWishOrderItem>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventWishOrderItem> _parser = new pb::MessageParser<EventWishOrderItem>(() => new EventWishOrderItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventWishOrderItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventWishOrderItemConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishOrderItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishOrderItem(EventWishOrderItem other) : this() {
      id_ = other.id_;
      base_ = other.base_;
      itemId_ = other.itemId_;
      payDifficulty_ = other.payDifficulty_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishOrderItem Clone() {
      return new EventWishOrderItem(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// OrderItemId
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "base" field.</summary>
    public const int BaseFieldNumber = 2;
    private int base_;
    /// <summary>
    /// base
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Base {
      get { return base_; }
      set {
        base_ = value;
      }
    }

    /// <summary>Field number for the "itemId" field.</summary>
    public const int ItemIdFieldNumber = 3;
    private int itemId_;
    /// <summary>
    /// 对应棋子 id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ItemId {
      get { return itemId_; }
      set {
        itemId_ = value;
      }
    }

    /// <summary>Field number for the "payDifficulty" field.</summary>
    public const int PayDifficultyFieldNumber = 4;
    private int payDifficulty_;
    /// <summary>
    /// 实际难度门槛
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PayDifficulty {
      get { return payDifficulty_; }
      set {
        payDifficulty_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventWishOrderItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventWishOrderItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Base != other.Base) return false;
      if (ItemId != other.ItemId) return false;
      if (PayDifficulty != other.PayDifficulty) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Base != 0) hash ^= Base.GetHashCode();
      if (ItemId != 0) hash ^= ItemId.GetHashCode();
      if (PayDifficulty != 0) hash ^= PayDifficulty.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Base != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Base);
      }
      if (ItemId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ItemId);
      }
      if (PayDifficulty != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(PayDifficulty);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Base != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Base);
      }
      if (ItemId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ItemId);
      }
      if (PayDifficulty != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(PayDifficulty);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Base != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Base);
      }
      if (ItemId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemId);
      }
      if (PayDifficulty != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PayDifficulty);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventWishOrderItem other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Base != 0) {
        Base = other.Base;
      }
      if (other.ItemId != 0) {
        ItemId = other.ItemId;
      }
      if (other.PayDifficulty != 0) {
        PayDifficulty = other.PayDifficulty;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Base = input.ReadInt32();
            break;
          }
          case 24: {
            ItemId = input.ReadInt32();
            break;
          }
          case 32: {
            PayDifficulty = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Base = input.ReadInt32();
            break;
          }
          case 24: {
            ItemId = input.ReadInt32();
            break;
          }
          case 32: {
            PayDifficulty = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventWishOrderItemMapABValue : pb::IMessage<EventWishOrderItemMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventWishOrderItemMapABValue> _parser = new pb::MessageParser<EventWishOrderItemMapABValue>(() => new EventWishOrderItemMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventWishOrderItemMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventWishOrderItemConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishOrderItemMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishOrderItemMapABValue(EventWishOrderItemMapABValue other) : this() {
      eventWishOrderItemMap_ = other.eventWishOrderItemMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishOrderItemMapABValue Clone() {
      return new EventWishOrderItemMapABValue(this);
    }

    /// <summary>Field number for the "EventWishOrderItemMap" field.</summary>
    public const int EventWishOrderItemMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventWishOrderItem>.Codec _map_eventWishOrderItemMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventWishOrderItem>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventWishOrderItem.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventWishOrderItem> eventWishOrderItemMap_ = new pbc::MapField<int, global::fat.rawdata.EventWishOrderItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventWishOrderItem> EventWishOrderItemMap {
      get { return eventWishOrderItemMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventWishOrderItemMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventWishOrderItemMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventWishOrderItemMap.Equals(other.EventWishOrderItemMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventWishOrderItemMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventWishOrderItemMap_.WriteTo(output, _map_eventWishOrderItemMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventWishOrderItemMap_.WriteTo(ref output, _map_eventWishOrderItemMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventWishOrderItemMap_.CalculateSize(_map_eventWishOrderItemMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventWishOrderItemMapABValue other) {
      if (other == null) {
        return;
      }
      eventWishOrderItemMap_.Add(other.eventWishOrderItemMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventWishOrderItemMap_.AddEntriesFrom(input, _map_eventWishOrderItemMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventWishOrderItemMap_.AddEntriesFrom(ref input, _map_eventWishOrderItemMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventWishOrderItemConf : pb::IMessage<EventWishOrderItemConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventWishOrderItemConf> _parser = new pb::MessageParser<EventWishOrderItemConf>(() => new EventWishOrderItemConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventWishOrderItemConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.EventWishOrderItemConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishOrderItemConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishOrderItemConf(EventWishOrderItemConf other) : this() {
      eventWishOrderItemMap_ = other.eventWishOrderItemMap_.Clone();
      eventWishOrderItemMapAB_ = other.eventWishOrderItemMapAB_.Clone();
      eventWishOrderItemMapABPatch_ = other.eventWishOrderItemMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventWishOrderItemConf Clone() {
      return new EventWishOrderItemConf(this);
    }

    /// <summary>Field number for the "EventWishOrderItemMap" field.</summary>
    public const int EventWishOrderItemMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.EventWishOrderItem>.Codec _map_eventWishOrderItemMap_codec
        = new pbc::MapField<int, global::fat.rawdata.EventWishOrderItem>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventWishOrderItem.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.EventWishOrderItem> eventWishOrderItemMap_ = new pbc::MapField<int, global::fat.rawdata.EventWishOrderItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.EventWishOrderItem> EventWishOrderItemMap {
      get { return eventWishOrderItemMap_; }
    }

    /// <summary>Field number for the "EventWishOrderItemMapAB" field.</summary>
    public const int EventWishOrderItemMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventWishOrderItemMapABValue>.Codec _map_eventWishOrderItemMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.EventWishOrderItemMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventWishOrderItemMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.EventWishOrderItemMapABValue> eventWishOrderItemMapAB_ = new pbc::MapField<string, global::fat.rawdata.EventWishOrderItemMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventWishOrderItemMapABValue> EventWishOrderItemMapAB {
      get { return eventWishOrderItemMapAB_; }
    }

    /// <summary>Field number for the "EventWishOrderItemMapABPatch" field.</summary>
    public const int EventWishOrderItemMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.EventWishOrderItemMapABValue>.Codec _map_eventWishOrderItemMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.EventWishOrderItemMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.EventWishOrderItemMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.EventWishOrderItemMapABValue> eventWishOrderItemMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.EventWishOrderItemMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.EventWishOrderItemMapABValue> EventWishOrderItemMapABPatch {
      get { return eventWishOrderItemMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventWishOrderItemConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventWishOrderItemConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!EventWishOrderItemMap.Equals(other.EventWishOrderItemMap)) return false;
      if (!EventWishOrderItemMapAB.Equals(other.EventWishOrderItemMapAB)) return false;
      if (!EventWishOrderItemMapABPatch.Equals(other.EventWishOrderItemMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= EventWishOrderItemMap.GetHashCode();
      hash ^= EventWishOrderItemMapAB.GetHashCode();
      hash ^= EventWishOrderItemMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      eventWishOrderItemMap_.WriteTo(output, _map_eventWishOrderItemMap_codec);
      eventWishOrderItemMapAB_.WriteTo(output, _map_eventWishOrderItemMapAB_codec);
      eventWishOrderItemMapABPatch_.WriteTo(output, _map_eventWishOrderItemMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      eventWishOrderItemMap_.WriteTo(ref output, _map_eventWishOrderItemMap_codec);
      eventWishOrderItemMapAB_.WriteTo(ref output, _map_eventWishOrderItemMapAB_codec);
      eventWishOrderItemMapABPatch_.WriteTo(ref output, _map_eventWishOrderItemMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eventWishOrderItemMap_.CalculateSize(_map_eventWishOrderItemMap_codec);
      size += eventWishOrderItemMapAB_.CalculateSize(_map_eventWishOrderItemMapAB_codec);
      size += eventWishOrderItemMapABPatch_.CalculateSize(_map_eventWishOrderItemMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventWishOrderItemConf other) {
      if (other == null) {
        return;
      }
      eventWishOrderItemMap_.Add(other.eventWishOrderItemMap_);
      eventWishOrderItemMapAB_.Add(other.eventWishOrderItemMapAB_);
      eventWishOrderItemMapABPatch_.Add(other.eventWishOrderItemMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            eventWishOrderItemMap_.AddEntriesFrom(input, _map_eventWishOrderItemMap_codec);
            break;
          }
          case 18: {
            eventWishOrderItemMapAB_.AddEntriesFrom(input, _map_eventWishOrderItemMapAB_codec);
            break;
          }
          case 26: {
            eventWishOrderItemMapABPatch_.AddEntriesFrom(input, _map_eventWishOrderItemMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            eventWishOrderItemMap_.AddEntriesFrom(ref input, _map_eventWishOrderItemMap_codec);
            break;
          }
          case 18: {
            eventWishOrderItemMapAB_.AddEntriesFrom(ref input, _map_eventWishOrderItemMapAB_codec);
            break;
          }
          case 26: {
            eventWishOrderItemMapABPatch_.AddEntriesFrom(ref input, _map_eventWishOrderItemMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
