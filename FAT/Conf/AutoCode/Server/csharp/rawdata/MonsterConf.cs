// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rawdata/MonsterConf.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.rawdata {

  /// <summary>Holder for reflection information generated from rawdata/MonsterConf.proto</summary>
  public static partial class MonsterConfReflection {

    #region Descriptor
    /// <summary>File descriptor for rawdata/MonsterConf.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MonsterConfReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChlyYXdkYXRhL01vbnN0ZXJDb25mLnByb3RvEgdyYXdkYXRhIlIKB01vbnN0",
            "ZXISCgoCaWQYASABKAUSEAoIYXNzZXRCb3gYBSABKAkSFAoMYXNzZXRNb25z",
            "dGVyGAYgASgJEhMKC21vbnN0ZXJUYWxrGAQgASgFIpgBChFNb25zdGVyTWFw",
            "QUJWYWx1ZRI+CgpNb25zdGVyTWFwGAEgAygLMioucmF3ZGF0YS5Nb25zdGVy",
            "TWFwQUJWYWx1ZS5Nb25zdGVyTWFwRW50cnkaQwoPTW9uc3Rlck1hcEVudHJ5",
            "EgsKA2tleRgBIAEoBRIfCgV2YWx1ZRgCIAEoCzIQLnJhd2RhdGEuTW9uc3Rl",
            "cjoCOAEiuQMKC01vbnN0ZXJDb25mEjgKCk1vbnN0ZXJNYXAYASADKAsyJC5y",
            "YXdkYXRhLk1vbnN0ZXJDb25mLk1vbnN0ZXJNYXBFbnRyeRI8CgxNb25zdGVy",
            "TWFwQUIYAiADKAsyJi5yYXdkYXRhLk1vbnN0ZXJDb25mLk1vbnN0ZXJNYXBB",
            "QkVudHJ5EkYKEU1vbnN0ZXJNYXBBQlBhdGNoGAMgAygLMisucmF3ZGF0YS5N",
            "b25zdGVyQ29uZi5Nb25zdGVyTWFwQUJQYXRjaEVudHJ5GkMKD01vbnN0ZXJN",
            "YXBFbnRyeRILCgNrZXkYASABKAUSHwoFdmFsdWUYAiABKAsyEC5yYXdkYXRh",
            "Lk1vbnN0ZXI6AjgBGk8KEU1vbnN0ZXJNYXBBQkVudHJ5EgsKA2tleRgBIAEo",
            "CRIpCgV2YWx1ZRgCIAEoCzIaLnJhd2RhdGEuTW9uc3Rlck1hcEFCVmFsdWU6",
            "AjgBGlQKFk1vbnN0ZXJNYXBBQlBhdGNoRW50cnkSCwoDa2V5GAEgASgJEikK",
            "BXZhbHVlGAIgASgLMhoucmF3ZGF0YS5Nb25zdGVyTWFwQUJWYWx1ZToCOAFC",
            "PVotZ2l0bGFiLmZ1bnBsdXMuaW8vZmF0L2NvbmYvZ2VuL2dvbGFuZy9yYXdk",
            "YXRhqgILZmF0LnJhd2RhdGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.Monster), global::fat.rawdata.Monster.Parser, new[]{ "Id", "AssetBox", "AssetMonster", "MonsterTalk" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.MonsterMapABValue), global::fat.rawdata.MonsterMapABValue.Parser, new[]{ "MonsterMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.rawdata.MonsterConf), global::fat.rawdata.MonsterConf.Parser, new[]{ "MonsterMap", "MonsterMapAB", "MonsterMapABPatch" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// annotation@annotation_type(type="rawdata")
  /// annotation@rawdata(row="Monster",table="MonsterMap",table_wrapper="MonsterConf",map="true",map_key_type="int32",data="MonsterConf")
  /// annotation@ab(table_ab="MonsterMapAB",table_ab_patch="MonsterMapABPatch",table_ab_value="MonsterMapABValue",ab_patch="false")
  /// annotation@filter(just_server="false",just_client="false")
  /// annotation@Monster(id="id")
  /// </summary>
  public sealed partial class Monster : pb::IMessage<Monster>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Monster> _parser = new pb::MessageParser<Monster>(() => new Monster());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Monster> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.MonsterConfReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Monster() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Monster(Monster other) : this() {
      id_ = other.id_;
      assetBox_ = other.assetBox_;
      assetMonster_ = other.assetMonster_;
      monsterTalk_ = other.monsterTalk_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Monster Clone() {
      return new Monster(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    /// <summary>
    /// 攻击目标id
    /// annotation@field_id(id="true")
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "assetBox" field.</summary>
    public const int AssetBoxFieldNumber = 5;
    private string assetBox_ = "";
    /// <summary>
    /// 怪物背着的宝箱
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AssetBox {
      get { return assetBox_; }
      set {
        assetBox_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "assetMonster" field.</summary>
    public const int AssetMonsterFieldNumber = 6;
    private string assetMonster_ = "";
    /// <summary>
    /// 攻击目标资源：怪物/宝箱
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AssetMonster {
      get { return assetMonster_; }
      set {
        assetMonster_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "monsterTalk" field.</summary>
    public const int MonsterTalkFieldNumber = 4;
    private int monsterTalk_;
    /// <summary>
    /// 怪物对话id
    /// (MonsterTalk.id)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MonsterTalk {
      get { return monsterTalk_; }
      set {
        monsterTalk_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Monster);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Monster other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (AssetBox != other.AssetBox) return false;
      if (AssetMonster != other.AssetMonster) return false;
      if (MonsterTalk != other.MonsterTalk) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (AssetBox.Length != 0) hash ^= AssetBox.GetHashCode();
      if (AssetMonster.Length != 0) hash ^= AssetMonster.GetHashCode();
      if (MonsterTalk != 0) hash ^= MonsterTalk.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (MonsterTalk != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(MonsterTalk);
      }
      if (AssetBox.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(AssetBox);
      }
      if (AssetMonster.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(AssetMonster);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (MonsterTalk != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(MonsterTalk);
      }
      if (AssetBox.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(AssetBox);
      }
      if (AssetMonster.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(AssetMonster);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (AssetBox.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AssetBox);
      }
      if (AssetMonster.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AssetMonster);
      }
      if (MonsterTalk != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MonsterTalk);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Monster other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.AssetBox.Length != 0) {
        AssetBox = other.AssetBox;
      }
      if (other.AssetMonster.Length != 0) {
        AssetMonster = other.AssetMonster;
      }
      if (other.MonsterTalk != 0) {
        MonsterTalk = other.MonsterTalk;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 32: {
            MonsterTalk = input.ReadInt32();
            break;
          }
          case 42: {
            AssetBox = input.ReadString();
            break;
          }
          case 50: {
            AssetMonster = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 32: {
            MonsterTalk = input.ReadInt32();
            break;
          }
          case 42: {
            AssetBox = input.ReadString();
            break;
          }
          case 50: {
            AssetMonster = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MonsterMapABValue : pb::IMessage<MonsterMapABValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MonsterMapABValue> _parser = new pb::MessageParser<MonsterMapABValue>(() => new MonsterMapABValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MonsterMapABValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.MonsterConfReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MonsterMapABValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MonsterMapABValue(MonsterMapABValue other) : this() {
      monsterMap_ = other.monsterMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MonsterMapABValue Clone() {
      return new MonsterMapABValue(this);
    }

    /// <summary>Field number for the "MonsterMap" field.</summary>
    public const int MonsterMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.Monster>.Codec _map_monsterMap_codec
        = new pbc::MapField<int, global::fat.rawdata.Monster>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.Monster.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.Monster> monsterMap_ = new pbc::MapField<int, global::fat.rawdata.Monster>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.Monster> MonsterMap {
      get { return monsterMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MonsterMapABValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MonsterMapABValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!MonsterMap.Equals(other.MonsterMap)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= MonsterMap.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      monsterMap_.WriteTo(output, _map_monsterMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      monsterMap_.WriteTo(ref output, _map_monsterMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += monsterMap_.CalculateSize(_map_monsterMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MonsterMapABValue other) {
      if (other == null) {
        return;
      }
      monsterMap_.Add(other.monsterMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            monsterMap_.AddEntriesFrom(input, _map_monsterMap_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            monsterMap_.AddEntriesFrom(ref input, _map_monsterMap_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MonsterConf : pb::IMessage<MonsterConf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MonsterConf> _parser = new pb::MessageParser<MonsterConf>(() => new MonsterConf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MonsterConf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.rawdata.MonsterConfReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MonsterConf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MonsterConf(MonsterConf other) : this() {
      monsterMap_ = other.monsterMap_.Clone();
      monsterMapAB_ = other.monsterMapAB_.Clone();
      monsterMapABPatch_ = other.monsterMapABPatch_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MonsterConf Clone() {
      return new MonsterConf(this);
    }

    /// <summary>Field number for the "MonsterMap" field.</summary>
    public const int MonsterMapFieldNumber = 1;
    private static readonly pbc::MapField<int, global::fat.rawdata.Monster>.Codec _map_monsterMap_codec
        = new pbc::MapField<int, global::fat.rawdata.Monster>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.rawdata.Monster.Parser), 10);
    private readonly pbc::MapField<int, global::fat.rawdata.Monster> monsterMap_ = new pbc::MapField<int, global::fat.rawdata.Monster>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.rawdata.Monster> MonsterMap {
      get { return monsterMap_; }
    }

    /// <summary>Field number for the "MonsterMapAB" field.</summary>
    public const int MonsterMapABFieldNumber = 2;
    private static readonly pbc::MapField<string, global::fat.rawdata.MonsterMapABValue>.Codec _map_monsterMapAB_codec
        = new pbc::MapField<string, global::fat.rawdata.MonsterMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.MonsterMapABValue.Parser), 18);
    private readonly pbc::MapField<string, global::fat.rawdata.MonsterMapABValue> monsterMapAB_ = new pbc::MapField<string, global::fat.rawdata.MonsterMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.MonsterMapABValue> MonsterMapAB {
      get { return monsterMapAB_; }
    }

    /// <summary>Field number for the "MonsterMapABPatch" field.</summary>
    public const int MonsterMapABPatchFieldNumber = 3;
    private static readonly pbc::MapField<string, global::fat.rawdata.MonsterMapABValue>.Codec _map_monsterMapABPatch_codec
        = new pbc::MapField<string, global::fat.rawdata.MonsterMapABValue>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::fat.rawdata.MonsterMapABValue.Parser), 26);
    private readonly pbc::MapField<string, global::fat.rawdata.MonsterMapABValue> monsterMapABPatch_ = new pbc::MapField<string, global::fat.rawdata.MonsterMapABValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::fat.rawdata.MonsterMapABValue> MonsterMapABPatch {
      get { return monsterMapABPatch_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MonsterConf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MonsterConf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!MonsterMap.Equals(other.MonsterMap)) return false;
      if (!MonsterMapAB.Equals(other.MonsterMapAB)) return false;
      if (!MonsterMapABPatch.Equals(other.MonsterMapABPatch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= MonsterMap.GetHashCode();
      hash ^= MonsterMapAB.GetHashCode();
      hash ^= MonsterMapABPatch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      monsterMap_.WriteTo(output, _map_monsterMap_codec);
      monsterMapAB_.WriteTo(output, _map_monsterMapAB_codec);
      monsterMapABPatch_.WriteTo(output, _map_monsterMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      monsterMap_.WriteTo(ref output, _map_monsterMap_codec);
      monsterMapAB_.WriteTo(ref output, _map_monsterMapAB_codec);
      monsterMapABPatch_.WriteTo(ref output, _map_monsterMapABPatch_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += monsterMap_.CalculateSize(_map_monsterMap_codec);
      size += monsterMapAB_.CalculateSize(_map_monsterMapAB_codec);
      size += monsterMapABPatch_.CalculateSize(_map_monsterMapABPatch_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MonsterConf other) {
      if (other == null) {
        return;
      }
      monsterMap_.Add(other.monsterMap_);
      monsterMapAB_.Add(other.monsterMapAB_);
      monsterMapABPatch_.Add(other.monsterMapABPatch_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            monsterMap_.AddEntriesFrom(input, _map_monsterMap_codec);
            break;
          }
          case 18: {
            monsterMapAB_.AddEntriesFrom(input, _map_monsterMapAB_codec);
            break;
          }
          case 26: {
            monsterMapABPatch_.AddEntriesFrom(input, _map_monsterMapABPatch_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            monsterMap_.AddEntriesFrom(ref input, _map_monsterMap_codec);
            break;
          }
          case 18: {
            monsterMapAB_.AddEntriesFrom(ref input, _map_monsterMapAB_codec);
            break;
          }
          case 26: {
            monsterMapABPatch_.AddEntriesFrom(ref input, _map_monsterMapABPatch_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
