// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: gamekitdata/order.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.gamekitdata {

  /// <summary>Holder for reflection information generated from gamekitdata/order.proto</summary>
  public static partial class OrderReflection {

    #region Descriptor
    /// <summary>File descriptor for gamekitdata/order.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static OrderReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChdnYW1la2l0ZGF0YS9vcmRlci5wcm90bxILZ2FtZWtpdGRhdGEaGGdhbWVr",
            "aXRkYXRhL3NoYXJlZC5wcm90byKvAgoLT3JkZXJSZWNvcmQSCgoCSWQYASAB",
            "KAUSEQoJT3JkZXJUeXBlGAIgASgFEhQKDFByb3ZpZGVyVHlwZRgDIAEoBRIO",
            "CgZSb2xlSWQYBCABKAUSEwoLVW5sb2NrTGV2ZWwYBSABKAUSEgoKUmVxdWly",
            "ZUlkcxgGIAMoBRITCgtSZXF1aXJlTnVtcxgHIAMoBRIRCglSZXdhcmRJZHMY",
            "CCADKAUSEgoKUmV3YXJkTnVtcxgJIAMoBRIkCgVFeHRyYRgKIAMoCzIVLmdh",
            "bWVraXRkYXRhLkFueVN0YXRlEhEKCUNyZWF0ZWRBdBgLIAEoAxIRCglEaXNw",
            "bGF5ZWQYDCABKAgSFAoMRGZmeVN0cmF0ZWd5GA0gASgFEhQKDE1vZGVsVmVy",
            "c2lvbhgOIAEoCSLwAgoKT3JkZXJHcm91cBIQCghGaW5pc2hlZBgBIAMoBBIt",
            "CgtPcmRlckNvbW1vbhgCIAMoCzIYLmdhbWVraXRkYXRhLk9yZGVyUmVjb3Jk",
            "Ei8KDU9yZGVyRGV0ZWN0b3IYAyADKAsyGC5nYW1la2l0ZGF0YS5PcmRlclJl",
            "Y29yZBItCgtPcmRlclJhbmRvbRgEIAMoCzIYLmdhbWVraXRkYXRhLk9yZGVy",
            "UmVjb3JkEhUKDVRvdGFsRmluaXNoZWQYBSABKAMSFQoNUmVjZW50QWN0RGZm",
            "eRgGIAMoBRIVCg1SZWNlbnRQYXlEZmZ5GAcgAygFEhYKDlJlY2VudFN0cmF0",
            "ZWd5GAggASgFEjAKDlJlY2VudEFwaU9yZGVyGAkgASgLMhguZ2FtZWtpdGRh",
            "dGEuT3JkZXJSZWNvcmQSGAoQUmVjZW50QXBpQWN0RGZmeRgKIAMoBRIYChBS",
            "ZWNlbnRBcGlQYXlEZmZ5GAsgAygFQkVaMWdpdGxhYi5mdW5wbHVzLmlvL2Zh",
            "dC9jb25mL2dlbi9nb2xhbmcvZ2FtZWtpdGRhdGGqAg9mYXQuZ2FtZWtpdGRh",
            "dGFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::fat.gamekitdata.SharedReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.gamekitdata.OrderRecord), global::fat.gamekitdata.OrderRecord.Parser, new[]{ "Id", "OrderType", "ProviderType", "RoleId", "UnlockLevel", "RequireIds", "RequireNums", "RewardIds", "RewardNums", "Extra", "CreatedAt", "Displayed", "DffyStrategy", "ModelVersion" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.gamekitdata.OrderGroup), global::fat.gamekitdata.OrderGroup.Parser, new[]{ "Finished", "OrderCommon", "OrderDetector", "OrderRandom", "TotalFinished", "RecentActDffy", "RecentPayDffy", "RecentStrategy", "RecentApiOrder", "RecentApiActDffy", "RecentApiPayDffy" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class OrderRecord : pb::IMessage<OrderRecord>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OrderRecord> _parser = new pb::MessageParser<OrderRecord>(() => new OrderRecord());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OrderRecord> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.gamekitdata.OrderReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderRecord() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderRecord(OrderRecord other) : this() {
      id_ = other.id_;
      orderType_ = other.orderType_;
      providerType_ = other.providerType_;
      roleId_ = other.roleId_;
      unlockLevel_ = other.unlockLevel_;
      requireIds_ = other.requireIds_.Clone();
      requireNums_ = other.requireNums_.Clone();
      rewardIds_ = other.rewardIds_.Clone();
      rewardNums_ = other.rewardNums_.Clone();
      extra_ = other.extra_.Clone();
      createdAt_ = other.createdAt_;
      displayed_ = other.displayed_;
      dffyStrategy_ = other.dffyStrategy_;
      modelVersion_ = other.modelVersion_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderRecord Clone() {
      return new OrderRecord(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "OrderType" field.</summary>
    public const int OrderTypeFieldNumber = 2;
    private int orderType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int OrderType {
      get { return orderType_; }
      set {
        orderType_ = value;
      }
    }

    /// <summary>Field number for the "ProviderType" field.</summary>
    public const int ProviderTypeFieldNumber = 3;
    private int providerType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ProviderType {
      get { return providerType_; }
      set {
        providerType_ = value;
      }
    }

    /// <summary>Field number for the "RoleId" field.</summary>
    public const int RoleIdFieldNumber = 4;
    private int roleId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RoleId {
      get { return roleId_; }
      set {
        roleId_ = value;
      }
    }

    /// <summary>Field number for the "UnlockLevel" field.</summary>
    public const int UnlockLevelFieldNumber = 5;
    private int unlockLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnlockLevel {
      get { return unlockLevel_; }
      set {
        unlockLevel_ = value;
      }
    }

    /// <summary>Field number for the "RequireIds" field.</summary>
    public const int RequireIdsFieldNumber = 6;
    private static readonly pb::FieldCodec<int> _repeated_requireIds_codec
        = pb::FieldCodec.ForInt32(50);
    private readonly pbc::RepeatedField<int> requireIds_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> RequireIds {
      get { return requireIds_; }
    }

    /// <summary>Field number for the "RequireNums" field.</summary>
    public const int RequireNumsFieldNumber = 7;
    private static readonly pb::FieldCodec<int> _repeated_requireNums_codec
        = pb::FieldCodec.ForInt32(58);
    private readonly pbc::RepeatedField<int> requireNums_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> RequireNums {
      get { return requireNums_; }
    }

    /// <summary>Field number for the "RewardIds" field.</summary>
    public const int RewardIdsFieldNumber = 8;
    private static readonly pb::FieldCodec<int> _repeated_rewardIds_codec
        = pb::FieldCodec.ForInt32(66);
    private readonly pbc::RepeatedField<int> rewardIds_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> RewardIds {
      get { return rewardIds_; }
    }

    /// <summary>Field number for the "RewardNums" field.</summary>
    public const int RewardNumsFieldNumber = 9;
    private static readonly pb::FieldCodec<int> _repeated_rewardNums_codec
        = pb::FieldCodec.ForInt32(74);
    private readonly pbc::RepeatedField<int> rewardNums_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> RewardNums {
      get { return rewardNums_; }
    }

    /// <summary>Field number for the "Extra" field.</summary>
    public const int ExtraFieldNumber = 10;
    private static readonly pb::FieldCodec<global::fat.gamekitdata.AnyState> _repeated_extra_codec
        = pb::FieldCodec.ForMessage(82, global::fat.gamekitdata.AnyState.Parser);
    private readonly pbc::RepeatedField<global::fat.gamekitdata.AnyState> extra_ = new pbc::RepeatedField<global::fat.gamekitdata.AnyState>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::fat.gamekitdata.AnyState> Extra {
      get { return extra_; }
    }

    /// <summary>Field number for the "CreatedAt" field.</summary>
    public const int CreatedAtFieldNumber = 11;
    private long createdAt_;
    /// <summary>
    /// 创建时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CreatedAt {
      get { return createdAt_; }
      set {
        createdAt_ = value;
      }
    }

    /// <summary>Field number for the "Displayed" field.</summary>
    public const int DisplayedFieldNumber = 12;
    private bool displayed_;
    /// <summary>
    /// 是否已对用户展示
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Displayed {
      get { return displayed_; }
      set {
        displayed_ = value;
      }
    }

    /// <summary>Field number for the "DffyStrategy" field.</summary>
    public const int DffyStrategyFieldNumber = 13;
    private int dffyStrategy_;
    /// <summary>
    /// 难度策略
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DffyStrategy {
      get { return dffyStrategy_; }
      set {
        dffyStrategy_ = value;
      }
    }

    /// <summary>Field number for the "ModelVersion" field.</summary>
    public const int ModelVersionFieldNumber = 14;
    private string modelVersion_ = "";
    /// <summary>
    /// 策略模型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModelVersion {
      get { return modelVersion_; }
      set {
        modelVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OrderRecord);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OrderRecord other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (OrderType != other.OrderType) return false;
      if (ProviderType != other.ProviderType) return false;
      if (RoleId != other.RoleId) return false;
      if (UnlockLevel != other.UnlockLevel) return false;
      if(!requireIds_.Equals(other.requireIds_)) return false;
      if(!requireNums_.Equals(other.requireNums_)) return false;
      if(!rewardIds_.Equals(other.rewardIds_)) return false;
      if(!rewardNums_.Equals(other.rewardNums_)) return false;
      if(!extra_.Equals(other.extra_)) return false;
      if (CreatedAt != other.CreatedAt) return false;
      if (Displayed != other.Displayed) return false;
      if (DffyStrategy != other.DffyStrategy) return false;
      if (ModelVersion != other.ModelVersion) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (OrderType != 0) hash ^= OrderType.GetHashCode();
      if (ProviderType != 0) hash ^= ProviderType.GetHashCode();
      if (RoleId != 0) hash ^= RoleId.GetHashCode();
      if (UnlockLevel != 0) hash ^= UnlockLevel.GetHashCode();
      hash ^= requireIds_.GetHashCode();
      hash ^= requireNums_.GetHashCode();
      hash ^= rewardIds_.GetHashCode();
      hash ^= rewardNums_.GetHashCode();
      hash ^= extra_.GetHashCode();
      if (CreatedAt != 0L) hash ^= CreatedAt.GetHashCode();
      if (Displayed != false) hash ^= Displayed.GetHashCode();
      if (DffyStrategy != 0) hash ^= DffyStrategy.GetHashCode();
      if (ModelVersion.Length != 0) hash ^= ModelVersion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (OrderType != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(OrderType);
      }
      if (ProviderType != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ProviderType);
      }
      if (RoleId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(RoleId);
      }
      if (UnlockLevel != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(UnlockLevel);
      }
      requireIds_.WriteTo(output, _repeated_requireIds_codec);
      requireNums_.WriteTo(output, _repeated_requireNums_codec);
      rewardIds_.WriteTo(output, _repeated_rewardIds_codec);
      rewardNums_.WriteTo(output, _repeated_rewardNums_codec);
      extra_.WriteTo(output, _repeated_extra_codec);
      if (CreatedAt != 0L) {
        output.WriteRawTag(88);
        output.WriteInt64(CreatedAt);
      }
      if (Displayed != false) {
        output.WriteRawTag(96);
        output.WriteBool(Displayed);
      }
      if (DffyStrategy != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(DffyStrategy);
      }
      if (ModelVersion.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(ModelVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (OrderType != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(OrderType);
      }
      if (ProviderType != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ProviderType);
      }
      if (RoleId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(RoleId);
      }
      if (UnlockLevel != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(UnlockLevel);
      }
      requireIds_.WriteTo(ref output, _repeated_requireIds_codec);
      requireNums_.WriteTo(ref output, _repeated_requireNums_codec);
      rewardIds_.WriteTo(ref output, _repeated_rewardIds_codec);
      rewardNums_.WriteTo(ref output, _repeated_rewardNums_codec);
      extra_.WriteTo(ref output, _repeated_extra_codec);
      if (CreatedAt != 0L) {
        output.WriteRawTag(88);
        output.WriteInt64(CreatedAt);
      }
      if (Displayed != false) {
        output.WriteRawTag(96);
        output.WriteBool(Displayed);
      }
      if (DffyStrategy != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(DffyStrategy);
      }
      if (ModelVersion.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(ModelVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (OrderType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OrderType);
      }
      if (ProviderType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ProviderType);
      }
      if (RoleId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoleId);
      }
      if (UnlockLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnlockLevel);
      }
      size += requireIds_.CalculateSize(_repeated_requireIds_codec);
      size += requireNums_.CalculateSize(_repeated_requireNums_codec);
      size += rewardIds_.CalculateSize(_repeated_rewardIds_codec);
      size += rewardNums_.CalculateSize(_repeated_rewardNums_codec);
      size += extra_.CalculateSize(_repeated_extra_codec);
      if (CreatedAt != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CreatedAt);
      }
      if (Displayed != false) {
        size += 1 + 1;
      }
      if (DffyStrategy != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DffyStrategy);
      }
      if (ModelVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModelVersion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OrderRecord other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.OrderType != 0) {
        OrderType = other.OrderType;
      }
      if (other.ProviderType != 0) {
        ProviderType = other.ProviderType;
      }
      if (other.RoleId != 0) {
        RoleId = other.RoleId;
      }
      if (other.UnlockLevel != 0) {
        UnlockLevel = other.UnlockLevel;
      }
      requireIds_.Add(other.requireIds_);
      requireNums_.Add(other.requireNums_);
      rewardIds_.Add(other.rewardIds_);
      rewardNums_.Add(other.rewardNums_);
      extra_.Add(other.extra_);
      if (other.CreatedAt != 0L) {
        CreatedAt = other.CreatedAt;
      }
      if (other.Displayed != false) {
        Displayed = other.Displayed;
      }
      if (other.DffyStrategy != 0) {
        DffyStrategy = other.DffyStrategy;
      }
      if (other.ModelVersion.Length != 0) {
        ModelVersion = other.ModelVersion;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            OrderType = input.ReadInt32();
            break;
          }
          case 24: {
            ProviderType = input.ReadInt32();
            break;
          }
          case 32: {
            RoleId = input.ReadInt32();
            break;
          }
          case 40: {
            UnlockLevel = input.ReadInt32();
            break;
          }
          case 50:
          case 48: {
            requireIds_.AddEntriesFrom(input, _repeated_requireIds_codec);
            break;
          }
          case 58:
          case 56: {
            requireNums_.AddEntriesFrom(input, _repeated_requireNums_codec);
            break;
          }
          case 66:
          case 64: {
            rewardIds_.AddEntriesFrom(input, _repeated_rewardIds_codec);
            break;
          }
          case 74:
          case 72: {
            rewardNums_.AddEntriesFrom(input, _repeated_rewardNums_codec);
            break;
          }
          case 82: {
            extra_.AddEntriesFrom(input, _repeated_extra_codec);
            break;
          }
          case 88: {
            CreatedAt = input.ReadInt64();
            break;
          }
          case 96: {
            Displayed = input.ReadBool();
            break;
          }
          case 104: {
            DffyStrategy = input.ReadInt32();
            break;
          }
          case 114: {
            ModelVersion = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            OrderType = input.ReadInt32();
            break;
          }
          case 24: {
            ProviderType = input.ReadInt32();
            break;
          }
          case 32: {
            RoleId = input.ReadInt32();
            break;
          }
          case 40: {
            UnlockLevel = input.ReadInt32();
            break;
          }
          case 50:
          case 48: {
            requireIds_.AddEntriesFrom(ref input, _repeated_requireIds_codec);
            break;
          }
          case 58:
          case 56: {
            requireNums_.AddEntriesFrom(ref input, _repeated_requireNums_codec);
            break;
          }
          case 66:
          case 64: {
            rewardIds_.AddEntriesFrom(ref input, _repeated_rewardIds_codec);
            break;
          }
          case 74:
          case 72: {
            rewardNums_.AddEntriesFrom(ref input, _repeated_rewardNums_codec);
            break;
          }
          case 82: {
            extra_.AddEntriesFrom(ref input, _repeated_extra_codec);
            break;
          }
          case 88: {
            CreatedAt = input.ReadInt64();
            break;
          }
          case 96: {
            Displayed = input.ReadBool();
            break;
          }
          case 104: {
            DffyStrategy = input.ReadInt32();
            break;
          }
          case 114: {
            ModelVersion = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class OrderGroup : pb::IMessage<OrderGroup>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OrderGroup> _parser = new pb::MessageParser<OrderGroup>(() => new OrderGroup());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OrderGroup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.gamekitdata.OrderReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderGroup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderGroup(OrderGroup other) : this() {
      finished_ = other.finished_.Clone();
      orderCommon_ = other.orderCommon_.Clone();
      orderDetector_ = other.orderDetector_.Clone();
      orderRandom_ = other.orderRandom_.Clone();
      totalFinished_ = other.totalFinished_;
      recentActDffy_ = other.recentActDffy_.Clone();
      recentPayDffy_ = other.recentPayDffy_.Clone();
      recentStrategy_ = other.recentStrategy_;
      recentApiOrder_ = other.recentApiOrder_ != null ? other.recentApiOrder_.Clone() : null;
      recentApiActDffy_ = other.recentApiActDffy_.Clone();
      recentApiPayDffy_ = other.recentApiPayDffy_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderGroup Clone() {
      return new OrderGroup(this);
    }

    /// <summary>Field number for the "Finished" field.</summary>
    public const int FinishedFieldNumber = 1;
    private static readonly pb::FieldCodec<ulong> _repeated_finished_codec
        = pb::FieldCodec.ForUInt64(10);
    private readonly pbc::RepeatedField<ulong> finished_ = new pbc::RepeatedField<ulong>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<ulong> Finished {
      get { return finished_; }
    }

    /// <summary>Field number for the "OrderCommon" field.</summary>
    public const int OrderCommonFieldNumber = 2;
    private static readonly pb::FieldCodec<global::fat.gamekitdata.OrderRecord> _repeated_orderCommon_codec
        = pb::FieldCodec.ForMessage(18, global::fat.gamekitdata.OrderRecord.Parser);
    private readonly pbc::RepeatedField<global::fat.gamekitdata.OrderRecord> orderCommon_ = new pbc::RepeatedField<global::fat.gamekitdata.OrderRecord>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::fat.gamekitdata.OrderRecord> OrderCommon {
      get { return orderCommon_; }
    }

    /// <summary>Field number for the "OrderDetector" field.</summary>
    public const int OrderDetectorFieldNumber = 3;
    private static readonly pb::FieldCodec<global::fat.gamekitdata.OrderRecord> _repeated_orderDetector_codec
        = pb::FieldCodec.ForMessage(26, global::fat.gamekitdata.OrderRecord.Parser);
    private readonly pbc::RepeatedField<global::fat.gamekitdata.OrderRecord> orderDetector_ = new pbc::RepeatedField<global::fat.gamekitdata.OrderRecord>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::fat.gamekitdata.OrderRecord> OrderDetector {
      get { return orderDetector_; }
    }

    /// <summary>Field number for the "OrderRandom" field.</summary>
    public const int OrderRandomFieldNumber = 4;
    private static readonly pb::FieldCodec<global::fat.gamekitdata.OrderRecord> _repeated_orderRandom_codec
        = pb::FieldCodec.ForMessage(34, global::fat.gamekitdata.OrderRecord.Parser);
    private readonly pbc::RepeatedField<global::fat.gamekitdata.OrderRecord> orderRandom_ = new pbc::RepeatedField<global::fat.gamekitdata.OrderRecord>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::fat.gamekitdata.OrderRecord> OrderRandom {
      get { return orderRandom_; }
    }

    /// <summary>Field number for the "TotalFinished" field.</summary>
    public const int TotalFinishedFieldNumber = 5;
    private long totalFinished_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalFinished {
      get { return totalFinished_; }
      set {
        totalFinished_ = value;
      }
    }

    /// <summary>Field number for the "RecentActDffy" field.</summary>
    public const int RecentActDffyFieldNumber = 6;
    private static readonly pb::FieldCodec<int> _repeated_recentActDffy_codec
        = pb::FieldCodec.ForInt32(50);
    private readonly pbc::RepeatedField<int> recentActDffy_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 最近完成的受控订单的实际难度
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> RecentActDffy {
      get { return recentActDffy_; }
    }

    /// <summary>Field number for the "RecentPayDffy" field.</summary>
    public const int RecentPayDffyFieldNumber = 7;
    private static readonly pb::FieldCodec<int> _repeated_recentPayDffy_codec
        = pb::FieldCodec.ForInt32(58);
    private readonly pbc::RepeatedField<int> recentPayDffy_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 最近完成的受控订单的付出难度
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> RecentPayDffy {
      get { return recentPayDffy_; }
    }

    /// <summary>Field number for the "RecentStrategy" field.</summary>
    public const int RecentStrategyFieldNumber = 8;
    private int recentStrategy_;
    /// <summary>
    /// 最近使用的订单控制策略
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RecentStrategy {
      get { return recentStrategy_; }
      set {
        recentStrategy_ = value;
      }
    }

    /// <summary>Field number for the "RecentApiOrder" field.</summary>
    public const int RecentApiOrderFieldNumber = 9;
    private global::fat.gamekitdata.OrderRecord recentApiOrder_;
    /// <summary>
    /// 最近完成的API(配置)订单
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::fat.gamekitdata.OrderRecord RecentApiOrder {
      get { return recentApiOrder_; }
      set {
        recentApiOrder_ = value;
      }
    }

    /// <summary>Field number for the "RecentApiActDffy" field.</summary>
    public const int RecentApiActDffyFieldNumber = 10;
    private static readonly pb::FieldCodec<int> _repeated_recentApiActDffy_codec
        = pb::FieldCodec.ForInt32(82);
    private readonly pbc::RepeatedField<int> recentApiActDffy_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 最近完成的api订单的实际难度
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> RecentApiActDffy {
      get { return recentApiActDffy_; }
    }

    /// <summary>Field number for the "RecentApiPayDffy" field.</summary>
    public const int RecentApiPayDffyFieldNumber = 11;
    private static readonly pb::FieldCodec<int> _repeated_recentApiPayDffy_codec
        = pb::FieldCodec.ForInt32(90);
    private readonly pbc::RepeatedField<int> recentApiPayDffy_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 最近完成的api订单的付出难度
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> RecentApiPayDffy {
      get { return recentApiPayDffy_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OrderGroup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OrderGroup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!finished_.Equals(other.finished_)) return false;
      if(!orderCommon_.Equals(other.orderCommon_)) return false;
      if(!orderDetector_.Equals(other.orderDetector_)) return false;
      if(!orderRandom_.Equals(other.orderRandom_)) return false;
      if (TotalFinished != other.TotalFinished) return false;
      if(!recentActDffy_.Equals(other.recentActDffy_)) return false;
      if(!recentPayDffy_.Equals(other.recentPayDffy_)) return false;
      if (RecentStrategy != other.RecentStrategy) return false;
      if (!object.Equals(RecentApiOrder, other.RecentApiOrder)) return false;
      if(!recentApiActDffy_.Equals(other.recentApiActDffy_)) return false;
      if(!recentApiPayDffy_.Equals(other.recentApiPayDffy_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= finished_.GetHashCode();
      hash ^= orderCommon_.GetHashCode();
      hash ^= orderDetector_.GetHashCode();
      hash ^= orderRandom_.GetHashCode();
      if (TotalFinished != 0L) hash ^= TotalFinished.GetHashCode();
      hash ^= recentActDffy_.GetHashCode();
      hash ^= recentPayDffy_.GetHashCode();
      if (RecentStrategy != 0) hash ^= RecentStrategy.GetHashCode();
      if (recentApiOrder_ != null) hash ^= RecentApiOrder.GetHashCode();
      hash ^= recentApiActDffy_.GetHashCode();
      hash ^= recentApiPayDffy_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      finished_.WriteTo(output, _repeated_finished_codec);
      orderCommon_.WriteTo(output, _repeated_orderCommon_codec);
      orderDetector_.WriteTo(output, _repeated_orderDetector_codec);
      orderRandom_.WriteTo(output, _repeated_orderRandom_codec);
      if (TotalFinished != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(TotalFinished);
      }
      recentActDffy_.WriteTo(output, _repeated_recentActDffy_codec);
      recentPayDffy_.WriteTo(output, _repeated_recentPayDffy_codec);
      if (RecentStrategy != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(RecentStrategy);
      }
      if (recentApiOrder_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(RecentApiOrder);
      }
      recentApiActDffy_.WriteTo(output, _repeated_recentApiActDffy_codec);
      recentApiPayDffy_.WriteTo(output, _repeated_recentApiPayDffy_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      finished_.WriteTo(ref output, _repeated_finished_codec);
      orderCommon_.WriteTo(ref output, _repeated_orderCommon_codec);
      orderDetector_.WriteTo(ref output, _repeated_orderDetector_codec);
      orderRandom_.WriteTo(ref output, _repeated_orderRandom_codec);
      if (TotalFinished != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(TotalFinished);
      }
      recentActDffy_.WriteTo(ref output, _repeated_recentActDffy_codec);
      recentPayDffy_.WriteTo(ref output, _repeated_recentPayDffy_codec);
      if (RecentStrategy != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(RecentStrategy);
      }
      if (recentApiOrder_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(RecentApiOrder);
      }
      recentApiActDffy_.WriteTo(ref output, _repeated_recentApiActDffy_codec);
      recentApiPayDffy_.WriteTo(ref output, _repeated_recentApiPayDffy_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += finished_.CalculateSize(_repeated_finished_codec);
      size += orderCommon_.CalculateSize(_repeated_orderCommon_codec);
      size += orderDetector_.CalculateSize(_repeated_orderDetector_codec);
      size += orderRandom_.CalculateSize(_repeated_orderRandom_codec);
      if (TotalFinished != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalFinished);
      }
      size += recentActDffy_.CalculateSize(_repeated_recentActDffy_codec);
      size += recentPayDffy_.CalculateSize(_repeated_recentPayDffy_codec);
      if (RecentStrategy != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RecentStrategy);
      }
      if (recentApiOrder_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RecentApiOrder);
      }
      size += recentApiActDffy_.CalculateSize(_repeated_recentApiActDffy_codec);
      size += recentApiPayDffy_.CalculateSize(_repeated_recentApiPayDffy_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OrderGroup other) {
      if (other == null) {
        return;
      }
      finished_.Add(other.finished_);
      orderCommon_.Add(other.orderCommon_);
      orderDetector_.Add(other.orderDetector_);
      orderRandom_.Add(other.orderRandom_);
      if (other.TotalFinished != 0L) {
        TotalFinished = other.TotalFinished;
      }
      recentActDffy_.Add(other.recentActDffy_);
      recentPayDffy_.Add(other.recentPayDffy_);
      if (other.RecentStrategy != 0) {
        RecentStrategy = other.RecentStrategy;
      }
      if (other.recentApiOrder_ != null) {
        if (recentApiOrder_ == null) {
          RecentApiOrder = new global::fat.gamekitdata.OrderRecord();
        }
        RecentApiOrder.MergeFrom(other.RecentApiOrder);
      }
      recentApiActDffy_.Add(other.recentApiActDffy_);
      recentApiPayDffy_.Add(other.recentApiPayDffy_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            finished_.AddEntriesFrom(input, _repeated_finished_codec);
            break;
          }
          case 18: {
            orderCommon_.AddEntriesFrom(input, _repeated_orderCommon_codec);
            break;
          }
          case 26: {
            orderDetector_.AddEntriesFrom(input, _repeated_orderDetector_codec);
            break;
          }
          case 34: {
            orderRandom_.AddEntriesFrom(input, _repeated_orderRandom_codec);
            break;
          }
          case 40: {
            TotalFinished = input.ReadInt64();
            break;
          }
          case 50:
          case 48: {
            recentActDffy_.AddEntriesFrom(input, _repeated_recentActDffy_codec);
            break;
          }
          case 58:
          case 56: {
            recentPayDffy_.AddEntriesFrom(input, _repeated_recentPayDffy_codec);
            break;
          }
          case 64: {
            RecentStrategy = input.ReadInt32();
            break;
          }
          case 74: {
            if (recentApiOrder_ == null) {
              RecentApiOrder = new global::fat.gamekitdata.OrderRecord();
            }
            input.ReadMessage(RecentApiOrder);
            break;
          }
          case 82:
          case 80: {
            recentApiActDffy_.AddEntriesFrom(input, _repeated_recentApiActDffy_codec);
            break;
          }
          case 90:
          case 88: {
            recentApiPayDffy_.AddEntriesFrom(input, _repeated_recentApiPayDffy_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            finished_.AddEntriesFrom(ref input, _repeated_finished_codec);
            break;
          }
          case 18: {
            orderCommon_.AddEntriesFrom(ref input, _repeated_orderCommon_codec);
            break;
          }
          case 26: {
            orderDetector_.AddEntriesFrom(ref input, _repeated_orderDetector_codec);
            break;
          }
          case 34: {
            orderRandom_.AddEntriesFrom(ref input, _repeated_orderRandom_codec);
            break;
          }
          case 40: {
            TotalFinished = input.ReadInt64();
            break;
          }
          case 50:
          case 48: {
            recentActDffy_.AddEntriesFrom(ref input, _repeated_recentActDffy_codec);
            break;
          }
          case 58:
          case 56: {
            recentPayDffy_.AddEntriesFrom(ref input, _repeated_recentPayDffy_codec);
            break;
          }
          case 64: {
            RecentStrategy = input.ReadInt32();
            break;
          }
          case 74: {
            if (recentApiOrder_ == null) {
              RecentApiOrder = new global::fat.gamekitdata.OrderRecord();
            }
            input.ReadMessage(RecentApiOrder);
            break;
          }
          case 82:
          case 80: {
            recentApiActDffy_.AddEntriesFrom(ref input, _repeated_recentApiActDffy_codec);
            break;
          }
          case 90:
          case 88: {
            recentApiPayDffy_.AddEntriesFrom(ref input, _repeated_recentApiPayDffy_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
