// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: gamekitdata/daily_event.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.gamekitdata {

  /// <summary>Holder for reflection information generated from gamekitdata/daily_event.proto</summary>
  public static partial class DailyEventReflection {

    #region Descriptor
    /// <summary>File descriptor for gamekitdata/daily_event.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DailyEventReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch1nYW1la2l0ZGF0YS9kYWlseV9ldmVudC5wcm90bxILZ2FtZWtpdGRhdGEa",
            "GGdhbWVraXRkYXRhL3NoYXJlZC5wcm90byJDCgZUYXNrREUSCgoCSWQYASAB",
            "KAUSDQoFU3RhdGUYAiABKAUSDwoHUmVxdWlyZRgDIAEoBRINCgVWYWx1ZRgE",
            "IAEoBSKIBAoKRGFpbHlFdmVudBIRCglSZWZyZXNoVFMYASABKAMSNwoIUmVm",
            "VmFsdWUYAiADKAsyJS5nYW1la2l0ZGF0YS5EYWlseUV2ZW50LlJlZlZhbHVl",
            "RW50cnkSDwoHU3RhcnRUUxgDIAEoAxIQCghBY3RpdmVJZBgKIAEoBRISCgpH",
            "cm91cEluZGV4GAsgASgFEi8KBFRhc2sYDCADKAsyIS5nYW1la2l0ZGF0YS5E",
            "YWlseUV2ZW50LlRhc2tFbnRyeRITCgtNaWxlc3RvbmVJZBgUIAEoBRIWCg5N",
            "aWxlc3RvbmVWYWx1ZRgVIAEoBRJFCg9NaWxlc3RvbmVSZWNvcmQYFiADKAsy",
            "LC5nYW1la2l0ZGF0YS5EYWlseUV2ZW50Lk1pbGVzdG9uZVJlY29yZEVudHJ5",
            "EicKCEFueVN0YXRlGGQgAygLMhUuZ2FtZWtpdGRhdGEuQW55U3RhdGUaLwoN",
            "UmVmVmFsdWVFbnRyeRILCgNrZXkYASABKAUSDQoFdmFsdWUYAiABKAU6AjgB",
            "GkAKCVRhc2tFbnRyeRILCgNrZXkYASABKAUSIgoFdmFsdWUYAiABKAsyEy5n",
            "YW1la2l0ZGF0YS5UYXNrREU6AjgBGjYKFE1pbGVzdG9uZVJlY29yZEVudHJ5",
            "EgsKA2tleRgBIAEoBRINCgV2YWx1ZRgCIAEoBToCOAFCRVoxZ2l0bGFiLmZ1",
            "bnBsdXMuaW8vZmF0L2NvbmYvZ2VuL2dvbGFuZy9nYW1la2l0ZGF0YaoCD2Zh",
            "dC5nYW1la2l0ZGF0YWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::fat.gamekitdata.SharedReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.gamekitdata.TaskDE), global::fat.gamekitdata.TaskDE.Parser, new[]{ "Id", "State", "Require", "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.gamekitdata.DailyEvent), global::fat.gamekitdata.DailyEvent.Parser, new[]{ "RefreshTS", "RefValue", "StartTS", "ActiveId", "GroupIndex", "Task", "MilestoneId", "MilestoneValue", "MilestoneRecord", "AnyState" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class TaskDE : pb::IMessage<TaskDE>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TaskDE> _parser = new pb::MessageParser<TaskDE>(() => new TaskDE());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TaskDE> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.gamekitdata.DailyEventReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaskDE() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaskDE(TaskDE other) : this() {
      id_ = other.id_;
      state_ = other.state_;
      require_ = other.require_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaskDE Clone() {
      return new TaskDE(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "State" field.</summary>
    public const int StateFieldNumber = 2;
    private int state_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "Require" field.</summary>
    public const int RequireFieldNumber = 3;
    private int require_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Require {
      get { return require_; }
      set {
        require_ = value;
      }
    }

    /// <summary>Field number for the "Value" field.</summary>
    public const int ValueFieldNumber = 4;
    private int value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TaskDE);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TaskDE other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (State != other.State) return false;
      if (Require != other.Require) return false;
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (State != 0) hash ^= State.GetHashCode();
      if (Require != 0) hash ^= Require.GetHashCode();
      if (Value != 0) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (State != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(State);
      }
      if (Require != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Require);
      }
      if (Value != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (State != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(State);
      }
      if (Require != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Require);
      }
      if (Value != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (State != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(State);
      }
      if (Require != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Require);
      }
      if (Value != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TaskDE other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.State != 0) {
        State = other.State;
      }
      if (other.Require != 0) {
        Require = other.Require;
      }
      if (other.Value != 0) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            State = input.ReadInt32();
            break;
          }
          case 24: {
            Require = input.ReadInt32();
            break;
          }
          case 32: {
            Value = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            State = input.ReadInt32();
            break;
          }
          case 24: {
            Require = input.ReadInt32();
            break;
          }
          case 32: {
            Value = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DailyEvent : pb::IMessage<DailyEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DailyEvent> _parser = new pb::MessageParser<DailyEvent>(() => new DailyEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DailyEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.gamekitdata.DailyEventReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DailyEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DailyEvent(DailyEvent other) : this() {
      refreshTS_ = other.refreshTS_;
      refValue_ = other.refValue_.Clone();
      startTS_ = other.startTS_;
      activeId_ = other.activeId_;
      groupIndex_ = other.groupIndex_;
      task_ = other.task_.Clone();
      milestoneId_ = other.milestoneId_;
      milestoneValue_ = other.milestoneValue_;
      milestoneRecord_ = other.milestoneRecord_.Clone();
      anyState_ = other.anyState_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DailyEvent Clone() {
      return new DailyEvent(this);
    }

    /// <summary>Field number for the "RefreshTS" field.</summary>
    public const int RefreshTSFieldNumber = 1;
    private long refreshTS_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RefreshTS {
      get { return refreshTS_; }
      set {
        refreshTS_ = value;
      }
    }

    /// <summary>Field number for the "RefValue" field.</summary>
    public const int RefValueFieldNumber = 2;
    private static readonly pbc::MapField<int, int>.Codec _map_refValue_codec
        = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForInt32(16, 0), 18);
    private readonly pbc::MapField<int, int> refValue_ = new pbc::MapField<int, int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, int> RefValue {
      get { return refValue_; }
    }

    /// <summary>Field number for the "StartTS" field.</summary>
    public const int StartTSFieldNumber = 3;
    private long startTS_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long StartTS {
      get { return startTS_; }
      set {
        startTS_ = value;
      }
    }

    /// <summary>Field number for the "ActiveId" field.</summary>
    public const int ActiveIdFieldNumber = 10;
    private int activeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ActiveId {
      get { return activeId_; }
      set {
        activeId_ = value;
      }
    }

    /// <summary>Field number for the "GroupIndex" field.</summary>
    public const int GroupIndexFieldNumber = 11;
    private int groupIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GroupIndex {
      get { return groupIndex_; }
      set {
        groupIndex_ = value;
      }
    }

    /// <summary>Field number for the "Task" field.</summary>
    public const int TaskFieldNumber = 12;
    private static readonly pbc::MapField<int, global::fat.gamekitdata.TaskDE>.Codec _map_task_codec
        = new pbc::MapField<int, global::fat.gamekitdata.TaskDE>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::fat.gamekitdata.TaskDE.Parser), 98);
    private readonly pbc::MapField<int, global::fat.gamekitdata.TaskDE> task_ = new pbc::MapField<int, global::fat.gamekitdata.TaskDE>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::fat.gamekitdata.TaskDE> Task {
      get { return task_; }
    }

    /// <summary>Field number for the "MilestoneId" field.</summary>
    public const int MilestoneIdFieldNumber = 20;
    private int milestoneId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MilestoneId {
      get { return milestoneId_; }
      set {
        milestoneId_ = value;
      }
    }

    /// <summary>Field number for the "MilestoneValue" field.</summary>
    public const int MilestoneValueFieldNumber = 21;
    private int milestoneValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MilestoneValue {
      get { return milestoneValue_; }
      set {
        milestoneValue_ = value;
      }
    }

    /// <summary>Field number for the "MilestoneRecord" field.</summary>
    public const int MilestoneRecordFieldNumber = 22;
    private static readonly pbc::MapField<int, int>.Codec _map_milestoneRecord_codec
        = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForInt32(16, 0), 178);
    private readonly pbc::MapField<int, int> milestoneRecord_ = new pbc::MapField<int, int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, int> MilestoneRecord {
      get { return milestoneRecord_; }
    }

    /// <summary>Field number for the "AnyState" field.</summary>
    public const int AnyStateFieldNumber = 100;
    private static readonly pb::FieldCodec<global::fat.gamekitdata.AnyState> _repeated_anyState_codec
        = pb::FieldCodec.ForMessage(802, global::fat.gamekitdata.AnyState.Parser);
    private readonly pbc::RepeatedField<global::fat.gamekitdata.AnyState> anyState_ = new pbc::RepeatedField<global::fat.gamekitdata.AnyState>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::fat.gamekitdata.AnyState> AnyState {
      get { return anyState_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DailyEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DailyEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RefreshTS != other.RefreshTS) return false;
      if (!RefValue.Equals(other.RefValue)) return false;
      if (StartTS != other.StartTS) return false;
      if (ActiveId != other.ActiveId) return false;
      if (GroupIndex != other.GroupIndex) return false;
      if (!Task.Equals(other.Task)) return false;
      if (MilestoneId != other.MilestoneId) return false;
      if (MilestoneValue != other.MilestoneValue) return false;
      if (!MilestoneRecord.Equals(other.MilestoneRecord)) return false;
      if(!anyState_.Equals(other.anyState_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RefreshTS != 0L) hash ^= RefreshTS.GetHashCode();
      hash ^= RefValue.GetHashCode();
      if (StartTS != 0L) hash ^= StartTS.GetHashCode();
      if (ActiveId != 0) hash ^= ActiveId.GetHashCode();
      if (GroupIndex != 0) hash ^= GroupIndex.GetHashCode();
      hash ^= Task.GetHashCode();
      if (MilestoneId != 0) hash ^= MilestoneId.GetHashCode();
      if (MilestoneValue != 0) hash ^= MilestoneValue.GetHashCode();
      hash ^= MilestoneRecord.GetHashCode();
      hash ^= anyState_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RefreshTS != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(RefreshTS);
      }
      refValue_.WriteTo(output, _map_refValue_codec);
      if (StartTS != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(StartTS);
      }
      if (ActiveId != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(ActiveId);
      }
      if (GroupIndex != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(GroupIndex);
      }
      task_.WriteTo(output, _map_task_codec);
      if (MilestoneId != 0) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(MilestoneId);
      }
      if (MilestoneValue != 0) {
        output.WriteRawTag(168, 1);
        output.WriteInt32(MilestoneValue);
      }
      milestoneRecord_.WriteTo(output, _map_milestoneRecord_codec);
      anyState_.WriteTo(output, _repeated_anyState_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RefreshTS != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(RefreshTS);
      }
      refValue_.WriteTo(ref output, _map_refValue_codec);
      if (StartTS != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(StartTS);
      }
      if (ActiveId != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(ActiveId);
      }
      if (GroupIndex != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(GroupIndex);
      }
      task_.WriteTo(ref output, _map_task_codec);
      if (MilestoneId != 0) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(MilestoneId);
      }
      if (MilestoneValue != 0) {
        output.WriteRawTag(168, 1);
        output.WriteInt32(MilestoneValue);
      }
      milestoneRecord_.WriteTo(ref output, _map_milestoneRecord_codec);
      anyState_.WriteTo(ref output, _repeated_anyState_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RefreshTS != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RefreshTS);
      }
      size += refValue_.CalculateSize(_map_refValue_codec);
      if (StartTS != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartTS);
      }
      if (ActiveId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ActiveId);
      }
      if (GroupIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GroupIndex);
      }
      size += task_.CalculateSize(_map_task_codec);
      if (MilestoneId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(MilestoneId);
      }
      if (MilestoneValue != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(MilestoneValue);
      }
      size += milestoneRecord_.CalculateSize(_map_milestoneRecord_codec);
      size += anyState_.CalculateSize(_repeated_anyState_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DailyEvent other) {
      if (other == null) {
        return;
      }
      if (other.RefreshTS != 0L) {
        RefreshTS = other.RefreshTS;
      }
      refValue_.Add(other.refValue_);
      if (other.StartTS != 0L) {
        StartTS = other.StartTS;
      }
      if (other.ActiveId != 0) {
        ActiveId = other.ActiveId;
      }
      if (other.GroupIndex != 0) {
        GroupIndex = other.GroupIndex;
      }
      task_.Add(other.task_);
      if (other.MilestoneId != 0) {
        MilestoneId = other.MilestoneId;
      }
      if (other.MilestoneValue != 0) {
        MilestoneValue = other.MilestoneValue;
      }
      milestoneRecord_.Add(other.milestoneRecord_);
      anyState_.Add(other.anyState_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RefreshTS = input.ReadInt64();
            break;
          }
          case 18: {
            refValue_.AddEntriesFrom(input, _map_refValue_codec);
            break;
          }
          case 24: {
            StartTS = input.ReadInt64();
            break;
          }
          case 80: {
            ActiveId = input.ReadInt32();
            break;
          }
          case 88: {
            GroupIndex = input.ReadInt32();
            break;
          }
          case 98: {
            task_.AddEntriesFrom(input, _map_task_codec);
            break;
          }
          case 160: {
            MilestoneId = input.ReadInt32();
            break;
          }
          case 168: {
            MilestoneValue = input.ReadInt32();
            break;
          }
          case 178: {
            milestoneRecord_.AddEntriesFrom(input, _map_milestoneRecord_codec);
            break;
          }
          case 802: {
            anyState_.AddEntriesFrom(input, _repeated_anyState_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RefreshTS = input.ReadInt64();
            break;
          }
          case 18: {
            refValue_.AddEntriesFrom(ref input, _map_refValue_codec);
            break;
          }
          case 24: {
            StartTS = input.ReadInt64();
            break;
          }
          case 80: {
            ActiveId = input.ReadInt32();
            break;
          }
          case 88: {
            GroupIndex = input.ReadInt32();
            break;
          }
          case 98: {
            task_.AddEntriesFrom(ref input, _map_task_codec);
            break;
          }
          case 160: {
            MilestoneId = input.ReadInt32();
            break;
          }
          case 168: {
            MilestoneValue = input.ReadInt32();
            break;
          }
          case 178: {
            milestoneRecord_.AddEntriesFrom(ref input, _map_milestoneRecord_codec);
            break;
          }
          case 802: {
            anyState_.AddEntriesFrom(ref input, _repeated_anyState_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
