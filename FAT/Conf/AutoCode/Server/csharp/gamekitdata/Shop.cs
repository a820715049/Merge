// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: gamekitdata/shop.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.gamekitdata {

  /// <summary>Holder for reflection information generated from gamekitdata/shop.proto</summary>
  public static partial class ShopReflection {

    #region Descriptor
    /// <summary>File descriptor for gamekitdata/shop.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ShopReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChZnYW1la2l0ZGF0YS9zaG9wLnByb3RvEgtnYW1la2l0ZGF0YSI3CghTaG9w",
            "SW5mbxIrCgxTaG9wRGF0YUxpc3QYAiADKAsyFS5nYW1la2l0ZGF0YS5TaG9w",
            "RGF0YSKXAgoIU2hvcERhdGESDwoHQm9hcmRJZBgBIAEoBRIbChNFbmVyZ3lT",
            "aG9wUmVzZXRUaW1lGAIgASgDEjkKD0VuZXJneUdvb2RzRGF0YRgDIAMoCzIg",
            "LmdhbWVraXRkYXRhLkVuZXJneVNob3BHb29kc0RhdGESGgoSQ2hlc3NTaG9w",
            "UmVzZXRUaW1lGAQgASgDEkMKFFJhbmRvbUNoZXNzR29vZHNEYXRhGAUgAygL",
            "MiUuZ2FtZWtpdGRhdGEuUmFuZG9tQ2hlc3NTaG9wR29vZHNEYXRhEkEKE09y",
            "ZGVyQ2hlc3NHb29kc0RhdGEYBiADKAsyJC5nYW1la2l0ZGF0YS5PcmRlckNo",
            "ZXNzU2hvcEdvb2RzRGF0YSI3ChNFbmVyZ3lTaG9wR29vZHNEYXRhEg4KBkdp",
            "cmRJZBgBIAEoBRIQCghCdXlDb3VudBgCIAEoBSJRChhSYW5kb21DaGVzc1No",
            "b3BHb29kc0RhdGESDgoGR2lyZElkGAEgASgFEhAKCEJ1eUNvdW50GAIgASgF",
            "EhMKC1NlbGxHb29kc0lkGAMgASgFImgKF09yZGVyQ2hlc3NTaG9wR29vZHNE",
            "YXRhEg4KBkdpcmRJZBgBIAEoBRIQCghCdXlDb3VudBgCIAEoBRITCgtTZWxs",
            "R29vZHNJZBgDIAEoBRIWCg5TZWxsR29vZHNQcmljZRgEIAEoBUJFWjFnaXRs",
            "YWIuZnVucGx1cy5pby9mYXQvY29uZi9nZW4vZ29sYW5nL2dhbWVraXRkYXRh",
            "qgIPZmF0LmdhbWVraXRkYXRhYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.gamekitdata.ShopInfo), global::fat.gamekitdata.ShopInfo.Parser, new[]{ "ShopDataList" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.gamekitdata.ShopData), global::fat.gamekitdata.ShopData.Parser, new[]{ "BoardId", "EnergyShopResetTime", "EnergyGoodsData", "ChessShopResetTime", "RandomChessGoodsData", "OrderChessGoodsData" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.gamekitdata.EnergyShopGoodsData), global::fat.gamekitdata.EnergyShopGoodsData.Parser, new[]{ "GirdId", "BuyCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.gamekitdata.RandomChessShopGoodsData), global::fat.gamekitdata.RandomChessShopGoodsData.Parser, new[]{ "GirdId", "BuyCount", "SellGoodsId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.gamekitdata.OrderChessShopGoodsData), global::fat.gamekitdata.OrderChessShopGoodsData.Parser, new[]{ "GirdId", "BuyCount", "SellGoodsId", "SellGoodsPrice" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ShopInfo : pb::IMessage<ShopInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ShopInfo> _parser = new pb::MessageParser<ShopInfo>(() => new ShopInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ShopInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.gamekitdata.ShopReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShopInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShopInfo(ShopInfo other) : this() {
      shopDataList_ = other.shopDataList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShopInfo Clone() {
      return new ShopInfo(this);
    }

    /// <summary>Field number for the "ShopDataList" field.</summary>
    public const int ShopDataListFieldNumber = 2;
    private static readonly pb::FieldCodec<global::fat.gamekitdata.ShopData> _repeated_shopDataList_codec
        = pb::FieldCodec.ForMessage(18, global::fat.gamekitdata.ShopData.Parser);
    private readonly pbc::RepeatedField<global::fat.gamekitdata.ShopData> shopDataList_ = new pbc::RepeatedField<global::fat.gamekitdata.ShopData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::fat.gamekitdata.ShopData> ShopDataList {
      get { return shopDataList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ShopInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ShopInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!shopDataList_.Equals(other.shopDataList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= shopDataList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      shopDataList_.WriteTo(output, _repeated_shopDataList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      shopDataList_.WriteTo(ref output, _repeated_shopDataList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += shopDataList_.CalculateSize(_repeated_shopDataList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ShopInfo other) {
      if (other == null) {
        return;
      }
      shopDataList_.Add(other.shopDataList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            shopDataList_.AddEntriesFrom(input, _repeated_shopDataList_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            shopDataList_.AddEntriesFrom(ref input, _repeated_shopDataList_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ShopData : pb::IMessage<ShopData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ShopData> _parser = new pb::MessageParser<ShopData>(() => new ShopData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ShopData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.gamekitdata.ShopReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShopData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShopData(ShopData other) : this() {
      boardId_ = other.boardId_;
      energyShopResetTime_ = other.energyShopResetTime_;
      energyGoodsData_ = other.energyGoodsData_.Clone();
      chessShopResetTime_ = other.chessShopResetTime_;
      randomChessGoodsData_ = other.randomChessGoodsData_.Clone();
      orderChessGoodsData_ = other.orderChessGoodsData_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShopData Clone() {
      return new ShopData(this);
    }

    /// <summary>Field number for the "BoardId" field.</summary>
    public const int BoardIdFieldNumber = 1;
    private int boardId_;
    /// <summary>
    ///商店数据和棋盘id绑定
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BoardId {
      get { return boardId_; }
      set {
        boardId_ = value;
      }
    }

    /// <summary>Field number for the "EnergyShopResetTime" field.</summary>
    public const int EnergyShopResetTimeFieldNumber = 2;
    private long energyShopResetTime_;
    /// <summary>
    ///体力商店下次重置时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EnergyShopResetTime {
      get { return energyShopResetTime_; }
      set {
        energyShopResetTime_ = value;
      }
    }

    /// <summary>Field number for the "EnergyGoodsData" field.</summary>
    public const int EnergyGoodsDataFieldNumber = 3;
    private static readonly pb::FieldCodec<global::fat.gamekitdata.EnergyShopGoodsData> _repeated_energyGoodsData_codec
        = pb::FieldCodec.ForMessage(26, global::fat.gamekitdata.EnergyShopGoodsData.Parser);
    private readonly pbc::RepeatedField<global::fat.gamekitdata.EnergyShopGoodsData> energyGoodsData_ = new pbc::RepeatedField<global::fat.gamekitdata.EnergyShopGoodsData>();
    /// <summary>
    ///体力商店商品数据
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::fat.gamekitdata.EnergyShopGoodsData> EnergyGoodsData {
      get { return energyGoodsData_; }
    }

    /// <summary>Field number for the "ChessShopResetTime" field.</summary>
    public const int ChessShopResetTimeFieldNumber = 4;
    private long chessShopResetTime_;
    /// <summary>
    ///棋子商店下次重置时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ChessShopResetTime {
      get { return chessShopResetTime_; }
      set {
        chessShopResetTime_ = value;
      }
    }

    /// <summary>Field number for the "RandomChessGoodsData" field.</summary>
    public const int RandomChessGoodsDataFieldNumber = 5;
    private static readonly pb::FieldCodec<global::fat.gamekitdata.RandomChessShopGoodsData> _repeated_randomChessGoodsData_codec
        = pb::FieldCodec.ForMessage(42, global::fat.gamekitdata.RandomChessShopGoodsData.Parser);
    private readonly pbc::RepeatedField<global::fat.gamekitdata.RandomChessShopGoodsData> randomChessGoodsData_ = new pbc::RepeatedField<global::fat.gamekitdata.RandomChessShopGoodsData>();
    /// <summary>
    ///权重随机棋子商店商品数据
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::fat.gamekitdata.RandomChessShopGoodsData> RandomChessGoodsData {
      get { return randomChessGoodsData_; }
    }

    /// <summary>Field number for the "OrderChessGoodsData" field.</summary>
    public const int OrderChessGoodsDataFieldNumber = 6;
    private static readonly pb::FieldCodec<global::fat.gamekitdata.OrderChessShopGoodsData> _repeated_orderChessGoodsData_codec
        = pb::FieldCodec.ForMessage(50, global::fat.gamekitdata.OrderChessShopGoodsData.Parser);
    private readonly pbc::RepeatedField<global::fat.gamekitdata.OrderChessShopGoodsData> orderChessGoodsData_ = new pbc::RepeatedField<global::fat.gamekitdata.OrderChessShopGoodsData>();
    /// <summary>
    ///订单随机棋子商店商品数据
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::fat.gamekitdata.OrderChessShopGoodsData> OrderChessGoodsData {
      get { return orderChessGoodsData_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ShopData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ShopData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BoardId != other.BoardId) return false;
      if (EnergyShopResetTime != other.EnergyShopResetTime) return false;
      if(!energyGoodsData_.Equals(other.energyGoodsData_)) return false;
      if (ChessShopResetTime != other.ChessShopResetTime) return false;
      if(!randomChessGoodsData_.Equals(other.randomChessGoodsData_)) return false;
      if(!orderChessGoodsData_.Equals(other.orderChessGoodsData_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BoardId != 0) hash ^= BoardId.GetHashCode();
      if (EnergyShopResetTime != 0L) hash ^= EnergyShopResetTime.GetHashCode();
      hash ^= energyGoodsData_.GetHashCode();
      if (ChessShopResetTime != 0L) hash ^= ChessShopResetTime.GetHashCode();
      hash ^= randomChessGoodsData_.GetHashCode();
      hash ^= orderChessGoodsData_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (BoardId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BoardId);
      }
      if (EnergyShopResetTime != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(EnergyShopResetTime);
      }
      energyGoodsData_.WriteTo(output, _repeated_energyGoodsData_codec);
      if (ChessShopResetTime != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(ChessShopResetTime);
      }
      randomChessGoodsData_.WriteTo(output, _repeated_randomChessGoodsData_codec);
      orderChessGoodsData_.WriteTo(output, _repeated_orderChessGoodsData_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (BoardId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(BoardId);
      }
      if (EnergyShopResetTime != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(EnergyShopResetTime);
      }
      energyGoodsData_.WriteTo(ref output, _repeated_energyGoodsData_codec);
      if (ChessShopResetTime != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(ChessShopResetTime);
      }
      randomChessGoodsData_.WriteTo(ref output, _repeated_randomChessGoodsData_codec);
      orderChessGoodsData_.WriteTo(ref output, _repeated_orderChessGoodsData_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BoardId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BoardId);
      }
      if (EnergyShopResetTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EnergyShopResetTime);
      }
      size += energyGoodsData_.CalculateSize(_repeated_energyGoodsData_codec);
      if (ChessShopResetTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ChessShopResetTime);
      }
      size += randomChessGoodsData_.CalculateSize(_repeated_randomChessGoodsData_codec);
      size += orderChessGoodsData_.CalculateSize(_repeated_orderChessGoodsData_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ShopData other) {
      if (other == null) {
        return;
      }
      if (other.BoardId != 0) {
        BoardId = other.BoardId;
      }
      if (other.EnergyShopResetTime != 0L) {
        EnergyShopResetTime = other.EnergyShopResetTime;
      }
      energyGoodsData_.Add(other.energyGoodsData_);
      if (other.ChessShopResetTime != 0L) {
        ChessShopResetTime = other.ChessShopResetTime;
      }
      randomChessGoodsData_.Add(other.randomChessGoodsData_);
      orderChessGoodsData_.Add(other.orderChessGoodsData_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BoardId = input.ReadInt32();
            break;
          }
          case 16: {
            EnergyShopResetTime = input.ReadInt64();
            break;
          }
          case 26: {
            energyGoodsData_.AddEntriesFrom(input, _repeated_energyGoodsData_codec);
            break;
          }
          case 32: {
            ChessShopResetTime = input.ReadInt64();
            break;
          }
          case 42: {
            randomChessGoodsData_.AddEntriesFrom(input, _repeated_randomChessGoodsData_codec);
            break;
          }
          case 50: {
            orderChessGoodsData_.AddEntriesFrom(input, _repeated_orderChessGoodsData_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BoardId = input.ReadInt32();
            break;
          }
          case 16: {
            EnergyShopResetTime = input.ReadInt64();
            break;
          }
          case 26: {
            energyGoodsData_.AddEntriesFrom(ref input, _repeated_energyGoodsData_codec);
            break;
          }
          case 32: {
            ChessShopResetTime = input.ReadInt64();
            break;
          }
          case 42: {
            randomChessGoodsData_.AddEntriesFrom(ref input, _repeated_randomChessGoodsData_codec);
            break;
          }
          case 50: {
            orderChessGoodsData_.AddEntriesFrom(ref input, _repeated_orderChessGoodsData_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EnergyShopGoodsData : pb::IMessage<EnergyShopGoodsData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EnergyShopGoodsData> _parser = new pb::MessageParser<EnergyShopGoodsData>(() => new EnergyShopGoodsData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EnergyShopGoodsData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.gamekitdata.ShopReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnergyShopGoodsData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnergyShopGoodsData(EnergyShopGoodsData other) : this() {
      girdId_ = other.girdId_;
      buyCount_ = other.buyCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnergyShopGoodsData Clone() {
      return new EnergyShopGoodsData(this);
    }

    /// <summary>Field number for the "GirdId" field.</summary>
    public const int GirdIdFieldNumber = 1;
    private int girdId_;
    /// <summary>
    ///商品所属格子id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GirdId {
      get { return girdId_; }
      set {
        girdId_ = value;
      }
    }

    /// <summary>Field number for the "BuyCount" field.</summary>
    public const int BuyCountFieldNumber = 2;
    private int buyCount_;
    /// <summary>
    ///该商品今日总共的购买次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BuyCount {
      get { return buyCount_; }
      set {
        buyCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EnergyShopGoodsData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EnergyShopGoodsData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GirdId != other.GirdId) return false;
      if (BuyCount != other.BuyCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GirdId != 0) hash ^= GirdId.GetHashCode();
      if (BuyCount != 0) hash ^= BuyCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GirdId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(GirdId);
      }
      if (BuyCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BuyCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GirdId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(GirdId);
      }
      if (BuyCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BuyCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GirdId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GirdId);
      }
      if (BuyCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BuyCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EnergyShopGoodsData other) {
      if (other == null) {
        return;
      }
      if (other.GirdId != 0) {
        GirdId = other.GirdId;
      }
      if (other.BuyCount != 0) {
        BuyCount = other.BuyCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GirdId = input.ReadInt32();
            break;
          }
          case 16: {
            BuyCount = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GirdId = input.ReadInt32();
            break;
          }
          case 16: {
            BuyCount = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RandomChessShopGoodsData : pb::IMessage<RandomChessShopGoodsData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RandomChessShopGoodsData> _parser = new pb::MessageParser<RandomChessShopGoodsData>(() => new RandomChessShopGoodsData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RandomChessShopGoodsData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.gamekitdata.ShopReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RandomChessShopGoodsData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RandomChessShopGoodsData(RandomChessShopGoodsData other) : this() {
      girdId_ = other.girdId_;
      buyCount_ = other.buyCount_;
      sellGoodsId_ = other.sellGoodsId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RandomChessShopGoodsData Clone() {
      return new RandomChessShopGoodsData(this);
    }

    /// <summary>Field number for the "GirdId" field.</summary>
    public const int GirdIdFieldNumber = 1;
    private int girdId_;
    /// <summary>
    ///商品所属格子id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GirdId {
      get { return girdId_; }
      set {
        girdId_ = value;
      }
    }

    /// <summary>Field number for the "BuyCount" field.</summary>
    public const int BuyCountFieldNumber = 2;
    private int buyCount_;
    /// <summary>
    ///该格子商品当前购买次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BuyCount {
      get { return buyCount_; }
      set {
        buyCount_ = value;
      }
    }

    /// <summary>Field number for the "SellGoodsId" field.</summary>
    public const int SellGoodsIdFieldNumber = 3;
    private int sellGoodsId_;
    /// <summary>
    ///该格子上目前正在卖的商品id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SellGoodsId {
      get { return sellGoodsId_; }
      set {
        sellGoodsId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RandomChessShopGoodsData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RandomChessShopGoodsData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GirdId != other.GirdId) return false;
      if (BuyCount != other.BuyCount) return false;
      if (SellGoodsId != other.SellGoodsId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GirdId != 0) hash ^= GirdId.GetHashCode();
      if (BuyCount != 0) hash ^= BuyCount.GetHashCode();
      if (SellGoodsId != 0) hash ^= SellGoodsId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GirdId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(GirdId);
      }
      if (BuyCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BuyCount);
      }
      if (SellGoodsId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(SellGoodsId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GirdId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(GirdId);
      }
      if (BuyCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BuyCount);
      }
      if (SellGoodsId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(SellGoodsId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GirdId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GirdId);
      }
      if (BuyCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BuyCount);
      }
      if (SellGoodsId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SellGoodsId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RandomChessShopGoodsData other) {
      if (other == null) {
        return;
      }
      if (other.GirdId != 0) {
        GirdId = other.GirdId;
      }
      if (other.BuyCount != 0) {
        BuyCount = other.BuyCount;
      }
      if (other.SellGoodsId != 0) {
        SellGoodsId = other.SellGoodsId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GirdId = input.ReadInt32();
            break;
          }
          case 16: {
            BuyCount = input.ReadInt32();
            break;
          }
          case 24: {
            SellGoodsId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GirdId = input.ReadInt32();
            break;
          }
          case 16: {
            BuyCount = input.ReadInt32();
            break;
          }
          case 24: {
            SellGoodsId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class OrderChessShopGoodsData : pb::IMessage<OrderChessShopGoodsData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OrderChessShopGoodsData> _parser = new pb::MessageParser<OrderChessShopGoodsData>(() => new OrderChessShopGoodsData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OrderChessShopGoodsData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.gamekitdata.ShopReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderChessShopGoodsData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderChessShopGoodsData(OrderChessShopGoodsData other) : this() {
      girdId_ = other.girdId_;
      buyCount_ = other.buyCount_;
      sellGoodsId_ = other.sellGoodsId_;
      sellGoodsPrice_ = other.sellGoodsPrice_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrderChessShopGoodsData Clone() {
      return new OrderChessShopGoodsData(this);
    }

    /// <summary>Field number for the "GirdId" field.</summary>
    public const int GirdIdFieldNumber = 1;
    private int girdId_;
    /// <summary>
    ///商品所属格子id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GirdId {
      get { return girdId_; }
      set {
        girdId_ = value;
      }
    }

    /// <summary>Field number for the "BuyCount" field.</summary>
    public const int BuyCountFieldNumber = 2;
    private int buyCount_;
    /// <summary>
    ///该格子商品当前购买次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BuyCount {
      get { return buyCount_; }
      set {
        buyCount_ = value;
      }
    }

    /// <summary>Field number for the "SellGoodsId" field.</summary>
    public const int SellGoodsIdFieldNumber = 3;
    private int sellGoodsId_;
    /// <summary>
    ///该格子上目前正在卖的商品id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SellGoodsId {
      get { return sellGoodsId_; }
      set {
        sellGoodsId_ = value;
      }
    }

    /// <summary>Field number for the "SellGoodsPrice" field.</summary>
    public const int SellGoodsPriceFieldNumber = 4;
    private int sellGoodsPrice_;
    /// <summary>
    ///该格子上目前正在卖的商品价格
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SellGoodsPrice {
      get { return sellGoodsPrice_; }
      set {
        sellGoodsPrice_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OrderChessShopGoodsData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OrderChessShopGoodsData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GirdId != other.GirdId) return false;
      if (BuyCount != other.BuyCount) return false;
      if (SellGoodsId != other.SellGoodsId) return false;
      if (SellGoodsPrice != other.SellGoodsPrice) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GirdId != 0) hash ^= GirdId.GetHashCode();
      if (BuyCount != 0) hash ^= BuyCount.GetHashCode();
      if (SellGoodsId != 0) hash ^= SellGoodsId.GetHashCode();
      if (SellGoodsPrice != 0) hash ^= SellGoodsPrice.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GirdId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(GirdId);
      }
      if (BuyCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BuyCount);
      }
      if (SellGoodsId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(SellGoodsId);
      }
      if (SellGoodsPrice != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(SellGoodsPrice);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GirdId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(GirdId);
      }
      if (BuyCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BuyCount);
      }
      if (SellGoodsId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(SellGoodsId);
      }
      if (SellGoodsPrice != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(SellGoodsPrice);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GirdId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GirdId);
      }
      if (BuyCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BuyCount);
      }
      if (SellGoodsId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SellGoodsId);
      }
      if (SellGoodsPrice != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SellGoodsPrice);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OrderChessShopGoodsData other) {
      if (other == null) {
        return;
      }
      if (other.GirdId != 0) {
        GirdId = other.GirdId;
      }
      if (other.BuyCount != 0) {
        BuyCount = other.BuyCount;
      }
      if (other.SellGoodsId != 0) {
        SellGoodsId = other.SellGoodsId;
      }
      if (other.SellGoodsPrice != 0) {
        SellGoodsPrice = other.SellGoodsPrice;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GirdId = input.ReadInt32();
            break;
          }
          case 16: {
            BuyCount = input.ReadInt32();
            break;
          }
          case 24: {
            SellGoodsId = input.ReadInt32();
            break;
          }
          case 32: {
            SellGoodsPrice = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GirdId = input.ReadInt32();
            break;
          }
          case 16: {
            BuyCount = input.ReadInt32();
            break;
          }
          case 24: {
            SellGoodsId = input.ReadInt32();
            break;
          }
          case 32: {
            SellGoodsPrice = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
