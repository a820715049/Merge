// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: gamekitdata/remote_api.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.gamekitdata {

  /// <summary>Holder for reflection information generated from gamekitdata/remote_api.proto</summary>
  public static partial class RemoteApiReflection {

    #region Descriptor
    /// <summary>File descriptor for gamekitdata/remote_api.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RemoteApiReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChxnYW1la2l0ZGF0YS9yZW1vdGVfYXBpLnByb3RvEgtnYW1la2l0ZGF0YSKN",
            "AQoNUmVtb3RlQXBpRGF0YRIYChBMYXN0V2lzaFByb2R1Y2VyGAEgASgFEhYK",
            "DlNlc3Npb25Db3VudFRTGAIgASgFEhcKD1Nlc3Npb25Db3VudE51bRgDIAEo",
            "BRIXCg9PcmRlckFwaUNvdW50VFMYBCABKAUSGAoQT3JkZXJBcGlDb3VudE51",
            "bRgFIAEoBUJFWjFnaXRsYWIuZnVucGx1cy5pby9mYXQvY29uZi9nZW4vZ29s",
            "YW5nL2dhbWVraXRkYXRhqgIPZmF0LmdhbWVraXRkYXRhYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.gamekitdata.RemoteApiData), global::fat.gamekitdata.RemoteApiData.Parser, new[]{ "LastWishProducer", "SessionCountTS", "SessionCountNum", "OrderApiCountTS", "OrderApiCountNum" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class RemoteApiData : pb::IMessage<RemoteApiData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RemoteApiData> _parser = new pb::MessageParser<RemoteApiData>(() => new RemoteApiData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemoteApiData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.gamekitdata.RemoteApiReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoteApiData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoteApiData(RemoteApiData other) : this() {
      lastWishProducer_ = other.lastWishProducer_;
      sessionCountTS_ = other.sessionCountTS_;
      sessionCountNum_ = other.sessionCountNum_;
      orderApiCountTS_ = other.orderApiCountTS_;
      orderApiCountNum_ = other.orderApiCountNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoteApiData Clone() {
      return new RemoteApiData(this);
    }

    /// <summary>Field number for the "LastWishProducer" field.</summary>
    public const int LastWishProducerFieldNumber = 1;
    private int lastWishProducer_;
    /// <summary>
    /// 最后一个有生成意愿的生成器ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LastWishProducer {
      get { return lastWishProducer_; }
      set {
        lastWishProducer_ = value;
      }
    }

    /// <summary>Field number for the "SessionCountTS" field.</summary>
    public const int SessionCountTSFieldNumber = 2;
    private int sessionCountTS_;
    /// <summary>
    /// 上次登入时的时间戳 (这里认为session_start的时机)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SessionCountTS {
      get { return sessionCountTS_; }
      set {
        sessionCountTS_ = value;
      }
    }

    /// <summary>Field number for the "SessionCountNum" field.</summary>
    public const int SessionCountNumFieldNumber = 3;
    private int sessionCountNum_;
    /// <summary>
    /// 登入次数数据
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SessionCountNum {
      get { return sessionCountNum_; }
      set {
        sessionCountNum_ = value;
      }
    }

    /// <summary>Field number for the "OrderApiCountTS" field.</summary>
    public const int OrderApiCountTSFieldNumber = 4;
    private int orderApiCountTS_;
    /// <summary>
    /// 上次使用订单api时的时间戳
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int OrderApiCountTS {
      get { return orderApiCountTS_; }
      set {
        orderApiCountTS_ = value;
      }
    }

    /// <summary>Field number for the "OrderApiCountNum" field.</summary>
    public const int OrderApiCountNumFieldNumber = 5;
    private int orderApiCountNum_;
    /// <summary>
    /// 使用订单api次数数据
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int OrderApiCountNum {
      get { return orderApiCountNum_; }
      set {
        orderApiCountNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemoteApiData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemoteApiData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LastWishProducer != other.LastWishProducer) return false;
      if (SessionCountTS != other.SessionCountTS) return false;
      if (SessionCountNum != other.SessionCountNum) return false;
      if (OrderApiCountTS != other.OrderApiCountTS) return false;
      if (OrderApiCountNum != other.OrderApiCountNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LastWishProducer != 0) hash ^= LastWishProducer.GetHashCode();
      if (SessionCountTS != 0) hash ^= SessionCountTS.GetHashCode();
      if (SessionCountNum != 0) hash ^= SessionCountNum.GetHashCode();
      if (OrderApiCountTS != 0) hash ^= OrderApiCountTS.GetHashCode();
      if (OrderApiCountNum != 0) hash ^= OrderApiCountNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (LastWishProducer != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(LastWishProducer);
      }
      if (SessionCountTS != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SessionCountTS);
      }
      if (SessionCountNum != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(SessionCountNum);
      }
      if (OrderApiCountTS != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(OrderApiCountTS);
      }
      if (OrderApiCountNum != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(OrderApiCountNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (LastWishProducer != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(LastWishProducer);
      }
      if (SessionCountTS != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SessionCountTS);
      }
      if (SessionCountNum != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(SessionCountNum);
      }
      if (OrderApiCountTS != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(OrderApiCountTS);
      }
      if (OrderApiCountNum != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(OrderApiCountNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LastWishProducer != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LastWishProducer);
      }
      if (SessionCountTS != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SessionCountTS);
      }
      if (SessionCountNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SessionCountNum);
      }
      if (OrderApiCountTS != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OrderApiCountTS);
      }
      if (OrderApiCountNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OrderApiCountNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemoteApiData other) {
      if (other == null) {
        return;
      }
      if (other.LastWishProducer != 0) {
        LastWishProducer = other.LastWishProducer;
      }
      if (other.SessionCountTS != 0) {
        SessionCountTS = other.SessionCountTS;
      }
      if (other.SessionCountNum != 0) {
        SessionCountNum = other.SessionCountNum;
      }
      if (other.OrderApiCountTS != 0) {
        OrderApiCountTS = other.OrderApiCountTS;
      }
      if (other.OrderApiCountNum != 0) {
        OrderApiCountNum = other.OrderApiCountNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            LastWishProducer = input.ReadInt32();
            break;
          }
          case 16: {
            SessionCountTS = input.ReadInt32();
            break;
          }
          case 24: {
            SessionCountNum = input.ReadInt32();
            break;
          }
          case 32: {
            OrderApiCountTS = input.ReadInt32();
            break;
          }
          case 40: {
            OrderApiCountNum = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            LastWishProducer = input.ReadInt32();
            break;
          }
          case 16: {
            SessionCountTS = input.ReadInt32();
            break;
          }
          case 24: {
            SessionCountNum = input.ReadInt32();
            break;
          }
          case 32: {
            OrderApiCountTS = input.ReadInt32();
            break;
          }
          case 40: {
            OrderApiCountNum = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
