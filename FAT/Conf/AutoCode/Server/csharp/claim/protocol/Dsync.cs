// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: claim/protocol/dsync.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.claim.protocol {

  /// <summary>Holder for reflection information generated from claim/protocol/dsync.proto</summary>
  public static partial class DsyncReflection {

    #region Descriptor
    /// <summary>File descriptor for claim/protocol/dsync.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DsyncReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChpjbGFpbS9wcm90b2NvbC9kc3luYy5wcm90bxIIcHJvdG9jb2wiPgoLU3lu",
            "Y0RhdGFTZXQSHwoDc2V0GAEgAygLMhIucHJvdG9jb2wuU3luY0RhdGESDgoG",
            "c291cmNlGAIgASgJIsIBCghTeW5jRGF0YRIgCgR0eXBlGAEgASgOMhIucHJv",
            "dG9jb2wuU3luY1R5cGUSCwoDdXJpGAIgASgJEgsKA3JhdxgDIAEoDBIPCgdj",
            "aGFuZ2VzGAQgASgEEjYKCmR5bkNoYW5nZXMYBSADKAsyIi5wcm90b2NvbC5T",
            "eW5jRGF0YS5EeW5DaGFuZ2VzRW50cnkaMQoPRHluQ2hhbmdlc0VudHJ5EgsK",
            "A2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCDoCOAEiEwoRR2V0QWxsU3luY0Rh",
            "dGFSZXEqRQoIU3luY1R5cGUSCgoGVVBEQVRFEAASCgoGUkVNT1ZFEAESBwoD",
            "QUREEAISDAoIRnVsbFN5bmMQAxIKCgZFeHBpcmUQBEI7WiRnaXRsYWIuZnVu",
            "cGx1cy5pby9zbGcvY2xhaW0vcHJvdG9jb2yqAhJmYXQuY2xhaW0ucHJvdG9j",
            "b2xiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::fat.claim.protocol.SyncType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.claim.protocol.SyncDataSet), global::fat.claim.protocol.SyncDataSet.Parser, new[]{ "Set", "Source" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.claim.protocol.SyncData), global::fat.claim.protocol.SyncData.Parser, new[]{ "Type", "Uri", "Raw", "Changes", "DynChanges" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.claim.protocol.GetAllSyncDataReq), global::fat.claim.protocol.GetAllSyncDataReq.Parser, null, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// 同步命令类型枚举
  /// </summary>
  public enum SyncType {
    /// <summary>
    /// 更新已有的数据
    /// </summary>
    [pbr::OriginalName("UPDATE")] Update = 0,
    /// <summary>
    /// 删除已有的数据
    /// </summary>
    [pbr::OriginalName("REMOVE")] Remove = 1,
    /// <summary>
    /// 新产生的数据
    /// </summary>
    [pbr::OriginalName("ADD")] Add = 2,
    /// <summary>
    /// 全量同步
    /// </summary>
    [pbr::OriginalName("FullSync")] FullSync = 3,
    /// <summary>
    /// 标记数据过期，全量同步的补充
    /// </summary>
    [pbr::OriginalName("Expire")] Expire = 4,
  }

  #endregion

  #region Messages
  /// <summary>
  /// 同步数据的协议
  /// </summary>
  public sealed partial class SyncDataSet : pb::IMessage<SyncDataSet>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SyncDataSet> _parser = new pb::MessageParser<SyncDataSet>(() => new SyncDataSet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SyncDataSet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.claim.protocol.DsyncReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SyncDataSet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SyncDataSet(SyncDataSet other) : this() {
      set_ = other.set_.Clone();
      source_ = other.source_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SyncDataSet Clone() {
      return new SyncDataSet(this);
    }

    /// <summary>Field number for the "set" field.</summary>
    public const int SetFieldNumber = 1;
    private static readonly pb::FieldCodec<global::fat.claim.protocol.SyncData> _repeated_set_codec
        = pb::FieldCodec.ForMessage(10, global::fat.claim.protocol.SyncData.Parser);
    private readonly pbc::RepeatedField<global::fat.claim.protocol.SyncData> set_ = new pbc::RepeatedField<global::fat.claim.protocol.SyncData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::fat.claim.protocol.SyncData> Set {
      get { return set_; }
    }

    /// <summary>Field number for the "source" field.</summary>
    public const int SourceFieldNumber = 2;
    private string source_ = "";
    /// <summary>
    ///额外信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Source {
      get { return source_; }
      set {
        source_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SyncDataSet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SyncDataSet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!set_.Equals(other.set_)) return false;
      if (Source != other.Source) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= set_.GetHashCode();
      if (Source.Length != 0) hash ^= Source.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      set_.WriteTo(output, _repeated_set_codec);
      if (Source.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Source);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      set_.WriteTo(ref output, _repeated_set_codec);
      if (Source.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Source);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += set_.CalculateSize(_repeated_set_codec);
      if (Source.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Source);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SyncDataSet other) {
      if (other == null) {
        return;
      }
      set_.Add(other.set_);
      if (other.Source.Length != 0) {
        Source = other.Source;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            set_.AddEntriesFrom(input, _repeated_set_codec);
            break;
          }
          case 18: {
            Source = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            set_.AddEntriesFrom(ref input, _repeated_set_codec);
            break;
          }
          case 18: {
            Source = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SyncData : pb::IMessage<SyncData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SyncData> _parser = new pb::MessageParser<SyncData>(() => new SyncData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SyncData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.claim.protocol.DsyncReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SyncData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SyncData(SyncData other) : this() {
      type_ = other.type_;
      uri_ = other.uri_;
      raw_ = other.raw_;
      changes_ = other.changes_;
      dynChanges_ = other.dynChanges_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SyncData Clone() {
      return new SyncData(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::fat.claim.protocol.SyncType type_ = global::fat.claim.protocol.SyncType.Update;
    /// <summary>
    /// 操作类型 新增、删除、更新
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::fat.claim.protocol.SyncType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "uri" field.</summary>
    public const int UriFieldNumber = 2;
    private string uri_ = "";
    /// <summary>
    /// uri
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uri {
      get { return uri_; }
      set {
        uri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "raw" field.</summary>
    public const int RawFieldNumber = 3;
    private pb::ByteString raw_ = pb::ByteString.Empty;
    /// <summary>
    /// 序列化后的数据,默认是 proto3 格式
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Raw {
      get { return raw_; }
      set {
        raw_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "changes" field.</summary>
    public const int ChangesFieldNumber = 4;
    private ulong changes_;
    /// <summary>
    /// 属性改变位图，1表示改变，从低到高依次表示第n个属性是否改变
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Changes {
      get { return changes_; }
      set {
        changes_ = value;
      }
    }

    /// <summary>Field number for the "dynChanges" field.</summary>
    public const int DynChangesFieldNumber = 5;
    private static readonly pbc::MapField<string, bool>.Codec _map_dynChanges_codec
        = new pbc::MapField<string, bool>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForBool(16, false), 42);
    private readonly pbc::MapField<string, bool> dynChanges_ = new pbc::MapField<string, bool>();
    /// <summary>
    /// 发生变化的key集合，只用于大集合，且每次变化较少的特殊场景
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, bool> DynChanges {
      get { return dynChanges_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SyncData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SyncData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Uri != other.Uri) return false;
      if (Raw != other.Raw) return false;
      if (Changes != other.Changes) return false;
      if (!DynChanges.Equals(other.DynChanges)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::fat.claim.protocol.SyncType.Update) hash ^= Type.GetHashCode();
      if (Uri.Length != 0) hash ^= Uri.GetHashCode();
      if (Raw.Length != 0) hash ^= Raw.GetHashCode();
      if (Changes != 0UL) hash ^= Changes.GetHashCode();
      hash ^= DynChanges.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type != global::fat.claim.protocol.SyncType.Update) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (Uri.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Uri);
      }
      if (Raw.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Raw);
      }
      if (Changes != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(Changes);
      }
      dynChanges_.WriteTo(output, _map_dynChanges_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type != global::fat.claim.protocol.SyncType.Update) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (Uri.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Uri);
      }
      if (Raw.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Raw);
      }
      if (Changes != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(Changes);
      }
      dynChanges_.WriteTo(ref output, _map_dynChanges_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::fat.claim.protocol.SyncType.Update) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Uri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uri);
      }
      if (Raw.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Raw);
      }
      if (Changes != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Changes);
      }
      size += dynChanges_.CalculateSize(_map_dynChanges_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SyncData other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::fat.claim.protocol.SyncType.Update) {
        Type = other.Type;
      }
      if (other.Uri.Length != 0) {
        Uri = other.Uri;
      }
      if (other.Raw.Length != 0) {
        Raw = other.Raw;
      }
      if (other.Changes != 0UL) {
        Changes = other.Changes;
      }
      dynChanges_.Add(other.dynChanges_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::fat.claim.protocol.SyncType) input.ReadEnum();
            break;
          }
          case 18: {
            Uri = input.ReadString();
            break;
          }
          case 26: {
            Raw = input.ReadBytes();
            break;
          }
          case 32: {
            Changes = input.ReadUInt64();
            break;
          }
          case 42: {
            dynChanges_.AddEntriesFrom(input, _map_dynChanges_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::fat.claim.protocol.SyncType) input.ReadEnum();
            break;
          }
          case 18: {
            Uri = input.ReadString();
            break;
          }
          case 26: {
            Raw = input.ReadBytes();
            break;
          }
          case 32: {
            Changes = input.ReadUInt64();
            break;
          }
          case 42: {
            dynChanges_.AddEntriesFrom(ref input, _map_dynChanges_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///客户端主动拉取全量可同步数据
  /// </summary>
  public sealed partial class GetAllSyncDataReq : pb::IMessage<GetAllSyncDataReq>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetAllSyncDataReq> _parser = new pb::MessageParser<GetAllSyncDataReq>(() => new GetAllSyncDataReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAllSyncDataReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.claim.protocol.DsyncReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAllSyncDataReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAllSyncDataReq(GetAllSyncDataReq other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAllSyncDataReq Clone() {
      return new GetAllSyncDataReq(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAllSyncDataReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAllSyncDataReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAllSyncDataReq other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
