// Code generated by protokitgo. DO NOT EDIT.

#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using System;
using System.Collections.Generic;
using global::fat.netutils;
using global::Google.Protobuf;

namespace fat.service {
	public delegate void DelegateHttpPostRequestMsg(string url, IMessage msg, Action<IMessage> callback = null,
        DelegateHttpRequestError delegateHttpRequestError = null, Dictionary<string, string> metadata = null,
        Dictionary<string, string> header = null, string uri = null);
    
    public delegate void DelegateTcpSendMessage(IMessage message, Action<IMessage> handler = null, Dictionary<string, string> metadata = null, string uri = null);

	public delegate Dictionary<string, string> DelegateCommonMetaProvider(string uri, string[] labels);

	public enum MetaType
	{
	    PacketMeta,
        HttpHeader,
	}

    public class SendHelper
    {
        internal static readonly SendHelper Instance = new SendHelper();
        internal string HttpHost;
        internal DelegateHttpPostRequestMsg HttpClientPost;
        internal DelegateTcpSendMessage ProtokitClientSend;
        internal DelegateCommonMetaProvider CommonMetaProvider;
		internal DelegateCommonMetaProvider CommonHeaderProvider;
        
        // 请传入 ProtokitHttpClient.PostRequestMsg 和 服务器根地址
        public void SetHttpDelegate(DelegateHttpPostRequestMsg httpPostRequestMsg, string host)
        {
            HttpClientPost = httpPostRequestMsg;
            HttpHost = host;
        }
        
        // 请传入 ProtokitClient.SendMessage
        public void SetProtokitClientDelegate(DelegateTcpSendMessage tcpSendMessage)
        {
            ProtokitClientSend = tcpSendMessage;
        }

        // 请传入 CommonMetaProvider
        public void SetCommonMetaProvider(DelegateCommonMetaProvider metaProvider)
        {
            CommonMetaProvider = metaProvider;
        }

        // 请传入 CommonHeaderProvider
        public void SetCommonHeaderProvider(DelegateCommonMetaProvider metaProvider)
        {
            CommonHeaderProvider = metaProvider;
        }

        public Dictionary<string, string> MergeMetadata(MetaType type_, string uri, string[] labels, Dictionary<string, string> metadata)
        {
 			DelegateCommonMetaProvider provider = CommonMetaProvider;
            if (type_ == MetaType.HttpHeader) {
                provider = CommonHeaderProvider;
            }
            if (provider == null) {
                return metadata;
            }
 			Dictionary<string, string> newMetadata = provider(uri, labels);
            if (newMetadata == null) {
                return metadata;
            }
            if (metadata == null) {
                return newMetadata;
            }

            //
            foreach (var item in newMetadata) {
                metadata[item.Key] = item.Value;
            }
            return metadata;
        }
    }
}

#endregion Designer generated code
