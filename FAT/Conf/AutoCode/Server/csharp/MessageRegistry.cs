// <auto-generated>
//  Code generated by protokitgo. DO NOT EDIT.
// </auto-generated>

#pragma warning disable 1591, 0612, 3021, CA1050
#region Designer generated code

using System;
using System.Collections.Generic;
using Google.Protobuf;

public static partial class MessageRegistry {
	public delegate MessageParser ParserLoader();
	private static Dictionary<string,ParserLoader> _protoFullName2Parser = new Dictionary<string,ParserLoader>(){};
	private static Dictionary<string,string> _typeName2ProtoFullName = new Dictionary<string,string>(){};
	private static void set(string protoFullName,string typeName,ParserLoader parser){
		_protoFullName2Parser[protoFullName] = parser;
		_typeName2ProtoFullName[typeName] = protoFullName;
	}
    static MessageRegistry()
    {
		set("dbstate.Account","fat.dbstate.Account",()=>fat.dbstate.Account.Parser);
		set("dbstate.CgAdminBan","fat.dbstate.CgAdminBan",()=>fat.dbstate.CgAdminBan.Parser);
		set("dbstate.CgAdminDeeplink","fat.dbstate.CgAdminDeeplink",()=>fat.dbstate.CgAdminDeeplink.Parser);
		set("dbstate.ClientData","fat.dbstate.ClientData",()=>fat.dbstate.ClientData.Parser);
		set("dbstate.Exchange","fat.dbstate.Exchange",()=>fat.dbstate.Exchange.Parser);
		set("dbstate.Facebook","fat.dbstate.Facebook",()=>fat.dbstate.Facebook.Parser);
		set("dbstate.General","fat.dbstate.General",()=>fat.dbstate.General.Parser);
		set("dbstate.GiftCode","fat.dbstate.GiftCode",()=>fat.dbstate.GiftCode.Parser);
		set("dbstate.LocalId","fat.dbstate.LocalId",()=>fat.dbstate.LocalId.Parser);
		set("dbstate.Payment","fat.dbstate.Payment",()=>fat.dbstate.Payment.Parser);
		set("dbstate.Player","fat.dbstate.Player",()=>fat.dbstate.Player.Parser);
		set("gamekitdata.Activity","fat.gamekitdata.Activity",()=>fat.gamekitdata.Activity.Parser);
		set("gamekitdata.ActivityInstance","fat.gamekitdata.ActivityInstance",()=>fat.gamekitdata.ActivityInstance.Parser);
		set("gamekitdata.AdsData","fat.gamekitdata.AdsData",()=>fat.gamekitdata.AdsData.Parser);
		set("gamekitdata.AnyState","fat.gamekitdata.AnyState",()=>fat.gamekitdata.AnyState.Parser);
		set("gamekitdata.BoardActivity","fat.gamekitdata.BoardActivity",()=>fat.gamekitdata.BoardActivity.Parser);
		set("gamekitdata.BoardActivityData","fat.gamekitdata.BoardActivityData",()=>fat.gamekitdata.BoardActivityData.Parser);
		set("gamekitdata.CardActivity","fat.gamekitdata.CardActivity",()=>fat.gamekitdata.CardActivity.Parser);
		set("gamekitdata.CardActivityInfo","fat.gamekitdata.CardActivityInfo",()=>fat.gamekitdata.CardActivityInfo.Parser);
		set("gamekitdata.CardAlbumInfo","fat.gamekitdata.CardAlbumInfo",()=>fat.gamekitdata.CardAlbumInfo.Parser);
		set("gamekitdata.CardInfo","fat.gamekitdata.CardInfo",()=>fat.gamekitdata.CardInfo.Parser);
		set("gamekitdata.CardJokerInfo","fat.gamekitdata.CardJokerInfo",()=>fat.gamekitdata.CardJokerInfo.Parser);
		set("gamekitdata.CardRoundInfo","fat.gamekitdata.CardRoundInfo",()=>fat.gamekitdata.CardRoundInfo.Parser);
		set("gamekitdata.CardSpecialPackInfo","fat.gamekitdata.CardSpecialPackInfo",()=>fat.gamekitdata.CardSpecialPackInfo.Parser);
		set("gamekitdata.CardStarExchangeInfo","fat.gamekitdata.CardStarExchangeInfo",()=>fat.gamekitdata.CardStarExchangeInfo.Parser);
		set("gamekitdata.ClientData","fat.gamekitdata.ClientData",()=>fat.gamekitdata.ClientData.Parser);
		set("gamekitdata.ClientStorageState","fat.gamekitdata.ClientStorageState",()=>fat.gamekitdata.ClientStorageState.Parser);
		set("gamekitdata.ComActiveSource","fat.gamekitdata.ComActiveSource",()=>fat.gamekitdata.ComActiveSource.Parser);
		set("gamekitdata.ComActivity","fat.gamekitdata.ComActivity",()=>fat.gamekitdata.ComActivity.Parser);
		set("gamekitdata.ComActivityToken","fat.gamekitdata.ComActivityToken",()=>fat.gamekitdata.ComActivityToken.Parser);
		set("gamekitdata.ComAutoSource","fat.gamekitdata.ComAutoSource",()=>fat.gamekitdata.ComAutoSource.Parser);
		set("gamekitdata.ComBox","fat.gamekitdata.ComBox",()=>fat.gamekitdata.ComBox.Parser);
		set("gamekitdata.ComBubble","fat.gamekitdata.ComBubble",()=>fat.gamekitdata.ComBubble.Parser);
		set("gamekitdata.ComChest","fat.gamekitdata.ComChest",()=>fat.gamekitdata.ComChest.Parser);
		set("gamekitdata.ComClickSource","fat.gamekitdata.ComClickSource",()=>fat.gamekitdata.ComClickSource.Parser);
		set("gamekitdata.ComDying","fat.gamekitdata.ComDying",()=>fat.gamekitdata.ComDying.Parser);
		set("gamekitdata.ComEatingSource","fat.gamekitdata.ComEatingSource",()=>fat.gamekitdata.ComEatingSource.Parser);
		set("gamekitdata.ComMixSource","fat.gamekitdata.ComMixSource",()=>fat.gamekitdata.ComMixSource.Parser);
		set("gamekitdata.ComSkill","fat.gamekitdata.ComSkill",()=>fat.gamekitdata.ComSkill.Parser);
		set("gamekitdata.ComSpecialBox","fat.gamekitdata.ComSpecialBox",()=>fat.gamekitdata.ComSpecialBox.Parser);
		set("gamekitdata.ComToolSource","fat.gamekitdata.ComToolSource",()=>fat.gamekitdata.ComToolSource.Parser);
		set("gamekitdata.ComTrigSource","fat.gamekitdata.ComTrigSource",()=>fat.gamekitdata.ComTrigSource.Parser);
		set("gamekitdata.CommunityLinkData","fat.gamekitdata.CommunityLinkData",()=>fat.gamekitdata.CommunityLinkData.Parser);
		set("gamekitdata.ConditionTrigger","fat.gamekitdata.ConditionTrigger",()=>fat.gamekitdata.ConditionTrigger.Parser);
		set("gamekitdata.DailyEvent","fat.gamekitdata.DailyEvent",()=>fat.gamekitdata.DailyEvent.Parser);
		set("gamekitdata.DecorateActivity","fat.gamekitdata.DecorateActivity",()=>fat.gamekitdata.DecorateActivity.Parser);
		set("gamekitdata.EnergyInfo","fat.gamekitdata.EnergyInfo",()=>fat.gamekitdata.EnergyInfo.Parser);
		set("gamekitdata.EnergyShopGoodsData","fat.gamekitdata.EnergyShopGoodsData",()=>fat.gamekitdata.EnergyShopGoodsData.Parser);
		set("gamekitdata.FacebookInfo","fat.gamekitdata.FacebookInfo",()=>fat.gamekitdata.FacebookInfo.Parser);
		set("gamekitdata.HandbookData","fat.gamekitdata.HandbookData",()=>fat.gamekitdata.HandbookData.Parser);
		set("gamekitdata.IAPData","fat.gamekitdata.IAPData",()=>fat.gamekitdata.IAPData.Parser);
		set("gamekitdata.JumpCD","fat.gamekitdata.JumpCD",()=>fat.gamekitdata.JumpCD.Parser);
		set("gamekitdata.LocalSaveData","fat.gamekitdata.LocalSaveData",()=>fat.gamekitdata.LocalSaveData.Parser);
		set("gamekitdata.Mail","fat.gamekitdata.Mail",()=>fat.gamekitdata.Mail.Parser);
		set("gamekitdata.MailTypeData","fat.gamekitdata.MailTypeData",()=>fat.gamekitdata.MailTypeData.Parser);
		set("gamekitdata.MapBuilding","fat.gamekitdata.MapBuilding",()=>fat.gamekitdata.MapBuilding.Parser);
		set("gamekitdata.MapScene","fat.gamekitdata.MapScene",()=>fat.gamekitdata.MapScene.Parser);
		set("gamekitdata.Merge","fat.gamekitdata.Merge",()=>fat.gamekitdata.Merge.Parser);
		set("gamekitdata.MergeBag","fat.gamekitdata.MergeBag",()=>fat.gamekitdata.MergeBag.Parser);
		set("gamekitdata.MergeDel","fat.gamekitdata.MergeDel",()=>fat.gamekitdata.MergeDel.Parser);
		set("gamekitdata.MergeGlobal","fat.gamekitdata.MergeGlobal",()=>fat.gamekitdata.MergeGlobal.Parser);
		set("gamekitdata.MergeItem","fat.gamekitdata.MergeItem",()=>fat.gamekitdata.MergeItem.Parser);
		set("gamekitdata.MiniBoardActivity","fat.gamekitdata.MiniBoardActivity",()=>fat.gamekitdata.MiniBoardActivity.Parser);
		set("gamekitdata.MiniBoardData","fat.gamekitdata.MiniBoardData",()=>fat.gamekitdata.MiniBoardData.Parser);
		set("gamekitdata.MiniBoardMultiData","fat.gamekitdata.MiniBoardMultiData",()=>fat.gamekitdata.MiniBoardMultiData.Parser);
		set("gamekitdata.MiniGameData","fat.gamekitdata.MiniGameData",()=>fat.gamekitdata.MiniGameData.Parser);
		set("gamekitdata.MiniGameLevel","fat.gamekitdata.MiniGameLevel",()=>fat.gamekitdata.MiniGameLevel.Parser);
		set("gamekitdata.Order","fat.gamekitdata.Order",()=>fat.gamekitdata.Order.Parser);
		set("gamekitdata.OrderBox","fat.gamekitdata.OrderBox",()=>fat.gamekitdata.OrderBox.Parser);
		set("gamekitdata.OrderChessShopGoodsData","fat.gamekitdata.OrderChessShopGoodsData",()=>fat.gamekitdata.OrderChessShopGoodsData.Parser);
		set("gamekitdata.OrderGroup","fat.gamekitdata.OrderGroup",()=>fat.gamekitdata.OrderGroup.Parser);
		set("gamekitdata.OrderRecord","fat.gamekitdata.OrderRecord",()=>fat.gamekitdata.OrderRecord.Parser);
		set("gamekitdata.PayRecord","fat.gamekitdata.PayRecord",()=>fat.gamekitdata.PayRecord.Parser);
		set("gamekitdata.PlayerBaseData","fat.gamekitdata.PlayerBaseData",()=>fat.gamekitdata.PlayerBaseData.Parser);
		set("gamekitdata.PlayerData","fat.gamekitdata.PlayerData",()=>fat.gamekitdata.PlayerData.Parser);
		set("gamekitdata.PlayerGameData","fat.gamekitdata.PlayerGameData",()=>fat.gamekitdata.PlayerGameData.Parser);
		set("gamekitdata.PlayerGeneralData","fat.gamekitdata.PlayerGeneralData",()=>fat.gamekitdata.PlayerGeneralData.Parser);
		set("gamekitdata.PlayerOpenInfo","fat.gamekitdata.PlayerOpenInfo",()=>fat.gamekitdata.PlayerOpenInfo.Parser);
		set("gamekitdata.RandomChessShopGoodsData","fat.gamekitdata.RandomChessShopGoodsData",()=>fat.gamekitdata.RandomChessShopGoodsData.Parser);
		set("gamekitdata.RandomOutputParam","fat.gamekitdata.RandomOutputParam",()=>fat.gamekitdata.RandomOutputParam.Parser);
		set("gamekitdata.RandomParam","fat.gamekitdata.RandomParam",()=>fat.gamekitdata.RandomParam.Parser);
		set("gamekitdata.RankingActivity","fat.gamekitdata.RankingActivity",()=>fat.gamekitdata.RankingActivity.Parser);
		set("gamekitdata.RankingActivityRecord","fat.gamekitdata.RankingActivityRecord",()=>fat.gamekitdata.RankingActivityRecord.Parser);
		set("gamekitdata.RankingCfg","fat.gamekitdata.RankingCfg",()=>fat.gamekitdata.RankingCfg.Parser);
		set("gamekitdata.RankingTypeRecord","fat.gamekitdata.RankingTypeRecord",()=>fat.gamekitdata.RankingTypeRecord.Parser);
		set("gamekitdata.RecordState","fat.gamekitdata.RecordState",()=>fat.gamekitdata.RecordState.Parser);
		set("gamekitdata.RemoteApiData","fat.gamekitdata.RemoteApiData",()=>fat.gamekitdata.RemoteApiData.Parser);
		set("gamekitdata.Reward","fat.gamekitdata.Reward",()=>fat.gamekitdata.Reward.Parser);
		set("gamekitdata.ScreenPopup","fat.gamekitdata.ScreenPopup",()=>fat.gamekitdata.ScreenPopup.Parser);
		set("gamekitdata.ServerData","fat.gamekitdata.ServerData",()=>fat.gamekitdata.ServerData.Parser);
		set("gamekitdata.ShopData","fat.gamekitdata.ShopData",()=>fat.gamekitdata.ShopData.Parser);
		set("gamekitdata.ShopInfo","fat.gamekitdata.ShopInfo",()=>fat.gamekitdata.ShopInfo.Parser);
		set("gamekitdata.SignInData","fat.gamekitdata.SignInData",()=>fat.gamekitdata.SignInData.Parser);
		set("gamekitdata.SpecialRewardData","fat.gamekitdata.SpecialRewardData",()=>fat.gamekitdata.SpecialRewardData.Parser);
		set("gamekitdata.SystemInfo","fat.gamekitdata.SystemInfo",()=>fat.gamekitdata.SystemInfo.Parser);
		set("gamekitdata.TagHistoryData","fat.gamekitdata.TagHistoryData",()=>fat.gamekitdata.TagHistoryData.Parser);
		set("gamekitdata.TaskDE","fat.gamekitdata.TaskDE",()=>fat.gamekitdata.TaskDE.Parser);
		set("gamekitdata.TaskData","fat.gamekitdata.TaskData",()=>fat.gamekitdata.TaskData.Parser);
		set("gamekitdata.TaskGroup","fat.gamekitdata.TaskGroup",()=>fat.gamekitdata.TaskGroup.Parser);
		set("gamekitdata.TokenMulti","fat.gamekitdata.TokenMulti",()=>fat.gamekitdata.TokenMulti.Parser);
		set("gamekitdata.TriggerInfo","fat.gamekitdata.TriggerInfo",()=>fat.gamekitdata.TriggerInfo.Parser);
		set("gamekitdata.Tutorial","fat.gamekitdata.Tutorial",()=>fat.gamekitdata.Tutorial.Parser);
		set("gamekitdata.TypeInstance","fat.gamekitdata.TypeInstance",()=>fat.gamekitdata.TypeInstance.Parser);
		set("gamekitdata.UserRecord","fat.gamekitdata.UserRecord",()=>fat.gamekitdata.UserRecord.Parser);
		set("gamekitdata.UserTagApiData","fat.gamekitdata.UserTagApiData",()=>fat.gamekitdata.UserTagApiData.Parser);
		set("gamekitdata.UserTagData","fat.gamekitdata.UserTagData",()=>fat.gamekitdata.UserTagData.Parser);
		set("msg.ActivityChangedNotify","fat.msg.ActivityChangedNotify",()=>fat.msg.ActivityChangedNotify.Parser);
		set("msg.AuthorizeReq","fat.msg.AuthorizeReq",()=>fat.msg.AuthorizeReq.Parser);
		set("msg.AuthorizeRspOverride","fat.msg.AuthorizeRspOverride",()=>fat.msg.AuthorizeRspOverride.Parser);
		set("msg.BanRankingInfoReq","fat.msg.BanRankingInfoReq",()=>fat.msg.BanRankingInfoReq.Parser);
		set("msg.ClaimAllMailRewardReq","fat.msg.ClaimAllMailRewardReq",()=>fat.msg.ClaimAllMailRewardReq.Parser);
		set("msg.ClaimAllMailRewardResp","fat.msg.ClaimAllMailRewardResp",()=>fat.msg.ClaimAllMailRewardResp.Parser);
		set("msg.DecodeThroughCargoReq","fat.msg.DecodeThroughCargoReq",()=>fat.msg.DecodeThroughCargoReq.Parser);
		set("msg.DecodeThroughCargoResp","fat.msg.DecodeThroughCargoResp",()=>fat.msg.DecodeThroughCargoResp.Parser);
		set("msg.DeeplinkInviteReq","fat.msg.DeeplinkInviteReq",()=>fat.msg.DeeplinkInviteReq.Parser);
		set("msg.DeeplinkInviteResp","fat.msg.DeeplinkInviteResp",()=>fat.msg.DeeplinkInviteResp.Parser);
		set("msg.DeliverCargoReq","fat.msg.DeliverCargoReq",()=>fat.msg.DeliverCargoReq.Parser);
		set("msg.DeliverCargoResp","fat.msg.DeliverCargoResp",()=>fat.msg.DeliverCargoResp.Parser);
		set("msg.DeliverGiftCodeReq","fat.msg.DeliverGiftCodeReq",()=>fat.msg.DeliverGiftCodeReq.Parser);
		set("msg.DeliverGiftCodeResp","fat.msg.DeliverGiftCodeResp",()=>fat.msg.DeliverGiftCodeResp.Parser);
		set("msg.Delivery","fat.msg.Delivery",()=>fat.msg.Delivery.Parser);
		set("msg.ExtraData","fat.msg.ExtraData",()=>fat.msg.ExtraData.Parser);
		set("msg.GetInviteeStatReq","fat.msg.GetInviteeStatReq",()=>fat.msg.GetInviteeStatReq.Parser);
		set("msg.GetInviteeStatResp","fat.msg.GetInviteeStatResp",()=>fat.msg.GetInviteeStatResp.Parser);
		set("msg.GetItemsFromOthersReq","fat.msg.GetItemsFromOthersReq",()=>fat.msg.GetItemsFromOthersReq.Parser);
		set("msg.GetItemsFromOthersResp","fat.msg.GetItemsFromOthersResp",()=>fat.msg.GetItemsFromOthersResp.Parser);
		set("msg.GetMailReq","fat.msg.GetMailReq",()=>fat.msg.GetMailReq.Parser);
		set("msg.GetMailResp","fat.msg.GetMailResp",()=>fat.msg.GetMailResp.Parser);
		set("msg.GetMailRewardReq","fat.msg.GetMailRewardReq",()=>fat.msg.GetMailRewardReq.Parser);
		set("msg.GetMailRewardResp","fat.msg.GetMailRewardResp",()=>fat.msg.GetMailRewardResp.Parser);
		set("msg.GetPlayerOpenInfosByFacebookIDReq","fat.msg.GetPlayerOpenInfosByFacebookIDReq",()=>fat.msg.GetPlayerOpenInfosByFacebookIDReq.Parser);
		set("msg.GetPlayerOpenInfosByUidReq","fat.msg.GetPlayerOpenInfosByUidReq",()=>fat.msg.GetPlayerOpenInfosByUidReq.Parser);
		set("msg.GetRankingInfoReq","fat.msg.GetRankingInfoReq",()=>fat.msg.GetRankingInfoReq.Parser);
		set("msg.HeartbeatReq","fat.msg.HeartbeatReq",()=>fat.msg.HeartbeatReq.Parser);
		set("msg.HeartbeatResp","fat.msg.HeartbeatResp",()=>fat.msg.HeartbeatResp.Parser);
		set("msg.ItemsFromOther","fat.msg.ItemsFromOther",()=>fat.msg.ItemsFromOther.Parser);
		set("msg.LoadPaymentReq","fat.msg.LoadPaymentReq",()=>fat.msg.LoadPaymentReq.Parser);
		set("msg.LoadPaymentRsp","fat.msg.LoadPaymentRsp",()=>fat.msg.LoadPaymentRsp.Parser);
		set("msg.LoginReq","fat.msg.LoginReq",()=>fat.msg.LoginReq.Parser);
		set("msg.LoginResp","fat.msg.LoginResp",()=>fat.msg.LoginResp.Parser);
		set("msg.MakeThroughCargoReq","fat.msg.MakeThroughCargoReq",()=>fat.msg.MakeThroughCargoReq.Parser);
		set("msg.MakeThroughCargoResp","fat.msg.MakeThroughCargoResp",()=>fat.msg.MakeThroughCargoResp.Parser);
		set("msg.MockMessageReq","fat.msg.MockMessageReq",()=>fat.msg.MockMessageReq.Parser);
		set("msg.MockMessageRsp","fat.msg.MockMessageRsp",()=>fat.msg.MockMessageRsp.Parser);
		set("msg.MockTimeReq","fat.msg.MockTimeReq",()=>fat.msg.MockTimeReq.Parser);
		set("msg.MockTimeResp","fat.msg.MockTimeResp",()=>fat.msg.MockTimeResp.Parser);
		set("msg.NewEmailNotify","fat.msg.NewEmailNotify",()=>fat.msg.NewEmailNotify.Parser);
		set("msg.NewExchangeNotify","fat.msg.NewExchangeNotify",()=>fat.msg.NewExchangeNotify.Parser);
		set("msg.PayContext","fat.msg.PayContext",()=>fat.msg.PayContext.Parser);
		set("msg.PayRecord","fat.msg.PayRecord",()=>fat.msg.PayRecord.Parser);
		set("msg.PayStat","fat.msg.PayStat",()=>fat.msg.PayStat.Parser);
		set("msg.PaymentConf","fat.msg.PaymentConf",()=>fat.msg.PaymentConf.Parser);
		set("msg.PaymentConfReq","fat.msg.PaymentConfReq",()=>fat.msg.PaymentConfReq.Parser);
		set("msg.PaymentConfResp","fat.msg.PaymentConfResp",()=>fat.msg.PaymentConfResp.Parser);
		set("msg.PaymentMakeThroughCargo","fat.msg.PaymentMakeThroughCargo",()=>fat.msg.PaymentMakeThroughCargo.Parser);
		set("msg.PlatformDelAccountNotifyReq","fat.msg.PlatformDelAccountNotifyReq",()=>fat.msg.PlatformDelAccountNotifyReq.Parser);
		set("msg.PlatformDelAccountNotifyResp","fat.msg.PlatformDelAccountNotifyResp",()=>fat.msg.PlatformDelAccountNotifyResp.Parser);
		set("msg.PlatformGiftCodeNotifyReq","fat.msg.PlatformGiftCodeNotifyReq",()=>fat.msg.PlatformGiftCodeNotifyReq.Parser);
		set("msg.PlatformGiftCodeNotifyResp","fat.msg.PlatformGiftCodeNotifyResp",()=>fat.msg.PlatformGiftCodeNotifyResp.Parser);
		set("msg.PlatformPaymentNotifyReq","fat.msg.PlatformPaymentNotifyReq",()=>fat.msg.PlatformPaymentNotifyReq.Parser);
		set("msg.PlatformPaymentNotifyResp","fat.msg.PlatformPaymentNotifyResp",()=>fat.msg.PlatformPaymentNotifyResp.Parser);
		set("msg.PlatformProbeReq","fat.msg.PlatformProbeReq",()=>fat.msg.PlatformProbeReq.Parser);
		set("msg.PlatformProbeResp","fat.msg.PlatformProbeResp",()=>fat.msg.PlatformProbeResp.Parser);
		set("msg.PlayerOpenInfosMessage","fat.msg.PlayerOpenInfosMessage",()=>fat.msg.PlayerOpenInfosMessage.Parser);
		set("msg.PlayerRankingInfo","fat.msg.PlayerRankingInfo",()=>fat.msg.PlayerRankingInfo.Parser);
		set("msg.QAPlatformPaymentNotifyReq","fat.msg.QAPlatformPaymentNotifyReq",()=>fat.msg.QAPlatformPaymentNotifyReq.Parser);
		set("msg.QAPlatformPaymentNotifyResp","fat.msg.QAPlatformPaymentNotifyResp",()=>fat.msg.QAPlatformPaymentNotifyResp.Parser);
		set("msg.RTMTokenReq","fat.msg.RTMTokenReq",()=>fat.msg.RTMTokenReq.Parser);
		set("msg.RTMTokenResp","fat.msg.RTMTokenResp",()=>fat.msg.RTMTokenResp.Parser);
		set("msg.RankingInfoResp","fat.msg.RankingInfoResp",()=>fat.msg.RankingInfoResp.Parser);
		set("msg.ReadMailReq","fat.msg.ReadMailReq",()=>fat.msg.ReadMailReq.Parser);
		set("msg.ReadMailResp","fat.msg.ReadMailResp",()=>fat.msg.ReadMailResp.Parser);
		set("msg.ReceiveItemsFromOtherReq","fat.msg.ReceiveItemsFromOtherReq",()=>fat.msg.ReceiveItemsFromOtherReq.Parser);
		set("msg.RechargeResult","fat.msg.RechargeResult",()=>fat.msg.RechargeResult.Parser);
		set("msg.SavePlayerOpenInfoReq","fat.msg.SavePlayerOpenInfoReq",()=>fat.msg.SavePlayerOpenInfoReq.Parser);
		set("msg.SendItemsToOtherReq","fat.msg.SendItemsToOtherReq",()=>fat.msg.SendItemsToOtherReq.Parser);
		set("msg.StoreReq","fat.msg.StoreReq",()=>fat.msg.StoreReq.Parser);
		set("msg.StoreResp","fat.msg.StoreResp",()=>fat.msg.StoreResp.Parser);
		set("msg.SyncTimeReq","fat.msg.SyncTimeReq",()=>fat.msg.SyncTimeReq.Parser);
		set("msg.SyncTimeResp","fat.msg.SyncTimeResp",()=>fat.msg.SyncTimeResp.Parser);
		set("msg.ThroughCargo","fat.msg.ThroughCargo",()=>fat.msg.ThroughCargo.Parser);
		set("msg.UnBanRankingInfoReq","fat.msg.UnBanRankingInfoReq",()=>fat.msg.UnBanRankingInfoReq.Parser);
		set("msg.UserModifyNotify","fat.msg.UserModifyNotify",()=>fat.msg.UserModifyNotify.Parser);
		set("netutils.Empty","fat.netutils.Empty",()=>fat.netutils.Empty.Parser);
		set("netutils.ErrorResponse","fat.netutils.ErrorResponse",()=>fat.netutils.ErrorResponse.Parser);
		set("netutils.NormalAck","fat.netutils.NormalAck",()=>fat.netutils.NormalAck.Parser);
		set("netutils.Ping","fat.netutils.Ping",()=>fat.netutils.Ping.Parser);
		set("netutils.PingAck","fat.netutils.PingAck",()=>fat.netutils.PingAck.Parser);
		set("netutils.RawAny","fat.netutils.RawAny",()=>fat.netutils.RawAny.Parser);
		set("netutils.RawPacket","fat.netutils.RawPacket",()=>fat.netutils.RawPacket.Parser);
		set("protocol.GetAllSyncDataReq","fat.claim.protocol.GetAllSyncDataReq",()=>fat.claim.protocol.GetAllSyncDataReq.Parser);
		set("protocol.SyncData","fat.claim.protocol.SyncData",()=>fat.claim.protocol.SyncData.Parser);
		set("protocol.SyncDataSet","fat.claim.protocol.SyncDataSet",()=>fat.claim.protocol.SyncDataSet.Parser);
    }
    // 全局回调，用于处理未注册的类型
    public static Func<string, ParserLoader>? ParserLostHandler { get; set; }

    // 全局回调，用于处理未注册的类型
    public static Func<string, string>? FullNameLostHandler { get; set; }

    /// <summary>
    /// 获取 FullName，如果未注册且未设置 FullNameLostHandler，则抛出异常
    /// </summary>
	[Obsolete("不建议使用 GetProtoFullName，直接访问类型的 FullName 静态属性。")]
    public static string GetProtoFullName(string typeName){
        if (_typeName2ProtoFullName.TryGetValue(typeName, out var fullName))
        {
            return fullName;
        }
        if (FullNameLostHandler != null)
        {
            var dynamicFullName = FullNameLostHandler(typeName);
            if (dynamicFullName != "")
            {
                _typeName2ProtoFullName[typeName] = dynamicFullName;
                return dynamicFullName;
            }
        }
        throw new KeyNotFoundException($"No proto full name found for '{typeName}' and no FullNameLostHandler is set.");
	}

    /// <summary>
    /// 获取 MessageParser，如果未注册且未设置 ParserLostHandler，则抛出异常
    /// </summary>
	public static MessageParser GetParser(string protoFullName)
	{
		if (_protoFullName2Parser.TryGetValue(protoFullName, out var parserFactory))
		{
			var parser = parserFactory?.Invoke();
			if (parser == null)
			{
				throw new InvalidOperationException($"Parser for '{protoFullName}' returned null.");
			}
			return parser;
		}
	
		if (ParserLostHandler != null)
		{
			var dynamicParser = ParserLostHandler(protoFullName);
			if (dynamicParser != null)
			{
				var parser = dynamicParser.Invoke();
				if (parser == null)
				{
					throw new InvalidOperationException($"Dynamic parser for '{protoFullName}' returned null.");
				}
				_protoFullName2Parser[protoFullName] = dynamicParser;
				return parser;
			}
		}
		throw new KeyNotFoundException($"No parser found for '{protoFullName}' and no valid parser was provided by ParserLostHandler.");
	}
}
#endregion Designer generated code
