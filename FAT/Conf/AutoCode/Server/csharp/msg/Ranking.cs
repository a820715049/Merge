// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: msg/ranking.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.msg {

  /// <summary>Holder for reflection information generated from msg/ranking.proto</summary>
  public static partial class RankingReflection {

    #region Descriptor
    /// <summary>File descriptor for msg/ranking.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RankingReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChFtc2cvcmFua2luZy5wcm90bxIDbXNnGhZnYW1la2l0ZGF0YS9iYXNlLnBy",
            "b3RvGhlnYW1la2l0ZGF0YS9yYW5raW5nLnByb3RvGhlyYXdkYXRhL1Jhbmtp",
            "bmdUeXBlLnByb3RvImUKEVBsYXllclJhbmtpbmdJbmZvEisKBlBsYXllchgB",
            "IAEoCzIbLmdhbWVraXRkYXRhLlBsYXllck9wZW5JbmZvEg0KBVNjb3JlGAIg",
            "ASgFEhQKDFJhbmtpbmdPcmRlchgDIAEoBCJWChFHZXRSYW5raW5nSW5mb1Jl",
            "cRIKCgJJRBgBIAEoCRINCgVTdWJJZBgCIAEoBRImCghSYW5rVHlwZRgDIAEo",
            "DjIULnJhd2RhdGEuUmFua2luZ1R5cGUibQoPUmFua2luZ0luZm9SZXNwEicK",
            "B1BsYXllcnMYASADKAsyFi5tc2cuUGxheWVyUmFua2luZ0luZm8SIgoCTWUY",
            "AiABKAsyFi5tc2cuUGxheWVyUmFua2luZ0luZm8SDQoFU3ViSWQYAyABKAUi",
            "IwoRQmFuUmFua2luZ0luZm9SZXESDgoGUmFua0lkGAEgASgFIiUKE1VuQmFu",
            "UmFua2luZ0luZm9SZXESDgoGUmFua0lkGAEgASgFQjVaKWdpdGxhYi5mdW5w",
            "bHVzLmlvL2ZhdC9jb25mL2dlbi9nb2xhbmcvbXNnqgIHZmF0Lm1zZ2IGcHJv",
            "dG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::fat.gamekitdata.BaseReflection.Descriptor, global::fat.gamekitdata.RankingReflection.Descriptor, global::fat.rawdata.RankingTypeReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.msg.PlayerRankingInfo), global::fat.msg.PlayerRankingInfo.Parser, new[]{ "Player", "Score", "RankingOrder" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.msg.GetRankingInfoReq), global::fat.msg.GetRankingInfoReq.Parser, new[]{ "ID", "SubId", "RankType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.msg.RankingInfoResp), global::fat.msg.RankingInfoResp.Parser, new[]{ "Players", "Me", "SubId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.msg.BanRankingInfoReq), global::fat.msg.BanRankingInfoReq.Parser, new[]{ "RankId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.msg.UnBanRankingInfoReq), global::fat.msg.UnBanRankingInfoReq.Parser, new[]{ "RankId" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class PlayerRankingInfo : pb::IMessage<PlayerRankingInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerRankingInfo> _parser = new pb::MessageParser<PlayerRankingInfo>(() => new PlayerRankingInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerRankingInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.msg.RankingReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerRankingInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerRankingInfo(PlayerRankingInfo other) : this() {
      player_ = other.player_ != null ? other.player_.Clone() : null;
      score_ = other.score_;
      rankingOrder_ = other.rankingOrder_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerRankingInfo Clone() {
      return new PlayerRankingInfo(this);
    }

    /// <summary>Field number for the "Player" field.</summary>
    public const int PlayerFieldNumber = 1;
    private global::fat.gamekitdata.PlayerOpenInfo player_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::fat.gamekitdata.PlayerOpenInfo Player {
      get { return player_; }
      set {
        player_ = value;
      }
    }

    /// <summary>Field number for the "Score" field.</summary>
    public const int ScoreFieldNumber = 2;
    private int score_;
    /// <summary>
    ///分数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    /// <summary>Field number for the "RankingOrder" field.</summary>
    public const int RankingOrderFieldNumber = 3;
    private ulong rankingOrder_;
    /// <summary>
    ///排名顺序
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong RankingOrder {
      get { return rankingOrder_; }
      set {
        rankingOrder_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerRankingInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerRankingInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Player, other.Player)) return false;
      if (Score != other.Score) return false;
      if (RankingOrder != other.RankingOrder) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (player_ != null) hash ^= Player.GetHashCode();
      if (Score != 0) hash ^= Score.GetHashCode();
      if (RankingOrder != 0UL) hash ^= RankingOrder.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (player_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Player);
      }
      if (Score != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Score);
      }
      if (RankingOrder != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(RankingOrder);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (player_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Player);
      }
      if (Score != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Score);
      }
      if (RankingOrder != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(RankingOrder);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (player_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Player);
      }
      if (Score != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Score);
      }
      if (RankingOrder != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(RankingOrder);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerRankingInfo other) {
      if (other == null) {
        return;
      }
      if (other.player_ != null) {
        if (player_ == null) {
          Player = new global::fat.gamekitdata.PlayerOpenInfo();
        }
        Player.MergeFrom(other.Player);
      }
      if (other.Score != 0) {
        Score = other.Score;
      }
      if (other.RankingOrder != 0UL) {
        RankingOrder = other.RankingOrder;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (player_ == null) {
              Player = new global::fat.gamekitdata.PlayerOpenInfo();
            }
            input.ReadMessage(Player);
            break;
          }
          case 16: {
            Score = input.ReadInt32();
            break;
          }
          case 24: {
            RankingOrder = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (player_ == null) {
              Player = new global::fat.gamekitdata.PlayerOpenInfo();
            }
            input.ReadMessage(Player);
            break;
          }
          case 16: {
            Score = input.ReadInt32();
            break;
          }
          case 24: {
            RankingOrder = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetRankingInfoReq : pb::IMessage<GetRankingInfoReq>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetRankingInfoReq> _parser = new pb::MessageParser<GetRankingInfoReq>(() => new GetRankingInfoReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetRankingInfoReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.msg.RankingReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRankingInfoReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRankingInfoReq(GetRankingInfoReq other) : this() {
      iD_ = other.iD_;
      subId_ = other.subId_;
      rankType_ = other.rankType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRankingInfoReq Clone() {
      return new GetRankingInfoReq(this);
    }

    /// <summary>Field number for the "ID" field.</summary>
    public const int IDFieldNumber = 1;
    private string iD_ = "";
    /// <summary>
    ///活动的ID 如:990171_1_1 活动ID_来源_EventType
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ID {
      get { return iD_; }
      set {
        iD_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SubId" field.</summary>
    public const int SubIdFieldNumber = 2;
    private int subId_;
    /// <summary>
    /// 如果是关卡排行榜，需要传关卡id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SubId {
      get { return subId_; }
      set {
        subId_ = value;
      }
    }

    /// <summary>Field number for the "RankType" field.</summary>
    public const int RankTypeFieldNumber = 3;
    private global::fat.rawdata.RankingType rankType_ = global::fat.rawdata.RankingType.RankingDefault;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::fat.rawdata.RankingType RankType {
      get { return rankType_; }
      set {
        rankType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetRankingInfoReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetRankingInfoReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ID != other.ID) return false;
      if (SubId != other.SubId) return false;
      if (RankType != other.RankType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ID.Length != 0) hash ^= ID.GetHashCode();
      if (SubId != 0) hash ^= SubId.GetHashCode();
      if (RankType != global::fat.rawdata.RankingType.RankingDefault) hash ^= RankType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ID);
      }
      if (SubId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SubId);
      }
      if (RankType != global::fat.rawdata.RankingType.RankingDefault) {
        output.WriteRawTag(24);
        output.WriteEnum((int) RankType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ID);
      }
      if (SubId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SubId);
      }
      if (RankType != global::fat.rawdata.RankingType.RankingDefault) {
        output.WriteRawTag(24);
        output.WriteEnum((int) RankType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ID);
      }
      if (SubId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SubId);
      }
      if (RankType != global::fat.rawdata.RankingType.RankingDefault) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RankType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetRankingInfoReq other) {
      if (other == null) {
        return;
      }
      if (other.ID.Length != 0) {
        ID = other.ID;
      }
      if (other.SubId != 0) {
        SubId = other.SubId;
      }
      if (other.RankType != global::fat.rawdata.RankingType.RankingDefault) {
        RankType = other.RankType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ID = input.ReadString();
            break;
          }
          case 16: {
            SubId = input.ReadInt32();
            break;
          }
          case 24: {
            RankType = (global::fat.rawdata.RankingType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ID = input.ReadString();
            break;
          }
          case 16: {
            SubId = input.ReadInt32();
            break;
          }
          case 24: {
            RankType = (global::fat.rawdata.RankingType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RankingInfoResp : pb::IMessage<RankingInfoResp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RankingInfoResp> _parser = new pb::MessageParser<RankingInfoResp>(() => new RankingInfoResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RankingInfoResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.msg.RankingReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RankingInfoResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RankingInfoResp(RankingInfoResp other) : this() {
      players_ = other.players_.Clone();
      me_ = other.me_ != null ? other.me_.Clone() : null;
      subId_ = other.subId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RankingInfoResp Clone() {
      return new RankingInfoResp(this);
    }

    /// <summary>Field number for the "Players" field.</summary>
    public const int PlayersFieldNumber = 1;
    private static readonly pb::FieldCodec<global::fat.msg.PlayerRankingInfo> _repeated_players_codec
        = pb::FieldCodec.ForMessage(10, global::fat.msg.PlayerRankingInfo.Parser);
    private readonly pbc::RepeatedField<global::fat.msg.PlayerRankingInfo> players_ = new pbc::RepeatedField<global::fat.msg.PlayerRankingInfo>();
    /// <summary>
    ///前N(走配置)名玩家排名列表，可能包含玩家自己
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::fat.msg.PlayerRankingInfo> Players {
      get { return players_; }
    }

    /// <summary>Field number for the "Me" field.</summary>
    public const int MeFieldNumber = 2;
    private global::fat.msg.PlayerRankingInfo me_;
    /// <summary>
    /// 玩家自己
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::fat.msg.PlayerRankingInfo Me {
      get { return me_; }
      set {
        me_ = value;
      }
    }

    /// <summary>Field number for the "SubId" field.</summary>
    public const int SubIdFieldNumber = 3;
    private int subId_;
    /// <summary>
    ///所在区域ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SubId {
      get { return subId_; }
      set {
        subId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RankingInfoResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RankingInfoResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!players_.Equals(other.players_)) return false;
      if (!object.Equals(Me, other.Me)) return false;
      if (SubId != other.SubId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= players_.GetHashCode();
      if (me_ != null) hash ^= Me.GetHashCode();
      if (SubId != 0) hash ^= SubId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      players_.WriteTo(output, _repeated_players_codec);
      if (me_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Me);
      }
      if (SubId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(SubId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      players_.WriteTo(ref output, _repeated_players_codec);
      if (me_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Me);
      }
      if (SubId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(SubId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += players_.CalculateSize(_repeated_players_codec);
      if (me_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Me);
      }
      if (SubId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SubId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RankingInfoResp other) {
      if (other == null) {
        return;
      }
      players_.Add(other.players_);
      if (other.me_ != null) {
        if (me_ == null) {
          Me = new global::fat.msg.PlayerRankingInfo();
        }
        Me.MergeFrom(other.Me);
      }
      if (other.SubId != 0) {
        SubId = other.SubId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            players_.AddEntriesFrom(input, _repeated_players_codec);
            break;
          }
          case 18: {
            if (me_ == null) {
              Me = new global::fat.msg.PlayerRankingInfo();
            }
            input.ReadMessage(Me);
            break;
          }
          case 24: {
            SubId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            players_.AddEntriesFrom(ref input, _repeated_players_codec);
            break;
          }
          case 18: {
            if (me_ == null) {
              Me = new global::fat.msg.PlayerRankingInfo();
            }
            input.ReadMessage(Me);
            break;
          }
          case 24: {
            SubId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BanRankingInfoReq : pb::IMessage<BanRankingInfoReq>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BanRankingInfoReq> _parser = new pb::MessageParser<BanRankingInfoReq>(() => new BanRankingInfoReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BanRankingInfoReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.msg.RankingReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BanRankingInfoReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BanRankingInfoReq(BanRankingInfoReq other) : this() {
      rankId_ = other.rankId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BanRankingInfoReq Clone() {
      return new BanRankingInfoReq(this);
    }

    /// <summary>Field number for the "RankId" field.</summary>
    public const int RankIdFieldNumber = 1;
    private int rankId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RankId {
      get { return rankId_; }
      set {
        rankId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BanRankingInfoReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BanRankingInfoReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RankId != other.RankId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RankId != 0) hash ^= RankId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RankId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RankId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RankId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RankId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RankId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RankId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BanRankingInfoReq other) {
      if (other == null) {
        return;
      }
      if (other.RankId != 0) {
        RankId = other.RankId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RankId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RankId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UnBanRankingInfoReq : pb::IMessage<UnBanRankingInfoReq>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UnBanRankingInfoReq> _parser = new pb::MessageParser<UnBanRankingInfoReq>(() => new UnBanRankingInfoReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnBanRankingInfoReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.msg.RankingReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnBanRankingInfoReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnBanRankingInfoReq(UnBanRankingInfoReq other) : this() {
      rankId_ = other.rankId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnBanRankingInfoReq Clone() {
      return new UnBanRankingInfoReq(this);
    }

    /// <summary>Field number for the "RankId" field.</summary>
    public const int RankIdFieldNumber = 1;
    private int rankId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RankId {
      get { return rankId_; }
      set {
        rankId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnBanRankingInfoReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnBanRankingInfoReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RankId != other.RankId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RankId != 0) hash ^= RankId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RankId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RankId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RankId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RankId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RankId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RankId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnBanRankingInfoReq other) {
      if (other == null) {
        return;
      }
      if (other.RankId != 0) {
        RankId = other.RankId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RankId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RankId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
