// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: msg/login.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.msg {

  /// <summary>Holder for reflection information generated from msg/login.proto</summary>
  public static partial class LoginReflection {

    #region Descriptor
    /// <summary>File descriptor for msg/login.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LoginReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg9tc2cvbG9naW4ucHJvdG8SA21zZxoWZ2FtZWtpdGRhdGEvYmFzZS5wcm90",
            "byKLAQoITG9naW5SZXESLQoIQmFzZURhdGEYASABKAsyGy5nYW1la2l0ZGF0",
            "YS5QbGF5ZXJCYXNlRGF0YRIrCgpTeXN0ZW1JbmZvGAIgASgLMhcuZ2FtZWtp",
            "dGRhdGEuU3lzdGVtSW5mbxISCgpDbGllbnREYXRhGAMgASgMEg8KB0NnQWRt",
            "aW4YCCABKAgijgEKCUxvZ2luUmVzcBItCghCYXNlRGF0YRgBIAEoCzIbLmdh",
            "bWVraXRkYXRhLlBsYXllckJhc2VEYXRhEisKClN5c3RlbUluZm8YAiABKAsy",
            "Fy5nYW1la2l0ZGF0YS5TeXN0ZW1JbmZvEhIKCkNsaWVudERhdGEYAyABKAwS",
            "EQoJU2VydmVyU2VjGAQgASgDQjVaKWdpdGxhYi5mdW5wbHVzLmlvL2ZhdC9j",
            "b25mL2dlbi9nb2xhbmcvbXNnqgIHZmF0Lm1zZ2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::fat.gamekitdata.BaseReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.msg.LoginReq), global::fat.msg.LoginReq.Parser, new[]{ "BaseData", "SystemInfo", "ClientData", "CgAdmin" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.msg.LoginResp), global::fat.msg.LoginResp.Parser, new[]{ "BaseData", "SystemInfo", "ClientData", "ServerSec" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class LoginReq : pb::IMessage<LoginReq>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LoginReq> _parser = new pb::MessageParser<LoginReq>(() => new LoginReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.msg.LoginReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginReq(LoginReq other) : this() {
      baseData_ = other.baseData_ != null ? other.baseData_.Clone() : null;
      systemInfo_ = other.systemInfo_ != null ? other.systemInfo_.Clone() : null;
      clientData_ = other.clientData_;
      cgAdmin_ = other.cgAdmin_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginReq Clone() {
      return new LoginReq(this);
    }

    /// <summary>Field number for the "BaseData" field.</summary>
    public const int BaseDataFieldNumber = 1;
    private global::fat.gamekitdata.PlayerBaseData baseData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::fat.gamekitdata.PlayerBaseData BaseData {
      get { return baseData_; }
      set {
        baseData_ = value;
      }
    }

    /// <summary>Field number for the "SystemInfo" field.</summary>
    public const int SystemInfoFieldNumber = 2;
    private global::fat.gamekitdata.SystemInfo systemInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::fat.gamekitdata.SystemInfo SystemInfo {
      get { return systemInfo_; }
      set {
        systemInfo_ = value;
      }
    }

    /// <summary>Field number for the "ClientData" field.</summary>
    public const int ClientDataFieldNumber = 3;
    private pb::ByteString clientData_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ClientData {
      get { return clientData_; }
      set {
        clientData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CgAdmin" field.</summary>
    public const int CgAdminFieldNumber = 8;
    private bool cgAdmin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CgAdmin {
      get { return cgAdmin_; }
      set {
        cgAdmin_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(BaseData, other.BaseData)) return false;
      if (!object.Equals(SystemInfo, other.SystemInfo)) return false;
      if (ClientData != other.ClientData) return false;
      if (CgAdmin != other.CgAdmin) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (baseData_ != null) hash ^= BaseData.GetHashCode();
      if (systemInfo_ != null) hash ^= SystemInfo.GetHashCode();
      if (ClientData.Length != 0) hash ^= ClientData.GetHashCode();
      if (CgAdmin != false) hash ^= CgAdmin.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (baseData_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(BaseData);
      }
      if (systemInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SystemInfo);
      }
      if (ClientData.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(ClientData);
      }
      if (CgAdmin != false) {
        output.WriteRawTag(64);
        output.WriteBool(CgAdmin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (baseData_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(BaseData);
      }
      if (systemInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SystemInfo);
      }
      if (ClientData.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(ClientData);
      }
      if (CgAdmin != false) {
        output.WriteRawTag(64);
        output.WriteBool(CgAdmin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (baseData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BaseData);
      }
      if (systemInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SystemInfo);
      }
      if (ClientData.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ClientData);
      }
      if (CgAdmin != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginReq other) {
      if (other == null) {
        return;
      }
      if (other.baseData_ != null) {
        if (baseData_ == null) {
          BaseData = new global::fat.gamekitdata.PlayerBaseData();
        }
        BaseData.MergeFrom(other.BaseData);
      }
      if (other.systemInfo_ != null) {
        if (systemInfo_ == null) {
          SystemInfo = new global::fat.gamekitdata.SystemInfo();
        }
        SystemInfo.MergeFrom(other.SystemInfo);
      }
      if (other.ClientData.Length != 0) {
        ClientData = other.ClientData;
      }
      if (other.CgAdmin != false) {
        CgAdmin = other.CgAdmin;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (baseData_ == null) {
              BaseData = new global::fat.gamekitdata.PlayerBaseData();
            }
            input.ReadMessage(BaseData);
            break;
          }
          case 18: {
            if (systemInfo_ == null) {
              SystemInfo = new global::fat.gamekitdata.SystemInfo();
            }
            input.ReadMessage(SystemInfo);
            break;
          }
          case 26: {
            ClientData = input.ReadBytes();
            break;
          }
          case 64: {
            CgAdmin = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (baseData_ == null) {
              BaseData = new global::fat.gamekitdata.PlayerBaseData();
            }
            input.ReadMessage(BaseData);
            break;
          }
          case 18: {
            if (systemInfo_ == null) {
              SystemInfo = new global::fat.gamekitdata.SystemInfo();
            }
            input.ReadMessage(SystemInfo);
            break;
          }
          case 26: {
            ClientData = input.ReadBytes();
            break;
          }
          case 64: {
            CgAdmin = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LoginResp : pb::IMessage<LoginResp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LoginResp> _parser = new pb::MessageParser<LoginResp>(() => new LoginResp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginResp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.msg.LoginReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginResp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginResp(LoginResp other) : this() {
      baseData_ = other.baseData_ != null ? other.baseData_.Clone() : null;
      systemInfo_ = other.systemInfo_ != null ? other.systemInfo_.Clone() : null;
      clientData_ = other.clientData_;
      serverSec_ = other.serverSec_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginResp Clone() {
      return new LoginResp(this);
    }

    /// <summary>Field number for the "BaseData" field.</summary>
    public const int BaseDataFieldNumber = 1;
    private global::fat.gamekitdata.PlayerBaseData baseData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::fat.gamekitdata.PlayerBaseData BaseData {
      get { return baseData_; }
      set {
        baseData_ = value;
      }
    }

    /// <summary>Field number for the "SystemInfo" field.</summary>
    public const int SystemInfoFieldNumber = 2;
    private global::fat.gamekitdata.SystemInfo systemInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::fat.gamekitdata.SystemInfo SystemInfo {
      get { return systemInfo_; }
      set {
        systemInfo_ = value;
      }
    }

    /// <summary>Field number for the "ClientData" field.</summary>
    public const int ClientDataFieldNumber = 3;
    private pb::ByteString clientData_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ClientData {
      get { return clientData_; }
      set {
        clientData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ServerSec" field.</summary>
    public const int ServerSecFieldNumber = 4;
    private long serverSec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ServerSec {
      get { return serverSec_; }
      set {
        serverSec_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginResp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginResp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(BaseData, other.BaseData)) return false;
      if (!object.Equals(SystemInfo, other.SystemInfo)) return false;
      if (ClientData != other.ClientData) return false;
      if (ServerSec != other.ServerSec) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (baseData_ != null) hash ^= BaseData.GetHashCode();
      if (systemInfo_ != null) hash ^= SystemInfo.GetHashCode();
      if (ClientData.Length != 0) hash ^= ClientData.GetHashCode();
      if (ServerSec != 0L) hash ^= ServerSec.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (baseData_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(BaseData);
      }
      if (systemInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SystemInfo);
      }
      if (ClientData.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(ClientData);
      }
      if (ServerSec != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(ServerSec);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (baseData_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(BaseData);
      }
      if (systemInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SystemInfo);
      }
      if (ClientData.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(ClientData);
      }
      if (ServerSec != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(ServerSec);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (baseData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BaseData);
      }
      if (systemInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SystemInfo);
      }
      if (ClientData.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ClientData);
      }
      if (ServerSec != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ServerSec);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginResp other) {
      if (other == null) {
        return;
      }
      if (other.baseData_ != null) {
        if (baseData_ == null) {
          BaseData = new global::fat.gamekitdata.PlayerBaseData();
        }
        BaseData.MergeFrom(other.BaseData);
      }
      if (other.systemInfo_ != null) {
        if (systemInfo_ == null) {
          SystemInfo = new global::fat.gamekitdata.SystemInfo();
        }
        SystemInfo.MergeFrom(other.SystemInfo);
      }
      if (other.ClientData.Length != 0) {
        ClientData = other.ClientData;
      }
      if (other.ServerSec != 0L) {
        ServerSec = other.ServerSec;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (baseData_ == null) {
              BaseData = new global::fat.gamekitdata.PlayerBaseData();
            }
            input.ReadMessage(BaseData);
            break;
          }
          case 18: {
            if (systemInfo_ == null) {
              SystemInfo = new global::fat.gamekitdata.SystemInfo();
            }
            input.ReadMessage(SystemInfo);
            break;
          }
          case 26: {
            ClientData = input.ReadBytes();
            break;
          }
          case 32: {
            ServerSec = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (baseData_ == null) {
              BaseData = new global::fat.gamekitdata.PlayerBaseData();
            }
            input.ReadMessage(BaseData);
            break;
          }
          case 18: {
            if (systemInfo_ == null) {
              SystemInfo = new global::fat.gamekitdata.SystemInfo();
            }
            input.ReadMessage(SystemInfo);
            break;
          }
          case 26: {
            ClientData = input.ReadBytes();
            break;
          }
          case 32: {
            ServerSec = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
