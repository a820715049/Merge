// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: msg/mock.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.msg {

  /// <summary>Holder for reflection information generated from msg/mock.proto</summary>
  public static partial class MockReflection {

    #region Descriptor
    /// <summary>File descriptor for msg/mock.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MockReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5tc2cvbW9jay5wcm90bxIDbXNnIokBCg5Nb2NrTWVzc2FnZVJlcRIbCgRU",
            "eXBlGAEgASgOMg0ubXNnLk1vY2tUeXBlEhEKCU5ldFNjaGVtZRgCIAEoCRIQ",
            "CghNaW5EZWxheRgDIAEoAxIQCghNYXhEZWxheRgEIAEoAxITCgtHYXJiYWdl",
            "U2l6ZRgFIAEoAxIOCgZVcERhdGEYBiABKAwiRAoOTW9ja01lc3NhZ2VSc3AS",
            "EQoJTmV0U2NoZW1lGAEgASgJEg0KBURlbGF5GAIgASgDEhAKCERvd25EYXRh",
            "GAMgASgMKlcKCE1vY2tUeXBlEg4KCk1vY2tOb3JtYWwQABINCglNb2NrRGVs",
            "YXkQARIMCghNb2NrRHJvcBACEg0KCU1vY2tFcnJvchADEg8KC01vY2tHYXJi",
            "YWdlEARCNVopZ2l0bGFiLmZ1bnBsdXMuaW8vZmF0L2NvbmYvZ2VuL2dvbGFu",
            "Zy9tc2eqAgdmYXQubXNnYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::fat.msg.MockType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.msg.MockMessageReq), global::fat.msg.MockMessageReq.Parser, new[]{ "Type", "NetScheme", "MinDelay", "MaxDelay", "GarbageSize", "UpData" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.msg.MockMessageRsp), global::fat.msg.MockMessageRsp.Parser, new[]{ "NetScheme", "Delay", "DownData" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum MockType {
    /// <summary>
    /// 正常
    /// </summary>
    [pbr::OriginalName("MockNormal")] MockNormal = 0,
    /// <summary>
    /// 延迟，服务器会延迟 rand(MinDelay, MaxDelay) ms
    /// </summary>
    [pbr::OriginalName("MockDelay")] MockDelay = 1,
    /// <summary>
    /// 丢失，服务器会发生panic，不会给客户端返回数据
    /// </summary>
    [pbr::OriginalName("MockDrop")] MockDrop = 2,
    /// <summary>
    /// 发生错误，服务器发送错误，返回ErrorResponse
    /// </summary>
    [pbr::OriginalName("MockError")] MockError = 3,
    /// <summary>
    /// 非常大的包
    /// </summary>
    [pbr::OriginalName("MockGarbage")] MockGarbage = 4,
  }

  #endregion

  #region Messages
  public sealed partial class MockMessageReq : pb::IMessage<MockMessageReq>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MockMessageReq> _parser = new pb::MessageParser<MockMessageReq>(() => new MockMessageReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MockMessageReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.msg.MockReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MockMessageReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MockMessageReq(MockMessageReq other) : this() {
      type_ = other.type_;
      netScheme_ = other.netScheme_;
      minDelay_ = other.minDelay_;
      maxDelay_ = other.maxDelay_;
      garbageSize_ = other.garbageSize_;
      upData_ = other.upData_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MockMessageReq Clone() {
      return new MockMessageReq(this);
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::fat.msg.MockType type_ = global::fat.msg.MockType.MockNormal;
    /// <summary>
    /// 模拟类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::fat.msg.MockType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "NetScheme" field.</summary>
    public const int NetSchemeFieldNumber = 2;
    private string netScheme_ = "";
    /// <summary>
    /// UnityWebRequest/WWW
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NetScheme {
      get { return netScheme_; }
      set {
        netScheme_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MinDelay" field.</summary>
    public const int MinDelayFieldNumber = 3;
    private long minDelay_;
    /// <summary>
    /// 最小延迟
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MinDelay {
      get { return minDelay_; }
      set {
        minDelay_ = value;
      }
    }

    /// <summary>Field number for the "MaxDelay" field.</summary>
    public const int MaxDelayFieldNumber = 4;
    private long maxDelay_;
    /// <summary>
    /// 最大延迟
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MaxDelay {
      get { return maxDelay_; }
      set {
        maxDelay_ = value;
      }
    }

    /// <summary>Field number for the "GarbageSize" field.</summary>
    public const int GarbageSizeFieldNumber = 5;
    private long garbageSize_;
    /// <summary>
    /// Garbage的大小
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long GarbageSize {
      get { return garbageSize_; }
      set {
        garbageSize_ = value;
      }
    }

    /// <summary>Field number for the "UpData" field.</summary>
    public const int UpDataFieldNumber = 6;
    private pb::ByteString upData_ = pb::ByteString.Empty;
    /// <summary>
    /// 上行数据，为了测试上行数据非常大的情况
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString UpData {
      get { return upData_; }
      set {
        upData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MockMessageReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MockMessageReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (NetScheme != other.NetScheme) return false;
      if (MinDelay != other.MinDelay) return false;
      if (MaxDelay != other.MaxDelay) return false;
      if (GarbageSize != other.GarbageSize) return false;
      if (UpData != other.UpData) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::fat.msg.MockType.MockNormal) hash ^= Type.GetHashCode();
      if (NetScheme.Length != 0) hash ^= NetScheme.GetHashCode();
      if (MinDelay != 0L) hash ^= MinDelay.GetHashCode();
      if (MaxDelay != 0L) hash ^= MaxDelay.GetHashCode();
      if (GarbageSize != 0L) hash ^= GarbageSize.GetHashCode();
      if (UpData.Length != 0) hash ^= UpData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type != global::fat.msg.MockType.MockNormal) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (NetScheme.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NetScheme);
      }
      if (MinDelay != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(MinDelay);
      }
      if (MaxDelay != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(MaxDelay);
      }
      if (GarbageSize != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(GarbageSize);
      }
      if (UpData.Length != 0) {
        output.WriteRawTag(50);
        output.WriteBytes(UpData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type != global::fat.msg.MockType.MockNormal) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (NetScheme.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NetScheme);
      }
      if (MinDelay != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(MinDelay);
      }
      if (MaxDelay != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(MaxDelay);
      }
      if (GarbageSize != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(GarbageSize);
      }
      if (UpData.Length != 0) {
        output.WriteRawTag(50);
        output.WriteBytes(UpData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::fat.msg.MockType.MockNormal) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (NetScheme.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NetScheme);
      }
      if (MinDelay != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MinDelay);
      }
      if (MaxDelay != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaxDelay);
      }
      if (GarbageSize != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(GarbageSize);
      }
      if (UpData.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(UpData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MockMessageReq other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::fat.msg.MockType.MockNormal) {
        Type = other.Type;
      }
      if (other.NetScheme.Length != 0) {
        NetScheme = other.NetScheme;
      }
      if (other.MinDelay != 0L) {
        MinDelay = other.MinDelay;
      }
      if (other.MaxDelay != 0L) {
        MaxDelay = other.MaxDelay;
      }
      if (other.GarbageSize != 0L) {
        GarbageSize = other.GarbageSize;
      }
      if (other.UpData.Length != 0) {
        UpData = other.UpData;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::fat.msg.MockType) input.ReadEnum();
            break;
          }
          case 18: {
            NetScheme = input.ReadString();
            break;
          }
          case 24: {
            MinDelay = input.ReadInt64();
            break;
          }
          case 32: {
            MaxDelay = input.ReadInt64();
            break;
          }
          case 40: {
            GarbageSize = input.ReadInt64();
            break;
          }
          case 50: {
            UpData = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::fat.msg.MockType) input.ReadEnum();
            break;
          }
          case 18: {
            NetScheme = input.ReadString();
            break;
          }
          case 24: {
            MinDelay = input.ReadInt64();
            break;
          }
          case 32: {
            MaxDelay = input.ReadInt64();
            break;
          }
          case 40: {
            GarbageSize = input.ReadInt64();
            break;
          }
          case 50: {
            UpData = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MockMessageRsp : pb::IMessage<MockMessageRsp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MockMessageRsp> _parser = new pb::MessageParser<MockMessageRsp>(() => new MockMessageRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MockMessageRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.msg.MockReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MockMessageRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MockMessageRsp(MockMessageRsp other) : this() {
      netScheme_ = other.netScheme_;
      delay_ = other.delay_;
      downData_ = other.downData_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MockMessageRsp Clone() {
      return new MockMessageRsp(this);
    }

    /// <summary>Field number for the "NetScheme" field.</summary>
    public const int NetSchemeFieldNumber = 1;
    private string netScheme_ = "";
    /// <summary>
    /// UnityWebRequest/WWW
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NetScheme {
      get { return netScheme_; }
      set {
        netScheme_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Delay" field.</summary>
    public const int DelayFieldNumber = 2;
    private long delay_;
    /// <summary>
    /// 如果是delay类型，延迟的时长，ms
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Delay {
      get { return delay_; }
      set {
        delay_ = value;
      }
    }

    /// <summary>Field number for the "DownData" field.</summary>
    public const int DownDataFieldNumber = 3;
    private pb::ByteString downData_ = pb::ByteString.Empty;
    /// <summary>
    /// 下行数据
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString DownData {
      get { return downData_; }
      set {
        downData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MockMessageRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MockMessageRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NetScheme != other.NetScheme) return false;
      if (Delay != other.Delay) return false;
      if (DownData != other.DownData) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NetScheme.Length != 0) hash ^= NetScheme.GetHashCode();
      if (Delay != 0L) hash ^= Delay.GetHashCode();
      if (DownData.Length != 0) hash ^= DownData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (NetScheme.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NetScheme);
      }
      if (Delay != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Delay);
      }
      if (DownData.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(DownData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (NetScheme.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NetScheme);
      }
      if (Delay != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Delay);
      }
      if (DownData.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(DownData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NetScheme.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NetScheme);
      }
      if (Delay != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Delay);
      }
      if (DownData.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(DownData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MockMessageRsp other) {
      if (other == null) {
        return;
      }
      if (other.NetScheme.Length != 0) {
        NetScheme = other.NetScheme;
      }
      if (other.Delay != 0L) {
        Delay = other.Delay;
      }
      if (other.DownData.Length != 0) {
        DownData = other.DownData;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            NetScheme = input.ReadString();
            break;
          }
          case 16: {
            Delay = input.ReadInt64();
            break;
          }
          case 26: {
            DownData = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            NetScheme = input.ReadString();
            break;
          }
          case 16: {
            Delay = input.ReadInt64();
            break;
          }
          case 26: {
            DownData = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
