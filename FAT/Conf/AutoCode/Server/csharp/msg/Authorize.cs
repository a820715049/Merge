// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: msg/authorize.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace fat.msg {

  /// <summary>Holder for reflection information generated from msg/authorize.proto</summary>
  public static partial class AuthorizeReflection {

    #region Descriptor
    /// <summary>File descriptor for msg/authorize.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AuthorizeReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNtc2cvYXV0aG9yaXplLnByb3RvEgNtc2caFmdhbWVraXRkYXRhL2Jhc2Uu",
            "cHJvdG8iQAoMQXV0aG9yaXplUmVxEgwKBEZwSWQYASABKAkSDQoFU25zSWQY",
            "AiABKAkSEwoLQWNjZXNzVG9rZW4YAyABKAkifQoUQXV0aG9yaXplUnNwT3Zl",
            "cnJpZGUSLQoIQmFzZURhdGEYASABKAsyGy5nYW1la2l0ZGF0YS5QbGF5ZXJC",
            "YXNlRGF0YRISCgpDbGllbnREYXRhGAIgASgMEhEKCVNlcnZlclNlYxgDIAEo",
            "AxIPCgdOZXdVc2VyGAQgASgIQjVaKWdpdGxhYi5mdW5wbHVzLmlvL2ZhdC9j",
            "b25mL2dlbi9nb2xhbmcvbXNnqgIHZmF0Lm1zZ2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::fat.gamekitdata.BaseReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.msg.AuthorizeReq), global::fat.msg.AuthorizeReq.Parser, new[]{ "FpId", "SnsId", "AccessToken" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::fat.msg.AuthorizeRspOverride), global::fat.msg.AuthorizeRspOverride.Parser, new[]{ "BaseData", "ClientData", "ServerSec", "NewUser" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// 认证
  /// </summary>
  public sealed partial class AuthorizeReq : pb::IMessage<AuthorizeReq>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AuthorizeReq> _parser = new pb::MessageParser<AuthorizeReq>(() => new AuthorizeReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AuthorizeReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.msg.AuthorizeReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthorizeReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthorizeReq(AuthorizeReq other) : this() {
      fpId_ = other.fpId_;
      snsId_ = other.snsId_;
      accessToken_ = other.accessToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthorizeReq Clone() {
      return new AuthorizeReq(this);
    }

    /// <summary>Field number for the "FpId" field.</summary>
    public const int FpIdFieldNumber = 1;
    private string fpId_ = "";
    /// <summary>
    /// 平台的用户id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FpId {
      get { return fpId_; }
      set {
        fpId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SnsId" field.</summary>
    public const int SnsIdFieldNumber = 2;
    private string snsId_ = "";
    /// <summary>
    /// 真社交平台ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SnsId {
      get { return snsId_; }
      set {
        snsId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AccessToken" field.</summary>
    public const int AccessTokenFieldNumber = 3;
    private string accessToken_ = "";
    /// <summary>
    /// 平台的访问凭证
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccessToken {
      get { return accessToken_; }
      set {
        accessToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AuthorizeReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AuthorizeReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FpId != other.FpId) return false;
      if (SnsId != other.SnsId) return false;
      if (AccessToken != other.AccessToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FpId.Length != 0) hash ^= FpId.GetHashCode();
      if (SnsId.Length != 0) hash ^= SnsId.GetHashCode();
      if (AccessToken.Length != 0) hash ^= AccessToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (FpId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FpId);
      }
      if (SnsId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SnsId);
      }
      if (AccessToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(AccessToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (FpId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FpId);
      }
      if (SnsId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SnsId);
      }
      if (AccessToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(AccessToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FpId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FpId);
      }
      if (SnsId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SnsId);
      }
      if (AccessToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccessToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AuthorizeReq other) {
      if (other == null) {
        return;
      }
      if (other.FpId.Length != 0) {
        FpId = other.FpId;
      }
      if (other.SnsId.Length != 0) {
        SnsId = other.SnsId;
      }
      if (other.AccessToken.Length != 0) {
        AccessToken = other.AccessToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FpId = input.ReadString();
            break;
          }
          case 18: {
            SnsId = input.ReadString();
            break;
          }
          case 26: {
            AccessToken = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            FpId = input.ReadString();
            break;
          }
          case 18: {
            SnsId = input.ReadString();
            break;
          }
          case 26: {
            AccessToken = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AuthorizeRspOverride : pb::IMessage<AuthorizeRspOverride>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AuthorizeRspOverride> _parser = new pb::MessageParser<AuthorizeRspOverride>(() => new AuthorizeRspOverride());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AuthorizeRspOverride> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::fat.msg.AuthorizeReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthorizeRspOverride() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthorizeRspOverride(AuthorizeRspOverride other) : this() {
      baseData_ = other.baseData_ != null ? other.baseData_.Clone() : null;
      clientData_ = other.clientData_;
      serverSec_ = other.serverSec_;
      newUser_ = other.newUser_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthorizeRspOverride Clone() {
      return new AuthorizeRspOverride(this);
    }

    /// <summary>Field number for the "BaseData" field.</summary>
    public const int BaseDataFieldNumber = 1;
    private global::fat.gamekitdata.PlayerBaseData baseData_;
    /// <summary>
    /// 客户端Loading数据
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::fat.gamekitdata.PlayerBaseData BaseData {
      get { return baseData_; }
      set {
        baseData_ = value;
      }
    }

    /// <summary>Field number for the "ClientData" field.</summary>
    public const int ClientDataFieldNumber = 2;
    private pb::ByteString clientData_ = pb::ByteString.Empty;
    /// <summary>
    /// 客户端Loading数据
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ClientData {
      get { return clientData_; }
      set {
        clientData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ServerSec" field.</summary>
    public const int ServerSecFieldNumber = 3;
    private long serverSec_;
    /// <summary>
    /// 服务器时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ServerSec {
      get { return serverSec_; }
      set {
        serverSec_ = value;
      }
    }

    /// <summary>Field number for the "NewUser" field.</summary>
    public const int NewUserFieldNumber = 4;
    private bool newUser_;
    /// <summary>
    /// 是否新用户
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool NewUser {
      get { return newUser_; }
      set {
        newUser_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AuthorizeRspOverride);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AuthorizeRspOverride other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(BaseData, other.BaseData)) return false;
      if (ClientData != other.ClientData) return false;
      if (ServerSec != other.ServerSec) return false;
      if (NewUser != other.NewUser) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (baseData_ != null) hash ^= BaseData.GetHashCode();
      if (ClientData.Length != 0) hash ^= ClientData.GetHashCode();
      if (ServerSec != 0L) hash ^= ServerSec.GetHashCode();
      if (NewUser != false) hash ^= NewUser.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (baseData_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(BaseData);
      }
      if (ClientData.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(ClientData);
      }
      if (ServerSec != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(ServerSec);
      }
      if (NewUser != false) {
        output.WriteRawTag(32);
        output.WriteBool(NewUser);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (baseData_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(BaseData);
      }
      if (ClientData.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(ClientData);
      }
      if (ServerSec != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(ServerSec);
      }
      if (NewUser != false) {
        output.WriteRawTag(32);
        output.WriteBool(NewUser);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (baseData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BaseData);
      }
      if (ClientData.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ClientData);
      }
      if (ServerSec != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ServerSec);
      }
      if (NewUser != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AuthorizeRspOverride other) {
      if (other == null) {
        return;
      }
      if (other.baseData_ != null) {
        if (baseData_ == null) {
          BaseData = new global::fat.gamekitdata.PlayerBaseData();
        }
        BaseData.MergeFrom(other.BaseData);
      }
      if (other.ClientData.Length != 0) {
        ClientData = other.ClientData;
      }
      if (other.ServerSec != 0L) {
        ServerSec = other.ServerSec;
      }
      if (other.NewUser != false) {
        NewUser = other.NewUser;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (baseData_ == null) {
              BaseData = new global::fat.gamekitdata.PlayerBaseData();
            }
            input.ReadMessage(BaseData);
            break;
          }
          case 18: {
            ClientData = input.ReadBytes();
            break;
          }
          case 24: {
            ServerSec = input.ReadInt64();
            break;
          }
          case 32: {
            NewUser = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (baseData_ == null) {
              BaseData = new global::fat.gamekitdata.PlayerBaseData();
            }
            input.ReadMessage(BaseData);
            break;
          }
          case 18: {
            ClientData = input.ReadBytes();
            break;
          }
          case 24: {
            ServerSec = input.ReadInt64();
            break;
          }
          case 32: {
            NewUser = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
